#include "Nano.h"
Nano nt;

void Nano::Init(TTree *tree) {
    b_BeamSpot_sigmaZ_ = tree->GetBranch("BeamSpot_sigmaZ");
    if (b_BeamSpot_sigmaZ_) { b_BeamSpot_sigmaZ_->SetAddress(&BeamSpot_sigmaZ_); }
    b_BeamSpot_sigmaZError_ = tree->GetBranch("BeamSpot_sigmaZError");
    if (b_BeamSpot_sigmaZError_) { b_BeamSpot_sigmaZError_->SetAddress(&BeamSpot_sigmaZError_); }
    b_BeamSpot_type_ = tree->GetBranch("BeamSpot_type");
    if (b_BeamSpot_type_) { b_BeamSpot_type_->SetAddress(&BeamSpot_type_); }
    b_BeamSpot_z_ = tree->GetBranch("BeamSpot_z");
    if (b_BeamSpot_z_) { b_BeamSpot_z_->SetAddress(&BeamSpot_z_); }
    b_BeamSpot_zError_ = tree->GetBranch("BeamSpot_zError");
    if (b_BeamSpot_zError_) { b_BeamSpot_zError_->SetAddress(&BeamSpot_zError_); }
    b_CaloMET_phi_ = tree->GetBranch("CaloMET_phi");
    if (b_CaloMET_phi_) { b_CaloMET_phi_->SetAddress(&CaloMET_phi_); }
    b_CaloMET_pt_ = tree->GetBranch("CaloMET_pt");
    if (b_CaloMET_pt_) { b_CaloMET_pt_->SetAddress(&CaloMET_pt_); }
    b_CaloMET_sumEt_ = tree->GetBranch("CaloMET_sumEt");
    if (b_CaloMET_sumEt_) { b_CaloMET_sumEt_->SetAddress(&CaloMET_sumEt_); }
    b_ChsMET_phi_ = tree->GetBranch("ChsMET_phi");
    if (b_ChsMET_phi_) { b_ChsMET_phi_->SetAddress(&ChsMET_phi_); }
    b_ChsMET_pt_ = tree->GetBranch("ChsMET_pt");
    if (b_ChsMET_pt_) { b_ChsMET_pt_->SetAddress(&ChsMET_pt_); }
    b_ChsMET_sumEt_ = tree->GetBranch("ChsMET_sumEt");
    if (b_ChsMET_sumEt_) { b_ChsMET_sumEt_->SetAddress(&ChsMET_sumEt_); }
    b_CorrT1METJet_area_ = tree->GetBranch("CorrT1METJet_area");
    if (b_CorrT1METJet_area_) { b_CorrT1METJet_area_->SetAddress(&CorrT1METJet_area_); }
    b_CorrT1METJet_eta_ = tree->GetBranch("CorrT1METJet_eta");
    if (b_CorrT1METJet_eta_) { b_CorrT1METJet_eta_->SetAddress(&CorrT1METJet_eta_); }
    b_CorrT1METJet_muonSubtrFactor_ = tree->GetBranch("CorrT1METJet_muonSubtrFactor");
    if (b_CorrT1METJet_muonSubtrFactor_) { b_CorrT1METJet_muonSubtrFactor_->SetAddress(&CorrT1METJet_muonSubtrFactor_); }
    b_CorrT1METJet_phi_ = tree->GetBranch("CorrT1METJet_phi");
    if (b_CorrT1METJet_phi_) { b_CorrT1METJet_phi_->SetAddress(&CorrT1METJet_phi_); }
    b_CorrT1METJet_rawPt_ = tree->GetBranch("CorrT1METJet_rawPt");
    if (b_CorrT1METJet_rawPt_) { b_CorrT1METJet_rawPt_->SetAddress(&CorrT1METJet_rawPt_); }
    b_DeepMETResolutionTune_phi_ = tree->GetBranch("DeepMETResolutionTune_phi");
    if (b_DeepMETResolutionTune_phi_) { b_DeepMETResolutionTune_phi_->SetAddress(&DeepMETResolutionTune_phi_); }
    b_DeepMETResolutionTune_pt_ = tree->GetBranch("DeepMETResolutionTune_pt");
    if (b_DeepMETResolutionTune_pt_) { b_DeepMETResolutionTune_pt_->SetAddress(&DeepMETResolutionTune_pt_); }
    b_DeepMETResponseTune_phi_ = tree->GetBranch("DeepMETResponseTune_phi");
    if (b_DeepMETResponseTune_phi_) { b_DeepMETResponseTune_phi_->SetAddress(&DeepMETResponseTune_phi_); }
    b_DeepMETResponseTune_pt_ = tree->GetBranch("DeepMETResponseTune_pt");
    if (b_DeepMETResponseTune_pt_) { b_DeepMETResponseTune_pt_->SetAddress(&DeepMETResponseTune_pt_); }
    b_EFTfitCoefficients_ = tree->GetBranch("EFTfitCoefficients");
    if (b_EFTfitCoefficients_) { b_EFTfitCoefficients_->SetAddress(&EFTfitCoefficients_); }
    b_Electron_CutBased_LooseID_SF_ = tree->GetBranch("Electron_CutBased_LooseID_SF");
    if (b_Electron_CutBased_LooseID_SF_) { b_Electron_CutBased_LooseID_SF_->SetAddress(&Electron_CutBased_LooseID_SF_); }
    b_Electron_CutBased_LooseID_SFerr_ = tree->GetBranch("Electron_CutBased_LooseID_SFerr");
    if (b_Electron_CutBased_LooseID_SFerr_) { b_Electron_CutBased_LooseID_SFerr_->SetAddress(&Electron_CutBased_LooseID_SFerr_); }
    b_Electron_CutBased_MediumID_SF_ = tree->GetBranch("Electron_CutBased_MediumID_SF");
    if (b_Electron_CutBased_MediumID_SF_) { b_Electron_CutBased_MediumID_SF_->SetAddress(&Electron_CutBased_MediumID_SF_); }
    b_Electron_CutBased_MediumID_SFerr_ = tree->GetBranch("Electron_CutBased_MediumID_SFerr");
    if (b_Electron_CutBased_MediumID_SFerr_) { b_Electron_CutBased_MediumID_SFerr_->SetAddress(&Electron_CutBased_MediumID_SFerr_); }
    b_Electron_CutBased_TightID_SF_ = tree->GetBranch("Electron_CutBased_TightID_SF");
    if (b_Electron_CutBased_TightID_SF_) { b_Electron_CutBased_TightID_SF_->SetAddress(&Electron_CutBased_TightID_SF_); }
    b_Electron_CutBased_TightID_SFerr_ = tree->GetBranch("Electron_CutBased_TightID_SFerr");
    if (b_Electron_CutBased_TightID_SFerr_) { b_Electron_CutBased_TightID_SFerr_->SetAddress(&Electron_CutBased_TightID_SFerr_); }
    b_Electron_CutBased_VetoID_SF_ = tree->GetBranch("Electron_CutBased_VetoID_SF");
    if (b_Electron_CutBased_VetoID_SF_) { b_Electron_CutBased_VetoID_SF_->SetAddress(&Electron_CutBased_VetoID_SF_); }
    b_Electron_CutBased_VetoID_SFerr_ = tree->GetBranch("Electron_CutBased_VetoID_SFerr");
    if (b_Electron_CutBased_VetoID_SFerr_) { b_Electron_CutBased_VetoID_SFerr_->SetAddress(&Electron_CutBased_VetoID_SFerr_); }
    b_Electron_MVAFall17V2Iso_WP80_SF_ = tree->GetBranch("Electron_MVAFall17V2Iso_WP80_SF");
    if (b_Electron_MVAFall17V2Iso_WP80_SF_) { b_Electron_MVAFall17V2Iso_WP80_SF_->SetAddress(&Electron_MVAFall17V2Iso_WP80_SF_); }
    b_Electron_MVAFall17V2Iso_WP80_SFerr_ = tree->GetBranch("Electron_MVAFall17V2Iso_WP80_SFerr");
    if (b_Electron_MVAFall17V2Iso_WP80_SFerr_) { b_Electron_MVAFall17V2Iso_WP80_SFerr_->SetAddress(&Electron_MVAFall17V2Iso_WP80_SFerr_); }
    b_Electron_MVAFall17V2Iso_WP90_SF_ = tree->GetBranch("Electron_MVAFall17V2Iso_WP90_SF");
    if (b_Electron_MVAFall17V2Iso_WP90_SF_) { b_Electron_MVAFall17V2Iso_WP90_SF_->SetAddress(&Electron_MVAFall17V2Iso_WP90_SF_); }
    b_Electron_MVAFall17V2Iso_WP90_SFerr_ = tree->GetBranch("Electron_MVAFall17V2Iso_WP90_SFerr");
    if (b_Electron_MVAFall17V2Iso_WP90_SFerr_) { b_Electron_MVAFall17V2Iso_WP90_SFerr_->SetAddress(&Electron_MVAFall17V2Iso_WP90_SFerr_); }
    b_Electron_MVAFall17V2noIso_WP80_SF_ = tree->GetBranch("Electron_MVAFall17V2noIso_WP80_SF");
    if (b_Electron_MVAFall17V2noIso_WP80_SF_) { b_Electron_MVAFall17V2noIso_WP80_SF_->SetAddress(&Electron_MVAFall17V2noIso_WP80_SF_); }
    b_Electron_MVAFall17V2noIso_WP80_SFerr_ = tree->GetBranch("Electron_MVAFall17V2noIso_WP80_SFerr");
    if (b_Electron_MVAFall17V2noIso_WP80_SFerr_) { b_Electron_MVAFall17V2noIso_WP80_SFerr_->SetAddress(&Electron_MVAFall17V2noIso_WP80_SFerr_); }
    b_Electron_MVAFall17V2noIso_WP90_SF_ = tree->GetBranch("Electron_MVAFall17V2noIso_WP90_SF");
    if (b_Electron_MVAFall17V2noIso_WP90_SF_) { b_Electron_MVAFall17V2noIso_WP90_SF_->SetAddress(&Electron_MVAFall17V2noIso_WP90_SF_); }
    b_Electron_MVAFall17V2noIso_WP90_SFerr_ = tree->GetBranch("Electron_MVAFall17V2noIso_WP90_SFerr");
    if (b_Electron_MVAFall17V2noIso_WP90_SFerr_) { b_Electron_MVAFall17V2noIso_WP90_SFerr_->SetAddress(&Electron_MVAFall17V2noIso_WP90_SFerr_); }
    b_Electron_RECO_SF_ = tree->GetBranch("Electron_RECO_SF");
    if (b_Electron_RECO_SF_) { b_Electron_RECO_SF_->SetAddress(&Electron_RECO_SF_); }
    b_Electron_RECO_SFerr_ = tree->GetBranch("Electron_RECO_SFerr");
    if (b_Electron_RECO_SFerr_) { b_Electron_RECO_SFerr_->SetAddress(&Electron_RECO_SFerr_); }
    b_Electron_charge_ = tree->GetBranch("Electron_charge");
    if (b_Electron_charge_) { b_Electron_charge_->SetAddress(&Electron_charge_); }
    b_Electron_cleanmask_ = tree->GetBranch("Electron_cleanmask");
    if (b_Electron_cleanmask_) { b_Electron_cleanmask_->SetAddress(&Electron_cleanmask_); }
    b_Electron_convVeto_ = tree->GetBranch("Electron_convVeto");
    if (b_Electron_convVeto_) { b_Electron_convVeto_->SetAddress(&Electron_convVeto_); }
    b_Electron_cutBased_ = tree->GetBranch("Electron_cutBased");
    if (b_Electron_cutBased_) { b_Electron_cutBased_->SetAddress(&Electron_cutBased_); }
    b_Electron_cutBased17_ = tree->GetBranch("Electron_cutBased17");
    if (b_Electron_cutBased17_) { b_Electron_cutBased17_->SetAddress(&Electron_cutBased17_); }
    b_Electron_cutBased_Fall17V2_ = tree->GetBranch("Electron_cutBased_Fall17V2");
    if (b_Electron_cutBased_Fall17V2_) { b_Electron_cutBased_Fall17V2_->SetAddress(&Electron_cutBased_Fall17V2_); }
    b_Electron_cutBased_Fall17_V1_ = tree->GetBranch("Electron_cutBased_Fall17_V1");
    if (b_Electron_cutBased_Fall17_V1_) { b_Electron_cutBased_Fall17_V1_->SetAddress(&Electron_cutBased_Fall17_V1_); }
    b_Electron_cutBased_HEEP_ = tree->GetBranch("Electron_cutBased_HEEP");
    if (b_Electron_cutBased_HEEP_) { b_Electron_cutBased_HEEP_->SetAddress(&Electron_cutBased_HEEP_); }
    b_Electron_cutBased_HLTPreSel_ = tree->GetBranch("Electron_cutBased_HLTPreSel");
    if (b_Electron_cutBased_HLTPreSel_) { b_Electron_cutBased_HLTPreSel_->SetAddress(&Electron_cutBased_HLTPreSel_); }
    b_Electron_dEscaleDown_ = tree->GetBranch("Electron_dEscaleDown");
    if (b_Electron_dEscaleDown_) { b_Electron_dEscaleDown_->SetAddress(&Electron_dEscaleDown_); }
    b_Electron_dEscaleUp_ = tree->GetBranch("Electron_dEscaleUp");
    if (b_Electron_dEscaleUp_) { b_Electron_dEscaleUp_->SetAddress(&Electron_dEscaleUp_); }
    b_Electron_dEsigmaDown_ = tree->GetBranch("Electron_dEsigmaDown");
    if (b_Electron_dEsigmaDown_) { b_Electron_dEsigmaDown_->SetAddress(&Electron_dEsigmaDown_); }
    b_Electron_dEsigmaUp_ = tree->GetBranch("Electron_dEsigmaUp");
    if (b_Electron_dEsigmaUp_) { b_Electron_dEsigmaUp_->SetAddress(&Electron_dEsigmaUp_); }
    b_Electron_deltaEtaSC_ = tree->GetBranch("Electron_deltaEtaSC");
    if (b_Electron_deltaEtaSC_) { b_Electron_deltaEtaSC_->SetAddress(&Electron_deltaEtaSC_); }
    b_Electron_dr03EcalRecHitSumEt_ = tree->GetBranch("Electron_dr03EcalRecHitSumEt");
    if (b_Electron_dr03EcalRecHitSumEt_) { b_Electron_dr03EcalRecHitSumEt_->SetAddress(&Electron_dr03EcalRecHitSumEt_); }
    b_Electron_dr03HcalDepth1TowerSumEt_ = tree->GetBranch("Electron_dr03HcalDepth1TowerSumEt");
    if (b_Electron_dr03HcalDepth1TowerSumEt_) { b_Electron_dr03HcalDepth1TowerSumEt_->SetAddress(&Electron_dr03HcalDepth1TowerSumEt_); }
    b_Electron_dr03TkSumPt_ = tree->GetBranch("Electron_dr03TkSumPt");
    if (b_Electron_dr03TkSumPt_) { b_Electron_dr03TkSumPt_->SetAddress(&Electron_dr03TkSumPt_); }
    b_Electron_dr03TkSumPtHEEP_ = tree->GetBranch("Electron_dr03TkSumPtHEEP");
    if (b_Electron_dr03TkSumPtHEEP_) { b_Electron_dr03TkSumPtHEEP_->SetAddress(&Electron_dr03TkSumPtHEEP_); }
    b_Electron_dxy_ = tree->GetBranch("Electron_dxy");
    if (b_Electron_dxy_) { b_Electron_dxy_->SetAddress(&Electron_dxy_); }
    b_Electron_dxyErr_ = tree->GetBranch("Electron_dxyErr");
    if (b_Electron_dxyErr_) { b_Electron_dxyErr_->SetAddress(&Electron_dxyErr_); }
    b_Electron_dz_ = tree->GetBranch("Electron_dz");
    if (b_Electron_dz_) { b_Electron_dz_->SetAddress(&Electron_dz_); }
    b_Electron_dzErr_ = tree->GetBranch("Electron_dzErr");
    if (b_Electron_dzErr_) { b_Electron_dzErr_->SetAddress(&Electron_dzErr_); }
    b_Electron_eCorr_ = tree->GetBranch("Electron_eCorr");
    if (b_Electron_eCorr_) { b_Electron_eCorr_->SetAddress(&Electron_eCorr_); }
    b_Electron_eInvMinusPInv_ = tree->GetBranch("Electron_eInvMinusPInv");
    if (b_Electron_eInvMinusPInv_) { b_Electron_eInvMinusPInv_->SetAddress(&Electron_eInvMinusPInv_); }
    b_Electron_energyErr_ = tree->GetBranch("Electron_energyErr");
    if (b_Electron_energyErr_) { b_Electron_energyErr_->SetAddress(&Electron_energyErr_); }
    b_Electron_eta_ = tree->GetBranch("Electron_eta");
    if (b_Electron_eta_) { b_Electron_eta_->SetAddress(&Electron_eta_); }
    b_Electron_fsrPhotonIdx_ = tree->GetBranch("Electron_fsrPhotonIdx");
    if (b_Electron_fsrPhotonIdx_) { b_Electron_fsrPhotonIdx_->SetAddress(&Electron_fsrPhotonIdx_); }
    b_Electron_genPartFlav_ = tree->GetBranch("Electron_genPartFlav");
    if (b_Electron_genPartFlav_) { b_Electron_genPartFlav_->SetAddress(&Electron_genPartFlav_); }
    b_Electron_genPartIdx_ = tree->GetBranch("Electron_genPartIdx");
    if (b_Electron_genPartIdx_) { b_Electron_genPartIdx_->SetAddress(&Electron_genPartIdx_); }
    b_Electron_hoe_ = tree->GetBranch("Electron_hoe");
    if (b_Electron_hoe_) { b_Electron_hoe_->SetAddress(&Electron_hoe_); }
    b_Electron_ip3d_ = tree->GetBranch("Electron_ip3d");
    if (b_Electron_ip3d_) { b_Electron_ip3d_->SetAddress(&Electron_ip3d_); }
    b_Electron_isPFcand_ = tree->GetBranch("Electron_isPFcand");
    if (b_Electron_isPFcand_) { b_Electron_isPFcand_->SetAddress(&Electron_isPFcand_); }
    b_Electron_jetIdx_ = tree->GetBranch("Electron_jetIdx");
    if (b_Electron_jetIdx_) { b_Electron_jetIdx_->SetAddress(&Electron_jetIdx_); }
    b_Electron_jetNDauCharged_ = tree->GetBranch("Electron_jetNDauCharged");
    if (b_Electron_jetNDauCharged_) { b_Electron_jetNDauCharged_->SetAddress(&Electron_jetNDauCharged_); }
    b_Electron_jetPtRelv2_ = tree->GetBranch("Electron_jetPtRelv2");
    if (b_Electron_jetPtRelv2_) { b_Electron_jetPtRelv2_->SetAddress(&Electron_jetPtRelv2_); }
    b_Electron_jetRelIso_ = tree->GetBranch("Electron_jetRelIso");
    if (b_Electron_jetRelIso_) { b_Electron_jetRelIso_->SetAddress(&Electron_jetRelIso_); }
    b_Electron_jetRelIso_Fall17V2_ = tree->GetBranch("Electron_jetRelIso_Fall17V2");
    if (b_Electron_jetRelIso_Fall17V2_) { b_Electron_jetRelIso_Fall17V2_->SetAddress(&Electron_jetRelIso_Fall17V2_); }
    b_Electron_lostHits_ = tree->GetBranch("Electron_lostHits");
    if (b_Electron_lostHits_) { b_Electron_lostHits_->SetAddress(&Electron_lostHits_); }
    b_Electron_mass_ = tree->GetBranch("Electron_mass");
    if (b_Electron_mass_) { b_Electron_mass_->SetAddress(&Electron_mass_); }
    b_Electron_miniPFRelIso_all_ = tree->GetBranch("Electron_miniPFRelIso_all");
    if (b_Electron_miniPFRelIso_all_) { b_Electron_miniPFRelIso_all_->SetAddress(&Electron_miniPFRelIso_all_); }
    b_Electron_miniPFRelIso_all_Fall17V2_ = tree->GetBranch("Electron_miniPFRelIso_all_Fall17V2");
    if (b_Electron_miniPFRelIso_all_Fall17V2_) { b_Electron_miniPFRelIso_all_Fall17V2_->SetAddress(&Electron_miniPFRelIso_all_Fall17V2_); }
    b_Electron_miniPFRelIso_chg_ = tree->GetBranch("Electron_miniPFRelIso_chg");
    if (b_Electron_miniPFRelIso_chg_) { b_Electron_miniPFRelIso_chg_->SetAddress(&Electron_miniPFRelIso_chg_); }
    b_Electron_miniPFRelIso_chg_Fall17V2_ = tree->GetBranch("Electron_miniPFRelIso_chg_Fall17V2");
    if (b_Electron_miniPFRelIso_chg_Fall17V2_) { b_Electron_miniPFRelIso_chg_Fall17V2_->SetAddress(&Electron_miniPFRelIso_chg_Fall17V2_); }
    b_Electron_mvaFall17Iso_ = tree->GetBranch("Electron_mvaFall17Iso");
    if (b_Electron_mvaFall17Iso_) { b_Electron_mvaFall17Iso_->SetAddress(&Electron_mvaFall17Iso_); }
    b_Electron_mvaFall17Iso_WP80_ = tree->GetBranch("Electron_mvaFall17Iso_WP80");
    if (b_Electron_mvaFall17Iso_WP80_) { b_Electron_mvaFall17Iso_WP80_->SetAddress(&Electron_mvaFall17Iso_WP80_); }
    b_Electron_mvaFall17Iso_WP90_ = tree->GetBranch("Electron_mvaFall17Iso_WP90");
    if (b_Electron_mvaFall17Iso_WP90_) { b_Electron_mvaFall17Iso_WP90_->SetAddress(&Electron_mvaFall17Iso_WP90_); }
    b_Electron_mvaFall17Iso_WPL_ = tree->GetBranch("Electron_mvaFall17Iso_WPL");
    if (b_Electron_mvaFall17Iso_WPL_) { b_Electron_mvaFall17Iso_WPL_->SetAddress(&Electron_mvaFall17Iso_WPL_); }
    b_Electron_mvaFall17V1Iso_ = tree->GetBranch("Electron_mvaFall17V1Iso");
    if (b_Electron_mvaFall17V1Iso_) { b_Electron_mvaFall17V1Iso_->SetAddress(&Electron_mvaFall17V1Iso_); }
    b_Electron_mvaFall17V1Iso_WP80_ = tree->GetBranch("Electron_mvaFall17V1Iso_WP80");
    if (b_Electron_mvaFall17V1Iso_WP80_) { b_Electron_mvaFall17V1Iso_WP80_->SetAddress(&Electron_mvaFall17V1Iso_WP80_); }
    b_Electron_mvaFall17V1Iso_WP90_ = tree->GetBranch("Electron_mvaFall17V1Iso_WP90");
    if (b_Electron_mvaFall17V1Iso_WP90_) { b_Electron_mvaFall17V1Iso_WP90_->SetAddress(&Electron_mvaFall17V1Iso_WP90_); }
    b_Electron_mvaFall17V1Iso_WPL_ = tree->GetBranch("Electron_mvaFall17V1Iso_WPL");
    if (b_Electron_mvaFall17V1Iso_WPL_) { b_Electron_mvaFall17V1Iso_WPL_->SetAddress(&Electron_mvaFall17V1Iso_WPL_); }
    b_Electron_mvaFall17V1noIso_ = tree->GetBranch("Electron_mvaFall17V1noIso");
    if (b_Electron_mvaFall17V1noIso_) { b_Electron_mvaFall17V1noIso_->SetAddress(&Electron_mvaFall17V1noIso_); }
    b_Electron_mvaFall17V1noIso_WP80_ = tree->GetBranch("Electron_mvaFall17V1noIso_WP80");
    if (b_Electron_mvaFall17V1noIso_WP80_) { b_Electron_mvaFall17V1noIso_WP80_->SetAddress(&Electron_mvaFall17V1noIso_WP80_); }
    b_Electron_mvaFall17V1noIso_WP90_ = tree->GetBranch("Electron_mvaFall17V1noIso_WP90");
    if (b_Electron_mvaFall17V1noIso_WP90_) { b_Electron_mvaFall17V1noIso_WP90_->SetAddress(&Electron_mvaFall17V1noIso_WP90_); }
    b_Electron_mvaFall17V1noIso_WPL_ = tree->GetBranch("Electron_mvaFall17V1noIso_WPL");
    if (b_Electron_mvaFall17V1noIso_WPL_) { b_Electron_mvaFall17V1noIso_WPL_->SetAddress(&Electron_mvaFall17V1noIso_WPL_); }
    b_Electron_mvaFall17V2Iso_ = tree->GetBranch("Electron_mvaFall17V2Iso");
    if (b_Electron_mvaFall17V2Iso_) { b_Electron_mvaFall17V2Iso_->SetAddress(&Electron_mvaFall17V2Iso_); }
    b_Electron_mvaFall17V2Iso_WP80_ = tree->GetBranch("Electron_mvaFall17V2Iso_WP80");
    if (b_Electron_mvaFall17V2Iso_WP80_) { b_Electron_mvaFall17V2Iso_WP80_->SetAddress(&Electron_mvaFall17V2Iso_WP80_); }
    b_Electron_mvaFall17V2Iso_WP90_ = tree->GetBranch("Electron_mvaFall17V2Iso_WP90");
    if (b_Electron_mvaFall17V2Iso_WP90_) { b_Electron_mvaFall17V2Iso_WP90_->SetAddress(&Electron_mvaFall17V2Iso_WP90_); }
    b_Electron_mvaFall17V2Iso_WPL_ = tree->GetBranch("Electron_mvaFall17V2Iso_WPL");
    if (b_Electron_mvaFall17V2Iso_WPL_) { b_Electron_mvaFall17V2Iso_WPL_->SetAddress(&Electron_mvaFall17V2Iso_WPL_); }
    b_Electron_mvaFall17V2noIso_ = tree->GetBranch("Electron_mvaFall17V2noIso");
    if (b_Electron_mvaFall17V2noIso_) { b_Electron_mvaFall17V2noIso_->SetAddress(&Electron_mvaFall17V2noIso_); }
    b_Electron_mvaFall17V2noIso_WP80_ = tree->GetBranch("Electron_mvaFall17V2noIso_WP80");
    if (b_Electron_mvaFall17V2noIso_WP80_) { b_Electron_mvaFall17V2noIso_WP80_->SetAddress(&Electron_mvaFall17V2noIso_WP80_); }
    b_Electron_mvaFall17V2noIso_WP90_ = tree->GetBranch("Electron_mvaFall17V2noIso_WP90");
    if (b_Electron_mvaFall17V2noIso_WP90_) { b_Electron_mvaFall17V2noIso_WP90_->SetAddress(&Electron_mvaFall17V2noIso_WP90_); }
    b_Electron_mvaFall17V2noIso_WPL_ = tree->GetBranch("Electron_mvaFall17V2noIso_WPL");
    if (b_Electron_mvaFall17V2noIso_WPL_) { b_Electron_mvaFall17V2noIso_WPL_->SetAddress(&Electron_mvaFall17V2noIso_WPL_); }
    b_Electron_mvaFall17noIso_ = tree->GetBranch("Electron_mvaFall17noIso");
    if (b_Electron_mvaFall17noIso_) { b_Electron_mvaFall17noIso_->SetAddress(&Electron_mvaFall17noIso_); }
    b_Electron_mvaFall17noIso_WP80_ = tree->GetBranch("Electron_mvaFall17noIso_WP80");
    if (b_Electron_mvaFall17noIso_WP80_) { b_Electron_mvaFall17noIso_WP80_->SetAddress(&Electron_mvaFall17noIso_WP80_); }
    b_Electron_mvaFall17noIso_WP90_ = tree->GetBranch("Electron_mvaFall17noIso_WP90");
    if (b_Electron_mvaFall17noIso_WP90_) { b_Electron_mvaFall17noIso_WP90_->SetAddress(&Electron_mvaFall17noIso_WP90_); }
    b_Electron_mvaFall17noIso_WPL_ = tree->GetBranch("Electron_mvaFall17noIso_WPL");
    if (b_Electron_mvaFall17noIso_WPL_) { b_Electron_mvaFall17noIso_WPL_->SetAddress(&Electron_mvaFall17noIso_WPL_); }
    b_Electron_mvaHZZIso_ = tree->GetBranch("Electron_mvaHZZIso");
    if (b_Electron_mvaHZZIso_) { b_Electron_mvaHZZIso_->SetAddress(&Electron_mvaHZZIso_); }
    b_Electron_mvaIso_ = tree->GetBranch("Electron_mvaIso");
    if (b_Electron_mvaIso_) { b_Electron_mvaIso_->SetAddress(&Electron_mvaIso_); }
    b_Electron_mvaIso_Fall17V2_ = tree->GetBranch("Electron_mvaIso_Fall17V2");
    if (b_Electron_mvaIso_Fall17V2_) { b_Electron_mvaIso_Fall17V2_->SetAddress(&Electron_mvaIso_Fall17V2_); }
    b_Electron_mvaIso_Fall17V2_WP80_ = tree->GetBranch("Electron_mvaIso_Fall17V2_WP80");
    if (b_Electron_mvaIso_Fall17V2_WP80_) { b_Electron_mvaIso_Fall17V2_WP80_->SetAddress(&Electron_mvaIso_Fall17V2_WP80_); }
    b_Electron_mvaIso_Fall17V2_WP90_ = tree->GetBranch("Electron_mvaIso_Fall17V2_WP90");
    if (b_Electron_mvaIso_Fall17V2_WP90_) { b_Electron_mvaIso_Fall17V2_WP90_->SetAddress(&Electron_mvaIso_Fall17V2_WP90_); }
    b_Electron_mvaIso_Fall17V2_WPL_ = tree->GetBranch("Electron_mvaIso_Fall17V2_WPL");
    if (b_Electron_mvaIso_Fall17V2_WPL_) { b_Electron_mvaIso_Fall17V2_WPL_->SetAddress(&Electron_mvaIso_Fall17V2_WPL_); }
    b_Electron_mvaIso_WP80_ = tree->GetBranch("Electron_mvaIso_WP80");
    if (b_Electron_mvaIso_WP80_) { b_Electron_mvaIso_WP80_->SetAddress(&Electron_mvaIso_WP80_); }
    b_Electron_mvaIso_WP90_ = tree->GetBranch("Electron_mvaIso_WP90");
    if (b_Electron_mvaIso_WP90_) { b_Electron_mvaIso_WP90_->SetAddress(&Electron_mvaIso_WP90_); }
    b_Electron_mvaNoIso_ = tree->GetBranch("Electron_mvaNoIso");
    if (b_Electron_mvaNoIso_) { b_Electron_mvaNoIso_->SetAddress(&Electron_mvaNoIso_); }
    b_Electron_mvaNoIso_Fall17V2_ = tree->GetBranch("Electron_mvaNoIso_Fall17V2");
    if (b_Electron_mvaNoIso_Fall17V2_) { b_Electron_mvaNoIso_Fall17V2_->SetAddress(&Electron_mvaNoIso_Fall17V2_); }
    b_Electron_mvaNoIso_Fall17V2_WP80_ = tree->GetBranch("Electron_mvaNoIso_Fall17V2_WP80");
    if (b_Electron_mvaNoIso_Fall17V2_WP80_) { b_Electron_mvaNoIso_Fall17V2_WP80_->SetAddress(&Electron_mvaNoIso_Fall17V2_WP80_); }
    b_Electron_mvaNoIso_Fall17V2_WP90_ = tree->GetBranch("Electron_mvaNoIso_Fall17V2_WP90");
    if (b_Electron_mvaNoIso_Fall17V2_WP90_) { b_Electron_mvaNoIso_Fall17V2_WP90_->SetAddress(&Electron_mvaNoIso_Fall17V2_WP90_); }
    b_Electron_mvaNoIso_Fall17V2_WPL_ = tree->GetBranch("Electron_mvaNoIso_Fall17V2_WPL");
    if (b_Electron_mvaNoIso_Fall17V2_WPL_) { b_Electron_mvaNoIso_Fall17V2_WPL_->SetAddress(&Electron_mvaNoIso_Fall17V2_WPL_); }
    b_Electron_mvaNoIso_WP80_ = tree->GetBranch("Electron_mvaNoIso_WP80");
    if (b_Electron_mvaNoIso_WP80_) { b_Electron_mvaNoIso_WP80_->SetAddress(&Electron_mvaNoIso_WP80_); }
    b_Electron_mvaNoIso_WP90_ = tree->GetBranch("Electron_mvaNoIso_WP90");
    if (b_Electron_mvaNoIso_WP90_) { b_Electron_mvaNoIso_WP90_->SetAddress(&Electron_mvaNoIso_WP90_); }
    b_Electron_mvaSpring16GP_ = tree->GetBranch("Electron_mvaSpring16GP");
    if (b_Electron_mvaSpring16GP_) { b_Electron_mvaSpring16GP_->SetAddress(&Electron_mvaSpring16GP_); }
    b_Electron_mvaSpring16GP_WP80_ = tree->GetBranch("Electron_mvaSpring16GP_WP80");
    if (b_Electron_mvaSpring16GP_WP80_) { b_Electron_mvaSpring16GP_WP80_->SetAddress(&Electron_mvaSpring16GP_WP80_); }
    b_Electron_mvaSpring16GP_WP90_ = tree->GetBranch("Electron_mvaSpring16GP_WP90");
    if (b_Electron_mvaSpring16GP_WP90_) { b_Electron_mvaSpring16GP_WP90_->SetAddress(&Electron_mvaSpring16GP_WP90_); }
    b_Electron_mvaSpring16HZZ_ = tree->GetBranch("Electron_mvaSpring16HZZ");
    if (b_Electron_mvaSpring16HZZ_) { b_Electron_mvaSpring16HZZ_->SetAddress(&Electron_mvaSpring16HZZ_); }
    b_Electron_mvaSpring16HZZ_WPL_ = tree->GetBranch("Electron_mvaSpring16HZZ_WPL");
    if (b_Electron_mvaSpring16HZZ_WPL_) { b_Electron_mvaSpring16HZZ_WPL_->SetAddress(&Electron_mvaSpring16HZZ_WPL_); }
    b_Electron_mvaTTH_ = tree->GetBranch("Electron_mvaTTH");
    if (b_Electron_mvaTTH_) { b_Electron_mvaTTH_->SetAddress(&Electron_mvaTTH_); }
    // NOTE: this is a custom branch; temporarily added for convenience
    b_Electron_mvaTTHUL_ = tree->GetBranch("Electron_mvaTTHUL");
    if (b_Electron_mvaTTHUL_) { b_Electron_mvaTTHUL_->SetAddress(&Electron_mvaTTHUL_); }
    //
    b_Electron_pdgId_ = tree->GetBranch("Electron_pdgId");
    if (b_Electron_pdgId_) { b_Electron_pdgId_->SetAddress(&Electron_pdgId_); }
    b_Electron_pfRelIso03_all_ = tree->GetBranch("Electron_pfRelIso03_all");
    if (b_Electron_pfRelIso03_all_) { b_Electron_pfRelIso03_all_->SetAddress(&Electron_pfRelIso03_all_); }
    b_Electron_pfRelIso03_all_Fall17V2_ = tree->GetBranch("Electron_pfRelIso03_all_Fall17V2");
    if (b_Electron_pfRelIso03_all_Fall17V2_) { b_Electron_pfRelIso03_all_Fall17V2_->SetAddress(&Electron_pfRelIso03_all_Fall17V2_); }
    b_Electron_pfRelIso03_chg_ = tree->GetBranch("Electron_pfRelIso03_chg");
    if (b_Electron_pfRelIso03_chg_) { b_Electron_pfRelIso03_chg_->SetAddress(&Electron_pfRelIso03_chg_); }
    b_Electron_pfRelIso03_chg_Fall17V2_ = tree->GetBranch("Electron_pfRelIso03_chg_Fall17V2");
    if (b_Electron_pfRelIso03_chg_Fall17V2_) { b_Electron_pfRelIso03_chg_Fall17V2_->SetAddress(&Electron_pfRelIso03_chg_Fall17V2_); }
    b_Electron_phi_ = tree->GetBranch("Electron_phi");
    if (b_Electron_phi_) { b_Electron_phi_->SetAddress(&Electron_phi_); }
    b_Electron_photonIdx_ = tree->GetBranch("Electron_photonIdx");
    if (b_Electron_photonIdx_) { b_Electron_photonIdx_->SetAddress(&Electron_photonIdx_); }
    b_Electron_pt_ = tree->GetBranch("Electron_pt");
    if (b_Electron_pt_) { b_Electron_pt_->SetAddress(&Electron_pt_); }
    b_Electron_r9_ = tree->GetBranch("Electron_r9");
    if (b_Electron_r9_) { b_Electron_r9_->SetAddress(&Electron_r9_); }
    b_Electron_scEtOverPt_ = tree->GetBranch("Electron_scEtOverPt");
    if (b_Electron_scEtOverPt_) { b_Electron_scEtOverPt_->SetAddress(&Electron_scEtOverPt_); }
    b_Electron_seedGain_ = tree->GetBranch("Electron_seedGain");
    if (b_Electron_seedGain_) { b_Electron_seedGain_->SetAddress(&Electron_seedGain_); }
    b_Electron_seediEtaOriX_ = tree->GetBranch("Electron_seediEtaOriX");
    if (b_Electron_seediEtaOriX_) { b_Electron_seediEtaOriX_->SetAddress(&Electron_seediEtaOriX_); }
    b_Electron_seediPhiOriY_ = tree->GetBranch("Electron_seediPhiOriY");
    if (b_Electron_seediPhiOriY_) { b_Electron_seediPhiOriY_->SetAddress(&Electron_seediPhiOriY_); }
    b_Electron_sieie_ = tree->GetBranch("Electron_sieie");
    if (b_Electron_sieie_) { b_Electron_sieie_->SetAddress(&Electron_sieie_); }
    b_Electron_sip3d_ = tree->GetBranch("Electron_sip3d");
    if (b_Electron_sip3d_) { b_Electron_sip3d_->SetAddress(&Electron_sip3d_); }
    b_Electron_svIdx_ = tree->GetBranch("Electron_svIdx");
    if (b_Electron_svIdx_) { b_Electron_svIdx_->SetAddress(&Electron_svIdx_); }
    b_Electron_tightCharge_ = tree->GetBranch("Electron_tightCharge");
    if (b_Electron_tightCharge_) { b_Electron_tightCharge_->SetAddress(&Electron_tightCharge_); }
    b_Electron_vidNestedWPBitmap_ = tree->GetBranch("Electron_vidNestedWPBitmap");
    if (b_Electron_vidNestedWPBitmap_) { b_Electron_vidNestedWPBitmap_->SetAddress(&Electron_vidNestedWPBitmap_); }
    b_Electron_vidNestedWPBitmapHEEP_ = tree->GetBranch("Electron_vidNestedWPBitmapHEEP");
    if (b_Electron_vidNestedWPBitmapHEEP_) { b_Electron_vidNestedWPBitmapHEEP_->SetAddress(&Electron_vidNestedWPBitmapHEEP_); }
    b_Electron_vidNestedWPBitmap_Fall17V2_ = tree->GetBranch("Electron_vidNestedWPBitmap_Fall17V2");
    if (b_Electron_vidNestedWPBitmap_Fall17V2_) { b_Electron_vidNestedWPBitmap_Fall17V2_->SetAddress(&Electron_vidNestedWPBitmap_Fall17V2_); }
    b_FatJet_area_ = tree->GetBranch("FatJet_area");
    if (b_FatJet_area_) { b_FatJet_area_->SetAddress(&FatJet_area_); }
    b_FatJet_btagCMVA_ = tree->GetBranch("FatJet_btagCMVA");
    if (b_FatJet_btagCMVA_) { b_FatJet_btagCMVA_->SetAddress(&FatJet_btagCMVA_); }
    b_FatJet_btagCSVV2_ = tree->GetBranch("FatJet_btagCSVV2");
    if (b_FatJet_btagCSVV2_) { b_FatJet_btagCSVV2_->SetAddress(&FatJet_btagCSVV2_); }
    b_FatJet_btagDDBvL_ = tree->GetBranch("FatJet_btagDDBvL");
    if (b_FatJet_btagDDBvL_) { b_FatJet_btagDDBvL_->SetAddress(&FatJet_btagDDBvL_); }
    b_FatJet_btagDDBvLV2_ = tree->GetBranch("FatJet_btagDDBvLV2");
    if (b_FatJet_btagDDBvLV2_) { b_FatJet_btagDDBvLV2_->SetAddress(&FatJet_btagDDBvLV2_); }
    b_FatJet_btagDDBvL_noMD_ = tree->GetBranch("FatJet_btagDDBvL_noMD");
    if (b_FatJet_btagDDBvL_noMD_) { b_FatJet_btagDDBvL_noMD_->SetAddress(&FatJet_btagDDBvL_noMD_); }
    b_FatJet_btagDDCvB_ = tree->GetBranch("FatJet_btagDDCvB");
    if (b_FatJet_btagDDCvB_) { b_FatJet_btagDDCvB_->SetAddress(&FatJet_btagDDCvB_); }
    b_FatJet_btagDDCvBV2_ = tree->GetBranch("FatJet_btagDDCvBV2");
    if (b_FatJet_btagDDCvBV2_) { b_FatJet_btagDDCvBV2_->SetAddress(&FatJet_btagDDCvBV2_); }
    b_FatJet_btagDDCvB_noMD_ = tree->GetBranch("FatJet_btagDDCvB_noMD");
    if (b_FatJet_btagDDCvB_noMD_) { b_FatJet_btagDDCvB_noMD_->SetAddress(&FatJet_btagDDCvB_noMD_); }
    b_FatJet_btagDDCvL_ = tree->GetBranch("FatJet_btagDDCvL");
    if (b_FatJet_btagDDCvL_) { b_FatJet_btagDDCvL_->SetAddress(&FatJet_btagDDCvL_); }
    b_FatJet_btagDDCvLV2_ = tree->GetBranch("FatJet_btagDDCvLV2");
    if (b_FatJet_btagDDCvLV2_) { b_FatJet_btagDDCvLV2_->SetAddress(&FatJet_btagDDCvLV2_); }
    b_FatJet_btagDDCvL_noMD_ = tree->GetBranch("FatJet_btagDDCvL_noMD");
    if (b_FatJet_btagDDCvL_noMD_) { b_FatJet_btagDDCvL_noMD_->SetAddress(&FatJet_btagDDCvL_noMD_); }
    b_FatJet_btagDeepB_ = tree->GetBranch("FatJet_btagDeepB");
    if (b_FatJet_btagDeepB_) { b_FatJet_btagDeepB_->SetAddress(&FatJet_btagDeepB_); }
    b_FatJet_btagHbb_ = tree->GetBranch("FatJet_btagHbb");
    if (b_FatJet_btagHbb_) { b_FatJet_btagHbb_->SetAddress(&FatJet_btagHbb_); }
    b_FatJet_corr_JEC_ = tree->GetBranch("FatJet_corr_JEC");
    if (b_FatJet_corr_JEC_) { b_FatJet_corr_JEC_->SetAddress(&FatJet_corr_JEC_); }
    b_FatJet_corr_JER_ = tree->GetBranch("FatJet_corr_JER");
    if (b_FatJet_corr_JER_) { b_FatJet_corr_JER_->SetAddress(&FatJet_corr_JER_); }
    b_FatJet_corr_JMR_ = tree->GetBranch("FatJet_corr_JMR");
    if (b_FatJet_corr_JMR_) { b_FatJet_corr_JMR_->SetAddress(&FatJet_corr_JMR_); }
    b_FatJet_corr_JMS_ = tree->GetBranch("FatJet_corr_JMS");
    if (b_FatJet_corr_JMS_) { b_FatJet_corr_JMS_->SetAddress(&FatJet_corr_JMS_); }
    b_FatJet_deepTagMD_H4qvsQCD_ = tree->GetBranch("FatJet_deepTagMD_H4qvsQCD");
    if (b_FatJet_deepTagMD_H4qvsQCD_) { b_FatJet_deepTagMD_H4qvsQCD_->SetAddress(&FatJet_deepTagMD_H4qvsQCD_); }
    b_FatJet_deepTagMD_HbbvsQCD_ = tree->GetBranch("FatJet_deepTagMD_HbbvsQCD");
    if (b_FatJet_deepTagMD_HbbvsQCD_) { b_FatJet_deepTagMD_HbbvsQCD_->SetAddress(&FatJet_deepTagMD_HbbvsQCD_); }
    b_FatJet_deepTagMD_TvsQCD_ = tree->GetBranch("FatJet_deepTagMD_TvsQCD");
    if (b_FatJet_deepTagMD_TvsQCD_) { b_FatJet_deepTagMD_TvsQCD_->SetAddress(&FatJet_deepTagMD_TvsQCD_); }
    b_FatJet_deepTagMD_WvsQCD_ = tree->GetBranch("FatJet_deepTagMD_WvsQCD");
    if (b_FatJet_deepTagMD_WvsQCD_) { b_FatJet_deepTagMD_WvsQCD_->SetAddress(&FatJet_deepTagMD_WvsQCD_); }
    b_FatJet_deepTagMD_ZHbbvsQCD_ = tree->GetBranch("FatJet_deepTagMD_ZHbbvsQCD");
    if (b_FatJet_deepTagMD_ZHbbvsQCD_) { b_FatJet_deepTagMD_ZHbbvsQCD_->SetAddress(&FatJet_deepTagMD_ZHbbvsQCD_); }
    b_FatJet_deepTagMD_ZHccvsQCD_ = tree->GetBranch("FatJet_deepTagMD_ZHccvsQCD");
    if (b_FatJet_deepTagMD_ZHccvsQCD_) { b_FatJet_deepTagMD_ZHccvsQCD_->SetAddress(&FatJet_deepTagMD_ZHccvsQCD_); }
    b_FatJet_deepTagMD_ZbbvsQCD_ = tree->GetBranch("FatJet_deepTagMD_ZbbvsQCD");
    if (b_FatJet_deepTagMD_ZbbvsQCD_) { b_FatJet_deepTagMD_ZbbvsQCD_->SetAddress(&FatJet_deepTagMD_ZbbvsQCD_); }
    b_FatJet_deepTagMD_ZvsQCD_ = tree->GetBranch("FatJet_deepTagMD_ZvsQCD");
    if (b_FatJet_deepTagMD_ZvsQCD_) { b_FatJet_deepTagMD_ZvsQCD_->SetAddress(&FatJet_deepTagMD_ZvsQCD_); }
    b_FatJet_deepTagMD_bbvsLight_ = tree->GetBranch("FatJet_deepTagMD_bbvsLight");
    if (b_FatJet_deepTagMD_bbvsLight_) { b_FatJet_deepTagMD_bbvsLight_->SetAddress(&FatJet_deepTagMD_bbvsLight_); }
    b_FatJet_deepTagMD_ccvsLight_ = tree->GetBranch("FatJet_deepTagMD_ccvsLight");
    if (b_FatJet_deepTagMD_ccvsLight_) { b_FatJet_deepTagMD_ccvsLight_->SetAddress(&FatJet_deepTagMD_ccvsLight_); }
    b_FatJet_deepTag_H_ = tree->GetBranch("FatJet_deepTag_H");
    if (b_FatJet_deepTag_H_) { b_FatJet_deepTag_H_->SetAddress(&FatJet_deepTag_H_); }
    b_FatJet_deepTag_QCD_ = tree->GetBranch("FatJet_deepTag_QCD");
    if (b_FatJet_deepTag_QCD_) { b_FatJet_deepTag_QCD_->SetAddress(&FatJet_deepTag_QCD_); }
    b_FatJet_deepTag_QCDothers_ = tree->GetBranch("FatJet_deepTag_QCDothers");
    if (b_FatJet_deepTag_QCDothers_) { b_FatJet_deepTag_QCDothers_->SetAddress(&FatJet_deepTag_QCDothers_); }
    b_FatJet_deepTag_TvsQCD_ = tree->GetBranch("FatJet_deepTag_TvsQCD");
    if (b_FatJet_deepTag_TvsQCD_) { b_FatJet_deepTag_TvsQCD_->SetAddress(&FatJet_deepTag_TvsQCD_); }
    b_FatJet_deepTag_WvsQCD_ = tree->GetBranch("FatJet_deepTag_WvsQCD");
    if (b_FatJet_deepTag_WvsQCD_) { b_FatJet_deepTag_WvsQCD_->SetAddress(&FatJet_deepTag_WvsQCD_); }
    b_FatJet_deepTag_ZvsQCD_ = tree->GetBranch("FatJet_deepTag_ZvsQCD");
    if (b_FatJet_deepTag_ZvsQCD_) { b_FatJet_deepTag_ZvsQCD_->SetAddress(&FatJet_deepTag_ZvsQCD_); }
    b_FatJet_electronIdx3SJ_ = tree->GetBranch("FatJet_electronIdx3SJ");
    if (b_FatJet_electronIdx3SJ_) { b_FatJet_electronIdx3SJ_->SetAddress(&FatJet_electronIdx3SJ_); }
    b_FatJet_eta_ = tree->GetBranch("FatJet_eta");
    if (b_FatJet_eta_) { b_FatJet_eta_->SetAddress(&FatJet_eta_); }
    b_FatJet_genJetAK8Idx_ = tree->GetBranch("FatJet_genJetAK8Idx");
    if (b_FatJet_genJetAK8Idx_) { b_FatJet_genJetAK8Idx_->SetAddress(&FatJet_genJetAK8Idx_); }
    b_FatJet_hadronFlavour_ = tree->GetBranch("FatJet_hadronFlavour");
    if (b_FatJet_hadronFlavour_) { b_FatJet_hadronFlavour_->SetAddress(&FatJet_hadronFlavour_); }
    b_FatJet_jetId_ = tree->GetBranch("FatJet_jetId");
    if (b_FatJet_jetId_) { b_FatJet_jetId_->SetAddress(&FatJet_jetId_); }
    b_FatJet_lsf3_ = tree->GetBranch("FatJet_lsf3");
    if (b_FatJet_lsf3_) { b_FatJet_lsf3_->SetAddress(&FatJet_lsf3_); }
    b_FatJet_mass_ = tree->GetBranch("FatJet_mass");
    if (b_FatJet_mass_) { b_FatJet_mass_->SetAddress(&FatJet_mass_); }
    b_FatJet_mass_jerDown_ = tree->GetBranch("FatJet_mass_jerDown");
    if (b_FatJet_mass_jerDown_) { b_FatJet_mass_jerDown_->SetAddress(&FatJet_mass_jerDown_); }
    b_FatJet_mass_jerUp_ = tree->GetBranch("FatJet_mass_jerUp");
    if (b_FatJet_mass_jerUp_) { b_FatJet_mass_jerUp_->SetAddress(&FatJet_mass_jerUp_); }
    b_FatJet_mass_jesTotalDown_ = tree->GetBranch("FatJet_mass_jesTotalDown");
    if (b_FatJet_mass_jesTotalDown_) { b_FatJet_mass_jesTotalDown_->SetAddress(&FatJet_mass_jesTotalDown_); }
    b_FatJet_mass_jesTotalUp_ = tree->GetBranch("FatJet_mass_jesTotalUp");
    if (b_FatJet_mass_jesTotalUp_) { b_FatJet_mass_jesTotalUp_->SetAddress(&FatJet_mass_jesTotalUp_); }
    b_FatJet_mass_jmrDown_ = tree->GetBranch("FatJet_mass_jmrDown");
    if (b_FatJet_mass_jmrDown_) { b_FatJet_mass_jmrDown_->SetAddress(&FatJet_mass_jmrDown_); }
    b_FatJet_mass_jmrUp_ = tree->GetBranch("FatJet_mass_jmrUp");
    if (b_FatJet_mass_jmrUp_) { b_FatJet_mass_jmrUp_->SetAddress(&FatJet_mass_jmrUp_); }
    b_FatJet_mass_jmsDown_ = tree->GetBranch("FatJet_mass_jmsDown");
    if (b_FatJet_mass_jmsDown_) { b_FatJet_mass_jmsDown_->SetAddress(&FatJet_mass_jmsDown_); }
    b_FatJet_mass_jmsUp_ = tree->GetBranch("FatJet_mass_jmsUp");
    if (b_FatJet_mass_jmsUp_) { b_FatJet_mass_jmsUp_->SetAddress(&FatJet_mass_jmsUp_); }
    b_FatJet_mass_nom_ = tree->GetBranch("FatJet_mass_nom");
    if (b_FatJet_mass_nom_) { b_FatJet_mass_nom_->SetAddress(&FatJet_mass_nom_); }
    b_FatJet_mass_raw_ = tree->GetBranch("FatJet_mass_raw");
    if (b_FatJet_mass_raw_) { b_FatJet_mass_raw_->SetAddress(&FatJet_mass_raw_); }
    b_FatJet_msoftdrop_ = tree->GetBranch("FatJet_msoftdrop");
    if (b_FatJet_msoftdrop_) { b_FatJet_msoftdrop_->SetAddress(&FatJet_msoftdrop_); }
    b_FatJet_msoftdrop_corr_JMR_ = tree->GetBranch("FatJet_msoftdrop_corr_JMR");
    if (b_FatJet_msoftdrop_corr_JMR_) { b_FatJet_msoftdrop_corr_JMR_->SetAddress(&FatJet_msoftdrop_corr_JMR_); }
    b_FatJet_msoftdrop_corr_JMS_ = tree->GetBranch("FatJet_msoftdrop_corr_JMS");
    if (b_FatJet_msoftdrop_corr_JMS_) { b_FatJet_msoftdrop_corr_JMS_->SetAddress(&FatJet_msoftdrop_corr_JMS_); }
    b_FatJet_msoftdrop_corr_PUPPI_ = tree->GetBranch("FatJet_msoftdrop_corr_PUPPI");
    if (b_FatJet_msoftdrop_corr_PUPPI_) { b_FatJet_msoftdrop_corr_PUPPI_->SetAddress(&FatJet_msoftdrop_corr_PUPPI_); }
    b_FatJet_msoftdrop_jerDown_ = tree->GetBranch("FatJet_msoftdrop_jerDown");
    if (b_FatJet_msoftdrop_jerDown_) { b_FatJet_msoftdrop_jerDown_->SetAddress(&FatJet_msoftdrop_jerDown_); }
    b_FatJet_msoftdrop_jerUp_ = tree->GetBranch("FatJet_msoftdrop_jerUp");
    if (b_FatJet_msoftdrop_jerUp_) { b_FatJet_msoftdrop_jerUp_->SetAddress(&FatJet_msoftdrop_jerUp_); }
    b_FatJet_msoftdrop_jesTotalDown_ = tree->GetBranch("FatJet_msoftdrop_jesTotalDown");
    if (b_FatJet_msoftdrop_jesTotalDown_) { b_FatJet_msoftdrop_jesTotalDown_->SetAddress(&FatJet_msoftdrop_jesTotalDown_); }
    b_FatJet_msoftdrop_jesTotalUp_ = tree->GetBranch("FatJet_msoftdrop_jesTotalUp");
    if (b_FatJet_msoftdrop_jesTotalUp_) { b_FatJet_msoftdrop_jesTotalUp_->SetAddress(&FatJet_msoftdrop_jesTotalUp_); }
    b_FatJet_msoftdrop_jmrDown_ = tree->GetBranch("FatJet_msoftdrop_jmrDown");
    if (b_FatJet_msoftdrop_jmrDown_) { b_FatJet_msoftdrop_jmrDown_->SetAddress(&FatJet_msoftdrop_jmrDown_); }
    b_FatJet_msoftdrop_jmrUp_ = tree->GetBranch("FatJet_msoftdrop_jmrUp");
    if (b_FatJet_msoftdrop_jmrUp_) { b_FatJet_msoftdrop_jmrUp_->SetAddress(&FatJet_msoftdrop_jmrUp_); }
    b_FatJet_msoftdrop_jmsDown_ = tree->GetBranch("FatJet_msoftdrop_jmsDown");
    if (b_FatJet_msoftdrop_jmsDown_) { b_FatJet_msoftdrop_jmsDown_->SetAddress(&FatJet_msoftdrop_jmsDown_); }
    b_FatJet_msoftdrop_jmsUp_ = tree->GetBranch("FatJet_msoftdrop_jmsUp");
    if (b_FatJet_msoftdrop_jmsUp_) { b_FatJet_msoftdrop_jmsUp_->SetAddress(&FatJet_msoftdrop_jmsUp_); }
    b_FatJet_msoftdrop_nom_ = tree->GetBranch("FatJet_msoftdrop_nom");
    if (b_FatJet_msoftdrop_nom_) { b_FatJet_msoftdrop_nom_->SetAddress(&FatJet_msoftdrop_nom_); }
    b_FatJet_msoftdrop_raw_ = tree->GetBranch("FatJet_msoftdrop_raw");
    if (b_FatJet_msoftdrop_raw_) { b_FatJet_msoftdrop_raw_->SetAddress(&FatJet_msoftdrop_raw_); }
    b_FatJet_msoftdrop_tau21DDT_jerDown_ = tree->GetBranch("FatJet_msoftdrop_tau21DDT_jerDown");
    if (b_FatJet_msoftdrop_tau21DDT_jerDown_) { b_FatJet_msoftdrop_tau21DDT_jerDown_->SetAddress(&FatJet_msoftdrop_tau21DDT_jerDown_); }
    b_FatJet_msoftdrop_tau21DDT_jerUp_ = tree->GetBranch("FatJet_msoftdrop_tau21DDT_jerUp");
    if (b_FatJet_msoftdrop_tau21DDT_jerUp_) { b_FatJet_msoftdrop_tau21DDT_jerUp_->SetAddress(&FatJet_msoftdrop_tau21DDT_jerUp_); }
    b_FatJet_msoftdrop_tau21DDT_jmrDown_ = tree->GetBranch("FatJet_msoftdrop_tau21DDT_jmrDown");
    if (b_FatJet_msoftdrop_tau21DDT_jmrDown_) { b_FatJet_msoftdrop_tau21DDT_jmrDown_->SetAddress(&FatJet_msoftdrop_tau21DDT_jmrDown_); }
    b_FatJet_msoftdrop_tau21DDT_jmrUp_ = tree->GetBranch("FatJet_msoftdrop_tau21DDT_jmrUp");
    if (b_FatJet_msoftdrop_tau21DDT_jmrUp_) { b_FatJet_msoftdrop_tau21DDT_jmrUp_->SetAddress(&FatJet_msoftdrop_tau21DDT_jmrUp_); }
    b_FatJet_msoftdrop_tau21DDT_jmsDown_ = tree->GetBranch("FatJet_msoftdrop_tau21DDT_jmsDown");
    if (b_FatJet_msoftdrop_tau21DDT_jmsDown_) { b_FatJet_msoftdrop_tau21DDT_jmsDown_->SetAddress(&FatJet_msoftdrop_tau21DDT_jmsDown_); }
    b_FatJet_msoftdrop_tau21DDT_jmsUp_ = tree->GetBranch("FatJet_msoftdrop_tau21DDT_jmsUp");
    if (b_FatJet_msoftdrop_tau21DDT_jmsUp_) { b_FatJet_msoftdrop_tau21DDT_jmsUp_->SetAddress(&FatJet_msoftdrop_tau21DDT_jmsUp_); }
    b_FatJet_msoftdrop_tau21DDT_nom_ = tree->GetBranch("FatJet_msoftdrop_tau21DDT_nom");
    if (b_FatJet_msoftdrop_tau21DDT_nom_) { b_FatJet_msoftdrop_tau21DDT_nom_->SetAddress(&FatJet_msoftdrop_tau21DDT_nom_); }
    b_FatJet_muonIdx3SJ_ = tree->GetBranch("FatJet_muonIdx3SJ");
    if (b_FatJet_muonIdx3SJ_) { b_FatJet_muonIdx3SJ_->SetAddress(&FatJet_muonIdx3SJ_); }
    b_FatJet_n2b1_ = tree->GetBranch("FatJet_n2b1");
    if (b_FatJet_n2b1_) { b_FatJet_n2b1_->SetAddress(&FatJet_n2b1_); }
    b_FatJet_n3b1_ = tree->GetBranch("FatJet_n3b1");
    if (b_FatJet_n3b1_) { b_FatJet_n3b1_->SetAddress(&FatJet_n3b1_); }
    b_FatJet_nBHadrons_ = tree->GetBranch("FatJet_nBHadrons");
    if (b_FatJet_nBHadrons_) { b_FatJet_nBHadrons_->SetAddress(&FatJet_nBHadrons_); }
    b_FatJet_nCHadrons_ = tree->GetBranch("FatJet_nCHadrons");
    if (b_FatJet_nCHadrons_) { b_FatJet_nCHadrons_->SetAddress(&FatJet_nCHadrons_); }
    b_FatJet_nConstituents_ = tree->GetBranch("FatJet_nConstituents");
    if (b_FatJet_nConstituents_) { b_FatJet_nConstituents_->SetAddress(&FatJet_nConstituents_); }
    b_FatJet_particleNetMD_QCD_ = tree->GetBranch("FatJet_particleNetMD_QCD");
    if (b_FatJet_particleNetMD_QCD_) { b_FatJet_particleNetMD_QCD_->SetAddress(&FatJet_particleNetMD_QCD_); }
    b_FatJet_particleNetMD_Xbb_ = tree->GetBranch("FatJet_particleNetMD_Xbb");
    if (b_FatJet_particleNetMD_Xbb_) { b_FatJet_particleNetMD_Xbb_->SetAddress(&FatJet_particleNetMD_Xbb_); }
    b_FatJet_particleNetMD_Xcc_ = tree->GetBranch("FatJet_particleNetMD_Xcc");
    if (b_FatJet_particleNetMD_Xcc_) { b_FatJet_particleNetMD_Xcc_->SetAddress(&FatJet_particleNetMD_Xcc_); }
    b_FatJet_particleNetMD_Xqq_ = tree->GetBranch("FatJet_particleNetMD_Xqq");
    if (b_FatJet_particleNetMD_Xqq_) { b_FatJet_particleNetMD_Xqq_->SetAddress(&FatJet_particleNetMD_Xqq_); }
    b_FatJet_particleNet_H4qvsQCD_ = tree->GetBranch("FatJet_particleNet_H4qvsQCD");
    if (b_FatJet_particleNet_H4qvsQCD_) { b_FatJet_particleNet_H4qvsQCD_->SetAddress(&FatJet_particleNet_H4qvsQCD_); }
    b_FatJet_particleNet_HbbvsQCD_ = tree->GetBranch("FatJet_particleNet_HbbvsQCD");
    if (b_FatJet_particleNet_HbbvsQCD_) { b_FatJet_particleNet_HbbvsQCD_->SetAddress(&FatJet_particleNet_HbbvsQCD_); }
    b_FatJet_particleNet_HccvsQCD_ = tree->GetBranch("FatJet_particleNet_HccvsQCD");
    if (b_FatJet_particleNet_HccvsQCD_) { b_FatJet_particleNet_HccvsQCD_->SetAddress(&FatJet_particleNet_HccvsQCD_); }
    b_FatJet_particleNet_QCD_ = tree->GetBranch("FatJet_particleNet_QCD");
    if (b_FatJet_particleNet_QCD_) { b_FatJet_particleNet_QCD_->SetAddress(&FatJet_particleNet_QCD_); }
    b_FatJet_particleNet_TvsQCD_ = tree->GetBranch("FatJet_particleNet_TvsQCD");
    if (b_FatJet_particleNet_TvsQCD_) { b_FatJet_particleNet_TvsQCD_->SetAddress(&FatJet_particleNet_TvsQCD_); }
    b_FatJet_particleNet_WvsQCD_ = tree->GetBranch("FatJet_particleNet_WvsQCD");
    if (b_FatJet_particleNet_WvsQCD_) { b_FatJet_particleNet_WvsQCD_->SetAddress(&FatJet_particleNet_WvsQCD_); }
    b_FatJet_particleNet_ZvsQCD_ = tree->GetBranch("FatJet_particleNet_ZvsQCD");
    if (b_FatJet_particleNet_ZvsQCD_) { b_FatJet_particleNet_ZvsQCD_->SetAddress(&FatJet_particleNet_ZvsQCD_); }
    b_FatJet_particleNet_mass_ = tree->GetBranch("FatJet_particleNet_mass");
    if (b_FatJet_particleNet_mass_) { b_FatJet_particleNet_mass_->SetAddress(&FatJet_particleNet_mass_); }
    b_FatJet_phi_ = tree->GetBranch("FatJet_phi");
    if (b_FatJet_phi_) { b_FatJet_phi_->SetAddress(&FatJet_phi_); }
    b_FatJet_pt_ = tree->GetBranch("FatJet_pt");
    if (b_FatJet_pt_) { b_FatJet_pt_->SetAddress(&FatJet_pt_); }
    b_FatJet_pt_jerDown_ = tree->GetBranch("FatJet_pt_jerDown");
    if (b_FatJet_pt_jerDown_) { b_FatJet_pt_jerDown_->SetAddress(&FatJet_pt_jerDown_); }
    b_FatJet_pt_jerUp_ = tree->GetBranch("FatJet_pt_jerUp");
    if (b_FatJet_pt_jerUp_) { b_FatJet_pt_jerUp_->SetAddress(&FatJet_pt_jerUp_); }
    b_FatJet_pt_jesTotalDown_ = tree->GetBranch("FatJet_pt_jesTotalDown");
    if (b_FatJet_pt_jesTotalDown_) { b_FatJet_pt_jesTotalDown_->SetAddress(&FatJet_pt_jesTotalDown_); }
    b_FatJet_pt_jesTotalUp_ = tree->GetBranch("FatJet_pt_jesTotalUp");
    if (b_FatJet_pt_jesTotalUp_) { b_FatJet_pt_jesTotalUp_->SetAddress(&FatJet_pt_jesTotalUp_); }
    b_FatJet_pt_nom_ = tree->GetBranch("FatJet_pt_nom");
    if (b_FatJet_pt_nom_) { b_FatJet_pt_nom_->SetAddress(&FatJet_pt_nom_); }
    b_FatJet_pt_raw_ = tree->GetBranch("FatJet_pt_raw");
    if (b_FatJet_pt_raw_) { b_FatJet_pt_raw_->SetAddress(&FatJet_pt_raw_); }
    b_FatJet_rawFactor_ = tree->GetBranch("FatJet_rawFactor");
    if (b_FatJet_rawFactor_) { b_FatJet_rawFactor_->SetAddress(&FatJet_rawFactor_); }
    b_FatJet_subJetIdx1_ = tree->GetBranch("FatJet_subJetIdx1");
    if (b_FatJet_subJetIdx1_) { b_FatJet_subJetIdx1_->SetAddress(&FatJet_subJetIdx1_); }
    b_FatJet_subJetIdx2_ = tree->GetBranch("FatJet_subJetIdx2");
    if (b_FatJet_subJetIdx2_) { b_FatJet_subJetIdx2_->SetAddress(&FatJet_subJetIdx2_); }
    b_FatJet_tau1_ = tree->GetBranch("FatJet_tau1");
    if (b_FatJet_tau1_) { b_FatJet_tau1_->SetAddress(&FatJet_tau1_); }
    b_FatJet_tau2_ = tree->GetBranch("FatJet_tau2");
    if (b_FatJet_tau2_) { b_FatJet_tau2_->SetAddress(&FatJet_tau2_); }
    b_FatJet_tau3_ = tree->GetBranch("FatJet_tau3");
    if (b_FatJet_tau3_) { b_FatJet_tau3_->SetAddress(&FatJet_tau3_); }
    b_FatJet_tau4_ = tree->GetBranch("FatJet_tau4");
    if (b_FatJet_tau4_) { b_FatJet_tau4_->SetAddress(&FatJet_tau4_); }
    b_Flag_BadChargedCandidateFilter_ = tree->GetBranch("Flag_BadChargedCandidateFilter");
    if (b_Flag_BadChargedCandidateFilter_) { b_Flag_BadChargedCandidateFilter_->SetAddress(&Flag_BadChargedCandidateFilter_); }
    b_Flag_BadChargedCandidateFilter_pRECO_ = tree->GetBranch("Flag_BadChargedCandidateFilter_pRECO");
    if (b_Flag_BadChargedCandidateFilter_pRECO_) { b_Flag_BadChargedCandidateFilter_pRECO_->SetAddress(&Flag_BadChargedCandidateFilter_pRECO_); }
    b_Flag_BadChargedCandidateSummer16Filter_ = tree->GetBranch("Flag_BadChargedCandidateSummer16Filter");
    if (b_Flag_BadChargedCandidateSummer16Filter_) { b_Flag_BadChargedCandidateSummer16Filter_->SetAddress(&Flag_BadChargedCandidateSummer16Filter_); }
    b_Flag_BadChargedCandidateSummer16Filter_pRECO_ = tree->GetBranch("Flag_BadChargedCandidateSummer16Filter_pRECO");
    if (b_Flag_BadChargedCandidateSummer16Filter_pRECO_) { b_Flag_BadChargedCandidateSummer16Filter_pRECO_->SetAddress(&Flag_BadChargedCandidateSummer16Filter_pRECO_); }
    b_Flag_BadPFMuonDzFilter_ = tree->GetBranch("Flag_BadPFMuonDzFilter");
    if (b_Flag_BadPFMuonDzFilter_) { b_Flag_BadPFMuonDzFilter_->SetAddress(&Flag_BadPFMuonDzFilter_); }
    b_Flag_BadPFMuonFilter_ = tree->GetBranch("Flag_BadPFMuonFilter");
    if (b_Flag_BadPFMuonFilter_) { b_Flag_BadPFMuonFilter_->SetAddress(&Flag_BadPFMuonFilter_); }
    b_Flag_BadPFMuonFilter_pRECO_ = tree->GetBranch("Flag_BadPFMuonFilter_pRECO");
    if (b_Flag_BadPFMuonFilter_pRECO_) { b_Flag_BadPFMuonFilter_pRECO_->SetAddress(&Flag_BadPFMuonFilter_pRECO_); }
    b_Flag_BadPFMuonSummer16Filter_ = tree->GetBranch("Flag_BadPFMuonSummer16Filter");
    if (b_Flag_BadPFMuonSummer16Filter_) { b_Flag_BadPFMuonSummer16Filter_->SetAddress(&Flag_BadPFMuonSummer16Filter_); }
    b_Flag_BadPFMuonSummer16Filter_pRECO_ = tree->GetBranch("Flag_BadPFMuonSummer16Filter_pRECO");
    if (b_Flag_BadPFMuonSummer16Filter_pRECO_) { b_Flag_BadPFMuonSummer16Filter_pRECO_->SetAddress(&Flag_BadPFMuonSummer16Filter_pRECO_); }
    b_Flag_CSCTightHalo2015Filter_ = tree->GetBranch("Flag_CSCTightHalo2015Filter");
    if (b_Flag_CSCTightHalo2015Filter_) { b_Flag_CSCTightHalo2015Filter_->SetAddress(&Flag_CSCTightHalo2015Filter_); }
    b_Flag_CSCTightHalo2015Filter_pRECO_ = tree->GetBranch("Flag_CSCTightHalo2015Filter_pRECO");
    if (b_Flag_CSCTightHalo2015Filter_pRECO_) { b_Flag_CSCTightHalo2015Filter_pRECO_->SetAddress(&Flag_CSCTightHalo2015Filter_pRECO_); }
    b_Flag_CSCTightHaloFilter_ = tree->GetBranch("Flag_CSCTightHaloFilter");
    if (b_Flag_CSCTightHaloFilter_) { b_Flag_CSCTightHaloFilter_->SetAddress(&Flag_CSCTightHaloFilter_); }
    b_Flag_CSCTightHaloFilter_pRECO_ = tree->GetBranch("Flag_CSCTightHaloFilter_pRECO");
    if (b_Flag_CSCTightHaloFilter_pRECO_) { b_Flag_CSCTightHaloFilter_pRECO_->SetAddress(&Flag_CSCTightHaloFilter_pRECO_); }
    b_Flag_CSCTightHaloTrkMuUnvetoFilter_ = tree->GetBranch("Flag_CSCTightHaloTrkMuUnvetoFilter");
    if (b_Flag_CSCTightHaloTrkMuUnvetoFilter_) { b_Flag_CSCTightHaloTrkMuUnvetoFilter_->SetAddress(&Flag_CSCTightHaloTrkMuUnvetoFilter_); }
    b_Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO_ = tree->GetBranch("Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO");
    if (b_Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO_) { b_Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO_->SetAddress(&Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO_); }
    b_Flag_EcalDeadCellBoundaryEnergyFilter_ = tree->GetBranch("Flag_EcalDeadCellBoundaryEnergyFilter");
    if (b_Flag_EcalDeadCellBoundaryEnergyFilter_) { b_Flag_EcalDeadCellBoundaryEnergyFilter_->SetAddress(&Flag_EcalDeadCellBoundaryEnergyFilter_); }
    b_Flag_EcalDeadCellBoundaryEnergyFilter_pRECO_ = tree->GetBranch("Flag_EcalDeadCellBoundaryEnergyFilter_pRECO");
    if (b_Flag_EcalDeadCellBoundaryEnergyFilter_pRECO_) { b_Flag_EcalDeadCellBoundaryEnergyFilter_pRECO_->SetAddress(&Flag_EcalDeadCellBoundaryEnergyFilter_pRECO_); }
    b_Flag_EcalDeadCellTriggerPrimitiveFilter_ = tree->GetBranch("Flag_EcalDeadCellTriggerPrimitiveFilter");
    if (b_Flag_EcalDeadCellTriggerPrimitiveFilter_) { b_Flag_EcalDeadCellTriggerPrimitiveFilter_->SetAddress(&Flag_EcalDeadCellTriggerPrimitiveFilter_); }
    b_Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO_ = tree->GetBranch("Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO");
    if (b_Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO_) { b_Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO_->SetAddress(&Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO_); }
    b_Flag_HBHENoiseFilter_ = tree->GetBranch("Flag_HBHENoiseFilter");
    if (b_Flag_HBHENoiseFilter_) { b_Flag_HBHENoiseFilter_->SetAddress(&Flag_HBHENoiseFilter_); }
    b_Flag_HBHENoiseFilter_pRECO_ = tree->GetBranch("Flag_HBHENoiseFilter_pRECO");
    if (b_Flag_HBHENoiseFilter_pRECO_) { b_Flag_HBHENoiseFilter_pRECO_->SetAddress(&Flag_HBHENoiseFilter_pRECO_); }
    b_Flag_HBHENoiseIsoFilter_ = tree->GetBranch("Flag_HBHENoiseIsoFilter");
    if (b_Flag_HBHENoiseIsoFilter_) { b_Flag_HBHENoiseIsoFilter_->SetAddress(&Flag_HBHENoiseIsoFilter_); }
    b_Flag_HBHENoiseIsoFilter_pRECO_ = tree->GetBranch("Flag_HBHENoiseIsoFilter_pRECO");
    if (b_Flag_HBHENoiseIsoFilter_pRECO_) { b_Flag_HBHENoiseIsoFilter_pRECO_->SetAddress(&Flag_HBHENoiseIsoFilter_pRECO_); }
    b_Flag_HcalStripHaloFilter_ = tree->GetBranch("Flag_HcalStripHaloFilter");
    if (b_Flag_HcalStripHaloFilter_) { b_Flag_HcalStripHaloFilter_->SetAddress(&Flag_HcalStripHaloFilter_); }
    b_Flag_HcalStripHaloFilter_pRECO_ = tree->GetBranch("Flag_HcalStripHaloFilter_pRECO");
    if (b_Flag_HcalStripHaloFilter_pRECO_) { b_Flag_HcalStripHaloFilter_pRECO_->SetAddress(&Flag_HcalStripHaloFilter_pRECO_); }
    b_Flag_METFilters_ = tree->GetBranch("Flag_METFilters");
    if (b_Flag_METFilters_) { b_Flag_METFilters_->SetAddress(&Flag_METFilters_); }
    b_Flag_METFilters_pRECO_ = tree->GetBranch("Flag_METFilters_pRECO");
    if (b_Flag_METFilters_pRECO_) { b_Flag_METFilters_pRECO_->SetAddress(&Flag_METFilters_pRECO_); }
    b_Flag_chargedHadronTrackResolutionFilter_ = tree->GetBranch("Flag_chargedHadronTrackResolutionFilter");
    if (b_Flag_chargedHadronTrackResolutionFilter_) { b_Flag_chargedHadronTrackResolutionFilter_->SetAddress(&Flag_chargedHadronTrackResolutionFilter_); }
    b_Flag_chargedHadronTrackResolutionFilter_pRECO_ = tree->GetBranch("Flag_chargedHadronTrackResolutionFilter_pRECO");
    if (b_Flag_chargedHadronTrackResolutionFilter_pRECO_) { b_Flag_chargedHadronTrackResolutionFilter_pRECO_->SetAddress(&Flag_chargedHadronTrackResolutionFilter_pRECO_); }
    b_Flag_ecalBadCalibFilter_ = tree->GetBranch("Flag_ecalBadCalibFilter");
    if (b_Flag_ecalBadCalibFilter_) { b_Flag_ecalBadCalibFilter_->SetAddress(&Flag_ecalBadCalibFilter_); }
    b_Flag_ecalBadCalibFilter_pRECO_ = tree->GetBranch("Flag_ecalBadCalibFilter_pRECO");
    if (b_Flag_ecalBadCalibFilter_pRECO_) { b_Flag_ecalBadCalibFilter_pRECO_->SetAddress(&Flag_ecalBadCalibFilter_pRECO_); }
    b_Flag_ecalLaserCorrFilter_ = tree->GetBranch("Flag_ecalLaserCorrFilter");
    if (b_Flag_ecalLaserCorrFilter_) { b_Flag_ecalLaserCorrFilter_->SetAddress(&Flag_ecalLaserCorrFilter_); }
    b_Flag_ecalLaserCorrFilter_pRECO_ = tree->GetBranch("Flag_ecalLaserCorrFilter_pRECO");
    if (b_Flag_ecalLaserCorrFilter_pRECO_) { b_Flag_ecalLaserCorrFilter_pRECO_->SetAddress(&Flag_ecalLaserCorrFilter_pRECO_); }
    b_Flag_eeBadScFilter_ = tree->GetBranch("Flag_eeBadScFilter");
    if (b_Flag_eeBadScFilter_) { b_Flag_eeBadScFilter_->SetAddress(&Flag_eeBadScFilter_); }
    b_Flag_eeBadScFilter_pRECO_ = tree->GetBranch("Flag_eeBadScFilter_pRECO");
    if (b_Flag_eeBadScFilter_pRECO_) { b_Flag_eeBadScFilter_pRECO_->SetAddress(&Flag_eeBadScFilter_pRECO_); }
    b_Flag_globalSuperTightHalo2016Filter_ = tree->GetBranch("Flag_globalSuperTightHalo2016Filter");
    if (b_Flag_globalSuperTightHalo2016Filter_) { b_Flag_globalSuperTightHalo2016Filter_->SetAddress(&Flag_globalSuperTightHalo2016Filter_); }
    b_Flag_globalSuperTightHalo2016Filter_pRECO_ = tree->GetBranch("Flag_globalSuperTightHalo2016Filter_pRECO");
    if (b_Flag_globalSuperTightHalo2016Filter_pRECO_) { b_Flag_globalSuperTightHalo2016Filter_pRECO_->SetAddress(&Flag_globalSuperTightHalo2016Filter_pRECO_); }
    b_Flag_globalTightHalo2016Filter_ = tree->GetBranch("Flag_globalTightHalo2016Filter");
    if (b_Flag_globalTightHalo2016Filter_) { b_Flag_globalTightHalo2016Filter_->SetAddress(&Flag_globalTightHalo2016Filter_); }
    b_Flag_globalTightHalo2016Filter_pRECO_ = tree->GetBranch("Flag_globalTightHalo2016Filter_pRECO");
    if (b_Flag_globalTightHalo2016Filter_pRECO_) { b_Flag_globalTightHalo2016Filter_pRECO_->SetAddress(&Flag_globalTightHalo2016Filter_pRECO_); }
    b_Flag_goodVertices_ = tree->GetBranch("Flag_goodVertices");
    if (b_Flag_goodVertices_) { b_Flag_goodVertices_->SetAddress(&Flag_goodVertices_); }
    b_Flag_goodVertices_pRECO_ = tree->GetBranch("Flag_goodVertices_pRECO");
    if (b_Flag_goodVertices_pRECO_) { b_Flag_goodVertices_pRECO_->SetAddress(&Flag_goodVertices_pRECO_); }
    b_Flag_hcalLaserEventFilter_ = tree->GetBranch("Flag_hcalLaserEventFilter");
    if (b_Flag_hcalLaserEventFilter_) { b_Flag_hcalLaserEventFilter_->SetAddress(&Flag_hcalLaserEventFilter_); }
    b_Flag_hcalLaserEventFilter_pRECO_ = tree->GetBranch("Flag_hcalLaserEventFilter_pRECO");
    if (b_Flag_hcalLaserEventFilter_pRECO_) { b_Flag_hcalLaserEventFilter_pRECO_->SetAddress(&Flag_hcalLaserEventFilter_pRECO_); }
    b_Flag_hfNoisyHitsFilter_ = tree->GetBranch("Flag_hfNoisyHitsFilter");
    if (b_Flag_hfNoisyHitsFilter_) { b_Flag_hfNoisyHitsFilter_->SetAddress(&Flag_hfNoisyHitsFilter_); }
    b_Flag_muonBadTrackFilter_ = tree->GetBranch("Flag_muonBadTrackFilter");
    if (b_Flag_muonBadTrackFilter_) { b_Flag_muonBadTrackFilter_->SetAddress(&Flag_muonBadTrackFilter_); }
    b_Flag_muonBadTrackFilter_pRECO_ = tree->GetBranch("Flag_muonBadTrackFilter_pRECO");
    if (b_Flag_muonBadTrackFilter_pRECO_) { b_Flag_muonBadTrackFilter_pRECO_->SetAddress(&Flag_muonBadTrackFilter_pRECO_); }
    b_Flag_trkPOGFilters_ = tree->GetBranch("Flag_trkPOGFilters");
    if (b_Flag_trkPOGFilters_) { b_Flag_trkPOGFilters_->SetAddress(&Flag_trkPOGFilters_); }
    b_Flag_trkPOGFilters_pRECO_ = tree->GetBranch("Flag_trkPOGFilters_pRECO");
    if (b_Flag_trkPOGFilters_pRECO_) { b_Flag_trkPOGFilters_pRECO_->SetAddress(&Flag_trkPOGFilters_pRECO_); }
    b_Flag_trkPOG_logErrorTooManyClusters_ = tree->GetBranch("Flag_trkPOG_logErrorTooManyClusters");
    if (b_Flag_trkPOG_logErrorTooManyClusters_) { b_Flag_trkPOG_logErrorTooManyClusters_->SetAddress(&Flag_trkPOG_logErrorTooManyClusters_); }
    b_Flag_trkPOG_logErrorTooManyClusters_pRECO_ = tree->GetBranch("Flag_trkPOG_logErrorTooManyClusters_pRECO");
    if (b_Flag_trkPOG_logErrorTooManyClusters_pRECO_) { b_Flag_trkPOG_logErrorTooManyClusters_pRECO_->SetAddress(&Flag_trkPOG_logErrorTooManyClusters_pRECO_); }
    b_Flag_trkPOG_manystripclus53X_ = tree->GetBranch("Flag_trkPOG_manystripclus53X");
    if (b_Flag_trkPOG_manystripclus53X_) { b_Flag_trkPOG_manystripclus53X_->SetAddress(&Flag_trkPOG_manystripclus53X_); }
    b_Flag_trkPOG_manystripclus53X_pRECO_ = tree->GetBranch("Flag_trkPOG_manystripclus53X_pRECO");
    if (b_Flag_trkPOG_manystripclus53X_pRECO_) { b_Flag_trkPOG_manystripclus53X_pRECO_->SetAddress(&Flag_trkPOG_manystripclus53X_pRECO_); }
    b_Flag_trkPOG_toomanystripclus53X_ = tree->GetBranch("Flag_trkPOG_toomanystripclus53X");
    if (b_Flag_trkPOG_toomanystripclus53X_) { b_Flag_trkPOG_toomanystripclus53X_->SetAddress(&Flag_trkPOG_toomanystripclus53X_); }
    b_Flag_trkPOG_toomanystripclus53X_pRECO_ = tree->GetBranch("Flag_trkPOG_toomanystripclus53X_pRECO");
    if (b_Flag_trkPOG_toomanystripclus53X_pRECO_) { b_Flag_trkPOG_toomanystripclus53X_pRECO_->SetAddress(&Flag_trkPOG_toomanystripclus53X_pRECO_); }
    b_FsrPhoton_dROverEt2_ = tree->GetBranch("FsrPhoton_dROverEt2");
    if (b_FsrPhoton_dROverEt2_) { b_FsrPhoton_dROverEt2_->SetAddress(&FsrPhoton_dROverEt2_); }
    b_FsrPhoton_electronIdx_ = tree->GetBranch("FsrPhoton_electronIdx");
    if (b_FsrPhoton_electronIdx_) { b_FsrPhoton_electronIdx_->SetAddress(&FsrPhoton_electronIdx_); }
    b_FsrPhoton_eta_ = tree->GetBranch("FsrPhoton_eta");
    if (b_FsrPhoton_eta_) { b_FsrPhoton_eta_->SetAddress(&FsrPhoton_eta_); }
    b_FsrPhoton_muonIdx_ = tree->GetBranch("FsrPhoton_muonIdx");
    if (b_FsrPhoton_muonIdx_) { b_FsrPhoton_muonIdx_->SetAddress(&FsrPhoton_muonIdx_); }
    b_FsrPhoton_phi_ = tree->GetBranch("FsrPhoton_phi");
    if (b_FsrPhoton_phi_) { b_FsrPhoton_phi_->SetAddress(&FsrPhoton_phi_); }
    b_FsrPhoton_pt_ = tree->GetBranch("FsrPhoton_pt");
    if (b_FsrPhoton_pt_) { b_FsrPhoton_pt_->SetAddress(&FsrPhoton_pt_); }
    b_FsrPhoton_relIso03_ = tree->GetBranch("FsrPhoton_relIso03");
    if (b_FsrPhoton_relIso03_) { b_FsrPhoton_relIso03_->SetAddress(&FsrPhoton_relIso03_); }
    b_GenDressedLepton_eta_ = tree->GetBranch("GenDressedLepton_eta");
    if (b_GenDressedLepton_eta_) { b_GenDressedLepton_eta_->SetAddress(&GenDressedLepton_eta_); }
    b_GenDressedLepton_hasTauAnc_ = tree->GetBranch("GenDressedLepton_hasTauAnc");
    if (b_GenDressedLepton_hasTauAnc_) { b_GenDressedLepton_hasTauAnc_->SetAddress(&GenDressedLepton_hasTauAnc_); }
    b_GenDressedLepton_mass_ = tree->GetBranch("GenDressedLepton_mass");
    if (b_GenDressedLepton_mass_) { b_GenDressedLepton_mass_->SetAddress(&GenDressedLepton_mass_); }
    b_GenDressedLepton_pdgId_ = tree->GetBranch("GenDressedLepton_pdgId");
    if (b_GenDressedLepton_pdgId_) { b_GenDressedLepton_pdgId_->SetAddress(&GenDressedLepton_pdgId_); }
    b_GenDressedLepton_phi_ = tree->GetBranch("GenDressedLepton_phi");
    if (b_GenDressedLepton_phi_) { b_GenDressedLepton_phi_->SetAddress(&GenDressedLepton_phi_); }
    b_GenDressedLepton_pt_ = tree->GetBranch("GenDressedLepton_pt");
    if (b_GenDressedLepton_pt_) { b_GenDressedLepton_pt_->SetAddress(&GenDressedLepton_pt_); }
    b_GenIsolatedPhoton_eta_ = tree->GetBranch("GenIsolatedPhoton_eta");
    if (b_GenIsolatedPhoton_eta_) { b_GenIsolatedPhoton_eta_->SetAddress(&GenIsolatedPhoton_eta_); }
    b_GenIsolatedPhoton_mass_ = tree->GetBranch("GenIsolatedPhoton_mass");
    if (b_GenIsolatedPhoton_mass_) { b_GenIsolatedPhoton_mass_->SetAddress(&GenIsolatedPhoton_mass_); }
    b_GenIsolatedPhoton_phi_ = tree->GetBranch("GenIsolatedPhoton_phi");
    if (b_GenIsolatedPhoton_phi_) { b_GenIsolatedPhoton_phi_->SetAddress(&GenIsolatedPhoton_phi_); }
    b_GenIsolatedPhoton_pt_ = tree->GetBranch("GenIsolatedPhoton_pt");
    if (b_GenIsolatedPhoton_pt_) { b_GenIsolatedPhoton_pt_->SetAddress(&GenIsolatedPhoton_pt_); }
    b_GenJetAK8_eta_ = tree->GetBranch("GenJetAK8_eta");
    if (b_GenJetAK8_eta_) { b_GenJetAK8_eta_->SetAddress(&GenJetAK8_eta_); }
    b_GenJetAK8_hadronFlavour_ = tree->GetBranch("GenJetAK8_hadronFlavour");
    if (b_GenJetAK8_hadronFlavour_) { b_GenJetAK8_hadronFlavour_->SetAddress(&GenJetAK8_hadronFlavour_); }
    b_GenJetAK8_mass_ = tree->GetBranch("GenJetAK8_mass");
    if (b_GenJetAK8_mass_) { b_GenJetAK8_mass_->SetAddress(&GenJetAK8_mass_); }
    b_GenJetAK8_partonFlavour_ = tree->GetBranch("GenJetAK8_partonFlavour");
    if (b_GenJetAK8_partonFlavour_) { b_GenJetAK8_partonFlavour_->SetAddress(&GenJetAK8_partonFlavour_); }
    b_GenJetAK8_phi_ = tree->GetBranch("GenJetAK8_phi");
    if (b_GenJetAK8_phi_) { b_GenJetAK8_phi_->SetAddress(&GenJetAK8_phi_); }
    b_GenJetAK8_pt_ = tree->GetBranch("GenJetAK8_pt");
    if (b_GenJetAK8_pt_) { b_GenJetAK8_pt_->SetAddress(&GenJetAK8_pt_); }
    b_GenJet_eta_ = tree->GetBranch("GenJet_eta");
    if (b_GenJet_eta_) { b_GenJet_eta_->SetAddress(&GenJet_eta_); }
    b_GenJet_hadronFlavour_ = tree->GetBranch("GenJet_hadronFlavour");
    if (b_GenJet_hadronFlavour_) { b_GenJet_hadronFlavour_->SetAddress(&GenJet_hadronFlavour_); }
    b_GenJet_mass_ = tree->GetBranch("GenJet_mass");
    if (b_GenJet_mass_) { b_GenJet_mass_->SetAddress(&GenJet_mass_); }
    b_GenJet_partonFlavour_ = tree->GetBranch("GenJet_partonFlavour");
    if (b_GenJet_partonFlavour_) { b_GenJet_partonFlavour_->SetAddress(&GenJet_partonFlavour_); }
    b_GenJet_phi_ = tree->GetBranch("GenJet_phi");
    if (b_GenJet_phi_) { b_GenJet_phi_->SetAddress(&GenJet_phi_); }
    b_GenJet_pt_ = tree->GetBranch("GenJet_pt");
    if (b_GenJet_pt_) { b_GenJet_pt_->SetAddress(&GenJet_pt_); }
    b_GenMET_phi_ = tree->GetBranch("GenMET_phi");
    if (b_GenMET_phi_) { b_GenMET_phi_->SetAddress(&GenMET_phi_); }
    b_GenMET_pt_ = tree->GetBranch("GenMET_pt");
    if (b_GenMET_pt_) { b_GenMET_pt_->SetAddress(&GenMET_pt_); }
    b_GenPart_eta_ = tree->GetBranch("GenPart_eta");
    if (b_GenPart_eta_) { b_GenPart_eta_->SetAddress(&GenPart_eta_); }
    b_GenPart_genPartIdxMother_ = tree->GetBranch("GenPart_genPartIdxMother");
    if (b_GenPart_genPartIdxMother_) { b_GenPart_genPartIdxMother_->SetAddress(&GenPart_genPartIdxMother_); }
    b_GenPart_mass_ = tree->GetBranch("GenPart_mass");
    if (b_GenPart_mass_) { b_GenPart_mass_->SetAddress(&GenPart_mass_); }
    b_GenPart_pdgId_ = tree->GetBranch("GenPart_pdgId");
    if (b_GenPart_pdgId_) { b_GenPart_pdgId_->SetAddress(&GenPart_pdgId_); }
    b_GenPart_phi_ = tree->GetBranch("GenPart_phi");
    if (b_GenPart_phi_) { b_GenPart_phi_->SetAddress(&GenPart_phi_); }
    b_GenPart_pt_ = tree->GetBranch("GenPart_pt");
    if (b_GenPart_pt_) { b_GenPart_pt_->SetAddress(&GenPart_pt_); }
    b_GenPart_status_ = tree->GetBranch("GenPart_status");
    if (b_GenPart_status_) { b_GenPart_status_->SetAddress(&GenPart_status_); }
    b_GenPart_statusFlags_ = tree->GetBranch("GenPart_statusFlags");
    if (b_GenPart_statusFlags_) { b_GenPart_statusFlags_->SetAddress(&GenPart_statusFlags_); }
    b_GenProton_isPU_ = tree->GetBranch("GenProton_isPU");
    if (b_GenProton_isPU_) { b_GenProton_isPU_->SetAddress(&GenProton_isPU_); }
    b_GenProton_px_ = tree->GetBranch("GenProton_px");
    if (b_GenProton_px_) { b_GenProton_px_->SetAddress(&GenProton_px_); }
    b_GenProton_py_ = tree->GetBranch("GenProton_py");
    if (b_GenProton_py_) { b_GenProton_py_->SetAddress(&GenProton_py_); }
    b_GenProton_pz_ = tree->GetBranch("GenProton_pz");
    if (b_GenProton_pz_) { b_GenProton_pz_->SetAddress(&GenProton_pz_); }
    b_GenProton_vz_ = tree->GetBranch("GenProton_vz");
    if (b_GenProton_vz_) { b_GenProton_vz_->SetAddress(&GenProton_vz_); }
    b_GenVisTau_charge_ = tree->GetBranch("GenVisTau_charge");
    if (b_GenVisTau_charge_) { b_GenVisTau_charge_->SetAddress(&GenVisTau_charge_); }
    b_GenVisTau_eta_ = tree->GetBranch("GenVisTau_eta");
    if (b_GenVisTau_eta_) { b_GenVisTau_eta_->SetAddress(&GenVisTau_eta_); }
    b_GenVisTau_genPartIdxMother_ = tree->GetBranch("GenVisTau_genPartIdxMother");
    if (b_GenVisTau_genPartIdxMother_) { b_GenVisTau_genPartIdxMother_->SetAddress(&GenVisTau_genPartIdxMother_); }
    b_GenVisTau_mass_ = tree->GetBranch("GenVisTau_mass");
    if (b_GenVisTau_mass_) { b_GenVisTau_mass_->SetAddress(&GenVisTau_mass_); }
    b_GenVisTau_phi_ = tree->GetBranch("GenVisTau_phi");
    if (b_GenVisTau_phi_) { b_GenVisTau_phi_->SetAddress(&GenVisTau_phi_); }
    b_GenVisTau_pt_ = tree->GetBranch("GenVisTau_pt");
    if (b_GenVisTau_pt_) { b_GenVisTau_pt_->SetAddress(&GenVisTau_pt_); }
    b_GenVisTau_status_ = tree->GetBranch("GenVisTau_status");
    if (b_GenVisTau_status_) { b_GenVisTau_status_->SetAddress(&GenVisTau_status_); }
    b_GenVtx_t0_ = tree->GetBranch("GenVtx_t0");
    if (b_GenVtx_t0_) { b_GenVtx_t0_->SetAddress(&GenVtx_t0_); }
    b_GenVtx_x_ = tree->GetBranch("GenVtx_x");
    if (b_GenVtx_x_) { b_GenVtx_x_->SetAddress(&GenVtx_x_); }
    b_GenVtx_y_ = tree->GetBranch("GenVtx_y");
    if (b_GenVtx_y_) { b_GenVtx_y_->SetAddress(&GenVtx_y_); }
    b_GenVtx_z_ = tree->GetBranch("GenVtx_z");
    if (b_GenVtx_z_) { b_GenVtx_z_->SetAddress(&GenVtx_z_); }
    b_Generator_binvar_ = tree->GetBranch("Generator_binvar");
    if (b_Generator_binvar_) { b_Generator_binvar_->SetAddress(&Generator_binvar_); }
    b_Generator_id1_ = tree->GetBranch("Generator_id1");
    if (b_Generator_id1_) { b_Generator_id1_->SetAddress(&Generator_id1_); }
    b_Generator_id2_ = tree->GetBranch("Generator_id2");
    if (b_Generator_id2_) { b_Generator_id2_->SetAddress(&Generator_id2_); }
    b_Generator_scalePDF_ = tree->GetBranch("Generator_scalePDF");
    if (b_Generator_scalePDF_) { b_Generator_scalePDF_->SetAddress(&Generator_scalePDF_); }
    b_Generator_weight_ = tree->GetBranch("Generator_weight");
    if (b_Generator_weight_) { b_Generator_weight_->SetAddress(&Generator_weight_); }
    b_Generator_x1_ = tree->GetBranch("Generator_x1");
    if (b_Generator_x1_) { b_Generator_x1_->SetAddress(&Generator_x1_); }
    b_Generator_x2_ = tree->GetBranch("Generator_x2");
    if (b_Generator_x2_) { b_Generator_x2_->SetAddress(&Generator_x2_); }
    b_Generator_xpdf1_ = tree->GetBranch("Generator_xpdf1");
    if (b_Generator_xpdf1_) { b_Generator_xpdf1_->SetAddress(&Generator_xpdf1_); }
    b_Generator_xpdf2_ = tree->GetBranch("Generator_xpdf2");
    if (b_Generator_xpdf2_) { b_Generator_xpdf2_->SetAddress(&Generator_xpdf2_); }
    b_HLT_AK4CaloJet100_ = tree->GetBranch("HLT_AK4CaloJet100");
    if (b_HLT_AK4CaloJet100_) { b_HLT_AK4CaloJet100_->SetAddress(&HLT_AK4CaloJet100_); }
    b_HLT_AK4CaloJet120_ = tree->GetBranch("HLT_AK4CaloJet120");
    if (b_HLT_AK4CaloJet120_) { b_HLT_AK4CaloJet120_->SetAddress(&HLT_AK4CaloJet120_); }
    b_HLT_AK4CaloJet30_ = tree->GetBranch("HLT_AK4CaloJet30");
    if (b_HLT_AK4CaloJet30_) { b_HLT_AK4CaloJet30_->SetAddress(&HLT_AK4CaloJet30_); }
    b_HLT_AK4CaloJet40_ = tree->GetBranch("HLT_AK4CaloJet40");
    if (b_HLT_AK4CaloJet40_) { b_HLT_AK4CaloJet40_->SetAddress(&HLT_AK4CaloJet40_); }
    b_HLT_AK4CaloJet50_ = tree->GetBranch("HLT_AK4CaloJet50");
    if (b_HLT_AK4CaloJet50_) { b_HLT_AK4CaloJet50_->SetAddress(&HLT_AK4CaloJet50_); }
    b_HLT_AK4CaloJet80_ = tree->GetBranch("HLT_AK4CaloJet80");
    if (b_HLT_AK4CaloJet80_) { b_HLT_AK4CaloJet80_->SetAddress(&HLT_AK4CaloJet80_); }
    b_HLT_AK4PFJet100_ = tree->GetBranch("HLT_AK4PFJet100");
    if (b_HLT_AK4PFJet100_) { b_HLT_AK4PFJet100_->SetAddress(&HLT_AK4PFJet100_); }
    b_HLT_AK4PFJet120_ = tree->GetBranch("HLT_AK4PFJet120");
    if (b_HLT_AK4PFJet120_) { b_HLT_AK4PFJet120_->SetAddress(&HLT_AK4PFJet120_); }
    b_HLT_AK4PFJet30_ = tree->GetBranch("HLT_AK4PFJet30");
    if (b_HLT_AK4PFJet30_) { b_HLT_AK4PFJet30_->SetAddress(&HLT_AK4PFJet30_); }
    b_HLT_AK4PFJet50_ = tree->GetBranch("HLT_AK4PFJet50");
    if (b_HLT_AK4PFJet50_) { b_HLT_AK4PFJet50_->SetAddress(&HLT_AK4PFJet50_); }
    b_HLT_AK4PFJet80_ = tree->GetBranch("HLT_AK4PFJet80");
    if (b_HLT_AK4PFJet80_) { b_HLT_AK4PFJet80_->SetAddress(&HLT_AK4PFJet80_); }
    b_HLT_AK8DiPFJet250_200_TrimMass30_ = tree->GetBranch("HLT_AK8DiPFJet250_200_TrimMass30");
    if (b_HLT_AK8DiPFJet250_200_TrimMass30_) { b_HLT_AK8DiPFJet250_200_TrimMass30_->SetAddress(&HLT_AK8DiPFJet250_200_TrimMass30_); }
    b_HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20_ = tree->GetBranch("HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20");
    if (b_HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20_) { b_HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20_->SetAddress(&HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20_); }
    b_HLT_AK8DiPFJet250_250_MassSD30_ = tree->GetBranch("HLT_AK8DiPFJet250_250_MassSD30");
    if (b_HLT_AK8DiPFJet250_250_MassSD30_) { b_HLT_AK8DiPFJet250_250_MassSD30_->SetAddress(&HLT_AK8DiPFJet250_250_MassSD30_); }
    b_HLT_AK8DiPFJet250_250_MassSD50_ = tree->GetBranch("HLT_AK8DiPFJet250_250_MassSD50");
    if (b_HLT_AK8DiPFJet250_250_MassSD50_) { b_HLT_AK8DiPFJet250_250_MassSD50_->SetAddress(&HLT_AK8DiPFJet250_250_MassSD50_); }
    b_HLT_AK8DiPFJet260_260_MassSD30_ = tree->GetBranch("HLT_AK8DiPFJet260_260_MassSD30");
    if (b_HLT_AK8DiPFJet260_260_MassSD30_) { b_HLT_AK8DiPFJet260_260_MassSD30_->SetAddress(&HLT_AK8DiPFJet260_260_MassSD30_); }
    b_HLT_AK8DiPFJet270_270_MassSD30_ = tree->GetBranch("HLT_AK8DiPFJet270_270_MassSD30");
    if (b_HLT_AK8DiPFJet270_270_MassSD30_) { b_HLT_AK8DiPFJet270_270_MassSD30_->SetAddress(&HLT_AK8DiPFJet270_270_MassSD30_); }
    b_HLT_AK8DiPFJet280_200_TrimMass30_ = tree->GetBranch("HLT_AK8DiPFJet280_200_TrimMass30");
    if (b_HLT_AK8DiPFJet280_200_TrimMass30_) { b_HLT_AK8DiPFJet280_200_TrimMass30_->SetAddress(&HLT_AK8DiPFJet280_200_TrimMass30_); }
    b_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087_ = tree->GetBranch("HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087");
    if (b_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087_) { b_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087_->SetAddress(&HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087_); }
    b_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20_ = tree->GetBranch("HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20");
    if (b_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20_) { b_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20_->SetAddress(&HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20_); }
    b_HLT_AK8DiPFJet300_200_TrimMass30_ = tree->GetBranch("HLT_AK8DiPFJet300_200_TrimMass30");
    if (b_HLT_AK8DiPFJet300_200_TrimMass30_) { b_HLT_AK8DiPFJet300_200_TrimMass30_->SetAddress(&HLT_AK8DiPFJet300_200_TrimMass30_); }
    b_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087_ = tree->GetBranch("HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087");
    if (b_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087_) { b_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087_->SetAddress(&HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087_); }
    b_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20_ = tree->GetBranch("HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20");
    if (b_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20_) { b_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20_->SetAddress(&HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20_); }
    b_HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20_ = tree->GetBranch("HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20");
    if (b_HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20_) { b_HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20_->SetAddress(&HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20_); }
    b_HLT_AK8PFHT650_TrimR0p1PT0p03Mass50_ = tree->GetBranch("HLT_AK8PFHT650_TrimR0p1PT0p03Mass50");
    if (b_HLT_AK8PFHT650_TrimR0p1PT0p03Mass50_) { b_HLT_AK8PFHT650_TrimR0p1PT0p03Mass50_->SetAddress(&HLT_AK8PFHT650_TrimR0p1PT0p03Mass50_); }
    b_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_ = tree->GetBranch("HLT_AK8PFHT700_TrimR0p1PT0p03Mass50");
    if (b_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_) { b_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_->SetAddress(&HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_); }
    b_HLT_AK8PFHT750_TrimMass50_ = tree->GetBranch("HLT_AK8PFHT750_TrimMass50");
    if (b_HLT_AK8PFHT750_TrimMass50_) { b_HLT_AK8PFHT750_TrimMass50_->SetAddress(&HLT_AK8PFHT750_TrimMass50_); }
    b_HLT_AK8PFHT800_TrimMass50_ = tree->GetBranch("HLT_AK8PFHT800_TrimMass50");
    if (b_HLT_AK8PFHT800_TrimMass50_) { b_HLT_AK8PFHT800_TrimMass50_->SetAddress(&HLT_AK8PFHT800_TrimMass50_); }
    b_HLT_AK8PFHT850_TrimMass50_ = tree->GetBranch("HLT_AK8PFHT850_TrimMass50");
    if (b_HLT_AK8PFHT850_TrimMass50_) { b_HLT_AK8PFHT850_TrimMass50_->SetAddress(&HLT_AK8PFHT850_TrimMass50_); }
    b_HLT_AK8PFHT900_TrimMass50_ = tree->GetBranch("HLT_AK8PFHT900_TrimMass50");
    if (b_HLT_AK8PFHT900_TrimMass50_) { b_HLT_AK8PFHT900_TrimMass50_->SetAddress(&HLT_AK8PFHT900_TrimMass50_); }
    b_HLT_AK8PFJet140_ = tree->GetBranch("HLT_AK8PFJet140");
    if (b_HLT_AK8PFJet140_) { b_HLT_AK8PFJet140_->SetAddress(&HLT_AK8PFJet140_); }
    b_HLT_AK8PFJet15_ = tree->GetBranch("HLT_AK8PFJet15");
    if (b_HLT_AK8PFJet15_) { b_HLT_AK8PFJet15_->SetAddress(&HLT_AK8PFJet15_); }
    b_HLT_AK8PFJet200_ = tree->GetBranch("HLT_AK8PFJet200");
    if (b_HLT_AK8PFJet200_) { b_HLT_AK8PFJet200_->SetAddress(&HLT_AK8PFJet200_); }
    b_HLT_AK8PFJet230_SoftDropMass40_ = tree->GetBranch("HLT_AK8PFJet230_SoftDropMass40");
    if (b_HLT_AK8PFJet230_SoftDropMass40_) { b_HLT_AK8PFJet230_SoftDropMass40_->SetAddress(&HLT_AK8PFJet230_SoftDropMass40_); }
    b_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_ = tree->GetBranch("HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35");
    if (b_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_) { b_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_->SetAddress(&HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_); }
    b_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_ = tree->GetBranch("HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30");
    if (b_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_) { b_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_->SetAddress(&HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_); }
    b_HLT_AK8PFJet25_ = tree->GetBranch("HLT_AK8PFJet25");
    if (b_HLT_AK8PFJet25_) { b_HLT_AK8PFJet25_->SetAddress(&HLT_AK8PFJet25_); }
    b_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_ = tree->GetBranch("HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35");
    if (b_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_) { b_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_->SetAddress(&HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_); }
    b_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_ = tree->GetBranch("HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30");
    if (b_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_) { b_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_->SetAddress(&HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_); }
    b_HLT_AK8PFJet260_ = tree->GetBranch("HLT_AK8PFJet260");
    if (b_HLT_AK8PFJet260_) { b_HLT_AK8PFJet260_->SetAddress(&HLT_AK8PFJet260_); }
    b_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_ = tree->GetBranch("HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35");
    if (b_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_) { b_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_->SetAddress(&HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_); }
    b_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_ = tree->GetBranch("HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30");
    if (b_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_) { b_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_->SetAddress(&HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_); }
    b_HLT_AK8PFJet320_ = tree->GetBranch("HLT_AK8PFJet320");
    if (b_HLT_AK8PFJet320_) { b_HLT_AK8PFJet320_->SetAddress(&HLT_AK8PFJet320_); }
    b_HLT_AK8PFJet330_PFAK8BTagCSV_p1_ = tree->GetBranch("HLT_AK8PFJet330_PFAK8BTagCSV_p1");
    if (b_HLT_AK8PFJet330_PFAK8BTagCSV_p1_) { b_HLT_AK8PFJet330_PFAK8BTagCSV_p1_->SetAddress(&HLT_AK8PFJet330_PFAK8BTagCSV_p1_); }
    b_HLT_AK8PFJet330_PFAK8BTagCSV_p17_ = tree->GetBranch("HLT_AK8PFJet330_PFAK8BTagCSV_p17");
    if (b_HLT_AK8PFJet330_PFAK8BTagCSV_p17_) { b_HLT_AK8PFJet330_PFAK8BTagCSV_p17_->SetAddress(&HLT_AK8PFJet330_PFAK8BTagCSV_p17_); }
    b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1_ = tree->GetBranch("HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1");
    if (b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1_) { b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1_->SetAddress(&HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1_); }
    b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17_ = tree->GetBranch("HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17");
    if (b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17_) { b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17_->SetAddress(&HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17_); }
    b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_ = tree->GetBranch("HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1");
    if (b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_) { b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_->SetAddress(&HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_); }
    b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_ = tree->GetBranch("HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17");
    if (b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_) { b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_->SetAddress(&HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_); }
    b_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_ = tree->GetBranch("HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2");
    if (b_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_) { b_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_->SetAddress(&HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_); }
    b_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_ = tree->GetBranch("HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4");
    if (b_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_) { b_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_->SetAddress(&HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_); }
    b_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_ = tree->GetBranch("HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02");
    if (b_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_) { b_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_->SetAddress(&HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_); }
    b_HLT_AK8PFJet360_TrimMass30_ = tree->GetBranch("HLT_AK8PFJet360_TrimMass30");
    if (b_HLT_AK8PFJet360_TrimMass30_) { b_HLT_AK8PFJet360_TrimMass30_->SetAddress(&HLT_AK8PFJet360_TrimMass30_); }
    b_HLT_AK8PFJet380_TrimMass30_ = tree->GetBranch("HLT_AK8PFJet380_TrimMass30");
    if (b_HLT_AK8PFJet380_TrimMass30_) { b_HLT_AK8PFJet380_TrimMass30_->SetAddress(&HLT_AK8PFJet380_TrimMass30_); }
    b_HLT_AK8PFJet40_ = tree->GetBranch("HLT_AK8PFJet40");
    if (b_HLT_AK8PFJet40_) { b_HLT_AK8PFJet40_->SetAddress(&HLT_AK8PFJet40_); }
    b_HLT_AK8PFJet400_ = tree->GetBranch("HLT_AK8PFJet400");
    if (b_HLT_AK8PFJet400_) { b_HLT_AK8PFJet400_->SetAddress(&HLT_AK8PFJet400_); }
    b_HLT_AK8PFJet400_MassSD30_ = tree->GetBranch("HLT_AK8PFJet400_MassSD30");
    if (b_HLT_AK8PFJet400_MassSD30_) { b_HLT_AK8PFJet400_MassSD30_->SetAddress(&HLT_AK8PFJet400_MassSD30_); }
    b_HLT_AK8PFJet400_SoftDropMass40_ = tree->GetBranch("HLT_AK8PFJet400_SoftDropMass40");
    if (b_HLT_AK8PFJet400_SoftDropMass40_) { b_HLT_AK8PFJet400_SoftDropMass40_->SetAddress(&HLT_AK8PFJet400_SoftDropMass40_); }
    b_HLT_AK8PFJet400_TrimMass30_ = tree->GetBranch("HLT_AK8PFJet400_TrimMass30");
    if (b_HLT_AK8PFJet400_TrimMass30_) { b_HLT_AK8PFJet400_TrimMass30_->SetAddress(&HLT_AK8PFJet400_TrimMass30_); }
    b_HLT_AK8PFJet420_MassSD30_ = tree->GetBranch("HLT_AK8PFJet420_MassSD30");
    if (b_HLT_AK8PFJet420_MassSD30_) { b_HLT_AK8PFJet420_MassSD30_->SetAddress(&HLT_AK8PFJet420_MassSD30_); }
    b_HLT_AK8PFJet420_TrimMass30_ = tree->GetBranch("HLT_AK8PFJet420_TrimMass30");
    if (b_HLT_AK8PFJet420_TrimMass30_) { b_HLT_AK8PFJet420_TrimMass30_->SetAddress(&HLT_AK8PFJet420_TrimMass30_); }
    b_HLT_AK8PFJet425_SoftDropMass40_ = tree->GetBranch("HLT_AK8PFJet425_SoftDropMass40");
    if (b_HLT_AK8PFJet425_SoftDropMass40_) { b_HLT_AK8PFJet425_SoftDropMass40_->SetAddress(&HLT_AK8PFJet425_SoftDropMass40_); }
    b_HLT_AK8PFJet450_ = tree->GetBranch("HLT_AK8PFJet450");
    if (b_HLT_AK8PFJet450_) { b_HLT_AK8PFJet450_->SetAddress(&HLT_AK8PFJet450_); }
    b_HLT_AK8PFJet450_MassSD30_ = tree->GetBranch("HLT_AK8PFJet450_MassSD30");
    if (b_HLT_AK8PFJet450_MassSD30_) { b_HLT_AK8PFJet450_MassSD30_->SetAddress(&HLT_AK8PFJet450_MassSD30_); }
    b_HLT_AK8PFJet450_SoftDropMass40_ = tree->GetBranch("HLT_AK8PFJet450_SoftDropMass40");
    if (b_HLT_AK8PFJet450_SoftDropMass40_) { b_HLT_AK8PFJet450_SoftDropMass40_->SetAddress(&HLT_AK8PFJet450_SoftDropMass40_); }
    b_HLT_AK8PFJet500_ = tree->GetBranch("HLT_AK8PFJet500");
    if (b_HLT_AK8PFJet500_) { b_HLT_AK8PFJet500_->SetAddress(&HLT_AK8PFJet500_); }
    b_HLT_AK8PFJet550_ = tree->GetBranch("HLT_AK8PFJet550");
    if (b_HLT_AK8PFJet550_) { b_HLT_AK8PFJet550_->SetAddress(&HLT_AK8PFJet550_); }
    b_HLT_AK8PFJet60_ = tree->GetBranch("HLT_AK8PFJet60");
    if (b_HLT_AK8PFJet60_) { b_HLT_AK8PFJet60_->SetAddress(&HLT_AK8PFJet60_); }
    b_HLT_AK8PFJet80_ = tree->GetBranch("HLT_AK8PFJet80");
    if (b_HLT_AK8PFJet80_) { b_HLT_AK8PFJet80_->SetAddress(&HLT_AK8PFJet80_); }
    b_HLT_AK8PFJetFwd140_ = tree->GetBranch("HLT_AK8PFJetFwd140");
    if (b_HLT_AK8PFJetFwd140_) { b_HLT_AK8PFJetFwd140_->SetAddress(&HLT_AK8PFJetFwd140_); }
    b_HLT_AK8PFJetFwd15_ = tree->GetBranch("HLT_AK8PFJetFwd15");
    if (b_HLT_AK8PFJetFwd15_) { b_HLT_AK8PFJetFwd15_->SetAddress(&HLT_AK8PFJetFwd15_); }
    b_HLT_AK8PFJetFwd200_ = tree->GetBranch("HLT_AK8PFJetFwd200");
    if (b_HLT_AK8PFJetFwd200_) { b_HLT_AK8PFJetFwd200_->SetAddress(&HLT_AK8PFJetFwd200_); }
    b_HLT_AK8PFJetFwd25_ = tree->GetBranch("HLT_AK8PFJetFwd25");
    if (b_HLT_AK8PFJetFwd25_) { b_HLT_AK8PFJetFwd25_->SetAddress(&HLT_AK8PFJetFwd25_); }
    b_HLT_AK8PFJetFwd260_ = tree->GetBranch("HLT_AK8PFJetFwd260");
    if (b_HLT_AK8PFJetFwd260_) { b_HLT_AK8PFJetFwd260_->SetAddress(&HLT_AK8PFJetFwd260_); }
    b_HLT_AK8PFJetFwd320_ = tree->GetBranch("HLT_AK8PFJetFwd320");
    if (b_HLT_AK8PFJetFwd320_) { b_HLT_AK8PFJetFwd320_->SetAddress(&HLT_AK8PFJetFwd320_); }
    b_HLT_AK8PFJetFwd40_ = tree->GetBranch("HLT_AK8PFJetFwd40");
    if (b_HLT_AK8PFJetFwd40_) { b_HLT_AK8PFJetFwd40_->SetAddress(&HLT_AK8PFJetFwd40_); }
    b_HLT_AK8PFJetFwd400_ = tree->GetBranch("HLT_AK8PFJetFwd400");
    if (b_HLT_AK8PFJetFwd400_) { b_HLT_AK8PFJetFwd400_->SetAddress(&HLT_AK8PFJetFwd400_); }
    b_HLT_AK8PFJetFwd450_ = tree->GetBranch("HLT_AK8PFJetFwd450");
    if (b_HLT_AK8PFJetFwd450_) { b_HLT_AK8PFJetFwd450_->SetAddress(&HLT_AK8PFJetFwd450_); }
    b_HLT_AK8PFJetFwd500_ = tree->GetBranch("HLT_AK8PFJetFwd500");
    if (b_HLT_AK8PFJetFwd500_) { b_HLT_AK8PFJetFwd500_->SetAddress(&HLT_AK8PFJetFwd500_); }
    b_HLT_AK8PFJetFwd60_ = tree->GetBranch("HLT_AK8PFJetFwd60");
    if (b_HLT_AK8PFJetFwd60_) { b_HLT_AK8PFJetFwd60_->SetAddress(&HLT_AK8PFJetFwd60_); }
    b_HLT_AK8PFJetFwd80_ = tree->GetBranch("HLT_AK8PFJetFwd80");
    if (b_HLT_AK8PFJetFwd80_) { b_HLT_AK8PFJetFwd80_->SetAddress(&HLT_AK8PFJetFwd80_); }
    b_HLT_BTagMu_AK4DiJet110_Mu5_ = tree->GetBranch("HLT_BTagMu_AK4DiJet110_Mu5");
    if (b_HLT_BTagMu_AK4DiJet110_Mu5_) { b_HLT_BTagMu_AK4DiJet110_Mu5_->SetAddress(&HLT_BTagMu_AK4DiJet110_Mu5_); }
    b_HLT_BTagMu_AK4DiJet110_Mu5_noalgo_ = tree->GetBranch("HLT_BTagMu_AK4DiJet110_Mu5_noalgo");
    if (b_HLT_BTagMu_AK4DiJet110_Mu5_noalgo_) { b_HLT_BTagMu_AK4DiJet110_Mu5_noalgo_->SetAddress(&HLT_BTagMu_AK4DiJet110_Mu5_noalgo_); }
    b_HLT_BTagMu_AK4DiJet170_Mu5_ = tree->GetBranch("HLT_BTagMu_AK4DiJet170_Mu5");
    if (b_HLT_BTagMu_AK4DiJet170_Mu5_) { b_HLT_BTagMu_AK4DiJet170_Mu5_->SetAddress(&HLT_BTagMu_AK4DiJet170_Mu5_); }
    b_HLT_BTagMu_AK4DiJet170_Mu5_noalgo_ = tree->GetBranch("HLT_BTagMu_AK4DiJet170_Mu5_noalgo");
    if (b_HLT_BTagMu_AK4DiJet170_Mu5_noalgo_) { b_HLT_BTagMu_AK4DiJet170_Mu5_noalgo_->SetAddress(&HLT_BTagMu_AK4DiJet170_Mu5_noalgo_); }
    b_HLT_BTagMu_AK4DiJet20_Mu5_ = tree->GetBranch("HLT_BTagMu_AK4DiJet20_Mu5");
    if (b_HLT_BTagMu_AK4DiJet20_Mu5_) { b_HLT_BTagMu_AK4DiJet20_Mu5_->SetAddress(&HLT_BTagMu_AK4DiJet20_Mu5_); }
    b_HLT_BTagMu_AK4DiJet20_Mu5_noalgo_ = tree->GetBranch("HLT_BTagMu_AK4DiJet20_Mu5_noalgo");
    if (b_HLT_BTagMu_AK4DiJet20_Mu5_noalgo_) { b_HLT_BTagMu_AK4DiJet20_Mu5_noalgo_->SetAddress(&HLT_BTagMu_AK4DiJet20_Mu5_noalgo_); }
    b_HLT_BTagMu_AK4DiJet40_Mu5_ = tree->GetBranch("HLT_BTagMu_AK4DiJet40_Mu5");
    if (b_HLT_BTagMu_AK4DiJet40_Mu5_) { b_HLT_BTagMu_AK4DiJet40_Mu5_->SetAddress(&HLT_BTagMu_AK4DiJet40_Mu5_); }
    b_HLT_BTagMu_AK4DiJet40_Mu5_noalgo_ = tree->GetBranch("HLT_BTagMu_AK4DiJet40_Mu5_noalgo");
    if (b_HLT_BTagMu_AK4DiJet40_Mu5_noalgo_) { b_HLT_BTagMu_AK4DiJet40_Mu5_noalgo_->SetAddress(&HLT_BTagMu_AK4DiJet40_Mu5_noalgo_); }
    b_HLT_BTagMu_AK4DiJet70_Mu5_ = tree->GetBranch("HLT_BTagMu_AK4DiJet70_Mu5");
    if (b_HLT_BTagMu_AK4DiJet70_Mu5_) { b_HLT_BTagMu_AK4DiJet70_Mu5_->SetAddress(&HLT_BTagMu_AK4DiJet70_Mu5_); }
    b_HLT_BTagMu_AK4DiJet70_Mu5_noalgo_ = tree->GetBranch("HLT_BTagMu_AK4DiJet70_Mu5_noalgo");
    if (b_HLT_BTagMu_AK4DiJet70_Mu5_noalgo_) { b_HLT_BTagMu_AK4DiJet70_Mu5_noalgo_->SetAddress(&HLT_BTagMu_AK4DiJet70_Mu5_noalgo_); }
    b_HLT_BTagMu_AK4Jet300_Mu5_ = tree->GetBranch("HLT_BTagMu_AK4Jet300_Mu5");
    if (b_HLT_BTagMu_AK4Jet300_Mu5_) { b_HLT_BTagMu_AK4Jet300_Mu5_->SetAddress(&HLT_BTagMu_AK4Jet300_Mu5_); }
    b_HLT_BTagMu_AK4Jet300_Mu5_noalgo_ = tree->GetBranch("HLT_BTagMu_AK4Jet300_Mu5_noalgo");
    if (b_HLT_BTagMu_AK4Jet300_Mu5_noalgo_) { b_HLT_BTagMu_AK4Jet300_Mu5_noalgo_->SetAddress(&HLT_BTagMu_AK4Jet300_Mu5_noalgo_); }
    b_HLT_BTagMu_AK8DiJet170_Mu5_ = tree->GetBranch("HLT_BTagMu_AK8DiJet170_Mu5");
    if (b_HLT_BTagMu_AK8DiJet170_Mu5_) { b_HLT_BTagMu_AK8DiJet170_Mu5_->SetAddress(&HLT_BTagMu_AK8DiJet170_Mu5_); }
    b_HLT_BTagMu_AK8DiJet170_Mu5_noalgo_ = tree->GetBranch("HLT_BTagMu_AK8DiJet170_Mu5_noalgo");
    if (b_HLT_BTagMu_AK8DiJet170_Mu5_noalgo_) { b_HLT_BTagMu_AK8DiJet170_Mu5_noalgo_->SetAddress(&HLT_BTagMu_AK8DiJet170_Mu5_noalgo_); }
    b_HLT_BTagMu_AK8Jet170_DoubleMu5_ = tree->GetBranch("HLT_BTagMu_AK8Jet170_DoubleMu5");
    if (b_HLT_BTagMu_AK8Jet170_DoubleMu5_) { b_HLT_BTagMu_AK8Jet170_DoubleMu5_->SetAddress(&HLT_BTagMu_AK8Jet170_DoubleMu5_); }
    b_HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_ = tree->GetBranch("HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo");
    if (b_HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_) { b_HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_->SetAddress(&HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_); }
    b_HLT_BTagMu_AK8Jet300_Mu5_ = tree->GetBranch("HLT_BTagMu_AK8Jet300_Mu5");
    if (b_HLT_BTagMu_AK8Jet300_Mu5_) { b_HLT_BTagMu_AK8Jet300_Mu5_->SetAddress(&HLT_BTagMu_AK8Jet300_Mu5_); }
    b_HLT_BTagMu_AK8Jet300_Mu5_noalgo_ = tree->GetBranch("HLT_BTagMu_AK8Jet300_Mu5_noalgo");
    if (b_HLT_BTagMu_AK8Jet300_Mu5_noalgo_) { b_HLT_BTagMu_AK8Jet300_Mu5_noalgo_->SetAddress(&HLT_BTagMu_AK8Jet300_Mu5_noalgo_); }
    b_HLT_BTagMu_DiJet110_Mu5_ = tree->GetBranch("HLT_BTagMu_DiJet110_Mu5");
    if (b_HLT_BTagMu_DiJet110_Mu5_) { b_HLT_BTagMu_DiJet110_Mu5_->SetAddress(&HLT_BTagMu_DiJet110_Mu5_); }
    b_HLT_BTagMu_DiJet170_Mu5_ = tree->GetBranch("HLT_BTagMu_DiJet170_Mu5");
    if (b_HLT_BTagMu_DiJet170_Mu5_) { b_HLT_BTagMu_DiJet170_Mu5_->SetAddress(&HLT_BTagMu_DiJet170_Mu5_); }
    b_HLT_BTagMu_DiJet20_Mu5_ = tree->GetBranch("HLT_BTagMu_DiJet20_Mu5");
    if (b_HLT_BTagMu_DiJet20_Mu5_) { b_HLT_BTagMu_DiJet20_Mu5_->SetAddress(&HLT_BTagMu_DiJet20_Mu5_); }
    b_HLT_BTagMu_DiJet40_Mu5_ = tree->GetBranch("HLT_BTagMu_DiJet40_Mu5");
    if (b_HLT_BTagMu_DiJet40_Mu5_) { b_HLT_BTagMu_DiJet40_Mu5_->SetAddress(&HLT_BTagMu_DiJet40_Mu5_); }
    b_HLT_BTagMu_DiJet70_Mu5_ = tree->GetBranch("HLT_BTagMu_DiJet70_Mu5");
    if (b_HLT_BTagMu_DiJet70_Mu5_) { b_HLT_BTagMu_DiJet70_Mu5_->SetAddress(&HLT_BTagMu_DiJet70_Mu5_); }
    b_HLT_BTagMu_Jet300_Mu5_ = tree->GetBranch("HLT_BTagMu_Jet300_Mu5");
    if (b_HLT_BTagMu_Jet300_Mu5_) { b_HLT_BTagMu_Jet300_Mu5_->SetAddress(&HLT_BTagMu_Jet300_Mu5_); }
    b_HLT_CDC_L2cosmic_10_er1p0_ = tree->GetBranch("HLT_CDC_L2cosmic_10_er1p0");
    if (b_HLT_CDC_L2cosmic_10_er1p0_) { b_HLT_CDC_L2cosmic_10_er1p0_->SetAddress(&HLT_CDC_L2cosmic_10_er1p0_); }
    b_HLT_CDC_L2cosmic_5_er1p0_ = tree->GetBranch("HLT_CDC_L2cosmic_5_er1p0");
    if (b_HLT_CDC_L2cosmic_5_er1p0_) { b_HLT_CDC_L2cosmic_5_er1p0_->SetAddress(&HLT_CDC_L2cosmic_5_er1p0_); }
    b_HLT_CDC_L2cosmic_5p5_er1p0_ = tree->GetBranch("HLT_CDC_L2cosmic_5p5_er1p0");
    if (b_HLT_CDC_L2cosmic_5p5_er1p0_) { b_HLT_CDC_L2cosmic_5p5_er1p0_->SetAddress(&HLT_CDC_L2cosmic_5p5_er1p0_); }
    b_HLT_CaloJet260_ = tree->GetBranch("HLT_CaloJet260");
    if (b_HLT_CaloJet260_) { b_HLT_CaloJet260_->SetAddress(&HLT_CaloJet260_); }
    b_HLT_CaloJet500_NoJetID_ = tree->GetBranch("HLT_CaloJet500_NoJetID");
    if (b_HLT_CaloJet500_NoJetID_) { b_HLT_CaloJet500_NoJetID_->SetAddress(&HLT_CaloJet500_NoJetID_); }
    b_HLT_CaloJet550_NoJetID_ = tree->GetBranch("HLT_CaloJet550_NoJetID");
    if (b_HLT_CaloJet550_NoJetID_) { b_HLT_CaloJet550_NoJetID_->SetAddress(&HLT_CaloJet550_NoJetID_); }
    b_HLT_CaloMET100_HBHECleaned_ = tree->GetBranch("HLT_CaloMET100_HBHECleaned");
    if (b_HLT_CaloMET100_HBHECleaned_) { b_HLT_CaloMET100_HBHECleaned_->SetAddress(&HLT_CaloMET100_HBHECleaned_); }
    b_HLT_CaloMET100_NotCleaned_ = tree->GetBranch("HLT_CaloMET100_NotCleaned");
    if (b_HLT_CaloMET100_NotCleaned_) { b_HLT_CaloMET100_NotCleaned_->SetAddress(&HLT_CaloMET100_NotCleaned_); }
    b_HLT_CaloMET110_NotCleaned_ = tree->GetBranch("HLT_CaloMET110_NotCleaned");
    if (b_HLT_CaloMET110_NotCleaned_) { b_HLT_CaloMET110_NotCleaned_->SetAddress(&HLT_CaloMET110_NotCleaned_); }
    b_HLT_CaloMET250_HBHECleaned_ = tree->GetBranch("HLT_CaloMET250_HBHECleaned");
    if (b_HLT_CaloMET250_HBHECleaned_) { b_HLT_CaloMET250_HBHECleaned_->SetAddress(&HLT_CaloMET250_HBHECleaned_); }
    b_HLT_CaloMET250_NotCleaned_ = tree->GetBranch("HLT_CaloMET250_NotCleaned");
    if (b_HLT_CaloMET250_NotCleaned_) { b_HLT_CaloMET250_NotCleaned_->SetAddress(&HLT_CaloMET250_NotCleaned_); }
    b_HLT_CaloMET300_HBHECleaned_ = tree->GetBranch("HLT_CaloMET300_HBHECleaned");
    if (b_HLT_CaloMET300_HBHECleaned_) { b_HLT_CaloMET300_HBHECleaned_->SetAddress(&HLT_CaloMET300_HBHECleaned_); }
    b_HLT_CaloMET350_HBHECleaned_ = tree->GetBranch("HLT_CaloMET350_HBHECleaned");
    if (b_HLT_CaloMET350_HBHECleaned_) { b_HLT_CaloMET350_HBHECleaned_->SetAddress(&HLT_CaloMET350_HBHECleaned_); }
    b_HLT_CaloMET350_NotCleaned_ = tree->GetBranch("HLT_CaloMET350_NotCleaned");
    if (b_HLT_CaloMET350_NotCleaned_) { b_HLT_CaloMET350_NotCleaned_->SetAddress(&HLT_CaloMET350_NotCleaned_); }
    b_HLT_CaloMET60_DTCluster50_ = tree->GetBranch("HLT_CaloMET60_DTCluster50");
    if (b_HLT_CaloMET60_DTCluster50_) { b_HLT_CaloMET60_DTCluster50_->SetAddress(&HLT_CaloMET60_DTCluster50_); }
    b_HLT_CaloMET60_DTClusterNoMB1S50_ = tree->GetBranch("HLT_CaloMET60_DTClusterNoMB1S50");
    if (b_HLT_CaloMET60_DTClusterNoMB1S50_) { b_HLT_CaloMET60_DTClusterNoMB1S50_->SetAddress(&HLT_CaloMET60_DTClusterNoMB1S50_); }
    b_HLT_CaloMET70_HBHECleaned_ = tree->GetBranch("HLT_CaloMET70_HBHECleaned");
    if (b_HLT_CaloMET70_HBHECleaned_) { b_HLT_CaloMET70_HBHECleaned_->SetAddress(&HLT_CaloMET70_HBHECleaned_); }
    b_HLT_CaloMET80_HBHECleaned_ = tree->GetBranch("HLT_CaloMET80_HBHECleaned");
    if (b_HLT_CaloMET80_HBHECleaned_) { b_HLT_CaloMET80_HBHECleaned_->SetAddress(&HLT_CaloMET80_HBHECleaned_); }
    b_HLT_CaloMET80_NotCleaned_ = tree->GetBranch("HLT_CaloMET80_NotCleaned");
    if (b_HLT_CaloMET80_NotCleaned_) { b_HLT_CaloMET80_NotCleaned_->SetAddress(&HLT_CaloMET80_NotCleaned_); }
    b_HLT_CaloMET90_HBHECleaned_ = tree->GetBranch("HLT_CaloMET90_HBHECleaned");
    if (b_HLT_CaloMET90_HBHECleaned_) { b_HLT_CaloMET90_HBHECleaned_->SetAddress(&HLT_CaloMET90_HBHECleaned_); }
    b_HLT_CaloMET90_NotCleaned_ = tree->GetBranch("HLT_CaloMET90_NotCleaned");
    if (b_HLT_CaloMET90_NotCleaned_) { b_HLT_CaloMET90_NotCleaned_->SetAddress(&HLT_CaloMET90_NotCleaned_); }
    b_HLT_CaloMHT90_ = tree->GetBranch("HLT_CaloMHT90");
    if (b_HLT_CaloMHT90_) { b_HLT_CaloMHT90_->SetAddress(&HLT_CaloMHT90_); }
    b_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_ = tree->GetBranch("HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight");
    if (b_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_) { b_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_->SetAddress(&HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_); }
    b_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067_ = tree->GetBranch("HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067");
    if (b_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067_) { b_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067_->SetAddress(&HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067_); }
    b_HLT_CascadeMu100_ = tree->GetBranch("HLT_CascadeMu100");
    if (b_HLT_CascadeMu100_) { b_HLT_CascadeMu100_->SetAddress(&HLT_CascadeMu100_); }
    b_HLT_CscCluster_Loose_ = tree->GetBranch("HLT_CscCluster_Loose");
    if (b_HLT_CscCluster_Loose_) { b_HLT_CscCluster_Loose_->SetAddress(&HLT_CscCluster_Loose_); }
    b_HLT_CscCluster_Medium_ = tree->GetBranch("HLT_CscCluster_Medium");
    if (b_HLT_CscCluster_Medium_) { b_HLT_CscCluster_Medium_->SetAddress(&HLT_CscCluster_Medium_); }
    b_HLT_CscCluster_Tight_ = tree->GetBranch("HLT_CscCluster_Tight");
    if (b_HLT_CscCluster_Tight_) { b_HLT_CscCluster_Tight_->SetAddress(&HLT_CscCluster_Tight_); }
    b_HLT_DiCentralPFJet170_ = tree->GetBranch("HLT_DiCentralPFJet170");
    if (b_HLT_DiCentralPFJet170_) { b_HLT_DiCentralPFJet170_->SetAddress(&HLT_DiCentralPFJet170_); }
    b_HLT_DiCentralPFJet170_CFMax0p1_ = tree->GetBranch("HLT_DiCentralPFJet170_CFMax0p1");
    if (b_HLT_DiCentralPFJet170_CFMax0p1_) { b_HLT_DiCentralPFJet170_CFMax0p1_->SetAddress(&HLT_DiCentralPFJet170_CFMax0p1_); }
    b_HLT_DiCentralPFJet220_CFMax0p3_ = tree->GetBranch("HLT_DiCentralPFJet220_CFMax0p3");
    if (b_HLT_DiCentralPFJet220_CFMax0p3_) { b_HLT_DiCentralPFJet220_CFMax0p3_->SetAddress(&HLT_DiCentralPFJet220_CFMax0p3_); }
    b_HLT_DiCentralPFJet330_CFMax0p5_ = tree->GetBranch("HLT_DiCentralPFJet330_CFMax0p5");
    if (b_HLT_DiCentralPFJet330_CFMax0p5_) { b_HLT_DiCentralPFJet330_CFMax0p5_->SetAddress(&HLT_DiCentralPFJet330_CFMax0p5_); }
    b_HLT_DiCentralPFJet430_ = tree->GetBranch("HLT_DiCentralPFJet430");
    if (b_HLT_DiCentralPFJet430_) { b_HLT_DiCentralPFJet430_->SetAddress(&HLT_DiCentralPFJet430_); }
    b_HLT_DiCentralPFJet55_PFMET110_ = tree->GetBranch("HLT_DiCentralPFJet55_PFMET110");
    if (b_HLT_DiCentralPFJet55_PFMET110_) { b_HLT_DiCentralPFJet55_PFMET110_->SetAddress(&HLT_DiCentralPFJet55_PFMET110_); }
    b_HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_ = tree->GetBranch("HLT_DiEle27_WPTightCaloOnly_L1DoubleEG");
    if (b_HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_) { b_HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_->SetAddress(&HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_); }
    b_HLT_DiJet110_35_Mjj650_PFMET110_ = tree->GetBranch("HLT_DiJet110_35_Mjj650_PFMET110");
    if (b_HLT_DiJet110_35_Mjj650_PFMET110_) { b_HLT_DiJet110_35_Mjj650_PFMET110_->SetAddress(&HLT_DiJet110_35_Mjj650_PFMET110_); }
    b_HLT_DiJet110_35_Mjj650_PFMET120_ = tree->GetBranch("HLT_DiJet110_35_Mjj650_PFMET120");
    if (b_HLT_DiJet110_35_Mjj650_PFMET120_) { b_HLT_DiJet110_35_Mjj650_PFMET120_->SetAddress(&HLT_DiJet110_35_Mjj650_PFMET120_); }
    b_HLT_DiJet110_35_Mjj650_PFMET130_ = tree->GetBranch("HLT_DiJet110_35_Mjj650_PFMET130");
    if (b_HLT_DiJet110_35_Mjj650_PFMET130_) { b_HLT_DiJet110_35_Mjj650_PFMET130_->SetAddress(&HLT_DiJet110_35_Mjj650_PFMET130_); }
    b_HLT_DiJetVBFMu_PassThrough_ = tree->GetBranch("HLT_DiJetVBFMu_PassThrough");
    if (b_HLT_DiJetVBFMu_PassThrough_) { b_HLT_DiJetVBFMu_PassThrough_->SetAddress(&HLT_DiJetVBFMu_PassThrough_); }
    b_HLT_DiJetVBF_PassThrough_ = tree->GetBranch("HLT_DiJetVBF_PassThrough");
    if (b_HLT_DiJetVBF_PassThrough_) { b_HLT_DiJetVBF_PassThrough_->SetAddress(&HLT_DiJetVBF_PassThrough_); }
    b_HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_ = tree->GetBranch("HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8");
    if (b_HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_) { b_HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_->SetAddress(&HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_); }
    b_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_ = tree->GetBranch("HLT_DiMu9_Ele9_CaloIdL_TrackIdL");
    if (b_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_) { b_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_->SetAddress(&HLT_DiMu9_Ele9_CaloIdL_TrackIdL_); }
    b_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_ = tree->GetBranch("HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ");
    if (b_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_) { b_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_->SetAddress(&HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_); }
    b_HLT_DiPFJet15_FBEta3_NoCaloMatched_ = tree->GetBranch("HLT_DiPFJet15_FBEta3_NoCaloMatched");
    if (b_HLT_DiPFJet15_FBEta3_NoCaloMatched_) { b_HLT_DiPFJet15_FBEta3_NoCaloMatched_->SetAddress(&HLT_DiPFJet15_FBEta3_NoCaloMatched_); }
    b_HLT_DiPFJet15_NoCaloMatched_ = tree->GetBranch("HLT_DiPFJet15_NoCaloMatched");
    if (b_HLT_DiPFJet15_NoCaloMatched_) { b_HLT_DiPFJet15_NoCaloMatched_->SetAddress(&HLT_DiPFJet15_NoCaloMatched_); }
    b_HLT_DiPFJet25_FBEta3_NoCaloMatched_ = tree->GetBranch("HLT_DiPFJet25_FBEta3_NoCaloMatched");
    if (b_HLT_DiPFJet25_FBEta3_NoCaloMatched_) { b_HLT_DiPFJet25_FBEta3_NoCaloMatched_->SetAddress(&HLT_DiPFJet25_FBEta3_NoCaloMatched_); }
    b_HLT_DiPFJet25_NoCaloMatched_ = tree->GetBranch("HLT_DiPFJet25_NoCaloMatched");
    if (b_HLT_DiPFJet25_NoCaloMatched_) { b_HLT_DiPFJet25_NoCaloMatched_->SetAddress(&HLT_DiPFJet25_NoCaloMatched_); }
    b_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140_ = tree->GetBranch("HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140");
    if (b_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140_) { b_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140_->SetAddress(&HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140_); }
    b_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80_ = tree->GetBranch("HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80");
    if (b_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80_) { b_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80_->SetAddress(&HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80_); }
    b_HLT_DiPFJetAve100_HFJEC_ = tree->GetBranch("HLT_DiPFJetAve100_HFJEC");
    if (b_HLT_DiPFJetAve100_HFJEC_) { b_HLT_DiPFJetAve100_HFJEC_->SetAddress(&HLT_DiPFJetAve100_HFJEC_); }
    b_HLT_DiPFJetAve140_ = tree->GetBranch("HLT_DiPFJetAve140");
    if (b_HLT_DiPFJetAve140_) { b_HLT_DiPFJetAve140_->SetAddress(&HLT_DiPFJetAve140_); }
    b_HLT_DiPFJetAve15_HFJEC_ = tree->GetBranch("HLT_DiPFJetAve15_HFJEC");
    if (b_HLT_DiPFJetAve15_HFJEC_) { b_HLT_DiPFJetAve15_HFJEC_->SetAddress(&HLT_DiPFJetAve15_HFJEC_); }
    b_HLT_DiPFJetAve160_HFJEC_ = tree->GetBranch("HLT_DiPFJetAve160_HFJEC");
    if (b_HLT_DiPFJetAve160_HFJEC_) { b_HLT_DiPFJetAve160_HFJEC_->SetAddress(&HLT_DiPFJetAve160_HFJEC_); }
    b_HLT_DiPFJetAve200_ = tree->GetBranch("HLT_DiPFJetAve200");
    if (b_HLT_DiPFJetAve200_) { b_HLT_DiPFJetAve200_->SetAddress(&HLT_DiPFJetAve200_); }
    b_HLT_DiPFJetAve220_HFJEC_ = tree->GetBranch("HLT_DiPFJetAve220_HFJEC");
    if (b_HLT_DiPFJetAve220_HFJEC_) { b_HLT_DiPFJetAve220_HFJEC_->SetAddress(&HLT_DiPFJetAve220_HFJEC_); }
    b_HLT_DiPFJetAve25_HFJEC_ = tree->GetBranch("HLT_DiPFJetAve25_HFJEC");
    if (b_HLT_DiPFJetAve25_HFJEC_) { b_HLT_DiPFJetAve25_HFJEC_->SetAddress(&HLT_DiPFJetAve25_HFJEC_); }
    b_HLT_DiPFJetAve260_ = tree->GetBranch("HLT_DiPFJetAve260");
    if (b_HLT_DiPFJetAve260_) { b_HLT_DiPFJetAve260_->SetAddress(&HLT_DiPFJetAve260_); }
    b_HLT_DiPFJetAve260_HFJEC_ = tree->GetBranch("HLT_DiPFJetAve260_HFJEC");
    if (b_HLT_DiPFJetAve260_HFJEC_) { b_HLT_DiPFJetAve260_HFJEC_->SetAddress(&HLT_DiPFJetAve260_HFJEC_); }
    b_HLT_DiPFJetAve300_HFJEC_ = tree->GetBranch("HLT_DiPFJetAve300_HFJEC");
    if (b_HLT_DiPFJetAve300_HFJEC_) { b_HLT_DiPFJetAve300_HFJEC_->SetAddress(&HLT_DiPFJetAve300_HFJEC_); }
    b_HLT_DiPFJetAve320_ = tree->GetBranch("HLT_DiPFJetAve320");
    if (b_HLT_DiPFJetAve320_) { b_HLT_DiPFJetAve320_->SetAddress(&HLT_DiPFJetAve320_); }
    b_HLT_DiPFJetAve35_HFJEC_ = tree->GetBranch("HLT_DiPFJetAve35_HFJEC");
    if (b_HLT_DiPFJetAve35_HFJEC_) { b_HLT_DiPFJetAve35_HFJEC_->SetAddress(&HLT_DiPFJetAve35_HFJEC_); }
    b_HLT_DiPFJetAve40_ = tree->GetBranch("HLT_DiPFJetAve40");
    if (b_HLT_DiPFJetAve40_) { b_HLT_DiPFJetAve40_->SetAddress(&HLT_DiPFJetAve40_); }
    b_HLT_DiPFJetAve400_ = tree->GetBranch("HLT_DiPFJetAve400");
    if (b_HLT_DiPFJetAve400_) { b_HLT_DiPFJetAve400_->SetAddress(&HLT_DiPFJetAve400_); }
    b_HLT_DiPFJetAve500_ = tree->GetBranch("HLT_DiPFJetAve500");
    if (b_HLT_DiPFJetAve500_) { b_HLT_DiPFJetAve500_->SetAddress(&HLT_DiPFJetAve500_); }
    b_HLT_DiPFJetAve60_ = tree->GetBranch("HLT_DiPFJetAve60");
    if (b_HLT_DiPFJetAve60_) { b_HLT_DiPFJetAve60_->SetAddress(&HLT_DiPFJetAve60_); }
    b_HLT_DiPFJetAve60_HFJEC_ = tree->GetBranch("HLT_DiPFJetAve60_HFJEC");
    if (b_HLT_DiPFJetAve60_HFJEC_) { b_HLT_DiPFJetAve60_HFJEC_->SetAddress(&HLT_DiPFJetAve60_HFJEC_); }
    b_HLT_DiPFJetAve80_ = tree->GetBranch("HLT_DiPFJetAve80");
    if (b_HLT_DiPFJetAve80_) { b_HLT_DiPFJetAve80_->SetAddress(&HLT_DiPFJetAve80_); }
    b_HLT_DiPFJetAve80_HFJEC_ = tree->GetBranch("HLT_DiPFJetAve80_HFJEC");
    if (b_HLT_DiPFJetAve80_HFJEC_) { b_HLT_DiPFJetAve80_HFJEC_->SetAddress(&HLT_DiPFJetAve80_HFJEC_); }
    b_HLT_DiPhoton10Time1ns_ = tree->GetBranch("HLT_DiPhoton10Time1ns");
    if (b_HLT_DiPhoton10Time1ns_) { b_HLT_DiPhoton10Time1ns_->SetAddress(&HLT_DiPhoton10Time1ns_); }
    b_HLT_DiPhoton10Time1p2ns_ = tree->GetBranch("HLT_DiPhoton10Time1p2ns");
    if (b_HLT_DiPhoton10Time1p2ns_) { b_HLT_DiPhoton10Time1p2ns_->SetAddress(&HLT_DiPhoton10Time1p2ns_); }
    b_HLT_DiPhoton10Time1p4ns_ = tree->GetBranch("HLT_DiPhoton10Time1p4ns");
    if (b_HLT_DiPhoton10Time1p4ns_) { b_HLT_DiPhoton10Time1p4ns_->SetAddress(&HLT_DiPhoton10Time1p4ns_); }
    b_HLT_DiPhoton10Time1p6ns_ = tree->GetBranch("HLT_DiPhoton10Time1p6ns");
    if (b_HLT_DiPhoton10Time1p6ns_) { b_HLT_DiPhoton10Time1p6ns_->SetAddress(&HLT_DiPhoton10Time1p6ns_); }
    b_HLT_DiPhoton10Time1p8ns_ = tree->GetBranch("HLT_DiPhoton10Time1p8ns");
    if (b_HLT_DiPhoton10Time1p8ns_) { b_HLT_DiPhoton10Time1p8ns_->SetAddress(&HLT_DiPhoton10Time1p8ns_); }
    b_HLT_DiPhoton10Time2ns_ = tree->GetBranch("HLT_DiPhoton10Time2ns");
    if (b_HLT_DiPhoton10Time2ns_) { b_HLT_DiPhoton10Time2ns_->SetAddress(&HLT_DiPhoton10Time2ns_); }
    b_HLT_DiPhoton10_CaloIdL_ = tree->GetBranch("HLT_DiPhoton10_CaloIdL");
    if (b_HLT_DiPhoton10_CaloIdL_) { b_HLT_DiPhoton10_CaloIdL_->SetAddress(&HLT_DiPhoton10_CaloIdL_); }
    b_HLT_DiPhoton10sminlt0p1_ = tree->GetBranch("HLT_DiPhoton10sminlt0p1");
    if (b_HLT_DiPhoton10sminlt0p1_) { b_HLT_DiPhoton10sminlt0p1_->SetAddress(&HLT_DiPhoton10sminlt0p1_); }
    b_HLT_DiPhoton10sminlt0p12_ = tree->GetBranch("HLT_DiPhoton10sminlt0p12");
    if (b_HLT_DiPhoton10sminlt0p12_) { b_HLT_DiPhoton10sminlt0p12_->SetAddress(&HLT_DiPhoton10sminlt0p12_); }
    b_HLT_DiSC30_18_EIso_AND_HE_Mass70_ = tree->GetBranch("HLT_DiSC30_18_EIso_AND_HE_Mass70");
    if (b_HLT_DiSC30_18_EIso_AND_HE_Mass70_) { b_HLT_DiSC30_18_EIso_AND_HE_Mass70_->SetAddress(&HLT_DiSC30_18_EIso_AND_HE_Mass70_); }
    b_HLT_Dimuon0_Jpsi_ = tree->GetBranch("HLT_Dimuon0_Jpsi");
    if (b_HLT_Dimuon0_Jpsi_) { b_HLT_Dimuon0_Jpsi_->SetAddress(&HLT_Dimuon0_Jpsi_); }
    b_HLT_Dimuon0_Jpsi3p5_Muon2_ = tree->GetBranch("HLT_Dimuon0_Jpsi3p5_Muon2");
    if (b_HLT_Dimuon0_Jpsi3p5_Muon2_) { b_HLT_Dimuon0_Jpsi3p5_Muon2_->SetAddress(&HLT_Dimuon0_Jpsi3p5_Muon2_); }
    b_HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_ = tree->GetBranch("HLT_Dimuon0_Jpsi_L1_4R_0er1p5R");
    if (b_HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_) { b_HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_->SetAddress(&HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_); }
    b_HLT_Dimuon0_Jpsi_L1_NoOS_ = tree->GetBranch("HLT_Dimuon0_Jpsi_L1_NoOS");
    if (b_HLT_Dimuon0_Jpsi_L1_NoOS_) { b_HLT_Dimuon0_Jpsi_L1_NoOS_->SetAddress(&HLT_Dimuon0_Jpsi_L1_NoOS_); }
    b_HLT_Dimuon0_Jpsi_Muon_ = tree->GetBranch("HLT_Dimuon0_Jpsi_Muon");
    if (b_HLT_Dimuon0_Jpsi_Muon_) { b_HLT_Dimuon0_Jpsi_Muon_->SetAddress(&HLT_Dimuon0_Jpsi_Muon_); }
    b_HLT_Dimuon0_Jpsi_NoVertexing_ = tree->GetBranch("HLT_Dimuon0_Jpsi_NoVertexing");
    if (b_HLT_Dimuon0_Jpsi_NoVertexing_) { b_HLT_Dimuon0_Jpsi_NoVertexing_->SetAddress(&HLT_Dimuon0_Jpsi_NoVertexing_); }
    b_HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_ = tree->GetBranch("HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R");
    if (b_HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_) { b_HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_->SetAddress(&HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_); }
    b_HLT_Dimuon0_Jpsi_NoVertexing_NoOS_ = tree->GetBranch("HLT_Dimuon0_Jpsi_NoVertexing_NoOS");
    if (b_HLT_Dimuon0_Jpsi_NoVertexing_NoOS_) { b_HLT_Dimuon0_Jpsi_NoVertexing_NoOS_->SetAddress(&HLT_Dimuon0_Jpsi_NoVertexing_NoOS_); }
    b_HLT_Dimuon0_LowMass_ = tree->GetBranch("HLT_Dimuon0_LowMass");
    if (b_HLT_Dimuon0_LowMass_) { b_HLT_Dimuon0_LowMass_->SetAddress(&HLT_Dimuon0_LowMass_); }
    b_HLT_Dimuon0_LowMass_L1_0er1p5_ = tree->GetBranch("HLT_Dimuon0_LowMass_L1_0er1p5");
    if (b_HLT_Dimuon0_LowMass_L1_0er1p5_) { b_HLT_Dimuon0_LowMass_L1_0er1p5_->SetAddress(&HLT_Dimuon0_LowMass_L1_0er1p5_); }
    b_HLT_Dimuon0_LowMass_L1_0er1p5R_ = tree->GetBranch("HLT_Dimuon0_LowMass_L1_0er1p5R");
    if (b_HLT_Dimuon0_LowMass_L1_0er1p5R_) { b_HLT_Dimuon0_LowMass_L1_0er1p5R_->SetAddress(&HLT_Dimuon0_LowMass_L1_0er1p5R_); }
    b_HLT_Dimuon0_LowMass_L1_4_ = tree->GetBranch("HLT_Dimuon0_LowMass_L1_4");
    if (b_HLT_Dimuon0_LowMass_L1_4_) { b_HLT_Dimuon0_LowMass_L1_4_->SetAddress(&HLT_Dimuon0_LowMass_L1_4_); }
    b_HLT_Dimuon0_LowMass_L1_4R_ = tree->GetBranch("HLT_Dimuon0_LowMass_L1_4R");
    if (b_HLT_Dimuon0_LowMass_L1_4R_) { b_HLT_Dimuon0_LowMass_L1_4R_->SetAddress(&HLT_Dimuon0_LowMass_L1_4R_); }
    b_HLT_Dimuon0_LowMass_L1_TM530_ = tree->GetBranch("HLT_Dimuon0_LowMass_L1_TM530");
    if (b_HLT_Dimuon0_LowMass_L1_TM530_) { b_HLT_Dimuon0_LowMass_L1_TM530_->SetAddress(&HLT_Dimuon0_LowMass_L1_TM530_); }
    b_HLT_Dimuon0_Phi_Barrel_ = tree->GetBranch("HLT_Dimuon0_Phi_Barrel");
    if (b_HLT_Dimuon0_Phi_Barrel_) { b_HLT_Dimuon0_Phi_Barrel_->SetAddress(&HLT_Dimuon0_Phi_Barrel_); }
    b_HLT_Dimuon0_Upsilon_L1_4p5_ = tree->GetBranch("HLT_Dimuon0_Upsilon_L1_4p5");
    if (b_HLT_Dimuon0_Upsilon_L1_4p5_) { b_HLT_Dimuon0_Upsilon_L1_4p5_->SetAddress(&HLT_Dimuon0_Upsilon_L1_4p5_); }
    b_HLT_Dimuon0_Upsilon_L1_4p5NoOS_ = tree->GetBranch("HLT_Dimuon0_Upsilon_L1_4p5NoOS");
    if (b_HLT_Dimuon0_Upsilon_L1_4p5NoOS_) { b_HLT_Dimuon0_Upsilon_L1_4p5NoOS_->SetAddress(&HLT_Dimuon0_Upsilon_L1_4p5NoOS_); }
    b_HLT_Dimuon0_Upsilon_L1_4p5er2p0_ = tree->GetBranch("HLT_Dimuon0_Upsilon_L1_4p5er2p0");
    if (b_HLT_Dimuon0_Upsilon_L1_4p5er2p0_) { b_HLT_Dimuon0_Upsilon_L1_4p5er2p0_->SetAddress(&HLT_Dimuon0_Upsilon_L1_4p5er2p0_); }
    b_HLT_Dimuon0_Upsilon_L1_4p5er2p0M_ = tree->GetBranch("HLT_Dimuon0_Upsilon_L1_4p5er2p0M");
    if (b_HLT_Dimuon0_Upsilon_L1_4p5er2p0M_) { b_HLT_Dimuon0_Upsilon_L1_4p5er2p0M_->SetAddress(&HLT_Dimuon0_Upsilon_L1_4p5er2p0M_); }
    b_HLT_Dimuon0_Upsilon_L1_5_ = tree->GetBranch("HLT_Dimuon0_Upsilon_L1_5");
    if (b_HLT_Dimuon0_Upsilon_L1_5_) { b_HLT_Dimuon0_Upsilon_L1_5_->SetAddress(&HLT_Dimuon0_Upsilon_L1_5_); }
    b_HLT_Dimuon0_Upsilon_L1_5M_ = tree->GetBranch("HLT_Dimuon0_Upsilon_L1_5M");
    if (b_HLT_Dimuon0_Upsilon_L1_5M_) { b_HLT_Dimuon0_Upsilon_L1_5M_->SetAddress(&HLT_Dimuon0_Upsilon_L1_5M_); }
    b_HLT_Dimuon0_Upsilon_Muon_ = tree->GetBranch("HLT_Dimuon0_Upsilon_Muon");
    if (b_HLT_Dimuon0_Upsilon_Muon_) { b_HLT_Dimuon0_Upsilon_Muon_->SetAddress(&HLT_Dimuon0_Upsilon_Muon_); }
    b_HLT_Dimuon0_Upsilon_Muon_L1_TM0_ = tree->GetBranch("HLT_Dimuon0_Upsilon_Muon_L1_TM0");
    if (b_HLT_Dimuon0_Upsilon_Muon_L1_TM0_) { b_HLT_Dimuon0_Upsilon_Muon_L1_TM0_->SetAddress(&HLT_Dimuon0_Upsilon_Muon_L1_TM0_); }
    b_HLT_Dimuon0_Upsilon_Muon_NoL1Mass_ = tree->GetBranch("HLT_Dimuon0_Upsilon_Muon_NoL1Mass");
    if (b_HLT_Dimuon0_Upsilon_Muon_NoL1Mass_) { b_HLT_Dimuon0_Upsilon_Muon_NoL1Mass_->SetAddress(&HLT_Dimuon0_Upsilon_Muon_NoL1Mass_); }
    b_HLT_Dimuon0_Upsilon_NoVertexing_ = tree->GetBranch("HLT_Dimuon0_Upsilon_NoVertexing");
    if (b_HLT_Dimuon0_Upsilon_NoVertexing_) { b_HLT_Dimuon0_Upsilon_NoVertexing_->SetAddress(&HLT_Dimuon0_Upsilon_NoVertexing_); }
    b_HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing_ = tree->GetBranch("HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing");
    if (b_HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing_) { b_HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing_->SetAddress(&HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing_); }
    b_HLT_Dimuon0er16_Jpsi_NoVertexing_ = tree->GetBranch("HLT_Dimuon0er16_Jpsi_NoVertexing");
    if (b_HLT_Dimuon0er16_Jpsi_NoVertexing_) { b_HLT_Dimuon0er16_Jpsi_NoVertexing_->SetAddress(&HLT_Dimuon0er16_Jpsi_NoVertexing_); }
    b_HLT_Dimuon10_Jpsi_Barrel_ = tree->GetBranch("HLT_Dimuon10_Jpsi_Barrel");
    if (b_HLT_Dimuon10_Jpsi_Barrel_) { b_HLT_Dimuon10_Jpsi_Barrel_->SetAddress(&HLT_Dimuon10_Jpsi_Barrel_); }
    b_HLT_Dimuon10_PsiPrime_Barrel_Seagulls_ = tree->GetBranch("HLT_Dimuon10_PsiPrime_Barrel_Seagulls");
    if (b_HLT_Dimuon10_PsiPrime_Barrel_Seagulls_) { b_HLT_Dimuon10_PsiPrime_Barrel_Seagulls_->SetAddress(&HLT_Dimuon10_PsiPrime_Barrel_Seagulls_); }
    b_HLT_Dimuon10_Upsilon_Barrel_Seagulls_ = tree->GetBranch("HLT_Dimuon10_Upsilon_Barrel_Seagulls");
    if (b_HLT_Dimuon10_Upsilon_Barrel_Seagulls_) { b_HLT_Dimuon10_Upsilon_Barrel_Seagulls_->SetAddress(&HLT_Dimuon10_Upsilon_Barrel_Seagulls_); }
    b_HLT_Dimuon10_Upsilon_y1p4_ = tree->GetBranch("HLT_Dimuon10_Upsilon_y1p4");
    if (b_HLT_Dimuon10_Upsilon_y1p4_) { b_HLT_Dimuon10_Upsilon_y1p4_->SetAddress(&HLT_Dimuon10_Upsilon_y1p4_); }
    b_HLT_Dimuon12_Upsilon_eta1p5_ = tree->GetBranch("HLT_Dimuon12_Upsilon_eta1p5");
    if (b_HLT_Dimuon12_Upsilon_eta1p5_) { b_HLT_Dimuon12_Upsilon_eta1p5_->SetAddress(&HLT_Dimuon12_Upsilon_eta1p5_); }
    b_HLT_Dimuon12_Upsilon_y1p4_ = tree->GetBranch("HLT_Dimuon12_Upsilon_y1p4");
    if (b_HLT_Dimuon12_Upsilon_y1p4_) { b_HLT_Dimuon12_Upsilon_y1p4_->SetAddress(&HLT_Dimuon12_Upsilon_y1p4_); }
    b_HLT_Dimuon13_PsiPrime_ = tree->GetBranch("HLT_Dimuon13_PsiPrime");
    if (b_HLT_Dimuon13_PsiPrime_) { b_HLT_Dimuon13_PsiPrime_->SetAddress(&HLT_Dimuon13_PsiPrime_); }
    b_HLT_Dimuon13_Upsilon_ = tree->GetBranch("HLT_Dimuon13_Upsilon");
    if (b_HLT_Dimuon13_Upsilon_) { b_HLT_Dimuon13_Upsilon_->SetAddress(&HLT_Dimuon13_Upsilon_); }
    b_HLT_Dimuon14_Phi_Barrel_Seagulls_ = tree->GetBranch("HLT_Dimuon14_Phi_Barrel_Seagulls");
    if (b_HLT_Dimuon14_Phi_Barrel_Seagulls_) { b_HLT_Dimuon14_Phi_Barrel_Seagulls_->SetAddress(&HLT_Dimuon14_Phi_Barrel_Seagulls_); }
    b_HLT_Dimuon14_PsiPrime_ = tree->GetBranch("HLT_Dimuon14_PsiPrime");
    if (b_HLT_Dimuon14_PsiPrime_) { b_HLT_Dimuon14_PsiPrime_->SetAddress(&HLT_Dimuon14_PsiPrime_); }
    b_HLT_Dimuon14_PsiPrime_noCorrL1_ = tree->GetBranch("HLT_Dimuon14_PsiPrime_noCorrL1");
    if (b_HLT_Dimuon14_PsiPrime_noCorrL1_) { b_HLT_Dimuon14_PsiPrime_noCorrL1_->SetAddress(&HLT_Dimuon14_PsiPrime_noCorrL1_); }
    b_HLT_Dimuon16_Jpsi_ = tree->GetBranch("HLT_Dimuon16_Jpsi");
    if (b_HLT_Dimuon16_Jpsi_) { b_HLT_Dimuon16_Jpsi_->SetAddress(&HLT_Dimuon16_Jpsi_); }
    b_HLT_Dimuon18_PsiPrime_ = tree->GetBranch("HLT_Dimuon18_PsiPrime");
    if (b_HLT_Dimuon18_PsiPrime_) { b_HLT_Dimuon18_PsiPrime_->SetAddress(&HLT_Dimuon18_PsiPrime_); }
    b_HLT_Dimuon18_PsiPrime_noCorrL1_ = tree->GetBranch("HLT_Dimuon18_PsiPrime_noCorrL1");
    if (b_HLT_Dimuon18_PsiPrime_noCorrL1_) { b_HLT_Dimuon18_PsiPrime_noCorrL1_->SetAddress(&HLT_Dimuon18_PsiPrime_noCorrL1_); }
    b_HLT_Dimuon20_Jpsi_ = tree->GetBranch("HLT_Dimuon20_Jpsi");
    if (b_HLT_Dimuon20_Jpsi_) { b_HLT_Dimuon20_Jpsi_->SetAddress(&HLT_Dimuon20_Jpsi_); }
    b_HLT_Dimuon20_Jpsi_Barrel_Seagulls_ = tree->GetBranch("HLT_Dimuon20_Jpsi_Barrel_Seagulls");
    if (b_HLT_Dimuon20_Jpsi_Barrel_Seagulls_) { b_HLT_Dimuon20_Jpsi_Barrel_Seagulls_->SetAddress(&HLT_Dimuon20_Jpsi_Barrel_Seagulls_); }
    b_HLT_Dimuon24_Phi_noCorrL1_ = tree->GetBranch("HLT_Dimuon24_Phi_noCorrL1");
    if (b_HLT_Dimuon24_Phi_noCorrL1_) { b_HLT_Dimuon24_Phi_noCorrL1_->SetAddress(&HLT_Dimuon24_Phi_noCorrL1_); }
    b_HLT_Dimuon24_Upsilon_noCorrL1_ = tree->GetBranch("HLT_Dimuon24_Upsilon_noCorrL1");
    if (b_HLT_Dimuon24_Upsilon_noCorrL1_) { b_HLT_Dimuon24_Upsilon_noCorrL1_->SetAddress(&HLT_Dimuon24_Upsilon_noCorrL1_); }
    b_HLT_Dimuon25_Jpsi_ = tree->GetBranch("HLT_Dimuon25_Jpsi");
    if (b_HLT_Dimuon25_Jpsi_) { b_HLT_Dimuon25_Jpsi_->SetAddress(&HLT_Dimuon25_Jpsi_); }
    b_HLT_Dimuon25_Jpsi_noCorrL1_ = tree->GetBranch("HLT_Dimuon25_Jpsi_noCorrL1");
    if (b_HLT_Dimuon25_Jpsi_noCorrL1_) { b_HLT_Dimuon25_Jpsi_noCorrL1_->SetAddress(&HLT_Dimuon25_Jpsi_noCorrL1_); }
    b_HLT_Dimuon6_Jpsi_NoVertexing_ = tree->GetBranch("HLT_Dimuon6_Jpsi_NoVertexing");
    if (b_HLT_Dimuon6_Jpsi_NoVertexing_) { b_HLT_Dimuon6_Jpsi_NoVertexing_->SetAddress(&HLT_Dimuon6_Jpsi_NoVertexing_); }
    b_HLT_Dimuon8_PsiPrime_Barrel_ = tree->GetBranch("HLT_Dimuon8_PsiPrime_Barrel");
    if (b_HLT_Dimuon8_PsiPrime_Barrel_) { b_HLT_Dimuon8_PsiPrime_Barrel_->SetAddress(&HLT_Dimuon8_PsiPrime_Barrel_); }
    b_HLT_Dimuon8_Upsilon_Barrel_ = tree->GetBranch("HLT_Dimuon8_Upsilon_Barrel");
    if (b_HLT_Dimuon8_Upsilon_Barrel_) { b_HLT_Dimuon8_Upsilon_Barrel_->SetAddress(&HLT_Dimuon8_Upsilon_Barrel_); }
    b_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_ = tree->GetBranch("HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT");
    if (b_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_) { b_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_->SetAddress(&HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_); }
    b_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_ = tree->GetBranch("HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT");
    if (b_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_) { b_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_->SetAddress(&HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_); }
    b_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_ = tree->GetBranch("HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT");
    if (b_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_) { b_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_->SetAddress(&HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_); }
    b_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_ = tree->GetBranch("HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT");
    if (b_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_) { b_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_->SetAddress(&HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_); }
    b_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_ = tree->GetBranch("HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55");
    if (b_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_) { b_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_->SetAddress(&HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_); }
    b_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_ = tree->GetBranch("HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55");
    if (b_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_) { b_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_->SetAddress(&HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_); }
    b_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_ = tree->GetBranch("HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55");
    if (b_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_) { b_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_->SetAddress(&HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_); }
    b_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_ = tree->GetBranch("HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55");
    if (b_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_) { b_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_->SetAddress(&HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_); }
    b_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_ = tree->GetBranch("HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55");
    if (b_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_) { b_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_->SetAddress(&HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_); }
    b_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_ = tree->GetBranch("HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55");
    if (b_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_) { b_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_->SetAddress(&HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_); }
    b_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_ = tree->GetBranch("HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55");
    if (b_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_) { b_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_->SetAddress(&HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_); }
    b_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_ = tree->GetBranch("HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55");
    if (b_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_) { b_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_->SetAddress(&HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_); }
    b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_ = tree->GetBranch("HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId");
    if (b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_) { b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_->SetAddress(&HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_); }
    b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_ = tree->GetBranch("HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55");
    if (b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_) { b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_->SetAddress(&HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_); }
    b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_ = tree->GetBranch("HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto");
    if (b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_) { b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_->SetAddress(&HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_); }
    b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_ = tree->GetBranch("HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55");
    if (b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_) { b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_->SetAddress(&HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_); }
    b_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70_ = tree->GetBranch("HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70");
    if (b_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70_) { b_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70_->SetAddress(&HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70_); }
    b_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_ = tree->GetBranch("HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90");
    if (b_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_) { b_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_->SetAddress(&HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_); }
    b_HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55_ = tree->GetBranch("HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55");
    if (b_HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55_) { b_HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55_->SetAddress(&HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55_); }
    b_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_ = tree->GetBranch("HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90");
    if (b_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_) { b_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_->SetAddress(&HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_); }
    b_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_ = tree->GetBranch("HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95");
    if (b_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_) { b_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_->SetAddress(&HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_); }
    b_HLT_DoubleEle10_eta1p22_mMax6_ = tree->GetBranch("HLT_DoubleEle10_eta1p22_mMax6");
    if (b_HLT_DoubleEle10_eta1p22_mMax6_) { b_HLT_DoubleEle10_eta1p22_mMax6_->SetAddress(&HLT_DoubleEle10_eta1p22_mMax6_); }
    b_HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf_ = tree->GetBranch("HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf");
    if (b_HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf_) { b_HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf_->SetAddress(&HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf_); }
    b_HLT_DoubleEle24_eta2p1_WPTight_Gsf_ = tree->GetBranch("HLT_DoubleEle24_eta2p1_WPTight_Gsf");
    if (b_HLT_DoubleEle24_eta2p1_WPTight_Gsf_) { b_HLT_DoubleEle24_eta2p1_WPTight_Gsf_->SetAddress(&HLT_DoubleEle24_eta2p1_WPTight_Gsf_); }
    b_HLT_DoubleEle25_CaloIdL_GsfTrkIdVL_ = tree->GetBranch("HLT_DoubleEle25_CaloIdL_GsfTrkIdVL");
    if (b_HLT_DoubleEle25_CaloIdL_GsfTrkIdVL_) { b_HLT_DoubleEle25_CaloIdL_GsfTrkIdVL_->SetAddress(&HLT_DoubleEle25_CaloIdL_GsfTrkIdVL_); }
    b_HLT_DoubleEle25_CaloIdL_MW_ = tree->GetBranch("HLT_DoubleEle25_CaloIdL_MW");
    if (b_HLT_DoubleEle25_CaloIdL_MW_) { b_HLT_DoubleEle25_CaloIdL_MW_->SetAddress(&HLT_DoubleEle25_CaloIdL_MW_); }
    b_HLT_DoubleEle27_CaloIdL_MW_ = tree->GetBranch("HLT_DoubleEle27_CaloIdL_MW");
    if (b_HLT_DoubleEle27_CaloIdL_MW_) { b_HLT_DoubleEle27_CaloIdL_MW_->SetAddress(&HLT_DoubleEle27_CaloIdL_MW_); }
    b_HLT_DoubleEle33_CaloIdL_ = tree->GetBranch("HLT_DoubleEle33_CaloIdL");
    if (b_HLT_DoubleEle33_CaloIdL_) { b_HLT_DoubleEle33_CaloIdL_->SetAddress(&HLT_DoubleEle33_CaloIdL_); }
    b_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_ = tree->GetBranch("HLT_DoubleEle33_CaloIdL_GsfTrkIdVL");
    if (b_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_) { b_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_->SetAddress(&HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_); }
    b_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW_ = tree->GetBranch("HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW");
    if (b_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW_) { b_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW_->SetAddress(&HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW_); }
    b_HLT_DoubleEle33_CaloIdL_MW_ = tree->GetBranch("HLT_DoubleEle33_CaloIdL_MW");
    if (b_HLT_DoubleEle33_CaloIdL_MW_) { b_HLT_DoubleEle33_CaloIdL_MW_->SetAddress(&HLT_DoubleEle33_CaloIdL_MW_); }
    b_HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL_ = tree->GetBranch("HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL");
    if (b_HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL_) { b_HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL_->SetAddress(&HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL_); }
    b_HLT_DoubleEle4_eta1p22_mMax6_ = tree->GetBranch("HLT_DoubleEle4_eta1p22_mMax6");
    if (b_HLT_DoubleEle4_eta1p22_mMax6_) { b_HLT_DoubleEle4_eta1p22_mMax6_->SetAddress(&HLT_DoubleEle4_eta1p22_mMax6_); }
    b_HLT_DoubleEle4p5_eta1p22_mMax6_ = tree->GetBranch("HLT_DoubleEle4p5_eta1p22_mMax6");
    if (b_HLT_DoubleEle4p5_eta1p22_mMax6_) { b_HLT_DoubleEle4p5_eta1p22_mMax6_->SetAddress(&HLT_DoubleEle4p5_eta1p22_mMax6_); }
    b_HLT_DoubleEle5_eta1p22_mMax6_ = tree->GetBranch("HLT_DoubleEle5_eta1p22_mMax6");
    if (b_HLT_DoubleEle5_eta1p22_mMax6_) { b_HLT_DoubleEle5_eta1p22_mMax6_->SetAddress(&HLT_DoubleEle5_eta1p22_mMax6_); }
    b_HLT_DoubleEle5p5_eta1p22_mMax6_ = tree->GetBranch("HLT_DoubleEle5p5_eta1p22_mMax6");
    if (b_HLT_DoubleEle5p5_eta1p22_mMax6_) { b_HLT_DoubleEle5p5_eta1p22_mMax6_->SetAddress(&HLT_DoubleEle5p5_eta1p22_mMax6_); }
    b_HLT_DoubleEle6_eta1p22_mMax6_ = tree->GetBranch("HLT_DoubleEle6_eta1p22_mMax6");
    if (b_HLT_DoubleEle6_eta1p22_mMax6_) { b_HLT_DoubleEle6_eta1p22_mMax6_->SetAddress(&HLT_DoubleEle6_eta1p22_mMax6_); }
    b_HLT_DoubleEle6p5_eta1p22_mMax6_ = tree->GetBranch("HLT_DoubleEle6p5_eta1p22_mMax6");
    if (b_HLT_DoubleEle6p5_eta1p22_mMax6_) { b_HLT_DoubleEle6p5_eta1p22_mMax6_->SetAddress(&HLT_DoubleEle6p5_eta1p22_mMax6_); }
    b_HLT_DoubleEle7_eta1p22_mMax6_ = tree->GetBranch("HLT_DoubleEle7_eta1p22_mMax6");
    if (b_HLT_DoubleEle7_eta1p22_mMax6_) { b_HLT_DoubleEle7_eta1p22_mMax6_->SetAddress(&HLT_DoubleEle7_eta1p22_mMax6_); }
    b_HLT_DoubleEle7p5_eta1p22_mMax6_ = tree->GetBranch("HLT_DoubleEle7p5_eta1p22_mMax6");
    if (b_HLT_DoubleEle7p5_eta1p22_mMax6_) { b_HLT_DoubleEle7p5_eta1p22_mMax6_->SetAddress(&HLT_DoubleEle7p5_eta1p22_mMax6_); }
    b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_ = tree->GetBranch("HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350");
    if (b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_) { b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_->SetAddress(&HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_); }
    b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250_ = tree->GetBranch("HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250");
    if (b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250_) { b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250_->SetAddress(&HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250_); }
    b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300_ = tree->GetBranch("HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300");
    if (b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300_) { b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300_->SetAddress(&HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300_); }
    b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_ = tree->GetBranch("HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350");
    if (b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_) { b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_->SetAddress(&HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_); }
    b_HLT_DoubleEle8_eta1p22_mMax6_ = tree->GetBranch("HLT_DoubleEle8_eta1p22_mMax6");
    if (b_HLT_DoubleEle8_eta1p22_mMax6_) { b_HLT_DoubleEle8_eta1p22_mMax6_->SetAddress(&HLT_DoubleEle8_eta1p22_mMax6_); }
    b_HLT_DoubleEle8p5_eta1p22_mMax6_ = tree->GetBranch("HLT_DoubleEle8p5_eta1p22_mMax6");
    if (b_HLT_DoubleEle8p5_eta1p22_mMax6_) { b_HLT_DoubleEle8p5_eta1p22_mMax6_->SetAddress(&HLT_DoubleEle8p5_eta1p22_mMax6_); }
    b_HLT_DoubleEle9_eta1p22_mMax6_ = tree->GetBranch("HLT_DoubleEle9_eta1p22_mMax6");
    if (b_HLT_DoubleEle9_eta1p22_mMax6_) { b_HLT_DoubleEle9_eta1p22_mMax6_->SetAddress(&HLT_DoubleEle9_eta1p22_mMax6_); }
    b_HLT_DoubleEle9p5_eta1p22_mMax6_ = tree->GetBranch("HLT_DoubleEle9p5_eta1p22_mMax6");
    if (b_HLT_DoubleEle9p5_eta1p22_mMax6_) { b_HLT_DoubleEle9p5_eta1p22_mMax6_->SetAddress(&HLT_DoubleEle9p5_eta1p22_mMax6_); }
    b_HLT_DoubleIsoMu17_eta2p1_ = tree->GetBranch("HLT_DoubleIsoMu17_eta2p1");
    if (b_HLT_DoubleIsoMu17_eta2p1_) { b_HLT_DoubleIsoMu17_eta2p1_->SetAddress(&HLT_DoubleIsoMu17_eta2p1_); }
    b_HLT_DoubleIsoMu17_eta2p1_noDzCut_ = tree->GetBranch("HLT_DoubleIsoMu17_eta2p1_noDzCut");
    if (b_HLT_DoubleIsoMu17_eta2p1_noDzCut_) { b_HLT_DoubleIsoMu17_eta2p1_noDzCut_->SetAddress(&HLT_DoubleIsoMu17_eta2p1_noDzCut_); }
    b_HLT_DoubleIsoMu20_eta2p1_ = tree->GetBranch("HLT_DoubleIsoMu20_eta2p1");
    if (b_HLT_DoubleIsoMu20_eta2p1_) { b_HLT_DoubleIsoMu20_eta2p1_->SetAddress(&HLT_DoubleIsoMu20_eta2p1_); }
    b_HLT_DoubleIsoMu24_eta2p1_ = tree->GetBranch("HLT_DoubleIsoMu24_eta2p1");
    if (b_HLT_DoubleIsoMu24_eta2p1_) { b_HLT_DoubleIsoMu24_eta2p1_->SetAddress(&HLT_DoubleIsoMu24_eta2p1_); }
    b_HLT_DoubleJet90_Double30_DoubleBTagCSV_p087_ = tree->GetBranch("HLT_DoubleJet90_Double30_DoubleBTagCSV_p087");
    if (b_HLT_DoubleJet90_Double30_DoubleBTagCSV_p087_) { b_HLT_DoubleJet90_Double30_DoubleBTagCSV_p087_->SetAddress(&HLT_DoubleJet90_Double30_DoubleBTagCSV_p087_); }
    b_HLT_DoubleJet90_Double30_TripleBTagCSV_p087_ = tree->GetBranch("HLT_DoubleJet90_Double30_TripleBTagCSV_p087");
    if (b_HLT_DoubleJet90_Double30_TripleBTagCSV_p087_) { b_HLT_DoubleJet90_Double30_TripleBTagCSV_p087_->SetAddress(&HLT_DoubleJet90_Double30_TripleBTagCSV_p087_); }
    b_HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6_ = tree->GetBranch("HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6");
    if (b_HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6_) { b_HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6_->SetAddress(&HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6_); }
    b_HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160_ = tree->GetBranch("HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160");
    if (b_HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160_) { b_HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160_->SetAddress(&HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160_); }
    b_HLT_DoubleJetsC100_SingleBTagCSV_p014_ = tree->GetBranch("HLT_DoubleJetsC100_SingleBTagCSV_p014");
    if (b_HLT_DoubleJetsC100_SingleBTagCSV_p014_) { b_HLT_DoubleJetsC100_SingleBTagCSV_p014_->SetAddress(&HLT_DoubleJetsC100_SingleBTagCSV_p014_); }
    b_HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350_ = tree->GetBranch("HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350");
    if (b_HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350_) { b_HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350_->SetAddress(&HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350_); }
    b_HLT_DoubleJetsC100_SingleBTagCSV_p026_ = tree->GetBranch("HLT_DoubleJetsC100_SingleBTagCSV_p026");
    if (b_HLT_DoubleJetsC100_SingleBTagCSV_p026_) { b_HLT_DoubleJetsC100_SingleBTagCSV_p026_->SetAddress(&HLT_DoubleJetsC100_SingleBTagCSV_p026_); }
    b_HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350_ = tree->GetBranch("HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350");
    if (b_HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350_) { b_HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350_->SetAddress(&HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350_); }
    b_HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6_ = tree->GetBranch("HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6");
    if (b_HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6_) { b_HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6_->SetAddress(&HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6_); }
    b_HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172_ = tree->GetBranch("HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172");
    if (b_HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172_) { b_HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172_->SetAddress(&HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172_); }
    b_HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_ = tree->GetBranch("HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm");
    if (b_HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_) { b_HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_->SetAddress(&HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_); }
    b_HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ = tree->GetBranch("HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm");
    if (b_HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_) { b_HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_->SetAddress(&HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_); }
    b_HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_ = tree->GetBranch("HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm");
    if (b_HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_) { b_HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_->SetAddress(&HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_); }
    b_HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ = tree->GetBranch("HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm");
    if (b_HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_) { b_HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_->SetAddress(&HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_); }
    b_HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ = tree->GetBranch("HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm");
    if (b_HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_) { b_HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_->SetAddress(&HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_); }
    b_HLT_DoubleL2Mu23NoVtx_2Cha_ = tree->GetBranch("HLT_DoubleL2Mu23NoVtx_2Cha");
    if (b_HLT_DoubleL2Mu23NoVtx_2Cha_) { b_HLT_DoubleL2Mu23NoVtx_2Cha_->SetAddress(&HLT_DoubleL2Mu23NoVtx_2Cha_); }
    b_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_ = tree->GetBranch("HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed");
    if (b_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_) { b_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_->SetAddress(&HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_); }
    b_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_ = tree->GetBranch("HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched");
    if (b_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_) { b_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_->SetAddress(&HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_); }
    b_HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_ = tree->GetBranch("HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched");
    if (b_HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_) { b_HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_->SetAddress(&HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_); }
    b_HLT_DoubleL2Mu25NoVtx_2Cha_ = tree->GetBranch("HLT_DoubleL2Mu25NoVtx_2Cha");
    if (b_HLT_DoubleL2Mu25NoVtx_2Cha_) { b_HLT_DoubleL2Mu25NoVtx_2Cha_->SetAddress(&HLT_DoubleL2Mu25NoVtx_2Cha_); }
    b_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_ = tree->GetBranch("HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed");
    if (b_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_) { b_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_->SetAddress(&HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_); }
    b_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_ = tree->GetBranch("HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4");
    if (b_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_) { b_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_->SetAddress(&HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_); }
    b_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_ = tree->GetBranch("HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched");
    if (b_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_) { b_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_->SetAddress(&HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_); }
    b_HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_ = tree->GetBranch("HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4");
    if (b_HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_) { b_HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_->SetAddress(&HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_); }
    b_HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_ = tree->GetBranch("HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched");
    if (b_HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_) { b_HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_->SetAddress(&HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_); }
    b_HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_ = tree->GetBranch("HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4");
    if (b_HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_) { b_HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_->SetAddress(&HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_); }
    b_HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_ = tree->GetBranch("HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4");
    if (b_HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_) { b_HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_->SetAddress(&HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_); }
    b_HLT_DoubleL2Mu50_ = tree->GetBranch("HLT_DoubleL2Mu50");
    if (b_HLT_DoubleL2Mu50_) { b_HLT_DoubleL2Mu50_->SetAddress(&HLT_DoubleL2Mu50_); }
    b_HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_ = tree->GetBranch("HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm");
    if (b_HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_) { b_HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_->SetAddress(&HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_); }
    b_HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_ = tree->GetBranch("HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm");
    if (b_HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_) { b_HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_->SetAddress(&HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_); }
    b_HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_ = tree->GetBranch("HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm");
    if (b_HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_) { b_HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_->SetAddress(&HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_); }
    b_HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_ = tree->GetBranch("HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm");
    if (b_HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_) { b_HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_->SetAddress(&HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_); }
    b_HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_ = tree->GetBranch("HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm");
    if (b_HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_) { b_HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_->SetAddress(&HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_); }
    b_HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_ = tree->GetBranch("HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm");
    if (b_HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_) { b_HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_->SetAddress(&HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_); }
    b_HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg");
    if (b_HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_) { b_HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_->SetAddress(&HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_); }
    b_HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg_) { b_HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg");
    if (b_HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_) { b_HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_->SetAddress(&HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_); }
    b_HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg_) { b_HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_ = tree->GetBranch("HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1");
    if (b_HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_) { b_HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_->SetAddress(&HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_); }
    b_HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg");
    if (b_HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_) { b_HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_->SetAddress(&HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_); }
    b_HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg_) { b_HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg");
    if (b_HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_) { b_HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_->SetAddress(&HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_); }
    b_HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg_) { b_HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_) { b_HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg");
    if (b_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_) { b_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_->SetAddress(&HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_); }
    b_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_) { b_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg");
    if (b_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_) { b_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_->SetAddress(&HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_); }
    b_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_ = tree->GetBranch("HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1");
    if (b_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_) { b_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_->SetAddress(&HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_); }
    b_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_) { b_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg_) { b_HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_ = tree->GetBranch("HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1");
    if (b_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_) { b_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_->SetAddress(&HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_); }
    b_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg_) { b_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_ = tree->GetBranch("HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60");
    if (b_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_) { b_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_->SetAddress(&HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_); }
    b_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_ = tree->GetBranch("HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75");
    if (b_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_) { b_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_->SetAddress(&HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_); }
    b_HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_ = tree->GetBranch("HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1");
    if (b_HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_) { b_HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_->SetAddress(&HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_); }
    b_HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_) { b_HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_) { b_HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_ = tree->GetBranch("HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1");
    if (b_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_) { b_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_->SetAddress(&HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_); }
    b_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_) { b_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleMu0_ = tree->GetBranch("HLT_DoubleMu0");
    if (b_HLT_DoubleMu0_) { b_HLT_DoubleMu0_->SetAddress(&HLT_DoubleMu0_); }
    b_HLT_DoubleMu18NoFiltersNoVtx_ = tree->GetBranch("HLT_DoubleMu18NoFiltersNoVtx");
    if (b_HLT_DoubleMu18NoFiltersNoVtx_) { b_HLT_DoubleMu18NoFiltersNoVtx_->SetAddress(&HLT_DoubleMu18NoFiltersNoVtx_); }
    b_HLT_DoubleMu20_7_Mass0to30_L1_DM4_ = tree->GetBranch("HLT_DoubleMu20_7_Mass0to30_L1_DM4");
    if (b_HLT_DoubleMu20_7_Mass0to30_L1_DM4_) { b_HLT_DoubleMu20_7_Mass0to30_L1_DM4_->SetAddress(&HLT_DoubleMu20_7_Mass0to30_L1_DM4_); }
    b_HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_ = tree->GetBranch("HLT_DoubleMu20_7_Mass0to30_L1_DM4EG");
    if (b_HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_) { b_HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_->SetAddress(&HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_); }
    b_HLT_DoubleMu20_7_Mass0to30_Photon23_ = tree->GetBranch("HLT_DoubleMu20_7_Mass0to30_Photon23");
    if (b_HLT_DoubleMu20_7_Mass0to30_Photon23_) { b_HLT_DoubleMu20_7_Mass0to30_Photon23_->SetAddress(&HLT_DoubleMu20_7_Mass0to30_Photon23_); }
    b_HLT_DoubleMu23NoFiltersNoVtxDisplaced_ = tree->GetBranch("HLT_DoubleMu23NoFiltersNoVtxDisplaced");
    if (b_HLT_DoubleMu23NoFiltersNoVtxDisplaced_) { b_HLT_DoubleMu23NoFiltersNoVtxDisplaced_->SetAddress(&HLT_DoubleMu23NoFiltersNoVtxDisplaced_); }
    b_HLT_DoubleMu28NoFiltersNoVtxDisplaced_ = tree->GetBranch("HLT_DoubleMu28NoFiltersNoVtxDisplaced");
    if (b_HLT_DoubleMu28NoFiltersNoVtxDisplaced_) { b_HLT_DoubleMu28NoFiltersNoVtxDisplaced_->SetAddress(&HLT_DoubleMu28NoFiltersNoVtxDisplaced_); }
    b_HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_ = tree->GetBranch("HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi");
    if (b_HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_) { b_HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_->SetAddress(&HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_); }
    b_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi_ = tree->GetBranch("HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi");
    if (b_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi_) { b_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi_->SetAddress(&HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi_); }
    b_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_ = tree->GetBranch("HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05");
    if (b_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_) { b_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_->SetAddress(&HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_); }
    b_HLT_DoubleMu33NoFiltersNoVtx_ = tree->GetBranch("HLT_DoubleMu33NoFiltersNoVtx");
    if (b_HLT_DoubleMu33NoFiltersNoVtx_) { b_HLT_DoubleMu33NoFiltersNoVtx_->SetAddress(&HLT_DoubleMu33NoFiltersNoVtx_); }
    b_HLT_DoubleMu33NoFiltersNoVtxDisplaced_ = tree->GetBranch("HLT_DoubleMu33NoFiltersNoVtxDisplaced");
    if (b_HLT_DoubleMu33NoFiltersNoVtxDisplaced_) { b_HLT_DoubleMu33NoFiltersNoVtxDisplaced_->SetAddress(&HLT_DoubleMu33NoFiltersNoVtxDisplaced_); }
    b_HLT_DoubleMu38NoFiltersNoVtx_ = tree->GetBranch("HLT_DoubleMu38NoFiltersNoVtx");
    if (b_HLT_DoubleMu38NoFiltersNoVtx_) { b_HLT_DoubleMu38NoFiltersNoVtx_->SetAddress(&HLT_DoubleMu38NoFiltersNoVtx_); }
    b_HLT_DoubleMu3_DCA_PFMET50_PFMHT60_ = tree->GetBranch("HLT_DoubleMu3_DCA_PFMET50_PFMHT60");
    if (b_HLT_DoubleMu3_DCA_PFMET50_PFMHT60_) { b_HLT_DoubleMu3_DCA_PFMET50_PFMHT60_->SetAddress(&HLT_DoubleMu3_DCA_PFMET50_PFMHT60_); }
    b_HLT_DoubleMu3_DZ_PFMET50_PFMHT60_ = tree->GetBranch("HLT_DoubleMu3_DZ_PFMET50_PFMHT60");
    if (b_HLT_DoubleMu3_DZ_PFMET50_PFMHT60_) { b_HLT_DoubleMu3_DZ_PFMET50_PFMHT60_->SetAddress(&HLT_DoubleMu3_DZ_PFMET50_PFMHT60_); }
    b_HLT_DoubleMu3_DZ_PFMET70_PFMHT70_ = tree->GetBranch("HLT_DoubleMu3_DZ_PFMET70_PFMHT70");
    if (b_HLT_DoubleMu3_DZ_PFMET70_PFMHT70_) { b_HLT_DoubleMu3_DZ_PFMET70_PFMHT70_->SetAddress(&HLT_DoubleMu3_DZ_PFMET70_PFMHT70_); }
    b_HLT_DoubleMu3_DZ_PFMET90_PFMHT90_ = tree->GetBranch("HLT_DoubleMu3_DZ_PFMET90_PFMHT90");
    if (b_HLT_DoubleMu3_DZ_PFMET90_PFMHT90_) { b_HLT_DoubleMu3_DZ_PFMET90_PFMHT90_->SetAddress(&HLT_DoubleMu3_DZ_PFMET90_PFMHT90_); }
    b_HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_ = tree->GetBranch("HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon");
    if (b_HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_) { b_HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_->SetAddress(&HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_); }
    b_HLT_DoubleMu3_PFMET50_ = tree->GetBranch("HLT_DoubleMu3_PFMET50");
    if (b_HLT_DoubleMu3_PFMET50_) { b_HLT_DoubleMu3_PFMET50_->SetAddress(&HLT_DoubleMu3_PFMET50_); }
    b_HLT_DoubleMu3_TkMu_DsTau3Mu_ = tree->GetBranch("HLT_DoubleMu3_TkMu_DsTau3Mu");
    if (b_HLT_DoubleMu3_TkMu_DsTau3Mu_) { b_HLT_DoubleMu3_TkMu_DsTau3Mu_->SetAddress(&HLT_DoubleMu3_TkMu_DsTau3Mu_); }
    b_HLT_DoubleMu3_Trk_Tau3mu_ = tree->GetBranch("HLT_DoubleMu3_Trk_Tau3mu");
    if (b_HLT_DoubleMu3_Trk_Tau3mu_) { b_HLT_DoubleMu3_Trk_Tau3mu_->SetAddress(&HLT_DoubleMu3_Trk_Tau3mu_); }
    b_HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_ = tree->GetBranch("HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass");
    if (b_HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_) { b_HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_->SetAddress(&HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_); }
    b_HLT_DoubleMu40NoFiltersNoVtxDisplaced_ = tree->GetBranch("HLT_DoubleMu40NoFiltersNoVtxDisplaced");
    if (b_HLT_DoubleMu40NoFiltersNoVtxDisplaced_) { b_HLT_DoubleMu40NoFiltersNoVtxDisplaced_->SetAddress(&HLT_DoubleMu40NoFiltersNoVtxDisplaced_); }
    b_HLT_DoubleMu43NoFiltersNoVtx_ = tree->GetBranch("HLT_DoubleMu43NoFiltersNoVtx");
    if (b_HLT_DoubleMu43NoFiltersNoVtx_) { b_HLT_DoubleMu43NoFiltersNoVtx_->SetAddress(&HLT_DoubleMu43NoFiltersNoVtx_); }
    b_HLT_DoubleMu48NoFiltersNoVtx_ = tree->GetBranch("HLT_DoubleMu48NoFiltersNoVtx");
    if (b_HLT_DoubleMu48NoFiltersNoVtx_) { b_HLT_DoubleMu48NoFiltersNoVtx_->SetAddress(&HLT_DoubleMu48NoFiltersNoVtx_); }
    b_HLT_DoubleMu4_3_Bs_ = tree->GetBranch("HLT_DoubleMu4_3_Bs");
    if (b_HLT_DoubleMu4_3_Bs_) { b_HLT_DoubleMu4_3_Bs_->SetAddress(&HLT_DoubleMu4_3_Bs_); }
    b_HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_ = tree->GetBranch("HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG");
    if (b_HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_) { b_HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_->SetAddress(&HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_); }
    b_HLT_DoubleMu4_3_Jpsi_ = tree->GetBranch("HLT_DoubleMu4_3_Jpsi");
    if (b_HLT_DoubleMu4_3_Jpsi_) { b_HLT_DoubleMu4_3_Jpsi_->SetAddress(&HLT_DoubleMu4_3_Jpsi_); }
    b_HLT_DoubleMu4_3_Jpsi_Displaced_ = tree->GetBranch("HLT_DoubleMu4_3_Jpsi_Displaced");
    if (b_HLT_DoubleMu4_3_Jpsi_Displaced_) { b_HLT_DoubleMu4_3_Jpsi_Displaced_->SetAddress(&HLT_DoubleMu4_3_Jpsi_Displaced_); }
    b_HLT_DoubleMu4_3_LowMass_ = tree->GetBranch("HLT_DoubleMu4_3_LowMass");
    if (b_HLT_DoubleMu4_3_LowMass_) { b_HLT_DoubleMu4_3_LowMass_->SetAddress(&HLT_DoubleMu4_3_LowMass_); }
    b_HLT_DoubleMu4_3_Photon4_BsToMMG_ = tree->GetBranch("HLT_DoubleMu4_3_Photon4_BsToMMG");
    if (b_HLT_DoubleMu4_3_Photon4_BsToMMG_) { b_HLT_DoubleMu4_3_Photon4_BsToMMG_->SetAddress(&HLT_DoubleMu4_3_Photon4_BsToMMG_); }
    b_HLT_DoubleMu4_JpsiTrkTrk_Displaced_ = tree->GetBranch("HLT_DoubleMu4_JpsiTrkTrk_Displaced");
    if (b_HLT_DoubleMu4_JpsiTrkTrk_Displaced_) { b_HLT_DoubleMu4_JpsiTrkTrk_Displaced_->SetAddress(&HLT_DoubleMu4_JpsiTrkTrk_Displaced_); }
    b_HLT_DoubleMu4_JpsiTrk_Bc_ = tree->GetBranch("HLT_DoubleMu4_JpsiTrk_Bc");
    if (b_HLT_DoubleMu4_JpsiTrk_Bc_) { b_HLT_DoubleMu4_JpsiTrk_Bc_->SetAddress(&HLT_DoubleMu4_JpsiTrk_Bc_); }
    b_HLT_DoubleMu4_JpsiTrk_Displaced_ = tree->GetBranch("HLT_DoubleMu4_JpsiTrk_Displaced");
    if (b_HLT_DoubleMu4_JpsiTrk_Displaced_) { b_HLT_DoubleMu4_JpsiTrk_Displaced_->SetAddress(&HLT_DoubleMu4_JpsiTrk_Displaced_); }
    b_HLT_DoubleMu4_Jpsi_Displaced_ = tree->GetBranch("HLT_DoubleMu4_Jpsi_Displaced");
    if (b_HLT_DoubleMu4_Jpsi_Displaced_) { b_HLT_DoubleMu4_Jpsi_Displaced_->SetAddress(&HLT_DoubleMu4_Jpsi_Displaced_); }
    b_HLT_DoubleMu4_Jpsi_NoVertexing_ = tree->GetBranch("HLT_DoubleMu4_Jpsi_NoVertexing");
    if (b_HLT_DoubleMu4_Jpsi_NoVertexing_) { b_HLT_DoubleMu4_Jpsi_NoVertexing_->SetAddress(&HLT_DoubleMu4_Jpsi_NoVertexing_); }
    b_HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_ = tree->GetBranch("HLT_DoubleMu4_LowMassNonResonantTrk_Displaced");
    if (b_HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_) { b_HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_->SetAddress(&HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_); }
    b_HLT_DoubleMu4_LowMass_Displaced_ = tree->GetBranch("HLT_DoubleMu4_LowMass_Displaced");
    if (b_HLT_DoubleMu4_LowMass_Displaced_) { b_HLT_DoubleMu4_LowMass_Displaced_->SetAddress(&HLT_DoubleMu4_LowMass_Displaced_); }
    b_HLT_DoubleMu4_Mass3p8_DZ_PFHT350_ = tree->GetBranch("HLT_DoubleMu4_Mass3p8_DZ_PFHT350");
    if (b_HLT_DoubleMu4_Mass3p8_DZ_PFHT350_) { b_HLT_DoubleMu4_Mass3p8_DZ_PFHT350_->SetAddress(&HLT_DoubleMu4_Mass3p8_DZ_PFHT350_); }
    b_HLT_DoubleMu4_Mass8_DZ_PFHT350_ = tree->GetBranch("HLT_DoubleMu4_Mass8_DZ_PFHT350");
    if (b_HLT_DoubleMu4_Mass8_DZ_PFHT350_) { b_HLT_DoubleMu4_Mass8_DZ_PFHT350_->SetAddress(&HLT_DoubleMu4_Mass8_DZ_PFHT350_); }
    b_HLT_DoubleMu4_MuMuTrk_Displaced_ = tree->GetBranch("HLT_DoubleMu4_MuMuTrk_Displaced");
    if (b_HLT_DoubleMu4_MuMuTrk_Displaced_) { b_HLT_DoubleMu4_MuMuTrk_Displaced_->SetAddress(&HLT_DoubleMu4_MuMuTrk_Displaced_); }
    b_HLT_DoubleMu4_PsiPrimeTrk_Displaced_ = tree->GetBranch("HLT_DoubleMu4_PsiPrimeTrk_Displaced");
    if (b_HLT_DoubleMu4_PsiPrimeTrk_Displaced_) { b_HLT_DoubleMu4_PsiPrimeTrk_Displaced_->SetAddress(&HLT_DoubleMu4_PsiPrimeTrk_Displaced_); }
    b_HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_ = tree->GetBranch("HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL");
    if (b_HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_) { b_HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_->SetAddress(&HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_); }
    b_HLT_DoubleMu8_Mass8_PFHT250_ = tree->GetBranch("HLT_DoubleMu8_Mass8_PFHT250");
    if (b_HLT_DoubleMu8_Mass8_PFHT250_) { b_HLT_DoubleMu8_Mass8_PFHT250_->SetAddress(&HLT_DoubleMu8_Mass8_PFHT250_); }
    b_HLT_DoubleMu8_Mass8_PFHT300_ = tree->GetBranch("HLT_DoubleMu8_Mass8_PFHT300");
    if (b_HLT_DoubleMu8_Mass8_PFHT300_) { b_HLT_DoubleMu8_Mass8_PFHT300_->SetAddress(&HLT_DoubleMu8_Mass8_PFHT300_); }
    b_HLT_DoubleMu8_Mass8_PFHT350_ = tree->GetBranch("HLT_DoubleMu8_Mass8_PFHT350");
    if (b_HLT_DoubleMu8_Mass8_PFHT350_) { b_HLT_DoubleMu8_Mass8_PFHT350_->SetAddress(&HLT_DoubleMu8_Mass8_PFHT350_); }
    b_HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33_ = tree->GetBranch("HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33");
    if (b_HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33_) { b_HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33_->SetAddress(&HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33_); }
    b_HLT_DoublePFJets100_CaloBTagCSV_p33_ = tree->GetBranch("HLT_DoublePFJets100_CaloBTagCSV_p33");
    if (b_HLT_DoublePFJets100_CaloBTagCSV_p33_) { b_HLT_DoublePFJets100_CaloBTagCSV_p33_->SetAddress(&HLT_DoublePFJets100_CaloBTagCSV_p33_); }
    b_HLT_DoublePFJets100_CaloBTagCSV_p79_ = tree->GetBranch("HLT_DoublePFJets100_CaloBTagCSV_p79");
    if (b_HLT_DoublePFJets100_CaloBTagCSV_p79_) { b_HLT_DoublePFJets100_CaloBTagCSV_p79_->SetAddress(&HLT_DoublePFJets100_CaloBTagCSV_p79_); }
    b_HLT_DoublePFJets100_CaloBTagDeepCSV_p71_ = tree->GetBranch("HLT_DoublePFJets100_CaloBTagDeepCSV_p71");
    if (b_HLT_DoublePFJets100_CaloBTagDeepCSV_p71_) { b_HLT_DoublePFJets100_CaloBTagDeepCSV_p71_->SetAddress(&HLT_DoublePFJets100_CaloBTagDeepCSV_p71_); }
    b_HLT_DoublePFJets100_PFBTagDeepCSV_p71_ = tree->GetBranch("HLT_DoublePFJets100_PFBTagDeepCSV_p71");
    if (b_HLT_DoublePFJets100_PFBTagDeepCSV_p71_) { b_HLT_DoublePFJets100_PFBTagDeepCSV_p71_->SetAddress(&HLT_DoublePFJets100_PFBTagDeepCSV_p71_); }
    b_HLT_DoublePFJets100_PFBTagDeepJet_p71_ = tree->GetBranch("HLT_DoublePFJets100_PFBTagDeepJet_p71");
    if (b_HLT_DoublePFJets100_PFBTagDeepJet_p71_) { b_HLT_DoublePFJets100_PFBTagDeepJet_p71_->SetAddress(&HLT_DoublePFJets100_PFBTagDeepJet_p71_); }
    b_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33_ = tree->GetBranch("HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33");
    if (b_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33_) { b_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33_->SetAddress(&HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33_); }
    b_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79_ = tree->GetBranch("HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79");
    if (b_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79_) { b_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79_->SetAddress(&HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79_); }
    b_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ = tree->GetBranch("HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71");
    if (b_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) { b_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_->SetAddress(&HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_); }
    b_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_ = tree->GetBranch("HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71");
    if (b_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_) { b_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_->SetAddress(&HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_); }
    b_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_ = tree->GetBranch("HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71");
    if (b_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_) { b_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_->SetAddress(&HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_); }
    b_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33_ = tree->GetBranch("HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33");
    if (b_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33_) { b_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33_->SetAddress(&HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33_); }
    b_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79_ = tree->GetBranch("HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79");
    if (b_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79_) { b_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79_->SetAddress(&HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79_); }
    b_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ = tree->GetBranch("HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71");
    if (b_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) { b_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_->SetAddress(&HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_); }
    b_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_ = tree->GetBranch("HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71");
    if (b_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_) { b_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_->SetAddress(&HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_); }
    b_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_ = tree->GetBranch("HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71");
    if (b_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_) { b_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_->SetAddress(&HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_); }
    b_HLT_DoublePFJets200_CaloBTagCSV_p33_ = tree->GetBranch("HLT_DoublePFJets200_CaloBTagCSV_p33");
    if (b_HLT_DoublePFJets200_CaloBTagCSV_p33_) { b_HLT_DoublePFJets200_CaloBTagCSV_p33_->SetAddress(&HLT_DoublePFJets200_CaloBTagCSV_p33_); }
    b_HLT_DoublePFJets200_CaloBTagCSV_p79_ = tree->GetBranch("HLT_DoublePFJets200_CaloBTagCSV_p79");
    if (b_HLT_DoublePFJets200_CaloBTagCSV_p79_) { b_HLT_DoublePFJets200_CaloBTagCSV_p79_->SetAddress(&HLT_DoublePFJets200_CaloBTagCSV_p79_); }
    b_HLT_DoublePFJets200_CaloBTagDeepCSV_p71_ = tree->GetBranch("HLT_DoublePFJets200_CaloBTagDeepCSV_p71");
    if (b_HLT_DoublePFJets200_CaloBTagDeepCSV_p71_) { b_HLT_DoublePFJets200_CaloBTagDeepCSV_p71_->SetAddress(&HLT_DoublePFJets200_CaloBTagDeepCSV_p71_); }
    b_HLT_DoublePFJets200_PFBTagDeepCSV_p71_ = tree->GetBranch("HLT_DoublePFJets200_PFBTagDeepCSV_p71");
    if (b_HLT_DoublePFJets200_PFBTagDeepCSV_p71_) { b_HLT_DoublePFJets200_PFBTagDeepCSV_p71_->SetAddress(&HLT_DoublePFJets200_PFBTagDeepCSV_p71_); }
    b_HLT_DoublePFJets200_PFBTagDeepJet_p71_ = tree->GetBranch("HLT_DoublePFJets200_PFBTagDeepJet_p71");
    if (b_HLT_DoublePFJets200_PFBTagDeepJet_p71_) { b_HLT_DoublePFJets200_PFBTagDeepJet_p71_->SetAddress(&HLT_DoublePFJets200_PFBTagDeepJet_p71_); }
    b_HLT_DoublePFJets350_CaloBTagCSV_p33_ = tree->GetBranch("HLT_DoublePFJets350_CaloBTagCSV_p33");
    if (b_HLT_DoublePFJets350_CaloBTagCSV_p33_) { b_HLT_DoublePFJets350_CaloBTagCSV_p33_->SetAddress(&HLT_DoublePFJets350_CaloBTagCSV_p33_); }
    b_HLT_DoublePFJets350_CaloBTagCSV_p79_ = tree->GetBranch("HLT_DoublePFJets350_CaloBTagCSV_p79");
    if (b_HLT_DoublePFJets350_CaloBTagCSV_p79_) { b_HLT_DoublePFJets350_CaloBTagCSV_p79_->SetAddress(&HLT_DoublePFJets350_CaloBTagCSV_p79_); }
    b_HLT_DoublePFJets350_CaloBTagDeepCSV_p71_ = tree->GetBranch("HLT_DoublePFJets350_CaloBTagDeepCSV_p71");
    if (b_HLT_DoublePFJets350_CaloBTagDeepCSV_p71_) { b_HLT_DoublePFJets350_CaloBTagDeepCSV_p71_->SetAddress(&HLT_DoublePFJets350_CaloBTagDeepCSV_p71_); }
    b_HLT_DoublePFJets350_PFBTagDeepCSV_p71_ = tree->GetBranch("HLT_DoublePFJets350_PFBTagDeepCSV_p71");
    if (b_HLT_DoublePFJets350_PFBTagDeepCSV_p71_) { b_HLT_DoublePFJets350_PFBTagDeepCSV_p71_->SetAddress(&HLT_DoublePFJets350_PFBTagDeepCSV_p71_); }
    b_HLT_DoublePFJets350_PFBTagDeepJet_p71_ = tree->GetBranch("HLT_DoublePFJets350_PFBTagDeepJet_p71");
    if (b_HLT_DoublePFJets350_PFBTagDeepJet_p71_) { b_HLT_DoublePFJets350_PFBTagDeepJet_p71_->SetAddress(&HLT_DoublePFJets350_PFBTagDeepJet_p71_); }
    b_HLT_DoublePFJets40_CaloBTagCSV_p33_ = tree->GetBranch("HLT_DoublePFJets40_CaloBTagCSV_p33");
    if (b_HLT_DoublePFJets40_CaloBTagCSV_p33_) { b_HLT_DoublePFJets40_CaloBTagCSV_p33_->SetAddress(&HLT_DoublePFJets40_CaloBTagCSV_p33_); }
    b_HLT_DoublePFJets40_CaloBTagCSV_p79_ = tree->GetBranch("HLT_DoublePFJets40_CaloBTagCSV_p79");
    if (b_HLT_DoublePFJets40_CaloBTagCSV_p79_) { b_HLT_DoublePFJets40_CaloBTagCSV_p79_->SetAddress(&HLT_DoublePFJets40_CaloBTagCSV_p79_); }
    b_HLT_DoublePFJets40_CaloBTagDeepCSV_p71_ = tree->GetBranch("HLT_DoublePFJets40_CaloBTagDeepCSV_p71");
    if (b_HLT_DoublePFJets40_CaloBTagDeepCSV_p71_) { b_HLT_DoublePFJets40_CaloBTagDeepCSV_p71_->SetAddress(&HLT_DoublePFJets40_CaloBTagDeepCSV_p71_); }
    b_HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_ = tree->GetBranch("HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1");
    if (b_HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_) { b_HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_->SetAddress(&HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_); }
    b_HLT_DoublePFJets40_PFBTagDeepCSV_p71_ = tree->GetBranch("HLT_DoublePFJets40_PFBTagDeepCSV_p71");
    if (b_HLT_DoublePFJets40_PFBTagDeepCSV_p71_) { b_HLT_DoublePFJets40_PFBTagDeepCSV_p71_->SetAddress(&HLT_DoublePFJets40_PFBTagDeepCSV_p71_); }
    b_HLT_DoublePFJets40_PFBTagDeepJet_p71_ = tree->GetBranch("HLT_DoublePFJets40_PFBTagDeepJet_p71");
    if (b_HLT_DoublePFJets40_PFBTagDeepJet_p71_) { b_HLT_DoublePFJets40_PFBTagDeepJet_p71_->SetAddress(&HLT_DoublePFJets40_PFBTagDeepJet_p71_); }
    b_HLT_DoublePhoton33_CaloIdL_ = tree->GetBranch("HLT_DoublePhoton33_CaloIdL");
    if (b_HLT_DoublePhoton33_CaloIdL_) { b_HLT_DoublePhoton33_CaloIdL_->SetAddress(&HLT_DoublePhoton33_CaloIdL_); }
    b_HLT_DoublePhoton60_ = tree->GetBranch("HLT_DoublePhoton60");
    if (b_HLT_DoublePhoton60_) { b_HLT_DoublePhoton60_->SetAddress(&HLT_DoublePhoton60_); }
    b_HLT_DoublePhoton70_ = tree->GetBranch("HLT_DoublePhoton70");
    if (b_HLT_DoublePhoton70_) { b_HLT_DoublePhoton70_->SetAddress(&HLT_DoublePhoton70_); }
    b_HLT_DoublePhoton85_ = tree->GetBranch("HLT_DoublePhoton85");
    if (b_HLT_DoublePhoton85_) { b_HLT_DoublePhoton85_->SetAddress(&HLT_DoublePhoton85_); }
    b_HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg");
    if (b_HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_) { b_HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_->SetAddress(&HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_); }
    b_HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg_) { b_HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg");
    if (b_HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_) { b_HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_->SetAddress(&HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_); }
    b_HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg_) { b_HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg");
    if (b_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_) { b_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_->SetAddress(&HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_); }
    b_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_ = tree->GetBranch("HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1");
    if (b_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_) { b_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_->SetAddress(&HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_); }
    b_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_) { b_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg");
    if (b_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_) { b_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_->SetAddress(&HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_); }
    b_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_) { b_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg_) { b_HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_ = tree->GetBranch("HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1");
    if (b_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_) { b_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_->SetAddress(&HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_); }
    b_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg");
    if (b_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg_) { b_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg_->SetAddress(&HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg_); }
    b_HLT_DoubleTrkMu_16_6_NoFiltersNoVtx_ = tree->GetBranch("HLT_DoubleTrkMu_16_6_NoFiltersNoVtx");
    if (b_HLT_DoubleTrkMu_16_6_NoFiltersNoVtx_) { b_HLT_DoubleTrkMu_16_6_NoFiltersNoVtx_->SetAddress(&HLT_DoubleTrkMu_16_6_NoFiltersNoVtx_); }
    b_HLT_ECALHT800_ = tree->GetBranch("HLT_ECALHT800");
    if (b_HLT_ECALHT800_) { b_HLT_ECALHT800_->SetAddress(&HLT_ECALHT800_); }
    b_HLT_EcalCalibration_ = tree->GetBranch("HLT_EcalCalibration");
    if (b_HLT_EcalCalibration_) { b_HLT_EcalCalibration_->SetAddress(&HLT_EcalCalibration_); }
    b_HLT_Ele105_CaloIdVT_GsfTrkIdT_ = tree->GetBranch("HLT_Ele105_CaloIdVT_GsfTrkIdT");
    if (b_HLT_Ele105_CaloIdVT_GsfTrkIdT_) { b_HLT_Ele105_CaloIdVT_GsfTrkIdT_->SetAddress(&HLT_Ele105_CaloIdVT_GsfTrkIdT_); }
    b_HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13_ = tree->GetBranch("HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13");
    if (b_HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13_) { b_HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13_->SetAddress(&HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13_); }
    b_HLT_Ele115_CaloIdVT_GsfTrkIdT_ = tree->GetBranch("HLT_Ele115_CaloIdVT_GsfTrkIdT");
    if (b_HLT_Ele115_CaloIdVT_GsfTrkIdT_) { b_HLT_Ele115_CaloIdVT_GsfTrkIdT_->SetAddress(&HLT_Ele115_CaloIdVT_GsfTrkIdT_); }
    b_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_ = tree->GetBranch("HLT_Ele12_CaloIdL_TrackIdL_IsoVL");
    if (b_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_) { b_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_->SetAddress(&HLT_Ele12_CaloIdL_TrackIdL_IsoVL_); }
    b_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_ = tree->GetBranch("HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30");
    if (b_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_) { b_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_->SetAddress(&HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_); }
    b_HLT_Ele12_CaloIdM_TrackIdM_PFJet30_ = tree->GetBranch("HLT_Ele12_CaloIdM_TrackIdM_PFJet30");
    if (b_HLT_Ele12_CaloIdM_TrackIdM_PFJet30_) { b_HLT_Ele12_CaloIdM_TrackIdM_PFJet30_->SetAddress(&HLT_Ele12_CaloIdM_TrackIdM_PFJet30_); }
    b_HLT_Ele135_CaloIdVT_GsfTrkIdT_ = tree->GetBranch("HLT_Ele135_CaloIdVT_GsfTrkIdT");
    if (b_HLT_Ele135_CaloIdVT_GsfTrkIdT_) { b_HLT_Ele135_CaloIdVT_GsfTrkIdT_->SetAddress(&HLT_Ele135_CaloIdVT_GsfTrkIdT_); }
    b_HLT_Ele145_CaloIdVT_GsfTrkIdT_ = tree->GetBranch("HLT_Ele145_CaloIdVT_GsfTrkIdT");
    if (b_HLT_Ele145_CaloIdVT_GsfTrkIdT_) { b_HLT_Ele145_CaloIdVT_GsfTrkIdT_->SetAddress(&HLT_Ele145_CaloIdVT_GsfTrkIdT_); }
    b_HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_ = tree->GetBranch("HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30");
    if (b_HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_) { b_HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_->SetAddress(&HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_); }
    b_HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_ = tree->GetBranch("HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL");
    if (b_HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_) { b_HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_->SetAddress(&HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_); }
    b_HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400_ = tree->GetBranch("HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400");
    if (b_HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400_) { b_HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400_->SetAddress(&HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400_); }
    b_HLT_Ele15_IsoVVVL_PFHT350_ = tree->GetBranch("HLT_Ele15_IsoVVVL_PFHT350");
    if (b_HLT_Ele15_IsoVVVL_PFHT350_) { b_HLT_Ele15_IsoVVVL_PFHT350_->SetAddress(&HLT_Ele15_IsoVVVL_PFHT350_); }
    b_HLT_Ele15_IsoVVVL_PFHT350_PFMET50_ = tree->GetBranch("HLT_Ele15_IsoVVVL_PFHT350_PFMET50");
    if (b_HLT_Ele15_IsoVVVL_PFHT350_PFMET50_) { b_HLT_Ele15_IsoVVVL_PFHT350_PFMET50_->SetAddress(&HLT_Ele15_IsoVVVL_PFHT350_PFMET50_); }
    b_HLT_Ele15_IsoVVVL_PFHT400_ = tree->GetBranch("HLT_Ele15_IsoVVVL_PFHT400");
    if (b_HLT_Ele15_IsoVVVL_PFHT400_) { b_HLT_Ele15_IsoVVVL_PFHT400_->SetAddress(&HLT_Ele15_IsoVVVL_PFHT400_); }
    b_HLT_Ele15_IsoVVVL_PFHT400_PFMET50_ = tree->GetBranch("HLT_Ele15_IsoVVVL_PFHT400_PFMET50");
    if (b_HLT_Ele15_IsoVVVL_PFHT400_PFMET50_) { b_HLT_Ele15_IsoVVVL_PFHT400_PFMET50_->SetAddress(&HLT_Ele15_IsoVVVL_PFHT400_PFMET50_); }
    b_HLT_Ele15_IsoVVVL_PFHT450_ = tree->GetBranch("HLT_Ele15_IsoVVVL_PFHT450");
    if (b_HLT_Ele15_IsoVVVL_PFHT450_) { b_HLT_Ele15_IsoVVVL_PFHT450_->SetAddress(&HLT_Ele15_IsoVVVL_PFHT450_); }
    b_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_ = tree->GetBranch("HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5");
    if (b_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_) { b_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_->SetAddress(&HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_); }
    b_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_ = tree->GetBranch("HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5");
    if (b_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_) { b_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_->SetAddress(&HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_); }
    b_HLT_Ele15_IsoVVVL_PFHT450_PFMET50_ = tree->GetBranch("HLT_Ele15_IsoVVVL_PFHT450_PFMET50");
    if (b_HLT_Ele15_IsoVVVL_PFHT450_PFMET50_) { b_HLT_Ele15_IsoVVVL_PFHT450_PFMET50_->SetAddress(&HLT_Ele15_IsoVVVL_PFHT450_PFMET50_); }
    b_HLT_Ele15_IsoVVVL_PFHT600_ = tree->GetBranch("HLT_Ele15_IsoVVVL_PFHT600");
    if (b_HLT_Ele15_IsoVVVL_PFHT600_) { b_HLT_Ele15_IsoVVVL_PFHT600_->SetAddress(&HLT_Ele15_IsoVVVL_PFHT600_); }
    b_HLT_Ele15_WPLoose_Gsf_ = tree->GetBranch("HLT_Ele15_WPLoose_Gsf");
    if (b_HLT_Ele15_WPLoose_Gsf_) { b_HLT_Ele15_WPLoose_Gsf_->SetAddress(&HLT_Ele15_WPLoose_Gsf_); }
    b_HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_ = tree->GetBranch("HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL");
    if (b_HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_) { b_HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_->SetAddress(&HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_); }
    b_HLT_Ele17_CaloIdL_GsfTrkIdVL_ = tree->GetBranch("HLT_Ele17_CaloIdL_GsfTrkIdVL");
    if (b_HLT_Ele17_CaloIdL_GsfTrkIdVL_) { b_HLT_Ele17_CaloIdL_GsfTrkIdVL_->SetAddress(&HLT_Ele17_CaloIdL_GsfTrkIdVL_); }
    b_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_ = tree->GetBranch("HLT_Ele17_CaloIdL_TrackIdL_IsoVL");
    if (b_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_) { b_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_->SetAddress(&HLT_Ele17_CaloIdL_TrackIdL_IsoVL_); }
    b_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_ = tree->GetBranch("HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30");
    if (b_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_) { b_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_->SetAddress(&HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_); }
    b_HLT_Ele17_CaloIdM_TrackIdM_PFJet30_ = tree->GetBranch("HLT_Ele17_CaloIdM_TrackIdM_PFJet30");
    if (b_HLT_Ele17_CaloIdM_TrackIdM_PFJet30_) { b_HLT_Ele17_CaloIdM_TrackIdM_PFJet30_->SetAddress(&HLT_Ele17_CaloIdM_TrackIdM_PFJet30_); }
    b_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_ = tree->GetBranch("HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL");
    if (b_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_) { b_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_->SetAddress(&HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_); }
    b_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_ = tree->GetBranch("HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ");
    if (b_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_) { b_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_->SetAddress(&HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_); }
    b_HLT_Ele17_Ele8_Gsf_ = tree->GetBranch("HLT_Ele17_Ele8_Gsf");
    if (b_HLT_Ele17_Ele8_Gsf_) { b_HLT_Ele17_Ele8_Gsf_->SetAddress(&HLT_Ele17_Ele8_Gsf_); }
    b_HLT_Ele17_WPLoose_Gsf_ = tree->GetBranch("HLT_Ele17_WPLoose_Gsf");
    if (b_HLT_Ele17_WPLoose_Gsf_) { b_HLT_Ele17_WPLoose_Gsf_->SetAddress(&HLT_Ele17_WPLoose_Gsf_); }
    b_HLT_Ele200_CaloIdVT_GsfTrkIdT_ = tree->GetBranch("HLT_Ele200_CaloIdVT_GsfTrkIdT");
    if (b_HLT_Ele200_CaloIdVT_GsfTrkIdT_) { b_HLT_Ele200_CaloIdVT_GsfTrkIdT_->SetAddress(&HLT_Ele200_CaloIdVT_GsfTrkIdT_); }
    b_HLT_Ele20_WPLoose_Gsf_ = tree->GetBranch("HLT_Ele20_WPLoose_Gsf");
    if (b_HLT_Ele20_WPLoose_Gsf_) { b_HLT_Ele20_WPLoose_Gsf_->SetAddress(&HLT_Ele20_WPLoose_Gsf_); }
    b_HLT_Ele20_WPTight_Gsf_ = tree->GetBranch("HLT_Ele20_WPTight_Gsf");
    if (b_HLT_Ele20_WPTight_Gsf_) { b_HLT_Ele20_WPTight_Gsf_->SetAddress(&HLT_Ele20_WPTight_Gsf_); }
    b_HLT_Ele20_eta2p1_WPLoose_Gsf_ = tree->GetBranch("HLT_Ele20_eta2p1_WPLoose_Gsf");
    if (b_HLT_Ele20_eta2p1_WPLoose_Gsf_) { b_HLT_Ele20_eta2p1_WPLoose_Gsf_->SetAddress(&HLT_Ele20_eta2p1_WPLoose_Gsf_); }
    b_HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28_ = tree->GetBranch("HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28");
    if (b_HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28_) { b_HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28_->SetAddress(&HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28_); }
    b_HLT_Ele22_eta2p1_WPLoose_Gsf_ = tree->GetBranch("HLT_Ele22_eta2p1_WPLoose_Gsf");
    if (b_HLT_Ele22_eta2p1_WPLoose_Gsf_) { b_HLT_Ele22_eta2p1_WPLoose_Gsf_->SetAddress(&HLT_Ele22_eta2p1_WPLoose_Gsf_); }
    b_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ = tree->GetBranch("HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1");
    if (b_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) { b_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_->SetAddress(&HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_); }
    b_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29_ = tree->GetBranch("HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29");
    if (b_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29_) { b_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29_->SetAddress(&HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29_); }
    b_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_ = tree->GetBranch("HLT_Ele23_CaloIdL_TrackIdL_IsoVL");
    if (b_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_) { b_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_->SetAddress(&HLT_Ele23_CaloIdL_TrackIdL_IsoVL_); }
    b_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_ = tree->GetBranch("HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30");
    if (b_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_) { b_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_->SetAddress(&HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_); }
    b_HLT_Ele23_CaloIdM_TrackIdM_PFJet30_ = tree->GetBranch("HLT_Ele23_CaloIdM_TrackIdM_PFJet30");
    if (b_HLT_Ele23_CaloIdM_TrackIdM_PFJet30_) { b_HLT_Ele23_CaloIdM_TrackIdM_PFJet30_->SetAddress(&HLT_Ele23_CaloIdM_TrackIdM_PFJet30_); }
    b_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_ = tree->GetBranch("HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL");
    if (b_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_) { b_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_->SetAddress(&HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_); }
    b_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_ = tree->GetBranch("HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ");
    if (b_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_) { b_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_->SetAddress(&HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_); }
    b_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded_ = tree->GetBranch("HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded");
    if (b_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded_) { b_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded_->SetAddress(&HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded_); }
    b_HLT_Ele23_WPLoose_Gsf_ = tree->GetBranch("HLT_Ele23_WPLoose_Gsf");
    if (b_HLT_Ele23_WPLoose_Gsf_) { b_HLT_Ele23_WPLoose_Gsf_->SetAddress(&HLT_Ele23_WPLoose_Gsf_); }
    b_HLT_Ele23_WPLoose_Gsf_WHbbBoost_ = tree->GetBranch("HLT_Ele23_WPLoose_Gsf_WHbbBoost");
    if (b_HLT_Ele23_WPLoose_Gsf_WHbbBoost_) { b_HLT_Ele23_WPLoose_Gsf_WHbbBoost_->SetAddress(&HLT_Ele23_WPLoose_Gsf_WHbbBoost_); }
    b_HLT_Ele24_eta2p1_WPLoose_Gsf_ = tree->GetBranch("HLT_Ele24_eta2p1_WPLoose_Gsf");
    if (b_HLT_Ele24_eta2p1_WPLoose_Gsf_) { b_HLT_Ele24_eta2p1_WPLoose_Gsf_->SetAddress(&HLT_Ele24_eta2p1_WPLoose_Gsf_); }
    b_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_ = tree->GetBranch("HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20");
    if (b_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_) { b_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_->SetAddress(&HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_); }
    b_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ = tree->GetBranch("HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1");
    if (b_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) { b_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_->SetAddress(&HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_); }
    b_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30_ = tree->GetBranch("HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30");
    if (b_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30_) { b_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30_->SetAddress(&HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30_); }
    b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1_ = tree->GetBranch("HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1");
    if (b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1_) { b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1_->SetAddress(&HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1_); }
    b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1_ = tree->GetBranch("HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1");
    if (b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1_) { b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1_->SetAddress(&HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1_); }
    b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_ = tree->GetBranch("HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1");
    if (b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_) { b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_->SetAddress(&HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_); }
    b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_ = tree->GetBranch("HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1");
    if (b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_) { b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_->SetAddress(&HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_); }
    b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_ = tree->GetBranch("HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1");
    if (b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_) { b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_->SetAddress(&HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_); }
    b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1_ = tree->GetBranch("HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1");
    if (b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1_) { b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1_->SetAddress(&HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1_); }
    b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1_ = tree->GetBranch("HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1");
    if (b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1_) { b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1_->SetAddress(&HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1_); }
    b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_ = tree->GetBranch("HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1");
    if (b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_) { b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_->SetAddress(&HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_); }
    b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_ = tree->GetBranch("HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1");
    if (b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_) { b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_->SetAddress(&HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_); }
    b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1_ = tree->GetBranch("HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1");
    if (b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1_) { b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1_->SetAddress(&HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1_); }
    b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1_ = tree->GetBranch("HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1");
    if (b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1_) { b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1_->SetAddress(&HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1_); }
    b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_ = tree->GetBranch("HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1");
    if (b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_) { b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_->SetAddress(&HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_); }
    b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_ = tree->GetBranch("HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1");
    if (b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_) { b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_->SetAddress(&HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_); }
    b_HLT_Ele250_CaloIdVT_GsfTrkIdT_ = tree->GetBranch("HLT_Ele250_CaloIdVT_GsfTrkIdT");
    if (b_HLT_Ele250_CaloIdVT_GsfTrkIdT_) { b_HLT_Ele250_CaloIdVT_GsfTrkIdT_->SetAddress(&HLT_Ele250_CaloIdVT_GsfTrkIdT_); }
    b_HLT_Ele25_WPTight_Gsf_ = tree->GetBranch("HLT_Ele25_WPTight_Gsf");
    if (b_HLT_Ele25_WPTight_Gsf_) { b_HLT_Ele25_WPTight_Gsf_->SetAddress(&HLT_Ele25_WPTight_Gsf_); }
    b_HLT_Ele25_eta2p1_WPLoose_Gsf_ = tree->GetBranch("HLT_Ele25_eta2p1_WPLoose_Gsf");
    if (b_HLT_Ele25_eta2p1_WPLoose_Gsf_) { b_HLT_Ele25_eta2p1_WPLoose_Gsf_->SetAddress(&HLT_Ele25_eta2p1_WPLoose_Gsf_); }
    b_HLT_Ele25_eta2p1_WPTight_Gsf_ = tree->GetBranch("HLT_Ele25_eta2p1_WPTight_Gsf");
    if (b_HLT_Ele25_eta2p1_WPTight_Gsf_) { b_HLT_Ele25_eta2p1_WPTight_Gsf_->SetAddress(&HLT_Ele25_eta2p1_WPTight_Gsf_); }
    b_HLT_Ele27_Ele37_CaloIdL_MW_ = tree->GetBranch("HLT_Ele27_Ele37_CaloIdL_MW");
    if (b_HLT_Ele27_Ele37_CaloIdL_MW_) { b_HLT_Ele27_Ele37_CaloIdL_MW_->SetAddress(&HLT_Ele27_Ele37_CaloIdL_MW_); }
    b_HLT_Ele27_HighEta_Ele20_Mass55_ = tree->GetBranch("HLT_Ele27_HighEta_Ele20_Mass55");
    if (b_HLT_Ele27_HighEta_Ele20_Mass55_) { b_HLT_Ele27_HighEta_Ele20_Mass55_->SetAddress(&HLT_Ele27_HighEta_Ele20_Mass55_); }
    b_HLT_Ele27_WPLoose_Gsf_ = tree->GetBranch("HLT_Ele27_WPLoose_Gsf");
    if (b_HLT_Ele27_WPLoose_Gsf_) { b_HLT_Ele27_WPLoose_Gsf_->SetAddress(&HLT_Ele27_WPLoose_Gsf_); }
    b_HLT_Ele27_WPLoose_Gsf_WHbbBoost_ = tree->GetBranch("HLT_Ele27_WPLoose_Gsf_WHbbBoost");
    if (b_HLT_Ele27_WPLoose_Gsf_WHbbBoost_) { b_HLT_Ele27_WPLoose_Gsf_WHbbBoost_->SetAddress(&HLT_Ele27_WPLoose_Gsf_WHbbBoost_); }
    b_HLT_Ele27_WPTight_Gsf_ = tree->GetBranch("HLT_Ele27_WPTight_Gsf");
    if (b_HLT_Ele27_WPTight_Gsf_) { b_HLT_Ele27_WPTight_Gsf_->SetAddress(&HLT_Ele27_WPTight_Gsf_); }
    b_HLT_Ele27_WPTight_Gsf_L1JetTauSeeded_ = tree->GetBranch("HLT_Ele27_WPTight_Gsf_L1JetTauSeeded");
    if (b_HLT_Ele27_WPTight_Gsf_L1JetTauSeeded_) { b_HLT_Ele27_WPTight_Gsf_L1JetTauSeeded_->SetAddress(&HLT_Ele27_WPTight_Gsf_L1JetTauSeeded_); }
    b_HLT_Ele27_eta2p1_WPLoose_Gsf_ = tree->GetBranch("HLT_Ele27_eta2p1_WPLoose_Gsf");
    if (b_HLT_Ele27_eta2p1_WPLoose_Gsf_) { b_HLT_Ele27_eta2p1_WPLoose_Gsf_->SetAddress(&HLT_Ele27_eta2p1_WPLoose_Gsf_); }
    b_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg");
    if (b_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_) { b_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_->SetAddress(&HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_); }
    b_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg");
    if (b_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_) { b_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_->SetAddress(&HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_); }
    b_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg");
    if (b_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_) { b_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_->SetAddress(&HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_); }
    b_HLT_Ele27_eta2p1_WPLoose_Gsf_HT200_ = tree->GetBranch("HLT_Ele27_eta2p1_WPLoose_Gsf_HT200");
    if (b_HLT_Ele27_eta2p1_WPLoose_Gsf_HT200_) { b_HLT_Ele27_eta2p1_WPLoose_Gsf_HT200_->SetAddress(&HLT_Ele27_eta2p1_WPLoose_Gsf_HT200_); }
    b_HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ = tree->GetBranch("HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1");
    if (b_HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) { b_HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_->SetAddress(&HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_); }
    b_HLT_Ele27_eta2p1_WPTight_Gsf_ = tree->GetBranch("HLT_Ele27_eta2p1_WPTight_Gsf");
    if (b_HLT_Ele27_eta2p1_WPTight_Gsf_) { b_HLT_Ele27_eta2p1_WPTight_Gsf_->SetAddress(&HLT_Ele27_eta2p1_WPTight_Gsf_); }
    b_HLT_Ele28_HighEta_SC20_Mass55_ = tree->GetBranch("HLT_Ele28_HighEta_SC20_Mass55");
    if (b_HLT_Ele28_HighEta_SC20_Mass55_) { b_HLT_Ele28_HighEta_SC20_Mass55_->SetAddress(&HLT_Ele28_HighEta_SC20_Mass55_); }
    b_HLT_Ele28_WPTight_Gsf_ = tree->GetBranch("HLT_Ele28_WPTight_Gsf");
    if (b_HLT_Ele28_WPTight_Gsf_) { b_HLT_Ele28_WPTight_Gsf_->SetAddress(&HLT_Ele28_WPTight_Gsf_); }
    b_HLT_Ele28_eta2p1_WPTight_Gsf_HT150_ = tree->GetBranch("HLT_Ele28_eta2p1_WPTight_Gsf_HT150");
    if (b_HLT_Ele28_eta2p1_WPTight_Gsf_HT150_) { b_HLT_Ele28_eta2p1_WPTight_Gsf_HT150_->SetAddress(&HLT_Ele28_eta2p1_WPTight_Gsf_HT150_); }
    b_HLT_Ele300_CaloIdVT_GsfTrkIdT_ = tree->GetBranch("HLT_Ele300_CaloIdVT_GsfTrkIdT");
    if (b_HLT_Ele300_CaloIdVT_GsfTrkIdT_) { b_HLT_Ele300_CaloIdVT_GsfTrkIdT_->SetAddress(&HLT_Ele300_CaloIdVT_GsfTrkIdT_); }
    b_HLT_Ele30WP60_Ele8_Mass55_ = tree->GetBranch("HLT_Ele30WP60_Ele8_Mass55");
    if (b_HLT_Ele30WP60_Ele8_Mass55_) { b_HLT_Ele30WP60_Ele8_Mass55_->SetAddress(&HLT_Ele30WP60_Ele8_Mass55_); }
    b_HLT_Ele30WP60_SC4_Mass55_ = tree->GetBranch("HLT_Ele30WP60_SC4_Mass55");
    if (b_HLT_Ele30WP60_SC4_Mass55_) { b_HLT_Ele30WP60_SC4_Mass55_->SetAddress(&HLT_Ele30WP60_SC4_Mass55_); }
    b_HLT_Ele30_WPTight_Gsf_ = tree->GetBranch("HLT_Ele30_WPTight_Gsf");
    if (b_HLT_Ele30_WPTight_Gsf_) { b_HLT_Ele30_WPTight_Gsf_->SetAddress(&HLT_Ele30_WPTight_Gsf_); }
    b_HLT_Ele30_eta2p1_WPLoose_Gsf_ = tree->GetBranch("HLT_Ele30_eta2p1_WPLoose_Gsf");
    if (b_HLT_Ele30_eta2p1_WPLoose_Gsf_) { b_HLT_Ele30_eta2p1_WPLoose_Gsf_->SetAddress(&HLT_Ele30_eta2p1_WPLoose_Gsf_); }
    b_HLT_Ele30_eta2p1_WPTight_Gsf_ = tree->GetBranch("HLT_Ele30_eta2p1_WPTight_Gsf");
    if (b_HLT_Ele30_eta2p1_WPTight_Gsf_) { b_HLT_Ele30_eta2p1_WPTight_Gsf_->SetAddress(&HLT_Ele30_eta2p1_WPTight_Gsf_); }
    b_HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_ = tree->GetBranch("HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned");
    if (b_HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_) { b_HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_->SetAddress(&HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_); }
    b_HLT_Ele32_WPTight_Gsf_ = tree->GetBranch("HLT_Ele32_WPTight_Gsf");
    if (b_HLT_Ele32_WPTight_Gsf_) { b_HLT_Ele32_WPTight_Gsf_->SetAddress(&HLT_Ele32_WPTight_Gsf_); }
    b_HLT_Ele32_WPTight_Gsf_L1DoubleEG_ = tree->GetBranch("HLT_Ele32_WPTight_Gsf_L1DoubleEG");
    if (b_HLT_Ele32_WPTight_Gsf_L1DoubleEG_) { b_HLT_Ele32_WPTight_Gsf_L1DoubleEG_->SetAddress(&HLT_Ele32_WPTight_Gsf_L1DoubleEG_); }
    b_HLT_Ele32_eta2p1_WPLoose_Gsf_ = tree->GetBranch("HLT_Ele32_eta2p1_WPLoose_Gsf");
    if (b_HLT_Ele32_eta2p1_WPLoose_Gsf_) { b_HLT_Ele32_eta2p1_WPLoose_Gsf_->SetAddress(&HLT_Ele32_eta2p1_WPLoose_Gsf_); }
    b_HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ = tree->GetBranch("HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1");
    if (b_HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) { b_HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_->SetAddress(&HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_); }
    b_HLT_Ele32_eta2p1_WPTight_Gsf_ = tree->GetBranch("HLT_Ele32_eta2p1_WPTight_Gsf");
    if (b_HLT_Ele32_eta2p1_WPTight_Gsf_) { b_HLT_Ele32_eta2p1_WPTight_Gsf_->SetAddress(&HLT_Ele32_eta2p1_WPTight_Gsf_); }
    b_HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50_ = tree->GetBranch("HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50");
    if (b_HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50_) { b_HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50_->SetAddress(&HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50_); }
    b_HLT_Ele35_WPLoose_Gsf_ = tree->GetBranch("HLT_Ele35_WPLoose_Gsf");
    if (b_HLT_Ele35_WPLoose_Gsf_) { b_HLT_Ele35_WPLoose_Gsf_->SetAddress(&HLT_Ele35_WPLoose_Gsf_); }
    b_HLT_Ele35_WPTight_Gsf_ = tree->GetBranch("HLT_Ele35_WPTight_Gsf");
    if (b_HLT_Ele35_WPTight_Gsf_) { b_HLT_Ele35_WPTight_Gsf_->SetAddress(&HLT_Ele35_WPTight_Gsf_); }
    b_HLT_Ele35_WPTight_Gsf_L1EGMT_ = tree->GetBranch("HLT_Ele35_WPTight_Gsf_L1EGMT");
    if (b_HLT_Ele35_WPTight_Gsf_L1EGMT_) { b_HLT_Ele35_WPTight_Gsf_L1EGMT_->SetAddress(&HLT_Ele35_WPTight_Gsf_L1EGMT_); }
    b_HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ = tree->GetBranch("HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1");
    if (b_HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) { b_HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_->SetAddress(&HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_); }
    b_HLT_Ele38_WPTight_Gsf_ = tree->GetBranch("HLT_Ele38_WPTight_Gsf");
    if (b_HLT_Ele38_WPTight_Gsf_) { b_HLT_Ele38_WPTight_Gsf_->SetAddress(&HLT_Ele38_WPTight_Gsf_); }
    b_HLT_Ele40_WPTight_Gsf_ = tree->GetBranch("HLT_Ele40_WPTight_Gsf");
    if (b_HLT_Ele40_WPTight_Gsf_) { b_HLT_Ele40_WPTight_Gsf_->SetAddress(&HLT_Ele40_WPTight_Gsf_); }
    b_HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50_ = tree->GetBranch("HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50");
    if (b_HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50_) { b_HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50_->SetAddress(&HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50_); }
    b_HLT_Ele45_WPLoose_Gsf_ = tree->GetBranch("HLT_Ele45_WPLoose_Gsf");
    if (b_HLT_Ele45_WPLoose_Gsf_) { b_HLT_Ele45_WPLoose_Gsf_->SetAddress(&HLT_Ele45_WPLoose_Gsf_); }
    b_HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded_ = tree->GetBranch("HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded");
    if (b_HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded_) { b_HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded_->SetAddress(&HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded_); }
    b_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_ = tree->GetBranch("HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40");
    if (b_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_) { b_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_->SetAddress(&HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_); }
    b_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_ = tree->GetBranch("HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35");
    if (b_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_) { b_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_->SetAddress(&HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_); }
    b_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140_ = tree->GetBranch("HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140");
    if (b_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140_) { b_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140_->SetAddress(&HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140_); }
    b_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_ = tree->GetBranch("HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165");
    if (b_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_) { b_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_->SetAddress(&HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_); }
    b_HLT_Ele50_IsoVVVL_PFHT400_ = tree->GetBranch("HLT_Ele50_IsoVVVL_PFHT400");
    if (b_HLT_Ele50_IsoVVVL_PFHT400_) { b_HLT_Ele50_IsoVVVL_PFHT400_->SetAddress(&HLT_Ele50_IsoVVVL_PFHT400_); }
    b_HLT_Ele50_IsoVVVL_PFHT450_ = tree->GetBranch("HLT_Ele50_IsoVVVL_PFHT450");
    if (b_HLT_Ele50_IsoVVVL_PFHT450_) { b_HLT_Ele50_IsoVVVL_PFHT450_->SetAddress(&HLT_Ele50_IsoVVVL_PFHT450_); }
    b_HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_ = tree->GetBranch("HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30");
    if (b_HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_) { b_HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_->SetAddress(&HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_); }
    b_HLT_Ele8_CaloIdM_TrackIdM_PFJet30_ = tree->GetBranch("HLT_Ele8_CaloIdM_TrackIdM_PFJet30");
    if (b_HLT_Ele8_CaloIdM_TrackIdM_PFJet30_) { b_HLT_Ele8_CaloIdM_TrackIdM_PFJet30_->SetAddress(&HLT_Ele8_CaloIdM_TrackIdM_PFJet30_); }
    b_HLT_EphemeralPhysics_ = tree->GetBranch("HLT_EphemeralPhysics");
    if (b_HLT_EphemeralPhysics_) { b_HLT_EphemeralPhysics_->SetAddress(&HLT_EphemeralPhysics_); }
    b_HLT_EphemeralZeroBias_ = tree->GetBranch("HLT_EphemeralZeroBias");
    if (b_HLT_EphemeralZeroBias_) { b_HLT_EphemeralZeroBias_->SetAddress(&HLT_EphemeralZeroBias_); }
    b_HLT_ExpressMuons_ = tree->GetBranch("HLT_ExpressMuons");
    if (b_HLT_ExpressMuons_) { b_HLT_ExpressMuons_->SetAddress(&HLT_ExpressMuons_); }
    b_HLT_FullTrack_Multiplicity100_ = tree->GetBranch("HLT_FullTrack_Multiplicity100");
    if (b_HLT_FullTrack_Multiplicity100_) { b_HLT_FullTrack_Multiplicity100_->SetAddress(&HLT_FullTrack_Multiplicity100_); }
    b_HLT_FullTrack_Multiplicity105_ = tree->GetBranch("HLT_FullTrack_Multiplicity105");
    if (b_HLT_FullTrack_Multiplicity105_) { b_HLT_FullTrack_Multiplicity105_->SetAddress(&HLT_FullTrack_Multiplicity105_); }
    b_HLT_FullTrack_Multiplicity130_ = tree->GetBranch("HLT_FullTrack_Multiplicity130");
    if (b_HLT_FullTrack_Multiplicity130_) { b_HLT_FullTrack_Multiplicity130_->SetAddress(&HLT_FullTrack_Multiplicity130_); }
    b_HLT_FullTrack_Multiplicity135_ = tree->GetBranch("HLT_FullTrack_Multiplicity135");
    if (b_HLT_FullTrack_Multiplicity135_) { b_HLT_FullTrack_Multiplicity135_->SetAddress(&HLT_FullTrack_Multiplicity135_); }
    b_HLT_FullTrack_Multiplicity155_ = tree->GetBranch("HLT_FullTrack_Multiplicity155");
    if (b_HLT_FullTrack_Multiplicity155_) { b_HLT_FullTrack_Multiplicity155_->SetAddress(&HLT_FullTrack_Multiplicity155_); }
    b_HLT_FullTrack_Multiplicity85_ = tree->GetBranch("HLT_FullTrack_Multiplicity85");
    if (b_HLT_FullTrack_Multiplicity85_) { b_HLT_FullTrack_Multiplicity85_->SetAddress(&HLT_FullTrack_Multiplicity85_); }
    b_HLT_FullTracks_Multiplicity100_ = tree->GetBranch("HLT_FullTracks_Multiplicity100");
    if (b_HLT_FullTracks_Multiplicity100_) { b_HLT_FullTracks_Multiplicity100_->SetAddress(&HLT_FullTracks_Multiplicity100_); }
    b_HLT_FullTracks_Multiplicity130_ = tree->GetBranch("HLT_FullTracks_Multiplicity130");
    if (b_HLT_FullTracks_Multiplicity130_) { b_HLT_FullTracks_Multiplicity130_->SetAddress(&HLT_FullTracks_Multiplicity130_); }
    b_HLT_FullTracks_Multiplicity150_ = tree->GetBranch("HLT_FullTracks_Multiplicity150");
    if (b_HLT_FullTracks_Multiplicity150_) { b_HLT_FullTracks_Multiplicity150_->SetAddress(&HLT_FullTracks_Multiplicity150_); }
    b_HLT_FullTracks_Multiplicity80_ = tree->GetBranch("HLT_FullTracks_Multiplicity80");
    if (b_HLT_FullTracks_Multiplicity80_) { b_HLT_FullTracks_Multiplicity80_->SetAddress(&HLT_FullTracks_Multiplicity80_); }
    b_HLT_GlobalRunHPDNoise_ = tree->GetBranch("HLT_GlobalRunHPDNoise");
    if (b_HLT_GlobalRunHPDNoise_) { b_HLT_GlobalRunHPDNoise_->SetAddress(&HLT_GlobalRunHPDNoise_); }
    b_HLT_HISinglePhoton10_ = tree->GetBranch("HLT_HISinglePhoton10");
    if (b_HLT_HISinglePhoton10_) { b_HLT_HISinglePhoton10_->SetAddress(&HLT_HISinglePhoton10_); }
    b_HLT_HISinglePhoton10_Eta3p1ForPPRef_ = tree->GetBranch("HLT_HISinglePhoton10_Eta3p1ForPPRef");
    if (b_HLT_HISinglePhoton10_Eta3p1ForPPRef_) { b_HLT_HISinglePhoton10_Eta3p1ForPPRef_->SetAddress(&HLT_HISinglePhoton10_Eta3p1ForPPRef_); }
    b_HLT_HISinglePhoton15_ = tree->GetBranch("HLT_HISinglePhoton15");
    if (b_HLT_HISinglePhoton15_) { b_HLT_HISinglePhoton15_->SetAddress(&HLT_HISinglePhoton15_); }
    b_HLT_HISinglePhoton20_ = tree->GetBranch("HLT_HISinglePhoton20");
    if (b_HLT_HISinglePhoton20_) { b_HLT_HISinglePhoton20_->SetAddress(&HLT_HISinglePhoton20_); }
    b_HLT_HISinglePhoton20_Eta3p1ForPPRef_ = tree->GetBranch("HLT_HISinglePhoton20_Eta3p1ForPPRef");
    if (b_HLT_HISinglePhoton20_Eta3p1ForPPRef_) { b_HLT_HISinglePhoton20_Eta3p1ForPPRef_->SetAddress(&HLT_HISinglePhoton20_Eta3p1ForPPRef_); }
    b_HLT_HISinglePhoton30_Eta3p1ForPPRef_ = tree->GetBranch("HLT_HISinglePhoton30_Eta3p1ForPPRef");
    if (b_HLT_HISinglePhoton30_Eta3p1ForPPRef_) { b_HLT_HISinglePhoton30_Eta3p1ForPPRef_->SetAddress(&HLT_HISinglePhoton30_Eta3p1ForPPRef_); }
    b_HLT_HISinglePhoton40_ = tree->GetBranch("HLT_HISinglePhoton40");
    if (b_HLT_HISinglePhoton40_) { b_HLT_HISinglePhoton40_->SetAddress(&HLT_HISinglePhoton40_); }
    b_HLT_HISinglePhoton40_Eta3p1ForPPRef_ = tree->GetBranch("HLT_HISinglePhoton40_Eta3p1ForPPRef");
    if (b_HLT_HISinglePhoton40_Eta3p1ForPPRef_) { b_HLT_HISinglePhoton40_Eta3p1ForPPRef_->SetAddress(&HLT_HISinglePhoton40_Eta3p1ForPPRef_); }
    b_HLT_HISinglePhoton50_Eta3p1ForPPRef_ = tree->GetBranch("HLT_HISinglePhoton50_Eta3p1ForPPRef");
    if (b_HLT_HISinglePhoton50_Eta3p1ForPPRef_) { b_HLT_HISinglePhoton50_Eta3p1ForPPRef_->SetAddress(&HLT_HISinglePhoton50_Eta3p1ForPPRef_); }
    b_HLT_HISinglePhoton60_ = tree->GetBranch("HLT_HISinglePhoton60");
    if (b_HLT_HISinglePhoton60_) { b_HLT_HISinglePhoton60_->SetAddress(&HLT_HISinglePhoton60_); }
    b_HLT_HISinglePhoton60_Eta3p1ForPPRef_ = tree->GetBranch("HLT_HISinglePhoton60_Eta3p1ForPPRef");
    if (b_HLT_HISinglePhoton60_Eta3p1ForPPRef_) { b_HLT_HISinglePhoton60_Eta3p1ForPPRef_->SetAddress(&HLT_HISinglePhoton60_Eta3p1ForPPRef_); }
    b_HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_ = tree->GetBranch("HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack");
    if (b_HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_) { b_HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_->SetAddress(&HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_); }
    b_HLT_HT200_ = tree->GetBranch("HLT_HT200");
    if (b_HLT_HT200_) { b_HLT_HT200_->SetAddress(&HLT_HT200_); }
    b_HLT_HT2000_ = tree->GetBranch("HLT_HT2000");
    if (b_HLT_HT2000_) { b_HLT_HT2000_->SetAddress(&HLT_HT2000_); }
    b_HLT_HT200_DisplacedDijet40_DisplacedTrack_ = tree->GetBranch("HLT_HT200_DisplacedDijet40_DisplacedTrack");
    if (b_HLT_HT200_DisplacedDijet40_DisplacedTrack_) { b_HLT_HT200_DisplacedDijet40_DisplacedTrack_->SetAddress(&HLT_HT200_DisplacedDijet40_DisplacedTrack_); }
    b_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_ = tree->GetBranch("HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless");
    if (b_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_) { b_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_->SetAddress(&HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_); }
    b_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_ = tree->GetBranch("HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive");
    if (b_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_) { b_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_->SetAddress(&HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_); }
    b_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_ = tree->GetBranch("HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless");
    if (b_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_) { b_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_->SetAddress(&HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_); }
    b_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_ = tree->GetBranch("HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive");
    if (b_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_) { b_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_->SetAddress(&HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_); }
    b_HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5_ = tree->GetBranch("HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5");
    if (b_HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5_) { b_HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5_->SetAddress(&HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5_); }
    b_HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_ = tree->GetBranch("HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5");
    if (b_HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_) { b_HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_->SetAddress(&HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_); }
    b_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_ = tree->GetBranch("HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack");
    if (b_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_) { b_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_->SetAddress(&HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_); }
    b_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_ = tree->GetBranch("HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5");
    if (b_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_) { b_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_->SetAddress(&HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_); }
    b_HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_ = tree->GetBranch("HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack");
    if (b_HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_) { b_HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_->SetAddress(&HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_); }
    b_HLT_HT2500_ = tree->GetBranch("HLT_HT2500");
    if (b_HLT_HT2500_) { b_HLT_HT2500_->SetAddress(&HLT_HT2500_); }
    b_HLT_HT250_CaloMET70_ = tree->GetBranch("HLT_HT250_CaloMET70");
    if (b_HLT_HT250_CaloMET70_) { b_HLT_HT250_CaloMET70_->SetAddress(&HLT_HT250_CaloMET70_); }
    b_HLT_HT250_DisplacedDijet40_DisplacedTrack_ = tree->GetBranch("HLT_HT250_DisplacedDijet40_DisplacedTrack");
    if (b_HLT_HT250_DisplacedDijet40_DisplacedTrack_) { b_HLT_HT250_DisplacedDijet40_DisplacedTrack_->SetAddress(&HLT_HT250_DisplacedDijet40_DisplacedTrack_); }
    b_HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_ = tree->GetBranch("HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack");
    if (b_HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_) { b_HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_->SetAddress(&HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_); }
    b_HLT_HT275_ = tree->GetBranch("HLT_HT275");
    if (b_HLT_HT275_) { b_HLT_HT275_->SetAddress(&HLT_HT275_); }
    b_HLT_HT300PT30_QuadJet_75_60_45_40_ = tree->GetBranch("HLT_HT300PT30_QuadJet_75_60_45_40");
    if (b_HLT_HT300PT30_QuadJet_75_60_45_40_) { b_HLT_HT300PT30_QuadJet_75_60_45_40_->SetAddress(&HLT_HT300PT30_QuadJet_75_60_45_40_); }
    b_HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07_ = tree->GetBranch("HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07");
    if (b_HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07_) { b_HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07_->SetAddress(&HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07_); }
    b_HLT_HT300_Beamspot_ = tree->GetBranch("HLT_HT300_Beamspot");
    if (b_HLT_HT300_Beamspot_) { b_HLT_HT300_Beamspot_->SetAddress(&HLT_HT300_Beamspot_); }
    b_HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_ = tree->GetBranch("HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive");
    if (b_HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_) { b_HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_->SetAddress(&HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_); }
    b_HLT_HT325_ = tree->GetBranch("HLT_HT325");
    if (b_HLT_HT325_) { b_HLT_HT325_->SetAddress(&HLT_HT325_); }
    b_HLT_HT350_DisplacedDijet40_DisplacedTrack_ = tree->GetBranch("HLT_HT350_DisplacedDijet40_DisplacedTrack");
    if (b_HLT_HT350_DisplacedDijet40_DisplacedTrack_) { b_HLT_HT350_DisplacedDijet40_DisplacedTrack_->SetAddress(&HLT_HT350_DisplacedDijet40_DisplacedTrack_); }
    b_HLT_HT350_DisplacedDijet40_Inclusive_ = tree->GetBranch("HLT_HT350_DisplacedDijet40_Inclusive");
    if (b_HLT_HT350_DisplacedDijet40_Inclusive_) { b_HLT_HT350_DisplacedDijet40_Inclusive_->SetAddress(&HLT_HT350_DisplacedDijet40_Inclusive_); }
    b_HLT_HT350_DisplacedDijet80_DisplacedTrack_ = tree->GetBranch("HLT_HT350_DisplacedDijet80_DisplacedTrack");
    if (b_HLT_HT350_DisplacedDijet80_DisplacedTrack_) { b_HLT_HT350_DisplacedDijet80_DisplacedTrack_->SetAddress(&HLT_HT350_DisplacedDijet80_DisplacedTrack_); }
    b_HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack_ = tree->GetBranch("HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack");
    if (b_HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack_) { b_HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack_->SetAddress(&HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack_); }
    b_HLT_HT400_DisplacedDijet40_DisplacedTrack_ = tree->GetBranch("HLT_HT400_DisplacedDijet40_DisplacedTrack");
    if (b_HLT_HT400_DisplacedDijet40_DisplacedTrack_) { b_HLT_HT400_DisplacedDijet40_DisplacedTrack_->SetAddress(&HLT_HT400_DisplacedDijet40_DisplacedTrack_); }
    b_HLT_HT400_DisplacedDijet40_Inclusive_ = tree->GetBranch("HLT_HT400_DisplacedDijet40_Inclusive");
    if (b_HLT_HT400_DisplacedDijet40_Inclusive_) { b_HLT_HT400_DisplacedDijet40_Inclusive_->SetAddress(&HLT_HT400_DisplacedDijet40_Inclusive_); }
    b_HLT_HT410to430_ = tree->GetBranch("HLT_HT410to430");
    if (b_HLT_HT410to430_) { b_HLT_HT410to430_->SetAddress(&HLT_HT410to430_); }
    b_HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_ = tree->GetBranch("HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive");
    if (b_HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_) { b_HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_->SetAddress(&HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_); }
    b_HLT_HT425_ = tree->GetBranch("HLT_HT425");
    if (b_HLT_HT425_) { b_HLT_HT425_->SetAddress(&HLT_HT425_); }
    b_HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_ = tree->GetBranch("HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive");
    if (b_HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_) { b_HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_->SetAddress(&HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_); }
    b_HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_ = tree->GetBranch("HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless");
    if (b_HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_) { b_HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_->SetAddress(&HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_); }
    b_HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_ = tree->GetBranch("HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive");
    if (b_HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_) { b_HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_->SetAddress(&HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_); }
    b_HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_ = tree->GetBranch("HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive");
    if (b_HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_) { b_HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_->SetAddress(&HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_); }
    b_HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_ = tree->GetBranch("HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless");
    if (b_HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_) { b_HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_->SetAddress(&HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_); }
    b_HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_ = tree->GetBranch("HLT_HT430_DelayedJet40_SingleDelay1nsInclusive");
    if (b_HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_) { b_HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_->SetAddress(&HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_); }
    b_HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_ = tree->GetBranch("HLT_HT430_DelayedJet40_SingleDelay1nsTrackless");
    if (b_HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_) { b_HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_->SetAddress(&HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_); }
    b_HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_ = tree->GetBranch("HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive");
    if (b_HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_) { b_HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_->SetAddress(&HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_); }
    b_HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_ = tree->GetBranch("HLT_HT430_DelayedJet40_SingleDelay2nsInclusive");
    if (b_HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_) { b_HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_->SetAddress(&HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_); }
    b_HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5_ = tree->GetBranch("HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5");
    if (b_HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5_) { b_HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5_->SetAddress(&HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5_); }
    b_HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5_ = tree->GetBranch("HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5");
    if (b_HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5_) { b_HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5_->SetAddress(&HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5_); }
    b_HLT_HT430_DisplacedDijet40_DisplacedTrack_ = tree->GetBranch("HLT_HT430_DisplacedDijet40_DisplacedTrack");
    if (b_HLT_HT430_DisplacedDijet40_DisplacedTrack_) { b_HLT_HT430_DisplacedDijet40_DisplacedTrack_->SetAddress(&HLT_HT430_DisplacedDijet40_DisplacedTrack_); }
    b_HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_ = tree->GetBranch("HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5");
    if (b_HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_) { b_HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_->SetAddress(&HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_); }
    b_HLT_HT430_DisplacedDijet60_DisplacedTrack_ = tree->GetBranch("HLT_HT430_DisplacedDijet60_DisplacedTrack");
    if (b_HLT_HT430_DisplacedDijet60_DisplacedTrack_) { b_HLT_HT430_DisplacedDijet60_DisplacedTrack_->SetAddress(&HLT_HT430_DisplacedDijet60_DisplacedTrack_); }
    b_HLT_HT430_DisplacedDijet80_DisplacedTrack_ = tree->GetBranch("HLT_HT430_DisplacedDijet80_DisplacedTrack");
    if (b_HLT_HT430_DisplacedDijet80_DisplacedTrack_) { b_HLT_HT430_DisplacedDijet80_DisplacedTrack_->SetAddress(&HLT_HT430_DisplacedDijet80_DisplacedTrack_); }
    b_HLT_HT430to450_ = tree->GetBranch("HLT_HT430to450");
    if (b_HLT_HT430to450_) { b_HLT_HT430to450_->SetAddress(&HLT_HT430to450_); }
    b_HLT_HT450_Beamspot_ = tree->GetBranch("HLT_HT450_Beamspot");
    if (b_HLT_HT450_Beamspot_) { b_HLT_HT450_Beamspot_->SetAddress(&HLT_HT450_Beamspot_); }
    b_HLT_HT450to470_ = tree->GetBranch("HLT_HT450to470");
    if (b_HLT_HT450to470_) { b_HLT_HT450to470_->SetAddress(&HLT_HT450to470_); }
    b_HLT_HT470to500_ = tree->GetBranch("HLT_HT470to500");
    if (b_HLT_HT470to500_) { b_HLT_HT470to500_->SetAddress(&HLT_HT470to500_); }
    b_HLT_HT500_DisplacedDijet40_DisplacedTrack_ = tree->GetBranch("HLT_HT500_DisplacedDijet40_DisplacedTrack");
    if (b_HLT_HT500_DisplacedDijet40_DisplacedTrack_) { b_HLT_HT500_DisplacedDijet40_DisplacedTrack_->SetAddress(&HLT_HT500_DisplacedDijet40_DisplacedTrack_); }
    b_HLT_HT500_DisplacedDijet40_Inclusive_ = tree->GetBranch("HLT_HT500_DisplacedDijet40_Inclusive");
    if (b_HLT_HT500_DisplacedDijet40_Inclusive_) { b_HLT_HT500_DisplacedDijet40_Inclusive_->SetAddress(&HLT_HT500_DisplacedDijet40_Inclusive_); }
    b_HLT_HT500to550_ = tree->GetBranch("HLT_HT500to550");
    if (b_HLT_HT500to550_) { b_HLT_HT500to550_->SetAddress(&HLT_HT500to550_); }
    b_HLT_HT550_DisplacedDijet40_Inclusive_ = tree->GetBranch("HLT_HT550_DisplacedDijet40_Inclusive");
    if (b_HLT_HT550_DisplacedDijet40_Inclusive_) { b_HLT_HT550_DisplacedDijet40_Inclusive_->SetAddress(&HLT_HT550_DisplacedDijet40_Inclusive_); }
    b_HLT_HT550_DisplacedDijet60_Inclusive_ = tree->GetBranch("HLT_HT550_DisplacedDijet60_Inclusive");
    if (b_HLT_HT550_DisplacedDijet60_Inclusive_) { b_HLT_HT550_DisplacedDijet60_Inclusive_->SetAddress(&HLT_HT550_DisplacedDijet60_Inclusive_); }
    b_HLT_HT550_DisplacedDijet80_Inclusive_ = tree->GetBranch("HLT_HT550_DisplacedDijet80_Inclusive");
    if (b_HLT_HT550_DisplacedDijet80_Inclusive_) { b_HLT_HT550_DisplacedDijet80_Inclusive_->SetAddress(&HLT_HT550_DisplacedDijet80_Inclusive_); }
    b_HLT_HT550to650_ = tree->GetBranch("HLT_HT550to650");
    if (b_HLT_HT550to650_) { b_HLT_HT550to650_->SetAddress(&HLT_HT550to650_); }
    b_HLT_HT575_ = tree->GetBranch("HLT_HT575");
    if (b_HLT_HT575_) { b_HLT_HT575_->SetAddress(&HLT_HT575_); }
    b_HLT_HT650_ = tree->GetBranch("HLT_HT650");
    if (b_HLT_HT650_) { b_HLT_HT650_->SetAddress(&HLT_HT650_); }
    b_HLT_HT650_DisplacedDijet60_Inclusive_ = tree->GetBranch("HLT_HT650_DisplacedDijet60_Inclusive");
    if (b_HLT_HT650_DisplacedDijet60_Inclusive_) { b_HLT_HT650_DisplacedDijet60_Inclusive_->SetAddress(&HLT_HT650_DisplacedDijet60_Inclusive_); }
    b_HLT_HT650_DisplacedDijet80_Inclusive_ = tree->GetBranch("HLT_HT650_DisplacedDijet80_Inclusive");
    if (b_HLT_HT650_DisplacedDijet80_Inclusive_) { b_HLT_HT650_DisplacedDijet80_Inclusive_->SetAddress(&HLT_HT650_DisplacedDijet80_Inclusive_); }
    b_HLT_HT750_DisplacedDijet80_Inclusive_ = tree->GetBranch("HLT_HT750_DisplacedDijet80_Inclusive");
    if (b_HLT_HT750_DisplacedDijet80_Inclusive_) { b_HLT_HT750_DisplacedDijet80_Inclusive_->SetAddress(&HLT_HT750_DisplacedDijet80_Inclusive_); }
    b_HLT_HcalCalibration_ = tree->GetBranch("HLT_HcalCalibration");
    if (b_HLT_HcalCalibration_) { b_HLT_HcalCalibration_->SetAddress(&HLT_HcalCalibration_); }
    b_HLT_HcalIsolatedbunch_ = tree->GetBranch("HLT_HcalIsolatedbunch");
    if (b_HLT_HcalIsolatedbunch_) { b_HLT_HcalIsolatedbunch_->SetAddress(&HLT_HcalIsolatedbunch_); }
    b_HLT_HcalNZS_ = tree->GetBranch("HLT_HcalNZS");
    if (b_HLT_HcalNZS_) { b_HLT_HcalNZS_->SetAddress(&HLT_HcalNZS_); }
    b_HLT_HcalPhiSym_ = tree->GetBranch("HLT_HcalPhiSym");
    if (b_HLT_HcalPhiSym_) { b_HLT_HcalPhiSym_->SetAddress(&HLT_HcalPhiSym_); }
    b_HLT_HighPtTkMu100_ = tree->GetBranch("HLT_HighPtTkMu100");
    if (b_HLT_HighPtTkMu100_) { b_HLT_HighPtTkMu100_->SetAddress(&HLT_HighPtTkMu100_); }
    b_HLT_IsoMu16_eta2p1_MET30_ = tree->GetBranch("HLT_IsoMu16_eta2p1_MET30");
    if (b_HLT_IsoMu16_eta2p1_MET30_) { b_HLT_IsoMu16_eta2p1_MET30_->SetAddress(&HLT_IsoMu16_eta2p1_MET30_); }
    b_HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1_ = tree->GetBranch("HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1");
    if (b_HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1_) { b_HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1_->SetAddress(&HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1_); }
    b_HLT_IsoMu17_eta2p1_ = tree->GetBranch("HLT_IsoMu17_eta2p1");
    if (b_HLT_IsoMu17_eta2p1_) { b_HLT_IsoMu17_eta2p1_->SetAddress(&HLT_IsoMu17_eta2p1_); }
    b_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_ = tree->GetBranch("HLT_IsoMu17_eta2p1_LooseIsoPFTau20");
    if (b_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_) { b_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_->SetAddress(&HLT_IsoMu17_eta2p1_LooseIsoPFTau20_); }
    b_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1_ = tree->GetBranch("HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1");
    if (b_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1_) { b_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1_->SetAddress(&HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1_); }
    b_HLT_IsoMu18_ = tree->GetBranch("HLT_IsoMu18");
    if (b_HLT_IsoMu18_) { b_HLT_IsoMu18_->SetAddress(&HLT_IsoMu18_); }
    b_HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20_ = tree->GetBranch("HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20");
    if (b_HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20_) { b_HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20_->SetAddress(&HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20_); }
    b_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_ = tree->GetBranch("HLT_IsoMu19_eta2p1_LooseIsoPFTau20");
    if (b_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_) { b_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_->SetAddress(&HLT_IsoMu19_eta2p1_LooseIsoPFTau20_); }
    b_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1_ = tree->GetBranch("HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1");
    if (b_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1_) { b_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1_->SetAddress(&HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1_); }
    b_HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg");
    if (b_HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_) { b_HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_->SetAddress(&HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_); }
    b_HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg");
    if (b_HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_) { b_HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_->SetAddress(&HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_); }
    b_HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg");
    if (b_HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_) { b_HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_->SetAddress(&HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_); }
    b_HLT_IsoMu20_ = tree->GetBranch("HLT_IsoMu20");
    if (b_HLT_IsoMu20_) { b_HLT_IsoMu20_->SetAddress(&HLT_IsoMu20_); }
    b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1_ = tree->GetBranch("HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1");
    if (b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1_) { b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1_->SetAddress(&HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1_); }
    b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1_ = tree->GetBranch("HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1");
    if (b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1_) { b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1_->SetAddress(&HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1_); }
    b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_ = tree->GetBranch("HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1");
    if (b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_) { b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_->SetAddress(&HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_); }
    b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_ = tree->GetBranch("HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1");
    if (b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_) { b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_->SetAddress(&HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_); }
    b_HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_ = tree->GetBranch("HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1");
    if (b_HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_) { b_HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_->SetAddress(&HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_); }
    b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1_ = tree->GetBranch("HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1");
    if (b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1_) { b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1_->SetAddress(&HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1_); }
    b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1_ = tree->GetBranch("HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1");
    if (b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1_) { b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1_->SetAddress(&HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1_); }
    b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_ = tree->GetBranch("HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1");
    if (b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_) { b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_->SetAddress(&HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_); }
    b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_ = tree->GetBranch("HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1");
    if (b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_) { b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_->SetAddress(&HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_); }
    b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1_ = tree->GetBranch("HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1");
    if (b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1_) { b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1_->SetAddress(&HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1_); }
    b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1_ = tree->GetBranch("HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1");
    if (b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1_) { b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1_->SetAddress(&HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1_); }
    b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_ = tree->GetBranch("HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1");
    if (b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_) { b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_->SetAddress(&HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_); }
    b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_ = tree->GetBranch("HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1");
    if (b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_) { b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_->SetAddress(&HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_); }
    b_HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1_ = tree->GetBranch("HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1");
    if (b_HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1_) { b_HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1_->SetAddress(&HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1_); }
    b_HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1_ = tree->GetBranch("HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1");
    if (b_HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1_) { b_HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1_->SetAddress(&HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1_); }
    b_HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg");
    if (b_HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_) { b_HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_->SetAddress(&HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_); }
    b_HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg");
    if (b_HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_) { b_HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_->SetAddress(&HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_); }
    b_HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg");
    if (b_HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_) { b_HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_->SetAddress(&HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_); }
    b_HLT_IsoMu22_ = tree->GetBranch("HLT_IsoMu22");
    if (b_HLT_IsoMu22_) { b_HLT_IsoMu22_->SetAddress(&HLT_IsoMu22_); }
    b_HLT_IsoMu22_eta2p1_ = tree->GetBranch("HLT_IsoMu22_eta2p1");
    if (b_HLT_IsoMu22_eta2p1_) { b_HLT_IsoMu22_eta2p1_->SetAddress(&HLT_IsoMu22_eta2p1_); }
    b_HLT_IsoMu24_ = tree->GetBranch("HLT_IsoMu24");
    if (b_HLT_IsoMu24_) { b_HLT_IsoMu24_->SetAddress(&HLT_IsoMu24_); }
    b_HLT_IsoMu24_TwoProngs35_ = tree->GetBranch("HLT_IsoMu24_TwoProngs35");
    if (b_HLT_IsoMu24_TwoProngs35_) { b_HLT_IsoMu24_TwoProngs35_->SetAddress(&HLT_IsoMu24_TwoProngs35_); }
    b_HLT_IsoMu24_eta2p1_ = tree->GetBranch("HLT_IsoMu24_eta2p1");
    if (b_HLT_IsoMu24_eta2p1_) { b_HLT_IsoMu24_eta2p1_->SetAddress(&HLT_IsoMu24_eta2p1_); }
    b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1");
    if (b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1_) { b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1_->SetAddress(&HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1_); }
    b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1");
    if (b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1_) { b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1_->SetAddress(&HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1_); }
    b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_) { b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_) { b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1");
    if (b_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_) { b_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_->SetAddress(&HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_); }
    b_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_) { b_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1");
    if (b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1_) { b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1_->SetAddress(&HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1_); }
    b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1");
    if (b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1_) { b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1_->SetAddress(&HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1_); }
    b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_) { b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_) { b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_) { b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_) { b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_ = tree->GetBranch("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr");
    if (b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_) { b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_->SetAddress(&HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_); }
    b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1_) { b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_) { b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_) { b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1");
    if (b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_) { b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_->SetAddress(&HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_); }
    b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_) { b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_) { b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_) { b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_) { b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_) { b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1");
    if (b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1_) { b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1_->SetAddress(&HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1_); }
    b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1");
    if (b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1_) { b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1_->SetAddress(&HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1_); }
    b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_) { b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_) { b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_) { b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_) { b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_) { b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_); }
    b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_ = tree->GetBranch("HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1");
    if (b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_) { b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_->SetAddress(&HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_); }
    b_HLT_IsoMu27_ = tree->GetBranch("HLT_IsoMu27");
    if (b_HLT_IsoMu27_) { b_HLT_IsoMu27_->SetAddress(&HLT_IsoMu27_); }
    b_HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1_ = tree->GetBranch("HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1");
    if (b_HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1_) { b_HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1_->SetAddress(&HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1_); }
    b_HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1_ = tree->GetBranch("HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1");
    if (b_HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1_) { b_HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1_->SetAddress(&HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1_); }
    b_HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_ = tree->GetBranch("HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1");
    if (b_HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_) { b_HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_->SetAddress(&HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_); }
    b_HLT_IsoMu27_MET90_ = tree->GetBranch("HLT_IsoMu27_MET90");
    if (b_HLT_IsoMu27_MET90_) { b_HLT_IsoMu27_MET90_->SetAddress(&HLT_IsoMu27_MET90_); }
    b_HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1_ = tree->GetBranch("HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1");
    if (b_HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1_) { b_HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1_->SetAddress(&HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1_); }
    b_HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1_ = tree->GetBranch("HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1");
    if (b_HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1_) { b_HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1_->SetAddress(&HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1_); }
    b_HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_ = tree->GetBranch("HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1");
    if (b_HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_) { b_HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_->SetAddress(&HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_); }
    b_HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_ = tree->GetBranch("HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1");
    if (b_HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_) { b_HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_->SetAddress(&HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_); }
    b_HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1_ = tree->GetBranch("HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1");
    if (b_HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1_) { b_HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1_->SetAddress(&HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1_); }
    b_HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1_ = tree->GetBranch("HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1");
    if (b_HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1_) { b_HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1_->SetAddress(&HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1_); }
    b_HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_ = tree->GetBranch("HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1");
    if (b_HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_) { b_HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_->SetAddress(&HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_); }
    b_HLT_IsoMu30_ = tree->GetBranch("HLT_IsoMu30");
    if (b_HLT_IsoMu30_) { b_HLT_IsoMu30_->SetAddress(&HLT_IsoMu30_); }
    b_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_ = tree->GetBranch("HLT_IsoMu50_AK8PFJet230_SoftDropMass40");
    if (b_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_) { b_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_->SetAddress(&HLT_IsoMu50_AK8PFJet230_SoftDropMass40_); }
    b_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_ = tree->GetBranch("HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35");
    if (b_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_) { b_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_->SetAddress(&HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_); }
    b_HLT_IsoTkMu18_ = tree->GetBranch("HLT_IsoTkMu18");
    if (b_HLT_IsoTkMu18_) { b_HLT_IsoTkMu18_->SetAddress(&HLT_IsoTkMu18_); }
    b_HLT_IsoTkMu20_ = tree->GetBranch("HLT_IsoTkMu20");
    if (b_HLT_IsoTkMu20_) { b_HLT_IsoTkMu20_->SetAddress(&HLT_IsoTkMu20_); }
    b_HLT_IsoTkMu22_ = tree->GetBranch("HLT_IsoTkMu22");
    if (b_HLT_IsoTkMu22_) { b_HLT_IsoTkMu22_->SetAddress(&HLT_IsoTkMu22_); }
    b_HLT_IsoTkMu22_eta2p1_ = tree->GetBranch("HLT_IsoTkMu22_eta2p1");
    if (b_HLT_IsoTkMu22_eta2p1_) { b_HLT_IsoTkMu22_eta2p1_->SetAddress(&HLT_IsoTkMu22_eta2p1_); }
    b_HLT_IsoTkMu24_ = tree->GetBranch("HLT_IsoTkMu24");
    if (b_HLT_IsoTkMu24_) { b_HLT_IsoTkMu24_->SetAddress(&HLT_IsoTkMu24_); }
    b_HLT_IsoTkMu24_eta2p1_ = tree->GetBranch("HLT_IsoTkMu24_eta2p1");
    if (b_HLT_IsoTkMu24_eta2p1_) { b_HLT_IsoTkMu24_eta2p1_->SetAddress(&HLT_IsoTkMu24_eta2p1_); }
    b_HLT_IsoTkMu27_ = tree->GetBranch("HLT_IsoTkMu27");
    if (b_HLT_IsoTkMu27_) { b_HLT_IsoTkMu27_->SetAddress(&HLT_IsoTkMu27_); }
    b_HLT_IsoTrackHB_ = tree->GetBranch("HLT_IsoTrackHB");
    if (b_HLT_IsoTrackHB_) { b_HLT_IsoTrackHB_->SetAddress(&HLT_IsoTrackHB_); }
    b_HLT_IsoTrackHE_ = tree->GetBranch("HLT_IsoTrackHE");
    if (b_HLT_IsoTrackHE_) { b_HLT_IsoTrackHE_->SetAddress(&HLT_IsoTrackHE_); }
    b_HLT_JetE30_NoBPTX_ = tree->GetBranch("HLT_JetE30_NoBPTX");
    if (b_HLT_JetE30_NoBPTX_) { b_HLT_JetE30_NoBPTX_->SetAddress(&HLT_JetE30_NoBPTX_); }
    b_HLT_JetE30_NoBPTX3BX_ = tree->GetBranch("HLT_JetE30_NoBPTX3BX");
    if (b_HLT_JetE30_NoBPTX3BX_) { b_HLT_JetE30_NoBPTX3BX_->SetAddress(&HLT_JetE30_NoBPTX3BX_); }
    b_HLT_JetE50_NoBPTX3BX_ = tree->GetBranch("HLT_JetE50_NoBPTX3BX");
    if (b_HLT_JetE50_NoBPTX3BX_) { b_HLT_JetE50_NoBPTX3BX_->SetAddress(&HLT_JetE50_NoBPTX3BX_); }
    b_HLT_JetE70_NoBPTX3BX_ = tree->GetBranch("HLT_JetE70_NoBPTX3BX");
    if (b_HLT_JetE70_NoBPTX3BX_) { b_HLT_JetE70_NoBPTX3BX_->SetAddress(&HLT_JetE70_NoBPTX3BX_); }
    b_HLT_L1BeamGasMinus_ = tree->GetBranch("HLT_L1BeamGasMinus");
    if (b_HLT_L1BeamGasMinus_) { b_HLT_L1BeamGasMinus_->SetAddress(&HLT_L1BeamGasMinus_); }
    b_HLT_L1BeamGasPlus_ = tree->GetBranch("HLT_L1BeamGasPlus");
    if (b_HLT_L1BeamGasPlus_) { b_HLT_L1BeamGasPlus_->SetAddress(&HLT_L1BeamGasPlus_); }
    b_HLT_L1BptxMinus_ = tree->GetBranch("HLT_L1BptxMinus");
    if (b_HLT_L1BptxMinus_) { b_HLT_L1BptxMinus_->SetAddress(&HLT_L1BptxMinus_); }
    b_HLT_L1BptxPlus_ = tree->GetBranch("HLT_L1BptxPlus");
    if (b_HLT_L1BptxPlus_) { b_HLT_L1BptxPlus_->SetAddress(&HLT_L1BptxPlus_); }
    b_HLT_L1BptxXOR_ = tree->GetBranch("HLT_L1BptxXOR");
    if (b_HLT_L1BptxXOR_) { b_HLT_L1BptxXOR_->SetAddress(&HLT_L1BptxXOR_); }
    b_HLT_L1CSCShower_DTCluster50_ = tree->GetBranch("HLT_L1CSCShower_DTCluster50");
    if (b_HLT_L1CSCShower_DTCluster50_) { b_HLT_L1CSCShower_DTCluster50_->SetAddress(&HLT_L1CSCShower_DTCluster50_); }
    b_HLT_L1CSCShower_DTCluster75_ = tree->GetBranch("HLT_L1CSCShower_DTCluster75");
    if (b_HLT_L1CSCShower_DTCluster75_) { b_HLT_L1CSCShower_DTCluster75_->SetAddress(&HLT_L1CSCShower_DTCluster75_); }
    b_HLT_L1ETMHadSeeds_ = tree->GetBranch("HLT_L1ETMHadSeeds");
    if (b_HLT_L1ETMHadSeeds_) { b_HLT_L1ETMHadSeeds_->SetAddress(&HLT_L1ETMHadSeeds_); }
    b_HLT_L1FatEvents_ = tree->GetBranch("HLT_L1FatEvents");
    if (b_HLT_L1FatEvents_) { b_HLT_L1FatEvents_->SetAddress(&HLT_L1FatEvents_); }
    b_HLT_L1FatEvents_part0_ = tree->GetBranch("HLT_L1FatEvents_part0");
    if (b_HLT_L1FatEvents_part0_) { b_HLT_L1FatEvents_part0_->SetAddress(&HLT_L1FatEvents_part0_); }
    b_HLT_L1FatEvents_part1_ = tree->GetBranch("HLT_L1FatEvents_part1");
    if (b_HLT_L1FatEvents_part1_) { b_HLT_L1FatEvents_part1_->SetAddress(&HLT_L1FatEvents_part1_); }
    b_HLT_L1FatEvents_part2_ = tree->GetBranch("HLT_L1FatEvents_part2");
    if (b_HLT_L1FatEvents_part2_) { b_HLT_L1FatEvents_part2_->SetAddress(&HLT_L1FatEvents_part2_); }
    b_HLT_L1FatEvents_part3_ = tree->GetBranch("HLT_L1FatEvents_part3");
    if (b_HLT_L1FatEvents_part3_) { b_HLT_L1FatEvents_part3_->SetAddress(&HLT_L1FatEvents_part3_); }
    b_HLT_L1MET_DTCluster50_ = tree->GetBranch("HLT_L1MET_DTCluster50");
    if (b_HLT_L1MET_DTCluster50_) { b_HLT_L1MET_DTCluster50_->SetAddress(&HLT_L1MET_DTCluster50_); }
    b_HLT_L1MET_DTClusterNoMB1S50_ = tree->GetBranch("HLT_L1MET_DTClusterNoMB1S50");
    if (b_HLT_L1MET_DTClusterNoMB1S50_) { b_HLT_L1MET_DTClusterNoMB1S50_->SetAddress(&HLT_L1MET_DTClusterNoMB1S50_); }
    b_HLT_L1MinimumBiasHF0OR_ = tree->GetBranch("HLT_L1MinimumBiasHF0OR");
    if (b_HLT_L1MinimumBiasHF0OR_) { b_HLT_L1MinimumBiasHF0OR_->SetAddress(&HLT_L1MinimumBiasHF0OR_); }
    b_HLT_L1MinimumBiasHF_AND_ = tree->GetBranch("HLT_L1MinimumBiasHF_AND");
    if (b_HLT_L1MinimumBiasHF_AND_) { b_HLT_L1MinimumBiasHF_AND_->SetAddress(&HLT_L1MinimumBiasHF_AND_); }
    b_HLT_L1MinimumBiasHF_OR_ = tree->GetBranch("HLT_L1MinimumBiasHF_OR");
    if (b_HLT_L1MinimumBiasHF_OR_) { b_HLT_L1MinimumBiasHF_OR_->SetAddress(&HLT_L1MinimumBiasHF_OR_); }
    b_HLT_L1MinimumBiasHF_OR_part0_ = tree->GetBranch("HLT_L1MinimumBiasHF_OR_part0");
    if (b_HLT_L1MinimumBiasHF_OR_part0_) { b_HLT_L1MinimumBiasHF_OR_part0_->SetAddress(&HLT_L1MinimumBiasHF_OR_part0_); }
    b_HLT_L1MinimumBiasHF_OR_part1_ = tree->GetBranch("HLT_L1MinimumBiasHF_OR_part1");
    if (b_HLT_L1MinimumBiasHF_OR_part1_) { b_HLT_L1MinimumBiasHF_OR_part1_->SetAddress(&HLT_L1MinimumBiasHF_OR_part1_); }
    b_HLT_L1MinimumBiasHF_OR_part2_ = tree->GetBranch("HLT_L1MinimumBiasHF_OR_part2");
    if (b_HLT_L1MinimumBiasHF_OR_part2_) { b_HLT_L1MinimumBiasHF_OR_part2_->SetAddress(&HLT_L1MinimumBiasHF_OR_part2_); }
    b_HLT_L1MinimumBiasHF_OR_part3_ = tree->GetBranch("HLT_L1MinimumBiasHF_OR_part3");
    if (b_HLT_L1MinimumBiasHF_OR_part3_) { b_HLT_L1MinimumBiasHF_OR_part3_->SetAddress(&HLT_L1MinimumBiasHF_OR_part3_); }
    b_HLT_L1MinimumBiasHF_OR_part4_ = tree->GetBranch("HLT_L1MinimumBiasHF_OR_part4");
    if (b_HLT_L1MinimumBiasHF_OR_part4_) { b_HLT_L1MinimumBiasHF_OR_part4_->SetAddress(&HLT_L1MinimumBiasHF_OR_part4_); }
    b_HLT_L1MinimumBiasHF_OR_part5_ = tree->GetBranch("HLT_L1MinimumBiasHF_OR_part5");
    if (b_HLT_L1MinimumBiasHF_OR_part5_) { b_HLT_L1MinimumBiasHF_OR_part5_->SetAddress(&HLT_L1MinimumBiasHF_OR_part5_); }
    b_HLT_L1MinimumBiasHF_OR_part6_ = tree->GetBranch("HLT_L1MinimumBiasHF_OR_part6");
    if (b_HLT_L1MinimumBiasHF_OR_part6_) { b_HLT_L1MinimumBiasHF_OR_part6_->SetAddress(&HLT_L1MinimumBiasHF_OR_part6_); }
    b_HLT_L1MinimumBiasHF_OR_part7_ = tree->GetBranch("HLT_L1MinimumBiasHF_OR_part7");
    if (b_HLT_L1MinimumBiasHF_OR_part7_) { b_HLT_L1MinimumBiasHF_OR_part7_->SetAddress(&HLT_L1MinimumBiasHF_OR_part7_); }
    b_HLT_L1MinimumBiasHF_OR_part8_ = tree->GetBranch("HLT_L1MinimumBiasHF_OR_part8");
    if (b_HLT_L1MinimumBiasHF_OR_part8_) { b_HLT_L1MinimumBiasHF_OR_part8_->SetAddress(&HLT_L1MinimumBiasHF_OR_part8_); }
    b_HLT_L1MinimumBiasHF_OR_part9_ = tree->GetBranch("HLT_L1MinimumBiasHF_OR_part9");
    if (b_HLT_L1MinimumBiasHF_OR_part9_) { b_HLT_L1MinimumBiasHF_OR_part9_->SetAddress(&HLT_L1MinimumBiasHF_OR_part9_); }
    b_HLT_L1Mu6HT240_ = tree->GetBranch("HLT_L1Mu6HT240");
    if (b_HLT_L1Mu6HT240_) { b_HLT_L1Mu6HT240_->SetAddress(&HLT_L1Mu6HT240_); }
    b_HLT_L1NotBptxOR_ = tree->GetBranch("HLT_L1NotBptxOR");
    if (b_HLT_L1NotBptxOR_) { b_HLT_L1NotBptxOR_->SetAddress(&HLT_L1NotBptxOR_); }
    b_HLT_L1SingleMu16_ = tree->GetBranch("HLT_L1SingleMu16");
    if (b_HLT_L1SingleMu16_) { b_HLT_L1SingleMu16_->SetAddress(&HLT_L1SingleMu16_); }
    b_HLT_L1SingleMu18_ = tree->GetBranch("HLT_L1SingleMu18");
    if (b_HLT_L1SingleMu18_) { b_HLT_L1SingleMu18_->SetAddress(&HLT_L1SingleMu18_); }
    b_HLT_L1SingleMu25_ = tree->GetBranch("HLT_L1SingleMu25");
    if (b_HLT_L1SingleMu25_) { b_HLT_L1SingleMu25_->SetAddress(&HLT_L1SingleMu25_); }
    b_HLT_L1SingleMuCosmics_ = tree->GetBranch("HLT_L1SingleMuCosmics");
    if (b_HLT_L1SingleMuCosmics_) { b_HLT_L1SingleMuCosmics_->SetAddress(&HLT_L1SingleMuCosmics_); }
    b_HLT_L1SingleMuOpen_ = tree->GetBranch("HLT_L1SingleMuOpen");
    if (b_HLT_L1SingleMuOpen_) { b_HLT_L1SingleMuOpen_->SetAddress(&HLT_L1SingleMuOpen_); }
    b_HLT_L1SingleMuOpen_DT_ = tree->GetBranch("HLT_L1SingleMuOpen_DT");
    if (b_HLT_L1SingleMuOpen_DT_) { b_HLT_L1SingleMuOpen_DT_->SetAddress(&HLT_L1SingleMuOpen_DT_); }
    b_HLT_L1UnpairedBunchBptxMinus_ = tree->GetBranch("HLT_L1UnpairedBunchBptxMinus");
    if (b_HLT_L1UnpairedBunchBptxMinus_) { b_HLT_L1UnpairedBunchBptxMinus_->SetAddress(&HLT_L1UnpairedBunchBptxMinus_); }
    b_HLT_L1UnpairedBunchBptxPlus_ = tree->GetBranch("HLT_L1UnpairedBunchBptxPlus");
    if (b_HLT_L1UnpairedBunchBptxPlus_) { b_HLT_L1UnpairedBunchBptxPlus_->SetAddress(&HLT_L1UnpairedBunchBptxPlus_); }
    b_HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_ = tree->GetBranch("HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142");
    if (b_HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_) { b_HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_->SetAddress(&HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_); }
    b_HLT_L1_DoubleJet30_Mass_Min400_Mu10_ = tree->GetBranch("HLT_L1_DoubleJet30_Mass_Min400_Mu10");
    if (b_HLT_L1_DoubleJet30_Mass_Min400_Mu10_) { b_HLT_L1_DoubleJet30_Mass_Min400_Mu10_->SetAddress(&HLT_L1_DoubleJet30_Mass_Min400_Mu10_); }
    b_HLT_L1_TripleJet_VBF_ = tree->GetBranch("HLT_L1_TripleJet_VBF");
    if (b_HLT_L1_TripleJet_VBF_) { b_HLT_L1_TripleJet_VBF_->SetAddress(&HLT_L1_TripleJet_VBF_); }
    b_HLT_L2DoubleMu23_NoVertex_ = tree->GetBranch("HLT_L2DoubleMu23_NoVertex");
    if (b_HLT_L2DoubleMu23_NoVertex_) { b_HLT_L2DoubleMu23_NoVertex_->SetAddress(&HLT_L2DoubleMu23_NoVertex_); }
    b_HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10_ = tree->GetBranch("HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10");
    if (b_HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10_) { b_HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10_->SetAddress(&HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10_); }
    b_HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10_ = tree->GetBranch("HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10");
    if (b_HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10_) { b_HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10_->SetAddress(&HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10_); }
    b_HLT_L2Mu10_ = tree->GetBranch("HLT_L2Mu10");
    if (b_HLT_L2Mu10_) { b_HLT_L2Mu10_->SetAddress(&HLT_L2Mu10_); }
    b_HLT_L2Mu10NoVtx_2Cha_ = tree->GetBranch("HLT_L2Mu10NoVtx_2Cha");
    if (b_HLT_L2Mu10NoVtx_2Cha_) { b_HLT_L2Mu10NoVtx_2Cha_->SetAddress(&HLT_L2Mu10NoVtx_2Cha_); }
    b_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_ = tree->GetBranch("HLT_L2Mu10NoVtx_2Cha_CosmicSeed");
    if (b_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_) { b_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_->SetAddress(&HLT_L2Mu10NoVtx_2Cha_CosmicSeed_); }
    b_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_ = tree->GetBranch("HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm");
    if (b_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_) { b_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_->SetAddress(&HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_); }
    b_HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ = tree->GetBranch("HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm");
    if (b_HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_) { b_HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_->SetAddress(&HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_); }
    b_HLT_L2Mu10_NoVertex_NoBPTX_ = tree->GetBranch("HLT_L2Mu10_NoVertex_NoBPTX");
    if (b_HLT_L2Mu10_NoVertex_NoBPTX_) { b_HLT_L2Mu10_NoVertex_NoBPTX_->SetAddress(&HLT_L2Mu10_NoVertex_NoBPTX_); }
    b_HLT_L2Mu10_NoVertex_NoBPTX3BX_ = tree->GetBranch("HLT_L2Mu10_NoVertex_NoBPTX3BX");
    if (b_HLT_L2Mu10_NoVertex_NoBPTX3BX_) { b_HLT_L2Mu10_NoVertex_NoBPTX3BX_->SetAddress(&HLT_L2Mu10_NoVertex_NoBPTX3BX_); }
    b_HLT_L2Mu23NoVtx_2Cha_ = tree->GetBranch("HLT_L2Mu23NoVtx_2Cha");
    if (b_HLT_L2Mu23NoVtx_2Cha_) { b_HLT_L2Mu23NoVtx_2Cha_->SetAddress(&HLT_L2Mu23NoVtx_2Cha_); }
    b_HLT_L2Mu23NoVtx_2Cha_CosmicSeed_ = tree->GetBranch("HLT_L2Mu23NoVtx_2Cha_CosmicSeed");
    if (b_HLT_L2Mu23NoVtx_2Cha_CosmicSeed_) { b_HLT_L2Mu23NoVtx_2Cha_CosmicSeed_->SetAddress(&HLT_L2Mu23NoVtx_2Cha_CosmicSeed_); }
    b_HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX_ = tree->GetBranch("HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX");
    if (b_HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX_) { b_HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX_->SetAddress(&HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX_); }
    b_HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_ = tree->GetBranch("HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX");
    if (b_HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_) { b_HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_->SetAddress(&HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_); }
    b_HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_ = tree->GetBranch("HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX");
    if (b_HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_) { b_HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_->SetAddress(&HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_); }
    b_HLT_L2Mu50_ = tree->GetBranch("HLT_L2Mu50");
    if (b_HLT_L2Mu50_) { b_HLT_L2Mu50_->SetAddress(&HLT_L2Mu50_); }
    b_HLT_L3Mu10NoVtx_ = tree->GetBranch("HLT_L3Mu10NoVtx");
    if (b_HLT_L3Mu10NoVtx_) { b_HLT_L3Mu10NoVtx_->SetAddress(&HLT_L3Mu10NoVtx_); }
    b_HLT_L3Mu10NoVtx_DxyMin0p01cm_ = tree->GetBranch("HLT_L3Mu10NoVtx_DxyMin0p01cm");
    if (b_HLT_L3Mu10NoVtx_DxyMin0p01cm_) { b_HLT_L3Mu10NoVtx_DxyMin0p01cm_->SetAddress(&HLT_L3Mu10NoVtx_DxyMin0p01cm_); }
    b_HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_ = tree->GetBranch("HLT_L3dTksMu10_NoVtx_DxyMin0p01cm");
    if (b_HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_) { b_HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_->SetAddress(&HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_); }
    b_HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_ = tree->GetBranch("HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1");
    if (b_HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_) { b_HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_->SetAddress(&HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_); }
    b_HLT_LooseIsoPFTau50_Trk30_eta2p1_ = tree->GetBranch("HLT_LooseIsoPFTau50_Trk30_eta2p1");
    if (b_HLT_LooseIsoPFTau50_Trk30_eta2p1_) { b_HLT_LooseIsoPFTau50_Trk30_eta2p1_->SetAddress(&HLT_LooseIsoPFTau50_Trk30_eta2p1_); }
    b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110_ = tree->GetBranch("HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110");
    if (b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110_) { b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110_->SetAddress(&HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110_); }
    b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120_ = tree->GetBranch("HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120");
    if (b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120_) { b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120_->SetAddress(&HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120_); }
    b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80_ = tree->GetBranch("HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80");
    if (b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80_) { b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80_->SetAddress(&HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80_); }
    b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90_ = tree->GetBranch("HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90");
    if (b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90_) { b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90_->SetAddress(&HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90_); }
    b_HLT_MET100_ = tree->GetBranch("HLT_MET100");
    if (b_HLT_MET100_) { b_HLT_MET100_->SetAddress(&HLT_MET100_); }
    b_HLT_MET105_IsoTrk50_ = tree->GetBranch("HLT_MET105_IsoTrk50");
    if (b_HLT_MET105_IsoTrk50_) { b_HLT_MET105_IsoTrk50_->SetAddress(&HLT_MET105_IsoTrk50_); }
    b_HLT_MET120_IsoTrk50_ = tree->GetBranch("HLT_MET120_IsoTrk50");
    if (b_HLT_MET120_IsoTrk50_) { b_HLT_MET120_IsoTrk50_->SetAddress(&HLT_MET120_IsoTrk50_); }
    b_HLT_MET150_ = tree->GetBranch("HLT_MET150");
    if (b_HLT_MET150_) { b_HLT_MET150_->SetAddress(&HLT_MET150_); }
    b_HLT_MET200_ = tree->GetBranch("HLT_MET200");
    if (b_HLT_MET200_) { b_HLT_MET200_->SetAddress(&HLT_MET200_); }
    b_HLT_MET250_ = tree->GetBranch("HLT_MET250");
    if (b_HLT_MET250_) { b_HLT_MET250_->SetAddress(&HLT_MET250_); }
    b_HLT_MET300_ = tree->GetBranch("HLT_MET300");
    if (b_HLT_MET300_) { b_HLT_MET300_->SetAddress(&HLT_MET300_); }
    b_HLT_MET600_ = tree->GetBranch("HLT_MET600");
    if (b_HLT_MET600_) { b_HLT_MET600_->SetAddress(&HLT_MET600_); }
    b_HLT_MET60_IsoTrk35_Loose_ = tree->GetBranch("HLT_MET60_IsoTrk35_Loose");
    if (b_HLT_MET60_IsoTrk35_Loose_) { b_HLT_MET60_IsoTrk35_Loose_->SetAddress(&HLT_MET60_IsoTrk35_Loose_); }
    b_HLT_MET700_ = tree->GetBranch("HLT_MET700");
    if (b_HLT_MET700_) { b_HLT_MET700_->SetAddress(&HLT_MET700_); }
    b_HLT_MET75_IsoTrk50_ = tree->GetBranch("HLT_MET75_IsoTrk50");
    if (b_HLT_MET75_IsoTrk50_) { b_HLT_MET75_IsoTrk50_->SetAddress(&HLT_MET75_IsoTrk50_); }
    b_HLT_MET90_IsoTrk50_ = tree->GetBranch("HLT_MET90_IsoTrk50");
    if (b_HLT_MET90_IsoTrk50_) { b_HLT_MET90_IsoTrk50_->SetAddress(&HLT_MET90_IsoTrk50_); }
    b_HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr_ = tree->GetBranch("HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr");
    if (b_HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr_) { b_HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr_->SetAddress(&HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr_); }
    b_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_ = tree->GetBranch("HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1");
    if (b_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_) { b_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_->SetAddress(&HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_); }
    b_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_ = tree->GetBranch("HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr");
    if (b_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_) { b_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_->SetAddress(&HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_); }
    b_HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_ = tree->GetBranch("HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1");
    if (b_HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_) { b_HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_->SetAddress(&HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_); }
    b_HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_ = tree->GetBranch("HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1");
    if (b_HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_) { b_HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_->SetAddress(&HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_); }
    b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_ = tree->GetBranch("HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr");
    if (b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_) { b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_->SetAddress(&HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_); }
    b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_ = tree->GetBranch("HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100");
    if (b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_) { b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_->SetAddress(&HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_); }
    b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_ = tree->GetBranch("HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110");
    if (b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_) { b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_->SetAddress(&HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_); }
    b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_ = tree->GetBranch("HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120");
    if (b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_) { b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_->SetAddress(&HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_); }
    b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_ = tree->GetBranch("HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130");
    if (b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_) { b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_->SetAddress(&HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_); }
    b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_ = tree->GetBranch("HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140");
    if (b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_) { b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_->SetAddress(&HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_); }
    b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_ = tree->GetBranch("HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90");
    if (b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_) { b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_->SetAddress(&HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_); }
    b_HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight_ = tree->GetBranch("HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight");
    if (b_HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight_) { b_HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight_->SetAddress(&HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight_); }
    b_HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_ = tree->GetBranch("HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight");
    if (b_HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_) { b_HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_->SetAddress(&HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_); }
    b_HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_ = tree->GetBranch("HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight");
    if (b_HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_) { b_HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_->SetAddress(&HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_); }
    b_HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_ = tree->GetBranch("HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight");
    if (b_HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_) { b_HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_->SetAddress(&HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_); }
    b_HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_ = tree->GetBranch("HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight");
    if (b_HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_) { b_HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_->SetAddress(&HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_); }
    b_HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight_ = tree->GetBranch("HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight");
    if (b_HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight_) { b_HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight_->SetAddress(&HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight_); }
    b_HLT_Mu0_L1DoubleMu_ = tree->GetBranch("HLT_Mu0_L1DoubleMu");
    if (b_HLT_Mu0_L1DoubleMu_) { b_HLT_Mu0_L1DoubleMu_->SetAddress(&HLT_Mu0_L1DoubleMu_); }
    b_HLT_Mu10_CentralPFJet30_BTagCSV_p13_ = tree->GetBranch("HLT_Mu10_CentralPFJet30_BTagCSV_p13");
    if (b_HLT_Mu10_CentralPFJet30_BTagCSV_p13_) { b_HLT_Mu10_CentralPFJet30_BTagCSV_p13_->SetAddress(&HLT_Mu10_CentralPFJet30_BTagCSV_p13_); }
    b_HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_ = tree->GetBranch("HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60");
    if (b_HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_) { b_HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_->SetAddress(&HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_); }
    b_HLT_Mu10p5_IP3p5_part0_ = tree->GetBranch("HLT_Mu10p5_IP3p5_part0");
    if (b_HLT_Mu10p5_IP3p5_part0_) { b_HLT_Mu10p5_IP3p5_part0_->SetAddress(&HLT_Mu10p5_IP3p5_part0_); }
    b_HLT_Mu10p5_IP3p5_part1_ = tree->GetBranch("HLT_Mu10p5_IP3p5_part1");
    if (b_HLT_Mu10p5_IP3p5_part1_) { b_HLT_Mu10p5_IP3p5_part1_->SetAddress(&HLT_Mu10p5_IP3p5_part1_); }
    b_HLT_Mu10p5_IP3p5_part2_ = tree->GetBranch("HLT_Mu10p5_IP3p5_part2");
    if (b_HLT_Mu10p5_IP3p5_part2_) { b_HLT_Mu10p5_IP3p5_part2_->SetAddress(&HLT_Mu10p5_IP3p5_part2_); }
    b_HLT_Mu10p5_IP3p5_part3_ = tree->GetBranch("HLT_Mu10p5_IP3p5_part3");
    if (b_HLT_Mu10p5_IP3p5_part3_) { b_HLT_Mu10p5_IP3p5_part3_->SetAddress(&HLT_Mu10p5_IP3p5_part3_); }
    b_HLT_Mu10p5_IP3p5_part4_ = tree->GetBranch("HLT_Mu10p5_IP3p5_part4");
    if (b_HLT_Mu10p5_IP3p5_part4_) { b_HLT_Mu10p5_IP3p5_part4_->SetAddress(&HLT_Mu10p5_IP3p5_part4_); }
    b_HLT_Mu10p5_IP3p5_part5_ = tree->GetBranch("HLT_Mu10p5_IP3p5_part5");
    if (b_HLT_Mu10p5_IP3p5_part5_) { b_HLT_Mu10p5_IP3p5_part5_->SetAddress(&HLT_Mu10p5_IP3p5_part5_); }
    b_HLT_Mu12_ = tree->GetBranch("HLT_Mu12");
    if (b_HLT_Mu12_) { b_HLT_Mu12_->SetAddress(&HLT_Mu12_); }
    b_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33_ = tree->GetBranch("HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33");
    if (b_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33_) { b_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33_->SetAddress(&HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33_); }
    b_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79_ = tree->GetBranch("HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79");
    if (b_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79_) { b_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79_->SetAddress(&HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79_); }
    b_HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71");
    if (b_HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_) { b_HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_->SetAddress(&HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_); }
    b_HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71");
    if (b_HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_) { b_HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_->SetAddress(&HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_); }
    b_HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71");
    if (b_HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_) { b_HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_->SetAddress(&HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_); }
    b_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33_ = tree->GetBranch("HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33");
    if (b_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33_) { b_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33_->SetAddress(&HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33_); }
    b_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79_ = tree->GetBranch("HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79");
    if (b_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79_) { b_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79_->SetAddress(&HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79_); }
    b_HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71");
    if (b_HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_) { b_HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_->SetAddress(&HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_); }
    b_HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71");
    if (b_HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_) { b_HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_->SetAddress(&HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_); }
    b_HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71");
    if (b_HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_) { b_HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_->SetAddress(&HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_); }
    b_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33_ = tree->GetBranch("HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33");
    if (b_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33_) { b_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33_->SetAddress(&HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33_); }
    b_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79_ = tree->GetBranch("HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79");
    if (b_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79_) { b_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79_->SetAddress(&HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79_); }
    b_HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71");
    if (b_HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_) { b_HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_->SetAddress(&HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_); }
    b_HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71");
    if (b_HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_) { b_HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_->SetAddress(&HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_); }
    b_HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71");
    if (b_HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_) { b_HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_->SetAddress(&HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_); }
    b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33_ = tree->GetBranch("HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33");
    if (b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33_) { b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33_->SetAddress(&HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33_); }
    b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79_ = tree->GetBranch("HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79");
    if (b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79_) { b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79_->SetAddress(&HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79_); }
    b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71");
    if (b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) { b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_->SetAddress(&HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_); }
    b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71");
    if (b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_) { b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_->SetAddress(&HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_); }
    b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71");
    if (b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_) { b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_->SetAddress(&HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_); }
    b_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33_ = tree->GetBranch("HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33");
    if (b_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33_) { b_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33_->SetAddress(&HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33_); }
    b_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79_ = tree->GetBranch("HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79");
    if (b_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79_) { b_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79_->SetAddress(&HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79_); }
    b_HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71");
    if (b_HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_) { b_HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_->SetAddress(&HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_); }
    b_HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71");
    if (b_HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_) { b_HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_->SetAddress(&HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_); }
    b_HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71");
    if (b_HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_) { b_HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_->SetAddress(&HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_); }
    b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33_ = tree->GetBranch("HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33");
    if (b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33_) { b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33_->SetAddress(&HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33_); }
    b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79_ = tree->GetBranch("HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79");
    if (b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79_) { b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79_->SetAddress(&HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79_); }
    b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71");
    if (b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) { b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_->SetAddress(&HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_); }
    b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71");
    if (b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_) { b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_->SetAddress(&HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_); }
    b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71");
    if (b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_) { b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_->SetAddress(&HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_); }
    b_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33_ = tree->GetBranch("HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33");
    if (b_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33_) { b_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33_->SetAddress(&HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33_); }
    b_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79_ = tree->GetBranch("HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79");
    if (b_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79_) { b_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79_->SetAddress(&HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79_); }
    b_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ = tree->GetBranch("HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71");
    if (b_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) { b_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_->SetAddress(&HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_); }
    b_HLT_Mu12_DoublePhoton20_ = tree->GetBranch("HLT_Mu12_DoublePhoton20");
    if (b_HLT_Mu12_DoublePhoton20_) { b_HLT_Mu12_DoublePhoton20_->SetAddress(&HLT_Mu12_DoublePhoton20_); }
    b_HLT_Mu12_IP6_ = tree->GetBranch("HLT_Mu12_IP6");
    if (b_HLT_Mu12_IP6_) { b_HLT_Mu12_IP6_->SetAddress(&HLT_Mu12_IP6_); }
    b_HLT_Mu12_IP6_ToCSCS_ = tree->GetBranch("HLT_Mu12_IP6_ToCSCS");
    if (b_HLT_Mu12_IP6_ToCSCS_) { b_HLT_Mu12_IP6_ToCSCS_->SetAddress(&HLT_Mu12_IP6_ToCSCS_); }
    b_HLT_Mu12_IP6_part0_ = tree->GetBranch("HLT_Mu12_IP6_part0");
    if (b_HLT_Mu12_IP6_part0_) { b_HLT_Mu12_IP6_part0_->SetAddress(&HLT_Mu12_IP6_part0_); }
    b_HLT_Mu12_IP6_part1_ = tree->GetBranch("HLT_Mu12_IP6_part1");
    if (b_HLT_Mu12_IP6_part1_) { b_HLT_Mu12_IP6_part1_->SetAddress(&HLT_Mu12_IP6_part1_); }
    b_HLT_Mu12_IP6_part2_ = tree->GetBranch("HLT_Mu12_IP6_part2");
    if (b_HLT_Mu12_IP6_part2_) { b_HLT_Mu12_IP6_part2_->SetAddress(&HLT_Mu12_IP6_part2_); }
    b_HLT_Mu12_IP6_part3_ = tree->GetBranch("HLT_Mu12_IP6_part3");
    if (b_HLT_Mu12_IP6_part3_) { b_HLT_Mu12_IP6_part3_->SetAddress(&HLT_Mu12_IP6_part3_); }
    b_HLT_Mu12_IP6_part4_ = tree->GetBranch("HLT_Mu12_IP6_part4");
    if (b_HLT_Mu12_IP6_part4_) { b_HLT_Mu12_IP6_part4_->SetAddress(&HLT_Mu12_IP6_part4_); }
    b_HLT_Mu12_Photon25_CaloIdL_ = tree->GetBranch("HLT_Mu12_Photon25_CaloIdL");
    if (b_HLT_Mu12_Photon25_CaloIdL_) { b_HLT_Mu12_Photon25_CaloIdL_->SetAddress(&HLT_Mu12_Photon25_CaloIdL_); }
    b_HLT_Mu12_Photon25_CaloIdL_L1ISO_ = tree->GetBranch("HLT_Mu12_Photon25_CaloIdL_L1ISO");
    if (b_HLT_Mu12_Photon25_CaloIdL_L1ISO_) { b_HLT_Mu12_Photon25_CaloIdL_L1ISO_->SetAddress(&HLT_Mu12_Photon25_CaloIdL_L1ISO_); }
    b_HLT_Mu12_Photon25_CaloIdL_L1OR_ = tree->GetBranch("HLT_Mu12_Photon25_CaloIdL_L1OR");
    if (b_HLT_Mu12_Photon25_CaloIdL_L1OR_) { b_HLT_Mu12_Photon25_CaloIdL_L1OR_->SetAddress(&HLT_Mu12_Photon25_CaloIdL_L1OR_); }
    b_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_ = tree->GetBranch("HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL");
    if (b_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_) { b_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_->SetAddress(&HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_); }
    b_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_ = tree->GetBranch("HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ");
    if (b_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_) { b_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_->SetAddress(&HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_); }
    b_HLT_Mu12eta2p3_ = tree->GetBranch("HLT_Mu12eta2p3");
    if (b_HLT_Mu12eta2p3_) { b_HLT_Mu12eta2p3_->SetAddress(&HLT_Mu12eta2p3_); }
    b_HLT_Mu12eta2p3_PFJet40_ = tree->GetBranch("HLT_Mu12eta2p3_PFJet40");
    if (b_HLT_Mu12eta2p3_PFJet40_) { b_HLT_Mu12eta2p3_PFJet40_->SetAddress(&HLT_Mu12eta2p3_PFJet40_); }
    b_HLT_Mu14er_PFMET100_ = tree->GetBranch("HLT_Mu14er_PFMET100");
    if (b_HLT_Mu14er_PFMET100_) { b_HLT_Mu14er_PFMET100_->SetAddress(&HLT_Mu14er_PFMET100_); }
    b_HLT_Mu15_ = tree->GetBranch("HLT_Mu15");
    if (b_HLT_Mu15_) { b_HLT_Mu15_->SetAddress(&HLT_Mu15_); }
    b_HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400_ = tree->GetBranch("HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400");
    if (b_HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400_) { b_HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400_->SetAddress(&HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400_); }
    b_HLT_Mu15_IsoVVVL_PFHT350_ = tree->GetBranch("HLT_Mu15_IsoVVVL_PFHT350");
    if (b_HLT_Mu15_IsoVVVL_PFHT350_) { b_HLT_Mu15_IsoVVVL_PFHT350_->SetAddress(&HLT_Mu15_IsoVVVL_PFHT350_); }
    b_HLT_Mu15_IsoVVVL_PFHT350_PFMET50_ = tree->GetBranch("HLT_Mu15_IsoVVVL_PFHT350_PFMET50");
    if (b_HLT_Mu15_IsoVVVL_PFHT350_PFMET50_) { b_HLT_Mu15_IsoVVVL_PFHT350_PFMET50_->SetAddress(&HLT_Mu15_IsoVVVL_PFHT350_PFMET50_); }
    b_HLT_Mu15_IsoVVVL_PFHT400_ = tree->GetBranch("HLT_Mu15_IsoVVVL_PFHT400");
    if (b_HLT_Mu15_IsoVVVL_PFHT400_) { b_HLT_Mu15_IsoVVVL_PFHT400_->SetAddress(&HLT_Mu15_IsoVVVL_PFHT400_); }
    b_HLT_Mu15_IsoVVVL_PFHT400_PFMET50_ = tree->GetBranch("HLT_Mu15_IsoVVVL_PFHT400_PFMET50");
    if (b_HLT_Mu15_IsoVVVL_PFHT400_PFMET50_) { b_HLT_Mu15_IsoVVVL_PFHT400_PFMET50_->SetAddress(&HLT_Mu15_IsoVVVL_PFHT400_PFMET50_); }
    b_HLT_Mu15_IsoVVVL_PFHT450_ = tree->GetBranch("HLT_Mu15_IsoVVVL_PFHT450");
    if (b_HLT_Mu15_IsoVVVL_PFHT450_) { b_HLT_Mu15_IsoVVVL_PFHT450_->SetAddress(&HLT_Mu15_IsoVVVL_PFHT450_); }
    b_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_ = tree->GetBranch("HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5");
    if (b_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_) { b_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_->SetAddress(&HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_); }
    b_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_ = tree->GetBranch("HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5");
    if (b_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_) { b_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_->SetAddress(&HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_); }
    b_HLT_Mu15_IsoVVVL_PFHT450_PFMET50_ = tree->GetBranch("HLT_Mu15_IsoVVVL_PFHT450_PFMET50");
    if (b_HLT_Mu15_IsoVVVL_PFHT450_PFMET50_) { b_HLT_Mu15_IsoVVVL_PFHT450_PFMET50_->SetAddress(&HLT_Mu15_IsoVVVL_PFHT450_PFMET50_); }
    b_HLT_Mu15_IsoVVVL_PFHT600_ = tree->GetBranch("HLT_Mu15_IsoVVVL_PFHT600");
    if (b_HLT_Mu15_IsoVVVL_PFHT600_) { b_HLT_Mu15_IsoVVVL_PFHT600_->SetAddress(&HLT_Mu15_IsoVVVL_PFHT600_); }
    b_HLT_Mu16_TkMu0_dEta18_Onia_ = tree->GetBranch("HLT_Mu16_TkMu0_dEta18_Onia");
    if (b_HLT_Mu16_TkMu0_dEta18_Onia_) { b_HLT_Mu16_TkMu0_dEta18_Onia_->SetAddress(&HLT_Mu16_TkMu0_dEta18_Onia_); }
    b_HLT_Mu16_TkMu0_dEta18_Phi_ = tree->GetBranch("HLT_Mu16_TkMu0_dEta18_Phi");
    if (b_HLT_Mu16_TkMu0_dEta18_Phi_) { b_HLT_Mu16_TkMu0_dEta18_Phi_->SetAddress(&HLT_Mu16_TkMu0_dEta18_Phi_); }
    b_HLT_Mu16_eta2p1_MET30_ = tree->GetBranch("HLT_Mu16_eta2p1_MET30");
    if (b_HLT_Mu16_eta2p1_MET30_) { b_HLT_Mu16_eta2p1_MET30_->SetAddress(&HLT_Mu16_eta2p1_MET30_); }
    b_HLT_Mu17_ = tree->GetBranch("HLT_Mu17");
    if (b_HLT_Mu17_) { b_HLT_Mu17_->SetAddress(&HLT_Mu17_); }
    b_HLT_Mu17_Mu8_ = tree->GetBranch("HLT_Mu17_Mu8");
    if (b_HLT_Mu17_Mu8_) { b_HLT_Mu17_Mu8_->SetAddress(&HLT_Mu17_Mu8_); }
    b_HLT_Mu17_Mu8_DZ_ = tree->GetBranch("HLT_Mu17_Mu8_DZ");
    if (b_HLT_Mu17_Mu8_DZ_) { b_HLT_Mu17_Mu8_DZ_->SetAddress(&HLT_Mu17_Mu8_DZ_); }
    b_HLT_Mu17_Mu8_SameSign_ = tree->GetBranch("HLT_Mu17_Mu8_SameSign");
    if (b_HLT_Mu17_Mu8_SameSign_) { b_HLT_Mu17_Mu8_SameSign_->SetAddress(&HLT_Mu17_Mu8_SameSign_); }
    b_HLT_Mu17_Mu8_SameSign_DZ_ = tree->GetBranch("HLT_Mu17_Mu8_SameSign_DZ");
    if (b_HLT_Mu17_Mu8_SameSign_DZ_) { b_HLT_Mu17_Mu8_SameSign_DZ_->SetAddress(&HLT_Mu17_Mu8_SameSign_DZ_); }
    b_HLT_Mu17_Photon22_CaloIdL_L1ISO_ = tree->GetBranch("HLT_Mu17_Photon22_CaloIdL_L1ISO");
    if (b_HLT_Mu17_Photon22_CaloIdL_L1ISO_) { b_HLT_Mu17_Photon22_CaloIdL_L1ISO_->SetAddress(&HLT_Mu17_Photon22_CaloIdL_L1ISO_); }
    b_HLT_Mu17_Photon30_CaloIdL_L1ISO_ = tree->GetBranch("HLT_Mu17_Photon30_CaloIdL_L1ISO");
    if (b_HLT_Mu17_Photon30_CaloIdL_L1ISO_) { b_HLT_Mu17_Photon30_CaloIdL_L1ISO_->SetAddress(&HLT_Mu17_Photon30_CaloIdL_L1ISO_); }
    b_HLT_Mu17_Photon30_IsoCaloId_ = tree->GetBranch("HLT_Mu17_Photon30_IsoCaloId");
    if (b_HLT_Mu17_Photon30_IsoCaloId_) { b_HLT_Mu17_Photon30_IsoCaloId_->SetAddress(&HLT_Mu17_Photon30_IsoCaloId_); }
    b_HLT_Mu17_Photon35_CaloIdL_L1ISO_ = tree->GetBranch("HLT_Mu17_Photon35_CaloIdL_L1ISO");
    if (b_HLT_Mu17_Photon35_CaloIdL_L1ISO_) { b_HLT_Mu17_Photon35_CaloIdL_L1ISO_->SetAddress(&HLT_Mu17_Photon35_CaloIdL_L1ISO_); }
    b_HLT_Mu17_TkMu8_DZ_ = tree->GetBranch("HLT_Mu17_TkMu8_DZ");
    if (b_HLT_Mu17_TkMu8_DZ_) { b_HLT_Mu17_TkMu8_DZ_->SetAddress(&HLT_Mu17_TkMu8_DZ_); }
    b_HLT_Mu17_TrkIsoVVL_ = tree->GetBranch("HLT_Mu17_TrkIsoVVL");
    if (b_HLT_Mu17_TrkIsoVVL_) { b_HLT_Mu17_TrkIsoVVL_->SetAddress(&HLT_Mu17_TrkIsoVVL_); }
    b_HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_ = tree->GetBranch("HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL");
    if (b_HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_) { b_HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_->SetAddress(&HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_); }
    b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_ = tree->GetBranch("HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL");
    if (b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_) { b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_->SetAddress(&HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_); }
    b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_ = tree->GetBranch("HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ");
    if (b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_) { b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_->SetAddress(&HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_); }
    b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_ = tree->GetBranch("HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8");
    if (b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_) { b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_->SetAddress(&HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_); }
    b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_ = tree->GetBranch("HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8");
    if (b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_) { b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_->SetAddress(&HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_); }
    b_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_ = tree->GetBranch("HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL");
    if (b_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_) { b_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_->SetAddress(&HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_); }
    b_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_ = tree->GetBranch("HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ");
    if (b_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_) { b_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_->SetAddress(&HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_); }
    b_HLT_Mu18_Mu9_ = tree->GetBranch("HLT_Mu18_Mu9");
    if (b_HLT_Mu18_Mu9_) { b_HLT_Mu18_Mu9_->SetAddress(&HLT_Mu18_Mu9_); }
    b_HLT_Mu18_Mu9_DZ_ = tree->GetBranch("HLT_Mu18_Mu9_DZ");
    if (b_HLT_Mu18_Mu9_DZ_) { b_HLT_Mu18_Mu9_DZ_->SetAddress(&HLT_Mu18_Mu9_DZ_); }
    b_HLT_Mu18_Mu9_SameSign_ = tree->GetBranch("HLT_Mu18_Mu9_SameSign");
    if (b_HLT_Mu18_Mu9_SameSign_) { b_HLT_Mu18_Mu9_SameSign_->SetAddress(&HLT_Mu18_Mu9_SameSign_); }
    b_HLT_Mu18_Mu9_SameSign_DZ_ = tree->GetBranch("HLT_Mu18_Mu9_SameSign_DZ");
    if (b_HLT_Mu18_Mu9_SameSign_DZ_) { b_HLT_Mu18_Mu9_SameSign_DZ_->SetAddress(&HLT_Mu18_Mu9_SameSign_DZ_); }
    b_HLT_Mu19_ = tree->GetBranch("HLT_Mu19");
    if (b_HLT_Mu19_) { b_HLT_Mu19_->SetAddress(&HLT_Mu19_); }
    b_HLT_Mu19_TrkIsoVVL_ = tree->GetBranch("HLT_Mu19_TrkIsoVVL");
    if (b_HLT_Mu19_TrkIsoVVL_) { b_HLT_Mu19_TrkIsoVVL_->SetAddress(&HLT_Mu19_TrkIsoVVL_); }
    b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_ = tree->GetBranch("HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL");
    if (b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_) { b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_->SetAddress(&HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_); }
    b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_ = tree->GetBranch("HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ");
    if (b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_) { b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_->SetAddress(&HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_); }
    b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_ = tree->GetBranch("HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8");
    if (b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_) { b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_->SetAddress(&HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_); }
    b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_ = tree->GetBranch("HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8");
    if (b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_) { b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_->SetAddress(&HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_); }
    b_HLT_Mu20_ = tree->GetBranch("HLT_Mu20");
    if (b_HLT_Mu20_) { b_HLT_Mu20_->SetAddress(&HLT_Mu20_); }
    b_HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_ = tree->GetBranch("HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId");
    if (b_HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_) { b_HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_->SetAddress(&HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_); }
    b_HLT_Mu20_Mu10_ = tree->GetBranch("HLT_Mu20_Mu10");
    if (b_HLT_Mu20_Mu10_) { b_HLT_Mu20_Mu10_->SetAddress(&HLT_Mu20_Mu10_); }
    b_HLT_Mu20_Mu10_DZ_ = tree->GetBranch("HLT_Mu20_Mu10_DZ");
    if (b_HLT_Mu20_Mu10_DZ_) { b_HLT_Mu20_Mu10_DZ_->SetAddress(&HLT_Mu20_Mu10_DZ_); }
    b_HLT_Mu20_Mu10_SameSign_ = tree->GetBranch("HLT_Mu20_Mu10_SameSign");
    if (b_HLT_Mu20_Mu10_SameSign_) { b_HLT_Mu20_Mu10_SameSign_->SetAddress(&HLT_Mu20_Mu10_SameSign_); }
    b_HLT_Mu20_Mu10_SameSign_DZ_ = tree->GetBranch("HLT_Mu20_Mu10_SameSign_DZ");
    if (b_HLT_Mu20_Mu10_SameSign_DZ_) { b_HLT_Mu20_Mu10_SameSign_DZ_->SetAddress(&HLT_Mu20_Mu10_SameSign_DZ_); }
    b_HLT_Mu20_TkMu0_Phi_ = tree->GetBranch("HLT_Mu20_TkMu0_Phi");
    if (b_HLT_Mu20_TkMu0_Phi_) { b_HLT_Mu20_TkMu0_Phi_->SetAddress(&HLT_Mu20_TkMu0_Phi_); }
    b_HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL_ = tree->GetBranch("HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL");
    if (b_HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL_) { b_HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL_->SetAddress(&HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL_); }
    b_HLT_Mu23_Mu12_ = tree->GetBranch("HLT_Mu23_Mu12");
    if (b_HLT_Mu23_Mu12_) { b_HLT_Mu23_Mu12_->SetAddress(&HLT_Mu23_Mu12_); }
    b_HLT_Mu23_Mu12_DZ_ = tree->GetBranch("HLT_Mu23_Mu12_DZ");
    if (b_HLT_Mu23_Mu12_DZ_) { b_HLT_Mu23_Mu12_DZ_->SetAddress(&HLT_Mu23_Mu12_DZ_); }
    b_HLT_Mu23_Mu12_SameSign_ = tree->GetBranch("HLT_Mu23_Mu12_SameSign");
    if (b_HLT_Mu23_Mu12_SameSign_) { b_HLT_Mu23_Mu12_SameSign_->SetAddress(&HLT_Mu23_Mu12_SameSign_); }
    b_HLT_Mu23_Mu12_SameSign_DZ_ = tree->GetBranch("HLT_Mu23_Mu12_SameSign_DZ");
    if (b_HLT_Mu23_Mu12_SameSign_DZ_) { b_HLT_Mu23_Mu12_SameSign_DZ_->SetAddress(&HLT_Mu23_Mu12_SameSign_DZ_); }
    b_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_ = tree->GetBranch("HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL");
    if (b_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_) { b_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_->SetAddress(&HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_); }
    b_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_ = tree->GetBranch("HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ");
    if (b_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_) { b_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_->SetAddress(&HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_); }
    b_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_ = tree->GetBranch("HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL");
    if (b_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_) { b_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_->SetAddress(&HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_); }
    b_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_ = tree->GetBranch("HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ");
    if (b_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_) { b_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_->SetAddress(&HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_); }
    b_HLT_Mu24_eta2p1_ = tree->GetBranch("HLT_Mu24_eta2p1");
    if (b_HLT_Mu24_eta2p1_) { b_HLT_Mu24_eta2p1_->SetAddress(&HLT_Mu24_eta2p1_); }
    b_HLT_Mu25_TkMu0_Onia_ = tree->GetBranch("HLT_Mu25_TkMu0_Onia");
    if (b_HLT_Mu25_TkMu0_Onia_) { b_HLT_Mu25_TkMu0_Onia_->SetAddress(&HLT_Mu25_TkMu0_Onia_); }
    b_HLT_Mu25_TkMu0_Phi_ = tree->GetBranch("HLT_Mu25_TkMu0_Phi");
    if (b_HLT_Mu25_TkMu0_Phi_) { b_HLT_Mu25_TkMu0_Phi_->SetAddress(&HLT_Mu25_TkMu0_Phi_); }
    b_HLT_Mu25_TkMu0_dEta18_Onia_ = tree->GetBranch("HLT_Mu25_TkMu0_dEta18_Onia");
    if (b_HLT_Mu25_TkMu0_dEta18_Onia_) { b_HLT_Mu25_TkMu0_dEta18_Onia_->SetAddress(&HLT_Mu25_TkMu0_dEta18_Onia_); }
    b_HLT_Mu27_ = tree->GetBranch("HLT_Mu27");
    if (b_HLT_Mu27_) { b_HLT_Mu27_->SetAddress(&HLT_Mu27_); }
    b_HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL_ = tree->GetBranch("HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL");
    if (b_HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL_) { b_HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL_->SetAddress(&HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL_); }
    b_HLT_Mu27_Ele37_CaloIdL_MW_ = tree->GetBranch("HLT_Mu27_Ele37_CaloIdL_MW");
    if (b_HLT_Mu27_Ele37_CaloIdL_MW_) { b_HLT_Mu27_Ele37_CaloIdL_MW_->SetAddress(&HLT_Mu27_Ele37_CaloIdL_MW_); }
    b_HLT_Mu27_TkMu8_ = tree->GetBranch("HLT_Mu27_TkMu8");
    if (b_HLT_Mu27_TkMu8_) { b_HLT_Mu27_TkMu8_->SetAddress(&HLT_Mu27_TkMu8_); }
    b_HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL_ = tree->GetBranch("HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL");
    if (b_HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL_) { b_HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL_->SetAddress(&HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL_); }
    b_HLT_Mu28NoFiltersNoVtx_CentralCaloJet40_ = tree->GetBranch("HLT_Mu28NoFiltersNoVtx_CentralCaloJet40");
    if (b_HLT_Mu28NoFiltersNoVtx_CentralCaloJet40_) { b_HLT_Mu28NoFiltersNoVtx_CentralCaloJet40_->SetAddress(&HLT_Mu28NoFiltersNoVtx_CentralCaloJet40_); }
    b_HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose_ = tree->GetBranch("HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose");
    if (b_HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose_) { b_HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose_->SetAddress(&HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose_); }
    b_HLT_Mu300_ = tree->GetBranch("HLT_Mu300");
    if (b_HLT_Mu300_) { b_HLT_Mu300_->SetAddress(&HLT_Mu300_); }
    b_HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL_ = tree->GetBranch("HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL");
    if (b_HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL_) { b_HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL_->SetAddress(&HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL_); }
    b_HLT_Mu30_TkMu0_Onia_ = tree->GetBranch("HLT_Mu30_TkMu0_Onia");
    if (b_HLT_Mu30_TkMu0_Onia_) { b_HLT_Mu30_TkMu0_Onia_->SetAddress(&HLT_Mu30_TkMu0_Onia_); }
    b_HLT_Mu30_TkMu0_Psi_ = tree->GetBranch("HLT_Mu30_TkMu0_Psi");
    if (b_HLT_Mu30_TkMu0_Psi_) { b_HLT_Mu30_TkMu0_Psi_->SetAddress(&HLT_Mu30_TkMu0_Psi_); }
    b_HLT_Mu30_TkMu0_Upsilon_ = tree->GetBranch("HLT_Mu30_TkMu0_Upsilon");
    if (b_HLT_Mu30_TkMu0_Upsilon_) { b_HLT_Mu30_TkMu0_Upsilon_->SetAddress(&HLT_Mu30_TkMu0_Upsilon_); }
    b_HLT_Mu30_TkMu11_ = tree->GetBranch("HLT_Mu30_TkMu11");
    if (b_HLT_Mu30_TkMu11_) { b_HLT_Mu30_TkMu11_->SetAddress(&HLT_Mu30_TkMu11_); }
    b_HLT_Mu30_eta2p1_PFJet150_PFJet50_ = tree->GetBranch("HLT_Mu30_eta2p1_PFJet150_PFJet50");
    if (b_HLT_Mu30_eta2p1_PFJet150_PFJet50_) { b_HLT_Mu30_eta2p1_PFJet150_PFJet50_->SetAddress(&HLT_Mu30_eta2p1_PFJet150_PFJet50_); }
    b_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose_ = tree->GetBranch("HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose");
    if (b_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose_) { b_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose_->SetAddress(&HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose_); }
    b_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight_ = tree->GetBranch("HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight");
    if (b_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight_) { b_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight_->SetAddress(&HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight_); }
    b_HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL_ = tree->GetBranch("HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL");
    if (b_HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL_) { b_HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL_->SetAddress(&HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL_); }
    b_HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL_ = tree->GetBranch("HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL");
    if (b_HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL_) { b_HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL_->SetAddress(&HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL_); }
    b_HLT_Mu350_ = tree->GetBranch("HLT_Mu350");
    if (b_HLT_Mu350_) { b_HLT_Mu350_->SetAddress(&HLT_Mu350_); }
    b_HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL_ = tree->GetBranch("HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL");
    if (b_HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL_) { b_HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL_->SetAddress(&HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL_); }
    b_HLT_Mu37_Ele27_CaloIdL_MW_ = tree->GetBranch("HLT_Mu37_Ele27_CaloIdL_MW");
    if (b_HLT_Mu37_Ele27_CaloIdL_MW_) { b_HLT_Mu37_Ele27_CaloIdL_MW_->SetAddress(&HLT_Mu37_Ele27_CaloIdL_MW_); }
    b_HLT_Mu37_TkMu27_ = tree->GetBranch("HLT_Mu37_TkMu27");
    if (b_HLT_Mu37_TkMu27_) { b_HLT_Mu37_TkMu27_->SetAddress(&HLT_Mu37_TkMu27_); }
    b_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose_ = tree->GetBranch("HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose");
    if (b_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose_) { b_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose_->SetAddress(&HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose_); }
    b_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight_ = tree->GetBranch("HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight");
    if (b_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight_) { b_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight_->SetAddress(&HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight_); }
    b_HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_ = tree->GetBranch("HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL");
    if (b_HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_) { b_HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_->SetAddress(&HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_); }
    b_HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose_ = tree->GetBranch("HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose");
    if (b_HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose_) { b_HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose_->SetAddress(&HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose_); }
    b_HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL_ = tree->GetBranch("HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL");
    if (b_HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL_) { b_HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL_->SetAddress(&HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL_); }
    b_HLT_Mu3_L1SingleMu5orSingleMu7_ = tree->GetBranch("HLT_Mu3_L1SingleMu5orSingleMu7");
    if (b_HLT_Mu3_L1SingleMu5orSingleMu7_) { b_HLT_Mu3_L1SingleMu5orSingleMu7_->SetAddress(&HLT_Mu3_L1SingleMu5orSingleMu7_); }
    b_HLT_Mu3_PFJet40_ = tree->GetBranch("HLT_Mu3_PFJet40");
    if (b_HLT_Mu3_PFJet40_) { b_HLT_Mu3_PFJet40_->SetAddress(&HLT_Mu3_PFJet40_); }
    b_HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_ = tree->GetBranch("HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight");
    if (b_HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_) { b_HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_->SetAddress(&HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_); }
    b_HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_ = tree->GetBranch("HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight");
    if (b_HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_) { b_HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_->SetAddress(&HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_); }
    b_HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_ = tree->GetBranch("HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight");
    if (b_HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_) { b_HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_->SetAddress(&HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_); }
    b_HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_ = tree->GetBranch("HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight");
    if (b_HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_) { b_HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_->SetAddress(&HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_); }
    b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_ = tree->GetBranch("HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight");
    if (b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_) { b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_->SetAddress(&HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_); }
    b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_ = tree->GetBranch("HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight");
    if (b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_) { b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_->SetAddress(&HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_); }
    b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_ = tree->GetBranch("HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight");
    if (b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_) { b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_->SetAddress(&HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_); }
    b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_ = tree->GetBranch("HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight");
    if (b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_) { b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_->SetAddress(&HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_); }
    b_HLT_Mu3er_PFHT140_PFMET125_ = tree->GetBranch("HLT_Mu3er_PFHT140_PFMET125");
    if (b_HLT_Mu3er_PFHT140_PFMET125_) { b_HLT_Mu3er_PFHT140_PFMET125_->SetAddress(&HLT_Mu3er_PFHT140_PFMET125_); }
    b_HLT_Mu40_TkMu11_ = tree->GetBranch("HLT_Mu40_TkMu11");
    if (b_HLT_Mu40_TkMu11_) { b_HLT_Mu40_TkMu11_->SetAddress(&HLT_Mu40_TkMu11_); }
    b_HLT_Mu40_eta2p1_PFJet200_PFJet50_ = tree->GetBranch("HLT_Mu40_eta2p1_PFJet200_PFJet50");
    if (b_HLT_Mu40_eta2p1_PFJet200_PFJet50_) { b_HLT_Mu40_eta2p1_PFJet200_PFJet50_->SetAddress(&HLT_Mu40_eta2p1_PFJet200_PFJet50_); }
    b_HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL_ = tree->GetBranch("HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL");
    if (b_HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL_) { b_HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL_->SetAddress(&HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL_); }
    b_HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_ = tree->GetBranch("HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL");
    if (b_HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_) { b_HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_->SetAddress(&HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_); }
    b_HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_ = tree->GetBranch("HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL");
    if (b_HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_) { b_HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_->SetAddress(&HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_); }
    b_HLT_Mu45_eta2p1_ = tree->GetBranch("HLT_Mu45_eta2p1");
    if (b_HLT_Mu45_eta2p1_) { b_HLT_Mu45_eta2p1_->SetAddress(&HLT_Mu45_eta2p1_); }
    b_HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_ = tree->GetBranch("HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL");
    if (b_HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_) { b_HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_->SetAddress(&HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_); }
    b_HLT_Mu4_L1DoubleMu_ = tree->GetBranch("HLT_Mu4_L1DoubleMu");
    if (b_HLT_Mu4_L1DoubleMu_) { b_HLT_Mu4_L1DoubleMu_->SetAddress(&HLT_Mu4_L1DoubleMu_); }
    b_HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_ = tree->GetBranch("HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60");
    if (b_HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_) { b_HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_->SetAddress(&HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_); }
    b_HLT_Mu50_ = tree->GetBranch("HLT_Mu50");
    if (b_HLT_Mu50_) { b_HLT_Mu50_->SetAddress(&HLT_Mu50_); }
    b_HLT_Mu50_IsoVVVL_PFHT400_ = tree->GetBranch("HLT_Mu50_IsoVVVL_PFHT400");
    if (b_HLT_Mu50_IsoVVVL_PFHT400_) { b_HLT_Mu50_IsoVVVL_PFHT400_->SetAddress(&HLT_Mu50_IsoVVVL_PFHT400_); }
    b_HLT_Mu50_IsoVVVL_PFHT450_ = tree->GetBranch("HLT_Mu50_IsoVVVL_PFHT450");
    if (b_HLT_Mu50_IsoVVVL_PFHT450_) { b_HLT_Mu50_IsoVVVL_PFHT450_->SetAddress(&HLT_Mu50_IsoVVVL_PFHT450_); }
    b_HLT_Mu50_L1SingleMuShower_ = tree->GetBranch("HLT_Mu50_L1SingleMuShower");
    if (b_HLT_Mu50_L1SingleMuShower_) { b_HLT_Mu50_L1SingleMuShower_->SetAddress(&HLT_Mu50_L1SingleMuShower_); }
    b_HLT_Mu55_ = tree->GetBranch("HLT_Mu55");
    if (b_HLT_Mu55_) { b_HLT_Mu55_->SetAddress(&HLT_Mu55_); }
    b_HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5_ = tree->GetBranch("HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5");
    if (b_HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5_) { b_HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5_->SetAddress(&HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5_); }
    b_HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_ = tree->GetBranch("HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose");
    if (b_HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_) { b_HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_->SetAddress(&HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_); }
    b_HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_ = tree->GetBranch("HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5");
    if (b_HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_) { b_HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_->SetAddress(&HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_); }
    b_HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_ = tree->GetBranch("HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose");
    if (b_HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_) { b_HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_->SetAddress(&HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_); }
    b_HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_ = tree->GetBranch("HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5");
    if (b_HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_) { b_HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_->SetAddress(&HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_); }
    b_HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_ = tree->GetBranch("HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose");
    if (b_HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_) { b_HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_->SetAddress(&HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_); }
    b_HLT_Mu6_PFHT200_PFMET100_ = tree->GetBranch("HLT_Mu6_PFHT200_PFMET100");
    if (b_HLT_Mu6_PFHT200_PFMET100_) { b_HLT_Mu6_PFHT200_PFMET100_->SetAddress(&HLT_Mu6_PFHT200_PFMET100_); }
    b_HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067_ = tree->GetBranch("HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067");
    if (b_HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067_) { b_HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067_->SetAddress(&HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067_); }
    b_HLT_Mu7_IP4_ToCSCS_ = tree->GetBranch("HLT_Mu7_IP4_ToCSCS");
    if (b_HLT_Mu7_IP4_ToCSCS_) { b_HLT_Mu7_IP4_ToCSCS_->SetAddress(&HLT_Mu7_IP4_ToCSCS_); }
    b_HLT_Mu7_IP4_part0_ = tree->GetBranch("HLT_Mu7_IP4_part0");
    if (b_HLT_Mu7_IP4_part0_) { b_HLT_Mu7_IP4_part0_->SetAddress(&HLT_Mu7_IP4_part0_); }
    b_HLT_Mu7_IP4_part1_ = tree->GetBranch("HLT_Mu7_IP4_part1");
    if (b_HLT_Mu7_IP4_part1_) { b_HLT_Mu7_IP4_part1_->SetAddress(&HLT_Mu7_IP4_part1_); }
    b_HLT_Mu7_IP4_part2_ = tree->GetBranch("HLT_Mu7_IP4_part2");
    if (b_HLT_Mu7_IP4_part2_) { b_HLT_Mu7_IP4_part2_->SetAddress(&HLT_Mu7_IP4_part2_); }
    b_HLT_Mu7_IP4_part3_ = tree->GetBranch("HLT_Mu7_IP4_part3");
    if (b_HLT_Mu7_IP4_part3_) { b_HLT_Mu7_IP4_part3_->SetAddress(&HLT_Mu7_IP4_part3_); }
    b_HLT_Mu7_IP4_part4_ = tree->GetBranch("HLT_Mu7_IP4_part4");
    if (b_HLT_Mu7_IP4_part4_) { b_HLT_Mu7_IP4_part4_->SetAddress(&HLT_Mu7_IP4_part4_); }
    b_HLT_Mu7p5_L2Mu2_Jpsi_ = tree->GetBranch("HLT_Mu7p5_L2Mu2_Jpsi");
    if (b_HLT_Mu7p5_L2Mu2_Jpsi_) { b_HLT_Mu7p5_L2Mu2_Jpsi_->SetAddress(&HLT_Mu7p5_L2Mu2_Jpsi_); }
    b_HLT_Mu7p5_L2Mu2_Upsilon_ = tree->GetBranch("HLT_Mu7p5_L2Mu2_Upsilon");
    if (b_HLT_Mu7p5_L2Mu2_Upsilon_) { b_HLT_Mu7p5_L2Mu2_Upsilon_->SetAddress(&HLT_Mu7p5_L2Mu2_Upsilon_); }
    b_HLT_Mu7p5_Track2_Jpsi_ = tree->GetBranch("HLT_Mu7p5_Track2_Jpsi");
    if (b_HLT_Mu7p5_Track2_Jpsi_) { b_HLT_Mu7p5_Track2_Jpsi_->SetAddress(&HLT_Mu7p5_Track2_Jpsi_); }
    b_HLT_Mu7p5_Track2_Upsilon_ = tree->GetBranch("HLT_Mu7p5_Track2_Upsilon");
    if (b_HLT_Mu7p5_Track2_Upsilon_) { b_HLT_Mu7p5_Track2_Upsilon_->SetAddress(&HLT_Mu7p5_Track2_Upsilon_); }
    b_HLT_Mu7p5_Track3p5_Jpsi_ = tree->GetBranch("HLT_Mu7p5_Track3p5_Jpsi");
    if (b_HLT_Mu7p5_Track3p5_Jpsi_) { b_HLT_Mu7p5_Track3p5_Jpsi_->SetAddress(&HLT_Mu7p5_Track3p5_Jpsi_); }
    b_HLT_Mu7p5_Track3p5_Upsilon_ = tree->GetBranch("HLT_Mu7p5_Track3p5_Upsilon");
    if (b_HLT_Mu7p5_Track3p5_Upsilon_) { b_HLT_Mu7p5_Track3p5_Upsilon_->SetAddress(&HLT_Mu7p5_Track3p5_Upsilon_); }
    b_HLT_Mu7p5_Track7_Jpsi_ = tree->GetBranch("HLT_Mu7p5_Track7_Jpsi");
    if (b_HLT_Mu7p5_Track7_Jpsi_) { b_HLT_Mu7p5_Track7_Jpsi_->SetAddress(&HLT_Mu7p5_Track7_Jpsi_); }
    b_HLT_Mu7p5_Track7_Upsilon_ = tree->GetBranch("HLT_Mu7p5_Track7_Upsilon");
    if (b_HLT_Mu7p5_Track7_Upsilon_) { b_HLT_Mu7p5_Track7_Upsilon_->SetAddress(&HLT_Mu7p5_Track7_Upsilon_); }
    b_HLT_Mu8_ = tree->GetBranch("HLT_Mu8");
    if (b_HLT_Mu8_) { b_HLT_Mu8_->SetAddress(&HLT_Mu8_); }
    b_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_ = tree->GetBranch("HLT_Mu8_DiEle12_CaloIdL_TrackIdL");
    if (b_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_) { b_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_->SetAddress(&HLT_Mu8_DiEle12_CaloIdL_TrackIdL_); }
    b_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_ = tree->GetBranch("HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ");
    if (b_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_) { b_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_->SetAddress(&HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_); }
    b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250_ = tree->GetBranch("HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250");
    if (b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250_) { b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250_->SetAddress(&HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250_); }
    b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300_ = tree->GetBranch("HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300");
    if (b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300_) { b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300_->SetAddress(&HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300_); }
    b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_ = tree->GetBranch("HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350");
    if (b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_) { b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_->SetAddress(&HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_); }
    b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_ = tree->GetBranch("HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ");
    if (b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_) { b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_->SetAddress(&HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_); }
    b_HLT_Mu8_IP3_ToCSCS_ = tree->GetBranch("HLT_Mu8_IP3_ToCSCS");
    if (b_HLT_Mu8_IP3_ToCSCS_) { b_HLT_Mu8_IP3_ToCSCS_->SetAddress(&HLT_Mu8_IP3_ToCSCS_); }
    b_HLT_Mu8_IP3_part0_ = tree->GetBranch("HLT_Mu8_IP3_part0");
    if (b_HLT_Mu8_IP3_part0_) { b_HLT_Mu8_IP3_part0_->SetAddress(&HLT_Mu8_IP3_part0_); }
    b_HLT_Mu8_IP3_part1_ = tree->GetBranch("HLT_Mu8_IP3_part1");
    if (b_HLT_Mu8_IP3_part1_) { b_HLT_Mu8_IP3_part1_->SetAddress(&HLT_Mu8_IP3_part1_); }
    b_HLT_Mu8_IP3_part2_ = tree->GetBranch("HLT_Mu8_IP3_part2");
    if (b_HLT_Mu8_IP3_part2_) { b_HLT_Mu8_IP3_part2_->SetAddress(&HLT_Mu8_IP3_part2_); }
    b_HLT_Mu8_IP3_part3_ = tree->GetBranch("HLT_Mu8_IP3_part3");
    if (b_HLT_Mu8_IP3_part3_) { b_HLT_Mu8_IP3_part3_->SetAddress(&HLT_Mu8_IP3_part3_); }
    b_HLT_Mu8_IP3_part4_ = tree->GetBranch("HLT_Mu8_IP3_part4");
    if (b_HLT_Mu8_IP3_part4_) { b_HLT_Mu8_IP3_part4_->SetAddress(&HLT_Mu8_IP3_part4_); }
    b_HLT_Mu8_IP3_part5_ = tree->GetBranch("HLT_Mu8_IP3_part5");
    if (b_HLT_Mu8_IP3_part5_) { b_HLT_Mu8_IP3_part5_->SetAddress(&HLT_Mu8_IP3_part5_); }
    b_HLT_Mu8_IP5_ToCSCS_ = tree->GetBranch("HLT_Mu8_IP5_ToCSCS");
    if (b_HLT_Mu8_IP5_ToCSCS_) { b_HLT_Mu8_IP5_ToCSCS_->SetAddress(&HLT_Mu8_IP5_ToCSCS_); }
    b_HLT_Mu8_IP5_part0_ = tree->GetBranch("HLT_Mu8_IP5_part0");
    if (b_HLT_Mu8_IP5_part0_) { b_HLT_Mu8_IP5_part0_->SetAddress(&HLT_Mu8_IP5_part0_); }
    b_HLT_Mu8_IP5_part1_ = tree->GetBranch("HLT_Mu8_IP5_part1");
    if (b_HLT_Mu8_IP5_part1_) { b_HLT_Mu8_IP5_part1_->SetAddress(&HLT_Mu8_IP5_part1_); }
    b_HLT_Mu8_IP5_part2_ = tree->GetBranch("HLT_Mu8_IP5_part2");
    if (b_HLT_Mu8_IP5_part2_) { b_HLT_Mu8_IP5_part2_->SetAddress(&HLT_Mu8_IP5_part2_); }
    b_HLT_Mu8_IP5_part3_ = tree->GetBranch("HLT_Mu8_IP5_part3");
    if (b_HLT_Mu8_IP5_part3_) { b_HLT_Mu8_IP5_part3_->SetAddress(&HLT_Mu8_IP5_part3_); }
    b_HLT_Mu8_IP5_part4_ = tree->GetBranch("HLT_Mu8_IP5_part4");
    if (b_HLT_Mu8_IP5_part4_) { b_HLT_Mu8_IP5_part4_->SetAddress(&HLT_Mu8_IP5_part4_); }
    b_HLT_Mu8_IP6_ToCSCS_ = tree->GetBranch("HLT_Mu8_IP6_ToCSCS");
    if (b_HLT_Mu8_IP6_ToCSCS_) { b_HLT_Mu8_IP6_ToCSCS_->SetAddress(&HLT_Mu8_IP6_ToCSCS_); }
    b_HLT_Mu8_IP6_part0_ = tree->GetBranch("HLT_Mu8_IP6_part0");
    if (b_HLT_Mu8_IP6_part0_) { b_HLT_Mu8_IP6_part0_->SetAddress(&HLT_Mu8_IP6_part0_); }
    b_HLT_Mu8_IP6_part1_ = tree->GetBranch("HLT_Mu8_IP6_part1");
    if (b_HLT_Mu8_IP6_part1_) { b_HLT_Mu8_IP6_part1_->SetAddress(&HLT_Mu8_IP6_part1_); }
    b_HLT_Mu8_IP6_part2_ = tree->GetBranch("HLT_Mu8_IP6_part2");
    if (b_HLT_Mu8_IP6_part2_) { b_HLT_Mu8_IP6_part2_->SetAddress(&HLT_Mu8_IP6_part2_); }
    b_HLT_Mu8_IP6_part3_ = tree->GetBranch("HLT_Mu8_IP6_part3");
    if (b_HLT_Mu8_IP6_part3_) { b_HLT_Mu8_IP6_part3_->SetAddress(&HLT_Mu8_IP6_part3_); }
    b_HLT_Mu8_IP6_part4_ = tree->GetBranch("HLT_Mu8_IP6_part4");
    if (b_HLT_Mu8_IP6_part4_) { b_HLT_Mu8_IP6_part4_->SetAddress(&HLT_Mu8_IP6_part4_); }
    b_HLT_Mu8_TrkIsoVVL_ = tree->GetBranch("HLT_Mu8_TrkIsoVVL");
    if (b_HLT_Mu8_TrkIsoVVL_) { b_HLT_Mu8_TrkIsoVVL_->SetAddress(&HLT_Mu8_TrkIsoVVL_); }
    b_HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_ = tree->GetBranch("HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60");
    if (b_HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_) { b_HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_->SetAddress(&HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_); }
    b_HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL_ = tree->GetBranch("HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL");
    if (b_HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL_) { b_HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL_->SetAddress(&HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL_); }
    b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_ = tree->GetBranch("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL");
    if (b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_) { b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_->SetAddress(&HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_); }
    b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_ = tree->GetBranch("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ");
    if (b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_) { b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_->SetAddress(&HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_); }
    b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_ = tree->GetBranch("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30");
    if (b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_) { b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_->SetAddress(&HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_); }
    b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_ = tree->GetBranch("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5");
    if (b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_) { b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_->SetAddress(&HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_); }
    b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_ = tree->GetBranch("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30");
    if (b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_) { b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_->SetAddress(&HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_); }
    b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_ = tree->GetBranch("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65");
    if (b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_) { b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_->SetAddress(&HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_); }
    b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_ = tree->GetBranch("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5");
    if (b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_) { b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_->SetAddress(&HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_); }
    b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_ = tree->GetBranch("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5");
    if (b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_) { b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_->SetAddress(&HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_); }
    b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_ = tree->GetBranch("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30");
    if (b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_) { b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_->SetAddress(&HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_); }
    b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_ = tree->GetBranch("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65");
    if (b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_) { b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_->SetAddress(&HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_); }
    b_HLT_Mu8p5_IP3p5_part0_ = tree->GetBranch("HLT_Mu8p5_IP3p5_part0");
    if (b_HLT_Mu8p5_IP3p5_part0_) { b_HLT_Mu8p5_IP3p5_part0_->SetAddress(&HLT_Mu8p5_IP3p5_part0_); }
    b_HLT_Mu8p5_IP3p5_part1_ = tree->GetBranch("HLT_Mu8p5_IP3p5_part1");
    if (b_HLT_Mu8p5_IP3p5_part1_) { b_HLT_Mu8p5_IP3p5_part1_->SetAddress(&HLT_Mu8p5_IP3p5_part1_); }
    b_HLT_Mu8p5_IP3p5_part2_ = tree->GetBranch("HLT_Mu8p5_IP3p5_part2");
    if (b_HLT_Mu8p5_IP3p5_part2_) { b_HLT_Mu8p5_IP3p5_part2_->SetAddress(&HLT_Mu8p5_IP3p5_part2_); }
    b_HLT_Mu8p5_IP3p5_part3_ = tree->GetBranch("HLT_Mu8p5_IP3p5_part3");
    if (b_HLT_Mu8p5_IP3p5_part3_) { b_HLT_Mu8p5_IP3p5_part3_->SetAddress(&HLT_Mu8p5_IP3p5_part3_); }
    b_HLT_Mu8p5_IP3p5_part4_ = tree->GetBranch("HLT_Mu8p5_IP3p5_part4");
    if (b_HLT_Mu8p5_IP3p5_part4_) { b_HLT_Mu8p5_IP3p5_part4_->SetAddress(&HLT_Mu8p5_IP3p5_part4_); }
    b_HLT_Mu8p5_IP3p5_part5_ = tree->GetBranch("HLT_Mu8p5_IP3p5_part5");
    if (b_HLT_Mu8p5_IP3p5_part5_) { b_HLT_Mu8p5_IP3p5_part5_->SetAddress(&HLT_Mu8p5_IP3p5_part5_); }
    b_HLT_Mu9_IP0_part0_ = tree->GetBranch("HLT_Mu9_IP0_part0");
    if (b_HLT_Mu9_IP0_part0_) { b_HLT_Mu9_IP0_part0_->SetAddress(&HLT_Mu9_IP0_part0_); }
    b_HLT_Mu9_IP3_part0_ = tree->GetBranch("HLT_Mu9_IP3_part0");
    if (b_HLT_Mu9_IP3_part0_) { b_HLT_Mu9_IP3_part0_->SetAddress(&HLT_Mu9_IP3_part0_); }
    b_HLT_Mu9_IP4_ToCSCS_ = tree->GetBranch("HLT_Mu9_IP4_ToCSCS");
    if (b_HLT_Mu9_IP4_ToCSCS_) { b_HLT_Mu9_IP4_ToCSCS_->SetAddress(&HLT_Mu9_IP4_ToCSCS_); }
    b_HLT_Mu9_IP4_part0_ = tree->GetBranch("HLT_Mu9_IP4_part0");
    if (b_HLT_Mu9_IP4_part0_) { b_HLT_Mu9_IP4_part0_->SetAddress(&HLT_Mu9_IP4_part0_); }
    b_HLT_Mu9_IP4_part1_ = tree->GetBranch("HLT_Mu9_IP4_part1");
    if (b_HLT_Mu9_IP4_part1_) { b_HLT_Mu9_IP4_part1_->SetAddress(&HLT_Mu9_IP4_part1_); }
    b_HLT_Mu9_IP4_part2_ = tree->GetBranch("HLT_Mu9_IP4_part2");
    if (b_HLT_Mu9_IP4_part2_) { b_HLT_Mu9_IP4_part2_->SetAddress(&HLT_Mu9_IP4_part2_); }
    b_HLT_Mu9_IP4_part3_ = tree->GetBranch("HLT_Mu9_IP4_part3");
    if (b_HLT_Mu9_IP4_part3_) { b_HLT_Mu9_IP4_part3_->SetAddress(&HLT_Mu9_IP4_part3_); }
    b_HLT_Mu9_IP4_part4_ = tree->GetBranch("HLT_Mu9_IP4_part4");
    if (b_HLT_Mu9_IP4_part4_) { b_HLT_Mu9_IP4_part4_->SetAddress(&HLT_Mu9_IP4_part4_); }
    b_HLT_Mu9_IP5_ToCSCS_ = tree->GetBranch("HLT_Mu9_IP5_ToCSCS");
    if (b_HLT_Mu9_IP5_ToCSCS_) { b_HLT_Mu9_IP5_ToCSCS_->SetAddress(&HLT_Mu9_IP5_ToCSCS_); }
    b_HLT_Mu9_IP5_part0_ = tree->GetBranch("HLT_Mu9_IP5_part0");
    if (b_HLT_Mu9_IP5_part0_) { b_HLT_Mu9_IP5_part0_->SetAddress(&HLT_Mu9_IP5_part0_); }
    b_HLT_Mu9_IP5_part1_ = tree->GetBranch("HLT_Mu9_IP5_part1");
    if (b_HLT_Mu9_IP5_part1_) { b_HLT_Mu9_IP5_part1_->SetAddress(&HLT_Mu9_IP5_part1_); }
    b_HLT_Mu9_IP5_part2_ = tree->GetBranch("HLT_Mu9_IP5_part2");
    if (b_HLT_Mu9_IP5_part2_) { b_HLT_Mu9_IP5_part2_->SetAddress(&HLT_Mu9_IP5_part2_); }
    b_HLT_Mu9_IP5_part3_ = tree->GetBranch("HLT_Mu9_IP5_part3");
    if (b_HLT_Mu9_IP5_part3_) { b_HLT_Mu9_IP5_part3_->SetAddress(&HLT_Mu9_IP5_part3_); }
    b_HLT_Mu9_IP5_part4_ = tree->GetBranch("HLT_Mu9_IP5_part4");
    if (b_HLT_Mu9_IP5_part4_) { b_HLT_Mu9_IP5_part4_->SetAddress(&HLT_Mu9_IP5_part4_); }
    b_HLT_Mu9_IP6_ToCSCS_ = tree->GetBranch("HLT_Mu9_IP6_ToCSCS");
    if (b_HLT_Mu9_IP6_ToCSCS_) { b_HLT_Mu9_IP6_ToCSCS_->SetAddress(&HLT_Mu9_IP6_ToCSCS_); }
    b_HLT_Mu9_IP6_part0_ = tree->GetBranch("HLT_Mu9_IP6_part0");
    if (b_HLT_Mu9_IP6_part0_) { b_HLT_Mu9_IP6_part0_->SetAddress(&HLT_Mu9_IP6_part0_); }
    b_HLT_Mu9_IP6_part1_ = tree->GetBranch("HLT_Mu9_IP6_part1");
    if (b_HLT_Mu9_IP6_part1_) { b_HLT_Mu9_IP6_part1_->SetAddress(&HLT_Mu9_IP6_part1_); }
    b_HLT_Mu9_IP6_part2_ = tree->GetBranch("HLT_Mu9_IP6_part2");
    if (b_HLT_Mu9_IP6_part2_) { b_HLT_Mu9_IP6_part2_->SetAddress(&HLT_Mu9_IP6_part2_); }
    b_HLT_Mu9_IP6_part3_ = tree->GetBranch("HLT_Mu9_IP6_part3");
    if (b_HLT_Mu9_IP6_part3_) { b_HLT_Mu9_IP6_part3_->SetAddress(&HLT_Mu9_IP6_part3_); }
    b_HLT_Mu9_IP6_part4_ = tree->GetBranch("HLT_Mu9_IP6_part4");
    if (b_HLT_Mu9_IP6_part4_) { b_HLT_Mu9_IP6_part4_->SetAddress(&HLT_Mu9_IP6_part4_); }
    b_HLT_Mu9_IP6_part5_ = tree->GetBranch("HLT_Mu9_IP6_part5");
    if (b_HLT_Mu9_IP6_part5_) { b_HLT_Mu9_IP6_part5_->SetAddress(&HLT_Mu9_IP6_part5_); }
    b_HLT_OldMu100_ = tree->GetBranch("HLT_OldMu100");
    if (b_HLT_OldMu100_) { b_HLT_OldMu100_->SetAddress(&HLT_OldMu100_); }
    b_HLT_OnlineMonitorGroup_ = tree->GetBranch("HLT_OnlineMonitorGroup");
    if (b_HLT_OnlineMonitorGroup_) { b_HLT_OnlineMonitorGroup_->SetAddress(&HLT_OnlineMonitorGroup_); }
    b_HLT_PFHT1050_ = tree->GetBranch("HLT_PFHT1050");
    if (b_HLT_PFHT1050_) { b_HLT_PFHT1050_->SetAddress(&HLT_PFHT1050_); }
    b_HLT_PFHT125_ = tree->GetBranch("HLT_PFHT125");
    if (b_HLT_PFHT125_) { b_HLT_PFHT125_->SetAddress(&HLT_PFHT125_); }
    b_HLT_PFHT180_ = tree->GetBranch("HLT_PFHT180");
    if (b_HLT_PFHT180_) { b_HLT_PFHT180_->SetAddress(&HLT_PFHT180_); }
    b_HLT_PFHT200_ = tree->GetBranch("HLT_PFHT200");
    if (b_HLT_PFHT200_) { b_HLT_PFHT200_->SetAddress(&HLT_PFHT200_); }
    b_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57_ = tree->GetBranch("HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57");
    if (b_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57_) { b_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57_->SetAddress(&HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57_); }
    b_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63_ = tree->GetBranch("HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63");
    if (b_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63_) { b_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63_->SetAddress(&HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63_); }
    b_HLT_PFHT200_PFAlphaT0p51_ = tree->GetBranch("HLT_PFHT200_PFAlphaT0p51");
    if (b_HLT_PFHT200_PFAlphaT0p51_) { b_HLT_PFHT200_PFAlphaT0p51_->SetAddress(&HLT_PFHT200_PFAlphaT0p51_); }
    b_HLT_PFHT250_ = tree->GetBranch("HLT_PFHT250");
    if (b_HLT_PFHT250_) { b_HLT_PFHT250_->SetAddress(&HLT_PFHT250_); }
    b_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55_ = tree->GetBranch("HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55");
    if (b_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55_) { b_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55_->SetAddress(&HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55_); }
    b_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58_ = tree->GetBranch("HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58");
    if (b_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58_) { b_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58_->SetAddress(&HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58_); }
    b_HLT_PFHT300_ = tree->GetBranch("HLT_PFHT300");
    if (b_HLT_PFHT300_) { b_HLT_PFHT300_->SetAddress(&HLT_PFHT300_); }
    b_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_ = tree->GetBranch("HLT_PFHT300PT30_QuadPFJet_75_60_45_40");
    if (b_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_) { b_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_->SetAddress(&HLT_PFHT300PT30_QuadPFJet_75_60_45_40_); }
    b_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0_ = tree->GetBranch("HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0");
    if (b_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0_) { b_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0_->SetAddress(&HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0_); }
    b_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53_ = tree->GetBranch("HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53");
    if (b_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53_) { b_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53_->SetAddress(&HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53_); }
    b_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54_ = tree->GetBranch("HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54");
    if (b_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54_) { b_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54_->SetAddress(&HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54_); }
    b_HLT_PFHT300_PFMET100_ = tree->GetBranch("HLT_PFHT300_PFMET100");
    if (b_HLT_PFHT300_PFMET100_) { b_HLT_PFHT300_PFMET100_->SetAddress(&HLT_PFHT300_PFMET100_); }
    b_HLT_PFHT300_PFMET110_ = tree->GetBranch("HLT_PFHT300_PFMET110");
    if (b_HLT_PFHT300_PFMET110_) { b_HLT_PFHT300_PFMET110_->SetAddress(&HLT_PFHT300_PFMET110_); }
    b_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_ = tree->GetBranch("HLT_PFHT330PT30_QuadPFJet_75_60_45_40");
    if (b_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_) { b_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_->SetAddress(&HLT_PFHT330PT30_QuadPFJet_75_60_45_40_); }
    b_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_ = tree->GetBranch("HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5");
    if (b_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_) { b_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_->SetAddress(&HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_); }
    b_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_ = tree->GetBranch("HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5");
    if (b_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_) { b_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_->SetAddress(&HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_); }
    b_HLT_PFHT350_ = tree->GetBranch("HLT_PFHT350");
    if (b_HLT_PFHT350_) { b_HLT_PFHT350_->SetAddress(&HLT_PFHT350_); }
    b_HLT_PFHT350MinPFJet15_ = tree->GetBranch("HLT_PFHT350MinPFJet15");
    if (b_HLT_PFHT350MinPFJet15_) { b_HLT_PFHT350MinPFJet15_->SetAddress(&HLT_PFHT350MinPFJet15_); }
    b_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52_ = tree->GetBranch("HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52");
    if (b_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52_) { b_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52_->SetAddress(&HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52_); }
    b_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53_ = tree->GetBranch("HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53");
    if (b_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53_) { b_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53_->SetAddress(&HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53_); }
    b_HLT_PFHT370_ = tree->GetBranch("HLT_PFHT370");
    if (b_HLT_PFHT370_) { b_HLT_PFHT370_->SetAddress(&HLT_PFHT370_); }
    b_HLT_PFHT380_SixJet32_DoubleBTagCSV_p075_ = tree->GetBranch("HLT_PFHT380_SixJet32_DoubleBTagCSV_p075");
    if (b_HLT_PFHT380_SixJet32_DoubleBTagCSV_p075_) { b_HLT_PFHT380_SixJet32_DoubleBTagCSV_p075_->SetAddress(&HLT_PFHT380_SixJet32_DoubleBTagCSV_p075_); }
    b_HLT_PFHT380_SixPFJet32_ = tree->GetBranch("HLT_PFHT380_SixPFJet32");
    if (b_HLT_PFHT380_SixPFJet32_) { b_HLT_PFHT380_SixPFJet32_->SetAddress(&HLT_PFHT380_SixPFJet32_); }
    b_HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2_ = tree->GetBranch("HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2");
    if (b_HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2_) { b_HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2_->SetAddress(&HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2_); }
    b_HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2_ = tree->GetBranch("HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2");
    if (b_HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2_) { b_HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2_->SetAddress(&HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2_); }
    b_HLT_PFHT400_ = tree->GetBranch("HLT_PFHT400");
    if (b_HLT_PFHT400_) { b_HLT_PFHT400_->SetAddress(&HLT_PFHT400_); }
    b_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51_ = tree->GetBranch("HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51");
    if (b_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51_) { b_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51_->SetAddress(&HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51_); }
    b_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52_ = tree->GetBranch("HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52");
    if (b_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52_) { b_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52_->SetAddress(&HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52_); }
    b_HLT_PFHT400_FivePFJet_100_100_60_30_30_ = tree->GetBranch("HLT_PFHT400_FivePFJet_100_100_60_30_30");
    if (b_HLT_PFHT400_FivePFJet_100_100_60_30_30_) { b_HLT_PFHT400_FivePFJet_100_100_60_30_30_->SetAddress(&HLT_PFHT400_FivePFJet_100_100_60_30_30_); }
    b_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_ = tree->GetBranch("HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5");
    if (b_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_) { b_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_->SetAddress(&HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_); }
    b_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_ = tree->GetBranch("HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5");
    if (b_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_) { b_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_->SetAddress(&HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_); }
    b_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_ = tree->GetBranch("HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5");
    if (b_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_) { b_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_->SetAddress(&HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_); }
    b_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_ = tree->GetBranch("HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5");
    if (b_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_) { b_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_->SetAddress(&HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_); }
    b_HLT_PFHT400_SixJet30_ = tree->GetBranch("HLT_PFHT400_SixJet30");
    if (b_HLT_PFHT400_SixJet30_) { b_HLT_PFHT400_SixJet30_->SetAddress(&HLT_PFHT400_SixJet30_); }
    b_HLT_PFHT400_SixJet30_DoubleBTagCSV_p056_ = tree->GetBranch("HLT_PFHT400_SixJet30_DoubleBTagCSV_p056");
    if (b_HLT_PFHT400_SixJet30_DoubleBTagCSV_p056_) { b_HLT_PFHT400_SixJet30_DoubleBTagCSV_p056_->SetAddress(&HLT_PFHT400_SixJet30_DoubleBTagCSV_p056_); }
    b_HLT_PFHT400_SixPFJet32_ = tree->GetBranch("HLT_PFHT400_SixPFJet32");
    if (b_HLT_PFHT400_SixPFJet32_) { b_HLT_PFHT400_SixPFJet32_->SetAddress(&HLT_PFHT400_SixPFJet32_); }
    b_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_ = tree->GetBranch("HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94");
    if (b_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_) { b_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_->SetAddress(&HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_); }
    b_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_ = tree->GetBranch("HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94");
    if (b_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_) { b_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_->SetAddress(&HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_); }
    b_HLT_PFHT430_ = tree->GetBranch("HLT_PFHT430");
    if (b_HLT_PFHT430_) { b_HLT_PFHT430_->SetAddress(&HLT_PFHT430_); }
    b_HLT_PFHT430_SixJet40_BTagCSV_p080_ = tree->GetBranch("HLT_PFHT430_SixJet40_BTagCSV_p080");
    if (b_HLT_PFHT430_SixJet40_BTagCSV_p080_) { b_HLT_PFHT430_SixJet40_BTagCSV_p080_->SetAddress(&HLT_PFHT430_SixJet40_BTagCSV_p080_); }
    b_HLT_PFHT430_SixPFJet40_ = tree->GetBranch("HLT_PFHT430_SixPFJet40");
    if (b_HLT_PFHT430_SixPFJet40_) { b_HLT_PFHT430_SixPFJet40_->SetAddress(&HLT_PFHT430_SixPFJet40_); }
    b_HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5_ = tree->GetBranch("HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5");
    if (b_HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5_) { b_HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5_->SetAddress(&HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5_); }
    b_HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5_ = tree->GetBranch("HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5");
    if (b_HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5_) { b_HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5_->SetAddress(&HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5_); }
    b_HLT_PFHT450_SixJet40_ = tree->GetBranch("HLT_PFHT450_SixJet40");
    if (b_HLT_PFHT450_SixJet40_) { b_HLT_PFHT450_SixJet40_->SetAddress(&HLT_PFHT450_SixJet40_); }
    b_HLT_PFHT450_SixJet40_BTagCSV_p056_ = tree->GetBranch("HLT_PFHT450_SixJet40_BTagCSV_p056");
    if (b_HLT_PFHT450_SixJet40_BTagCSV_p056_) { b_HLT_PFHT450_SixJet40_BTagCSV_p056_->SetAddress(&HLT_PFHT450_SixJet40_BTagCSV_p056_); }
    b_HLT_PFHT450_SixPFJet36_ = tree->GetBranch("HLT_PFHT450_SixPFJet36");
    if (b_HLT_PFHT450_SixPFJet36_) { b_HLT_PFHT450_SixPFJet36_->SetAddress(&HLT_PFHT450_SixPFJet36_); }
    b_HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_ = tree->GetBranch("HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59");
    if (b_HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_) { b_HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_->SetAddress(&HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_); }
    b_HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_ = tree->GetBranch("HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59");
    if (b_HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_) { b_HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_->SetAddress(&HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_); }
    b_HLT_PFHT475_ = tree->GetBranch("HLT_PFHT475");
    if (b_HLT_PFHT475_) { b_HLT_PFHT475_->SetAddress(&HLT_PFHT475_); }
    b_HLT_PFHT500_PFMET100_PFMHT100_IDTight_ = tree->GetBranch("HLT_PFHT500_PFMET100_PFMHT100_IDTight");
    if (b_HLT_PFHT500_PFMET100_PFMHT100_IDTight_) { b_HLT_PFHT500_PFMET100_PFMHT100_IDTight_->SetAddress(&HLT_PFHT500_PFMET100_PFMHT100_IDTight_); }
    b_HLT_PFHT500_PFMET110_PFMHT110_IDTight_ = tree->GetBranch("HLT_PFHT500_PFMET110_PFMHT110_IDTight");
    if (b_HLT_PFHT500_PFMET110_PFMHT110_IDTight_) { b_HLT_PFHT500_PFMET110_PFMHT110_IDTight_->SetAddress(&HLT_PFHT500_PFMET110_PFMHT110_IDTight_); }
    b_HLT_PFHT510_ = tree->GetBranch("HLT_PFHT510");
    if (b_HLT_PFHT510_) { b_HLT_PFHT510_->SetAddress(&HLT_PFHT510_); }
    b_HLT_PFHT550_4JetPt50_ = tree->GetBranch("HLT_PFHT550_4JetPt50");
    if (b_HLT_PFHT550_4JetPt50_) { b_HLT_PFHT550_4JetPt50_->SetAddress(&HLT_PFHT550_4JetPt50_); }
    b_HLT_PFHT590_ = tree->GetBranch("HLT_PFHT590");
    if (b_HLT_PFHT590_) { b_HLT_PFHT590_->SetAddress(&HLT_PFHT590_); }
    b_HLT_PFHT600_ = tree->GetBranch("HLT_PFHT600");
    if (b_HLT_PFHT600_) { b_HLT_PFHT600_->SetAddress(&HLT_PFHT600_); }
    b_HLT_PFHT650_ = tree->GetBranch("HLT_PFHT650");
    if (b_HLT_PFHT650_) { b_HLT_PFHT650_->SetAddress(&HLT_PFHT650_); }
    b_HLT_PFHT650_4JetPt50_ = tree->GetBranch("HLT_PFHT650_4JetPt50");
    if (b_HLT_PFHT650_4JetPt50_) { b_HLT_PFHT650_4JetPt50_->SetAddress(&HLT_PFHT650_4JetPt50_); }
    b_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_ = tree->GetBranch("HLT_PFHT650_WideJetMJJ900DEtaJJ1p5");
    if (b_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_) { b_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_->SetAddress(&HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_); }
    b_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_ = tree->GetBranch("HLT_PFHT650_WideJetMJJ950DEtaJJ1p5");
    if (b_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_) { b_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_->SetAddress(&HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_); }
    b_HLT_PFHT680_ = tree->GetBranch("HLT_PFHT680");
    if (b_HLT_PFHT680_) { b_HLT_PFHT680_->SetAddress(&HLT_PFHT680_); }
    b_HLT_PFHT700_PFMET85_PFMHT85_IDTight_ = tree->GetBranch("HLT_PFHT700_PFMET85_PFMHT85_IDTight");
    if (b_HLT_PFHT700_PFMET85_PFMHT85_IDTight_) { b_HLT_PFHT700_PFMET85_PFMHT85_IDTight_->SetAddress(&HLT_PFHT700_PFMET85_PFMHT85_IDTight_); }
    b_HLT_PFHT700_PFMET95_PFMHT95_IDTight_ = tree->GetBranch("HLT_PFHT700_PFMET95_PFMHT95_IDTight");
    if (b_HLT_PFHT700_PFMET95_PFMHT95_IDTight_) { b_HLT_PFHT700_PFMET95_PFMHT95_IDTight_->SetAddress(&HLT_PFHT700_PFMET95_PFMHT95_IDTight_); }
    b_HLT_PFHT750_4JetPt50_ = tree->GetBranch("HLT_PFHT750_4JetPt50");
    if (b_HLT_PFHT750_4JetPt50_) { b_HLT_PFHT750_4JetPt50_->SetAddress(&HLT_PFHT750_4JetPt50_); }
    b_HLT_PFHT750_4JetPt70_ = tree->GetBranch("HLT_PFHT750_4JetPt70");
    if (b_HLT_PFHT750_4JetPt70_) { b_HLT_PFHT750_4JetPt70_->SetAddress(&HLT_PFHT750_4JetPt70_); }
    b_HLT_PFHT750_4JetPt80_ = tree->GetBranch("HLT_PFHT750_4JetPt80");
    if (b_HLT_PFHT750_4JetPt80_) { b_HLT_PFHT750_4JetPt80_->SetAddress(&HLT_PFHT750_4JetPt80_); }
    b_HLT_PFHT780_ = tree->GetBranch("HLT_PFHT780");
    if (b_HLT_PFHT780_) { b_HLT_PFHT780_->SetAddress(&HLT_PFHT780_); }
    b_HLT_PFHT800_ = tree->GetBranch("HLT_PFHT800");
    if (b_HLT_PFHT800_) { b_HLT_PFHT800_->SetAddress(&HLT_PFHT800_); }
    b_HLT_PFHT800_4JetPt50_ = tree->GetBranch("HLT_PFHT800_4JetPt50");
    if (b_HLT_PFHT800_4JetPt50_) { b_HLT_PFHT800_4JetPt50_->SetAddress(&HLT_PFHT800_4JetPt50_); }
    b_HLT_PFHT800_PFMET75_PFMHT75_IDTight_ = tree->GetBranch("HLT_PFHT800_PFMET75_PFMHT75_IDTight");
    if (b_HLT_PFHT800_PFMET75_PFMHT75_IDTight_) { b_HLT_PFHT800_PFMET75_PFMHT75_IDTight_->SetAddress(&HLT_PFHT800_PFMET75_PFMHT75_IDTight_); }
    b_HLT_PFHT800_PFMET85_PFMHT85_IDTight_ = tree->GetBranch("HLT_PFHT800_PFMET85_PFMHT85_IDTight");
    if (b_HLT_PFHT800_PFMET85_PFMHT85_IDTight_) { b_HLT_PFHT800_PFMET85_PFMHT85_IDTight_->SetAddress(&HLT_PFHT800_PFMET85_PFMHT85_IDTight_); }
    b_HLT_PFHT850_4JetPt50_ = tree->GetBranch("HLT_PFHT850_4JetPt50");
    if (b_HLT_PFHT850_4JetPt50_) { b_HLT_PFHT850_4JetPt50_->SetAddress(&HLT_PFHT850_4JetPt50_); }
    b_HLT_PFHT890_ = tree->GetBranch("HLT_PFHT890");
    if (b_HLT_PFHT890_) { b_HLT_PFHT890_->SetAddress(&HLT_PFHT890_); }
    b_HLT_PFHT900_ = tree->GetBranch("HLT_PFHT900");
    if (b_HLT_PFHT900_) { b_HLT_PFHT900_->SetAddress(&HLT_PFHT900_); }
    b_HLT_PFJet110_ = tree->GetBranch("HLT_PFJet110");
    if (b_HLT_PFJet110_) { b_HLT_PFJet110_->SetAddress(&HLT_PFJet110_); }
    b_HLT_PFJet140_ = tree->GetBranch("HLT_PFJet140");
    if (b_HLT_PFJet140_) { b_HLT_PFJet140_->SetAddress(&HLT_PFJet140_); }
    b_HLT_PFJet15_ = tree->GetBranch("HLT_PFJet15");
    if (b_HLT_PFJet15_) { b_HLT_PFJet15_->SetAddress(&HLT_PFJet15_); }
    b_HLT_PFJet15_NoCaloMatched_ = tree->GetBranch("HLT_PFJet15_NoCaloMatched");
    if (b_HLT_PFJet15_NoCaloMatched_) { b_HLT_PFJet15_NoCaloMatched_->SetAddress(&HLT_PFJet15_NoCaloMatched_); }
    b_HLT_PFJet200_ = tree->GetBranch("HLT_PFJet200");
    if (b_HLT_PFJet200_) { b_HLT_PFJet200_->SetAddress(&HLT_PFJet200_); }
    b_HLT_PFJet25_ = tree->GetBranch("HLT_PFJet25");
    if (b_HLT_PFJet25_) { b_HLT_PFJet25_->SetAddress(&HLT_PFJet25_); }
    b_HLT_PFJet25_NoCaloMatched_ = tree->GetBranch("HLT_PFJet25_NoCaloMatched");
    if (b_HLT_PFJet25_NoCaloMatched_) { b_HLT_PFJet25_NoCaloMatched_->SetAddress(&HLT_PFJet25_NoCaloMatched_); }
    b_HLT_PFJet260_ = tree->GetBranch("HLT_PFJet260");
    if (b_HLT_PFJet260_) { b_HLT_PFJet260_->SetAddress(&HLT_PFJet260_); }
    b_HLT_PFJet320_ = tree->GetBranch("HLT_PFJet320");
    if (b_HLT_PFJet320_) { b_HLT_PFJet320_->SetAddress(&HLT_PFJet320_); }
    b_HLT_PFJet40_ = tree->GetBranch("HLT_PFJet40");
    if (b_HLT_PFJet40_) { b_HLT_PFJet40_->SetAddress(&HLT_PFJet40_); }
    b_HLT_PFJet400_ = tree->GetBranch("HLT_PFJet400");
    if (b_HLT_PFJet400_) { b_HLT_PFJet400_->SetAddress(&HLT_PFJet400_); }
    b_HLT_PFJet40_GPUvsCPU_ = tree->GetBranch("HLT_PFJet40_GPUvsCPU");
    if (b_HLT_PFJet40_GPUvsCPU_) { b_HLT_PFJet40_GPUvsCPU_->SetAddress(&HLT_PFJet40_GPUvsCPU_); }
    b_HLT_PFJet450_ = tree->GetBranch("HLT_PFJet450");
    if (b_HLT_PFJet450_) { b_HLT_PFJet450_->SetAddress(&HLT_PFJet450_); }
    b_HLT_PFJet500_ = tree->GetBranch("HLT_PFJet500");
    if (b_HLT_PFJet500_) { b_HLT_PFJet500_->SetAddress(&HLT_PFJet500_); }
    b_HLT_PFJet550_ = tree->GetBranch("HLT_PFJet550");
    if (b_HLT_PFJet550_) { b_HLT_PFJet550_->SetAddress(&HLT_PFJet550_); }
    b_HLT_PFJet60_ = tree->GetBranch("HLT_PFJet60");
    if (b_HLT_PFJet60_) { b_HLT_PFJet60_->SetAddress(&HLT_PFJet60_); }
    b_HLT_PFJet80_ = tree->GetBranch("HLT_PFJet80");
    if (b_HLT_PFJet80_) { b_HLT_PFJet80_->SetAddress(&HLT_PFJet80_); }
    b_HLT_PFJetFwd140_ = tree->GetBranch("HLT_PFJetFwd140");
    if (b_HLT_PFJetFwd140_) { b_HLT_PFJetFwd140_->SetAddress(&HLT_PFJetFwd140_); }
    b_HLT_PFJetFwd15_ = tree->GetBranch("HLT_PFJetFwd15");
    if (b_HLT_PFJetFwd15_) { b_HLT_PFJetFwd15_->SetAddress(&HLT_PFJetFwd15_); }
    b_HLT_PFJetFwd200_ = tree->GetBranch("HLT_PFJetFwd200");
    if (b_HLT_PFJetFwd200_) { b_HLT_PFJetFwd200_->SetAddress(&HLT_PFJetFwd200_); }
    b_HLT_PFJetFwd25_ = tree->GetBranch("HLT_PFJetFwd25");
    if (b_HLT_PFJetFwd25_) { b_HLT_PFJetFwd25_->SetAddress(&HLT_PFJetFwd25_); }
    b_HLT_PFJetFwd260_ = tree->GetBranch("HLT_PFJetFwd260");
    if (b_HLT_PFJetFwd260_) { b_HLT_PFJetFwd260_->SetAddress(&HLT_PFJetFwd260_); }
    b_HLT_PFJetFwd320_ = tree->GetBranch("HLT_PFJetFwd320");
    if (b_HLT_PFJetFwd320_) { b_HLT_PFJetFwd320_->SetAddress(&HLT_PFJetFwd320_); }
    b_HLT_PFJetFwd40_ = tree->GetBranch("HLT_PFJetFwd40");
    if (b_HLT_PFJetFwd40_) { b_HLT_PFJetFwd40_->SetAddress(&HLT_PFJetFwd40_); }
    b_HLT_PFJetFwd400_ = tree->GetBranch("HLT_PFJetFwd400");
    if (b_HLT_PFJetFwd400_) { b_HLT_PFJetFwd400_->SetAddress(&HLT_PFJetFwd400_); }
    b_HLT_PFJetFwd450_ = tree->GetBranch("HLT_PFJetFwd450");
    if (b_HLT_PFJetFwd450_) { b_HLT_PFJetFwd450_->SetAddress(&HLT_PFJetFwd450_); }
    b_HLT_PFJetFwd500_ = tree->GetBranch("HLT_PFJetFwd500");
    if (b_HLT_PFJetFwd500_) { b_HLT_PFJetFwd500_->SetAddress(&HLT_PFJetFwd500_); }
    b_HLT_PFJetFwd60_ = tree->GetBranch("HLT_PFJetFwd60");
    if (b_HLT_PFJetFwd60_) { b_HLT_PFJetFwd60_->SetAddress(&HLT_PFJetFwd60_); }
    b_HLT_PFJetFwd80_ = tree->GetBranch("HLT_PFJetFwd80");
    if (b_HLT_PFJetFwd80_) { b_HLT_PFJetFwd80_->SetAddress(&HLT_PFJetFwd80_); }
    b_HLT_PFMET100_PFMHT100_IDTight_ = tree->GetBranch("HLT_PFMET100_PFMHT100_IDTight");
    if (b_HLT_PFMET100_PFMHT100_IDTight_) { b_HLT_PFMET100_PFMHT100_IDTight_->SetAddress(&HLT_PFMET100_PFMHT100_IDTight_); }
    b_HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned_ = tree->GetBranch("HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned");
    if (b_HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned_) { b_HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned_->SetAddress(&HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned_); }
    b_HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1_ = tree->GetBranch("HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1");
    if (b_HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1_) { b_HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1_->SetAddress(&HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1_); }
    b_HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_ = tree->GetBranch("HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1");
    if (b_HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_) { b_HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_->SetAddress(&HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_); }
    b_HLT_PFMET100_PFMHT100_IDTight_PFHT60_ = tree->GetBranch("HLT_PFMET100_PFMHT100_IDTight_PFHT60");
    if (b_HLT_PFMET100_PFMHT100_IDTight_PFHT60_) { b_HLT_PFMET100_PFMHT100_IDTight_PFHT60_->SetAddress(&HLT_PFMET100_PFMHT100_IDTight_PFHT60_); }
    b_HLT_PFMET105_IsoTrk50_ = tree->GetBranch("HLT_PFMET105_IsoTrk50");
    if (b_HLT_PFMET105_IsoTrk50_) { b_HLT_PFMET105_IsoTrk50_->SetAddress(&HLT_PFMET105_IsoTrk50_); }
    b_HLT_PFMET110_PFJet100_ = tree->GetBranch("HLT_PFMET110_PFJet100");
    if (b_HLT_PFMET110_PFJet100_) { b_HLT_PFMET110_PFJet100_->SetAddress(&HLT_PFMET110_PFJet100_); }
    b_HLT_PFMET110_PFMHT110_IDTight_ = tree->GetBranch("HLT_PFMET110_PFMHT110_IDTight");
    if (b_HLT_PFMET110_PFMHT110_IDTight_) { b_HLT_PFMET110_PFMHT110_IDTight_->SetAddress(&HLT_PFMET110_PFMHT110_IDTight_); }
    b_HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1_ = tree->GetBranch("HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1");
    if (b_HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1_) { b_HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1_->SetAddress(&HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1_); }
    b_HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_ = tree->GetBranch("HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1");
    if (b_HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_) { b_HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_->SetAddress(&HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_); }
    b_HLT_PFMET120_BTagCSV_p067_ = tree->GetBranch("HLT_PFMET120_BTagCSV_p067");
    if (b_HLT_PFMET120_BTagCSV_p067_) { b_HLT_PFMET120_BTagCSV_p067_->SetAddress(&HLT_PFMET120_BTagCSV_p067_); }
    b_HLT_PFMET120_Mu5_ = tree->GetBranch("HLT_PFMET120_Mu5");
    if (b_HLT_PFMET120_Mu5_) { b_HLT_PFMET120_Mu5_->SetAddress(&HLT_PFMET120_Mu5_); }
    b_HLT_PFMET120_PFMHT120_IDTight_ = tree->GetBranch("HLT_PFMET120_PFMHT120_IDTight");
    if (b_HLT_PFMET120_PFMHT120_IDTight_) { b_HLT_PFMET120_PFMHT120_IDTight_->SetAddress(&HLT_PFMET120_PFMHT120_IDTight_); }
    b_HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1_ = tree->GetBranch("HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1");
    if (b_HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1_) { b_HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1_->SetAddress(&HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1_); }
    b_HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_ = tree->GetBranch("HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1");
    if (b_HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_) { b_HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_->SetAddress(&HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_); }
    b_HLT_PFMET120_PFMHT120_IDTight_HFCleaned_ = tree->GetBranch("HLT_PFMET120_PFMHT120_IDTight_HFCleaned");
    if (b_HLT_PFMET120_PFMHT120_IDTight_HFCleaned_) { b_HLT_PFMET120_PFMHT120_IDTight_HFCleaned_->SetAddress(&HLT_PFMET120_PFMHT120_IDTight_HFCleaned_); }
    b_HLT_PFMET120_PFMHT120_IDTight_PFHT60_ = tree->GetBranch("HLT_PFMET120_PFMHT120_IDTight_PFHT60");
    if (b_HLT_PFMET120_PFMHT120_IDTight_PFHT60_) { b_HLT_PFMET120_PFMHT120_IDTight_PFHT60_->SetAddress(&HLT_PFMET120_PFMHT120_IDTight_PFHT60_); }
    b_HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned_ = tree->GetBranch("HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned");
    if (b_HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned_) { b_HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned_->SetAddress(&HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned_); }
    b_HLT_PFMET130_PFMHT130_IDTight_ = tree->GetBranch("HLT_PFMET130_PFMHT130_IDTight");
    if (b_HLT_PFMET130_PFMHT130_IDTight_) { b_HLT_PFMET130_PFMHT130_IDTight_->SetAddress(&HLT_PFMET130_PFMHT130_IDTight_); }
    b_HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1_ = tree->GetBranch("HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1");
    if (b_HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1_) { b_HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1_->SetAddress(&HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1_); }
    b_HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_ = tree->GetBranch("HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1");
    if (b_HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_) { b_HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_->SetAddress(&HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_); }
    b_HLT_PFMET140_PFMHT140_IDTight_ = tree->GetBranch("HLT_PFMET140_PFMHT140_IDTight");
    if (b_HLT_PFMET140_PFMHT140_IDTight_) { b_HLT_PFMET140_PFMHT140_IDTight_->SetAddress(&HLT_PFMET140_PFMHT140_IDTight_); }
    b_HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1_ = tree->GetBranch("HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1");
    if (b_HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1_) { b_HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1_->SetAddress(&HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1_); }
    b_HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_ = tree->GetBranch("HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1");
    if (b_HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_) { b_HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_->SetAddress(&HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_); }
    b_HLT_PFMET170_BeamHaloCleaned_ = tree->GetBranch("HLT_PFMET170_BeamHaloCleaned");
    if (b_HLT_PFMET170_BeamHaloCleaned_) { b_HLT_PFMET170_BeamHaloCleaned_->SetAddress(&HLT_PFMET170_BeamHaloCleaned_); }
    b_HLT_PFMET170_HBHECleaned_ = tree->GetBranch("HLT_PFMET170_HBHECleaned");
    if (b_HLT_PFMET170_HBHECleaned_) { b_HLT_PFMET170_HBHECleaned_->SetAddress(&HLT_PFMET170_HBHECleaned_); }
    b_HLT_PFMET170_HBHE_BeamHaloCleaned_ = tree->GetBranch("HLT_PFMET170_HBHE_BeamHaloCleaned");
    if (b_HLT_PFMET170_HBHE_BeamHaloCleaned_) { b_HLT_PFMET170_HBHE_BeamHaloCleaned_->SetAddress(&HLT_PFMET170_HBHE_BeamHaloCleaned_); }
    b_HLT_PFMET170_JetIdCleaned_ = tree->GetBranch("HLT_PFMET170_JetIdCleaned");
    if (b_HLT_PFMET170_JetIdCleaned_) { b_HLT_PFMET170_JetIdCleaned_->SetAddress(&HLT_PFMET170_JetIdCleaned_); }
    b_HLT_PFMET170_NoiseCleaned_ = tree->GetBranch("HLT_PFMET170_NoiseCleaned");
    if (b_HLT_PFMET170_NoiseCleaned_) { b_HLT_PFMET170_NoiseCleaned_->SetAddress(&HLT_PFMET170_NoiseCleaned_); }
    b_HLT_PFMET170_NotCleaned_ = tree->GetBranch("HLT_PFMET170_NotCleaned");
    if (b_HLT_PFMET170_NotCleaned_) { b_HLT_PFMET170_NotCleaned_->SetAddress(&HLT_PFMET170_NotCleaned_); }
    b_HLT_PFMET200_BeamHaloCleaned_ = tree->GetBranch("HLT_PFMET200_BeamHaloCleaned");
    if (b_HLT_PFMET200_BeamHaloCleaned_) { b_HLT_PFMET200_BeamHaloCleaned_->SetAddress(&HLT_PFMET200_BeamHaloCleaned_); }
    b_HLT_PFMET200_HBHECleaned_ = tree->GetBranch("HLT_PFMET200_HBHECleaned");
    if (b_HLT_PFMET200_HBHECleaned_) { b_HLT_PFMET200_HBHECleaned_->SetAddress(&HLT_PFMET200_HBHECleaned_); }
    b_HLT_PFMET200_HBHE_BeamHaloCleaned_ = tree->GetBranch("HLT_PFMET200_HBHE_BeamHaloCleaned");
    if (b_HLT_PFMET200_HBHE_BeamHaloCleaned_) { b_HLT_PFMET200_HBHE_BeamHaloCleaned_->SetAddress(&HLT_PFMET200_HBHE_BeamHaloCleaned_); }
    b_HLT_PFMET200_NotCleaned_ = tree->GetBranch("HLT_PFMET200_NotCleaned");
    if (b_HLT_PFMET200_NotCleaned_) { b_HLT_PFMET200_NotCleaned_->SetAddress(&HLT_PFMET200_NotCleaned_); }
    b_HLT_PFMET250_HBHECleaned_ = tree->GetBranch("HLT_PFMET250_HBHECleaned");
    if (b_HLT_PFMET250_HBHECleaned_) { b_HLT_PFMET250_HBHECleaned_->SetAddress(&HLT_PFMET250_HBHECleaned_); }
    b_HLT_PFMET250_NotCleaned_ = tree->GetBranch("HLT_PFMET250_NotCleaned");
    if (b_HLT_PFMET250_NotCleaned_) { b_HLT_PFMET250_NotCleaned_->SetAddress(&HLT_PFMET250_NotCleaned_); }
    b_HLT_PFMET300_ = tree->GetBranch("HLT_PFMET300");
    if (b_HLT_PFMET300_) { b_HLT_PFMET300_->SetAddress(&HLT_PFMET300_); }
    b_HLT_PFMET300_HBHECleaned_ = tree->GetBranch("HLT_PFMET300_HBHECleaned");
    if (b_HLT_PFMET300_HBHECleaned_) { b_HLT_PFMET300_HBHECleaned_->SetAddress(&HLT_PFMET300_HBHECleaned_); }
    b_HLT_PFMET300_NotCleaned_ = tree->GetBranch("HLT_PFMET300_NotCleaned");
    if (b_HLT_PFMET300_NotCleaned_) { b_HLT_PFMET300_NotCleaned_->SetAddress(&HLT_PFMET300_NotCleaned_); }
    b_HLT_PFMET400_ = tree->GetBranch("HLT_PFMET400");
    if (b_HLT_PFMET400_) { b_HLT_PFMET400_->SetAddress(&HLT_PFMET400_); }
    b_HLT_PFMET500_ = tree->GetBranch("HLT_PFMET500");
    if (b_HLT_PFMET500_) { b_HLT_PFMET500_->SetAddress(&HLT_PFMET500_); }
    b_HLT_PFMET600_ = tree->GetBranch("HLT_PFMET600");
    if (b_HLT_PFMET600_) { b_HLT_PFMET600_->SetAddress(&HLT_PFMET600_); }
    b_HLT_PFMET90_PFMHT90_IDTight_ = tree->GetBranch("HLT_PFMET90_PFMHT90_IDTight");
    if (b_HLT_PFMET90_PFMHT90_IDTight_) { b_HLT_PFMET90_PFMHT90_IDTight_->SetAddress(&HLT_PFMET90_PFMHT90_IDTight_); }
    b_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_ = tree->GetBranch("HLT_PFMETNoMu100_PFMHTNoMu100_IDTight");
    if (b_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_) { b_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_->SetAddress(&HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_); }
    b_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_ = tree->GetBranch("HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60");
    if (b_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_) { b_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_->SetAddress(&HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_); }
    b_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_ = tree->GetBranch("HLT_PFMETNoMu110_PFMHTNoMu110_IDTight");
    if (b_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_) { b_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_->SetAddress(&HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_); }
    b_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_ = tree->GetBranch("HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF");
    if (b_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_) { b_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_->SetAddress(&HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_); }
    b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_ = tree->GetBranch("HLT_PFMETNoMu120_PFMHTNoMu120_IDTight");
    if (b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_) { b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_->SetAddress(&HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_); }
    b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_ = tree->GetBranch("HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF");
    if (b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_) { b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_->SetAddress(&HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_); }
    b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned_ = tree->GetBranch("HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned");
    if (b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned_) { b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned_->SetAddress(&HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned_); }
    b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_ = tree->GetBranch("HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60");
    if (b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_) { b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_->SetAddress(&HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_); }
    b_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_ = tree->GetBranch("HLT_PFMETNoMu130_PFMHTNoMu130_IDTight");
    if (b_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_) { b_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_->SetAddress(&HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_); }
    b_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_ = tree->GetBranch("HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF");
    if (b_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_) { b_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_->SetAddress(&HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_); }
    b_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_ = tree->GetBranch("HLT_PFMETNoMu140_PFMHTNoMu140_IDTight");
    if (b_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_) { b_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_->SetAddress(&HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_); }
    b_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_ = tree->GetBranch("HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF");
    if (b_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_) { b_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_->SetAddress(&HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_); }
    b_HLT_PFMETNoMu90_PFMHTNoMu90_IDTight_ = tree->GetBranch("HLT_PFMETNoMu90_PFMHTNoMu90_IDTight");
    if (b_HLT_PFMETNoMu90_PFMHTNoMu90_IDTight_) { b_HLT_PFMETNoMu90_PFMHTNoMu90_IDTight_->SetAddress(&HLT_PFMETNoMu90_PFMHTNoMu90_IDTight_); }
    b_HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_ = tree->GetBranch("HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60");
    if (b_HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_) { b_HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_->SetAddress(&HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_); }
    b_HLT_PFMETTypeOne110_PFMHT110_IDTight_ = tree->GetBranch("HLT_PFMETTypeOne110_PFMHT110_IDTight");
    if (b_HLT_PFMETTypeOne110_PFMHT110_IDTight_) { b_HLT_PFMETTypeOne110_PFMHT110_IDTight_->SetAddress(&HLT_PFMETTypeOne110_PFMHT110_IDTight_); }
    b_HLT_PFMETTypeOne120_PFMHT120_IDTight_ = tree->GetBranch("HLT_PFMETTypeOne120_PFMHT120_IDTight");
    if (b_HLT_PFMETTypeOne120_PFMHT120_IDTight_) { b_HLT_PFMETTypeOne120_PFMHT120_IDTight_->SetAddress(&HLT_PFMETTypeOne120_PFMHT120_IDTight_); }
    b_HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned_ = tree->GetBranch("HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned");
    if (b_HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned_) { b_HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned_->SetAddress(&HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned_); }
    b_HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_ = tree->GetBranch("HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60");
    if (b_HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_) { b_HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_->SetAddress(&HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_); }
    b_HLT_PFMETTypeOne130_PFMHT130_IDTight_ = tree->GetBranch("HLT_PFMETTypeOne130_PFMHT130_IDTight");
    if (b_HLT_PFMETTypeOne130_PFMHT130_IDTight_) { b_HLT_PFMETTypeOne130_PFMHT130_IDTight_->SetAddress(&HLT_PFMETTypeOne130_PFMHT130_IDTight_); }
    b_HLT_PFMETTypeOne140_PFMHT140_IDTight_ = tree->GetBranch("HLT_PFMETTypeOne140_PFMHT140_IDTight");
    if (b_HLT_PFMETTypeOne140_PFMHT140_IDTight_) { b_HLT_PFMETTypeOne140_PFMHT140_IDTight_->SetAddress(&HLT_PFMETTypeOne140_PFMHT140_IDTight_); }
    b_HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned_ = tree->GetBranch("HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned");
    if (b_HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned_) { b_HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned_->SetAddress(&HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned_); }
    b_HLT_PFMETTypeOne200_BeamHaloCleaned_ = tree->GetBranch("HLT_PFMETTypeOne200_BeamHaloCleaned");
    if (b_HLT_PFMETTypeOne200_BeamHaloCleaned_) { b_HLT_PFMETTypeOne200_BeamHaloCleaned_->SetAddress(&HLT_PFMETTypeOne200_BeamHaloCleaned_); }
    b_HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_ = tree->GetBranch("HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned");
    if (b_HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_) { b_HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_->SetAddress(&HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_); }
    b_HLT_PFTau120_eta2p1_ = tree->GetBranch("HLT_PFTau120_eta2p1");
    if (b_HLT_PFTau120_eta2p1_) { b_HLT_PFTau120_eta2p1_->SetAddress(&HLT_PFTau120_eta2p1_); }
    b_HLT_PFTau140_eta2p1_ = tree->GetBranch("HLT_PFTau140_eta2p1");
    if (b_HLT_PFTau140_eta2p1_) { b_HLT_PFTau140_eta2p1_->SetAddress(&HLT_PFTau140_eta2p1_); }
    b_HLT_PPSMaxTracksPerArm1_ = tree->GetBranch("HLT_PPSMaxTracksPerArm1");
    if (b_HLT_PPSMaxTracksPerArm1_) { b_HLT_PPSMaxTracksPerArm1_->SetAddress(&HLT_PPSMaxTracksPerArm1_); }
    b_HLT_PPSMaxTracksPerRP4_ = tree->GetBranch("HLT_PPSMaxTracksPerRP4");
    if (b_HLT_PPSMaxTracksPerRP4_) { b_HLT_PPSMaxTracksPerRP4_->SetAddress(&HLT_PPSMaxTracksPerRP4_); }
    b_HLT_Photon100EBHE10_ = tree->GetBranch("HLT_Photon100EBHE10");
    if (b_HLT_Photon100EBHE10_) { b_HLT_Photon100EBHE10_->SetAddress(&HLT_Photon100EBHE10_); }
    b_HLT_Photon100EB_TightID_TightIso_ = tree->GetBranch("HLT_Photon100EB_TightID_TightIso");
    if (b_HLT_Photon100EB_TightID_TightIso_) { b_HLT_Photon100EB_TightID_TightIso_->SetAddress(&HLT_Photon100EB_TightID_TightIso_); }
    b_HLT_Photon100EEHE10_ = tree->GetBranch("HLT_Photon100EEHE10");
    if (b_HLT_Photon100EEHE10_) { b_HLT_Photon100EEHE10_->SetAddress(&HLT_Photon100EEHE10_); }
    b_HLT_Photon100EE_TightID_TightIso_ = tree->GetBranch("HLT_Photon100EE_TightID_TightIso");
    if (b_HLT_Photon100EE_TightID_TightIso_) { b_HLT_Photon100EE_TightID_TightIso_->SetAddress(&HLT_Photon100EE_TightID_TightIso_); }
    b_HLT_Photon110EB_TightID_TightIso_ = tree->GetBranch("HLT_Photon110EB_TightID_TightIso");
    if (b_HLT_Photon110EB_TightID_TightIso_) { b_HLT_Photon110EB_TightID_TightIso_->SetAddress(&HLT_Photon110EB_TightID_TightIso_); }
    b_HLT_Photon120_ = tree->GetBranch("HLT_Photon120");
    if (b_HLT_Photon120_) { b_HLT_Photon120_->SetAddress(&HLT_Photon120_); }
    b_HLT_Photon120EB_TightID_TightIso_ = tree->GetBranch("HLT_Photon120EB_TightID_TightIso");
    if (b_HLT_Photon120EB_TightID_TightIso_) { b_HLT_Photon120EB_TightID_TightIso_->SetAddress(&HLT_Photon120EB_TightID_TightIso_); }
    b_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = tree->GetBranch("HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40");
    if (b_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40_) { b_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40_->SetAddress(&HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40_); }
    b_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF_ = tree->GetBranch("HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF");
    if (b_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF_) { b_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF_->SetAddress(&HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF_); }
    b_HLT_Photon120_R9Id90_HE10_IsoM_ = tree->GetBranch("HLT_Photon120_R9Id90_HE10_IsoM");
    if (b_HLT_Photon120_R9Id90_HE10_IsoM_) { b_HLT_Photon120_R9Id90_HE10_IsoM_->SetAddress(&HLT_Photon120_R9Id90_HE10_IsoM_); }
    b_HLT_Photon125_ = tree->GetBranch("HLT_Photon125");
    if (b_HLT_Photon125_) { b_HLT_Photon125_->SetAddress(&HLT_Photon125_); }
    b_HLT_Photon135_PFMET100_ = tree->GetBranch("HLT_Photon135_PFMET100");
    if (b_HLT_Photon135_PFMET100_) { b_HLT_Photon135_PFMET100_->SetAddress(&HLT_Photon135_PFMET100_); }
    b_HLT_Photon150_ = tree->GetBranch("HLT_Photon150");
    if (b_HLT_Photon150_) { b_HLT_Photon150_->SetAddress(&HLT_Photon150_); }
    b_HLT_Photon165_HE10_ = tree->GetBranch("HLT_Photon165_HE10");
    if (b_HLT_Photon165_HE10_) { b_HLT_Photon165_HE10_->SetAddress(&HLT_Photon165_HE10_); }
    b_HLT_Photon165_R9Id90_HE10_IsoM_ = tree->GetBranch("HLT_Photon165_R9Id90_HE10_IsoM");
    if (b_HLT_Photon165_R9Id90_HE10_IsoM_) { b_HLT_Photon165_R9Id90_HE10_IsoM_->SetAddress(&HLT_Photon165_R9Id90_HE10_IsoM_); }
    b_HLT_Photon175_ = tree->GetBranch("HLT_Photon175");
    if (b_HLT_Photon175_) { b_HLT_Photon175_->SetAddress(&HLT_Photon175_); }
    b_HLT_Photon20_ = tree->GetBranch("HLT_Photon20");
    if (b_HLT_Photon20_) { b_HLT_Photon20_->SetAddress(&HLT_Photon20_); }
    b_HLT_Photon200_ = tree->GetBranch("HLT_Photon200");
    if (b_HLT_Photon200_) { b_HLT_Photon200_->SetAddress(&HLT_Photon200_); }
    b_HLT_Photon20_CaloIdVL_IsoL_ = tree->GetBranch("HLT_Photon20_CaloIdVL_IsoL");
    if (b_HLT_Photon20_CaloIdVL_IsoL_) { b_HLT_Photon20_CaloIdVL_IsoL_->SetAddress(&HLT_Photon20_CaloIdVL_IsoL_); }
    b_HLT_Photon20_HoverELoose_ = tree->GetBranch("HLT_Photon20_HoverELoose");
    if (b_HLT_Photon20_HoverELoose_) { b_HLT_Photon20_HoverELoose_->SetAddress(&HLT_Photon20_HoverELoose_); }
    b_HLT_Photon22_ = tree->GetBranch("HLT_Photon22");
    if (b_HLT_Photon22_) { b_HLT_Photon22_->SetAddress(&HLT_Photon22_); }
    b_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = tree->GetBranch("HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40");
    if (b_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40_) { b_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40_->SetAddress(&HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40_); }
    b_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF_ = tree->GetBranch("HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF");
    if (b_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF_) { b_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF_->SetAddress(&HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF_); }
    b_HLT_Photon22_R9Id90_HE10_IsoM_ = tree->GetBranch("HLT_Photon22_R9Id90_HE10_IsoM");
    if (b_HLT_Photon22_R9Id90_HE10_IsoM_) { b_HLT_Photon22_R9Id90_HE10_IsoM_->SetAddress(&HLT_Photon22_R9Id90_HE10_IsoM_); }
    b_HLT_Photon25_ = tree->GetBranch("HLT_Photon25");
    if (b_HLT_Photon25_) { b_HLT_Photon25_->SetAddress(&HLT_Photon25_); }
    b_HLT_Photon250_NoHE_ = tree->GetBranch("HLT_Photon250_NoHE");
    if (b_HLT_Photon250_NoHE_) { b_HLT_Photon250_NoHE_->SetAddress(&HLT_Photon250_NoHE_); }
    b_HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60_ = tree->GetBranch("HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60");
    if (b_HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60_) { b_HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60_->SetAddress(&HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60_); }
    b_HLT_Photon30_ = tree->GetBranch("HLT_Photon30");
    if (b_HLT_Photon30_) { b_HLT_Photon30_->SetAddress(&HLT_Photon30_); }
    b_HLT_Photon300_NoHE_ = tree->GetBranch("HLT_Photon300_NoHE");
    if (b_HLT_Photon300_NoHE_) { b_HLT_Photon300_NoHE_->SetAddress(&HLT_Photon300_NoHE_); }
    b_HLT_Photon30EB_TightID_TightIso_ = tree->GetBranch("HLT_Photon30EB_TightID_TightIso");
    if (b_HLT_Photon30EB_TightID_TightIso_) { b_HLT_Photon30EB_TightID_TightIso_->SetAddress(&HLT_Photon30EB_TightID_TightIso_); }
    b_HLT_Photon30_HoverELoose_ = tree->GetBranch("HLT_Photon30_HoverELoose");
    if (b_HLT_Photon30_HoverELoose_) { b_HLT_Photon30_HoverELoose_->SetAddress(&HLT_Photon30_HoverELoose_); }
    b_HLT_Photon30_R9Id90_HE10_IsoM_ = tree->GetBranch("HLT_Photon30_R9Id90_HE10_IsoM");
    if (b_HLT_Photon30_R9Id90_HE10_IsoM_) { b_HLT_Photon30_R9Id90_HE10_IsoM_->SetAddress(&HLT_Photon30_R9Id90_HE10_IsoM_); }
    b_HLT_Photon33_ = tree->GetBranch("HLT_Photon33");
    if (b_HLT_Photon33_) { b_HLT_Photon33_->SetAddress(&HLT_Photon33_); }
    b_HLT_Photon35_TwoProngs35_ = tree->GetBranch("HLT_Photon35_TwoProngs35");
    if (b_HLT_Photon35_TwoProngs35_) { b_HLT_Photon35_TwoProngs35_->SetAddress(&HLT_Photon35_TwoProngs35_); }
    b_HLT_Photon36_ = tree->GetBranch("HLT_Photon36");
    if (b_HLT_Photon36_) { b_HLT_Photon36_->SetAddress(&HLT_Photon36_); }
    b_HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15_ = tree->GetBranch("HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15");
    if (b_HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15_) { b_HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15_->SetAddress(&HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15_); }
    b_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = tree->GetBranch("HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40");
    if (b_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40_) { b_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40_->SetAddress(&HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40_); }
    b_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF_ = tree->GetBranch("HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF");
    if (b_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF_) { b_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF_->SetAddress(&HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF_); }
    b_HLT_Photon36_R9Id90_HE10_IsoM_ = tree->GetBranch("HLT_Photon36_R9Id90_HE10_IsoM");
    if (b_HLT_Photon36_R9Id90_HE10_IsoM_) { b_HLT_Photon36_R9Id90_HE10_IsoM_->SetAddress(&HLT_Photon36_R9Id90_HE10_IsoM_); }
    b_HLT_Photon40_HoverELoose_ = tree->GetBranch("HLT_Photon40_HoverELoose");
    if (b_HLT_Photon40_HoverELoose_) { b_HLT_Photon40_HoverELoose_->SetAddress(&HLT_Photon40_HoverELoose_); }
    b_HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15_ = tree->GetBranch("HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15");
    if (b_HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15_) { b_HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15_->SetAddress(&HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15_); }
    b_HLT_Photon50_ = tree->GetBranch("HLT_Photon50");
    if (b_HLT_Photon50_) { b_HLT_Photon50_->SetAddress(&HLT_Photon50_); }
    b_HLT_Photon500_ = tree->GetBranch("HLT_Photon500");
    if (b_HLT_Photon500_) { b_HLT_Photon500_->SetAddress(&HLT_Photon500_); }
    b_HLT_Photon50_HoverELoose_ = tree->GetBranch("HLT_Photon50_HoverELoose");
    if (b_HLT_Photon50_HoverELoose_) { b_HLT_Photon50_HoverELoose_->SetAddress(&HLT_Photon50_HoverELoose_); }
    b_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = tree->GetBranch("HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40");
    if (b_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40_) { b_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40_->SetAddress(&HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40_); }
    b_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF_ = tree->GetBranch("HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF");
    if (b_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF_) { b_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF_->SetAddress(&HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF_); }
    b_HLT_Photon50_R9Id90_HE10_IsoM_ = tree->GetBranch("HLT_Photon50_R9Id90_HE10_IsoM");
    if (b_HLT_Photon50_R9Id90_HE10_IsoM_) { b_HLT_Photon50_R9Id90_HE10_IsoM_->SetAddress(&HLT_Photon50_R9Id90_HE10_IsoM_); }
    b_HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_ = tree->GetBranch("HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50");
    if (b_HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_) { b_HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_->SetAddress(&HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_); }
    b_HLT_Photon600_ = tree->GetBranch("HLT_Photon600");
    if (b_HLT_Photon600_) { b_HLT_Photon600_->SetAddress(&HLT_Photon600_); }
    b_HLT_Photon60_HoverELoose_ = tree->GetBranch("HLT_Photon60_HoverELoose");
    if (b_HLT_Photon60_HoverELoose_) { b_HLT_Photon60_HoverELoose_->SetAddress(&HLT_Photon60_HoverELoose_); }
    b_HLT_Photon60_R9Id90_CaloIdL_IsoL_ = tree->GetBranch("HLT_Photon60_R9Id90_CaloIdL_IsoL");
    if (b_HLT_Photon60_R9Id90_CaloIdL_IsoL_) { b_HLT_Photon60_R9Id90_CaloIdL_IsoL_->SetAddress(&HLT_Photon60_R9Id90_CaloIdL_IsoL_); }
    b_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_ = tree->GetBranch("HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL");
    if (b_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_) { b_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_->SetAddress(&HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_); }
    b_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_ = tree->GetBranch("HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15");
    if (b_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_) { b_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_->SetAddress(&HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_); }
    b_HLT_Photon75_ = tree->GetBranch("HLT_Photon75");
    if (b_HLT_Photon75_) { b_HLT_Photon75_->SetAddress(&HLT_Photon75_); }
    b_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = tree->GetBranch("HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40");
    if (b_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40_) { b_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40_->SetAddress(&HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40_); }
    b_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF_ = tree->GetBranch("HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF");
    if (b_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF_) { b_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF_->SetAddress(&HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF_); }
    b_HLT_Photon75_R9Id90_HE10_IsoM_ = tree->GetBranch("HLT_Photon75_R9Id90_HE10_IsoM");
    if (b_HLT_Photon75_R9Id90_HE10_IsoM_) { b_HLT_Photon75_R9Id90_HE10_IsoM_->SetAddress(&HLT_Photon75_R9Id90_HE10_IsoM_); }
    b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_ = tree->GetBranch("HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3");
    if (b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_) { b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_->SetAddress(&HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_); }
    b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_ = tree->GetBranch("HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3");
    if (b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_) { b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_->SetAddress(&HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_); }
    b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_ = tree->GetBranch("HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3");
    if (b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_) { b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_->SetAddress(&HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_); }
    b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_ = tree->GetBranch("HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3");
    if (b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_) { b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_->SetAddress(&HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_); }
    b_HLT_Photon90_ = tree->GetBranch("HLT_Photon90");
    if (b_HLT_Photon90_) { b_HLT_Photon90_->SetAddress(&HLT_Photon90_); }
    b_HLT_Photon90_CaloIdL_HT300_ = tree->GetBranch("HLT_Photon90_CaloIdL_HT300");
    if (b_HLT_Photon90_CaloIdL_HT300_) { b_HLT_Photon90_CaloIdL_HT300_->SetAddress(&HLT_Photon90_CaloIdL_HT300_); }
    b_HLT_Photon90_CaloIdL_PFHT500_ = tree->GetBranch("HLT_Photon90_CaloIdL_PFHT500");
    if (b_HLT_Photon90_CaloIdL_PFHT500_) { b_HLT_Photon90_CaloIdL_PFHT500_->SetAddress(&HLT_Photon90_CaloIdL_PFHT500_); }
    b_HLT_Photon90_CaloIdL_PFHT600_ = tree->GetBranch("HLT_Photon90_CaloIdL_PFHT600");
    if (b_HLT_Photon90_CaloIdL_PFHT600_) { b_HLT_Photon90_CaloIdL_PFHT600_->SetAddress(&HLT_Photon90_CaloIdL_PFHT600_); }
    b_HLT_Photon90_CaloIdL_PFHT700_ = tree->GetBranch("HLT_Photon90_CaloIdL_PFHT700");
    if (b_HLT_Photon90_CaloIdL_PFHT700_) { b_HLT_Photon90_CaloIdL_PFHT700_->SetAddress(&HLT_Photon90_CaloIdL_PFHT700_); }
    b_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = tree->GetBranch("HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40");
    if (b_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40_) { b_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40_->SetAddress(&HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40_); }
    b_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF_ = tree->GetBranch("HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF");
    if (b_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF_) { b_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF_->SetAddress(&HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF_); }
    b_HLT_Photon90_R9Id90_HE10_IsoM_ = tree->GetBranch("HLT_Photon90_R9Id90_HE10_IsoM");
    if (b_HLT_Photon90_R9Id90_HE10_IsoM_) { b_HLT_Photon90_R9Id90_HE10_IsoM_->SetAddress(&HLT_Photon90_R9Id90_HE10_IsoM_); }
    b_HLT_Physics_ = tree->GetBranch("HLT_Physics");
    if (b_HLT_Physics_) { b_HLT_Physics_->SetAddress(&HLT_Physics_); }
    b_HLT_Physics_part0_ = tree->GetBranch("HLT_Physics_part0");
    if (b_HLT_Physics_part0_) { b_HLT_Physics_part0_->SetAddress(&HLT_Physics_part0_); }
    b_HLT_Physics_part1_ = tree->GetBranch("HLT_Physics_part1");
    if (b_HLT_Physics_part1_) { b_HLT_Physics_part1_->SetAddress(&HLT_Physics_part1_); }
    b_HLT_Physics_part2_ = tree->GetBranch("HLT_Physics_part2");
    if (b_HLT_Physics_part2_) { b_HLT_Physics_part2_->SetAddress(&HLT_Physics_part2_); }
    b_HLT_Physics_part3_ = tree->GetBranch("HLT_Physics_part3");
    if (b_HLT_Physics_part3_) { b_HLT_Physics_part3_->SetAddress(&HLT_Physics_part3_); }
    b_HLT_Physics_part4_ = tree->GetBranch("HLT_Physics_part4");
    if (b_HLT_Physics_part4_) { b_HLT_Physics_part4_->SetAddress(&HLT_Physics_part4_); }
    b_HLT_Physics_part5_ = tree->GetBranch("HLT_Physics_part5");
    if (b_HLT_Physics_part5_) { b_HLT_Physics_part5_->SetAddress(&HLT_Physics_part5_); }
    b_HLT_Physics_part6_ = tree->GetBranch("HLT_Physics_part6");
    if (b_HLT_Physics_part6_) { b_HLT_Physics_part6_->SetAddress(&HLT_Physics_part6_); }
    b_HLT_Physics_part7_ = tree->GetBranch("HLT_Physics_part7");
    if (b_HLT_Physics_part7_) { b_HLT_Physics_part7_->SetAddress(&HLT_Physics_part7_); }
    b_HLT_PixelTracks_Multiplicity110ForEndOfFill_ = tree->GetBranch("HLT_PixelTracks_Multiplicity110ForEndOfFill");
    if (b_HLT_PixelTracks_Multiplicity110ForEndOfFill_) { b_HLT_PixelTracks_Multiplicity110ForEndOfFill_->SetAddress(&HLT_PixelTracks_Multiplicity110ForEndOfFill_); }
    b_HLT_PixelTracks_Multiplicity135ForEndOfFill_ = tree->GetBranch("HLT_PixelTracks_Multiplicity135ForEndOfFill");
    if (b_HLT_PixelTracks_Multiplicity135ForEndOfFill_) { b_HLT_PixelTracks_Multiplicity135ForEndOfFill_->SetAddress(&HLT_PixelTracks_Multiplicity135ForEndOfFill_); }
    b_HLT_PixelTracks_Multiplicity160ForEndOfFill_ = tree->GetBranch("HLT_PixelTracks_Multiplicity160ForEndOfFill");
    if (b_HLT_PixelTracks_Multiplicity160ForEndOfFill_) { b_HLT_PixelTracks_Multiplicity160ForEndOfFill_->SetAddress(&HLT_PixelTracks_Multiplicity160ForEndOfFill_); }
    b_HLT_PixelTracks_Multiplicity60ForEndOfFill_ = tree->GetBranch("HLT_PixelTracks_Multiplicity60ForEndOfFill");
    if (b_HLT_PixelTracks_Multiplicity60ForEndOfFill_) { b_HLT_PixelTracks_Multiplicity60ForEndOfFill_->SetAddress(&HLT_PixelTracks_Multiplicity60ForEndOfFill_); }
    b_HLT_PixelTracks_Multiplicity85ForEndOfFill_ = tree->GetBranch("HLT_PixelTracks_Multiplicity85ForEndOfFill");
    if (b_HLT_PixelTracks_Multiplicity85ForEndOfFill_) { b_HLT_PixelTracks_Multiplicity85ForEndOfFill_->SetAddress(&HLT_PixelTracks_Multiplicity85ForEndOfFill_); }
    b_HLT_QuadJet45_DoubleBTagCSV_p087_ = tree->GetBranch("HLT_QuadJet45_DoubleBTagCSV_p087");
    if (b_HLT_QuadJet45_DoubleBTagCSV_p087_) { b_HLT_QuadJet45_DoubleBTagCSV_p087_->SetAddress(&HLT_QuadJet45_DoubleBTagCSV_p087_); }
    b_HLT_QuadJet45_TripleBTagCSV_p087_ = tree->GetBranch("HLT_QuadJet45_TripleBTagCSV_p087");
    if (b_HLT_QuadJet45_TripleBTagCSV_p087_) { b_HLT_QuadJet45_TripleBTagCSV_p087_->SetAddress(&HLT_QuadJet45_TripleBTagCSV_p087_); }
    b_HLT_QuadMuon0_Dimuon0_Jpsi_ = tree->GetBranch("HLT_QuadMuon0_Dimuon0_Jpsi");
    if (b_HLT_QuadMuon0_Dimuon0_Jpsi_) { b_HLT_QuadMuon0_Dimuon0_Jpsi_->SetAddress(&HLT_QuadMuon0_Dimuon0_Jpsi_); }
    b_HLT_QuadMuon0_Dimuon0_Upsilon_ = tree->GetBranch("HLT_QuadMuon0_Dimuon0_Upsilon");
    if (b_HLT_QuadMuon0_Dimuon0_Upsilon_) { b_HLT_QuadMuon0_Dimuon0_Upsilon_->SetAddress(&HLT_QuadMuon0_Dimuon0_Upsilon_); }
    b_HLT_QuadPFJet103_88_75_15_ = tree->GetBranch("HLT_QuadPFJet103_88_75_15");
    if (b_HLT_QuadPFJet103_88_75_15_) { b_HLT_QuadPFJet103_88_75_15_->SetAddress(&HLT_QuadPFJet103_88_75_15_); }
    b_HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2_ = tree->GetBranch("HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2");
    if (b_HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2_) { b_HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2_->SetAddress(&HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2_); }
    b_HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1_ = tree->GetBranch("HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1");
    if (b_HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1_) { b_HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1_->SetAddress(&HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1_); }
    b_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ = tree->GetBranch("HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1");
    if (b_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) { b_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_->SetAddress(&HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_); }
    b_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_ = tree->GetBranch("HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1");
    if (b_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_) { b_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_->SetAddress(&HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_); }
    b_HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_ = tree->GetBranch("HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2");
    if (b_HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_) { b_HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_->SetAddress(&HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_); }
    b_HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_ = tree->GetBranch("HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2");
    if (b_HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_) { b_HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_->SetAddress(&HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_); }
    b_HLT_QuadPFJet105_88_76_15_ = tree->GetBranch("HLT_QuadPFJet105_88_76_15");
    if (b_HLT_QuadPFJet105_88_76_15_) { b_HLT_QuadPFJet105_88_76_15_->SetAddress(&HLT_QuadPFJet105_88_76_15_); }
    b_HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2_ = tree->GetBranch("HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2");
    if (b_HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2_) { b_HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2_->SetAddress(&HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2_); }
    b_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ = tree->GetBranch("HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1");
    if (b_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) { b_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_->SetAddress(&HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_); }
    b_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_ = tree->GetBranch("HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1");
    if (b_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_) { b_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_->SetAddress(&HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_); }
    b_HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_ = tree->GetBranch("HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2");
    if (b_HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_) { b_HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_->SetAddress(&HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_); }
    b_HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_ = tree->GetBranch("HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2");
    if (b_HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_) { b_HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_->SetAddress(&HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_); }
    b_HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1_ = tree->GetBranch("HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1");
    if (b_HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1_) { b_HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1_->SetAddress(&HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1_); }
    b_HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ = tree->GetBranch("HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1");
    if (b_HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) { b_HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_->SetAddress(&HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_); }
    b_HLT_QuadPFJet111_90_80_15_ = tree->GetBranch("HLT_QuadPFJet111_90_80_15");
    if (b_HLT_QuadPFJet111_90_80_15_) { b_HLT_QuadPFJet111_90_80_15_->SetAddress(&HLT_QuadPFJet111_90_80_15_); }
    b_HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2_ = tree->GetBranch("HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2");
    if (b_HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2_) { b_HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2_->SetAddress(&HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2_); }
    b_HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1_ = tree->GetBranch("HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1");
    if (b_HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1_) { b_HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1_->SetAddress(&HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1_); }
    b_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ = tree->GetBranch("HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1");
    if (b_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) { b_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_->SetAddress(&HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_); }
    b_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_ = tree->GetBranch("HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1");
    if (b_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_) { b_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_->SetAddress(&HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_); }
    b_HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_ = tree->GetBranch("HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2");
    if (b_HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_) { b_HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_->SetAddress(&HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_); }
    b_HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_ = tree->GetBranch("HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2");
    if (b_HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_) { b_HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_->SetAddress(&HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_); }
    b_HLT_QuadPFJet70_50_40_30_ = tree->GetBranch("HLT_QuadPFJet70_50_40_30");
    if (b_HLT_QuadPFJet70_50_40_30_) { b_HLT_QuadPFJet70_50_40_30_->SetAddress(&HLT_QuadPFJet70_50_40_30_); }
    b_HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_ = tree->GetBranch("HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65");
    if (b_HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_) { b_HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_->SetAddress(&HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_); }
    b_HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_ = tree->GetBranch("HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65");
    if (b_HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_) { b_HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_->SetAddress(&HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_); }
    b_HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_ = tree->GetBranch("HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65");
    if (b_HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_) { b_HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_->SetAddress(&HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_); }
    b_HLT_QuadPFJet98_83_71_15_ = tree->GetBranch("HLT_QuadPFJet98_83_71_15");
    if (b_HLT_QuadPFJet98_83_71_15_) { b_HLT_QuadPFJet98_83_71_15_->SetAddress(&HLT_QuadPFJet98_83_71_15_); }
    b_HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2_ = tree->GetBranch("HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2");
    if (b_HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2_) { b_HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2_->SetAddress(&HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2_); }
    b_HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1_ = tree->GetBranch("HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1");
    if (b_HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1_) { b_HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1_->SetAddress(&HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1_); }
    b_HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ = tree->GetBranch("HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1");
    if (b_HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) { b_HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_->SetAddress(&HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_); }
    b_HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_ = tree->GetBranch("HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2");
    if (b_HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_) { b_HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_->SetAddress(&HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_); }
    b_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460_ = tree->GetBranch("HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460");
    if (b_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460_) { b_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460_->SetAddress(&HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460_); }
    b_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500_ = tree->GetBranch("HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500");
    if (b_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500_) { b_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500_->SetAddress(&HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500_); }
    b_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200_ = tree->GetBranch("HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200");
    if (b_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200_) { b_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200_->SetAddress(&HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200_); }
    b_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240_ = tree->GetBranch("HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240");
    if (b_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240_) { b_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240_->SetAddress(&HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240_); }
    b_HLT_QuadPFJet_VBF_ = tree->GetBranch("HLT_QuadPFJet_VBF");
    if (b_HLT_QuadPFJet_VBF_) { b_HLT_QuadPFJet_VBF_->SetAddress(&HLT_QuadPFJet_VBF_); }
    b_HLT_Random_ = tree->GetBranch("HLT_Random");
    if (b_HLT_Random_) { b_HLT_Random_->SetAddress(&HLT_Random_); }
    b_HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200_ = tree->GetBranch("HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200");
    if (b_HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200_) { b_HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200_->SetAddress(&HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200_); }
    b_HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ = tree->GetBranch("HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200");
    if (b_HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) { b_HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_->SetAddress(&HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_); }
    b_HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ = tree->GetBranch("HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200");
    if (b_HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) { b_HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_->SetAddress(&HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_); }
    b_HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ = tree->GetBranch("HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200");
    if (b_HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) { b_HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_->SetAddress(&HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_); }
    b_HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ = tree->GetBranch("HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200");
    if (b_HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) { b_HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_->SetAddress(&HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_); }
    b_HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ = tree->GetBranch("HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200");
    if (b_HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) { b_HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_->SetAddress(&HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_); }
    b_HLT_Rsq0p25_ = tree->GetBranch("HLT_Rsq0p25");
    if (b_HLT_Rsq0p25_) { b_HLT_Rsq0p25_->SetAddress(&HLT_Rsq0p25_); }
    b_HLT_Rsq0p25_Calo_ = tree->GetBranch("HLT_Rsq0p25_Calo");
    if (b_HLT_Rsq0p25_Calo_) { b_HLT_Rsq0p25_Calo_->SetAddress(&HLT_Rsq0p25_Calo_); }
    b_HLT_Rsq0p30_ = tree->GetBranch("HLT_Rsq0p30");
    if (b_HLT_Rsq0p30_) { b_HLT_Rsq0p30_->SetAddress(&HLT_Rsq0p30_); }
    b_HLT_Rsq0p35_ = tree->GetBranch("HLT_Rsq0p35");
    if (b_HLT_Rsq0p35_) { b_HLT_Rsq0p35_->SetAddress(&HLT_Rsq0p35_); }
    b_HLT_Rsq0p40_ = tree->GetBranch("HLT_Rsq0p40");
    if (b_HLT_Rsq0p40_) { b_HLT_Rsq0p40_->SetAddress(&HLT_Rsq0p40_); }
    b_HLT_RsqMR240_Rsq0p09_MR200_ = tree->GetBranch("HLT_RsqMR240_Rsq0p09_MR200");
    if (b_HLT_RsqMR240_Rsq0p09_MR200_) { b_HLT_RsqMR240_Rsq0p09_MR200_->SetAddress(&HLT_RsqMR240_Rsq0p09_MR200_); }
    b_HLT_RsqMR240_Rsq0p09_MR200_4jet_ = tree->GetBranch("HLT_RsqMR240_Rsq0p09_MR200_4jet");
    if (b_HLT_RsqMR240_Rsq0p09_MR200_4jet_) { b_HLT_RsqMR240_Rsq0p09_MR200_4jet_->SetAddress(&HLT_RsqMR240_Rsq0p09_MR200_4jet_); }
    b_HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo_ = tree->GetBranch("HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo");
    if (b_HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo_) { b_HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo_->SetAddress(&HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo_); }
    b_HLT_RsqMR240_Rsq0p09_MR200_Calo_ = tree->GetBranch("HLT_RsqMR240_Rsq0p09_MR200_Calo");
    if (b_HLT_RsqMR240_Rsq0p09_MR200_Calo_) { b_HLT_RsqMR240_Rsq0p09_MR200_Calo_->SetAddress(&HLT_RsqMR240_Rsq0p09_MR200_Calo_); }
    b_HLT_RsqMR270_Rsq0p09_MR200_ = tree->GetBranch("HLT_RsqMR270_Rsq0p09_MR200");
    if (b_HLT_RsqMR270_Rsq0p09_MR200_) { b_HLT_RsqMR270_Rsq0p09_MR200_->SetAddress(&HLT_RsqMR270_Rsq0p09_MR200_); }
    b_HLT_RsqMR270_Rsq0p09_MR200_4jet_ = tree->GetBranch("HLT_RsqMR270_Rsq0p09_MR200_4jet");
    if (b_HLT_RsqMR270_Rsq0p09_MR200_4jet_) { b_HLT_RsqMR270_Rsq0p09_MR200_4jet_->SetAddress(&HLT_RsqMR270_Rsq0p09_MR200_4jet_); }
    b_HLT_RsqMR300_Rsq0p09_MR200_ = tree->GetBranch("HLT_RsqMR300_Rsq0p09_MR200");
    if (b_HLT_RsqMR300_Rsq0p09_MR200_) { b_HLT_RsqMR300_Rsq0p09_MR200_->SetAddress(&HLT_RsqMR300_Rsq0p09_MR200_); }
    b_HLT_RsqMR300_Rsq0p09_MR200_4jet_ = tree->GetBranch("HLT_RsqMR300_Rsq0p09_MR200_4jet");
    if (b_HLT_RsqMR300_Rsq0p09_MR200_4jet_) { b_HLT_RsqMR300_Rsq0p09_MR200_4jet_->SetAddress(&HLT_RsqMR300_Rsq0p09_MR200_4jet_); }
    b_HLT_RsqMR320_Rsq0p09_MR200_ = tree->GetBranch("HLT_RsqMR320_Rsq0p09_MR200");
    if (b_HLT_RsqMR320_Rsq0p09_MR200_) { b_HLT_RsqMR320_Rsq0p09_MR200_->SetAddress(&HLT_RsqMR320_Rsq0p09_MR200_); }
    b_HLT_RsqMR320_Rsq0p09_MR200_4jet_ = tree->GetBranch("HLT_RsqMR320_Rsq0p09_MR200_4jet");
    if (b_HLT_RsqMR320_Rsq0p09_MR200_4jet_) { b_HLT_RsqMR320_Rsq0p09_MR200_4jet_->SetAddress(&HLT_RsqMR320_Rsq0p09_MR200_4jet_); }
    b_HLT_SingleCentralPFJet170_CFMax0p1_ = tree->GetBranch("HLT_SingleCentralPFJet170_CFMax0p1");
    if (b_HLT_SingleCentralPFJet170_CFMax0p1_) { b_HLT_SingleCentralPFJet170_CFMax0p1_->SetAddress(&HLT_SingleCentralPFJet170_CFMax0p1_); }
    b_HLT_SingleJet30_Mu12_SinglePFJet40_ = tree->GetBranch("HLT_SingleJet30_Mu12_SinglePFJet40");
    if (b_HLT_SingleJet30_Mu12_SinglePFJet40_) { b_HLT_SingleJet30_Mu12_SinglePFJet40_->SetAddress(&HLT_SingleJet30_Mu12_SinglePFJet40_); }
    b_HLT_SinglePhoton10_Eta3p1ForPPRef_ = tree->GetBranch("HLT_SinglePhoton10_Eta3p1ForPPRef");
    if (b_HLT_SinglePhoton10_Eta3p1ForPPRef_) { b_HLT_SinglePhoton10_Eta3p1ForPPRef_->SetAddress(&HLT_SinglePhoton10_Eta3p1ForPPRef_); }
    b_HLT_SinglePhoton20_Eta3p1ForPPRef_ = tree->GetBranch("HLT_SinglePhoton20_Eta3p1ForPPRef");
    if (b_HLT_SinglePhoton20_Eta3p1ForPPRef_) { b_HLT_SinglePhoton20_Eta3p1ForPPRef_->SetAddress(&HLT_SinglePhoton20_Eta3p1ForPPRef_); }
    b_HLT_SinglePhoton30_Eta3p1ForPPRef_ = tree->GetBranch("HLT_SinglePhoton30_Eta3p1ForPPRef");
    if (b_HLT_SinglePhoton30_Eta3p1ForPPRef_) { b_HLT_SinglePhoton30_Eta3p1ForPPRef_->SetAddress(&HLT_SinglePhoton30_Eta3p1ForPPRef_); }
    b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_ = tree->GetBranch("HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10");
    if (b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_) { b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_->SetAddress(&HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_); }
    b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1_ = tree->GetBranch("HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1");
    if (b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1_) { b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1_->SetAddress(&HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1_); }
    b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_ = tree->GetBranch("HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10");
    if (b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_) { b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_->SetAddress(&HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_); }
    b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1_ = tree->GetBranch("HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1");
    if (b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1_) { b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1_->SetAddress(&HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1_); }
    b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_ = tree->GetBranch("HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15");
    if (b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_) { b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_->SetAddress(&HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_); }
    b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_ = tree->GetBranch("HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1");
    if (b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_) { b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_->SetAddress(&HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_); }
    b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_ = tree->GetBranch("HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15");
    if (b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_) { b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_->SetAddress(&HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_); }
    b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_ = tree->GetBranch("HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1");
    if (b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_) { b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_->SetAddress(&HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_); }
    b_HLT_TkMu100_ = tree->GetBranch("HLT_TkMu100");
    if (b_HLT_TkMu100_) { b_HLT_TkMu100_->SetAddress(&HLT_TkMu100_); }
    b_HLT_TkMu17_ = tree->GetBranch("HLT_TkMu17");
    if (b_HLT_TkMu17_) { b_HLT_TkMu17_->SetAddress(&HLT_TkMu17_); }
    b_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_ = tree->GetBranch("HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL");
    if (b_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_) { b_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_->SetAddress(&HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_); }
    b_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_ = tree->GetBranch("HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ");
    if (b_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_) { b_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_->SetAddress(&HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_); }
    b_HLT_TkMu20_ = tree->GetBranch("HLT_TkMu20");
    if (b_HLT_TkMu20_) { b_HLT_TkMu20_->SetAddress(&HLT_TkMu20_); }
    b_HLT_TkMu24_eta2p1_ = tree->GetBranch("HLT_TkMu24_eta2p1");
    if (b_HLT_TkMu24_eta2p1_) { b_HLT_TkMu24_eta2p1_->SetAddress(&HLT_TkMu24_eta2p1_); }
    b_HLT_TkMu27_ = tree->GetBranch("HLT_TkMu27");
    if (b_HLT_TkMu27_) { b_HLT_TkMu27_->SetAddress(&HLT_TkMu27_); }
    b_HLT_TkMu50_ = tree->GetBranch("HLT_TkMu50");
    if (b_HLT_TkMu50_) { b_HLT_TkMu50_->SetAddress(&HLT_TkMu50_); }
    b_HLT_Trimuon2_Upsilon5_Muon_ = tree->GetBranch("HLT_Trimuon2_Upsilon5_Muon");
    if (b_HLT_Trimuon2_Upsilon5_Muon_) { b_HLT_Trimuon2_Upsilon5_Muon_->SetAddress(&HLT_Trimuon2_Upsilon5_Muon_); }
    b_HLT_Trimuon5_3p5_2_Upsilon_Muon_ = tree->GetBranch("HLT_Trimuon5_3p5_2_Upsilon_Muon");
    if (b_HLT_Trimuon5_3p5_2_Upsilon_Muon_) { b_HLT_Trimuon5_3p5_2_Upsilon_Muon_->SetAddress(&HLT_Trimuon5_3p5_2_Upsilon_Muon_); }
    b_HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_ = tree->GetBranch("HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon");
    if (b_HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_) { b_HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_->SetAddress(&HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_); }
    b_HLT_TripleJet110_35_35_Mjj650_PFMET110_ = tree->GetBranch("HLT_TripleJet110_35_35_Mjj650_PFMET110");
    if (b_HLT_TripleJet110_35_35_Mjj650_PFMET110_) { b_HLT_TripleJet110_35_35_Mjj650_PFMET110_->SetAddress(&HLT_TripleJet110_35_35_Mjj650_PFMET110_); }
    b_HLT_TripleJet110_35_35_Mjj650_PFMET120_ = tree->GetBranch("HLT_TripleJet110_35_35_Mjj650_PFMET120");
    if (b_HLT_TripleJet110_35_35_Mjj650_PFMET120_) { b_HLT_TripleJet110_35_35_Mjj650_PFMET120_->SetAddress(&HLT_TripleJet110_35_35_Mjj650_PFMET120_); }
    b_HLT_TripleJet110_35_35_Mjj650_PFMET130_ = tree->GetBranch("HLT_TripleJet110_35_35_Mjj650_PFMET130");
    if (b_HLT_TripleJet110_35_35_Mjj650_PFMET130_) { b_HLT_TripleJet110_35_35_Mjj650_PFMET130_->SetAddress(&HLT_TripleJet110_35_35_Mjj650_PFMET130_); }
    b_HLT_TripleMu_10_5_5_DZ_ = tree->GetBranch("HLT_TripleMu_10_5_5_DZ");
    if (b_HLT_TripleMu_10_5_5_DZ_) { b_HLT_TripleMu_10_5_5_DZ_->SetAddress(&HLT_TripleMu_10_5_5_DZ_); }
    b_HLT_TripleMu_12_10_5_ = tree->GetBranch("HLT_TripleMu_12_10_5");
    if (b_HLT_TripleMu_12_10_5_) { b_HLT_TripleMu_12_10_5_->SetAddress(&HLT_TripleMu_12_10_5_); }
    b_HLT_TripleMu_5_3_3_ = tree->GetBranch("HLT_TripleMu_5_3_3");
    if (b_HLT_TripleMu_5_3_3_) { b_HLT_TripleMu_5_3_3_->SetAddress(&HLT_TripleMu_5_3_3_); }
    b_HLT_TripleMu_5_3_3_DZ_Mass3p8_ = tree->GetBranch("HLT_TripleMu_5_3_3_DZ_Mass3p8");
    if (b_HLT_TripleMu_5_3_3_DZ_Mass3p8_) { b_HLT_TripleMu_5_3_3_DZ_Mass3p8_->SetAddress(&HLT_TripleMu_5_3_3_DZ_Mass3p8_); }
    b_HLT_TripleMu_5_3_3_Mass3p8_DCA_ = tree->GetBranch("HLT_TripleMu_5_3_3_Mass3p8_DCA");
    if (b_HLT_TripleMu_5_3_3_Mass3p8_DCA_) { b_HLT_TripleMu_5_3_3_Mass3p8_DCA_->SetAddress(&HLT_TripleMu_5_3_3_Mass3p8_DCA_); }
    b_HLT_TripleMu_5_3_3_Mass3p8_DZ_ = tree->GetBranch("HLT_TripleMu_5_3_3_Mass3p8_DZ");
    if (b_HLT_TripleMu_5_3_3_Mass3p8_DZ_) { b_HLT_TripleMu_5_3_3_Mass3p8_DZ_->SetAddress(&HLT_TripleMu_5_3_3_Mass3p8_DZ_); }
    b_HLT_TripleMu_5_3_3_Mass3p8to60_DCA_ = tree->GetBranch("HLT_TripleMu_5_3_3_Mass3p8to60_DCA");
    if (b_HLT_TripleMu_5_3_3_Mass3p8to60_DCA_) { b_HLT_TripleMu_5_3_3_Mass3p8to60_DCA_->SetAddress(&HLT_TripleMu_5_3_3_Mass3p8to60_DCA_); }
    b_HLT_TripleMu_5_3_3_Mass3p8to60_DZ_ = tree->GetBranch("HLT_TripleMu_5_3_3_Mass3p8to60_DZ");
    if (b_HLT_TripleMu_5_3_3_Mass3p8to60_DZ_) { b_HLT_TripleMu_5_3_3_Mass3p8to60_DZ_->SetAddress(&HLT_TripleMu_5_3_3_Mass3p8to60_DZ_); }
    b_HLT_TriplePhoton_20_20_20_CaloIdLV2_ = tree->GetBranch("HLT_TriplePhoton_20_20_20_CaloIdLV2");
    if (b_HLT_TriplePhoton_20_20_20_CaloIdLV2_) { b_HLT_TriplePhoton_20_20_20_CaloIdLV2_->SetAddress(&HLT_TriplePhoton_20_20_20_CaloIdLV2_); }
    b_HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_ = tree->GetBranch("HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL");
    if (b_HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_) { b_HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_->SetAddress(&HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_); }
    b_HLT_TriplePhoton_30_30_10_CaloIdLV2_ = tree->GetBranch("HLT_TriplePhoton_30_30_10_CaloIdLV2");
    if (b_HLT_TriplePhoton_30_30_10_CaloIdLV2_) { b_HLT_TriplePhoton_30_30_10_CaloIdLV2_->SetAddress(&HLT_TriplePhoton_30_30_10_CaloIdLV2_); }
    b_HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_ = tree->GetBranch("HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL");
    if (b_HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_) { b_HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_->SetAddress(&HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_); }
    b_HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_ = tree->GetBranch("HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL");
    if (b_HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_) { b_HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_->SetAddress(&HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_); }
    b_HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_ = tree->GetBranch("HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx");
    if (b_HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_) { b_HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_->SetAddress(&HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_); }
    b_HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx_ = tree->GetBranch("HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx");
    if (b_HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx_) { b_HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx_->SetAddress(&HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx_); }
    b_HLT_TrkMu16NoFiltersNoVtx_ = tree->GetBranch("HLT_TrkMu16NoFiltersNoVtx");
    if (b_HLT_TrkMu16NoFiltersNoVtx_) { b_HLT_TrkMu16NoFiltersNoVtx_->SetAddress(&HLT_TrkMu16NoFiltersNoVtx_); }
    b_HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_ = tree->GetBranch("HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx");
    if (b_HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_) { b_HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_->SetAddress(&HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_); }
    b_HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_ = tree->GetBranch("HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx");
    if (b_HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_) { b_HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_->SetAddress(&HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_); }
    b_HLT_TrkMu6NoFiltersNoVtx_ = tree->GetBranch("HLT_TrkMu6NoFiltersNoVtx");
    if (b_HLT_TrkMu6NoFiltersNoVtx_) { b_HLT_TrkMu6NoFiltersNoVtx_->SetAddress(&HLT_TrkMu6NoFiltersNoVtx_); }
    b_HLT_UncorrectedJetE30_NoBPTX_ = tree->GetBranch("HLT_UncorrectedJetE30_NoBPTX");
    if (b_HLT_UncorrectedJetE30_NoBPTX_) { b_HLT_UncorrectedJetE30_NoBPTX_->SetAddress(&HLT_UncorrectedJetE30_NoBPTX_); }
    b_HLT_UncorrectedJetE30_NoBPTX3BX_ = tree->GetBranch("HLT_UncorrectedJetE30_NoBPTX3BX");
    if (b_HLT_UncorrectedJetE30_NoBPTX3BX_) { b_HLT_UncorrectedJetE30_NoBPTX3BX_->SetAddress(&HLT_UncorrectedJetE30_NoBPTX3BX_); }
    b_HLT_UncorrectedJetE60_NoBPTX3BX_ = tree->GetBranch("HLT_UncorrectedJetE60_NoBPTX3BX");
    if (b_HLT_UncorrectedJetE60_NoBPTX3BX_) { b_HLT_UncorrectedJetE60_NoBPTX3BX_->SetAddress(&HLT_UncorrectedJetE60_NoBPTX3BX_); }
    b_HLT_UncorrectedJetE70_NoBPTX3BX_ = tree->GetBranch("HLT_UncorrectedJetE70_NoBPTX3BX");
    if (b_HLT_UncorrectedJetE70_NoBPTX3BX_) { b_HLT_UncorrectedJetE70_NoBPTX3BX_->SetAddress(&HLT_UncorrectedJetE70_NoBPTX3BX_); }
    b_HLT_VBF_DisplacedJet40_DisplacedTrack_ = tree->GetBranch("HLT_VBF_DisplacedJet40_DisplacedTrack");
    if (b_HLT_VBF_DisplacedJet40_DisplacedTrack_) { b_HLT_VBF_DisplacedJet40_DisplacedTrack_->SetAddress(&HLT_VBF_DisplacedJet40_DisplacedTrack_); }
    b_HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5_ = tree->GetBranch("HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5");
    if (b_HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5_) { b_HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5_->SetAddress(&HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5_); }
    b_HLT_VBF_DisplacedJet40_Hadronic_ = tree->GetBranch("HLT_VBF_DisplacedJet40_Hadronic");
    if (b_HLT_VBF_DisplacedJet40_Hadronic_) { b_HLT_VBF_DisplacedJet40_Hadronic_->SetAddress(&HLT_VBF_DisplacedJet40_Hadronic_); }
    b_HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack_ = tree->GetBranch("HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack");
    if (b_HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack_) { b_HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack_->SetAddress(&HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack_); }
    b_HLT_VBF_DisplacedJet40_TightID_DisplacedTrack_ = tree->GetBranch("HLT_VBF_DisplacedJet40_TightID_DisplacedTrack");
    if (b_HLT_VBF_DisplacedJet40_TightID_DisplacedTrack_) { b_HLT_VBF_DisplacedJet40_TightID_DisplacedTrack_->SetAddress(&HLT_VBF_DisplacedJet40_TightID_DisplacedTrack_); }
    b_HLT_VBF_DisplacedJet40_TightID_Hadronic_ = tree->GetBranch("HLT_VBF_DisplacedJet40_TightID_Hadronic");
    if (b_HLT_VBF_DisplacedJet40_TightID_Hadronic_) { b_HLT_VBF_DisplacedJet40_TightID_Hadronic_->SetAddress(&HLT_VBF_DisplacedJet40_TightID_Hadronic_); }
    b_HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack_ = tree->GetBranch("HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack");
    if (b_HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack_) { b_HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack_->SetAddress(&HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack_); }
    b_HLT_VBF_DisplacedJet40_VTightID_Hadronic_ = tree->GetBranch("HLT_VBF_DisplacedJet40_VTightID_Hadronic");
    if (b_HLT_VBF_DisplacedJet40_VTightID_Hadronic_) { b_HLT_VBF_DisplacedJet40_VTightID_Hadronic_->SetAddress(&HLT_VBF_DisplacedJet40_VTightID_Hadronic_); }
    b_HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack_ = tree->GetBranch("HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack");
    if (b_HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack_) { b_HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack_->SetAddress(&HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack_); }
    b_HLT_VBF_DisplacedJet40_VVTightID_Hadronic_ = tree->GetBranch("HLT_VBF_DisplacedJet40_VVTightID_Hadronic");
    if (b_HLT_VBF_DisplacedJet40_VVTightID_Hadronic_) { b_HLT_VBF_DisplacedJet40_VVTightID_Hadronic_->SetAddress(&HLT_VBF_DisplacedJet40_VVTightID_Hadronic_); }
    b_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_ = tree->GetBranch("HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1");
    if (b_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_) { b_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_->SetAddress(&HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_); }
    b_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg");
    if (b_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg_) { b_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg_->SetAddress(&HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg_); }
    b_HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_ = tree->GetBranch("HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1");
    if (b_HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_) { b_HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_->SetAddress(&HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_); }
    b_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_ = tree->GetBranch("HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1");
    if (b_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_) { b_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_->SetAddress(&HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_); }
    b_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg");
    if (b_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg_) { b_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg_->SetAddress(&HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg_); }
    b_HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_ = tree->GetBranch("HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1");
    if (b_HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_) { b_HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_->SetAddress(&HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_); }
    b_HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_ = tree->GetBranch("HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1");
    if (b_HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_) { b_HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_->SetAddress(&HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_); }
    b_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_ = tree->GetBranch("HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1");
    if (b_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_) { b_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_->SetAddress(&HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_); }
    b_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg_ = tree->GetBranch("HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg");
    if (b_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg_) { b_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg_->SetAddress(&HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg_); }
    b_HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_ = tree->GetBranch("HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1");
    if (b_HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_) { b_HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_->SetAddress(&HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_); }
    b_HLT_VLooseIsoPFTau120_Trk50_eta2p1_ = tree->GetBranch("HLT_VLooseIsoPFTau120_Trk50_eta2p1");
    if (b_HLT_VLooseIsoPFTau120_Trk50_eta2p1_) { b_HLT_VLooseIsoPFTau120_Trk50_eta2p1_->SetAddress(&HLT_VLooseIsoPFTau120_Trk50_eta2p1_); }
    b_HLT_VLooseIsoPFTau140_Trk50_eta2p1_ = tree->GetBranch("HLT_VLooseIsoPFTau140_Trk50_eta2p1");
    if (b_HLT_VLooseIsoPFTau140_Trk50_eta2p1_) { b_HLT_VLooseIsoPFTau140_Trk50_eta2p1_->SetAddress(&HLT_VLooseIsoPFTau140_Trk50_eta2p1_); }
    b_HLT_ZeroBias_ = tree->GetBranch("HLT_ZeroBias");
    if (b_HLT_ZeroBias_) { b_HLT_ZeroBias_->SetAddress(&HLT_ZeroBias_); }
    b_HLT_ZeroBias_Alignment_ = tree->GetBranch("HLT_ZeroBias_Alignment");
    if (b_HLT_ZeroBias_Alignment_) { b_HLT_ZeroBias_Alignment_->SetAddress(&HLT_ZeroBias_Alignment_); }
    b_HLT_ZeroBias_Beamspot_ = tree->GetBranch("HLT_ZeroBias_Beamspot");
    if (b_HLT_ZeroBias_Beamspot_) { b_HLT_ZeroBias_Beamspot_->SetAddress(&HLT_ZeroBias_Beamspot_); }
    b_HLT_ZeroBias_FirstBXAfterTrain_ = tree->GetBranch("HLT_ZeroBias_FirstBXAfterTrain");
    if (b_HLT_ZeroBias_FirstBXAfterTrain_) { b_HLT_ZeroBias_FirstBXAfterTrain_->SetAddress(&HLT_ZeroBias_FirstBXAfterTrain_); }
    b_HLT_ZeroBias_FirstCollisionAfterAbortGap_ = tree->GetBranch("HLT_ZeroBias_FirstCollisionAfterAbortGap");
    if (b_HLT_ZeroBias_FirstCollisionAfterAbortGap_) { b_HLT_ZeroBias_FirstCollisionAfterAbortGap_->SetAddress(&HLT_ZeroBias_FirstCollisionAfterAbortGap_); }
    b_HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS_ = tree->GetBranch("HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS");
    if (b_HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS_) { b_HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS_->SetAddress(&HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS_); }
    b_HLT_ZeroBias_FirstCollisionAfterAbortGap_copy_ = tree->GetBranch("HLT_ZeroBias_FirstCollisionAfterAbortGap_copy");
    if (b_HLT_ZeroBias_FirstCollisionAfterAbortGap_copy_) { b_HLT_ZeroBias_FirstCollisionAfterAbortGap_copy_->SetAddress(&HLT_ZeroBias_FirstCollisionAfterAbortGap_copy_); }
    b_HLT_ZeroBias_FirstCollisionInTrain_ = tree->GetBranch("HLT_ZeroBias_FirstCollisionInTrain");
    if (b_HLT_ZeroBias_FirstCollisionInTrain_) { b_HLT_ZeroBias_FirstCollisionInTrain_->SetAddress(&HLT_ZeroBias_FirstCollisionInTrain_); }
    b_HLT_ZeroBias_IsolatedBunches_ = tree->GetBranch("HLT_ZeroBias_IsolatedBunches");
    if (b_HLT_ZeroBias_IsolatedBunches_) { b_HLT_ZeroBias_IsolatedBunches_->SetAddress(&HLT_ZeroBias_IsolatedBunches_); }
    b_HLT_ZeroBias_LastCollisionInTrain_ = tree->GetBranch("HLT_ZeroBias_LastCollisionInTrain");
    if (b_HLT_ZeroBias_LastCollisionInTrain_) { b_HLT_ZeroBias_LastCollisionInTrain_->SetAddress(&HLT_ZeroBias_LastCollisionInTrain_); }
    b_HLT_ZeroBias_part0_ = tree->GetBranch("HLT_ZeroBias_part0");
    if (b_HLT_ZeroBias_part0_) { b_HLT_ZeroBias_part0_->SetAddress(&HLT_ZeroBias_part0_); }
    b_HLT_ZeroBias_part1_ = tree->GetBranch("HLT_ZeroBias_part1");
    if (b_HLT_ZeroBias_part1_) { b_HLT_ZeroBias_part1_->SetAddress(&HLT_ZeroBias_part1_); }
    b_HLT_ZeroBias_part2_ = tree->GetBranch("HLT_ZeroBias_part2");
    if (b_HLT_ZeroBias_part2_) { b_HLT_ZeroBias_part2_->SetAddress(&HLT_ZeroBias_part2_); }
    b_HLT_ZeroBias_part3_ = tree->GetBranch("HLT_ZeroBias_part3");
    if (b_HLT_ZeroBias_part3_) { b_HLT_ZeroBias_part3_->SetAddress(&HLT_ZeroBias_part3_); }
    b_HLT_ZeroBias_part4_ = tree->GetBranch("HLT_ZeroBias_part4");
    if (b_HLT_ZeroBias_part4_) { b_HLT_ZeroBias_part4_->SetAddress(&HLT_ZeroBias_part4_); }
    b_HLT_ZeroBias_part5_ = tree->GetBranch("HLT_ZeroBias_part5");
    if (b_HLT_ZeroBias_part5_) { b_HLT_ZeroBias_part5_->SetAddress(&HLT_ZeroBias_part5_); }
    b_HLT_ZeroBias_part6_ = tree->GetBranch("HLT_ZeroBias_part6");
    if (b_HLT_ZeroBias_part6_) { b_HLT_ZeroBias_part6_->SetAddress(&HLT_ZeroBias_part6_); }
    b_HLT_ZeroBias_part7_ = tree->GetBranch("HLT_ZeroBias_part7");
    if (b_HLT_ZeroBias_part7_) { b_HLT_ZeroBias_part7_->SetAddress(&HLT_ZeroBias_part7_); }
    b_HLT_ZeroBias_part8_ = tree->GetBranch("HLT_ZeroBias_part8");
    if (b_HLT_ZeroBias_part8_) { b_HLT_ZeroBias_part8_->SetAddress(&HLT_ZeroBias_part8_); }
    b_HLT_ZeroBias_part9_ = tree->GetBranch("HLT_ZeroBias_part9");
    if (b_HLT_ZeroBias_part9_) { b_HLT_ZeroBias_part9_->SetAddress(&HLT_ZeroBias_part9_); }
    b_HLTriggerFinalPath_ = tree->GetBranch("HLTriggerFinalPath");
    if (b_HLTriggerFinalPath_) { b_HLTriggerFinalPath_->SetAddress(&HLTriggerFinalPath_); }
    b_HLTriggerFirstPath_ = tree->GetBranch("HLTriggerFirstPath");
    if (b_HLTriggerFirstPath_) { b_HLTriggerFirstPath_->SetAddress(&HLTriggerFirstPath_); }
    b_HTXS_Higgs_pt_ = tree->GetBranch("HTXS_Higgs_pt");
    if (b_HTXS_Higgs_pt_) { b_HTXS_Higgs_pt_->SetAddress(&HTXS_Higgs_pt_); }
    b_HTXS_Higgs_y_ = tree->GetBranch("HTXS_Higgs_y");
    if (b_HTXS_Higgs_y_) { b_HTXS_Higgs_y_->SetAddress(&HTXS_Higgs_y_); }
    b_HTXS_njets25_ = tree->GetBranch("HTXS_njets25");
    if (b_HTXS_njets25_) { b_HTXS_njets25_->SetAddress(&HTXS_njets25_); }
    b_HTXS_njets30_ = tree->GetBranch("HTXS_njets30");
    if (b_HTXS_njets30_) { b_HTXS_njets30_->SetAddress(&HTXS_njets30_); }
    b_HTXS_stage1_1_cat_pTjet25GeV_ = tree->GetBranch("HTXS_stage1_1_cat_pTjet25GeV");
    if (b_HTXS_stage1_1_cat_pTjet25GeV_) { b_HTXS_stage1_1_cat_pTjet25GeV_->SetAddress(&HTXS_stage1_1_cat_pTjet25GeV_); }
    b_HTXS_stage1_1_cat_pTjet30GeV_ = tree->GetBranch("HTXS_stage1_1_cat_pTjet30GeV");
    if (b_HTXS_stage1_1_cat_pTjet30GeV_) { b_HTXS_stage1_1_cat_pTjet30GeV_->SetAddress(&HTXS_stage1_1_cat_pTjet30GeV_); }
    b_HTXS_stage1_1_fine_cat_pTjet25GeV_ = tree->GetBranch("HTXS_stage1_1_fine_cat_pTjet25GeV");
    if (b_HTXS_stage1_1_fine_cat_pTjet25GeV_) { b_HTXS_stage1_1_fine_cat_pTjet25GeV_->SetAddress(&HTXS_stage1_1_fine_cat_pTjet25GeV_); }
    b_HTXS_stage1_1_fine_cat_pTjet30GeV_ = tree->GetBranch("HTXS_stage1_1_fine_cat_pTjet30GeV");
    if (b_HTXS_stage1_1_fine_cat_pTjet30GeV_) { b_HTXS_stage1_1_fine_cat_pTjet30GeV_->SetAddress(&HTXS_stage1_1_fine_cat_pTjet30GeV_); }
    b_HTXS_stage1_2_cat_pTjet25GeV_ = tree->GetBranch("HTXS_stage1_2_cat_pTjet25GeV");
    if (b_HTXS_stage1_2_cat_pTjet25GeV_) { b_HTXS_stage1_2_cat_pTjet25GeV_->SetAddress(&HTXS_stage1_2_cat_pTjet25GeV_); }
    b_HTXS_stage1_2_cat_pTjet30GeV_ = tree->GetBranch("HTXS_stage1_2_cat_pTjet30GeV");
    if (b_HTXS_stage1_2_cat_pTjet30GeV_) { b_HTXS_stage1_2_cat_pTjet30GeV_->SetAddress(&HTXS_stage1_2_cat_pTjet30GeV_); }
    b_HTXS_stage1_2_fine_cat_pTjet25GeV_ = tree->GetBranch("HTXS_stage1_2_fine_cat_pTjet25GeV");
    if (b_HTXS_stage1_2_fine_cat_pTjet25GeV_) { b_HTXS_stage1_2_fine_cat_pTjet25GeV_->SetAddress(&HTXS_stage1_2_fine_cat_pTjet25GeV_); }
    b_HTXS_stage1_2_fine_cat_pTjet30GeV_ = tree->GetBranch("HTXS_stage1_2_fine_cat_pTjet30GeV");
    if (b_HTXS_stage1_2_fine_cat_pTjet30GeV_) { b_HTXS_stage1_2_fine_cat_pTjet30GeV_->SetAddress(&HTXS_stage1_2_fine_cat_pTjet30GeV_); }
    b_HTXS_stage_0_ = tree->GetBranch("HTXS_stage_0");
    if (b_HTXS_stage_0_) { b_HTXS_stage_0_->SetAddress(&HTXS_stage_0_); }
    b_HTXS_stage_1_pTjet25_ = tree->GetBranch("HTXS_stage_1_pTjet25");
    if (b_HTXS_stage_1_pTjet25_) { b_HTXS_stage_1_pTjet25_->SetAddress(&HTXS_stage_1_pTjet25_); }
    b_HTXS_stage_1_pTjet30_ = tree->GetBranch("HTXS_stage_1_pTjet30");
    if (b_HTXS_stage_1_pTjet30_) { b_HTXS_stage_1_pTjet30_->SetAddress(&HTXS_stage_1_pTjet30_); }
    b_IsoTrack_charge_ = tree->GetBranch("IsoTrack_charge");
    if (b_IsoTrack_charge_) { b_IsoTrack_charge_->SetAddress(&IsoTrack_charge_); }
    b_IsoTrack_dxy_ = tree->GetBranch("IsoTrack_dxy");
    if (b_IsoTrack_dxy_) { b_IsoTrack_dxy_->SetAddress(&IsoTrack_dxy_); }
    b_IsoTrack_dz_ = tree->GetBranch("IsoTrack_dz");
    if (b_IsoTrack_dz_) { b_IsoTrack_dz_->SetAddress(&IsoTrack_dz_); }
    b_IsoTrack_eta_ = tree->GetBranch("IsoTrack_eta");
    if (b_IsoTrack_eta_) { b_IsoTrack_eta_->SetAddress(&IsoTrack_eta_); }
    b_IsoTrack_fromPV_ = tree->GetBranch("IsoTrack_fromPV");
    if (b_IsoTrack_fromPV_) { b_IsoTrack_fromPV_->SetAddress(&IsoTrack_fromPV_); }
    b_IsoTrack_isFromLostTrack_ = tree->GetBranch("IsoTrack_isFromLostTrack");
    if (b_IsoTrack_isFromLostTrack_) { b_IsoTrack_isFromLostTrack_->SetAddress(&IsoTrack_isFromLostTrack_); }
    b_IsoTrack_isHighPurityTrack_ = tree->GetBranch("IsoTrack_isHighPurityTrack");
    if (b_IsoTrack_isHighPurityTrack_) { b_IsoTrack_isHighPurityTrack_->SetAddress(&IsoTrack_isHighPurityTrack_); }
    b_IsoTrack_isPFcand_ = tree->GetBranch("IsoTrack_isPFcand");
    if (b_IsoTrack_isPFcand_) { b_IsoTrack_isPFcand_->SetAddress(&IsoTrack_isPFcand_); }
    b_IsoTrack_miniPFRelIso_all_ = tree->GetBranch("IsoTrack_miniPFRelIso_all");
    if (b_IsoTrack_miniPFRelIso_all_) { b_IsoTrack_miniPFRelIso_all_->SetAddress(&IsoTrack_miniPFRelIso_all_); }
    b_IsoTrack_miniPFRelIso_chg_ = tree->GetBranch("IsoTrack_miniPFRelIso_chg");
    if (b_IsoTrack_miniPFRelIso_chg_) { b_IsoTrack_miniPFRelIso_chg_->SetAddress(&IsoTrack_miniPFRelIso_chg_); }
    b_IsoTrack_pdgId_ = tree->GetBranch("IsoTrack_pdgId");
    if (b_IsoTrack_pdgId_) { b_IsoTrack_pdgId_->SetAddress(&IsoTrack_pdgId_); }
    b_IsoTrack_pfRelIso03_all_ = tree->GetBranch("IsoTrack_pfRelIso03_all");
    if (b_IsoTrack_pfRelIso03_all_) { b_IsoTrack_pfRelIso03_all_->SetAddress(&IsoTrack_pfRelIso03_all_); }
    b_IsoTrack_pfRelIso03_chg_ = tree->GetBranch("IsoTrack_pfRelIso03_chg");
    if (b_IsoTrack_pfRelIso03_chg_) { b_IsoTrack_pfRelIso03_chg_->SetAddress(&IsoTrack_pfRelIso03_chg_); }
    b_IsoTrack_phi_ = tree->GetBranch("IsoTrack_phi");
    if (b_IsoTrack_phi_) { b_IsoTrack_phi_->SetAddress(&IsoTrack_phi_); }
    b_IsoTrack_pt_ = tree->GetBranch("IsoTrack_pt");
    if (b_IsoTrack_pt_) { b_IsoTrack_pt_->SetAddress(&IsoTrack_pt_); }
    b_Jet_area_ = tree->GetBranch("Jet_area");
    if (b_Jet_area_) { b_Jet_area_->SetAddress(&Jet_area_); }
    b_Jet_bReg_ = tree->GetBranch("Jet_bReg");
    if (b_Jet_bReg_) { b_Jet_bReg_->SetAddress(&Jet_bReg_); }
    b_Jet_bRegCorr_ = tree->GetBranch("Jet_bRegCorr");
    if (b_Jet_bRegCorr_) { b_Jet_bRegCorr_->SetAddress(&Jet_bRegCorr_); }
    b_Jet_bRegRes_ = tree->GetBranch("Jet_bRegRes");
    if (b_Jet_bRegRes_) { b_Jet_bRegRes_->SetAddress(&Jet_bRegRes_); }
    b_Jet_btagCMVA_ = tree->GetBranch("Jet_btagCMVA");
    if (b_Jet_btagCMVA_) { b_Jet_btagCMVA_->SetAddress(&Jet_btagCMVA_); }
    b_Jet_btagCSVV2_ = tree->GetBranch("Jet_btagCSVV2");
    if (b_Jet_btagCSVV2_) { b_Jet_btagCSVV2_->SetAddress(&Jet_btagCSVV2_); }
    b_Jet_btagDeepB_ = tree->GetBranch("Jet_btagDeepB");
    if (b_Jet_btagDeepB_) { b_Jet_btagDeepB_->SetAddress(&Jet_btagDeepB_); }
    b_Jet_btagDeepC_ = tree->GetBranch("Jet_btagDeepC");
    if (b_Jet_btagDeepC_) { b_Jet_btagDeepC_->SetAddress(&Jet_btagDeepC_); }
    b_Jet_btagDeepCvB_ = tree->GetBranch("Jet_btagDeepCvB");
    if (b_Jet_btagDeepCvB_) { b_Jet_btagDeepCvB_->SetAddress(&Jet_btagDeepCvB_); }
    b_Jet_btagDeepCvL_ = tree->GetBranch("Jet_btagDeepCvL");
    if (b_Jet_btagDeepCvL_) { b_Jet_btagDeepCvL_->SetAddress(&Jet_btagDeepCvL_); }
    b_Jet_btagDeepFlavB_ = tree->GetBranch("Jet_btagDeepFlavB");
    if (b_Jet_btagDeepFlavB_) { b_Jet_btagDeepFlavB_->SetAddress(&Jet_btagDeepFlavB_); }
    b_Jet_btagDeepFlavC_ = tree->GetBranch("Jet_btagDeepFlavC");
    if (b_Jet_btagDeepFlavC_) { b_Jet_btagDeepFlavC_->SetAddress(&Jet_btagDeepFlavC_); }
    b_Jet_btagDeepFlavCvB_ = tree->GetBranch("Jet_btagDeepFlavCvB");
    if (b_Jet_btagDeepFlavCvB_) { b_Jet_btagDeepFlavCvB_->SetAddress(&Jet_btagDeepFlavCvB_); }
    b_Jet_btagDeepFlavCvL_ = tree->GetBranch("Jet_btagDeepFlavCvL");
    if (b_Jet_btagDeepFlavCvL_) { b_Jet_btagDeepFlavCvL_->SetAddress(&Jet_btagDeepFlavCvL_); }
    b_Jet_btagDeepFlavQG_ = tree->GetBranch("Jet_btagDeepFlavQG");
    if (b_Jet_btagDeepFlavQG_) { b_Jet_btagDeepFlavQG_->SetAddress(&Jet_btagDeepFlavQG_); }
    b_Jet_cRegCorr_ = tree->GetBranch("Jet_cRegCorr");
    if (b_Jet_cRegCorr_) { b_Jet_cRegCorr_->SetAddress(&Jet_cRegCorr_); }
    b_Jet_cRegRes_ = tree->GetBranch("Jet_cRegRes");
    if (b_Jet_cRegRes_) { b_Jet_cRegRes_->SetAddress(&Jet_cRegRes_); }
    b_Jet_chEmEF_ = tree->GetBranch("Jet_chEmEF");
    if (b_Jet_chEmEF_) { b_Jet_chEmEF_->SetAddress(&Jet_chEmEF_); }
    b_Jet_chFPV0EF_ = tree->GetBranch("Jet_chFPV0EF");
    if (b_Jet_chFPV0EF_) { b_Jet_chFPV0EF_->SetAddress(&Jet_chFPV0EF_); }
    b_Jet_chFPV1EF_ = tree->GetBranch("Jet_chFPV1EF");
    if (b_Jet_chFPV1EF_) { b_Jet_chFPV1EF_->SetAddress(&Jet_chFPV1EF_); }
    b_Jet_chFPV2EF_ = tree->GetBranch("Jet_chFPV2EF");
    if (b_Jet_chFPV2EF_) { b_Jet_chFPV2EF_->SetAddress(&Jet_chFPV2EF_); }
    b_Jet_chFPV3EF_ = tree->GetBranch("Jet_chFPV3EF");
    if (b_Jet_chFPV3EF_) { b_Jet_chFPV3EF_->SetAddress(&Jet_chFPV3EF_); }
    b_Jet_chHEF_ = tree->GetBranch("Jet_chHEF");
    if (b_Jet_chHEF_) { b_Jet_chHEF_->SetAddress(&Jet_chHEF_); }
    b_Jet_cleanmask_ = tree->GetBranch("Jet_cleanmask");
    if (b_Jet_cleanmask_) { b_Jet_cleanmask_->SetAddress(&Jet_cleanmask_); }
    b_Jet_corr_JEC_ = tree->GetBranch("Jet_corr_JEC");
    if (b_Jet_corr_JEC_) { b_Jet_corr_JEC_->SetAddress(&Jet_corr_JEC_); }
    b_Jet_corr_JER_ = tree->GetBranch("Jet_corr_JER");
    if (b_Jet_corr_JER_) { b_Jet_corr_JER_->SetAddress(&Jet_corr_JER_); }
    b_Jet_electronIdx1_ = tree->GetBranch("Jet_electronIdx1");
    if (b_Jet_electronIdx1_) { b_Jet_electronIdx1_->SetAddress(&Jet_electronIdx1_); }
    b_Jet_electronIdx2_ = tree->GetBranch("Jet_electronIdx2");
    if (b_Jet_electronIdx2_) { b_Jet_electronIdx2_->SetAddress(&Jet_electronIdx2_); }
    b_Jet_eta_ = tree->GetBranch("Jet_eta");
    if (b_Jet_eta_) { b_Jet_eta_->SetAddress(&Jet_eta_); }
    b_Jet_genJetIdx_ = tree->GetBranch("Jet_genJetIdx");
    if (b_Jet_genJetIdx_) { b_Jet_genJetIdx_->SetAddress(&Jet_genJetIdx_); }
    b_Jet_hadronFlavour_ = tree->GetBranch("Jet_hadronFlavour");
    if (b_Jet_hadronFlavour_) { b_Jet_hadronFlavour_->SetAddress(&Jet_hadronFlavour_); }
    b_Jet_hfadjacentEtaStripsSize_ = tree->GetBranch("Jet_hfadjacentEtaStripsSize");
    if (b_Jet_hfadjacentEtaStripsSize_) { b_Jet_hfadjacentEtaStripsSize_->SetAddress(&Jet_hfadjacentEtaStripsSize_); }
    b_Jet_hfcentralEtaStripSize_ = tree->GetBranch("Jet_hfcentralEtaStripSize");
    if (b_Jet_hfcentralEtaStripSize_) { b_Jet_hfcentralEtaStripSize_->SetAddress(&Jet_hfcentralEtaStripSize_); }
    b_Jet_hfsigmaEtaEta_ = tree->GetBranch("Jet_hfsigmaEtaEta");
    if (b_Jet_hfsigmaEtaEta_) { b_Jet_hfsigmaEtaEta_->SetAddress(&Jet_hfsigmaEtaEta_); }
    b_Jet_hfsigmaPhiPhi_ = tree->GetBranch("Jet_hfsigmaPhiPhi");
    if (b_Jet_hfsigmaPhiPhi_) { b_Jet_hfsigmaPhiPhi_->SetAddress(&Jet_hfsigmaPhiPhi_); }
    b_Jet_jetId_ = tree->GetBranch("Jet_jetId");
    if (b_Jet_jetId_) { b_Jet_jetId_->SetAddress(&Jet_jetId_); }
    b_Jet_mass_ = tree->GetBranch("Jet_mass");
    if (b_Jet_mass_) { b_Jet_mass_->SetAddress(&Jet_mass_); }
    b_Jet_mass_jerDown_ = tree->GetBranch("Jet_mass_jerDown");
    if (b_Jet_mass_jerDown_) { b_Jet_mass_jerDown_->SetAddress(&Jet_mass_jerDown_); }
    b_Jet_mass_jerUp_ = tree->GetBranch("Jet_mass_jerUp");
    if (b_Jet_mass_jerUp_) { b_Jet_mass_jerUp_->SetAddress(&Jet_mass_jerUp_); }
    b_Jet_mass_jesHEMIssueDown_ = tree->GetBranch("Jet_mass_jesHEMIssueDown");
    if (b_Jet_mass_jesHEMIssueDown_) { b_Jet_mass_jesHEMIssueDown_->SetAddress(&Jet_mass_jesHEMIssueDown_); }
    b_Jet_mass_jesHEMIssueUp_ = tree->GetBranch("Jet_mass_jesHEMIssueUp");
    if (b_Jet_mass_jesHEMIssueUp_) { b_Jet_mass_jesHEMIssueUp_->SetAddress(&Jet_mass_jesHEMIssueUp_); }
    b_Jet_mass_jesTotalDown_ = tree->GetBranch("Jet_mass_jesTotalDown");
    if (b_Jet_mass_jesTotalDown_) { b_Jet_mass_jesTotalDown_->SetAddress(&Jet_mass_jesTotalDown_); }
    b_Jet_mass_jesTotalUp_ = tree->GetBranch("Jet_mass_jesTotalUp");
    if (b_Jet_mass_jesTotalUp_) { b_Jet_mass_jesTotalUp_->SetAddress(&Jet_mass_jesTotalUp_); }
    b_Jet_mass_nom_ = tree->GetBranch("Jet_mass_nom");
    if (b_Jet_mass_nom_) { b_Jet_mass_nom_->SetAddress(&Jet_mass_nom_); }
    b_Jet_mass_raw_ = tree->GetBranch("Jet_mass_raw");
    if (b_Jet_mass_raw_) { b_Jet_mass_raw_->SetAddress(&Jet_mass_raw_); }
    b_Jet_muEF_ = tree->GetBranch("Jet_muEF");
    if (b_Jet_muEF_) { b_Jet_muEF_->SetAddress(&Jet_muEF_); }
    b_Jet_muonIdx1_ = tree->GetBranch("Jet_muonIdx1");
    if (b_Jet_muonIdx1_) { b_Jet_muonIdx1_->SetAddress(&Jet_muonIdx1_); }
    b_Jet_muonIdx2_ = tree->GetBranch("Jet_muonIdx2");
    if (b_Jet_muonIdx2_) { b_Jet_muonIdx2_->SetAddress(&Jet_muonIdx2_); }
    b_Jet_muonSubtrFactor_ = tree->GetBranch("Jet_muonSubtrFactor");
    if (b_Jet_muonSubtrFactor_) { b_Jet_muonSubtrFactor_->SetAddress(&Jet_muonSubtrFactor_); }
    b_Jet_nConstituents_ = tree->GetBranch("Jet_nConstituents");
    if (b_Jet_nConstituents_) { b_Jet_nConstituents_->SetAddress(&Jet_nConstituents_); }
    b_Jet_nElectrons_ = tree->GetBranch("Jet_nElectrons");
    if (b_Jet_nElectrons_) { b_Jet_nElectrons_->SetAddress(&Jet_nElectrons_); }
    b_Jet_nMuons_ = tree->GetBranch("Jet_nMuons");
    if (b_Jet_nMuons_) { b_Jet_nMuons_->SetAddress(&Jet_nMuons_); }
    b_Jet_nSVs_ = tree->GetBranch("Jet_nSVs");
    if (b_Jet_nSVs_) { b_Jet_nSVs_->SetAddress(&Jet_nSVs_); }
    b_Jet_neEmEF_ = tree->GetBranch("Jet_neEmEF");
    if (b_Jet_neEmEF_) { b_Jet_neEmEF_->SetAddress(&Jet_neEmEF_); }
    b_Jet_neHEF_ = tree->GetBranch("Jet_neHEF");
    if (b_Jet_neHEF_) { b_Jet_neHEF_->SetAddress(&Jet_neHEF_); }
    b_Jet_partonFlavour_ = tree->GetBranch("Jet_partonFlavour");
    if (b_Jet_partonFlavour_) { b_Jet_partonFlavour_->SetAddress(&Jet_partonFlavour_); }
    b_Jet_phi_ = tree->GetBranch("Jet_phi");
    if (b_Jet_phi_) { b_Jet_phi_->SetAddress(&Jet_phi_); }
    b_Jet_pt_ = tree->GetBranch("Jet_pt");
    if (b_Jet_pt_) { b_Jet_pt_->SetAddress(&Jet_pt_); }
    b_Jet_pt_jerDown_ = tree->GetBranch("Jet_pt_jerDown");
    if (b_Jet_pt_jerDown_) { b_Jet_pt_jerDown_->SetAddress(&Jet_pt_jerDown_); }
    b_Jet_pt_jerUp_ = tree->GetBranch("Jet_pt_jerUp");
    if (b_Jet_pt_jerUp_) { b_Jet_pt_jerUp_->SetAddress(&Jet_pt_jerUp_); }
    b_Jet_pt_jesHEMIssueDown_ = tree->GetBranch("Jet_pt_jesHEMIssueDown");
    if (b_Jet_pt_jesHEMIssueDown_) { b_Jet_pt_jesHEMIssueDown_->SetAddress(&Jet_pt_jesHEMIssueDown_); }
    b_Jet_pt_jesHEMIssueUp_ = tree->GetBranch("Jet_pt_jesHEMIssueUp");
    if (b_Jet_pt_jesHEMIssueUp_) { b_Jet_pt_jesHEMIssueUp_->SetAddress(&Jet_pt_jesHEMIssueUp_); }
    b_Jet_pt_jesTotalDown_ = tree->GetBranch("Jet_pt_jesTotalDown");
    if (b_Jet_pt_jesTotalDown_) { b_Jet_pt_jesTotalDown_->SetAddress(&Jet_pt_jesTotalDown_); }
    b_Jet_pt_jesTotalUp_ = tree->GetBranch("Jet_pt_jesTotalUp");
    if (b_Jet_pt_jesTotalUp_) { b_Jet_pt_jesTotalUp_->SetAddress(&Jet_pt_jesTotalUp_); }
    b_Jet_pt_nom_ = tree->GetBranch("Jet_pt_nom");
    if (b_Jet_pt_nom_) { b_Jet_pt_nom_->SetAddress(&Jet_pt_nom_); }
    b_Jet_pt_raw_ = tree->GetBranch("Jet_pt_raw");
    if (b_Jet_pt_raw_) { b_Jet_pt_raw_->SetAddress(&Jet_pt_raw_); }
    b_Jet_puId_ = tree->GetBranch("Jet_puId");
    if (b_Jet_puId_) { b_Jet_puId_->SetAddress(&Jet_puId_); }
    b_Jet_puIdDisc_ = tree->GetBranch("Jet_puIdDisc");
    if (b_Jet_puIdDisc_) { b_Jet_puIdDisc_->SetAddress(&Jet_puIdDisc_); }
    b_Jet_qgl_ = tree->GetBranch("Jet_qgl");
    if (b_Jet_qgl_) { b_Jet_qgl_->SetAddress(&Jet_qgl_); }
    b_Jet_rawFactor_ = tree->GetBranch("Jet_rawFactor");
    if (b_Jet_rawFactor_) { b_Jet_rawFactor_->SetAddress(&Jet_rawFactor_); }
    b_Jet_svIdx1_ = tree->GetBranch("Jet_svIdx1");
    if (b_Jet_svIdx1_) { b_Jet_svIdx1_->SetAddress(&Jet_svIdx1_); }
    b_Jet_svIdx2_ = tree->GetBranch("Jet_svIdx2");
    if (b_Jet_svIdx2_) { b_Jet_svIdx2_->SetAddress(&Jet_svIdx2_); }
    b_L1PreFiringWeight_Dn_ = tree->GetBranch("L1PreFiringWeight_Dn");
    if (b_L1PreFiringWeight_Dn_) { b_L1PreFiringWeight_Dn_->SetAddress(&L1PreFiringWeight_Dn_); }
    b_L1PreFiringWeight_ECAL_Dn_ = tree->GetBranch("L1PreFiringWeight_ECAL_Dn");
    if (b_L1PreFiringWeight_ECAL_Dn_) { b_L1PreFiringWeight_ECAL_Dn_->SetAddress(&L1PreFiringWeight_ECAL_Dn_); }
    b_L1PreFiringWeight_ECAL_Nom_ = tree->GetBranch("L1PreFiringWeight_ECAL_Nom");
    if (b_L1PreFiringWeight_ECAL_Nom_) { b_L1PreFiringWeight_ECAL_Nom_->SetAddress(&L1PreFiringWeight_ECAL_Nom_); }
    b_L1PreFiringWeight_ECAL_Up_ = tree->GetBranch("L1PreFiringWeight_ECAL_Up");
    if (b_L1PreFiringWeight_ECAL_Up_) { b_L1PreFiringWeight_ECAL_Up_->SetAddress(&L1PreFiringWeight_ECAL_Up_); }
    b_L1PreFiringWeight_Muon_Nom_ = tree->GetBranch("L1PreFiringWeight_Muon_Nom");
    if (b_L1PreFiringWeight_Muon_Nom_) { b_L1PreFiringWeight_Muon_Nom_->SetAddress(&L1PreFiringWeight_Muon_Nom_); }
    b_L1PreFiringWeight_Muon_StatDn_ = tree->GetBranch("L1PreFiringWeight_Muon_StatDn");
    if (b_L1PreFiringWeight_Muon_StatDn_) { b_L1PreFiringWeight_Muon_StatDn_->SetAddress(&L1PreFiringWeight_Muon_StatDn_); }
    b_L1PreFiringWeight_Muon_StatUp_ = tree->GetBranch("L1PreFiringWeight_Muon_StatUp");
    if (b_L1PreFiringWeight_Muon_StatUp_) { b_L1PreFiringWeight_Muon_StatUp_->SetAddress(&L1PreFiringWeight_Muon_StatUp_); }
    b_L1PreFiringWeight_Muon_SystDn_ = tree->GetBranch("L1PreFiringWeight_Muon_SystDn");
    if (b_L1PreFiringWeight_Muon_SystDn_) { b_L1PreFiringWeight_Muon_SystDn_->SetAddress(&L1PreFiringWeight_Muon_SystDn_); }
    b_L1PreFiringWeight_Muon_SystUp_ = tree->GetBranch("L1PreFiringWeight_Muon_SystUp");
    if (b_L1PreFiringWeight_Muon_SystUp_) { b_L1PreFiringWeight_Muon_SystUp_->SetAddress(&L1PreFiringWeight_Muon_SystUp_); }
    b_L1PreFiringWeight_Nom_ = tree->GetBranch("L1PreFiringWeight_Nom");
    if (b_L1PreFiringWeight_Nom_) { b_L1PreFiringWeight_Nom_->SetAddress(&L1PreFiringWeight_Nom_); }
    b_L1PreFiringWeight_Up_ = tree->GetBranch("L1PreFiringWeight_Up");
    if (b_L1PreFiringWeight_Up_) { b_L1PreFiringWeight_Up_->SetAddress(&L1PreFiringWeight_Up_); }
    b_L1Reco_step_ = tree->GetBranch("L1Reco_step");
    if (b_L1Reco_step_) { b_L1Reco_step_->SetAddress(&L1Reco_step_); }
    b_L1_AlwaysTrue_ = tree->GetBranch("L1_AlwaysTrue");
    if (b_L1_AlwaysTrue_) { b_L1_AlwaysTrue_->SetAddress(&L1_AlwaysTrue_); }
    b_L1_BPTX_AND_NIM_ = tree->GetBranch("L1_BPTX_AND_NIM");
    if (b_L1_BPTX_AND_NIM_) { b_L1_BPTX_AND_NIM_->SetAddress(&L1_BPTX_AND_NIM_); }
    b_L1_BPTX_AND_Ref1_VME_ = tree->GetBranch("L1_BPTX_AND_Ref1_VME");
    if (b_L1_BPTX_AND_Ref1_VME_) { b_L1_BPTX_AND_Ref1_VME_->SetAddress(&L1_BPTX_AND_Ref1_VME_); }
    b_L1_BPTX_AND_Ref2_NIM_ = tree->GetBranch("L1_BPTX_AND_Ref2_NIM");
    if (b_L1_BPTX_AND_Ref2_NIM_) { b_L1_BPTX_AND_Ref2_NIM_->SetAddress(&L1_BPTX_AND_Ref2_NIM_); }
    b_L1_BPTX_AND_Ref3_VME_ = tree->GetBranch("L1_BPTX_AND_Ref3_VME");
    if (b_L1_BPTX_AND_Ref3_VME_) { b_L1_BPTX_AND_Ref3_VME_->SetAddress(&L1_BPTX_AND_Ref3_VME_); }
    b_L1_BPTX_AND_Ref4_VME_ = tree->GetBranch("L1_BPTX_AND_Ref4_VME");
    if (b_L1_BPTX_AND_Ref4_VME_) { b_L1_BPTX_AND_Ref4_VME_->SetAddress(&L1_BPTX_AND_Ref4_VME_); }
    b_L1_BPTX_B1NotB2_NIM_ = tree->GetBranch("L1_BPTX_B1NotB2_NIM");
    if (b_L1_BPTX_B1NotB2_NIM_) { b_L1_BPTX_B1NotB2_NIM_->SetAddress(&L1_BPTX_B1NotB2_NIM_); }
    b_L1_BPTX_B1NotB2_VME_ = tree->GetBranch("L1_BPTX_B1NotB2_VME");
    if (b_L1_BPTX_B1NotB2_VME_) { b_L1_BPTX_B1NotB2_VME_->SetAddress(&L1_BPTX_B1NotB2_VME_); }
    b_L1_BPTX_B1_NIM_ = tree->GetBranch("L1_BPTX_B1_NIM");
    if (b_L1_BPTX_B1_NIM_) { b_L1_BPTX_B1_NIM_->SetAddress(&L1_BPTX_B1_NIM_); }
    b_L1_BPTX_B2NotB1_NIM_ = tree->GetBranch("L1_BPTX_B2NotB1_NIM");
    if (b_L1_BPTX_B2NotB1_NIM_) { b_L1_BPTX_B2NotB1_NIM_->SetAddress(&L1_BPTX_B2NotB1_NIM_); }
    b_L1_BPTX_B2NotB1_VME_ = tree->GetBranch("L1_BPTX_B2NotB1_VME");
    if (b_L1_BPTX_B2NotB1_VME_) { b_L1_BPTX_B2NotB1_VME_->SetAddress(&L1_BPTX_B2NotB1_VME_); }
    b_L1_BPTX_B2_NIM_ = tree->GetBranch("L1_BPTX_B2_NIM");
    if (b_L1_BPTX_B2_NIM_) { b_L1_BPTX_B2_NIM_->SetAddress(&L1_BPTX_B2_NIM_); }
    b_L1_BPTX_BeamGas_B1_VME_ = tree->GetBranch("L1_BPTX_BeamGas_B1_VME");
    if (b_L1_BPTX_BeamGas_B1_VME_) { b_L1_BPTX_BeamGas_B1_VME_->SetAddress(&L1_BPTX_BeamGas_B1_VME_); }
    b_L1_BPTX_BeamGas_B2_VME_ = tree->GetBranch("L1_BPTX_BeamGas_B2_VME");
    if (b_L1_BPTX_BeamGas_B2_VME_) { b_L1_BPTX_BeamGas_B2_VME_->SetAddress(&L1_BPTX_BeamGas_B2_VME_); }
    b_L1_BPTX_BeamGas_Ref1_VME_ = tree->GetBranch("L1_BPTX_BeamGas_Ref1_VME");
    if (b_L1_BPTX_BeamGas_Ref1_VME_) { b_L1_BPTX_BeamGas_Ref1_VME_->SetAddress(&L1_BPTX_BeamGas_Ref1_VME_); }
    b_L1_BPTX_BeamGas_Ref2_VME_ = tree->GetBranch("L1_BPTX_BeamGas_Ref2_VME");
    if (b_L1_BPTX_BeamGas_Ref2_VME_) { b_L1_BPTX_BeamGas_Ref2_VME_->SetAddress(&L1_BPTX_BeamGas_Ref2_VME_); }
    b_L1_BPTX_LUT1_AND_ = tree->GetBranch("L1_BPTX_LUT1_AND");
    if (b_L1_BPTX_LUT1_AND_) { b_L1_BPTX_LUT1_AND_->SetAddress(&L1_BPTX_LUT1_AND_); }
    b_L1_BPTX_LUT1_B1_ = tree->GetBranch("L1_BPTX_LUT1_B1");
    if (b_L1_BPTX_LUT1_B1_) { b_L1_BPTX_LUT1_B1_->SetAddress(&L1_BPTX_LUT1_B1_); }
    b_L1_BPTX_LUT1_B2_ = tree->GetBranch("L1_BPTX_LUT1_B2");
    if (b_L1_BPTX_LUT1_B2_) { b_L1_BPTX_LUT1_B2_->SetAddress(&L1_BPTX_LUT1_B2_); }
    b_L1_BPTX_LUT1_OR_ = tree->GetBranch("L1_BPTX_LUT1_OR");
    if (b_L1_BPTX_LUT1_OR_) { b_L1_BPTX_LUT1_OR_->SetAddress(&L1_BPTX_LUT1_OR_); }
    b_L1_BPTX_LUT2_AND_ = tree->GetBranch("L1_BPTX_LUT2_AND");
    if (b_L1_BPTX_LUT2_AND_) { b_L1_BPTX_LUT2_AND_->SetAddress(&L1_BPTX_LUT2_AND_); }
    b_L1_BPTX_LUT2_B1NotB2_ = tree->GetBranch("L1_BPTX_LUT2_B1NotB2");
    if (b_L1_BPTX_LUT2_B1NotB2_) { b_L1_BPTX_LUT2_B1NotB2_->SetAddress(&L1_BPTX_LUT2_B1NotB2_); }
    b_L1_BPTX_LUT2_B2NotB1_ = tree->GetBranch("L1_BPTX_LUT2_B2NotB1");
    if (b_L1_BPTX_LUT2_B2NotB1_) { b_L1_BPTX_LUT2_B2NotB1_->SetAddress(&L1_BPTX_LUT2_B2NotB1_); }
    b_L1_BPTX_LUT2_NotOR_ = tree->GetBranch("L1_BPTX_LUT2_NotOR");
    if (b_L1_BPTX_LUT2_NotOR_) { b_L1_BPTX_LUT2_NotOR_->SetAddress(&L1_BPTX_LUT2_NotOR_); }
    b_L1_BPTX_NotOR_NIM_ = tree->GetBranch("L1_BPTX_NotOR_NIM");
    if (b_L1_BPTX_NotOR_NIM_) { b_L1_BPTX_NotOR_NIM_->SetAddress(&L1_BPTX_NotOR_NIM_); }
    b_L1_BPTX_NotOR_VME_ = tree->GetBranch("L1_BPTX_NotOR_VME");
    if (b_L1_BPTX_NotOR_VME_) { b_L1_BPTX_NotOR_VME_->SetAddress(&L1_BPTX_NotOR_VME_); }
    b_L1_BPTX_OR_NIM_ = tree->GetBranch("L1_BPTX_OR_NIM");
    if (b_L1_BPTX_OR_NIM_) { b_L1_BPTX_OR_NIM_->SetAddress(&L1_BPTX_OR_NIM_); }
    b_L1_BPTX_OR_Ref3_VME_ = tree->GetBranch("L1_BPTX_OR_Ref3_VME");
    if (b_L1_BPTX_OR_Ref3_VME_) { b_L1_BPTX_OR_Ref3_VME_->SetAddress(&L1_BPTX_OR_Ref3_VME_); }
    b_L1_BPTX_OR_Ref4_VME_ = tree->GetBranch("L1_BPTX_OR_Ref4_VME");
    if (b_L1_BPTX_OR_Ref4_VME_) { b_L1_BPTX_OR_Ref4_VME_->SetAddress(&L1_BPTX_OR_Ref4_VME_); }
    b_L1_BPTX_RefAND_VME_ = tree->GetBranch("L1_BPTX_RefAND_VME");
    if (b_L1_BPTX_RefAND_VME_) { b_L1_BPTX_RefAND_VME_->SetAddress(&L1_BPTX_RefAND_VME_); }
    b_L1_BPTX_TRIG2_AND_ = tree->GetBranch("L1_BPTX_TRIG2_AND");
    if (b_L1_BPTX_TRIG2_AND_) { b_L1_BPTX_TRIG2_AND_->SetAddress(&L1_BPTX_TRIG2_AND_); }
    b_L1_BPTX_TRIG2_B1NotB2_ = tree->GetBranch("L1_BPTX_TRIG2_B1NotB2");
    if (b_L1_BPTX_TRIG2_B1NotB2_) { b_L1_BPTX_TRIG2_B1NotB2_->SetAddress(&L1_BPTX_TRIG2_B1NotB2_); }
    b_L1_BPTX_TRIG2_B2NotB1_ = tree->GetBranch("L1_BPTX_TRIG2_B2NotB1");
    if (b_L1_BPTX_TRIG2_B2NotB1_) { b_L1_BPTX_TRIG2_B2NotB1_->SetAddress(&L1_BPTX_TRIG2_B2NotB1_); }
    b_L1_BPTX_TRIG2_NotOR_ = tree->GetBranch("L1_BPTX_TRIG2_NotOR");
    if (b_L1_BPTX_TRIG2_NotOR_) { b_L1_BPTX_TRIG2_NotOR_->SetAddress(&L1_BPTX_TRIG2_NotOR_); }
    b_L1_BRIL_TRIG0_AND_ = tree->GetBranch("L1_BRIL_TRIG0_AND");
    if (b_L1_BRIL_TRIG0_AND_) { b_L1_BRIL_TRIG0_AND_->SetAddress(&L1_BRIL_TRIG0_AND_); }
    b_L1_BRIL_TRIG0_FstBunchInTrain_ = tree->GetBranch("L1_BRIL_TRIG0_FstBunchInTrain");
    if (b_L1_BRIL_TRIG0_FstBunchInTrain_) { b_L1_BRIL_TRIG0_FstBunchInTrain_->SetAddress(&L1_BRIL_TRIG0_FstBunchInTrain_); }
    b_L1_BRIL_TRIG0_OR_ = tree->GetBranch("L1_BRIL_TRIG0_OR");
    if (b_L1_BRIL_TRIG0_OR_) { b_L1_BRIL_TRIG0_OR_->SetAddress(&L1_BRIL_TRIG0_OR_); }
    b_L1_BRIL_TRIG0_delayedAND_ = tree->GetBranch("L1_BRIL_TRIG0_delayedAND");
    if (b_L1_BRIL_TRIG0_delayedAND_) { b_L1_BRIL_TRIG0_delayedAND_->SetAddress(&L1_BRIL_TRIG0_delayedAND_); }
    b_L1_BRIL_TRIG3_AND_ = tree->GetBranch("L1_BRIL_TRIG3_AND");
    if (b_L1_BRIL_TRIG3_AND_) { b_L1_BRIL_TRIG3_AND_->SetAddress(&L1_BRIL_TRIG3_AND_); }
    b_L1_BRIL_TRIG3_delayedAND_ = tree->GetBranch("L1_BRIL_TRIG3_delayedAND");
    if (b_L1_BRIL_TRIG3_delayedAND_) { b_L1_BRIL_TRIG3_delayedAND_->SetAddress(&L1_BRIL_TRIG3_delayedAND_); }
    b_L1_BRIL_TRIG3_ref_ = tree->GetBranch("L1_BRIL_TRIG3_ref");
    if (b_L1_BRIL_TRIG3_ref_) { b_L1_BRIL_TRIG3_ref_->SetAddress(&L1_BRIL_TRIG3_ref_); }
    b_L1_BeamGasB1_ = tree->GetBranch("L1_BeamGasB1");
    if (b_L1_BeamGasB1_) { b_L1_BeamGasB1_->SetAddress(&L1_BeamGasB1_); }
    b_L1_BeamGasB2_ = tree->GetBranch("L1_BeamGasB2");
    if (b_L1_BeamGasB2_) { b_L1_BeamGasB2_->SetAddress(&L1_BeamGasB2_); }
    b_L1_BeamGasMinus_ = tree->GetBranch("L1_BeamGasMinus");
    if (b_L1_BeamGasMinus_) { b_L1_BeamGasMinus_->SetAddress(&L1_BeamGasMinus_); }
    b_L1_BeamGasPlus_ = tree->GetBranch("L1_BeamGasPlus");
    if (b_L1_BeamGasPlus_) { b_L1_BeamGasPlus_->SetAddress(&L1_BeamGasPlus_); }
    b_L1_BptxMinus_ = tree->GetBranch("L1_BptxMinus");
    if (b_L1_BptxMinus_) { b_L1_BptxMinus_->SetAddress(&L1_BptxMinus_); }
    b_L1_BptxOR_ = tree->GetBranch("L1_BptxOR");
    if (b_L1_BptxOR_) { b_L1_BptxOR_->SetAddress(&L1_BptxOR_); }
    b_L1_BptxPlus_ = tree->GetBranch("L1_BptxPlus");
    if (b_L1_BptxPlus_) { b_L1_BptxPlus_->SetAddress(&L1_BptxPlus_); }
    b_L1_BptxXOR_ = tree->GetBranch("L1_BptxXOR");
    if (b_L1_BptxXOR_) { b_L1_BptxXOR_->SetAddress(&L1_BptxXOR_); }
    b_L1_CDC_3_TOP120_DPHI1p570_3p142_ = tree->GetBranch("L1_CDC_3_TOP120_DPHI1p570_3p142");
    if (b_L1_CDC_3_TOP120_DPHI1p570_3p142_) { b_L1_CDC_3_TOP120_DPHI1p570_3p142_->SetAddress(&L1_CDC_3_TOP120_DPHI1p570_3p142_); }
    b_L1_CDC_3_TOP120_DPHI2p094_3p142_ = tree->GetBranch("L1_CDC_3_TOP120_DPHI2p094_3p142");
    if (b_L1_CDC_3_TOP120_DPHI2p094_3p142_) { b_L1_CDC_3_TOP120_DPHI2p094_3p142_->SetAddress(&L1_CDC_3_TOP120_DPHI2p094_3p142_); }
    b_L1_CDC_3_TOP120_DPHI2p618_3p142_ = tree->GetBranch("L1_CDC_3_TOP120_DPHI2p618_3p142");
    if (b_L1_CDC_3_TOP120_DPHI2p618_3p142_) { b_L1_CDC_3_TOP120_DPHI2p618_3p142_->SetAddress(&L1_CDC_3_TOP120_DPHI2p618_3p142_); }
    b_L1_CDC_3_TOP_DPHI2p618_3p142_ = tree->GetBranch("L1_CDC_3_TOP_DPHI2p618_3p142");
    if (b_L1_CDC_3_TOP_DPHI2p618_3p142_) { b_L1_CDC_3_TOP_DPHI2p618_3p142_->SetAddress(&L1_CDC_3_TOP_DPHI2p618_3p142_); }
    b_L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142_ = tree->GetBranch("L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142");
    if (b_L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142_) { b_L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142_->SetAddress(&L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142_); }
    b_L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142_ = tree->GetBranch("L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142");
    if (b_L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142_) { b_L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142_->SetAddress(&L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142_); }
    b_L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142_ = tree->GetBranch("L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142");
    if (b_L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142_) { b_L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142_->SetAddress(&L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142_); }
    b_L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142_ = tree->GetBranch("L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142");
    if (b_L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142_) { b_L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142_->SetAddress(&L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142_); }
    b_L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142_ = tree->GetBranch("L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142");
    if (b_L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142_) { b_L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142_->SetAddress(&L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142_); }
    b_L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142_ = tree->GetBranch("L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142");
    if (b_L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142_) { b_L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142_->SetAddress(&L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142_); }
    b_L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142_ = tree->GetBranch("L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142");
    if (b_L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142_) { b_L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142_->SetAddress(&L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142_); }
    b_L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142_ = tree->GetBranch("L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142");
    if (b_L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142_) { b_L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142_->SetAddress(&L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142_); }
    b_L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142_ = tree->GetBranch("L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142");
    if (b_L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142_) { b_L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142_->SetAddress(&L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142_); }
    b_L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142_ = tree->GetBranch("L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142");
    if (b_L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142_) { b_L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142_->SetAddress(&L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142_); }
    b_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_ = tree->GetBranch("L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142");
    if (b_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_) { b_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_->SetAddress(&L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_); }
    b_L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142_ = tree->GetBranch("L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142");
    if (b_L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142_) { b_L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142_->SetAddress(&L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142_); }
    b_L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142_ = tree->GetBranch("L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142");
    if (b_L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142_) { b_L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142_->SetAddress(&L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142_); }
    b_L1_CDCp1_3_TOP120_DPHI2p618_3p142_ = tree->GetBranch("L1_CDCp1_3_TOP120_DPHI2p618_3p142");
    if (b_L1_CDCp1_3_TOP120_DPHI2p618_3p142_) { b_L1_CDCp1_3_TOP120_DPHI2p618_3p142_->SetAddress(&L1_CDCp1_3_TOP120_DPHI2p618_3p142_); }
    b_L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142_ = tree->GetBranch("L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142");
    if (b_L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142_) { b_L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142_->SetAddress(&L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142_); }
    b_L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142_ = tree->GetBranch("L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142");
    if (b_L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142_) { b_L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142_->SetAddress(&L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142_); }
    b_L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142_ = tree->GetBranch("L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142");
    if (b_L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142_) { b_L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142_->SetAddress(&L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142_); }
    b_L1_CastorGap_BptxAND_ = tree->GetBranch("L1_CastorGap_BptxAND");
    if (b_L1_CastorGap_BptxAND_) { b_L1_CastorGap_BptxAND_->SetAddress(&L1_CastorGap_BptxAND_); }
    b_L1_CastorHaloMuon_ = tree->GetBranch("L1_CastorHaloMuon");
    if (b_L1_CastorHaloMuon_) { b_L1_CastorHaloMuon_->SetAddress(&L1_CastorHaloMuon_); }
    b_L1_CastorHaloMuon_BptxAND_ = tree->GetBranch("L1_CastorHaloMuon_BptxAND");
    if (b_L1_CastorHaloMuon_BptxAND_) { b_L1_CastorHaloMuon_BptxAND_->SetAddress(&L1_CastorHaloMuon_BptxAND_); }
    b_L1_CastorHighJet_BptxAND_ = tree->GetBranch("L1_CastorHighJet_BptxAND");
    if (b_L1_CastorHighJet_BptxAND_) { b_L1_CastorHighJet_BptxAND_->SetAddress(&L1_CastorHighJet_BptxAND_); }
    b_L1_CastorMediumJet_BptxAND_ = tree->GetBranch("L1_CastorMediumJet_BptxAND");
    if (b_L1_CastorMediumJet_BptxAND_) { b_L1_CastorMediumJet_BptxAND_->SetAddress(&L1_CastorMediumJet_BptxAND_); }
    b_L1_DoubleEG10_er1p2_dR_Max0p6_ = tree->GetBranch("L1_DoubleEG10_er1p2_dR_Max0p6");
    if (b_L1_DoubleEG10_er1p2_dR_Max0p6_) { b_L1_DoubleEG10_er1p2_dR_Max0p6_->SetAddress(&L1_DoubleEG10_er1p2_dR_Max0p6_); }
    b_L1_DoubleEG10p5_er1p2_dR_Max0p6_ = tree->GetBranch("L1_DoubleEG10p5_er1p2_dR_Max0p6");
    if (b_L1_DoubleEG10p5_er1p2_dR_Max0p6_) { b_L1_DoubleEG10p5_er1p2_dR_Max0p6_->SetAddress(&L1_DoubleEG10p5_er1p2_dR_Max0p6_); }
    b_L1_DoubleEG11_er1p2_dR_Max0p6_ = tree->GetBranch("L1_DoubleEG11_er1p2_dR_Max0p6");
    if (b_L1_DoubleEG11_er1p2_dR_Max0p6_) { b_L1_DoubleEG11_er1p2_dR_Max0p6_->SetAddress(&L1_DoubleEG11_er1p2_dR_Max0p6_); }
    b_L1_DoubleEG4_er1p2_dR_Max0p9_ = tree->GetBranch("L1_DoubleEG4_er1p2_dR_Max0p9");
    if (b_L1_DoubleEG4_er1p2_dR_Max0p9_) { b_L1_DoubleEG4_er1p2_dR_Max0p9_->SetAddress(&L1_DoubleEG4_er1p2_dR_Max0p9_); }
    b_L1_DoubleEG4p5_er1p2_dR_Max0p9_ = tree->GetBranch("L1_DoubleEG4p5_er1p2_dR_Max0p9");
    if (b_L1_DoubleEG4p5_er1p2_dR_Max0p9_) { b_L1_DoubleEG4p5_er1p2_dR_Max0p9_->SetAddress(&L1_DoubleEG4p5_er1p2_dR_Max0p9_); }
    b_L1_DoubleEG5_er1p2_dR_Max0p9_ = tree->GetBranch("L1_DoubleEG5_er1p2_dR_Max0p9");
    if (b_L1_DoubleEG5_er1p2_dR_Max0p9_) { b_L1_DoubleEG5_er1p2_dR_Max0p9_->SetAddress(&L1_DoubleEG5_er1p2_dR_Max0p9_); }
    b_L1_DoubleEG5p5_er1p2_dR_Max0p8_ = tree->GetBranch("L1_DoubleEG5p5_er1p2_dR_Max0p8");
    if (b_L1_DoubleEG5p5_er1p2_dR_Max0p8_) { b_L1_DoubleEG5p5_er1p2_dR_Max0p8_->SetAddress(&L1_DoubleEG5p5_er1p2_dR_Max0p8_); }
    b_L1_DoubleEG6_HTT240er_ = tree->GetBranch("L1_DoubleEG6_HTT240er");
    if (b_L1_DoubleEG6_HTT240er_) { b_L1_DoubleEG6_HTT240er_->SetAddress(&L1_DoubleEG6_HTT240er_); }
    b_L1_DoubleEG6_HTT250er_ = tree->GetBranch("L1_DoubleEG6_HTT250er");
    if (b_L1_DoubleEG6_HTT250er_) { b_L1_DoubleEG6_HTT250er_->SetAddress(&L1_DoubleEG6_HTT250er_); }
    b_L1_DoubleEG6_HTT255_ = tree->GetBranch("L1_DoubleEG6_HTT255");
    if (b_L1_DoubleEG6_HTT255_) { b_L1_DoubleEG6_HTT255_->SetAddress(&L1_DoubleEG6_HTT255_); }
    b_L1_DoubleEG6_HTT255er_ = tree->GetBranch("L1_DoubleEG6_HTT255er");
    if (b_L1_DoubleEG6_HTT255er_) { b_L1_DoubleEG6_HTT255er_->SetAddress(&L1_DoubleEG6_HTT255er_); }
    b_L1_DoubleEG6_HTT270er_ = tree->GetBranch("L1_DoubleEG6_HTT270er");
    if (b_L1_DoubleEG6_HTT270er_) { b_L1_DoubleEG6_HTT270er_->SetAddress(&L1_DoubleEG6_HTT270er_); }
    b_L1_DoubleEG6_HTT300er_ = tree->GetBranch("L1_DoubleEG6_HTT300er");
    if (b_L1_DoubleEG6_HTT300er_) { b_L1_DoubleEG6_HTT300er_->SetAddress(&L1_DoubleEG6_HTT300er_); }
    b_L1_DoubleEG6_er1p2_dR_Max0p8_ = tree->GetBranch("L1_DoubleEG6_er1p2_dR_Max0p8");
    if (b_L1_DoubleEG6_er1p2_dR_Max0p8_) { b_L1_DoubleEG6_er1p2_dR_Max0p8_->SetAddress(&L1_DoubleEG6_er1p2_dR_Max0p8_); }
    b_L1_DoubleEG6p5_er1p2_dR_Max0p8_ = tree->GetBranch("L1_DoubleEG6p5_er1p2_dR_Max0p8");
    if (b_L1_DoubleEG6p5_er1p2_dR_Max0p8_) { b_L1_DoubleEG6p5_er1p2_dR_Max0p8_->SetAddress(&L1_DoubleEG6p5_er1p2_dR_Max0p8_); }
    b_L1_DoubleEG7_er1p2_dR_Max0p8_ = tree->GetBranch("L1_DoubleEG7_er1p2_dR_Max0p8");
    if (b_L1_DoubleEG7_er1p2_dR_Max0p8_) { b_L1_DoubleEG7_er1p2_dR_Max0p8_->SetAddress(&L1_DoubleEG7_er1p2_dR_Max0p8_); }
    b_L1_DoubleEG7p5_er1p2_dR_Max0p7_ = tree->GetBranch("L1_DoubleEG7p5_er1p2_dR_Max0p7");
    if (b_L1_DoubleEG7p5_er1p2_dR_Max0p7_) { b_L1_DoubleEG7p5_er1p2_dR_Max0p7_->SetAddress(&L1_DoubleEG7p5_er1p2_dR_Max0p7_); }
    b_L1_DoubleEG8_er1p2_dR_Max0p7_ = tree->GetBranch("L1_DoubleEG8_er1p2_dR_Max0p7");
    if (b_L1_DoubleEG8_er1p2_dR_Max0p7_) { b_L1_DoubleEG8_er1p2_dR_Max0p7_->SetAddress(&L1_DoubleEG8_er1p2_dR_Max0p7_); }
    b_L1_DoubleEG8er2p5_HTT260er_ = tree->GetBranch("L1_DoubleEG8er2p5_HTT260er");
    if (b_L1_DoubleEG8er2p5_HTT260er_) { b_L1_DoubleEG8er2p5_HTT260er_->SetAddress(&L1_DoubleEG8er2p5_HTT260er_); }
    b_L1_DoubleEG8er2p5_HTT280er_ = tree->GetBranch("L1_DoubleEG8er2p5_HTT280er");
    if (b_L1_DoubleEG8er2p5_HTT280er_) { b_L1_DoubleEG8er2p5_HTT280er_->SetAddress(&L1_DoubleEG8er2p5_HTT280er_); }
    b_L1_DoubleEG8er2p5_HTT300er_ = tree->GetBranch("L1_DoubleEG8er2p5_HTT300er");
    if (b_L1_DoubleEG8er2p5_HTT300er_) { b_L1_DoubleEG8er2p5_HTT300er_->SetAddress(&L1_DoubleEG8er2p5_HTT300er_); }
    b_L1_DoubleEG8er2p5_HTT320er_ = tree->GetBranch("L1_DoubleEG8er2p5_HTT320er");
    if (b_L1_DoubleEG8er2p5_HTT320er_) { b_L1_DoubleEG8er2p5_HTT320er_->SetAddress(&L1_DoubleEG8er2p5_HTT320er_); }
    b_L1_DoubleEG8er2p5_HTT340er_ = tree->GetBranch("L1_DoubleEG8er2p5_HTT340er");
    if (b_L1_DoubleEG8er2p5_HTT340er_) { b_L1_DoubleEG8er2p5_HTT340er_->SetAddress(&L1_DoubleEG8er2p5_HTT340er_); }
    b_L1_DoubleEG8er2p6_HTT255er_ = tree->GetBranch("L1_DoubleEG8er2p6_HTT255er");
    if (b_L1_DoubleEG8er2p6_HTT255er_) { b_L1_DoubleEG8er2p6_HTT255er_->SetAddress(&L1_DoubleEG8er2p6_HTT255er_); }
    b_L1_DoubleEG8er2p6_HTT270er_ = tree->GetBranch("L1_DoubleEG8er2p6_HTT270er");
    if (b_L1_DoubleEG8er2p6_HTT270er_) { b_L1_DoubleEG8er2p6_HTT270er_->SetAddress(&L1_DoubleEG8er2p6_HTT270er_); }
    b_L1_DoubleEG8er2p6_HTT300er_ = tree->GetBranch("L1_DoubleEG8er2p6_HTT300er");
    if (b_L1_DoubleEG8er2p6_HTT300er_) { b_L1_DoubleEG8er2p6_HTT300er_->SetAddress(&L1_DoubleEG8er2p6_HTT300er_); }
    b_L1_DoubleEG8p5_er1p2_dR_Max0p7_ = tree->GetBranch("L1_DoubleEG8p5_er1p2_dR_Max0p7");
    if (b_L1_DoubleEG8p5_er1p2_dR_Max0p7_) { b_L1_DoubleEG8p5_er1p2_dR_Max0p7_->SetAddress(&L1_DoubleEG8p5_er1p2_dR_Max0p7_); }
    b_L1_DoubleEG9_er1p2_dR_Max0p7_ = tree->GetBranch("L1_DoubleEG9_er1p2_dR_Max0p7");
    if (b_L1_DoubleEG9_er1p2_dR_Max0p7_) { b_L1_DoubleEG9_er1p2_dR_Max0p7_->SetAddress(&L1_DoubleEG9_er1p2_dR_Max0p7_); }
    b_L1_DoubleEG9p5_er1p2_dR_Max0p6_ = tree->GetBranch("L1_DoubleEG9p5_er1p2_dR_Max0p6");
    if (b_L1_DoubleEG9p5_er1p2_dR_Max0p6_) { b_L1_DoubleEG9p5_er1p2_dR_Max0p6_->SetAddress(&L1_DoubleEG9p5_er1p2_dR_Max0p6_); }
    b_L1_DoubleEG_15_10_ = tree->GetBranch("L1_DoubleEG_15_10");
    if (b_L1_DoubleEG_15_10_) { b_L1_DoubleEG_15_10_->SetAddress(&L1_DoubleEG_15_10_); }
    b_L1_DoubleEG_15_10_er2p5_ = tree->GetBranch("L1_DoubleEG_15_10_er2p5");
    if (b_L1_DoubleEG_15_10_er2p5_) { b_L1_DoubleEG_15_10_er2p5_->SetAddress(&L1_DoubleEG_15_10_er2p5_); }
    b_L1_DoubleEG_18_17_ = tree->GetBranch("L1_DoubleEG_18_17");
    if (b_L1_DoubleEG_18_17_) { b_L1_DoubleEG_18_17_->SetAddress(&L1_DoubleEG_18_17_); }
    b_L1_DoubleEG_20_10_er2p5_ = tree->GetBranch("L1_DoubleEG_20_10_er2p5");
    if (b_L1_DoubleEG_20_10_er2p5_) { b_L1_DoubleEG_20_10_er2p5_->SetAddress(&L1_DoubleEG_20_10_er2p5_); }
    b_L1_DoubleEG_20_18_ = tree->GetBranch("L1_DoubleEG_20_18");
    if (b_L1_DoubleEG_20_18_) { b_L1_DoubleEG_20_18_->SetAddress(&L1_DoubleEG_20_18_); }
    b_L1_DoubleEG_22_10_ = tree->GetBranch("L1_DoubleEG_22_10");
    if (b_L1_DoubleEG_22_10_) { b_L1_DoubleEG_22_10_->SetAddress(&L1_DoubleEG_22_10_); }
    b_L1_DoubleEG_22_10_er2p5_ = tree->GetBranch("L1_DoubleEG_22_10_er2p5");
    if (b_L1_DoubleEG_22_10_er2p5_) { b_L1_DoubleEG_22_10_er2p5_->SetAddress(&L1_DoubleEG_22_10_er2p5_); }
    b_L1_DoubleEG_22_12_ = tree->GetBranch("L1_DoubleEG_22_12");
    if (b_L1_DoubleEG_22_12_) { b_L1_DoubleEG_22_12_->SetAddress(&L1_DoubleEG_22_12_); }
    b_L1_DoubleEG_22_15_ = tree->GetBranch("L1_DoubleEG_22_15");
    if (b_L1_DoubleEG_22_15_) { b_L1_DoubleEG_22_15_->SetAddress(&L1_DoubleEG_22_15_); }
    b_L1_DoubleEG_23_10_ = tree->GetBranch("L1_DoubleEG_23_10");
    if (b_L1_DoubleEG_23_10_) { b_L1_DoubleEG_23_10_->SetAddress(&L1_DoubleEG_23_10_); }
    b_L1_DoubleEG_24_17_ = tree->GetBranch("L1_DoubleEG_24_17");
    if (b_L1_DoubleEG_24_17_) { b_L1_DoubleEG_24_17_->SetAddress(&L1_DoubleEG_24_17_); }
    b_L1_DoubleEG_25_12_ = tree->GetBranch("L1_DoubleEG_25_12");
    if (b_L1_DoubleEG_25_12_) { b_L1_DoubleEG_25_12_->SetAddress(&L1_DoubleEG_25_12_); }
    b_L1_DoubleEG_25_12_er2p5_ = tree->GetBranch("L1_DoubleEG_25_12_er2p5");
    if (b_L1_DoubleEG_25_12_er2p5_) { b_L1_DoubleEG_25_12_er2p5_->SetAddress(&L1_DoubleEG_25_12_er2p5_); }
    b_L1_DoubleEG_25_13_ = tree->GetBranch("L1_DoubleEG_25_13");
    if (b_L1_DoubleEG_25_13_) { b_L1_DoubleEG_25_13_->SetAddress(&L1_DoubleEG_25_13_); }
    b_L1_DoubleEG_25_14_ = tree->GetBranch("L1_DoubleEG_25_14");
    if (b_L1_DoubleEG_25_14_) { b_L1_DoubleEG_25_14_->SetAddress(&L1_DoubleEG_25_14_); }
    b_L1_DoubleEG_25_14_er2p5_ = tree->GetBranch("L1_DoubleEG_25_14_er2p5");
    if (b_L1_DoubleEG_25_14_er2p5_) { b_L1_DoubleEG_25_14_er2p5_->SetAddress(&L1_DoubleEG_25_14_er2p5_); }
    b_L1_DoubleEG_27_14_er2p5_ = tree->GetBranch("L1_DoubleEG_27_14_er2p5");
    if (b_L1_DoubleEG_27_14_er2p5_) { b_L1_DoubleEG_27_14_er2p5_->SetAddress(&L1_DoubleEG_27_14_er2p5_); }
    b_L1_DoubleEG_Iso23_10_ = tree->GetBranch("L1_DoubleEG_Iso23_10");
    if (b_L1_DoubleEG_Iso23_10_) { b_L1_DoubleEG_Iso23_10_->SetAddress(&L1_DoubleEG_Iso23_10_); }
    b_L1_DoubleEG_Iso24_10_ = tree->GetBranch("L1_DoubleEG_Iso24_10");
    if (b_L1_DoubleEG_Iso24_10_) { b_L1_DoubleEG_Iso24_10_->SetAddress(&L1_DoubleEG_Iso24_10_); }
    b_L1_DoubleEG_LooseIso16_LooseIso12_er1p5_ = tree->GetBranch("L1_DoubleEG_LooseIso16_LooseIso12_er1p5");
    if (b_L1_DoubleEG_LooseIso16_LooseIso12_er1p5_) { b_L1_DoubleEG_LooseIso16_LooseIso12_er1p5_->SetAddress(&L1_DoubleEG_LooseIso16_LooseIso12_er1p5_); }
    b_L1_DoubleEG_LooseIso18_LooseIso12_er1p5_ = tree->GetBranch("L1_DoubleEG_LooseIso18_LooseIso12_er1p5");
    if (b_L1_DoubleEG_LooseIso18_LooseIso12_er1p5_) { b_L1_DoubleEG_LooseIso18_LooseIso12_er1p5_->SetAddress(&L1_DoubleEG_LooseIso18_LooseIso12_er1p5_); }
    b_L1_DoubleEG_LooseIso20_10_er2p5_ = tree->GetBranch("L1_DoubleEG_LooseIso20_10_er2p5");
    if (b_L1_DoubleEG_LooseIso20_10_er2p5_) { b_L1_DoubleEG_LooseIso20_10_er2p5_->SetAddress(&L1_DoubleEG_LooseIso20_10_er2p5_); }
    b_L1_DoubleEG_LooseIso20_LooseIso12_er1p5_ = tree->GetBranch("L1_DoubleEG_LooseIso20_LooseIso12_er1p5");
    if (b_L1_DoubleEG_LooseIso20_LooseIso12_er1p5_) { b_L1_DoubleEG_LooseIso20_LooseIso12_er1p5_->SetAddress(&L1_DoubleEG_LooseIso20_LooseIso12_er1p5_); }
    b_L1_DoubleEG_LooseIso22_10_er2p5_ = tree->GetBranch("L1_DoubleEG_LooseIso22_10_er2p5");
    if (b_L1_DoubleEG_LooseIso22_10_er2p5_) { b_L1_DoubleEG_LooseIso22_10_er2p5_->SetAddress(&L1_DoubleEG_LooseIso22_10_er2p5_); }
    b_L1_DoubleEG_LooseIso22_12_er2p5_ = tree->GetBranch("L1_DoubleEG_LooseIso22_12_er2p5");
    if (b_L1_DoubleEG_LooseIso22_12_er2p5_) { b_L1_DoubleEG_LooseIso22_12_er2p5_->SetAddress(&L1_DoubleEG_LooseIso22_12_er2p5_); }
    b_L1_DoubleEG_LooseIso22_LooseIso12_er1p5_ = tree->GetBranch("L1_DoubleEG_LooseIso22_LooseIso12_er1p5");
    if (b_L1_DoubleEG_LooseIso22_LooseIso12_er1p5_) { b_L1_DoubleEG_LooseIso22_LooseIso12_er1p5_->SetAddress(&L1_DoubleEG_LooseIso22_LooseIso12_er1p5_); }
    b_L1_DoubleEG_LooseIso23_10_ = tree->GetBranch("L1_DoubleEG_LooseIso23_10");
    if (b_L1_DoubleEG_LooseIso23_10_) { b_L1_DoubleEG_LooseIso23_10_->SetAddress(&L1_DoubleEG_LooseIso23_10_); }
    b_L1_DoubleEG_LooseIso24_10_ = tree->GetBranch("L1_DoubleEG_LooseIso24_10");
    if (b_L1_DoubleEG_LooseIso24_10_) { b_L1_DoubleEG_LooseIso24_10_->SetAddress(&L1_DoubleEG_LooseIso24_10_); }
    b_L1_DoubleEG_LooseIso25_12_er2p5_ = tree->GetBranch("L1_DoubleEG_LooseIso25_12_er2p5");
    if (b_L1_DoubleEG_LooseIso25_12_er2p5_) { b_L1_DoubleEG_LooseIso25_12_er2p5_->SetAddress(&L1_DoubleEG_LooseIso25_12_er2p5_); }
    b_L1_DoubleEG_LooseIso25_LooseIso12_er1p5_ = tree->GetBranch("L1_DoubleEG_LooseIso25_LooseIso12_er1p5");
    if (b_L1_DoubleEG_LooseIso25_LooseIso12_er1p5_) { b_L1_DoubleEG_LooseIso25_LooseIso12_er1p5_->SetAddress(&L1_DoubleEG_LooseIso25_LooseIso12_er1p5_); }
    b_L1_DoubleIsoTau26er_ = tree->GetBranch("L1_DoubleIsoTau26er");
    if (b_L1_DoubleIsoTau26er_) { b_L1_DoubleIsoTau26er_->SetAddress(&L1_DoubleIsoTau26er_); }
    b_L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5_ = tree->GetBranch("L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5");
    if (b_L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5_) { b_L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5_->SetAddress(&L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5_); }
    b_L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5_ = tree->GetBranch("L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5");
    if (b_L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5_) { b_L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5_->SetAddress(&L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5_); }
    b_L1_DoubleIsoTau27er_ = tree->GetBranch("L1_DoubleIsoTau27er");
    if (b_L1_DoubleIsoTau27er_) { b_L1_DoubleIsoTau27er_->SetAddress(&L1_DoubleIsoTau27er_); }
    b_L1_DoubleIsoTau28er_ = tree->GetBranch("L1_DoubleIsoTau28er");
    if (b_L1_DoubleIsoTau28er_) { b_L1_DoubleIsoTau28er_->SetAddress(&L1_DoubleIsoTau28er_); }
    b_L1_DoubleIsoTau28er2p1_ = tree->GetBranch("L1_DoubleIsoTau28er2p1");
    if (b_L1_DoubleIsoTau28er2p1_) { b_L1_DoubleIsoTau28er2p1_->SetAddress(&L1_DoubleIsoTau28er2p1_); }
    b_L1_DoubleIsoTau28er2p1_Mass_Max80_ = tree->GetBranch("L1_DoubleIsoTau28er2p1_Mass_Max80");
    if (b_L1_DoubleIsoTau28er2p1_Mass_Max80_) { b_L1_DoubleIsoTau28er2p1_Mass_Max80_->SetAddress(&L1_DoubleIsoTau28er2p1_Mass_Max80_); }
    b_L1_DoubleIsoTau28er2p1_Mass_Max90_ = tree->GetBranch("L1_DoubleIsoTau28er2p1_Mass_Max90");
    if (b_L1_DoubleIsoTau28er2p1_Mass_Max90_) { b_L1_DoubleIsoTau28er2p1_Mass_Max90_->SetAddress(&L1_DoubleIsoTau28er2p1_Mass_Max90_); }
    b_L1_DoubleIsoTau29er_ = tree->GetBranch("L1_DoubleIsoTau29er");
    if (b_L1_DoubleIsoTau29er_) { b_L1_DoubleIsoTau29er_->SetAddress(&L1_DoubleIsoTau29er_); }
    b_L1_DoubleIsoTau30er_ = tree->GetBranch("L1_DoubleIsoTau30er");
    if (b_L1_DoubleIsoTau30er_) { b_L1_DoubleIsoTau30er_->SetAddress(&L1_DoubleIsoTau30er_); }
    b_L1_DoubleIsoTau30er2p1_ = tree->GetBranch("L1_DoubleIsoTau30er2p1");
    if (b_L1_DoubleIsoTau30er2p1_) { b_L1_DoubleIsoTau30er2p1_->SetAddress(&L1_DoubleIsoTau30er2p1_); }
    b_L1_DoubleIsoTau30er2p1_Mass_Max80_ = tree->GetBranch("L1_DoubleIsoTau30er2p1_Mass_Max80");
    if (b_L1_DoubleIsoTau30er2p1_Mass_Max80_) { b_L1_DoubleIsoTau30er2p1_Mass_Max80_->SetAddress(&L1_DoubleIsoTau30er2p1_Mass_Max80_); }
    b_L1_DoubleIsoTau30er2p1_Mass_Max90_ = tree->GetBranch("L1_DoubleIsoTau30er2p1_Mass_Max90");
    if (b_L1_DoubleIsoTau30er2p1_Mass_Max90_) { b_L1_DoubleIsoTau30er2p1_Mass_Max90_->SetAddress(&L1_DoubleIsoTau30er2p1_Mass_Max90_); }
    b_L1_DoubleIsoTau32er_ = tree->GetBranch("L1_DoubleIsoTau32er");
    if (b_L1_DoubleIsoTau32er_) { b_L1_DoubleIsoTau32er_->SetAddress(&L1_DoubleIsoTau32er_); }
    b_L1_DoubleIsoTau32er2p1_ = tree->GetBranch("L1_DoubleIsoTau32er2p1");
    if (b_L1_DoubleIsoTau32er2p1_) { b_L1_DoubleIsoTau32er2p1_->SetAddress(&L1_DoubleIsoTau32er2p1_); }
    b_L1_DoubleIsoTau33er_ = tree->GetBranch("L1_DoubleIsoTau33er");
    if (b_L1_DoubleIsoTau33er_) { b_L1_DoubleIsoTau33er_->SetAddress(&L1_DoubleIsoTau33er_); }
    b_L1_DoubleIsoTau33er2p1_ = tree->GetBranch("L1_DoubleIsoTau33er2p1");
    if (b_L1_DoubleIsoTau33er2p1_) { b_L1_DoubleIsoTau33er2p1_->SetAddress(&L1_DoubleIsoTau33er2p1_); }
    b_L1_DoubleIsoTau34er_ = tree->GetBranch("L1_DoubleIsoTau34er");
    if (b_L1_DoubleIsoTau34er_) { b_L1_DoubleIsoTau34er_->SetAddress(&L1_DoubleIsoTau34er_); }
    b_L1_DoubleIsoTau34er2p1_ = tree->GetBranch("L1_DoubleIsoTau34er2p1");
    if (b_L1_DoubleIsoTau34er2p1_) { b_L1_DoubleIsoTau34er2p1_->SetAddress(&L1_DoubleIsoTau34er2p1_); }
    b_L1_DoubleIsoTau35er_ = tree->GetBranch("L1_DoubleIsoTau35er");
    if (b_L1_DoubleIsoTau35er_) { b_L1_DoubleIsoTau35er_->SetAddress(&L1_DoubleIsoTau35er_); }
    b_L1_DoubleIsoTau35er2p1_ = tree->GetBranch("L1_DoubleIsoTau35er2p1");
    if (b_L1_DoubleIsoTau35er2p1_) { b_L1_DoubleIsoTau35er2p1_->SetAddress(&L1_DoubleIsoTau35er2p1_); }
    b_L1_DoubleIsoTau36er_ = tree->GetBranch("L1_DoubleIsoTau36er");
    if (b_L1_DoubleIsoTau36er_) { b_L1_DoubleIsoTau36er_->SetAddress(&L1_DoubleIsoTau36er_); }
    b_L1_DoubleIsoTau36er2p1_ = tree->GetBranch("L1_DoubleIsoTau36er2p1");
    if (b_L1_DoubleIsoTau36er2p1_) { b_L1_DoubleIsoTau36er2p1_->SetAddress(&L1_DoubleIsoTau36er2p1_); }
    b_L1_DoubleIsoTau38er2p1_ = tree->GetBranch("L1_DoubleIsoTau38er2p1");
    if (b_L1_DoubleIsoTau38er2p1_) { b_L1_DoubleIsoTau38er2p1_->SetAddress(&L1_DoubleIsoTau38er2p1_); }
    b_L1_DoubleJet100er2p3_dEta_Max1p6_ = tree->GetBranch("L1_DoubleJet100er2p3_dEta_Max1p6");
    if (b_L1_DoubleJet100er2p3_dEta_Max1p6_) { b_L1_DoubleJet100er2p3_dEta_Max1p6_->SetAddress(&L1_DoubleJet100er2p3_dEta_Max1p6_); }
    b_L1_DoubleJet100er2p5_ = tree->GetBranch("L1_DoubleJet100er2p5");
    if (b_L1_DoubleJet100er2p5_) { b_L1_DoubleJet100er2p5_->SetAddress(&L1_DoubleJet100er2p5_); }
    b_L1_DoubleJet100er2p7_ = tree->GetBranch("L1_DoubleJet100er2p7");
    if (b_L1_DoubleJet100er2p7_) { b_L1_DoubleJet100er2p7_->SetAddress(&L1_DoubleJet100er2p7_); }
    b_L1_DoubleJet100er3p0_ = tree->GetBranch("L1_DoubleJet100er3p0");
    if (b_L1_DoubleJet100er3p0_) { b_L1_DoubleJet100er3p0_->SetAddress(&L1_DoubleJet100er3p0_); }
    b_L1_DoubleJet112er2p3_dEta_Max1p6_ = tree->GetBranch("L1_DoubleJet112er2p3_dEta_Max1p6");
    if (b_L1_DoubleJet112er2p3_dEta_Max1p6_) { b_L1_DoubleJet112er2p3_dEta_Max1p6_->SetAddress(&L1_DoubleJet112er2p3_dEta_Max1p6_); }
    b_L1_DoubleJet112er2p7_ = tree->GetBranch("L1_DoubleJet112er2p7");
    if (b_L1_DoubleJet112er2p7_) { b_L1_DoubleJet112er2p7_->SetAddress(&L1_DoubleJet112er2p7_); }
    b_L1_DoubleJet112er3p0_ = tree->GetBranch("L1_DoubleJet112er3p0");
    if (b_L1_DoubleJet112er3p0_) { b_L1_DoubleJet112er3p0_->SetAddress(&L1_DoubleJet112er3p0_); }
    b_L1_DoubleJet120er2p5_ = tree->GetBranch("L1_DoubleJet120er2p5");
    if (b_L1_DoubleJet120er2p5_) { b_L1_DoubleJet120er2p5_->SetAddress(&L1_DoubleJet120er2p5_); }
    b_L1_DoubleJet120er2p7_ = tree->GetBranch("L1_DoubleJet120er2p7");
    if (b_L1_DoubleJet120er2p7_) { b_L1_DoubleJet120er2p7_->SetAddress(&L1_DoubleJet120er2p7_); }
    b_L1_DoubleJet120er3p0_ = tree->GetBranch("L1_DoubleJet120er3p0");
    if (b_L1_DoubleJet120er3p0_) { b_L1_DoubleJet120er3p0_->SetAddress(&L1_DoubleJet120er3p0_); }
    b_L1_DoubleJet12_ForwardBackward_ = tree->GetBranch("L1_DoubleJet12_ForwardBackward");
    if (b_L1_DoubleJet12_ForwardBackward_) { b_L1_DoubleJet12_ForwardBackward_->SetAddress(&L1_DoubleJet12_ForwardBackward_); }
    b_L1_DoubleJet150er2p5_ = tree->GetBranch("L1_DoubleJet150er2p5");
    if (b_L1_DoubleJet150er2p5_) { b_L1_DoubleJet150er2p5_->SetAddress(&L1_DoubleJet150er2p5_); }
    b_L1_DoubleJet150er2p7_ = tree->GetBranch("L1_DoubleJet150er2p7");
    if (b_L1_DoubleJet150er2p7_) { b_L1_DoubleJet150er2p7_->SetAddress(&L1_DoubleJet150er2p7_); }
    b_L1_DoubleJet150er3p0_ = tree->GetBranch("L1_DoubleJet150er3p0");
    if (b_L1_DoubleJet150er3p0_) { b_L1_DoubleJet150er3p0_->SetAddress(&L1_DoubleJet150er3p0_); }
    b_L1_DoubleJet16_ForwardBackward_ = tree->GetBranch("L1_DoubleJet16_ForwardBackward");
    if (b_L1_DoubleJet16_ForwardBackward_) { b_L1_DoubleJet16_ForwardBackward_->SetAddress(&L1_DoubleJet16_ForwardBackward_); }
    b_L1_DoubleJet30_Mass_Min300_dEta_Max1p5_ = tree->GetBranch("L1_DoubleJet30_Mass_Min300_dEta_Max1p5");
    if (b_L1_DoubleJet30_Mass_Min300_dEta_Max1p5_) { b_L1_DoubleJet30_Mass_Min300_dEta_Max1p5_->SetAddress(&L1_DoubleJet30_Mass_Min300_dEta_Max1p5_); }
    b_L1_DoubleJet30_Mass_Min320_dEta_Max1p5_ = tree->GetBranch("L1_DoubleJet30_Mass_Min320_dEta_Max1p5");
    if (b_L1_DoubleJet30_Mass_Min320_dEta_Max1p5_) { b_L1_DoubleJet30_Mass_Min320_dEta_Max1p5_->SetAddress(&L1_DoubleJet30_Mass_Min320_dEta_Max1p5_); }
    b_L1_DoubleJet30_Mass_Min340_dEta_Max1p5_ = tree->GetBranch("L1_DoubleJet30_Mass_Min340_dEta_Max1p5");
    if (b_L1_DoubleJet30_Mass_Min340_dEta_Max1p5_) { b_L1_DoubleJet30_Mass_Min340_dEta_Max1p5_->SetAddress(&L1_DoubleJet30_Mass_Min340_dEta_Max1p5_); }
    b_L1_DoubleJet30_Mass_Min360_dEta_Max1p5_ = tree->GetBranch("L1_DoubleJet30_Mass_Min360_dEta_Max1p5");
    if (b_L1_DoubleJet30_Mass_Min360_dEta_Max1p5_) { b_L1_DoubleJet30_Mass_Min360_dEta_Max1p5_->SetAddress(&L1_DoubleJet30_Mass_Min360_dEta_Max1p5_); }
    b_L1_DoubleJet30_Mass_Min380_dEta_Max1p5_ = tree->GetBranch("L1_DoubleJet30_Mass_Min380_dEta_Max1p5");
    if (b_L1_DoubleJet30_Mass_Min380_dEta_Max1p5_) { b_L1_DoubleJet30_Mass_Min380_dEta_Max1p5_->SetAddress(&L1_DoubleJet30_Mass_Min380_dEta_Max1p5_); }
    b_L1_DoubleJet30_Mass_Min400_Mu10_ = tree->GetBranch("L1_DoubleJet30_Mass_Min400_Mu10");
    if (b_L1_DoubleJet30_Mass_Min400_Mu10_) { b_L1_DoubleJet30_Mass_Min400_Mu10_->SetAddress(&L1_DoubleJet30_Mass_Min400_Mu10_); }
    b_L1_DoubleJet30_Mass_Min400_Mu6_ = tree->GetBranch("L1_DoubleJet30_Mass_Min400_Mu6");
    if (b_L1_DoubleJet30_Mass_Min400_Mu6_) { b_L1_DoubleJet30_Mass_Min400_Mu6_->SetAddress(&L1_DoubleJet30_Mass_Min400_Mu6_); }
    b_L1_DoubleJet30_Mass_Min400_dEta_Max1p5_ = tree->GetBranch("L1_DoubleJet30_Mass_Min400_dEta_Max1p5");
    if (b_L1_DoubleJet30_Mass_Min400_dEta_Max1p5_) { b_L1_DoubleJet30_Mass_Min400_dEta_Max1p5_->SetAddress(&L1_DoubleJet30_Mass_Min400_dEta_Max1p5_); }
    b_L1_DoubleJet30_Mj30j30_400_Mu10_ = tree->GetBranch("L1_DoubleJet30_Mj30j30_400_Mu10");
    if (b_L1_DoubleJet30_Mj30j30_400_Mu10_) { b_L1_DoubleJet30_Mj30j30_400_Mu10_->SetAddress(&L1_DoubleJet30_Mj30j30_400_Mu10_); }
    b_L1_DoubleJet30_Mj30j30_400_Mu6_ = tree->GetBranch("L1_DoubleJet30_Mj30j30_400_Mu6");
    if (b_L1_DoubleJet30_Mj30j30_400_Mu6_) { b_L1_DoubleJet30_Mj30j30_400_Mu6_->SetAddress(&L1_DoubleJet30_Mj30j30_400_Mu6_); }
    b_L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5_ = tree->GetBranch("L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5");
    if (b_L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5_) { b_L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5_->SetAddress(&L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5_); }
    b_L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5_ = tree->GetBranch("L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5");
    if (b_L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5_) { b_L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5_->SetAddress(&L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5_); }
    b_L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5_ = tree->GetBranch("L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5");
    if (b_L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5_) { b_L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5_->SetAddress(&L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5_); }
    b_L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5_ = tree->GetBranch("L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5");
    if (b_L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5_) { b_L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5_->SetAddress(&L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5_); }
    b_L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5_ = tree->GetBranch("L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5");
    if (b_L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5_) { b_L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5_->SetAddress(&L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5_); }
    b_L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5_ = tree->GetBranch("L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5");
    if (b_L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5_) { b_L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5_->SetAddress(&L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5_); }
    b_L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp_ = tree->GetBranch("L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp");
    if (b_L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp_) { b_L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp_->SetAddress(&L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp_); }
    b_L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5_ = tree->GetBranch("L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5");
    if (b_L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5_) { b_L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5_->SetAddress(&L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5_); }
    b_L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450_ = tree->GetBranch("L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450");
    if (b_L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450_) { b_L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450_->SetAddress(&L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450_); }
    b_L1_DoubleJet40er2p5_ = tree->GetBranch("L1_DoubleJet40er2p5");
    if (b_L1_DoubleJet40er2p5_) { b_L1_DoubleJet40er2p5_->SetAddress(&L1_DoubleJet40er2p5_); }
    b_L1_DoubleJet40er2p7_ = tree->GetBranch("L1_DoubleJet40er2p7");
    if (b_L1_DoubleJet40er2p7_) { b_L1_DoubleJet40er2p7_->SetAddress(&L1_DoubleJet40er2p7_); }
    b_L1_DoubleJet40er3p0_ = tree->GetBranch("L1_DoubleJet40er3p0");
    if (b_L1_DoubleJet40er3p0_) { b_L1_DoubleJet40er3p0_->SetAddress(&L1_DoubleJet40er3p0_); }
    b_L1_DoubleJet50er2p7_ = tree->GetBranch("L1_DoubleJet50er2p7");
    if (b_L1_DoubleJet50er2p7_) { b_L1_DoubleJet50er2p7_->SetAddress(&L1_DoubleJet50er2p7_); }
    b_L1_DoubleJet50er3p0_ = tree->GetBranch("L1_DoubleJet50er3p0");
    if (b_L1_DoubleJet50er3p0_) { b_L1_DoubleJet50er3p0_->SetAddress(&L1_DoubleJet50er3p0_); }
    b_L1_DoubleJet60er2p7_ = tree->GetBranch("L1_DoubleJet60er2p7");
    if (b_L1_DoubleJet60er2p7_) { b_L1_DoubleJet60er2p7_->SetAddress(&L1_DoubleJet60er2p7_); }
    b_L1_DoubleJet60er2p7_ETM100_ = tree->GetBranch("L1_DoubleJet60er2p7_ETM100");
    if (b_L1_DoubleJet60er2p7_ETM100_) { b_L1_DoubleJet60er2p7_ETM100_->SetAddress(&L1_DoubleJet60er2p7_ETM100_); }
    b_L1_DoubleJet60er2p7_ETM60_ = tree->GetBranch("L1_DoubleJet60er2p7_ETM60");
    if (b_L1_DoubleJet60er2p7_ETM60_) { b_L1_DoubleJet60er2p7_ETM60_->SetAddress(&L1_DoubleJet60er2p7_ETM60_); }
    b_L1_DoubleJet60er2p7_ETM70_ = tree->GetBranch("L1_DoubleJet60er2p7_ETM70");
    if (b_L1_DoubleJet60er2p7_ETM70_) { b_L1_DoubleJet60er2p7_ETM70_->SetAddress(&L1_DoubleJet60er2p7_ETM70_); }
    b_L1_DoubleJet60er2p7_ETM80_ = tree->GetBranch("L1_DoubleJet60er2p7_ETM80");
    if (b_L1_DoubleJet60er2p7_ETM80_) { b_L1_DoubleJet60er2p7_ETM80_->SetAddress(&L1_DoubleJet60er2p7_ETM80_); }
    b_L1_DoubleJet60er2p7_ETM90_ = tree->GetBranch("L1_DoubleJet60er2p7_ETM90");
    if (b_L1_DoubleJet60er2p7_ETM90_) { b_L1_DoubleJet60er2p7_ETM90_->SetAddress(&L1_DoubleJet60er2p7_ETM90_); }
    b_L1_DoubleJet60er3p0_ = tree->GetBranch("L1_DoubleJet60er3p0");
    if (b_L1_DoubleJet60er3p0_) { b_L1_DoubleJet60er3p0_->SetAddress(&L1_DoubleJet60er3p0_); }
    b_L1_DoubleJet60er3p0_ETM100_ = tree->GetBranch("L1_DoubleJet60er3p0_ETM100");
    if (b_L1_DoubleJet60er3p0_ETM100_) { b_L1_DoubleJet60er3p0_ETM100_->SetAddress(&L1_DoubleJet60er3p0_ETM100_); }
    b_L1_DoubleJet60er3p0_ETM60_ = tree->GetBranch("L1_DoubleJet60er3p0_ETM60");
    if (b_L1_DoubleJet60er3p0_ETM60_) { b_L1_DoubleJet60er3p0_ETM60_->SetAddress(&L1_DoubleJet60er3p0_ETM60_); }
    b_L1_DoubleJet60er3p0_ETM70_ = tree->GetBranch("L1_DoubleJet60er3p0_ETM70");
    if (b_L1_DoubleJet60er3p0_ETM70_) { b_L1_DoubleJet60er3p0_ETM70_->SetAddress(&L1_DoubleJet60er3p0_ETM70_); }
    b_L1_DoubleJet60er3p0_ETM80_ = tree->GetBranch("L1_DoubleJet60er3p0_ETM80");
    if (b_L1_DoubleJet60er3p0_ETM80_) { b_L1_DoubleJet60er3p0_ETM80_->SetAddress(&L1_DoubleJet60er3p0_ETM80_); }
    b_L1_DoubleJet60er3p0_ETM90_ = tree->GetBranch("L1_DoubleJet60er3p0_ETM90");
    if (b_L1_DoubleJet60er3p0_ETM90_) { b_L1_DoubleJet60er3p0_ETM90_->SetAddress(&L1_DoubleJet60er3p0_ETM90_); }
    b_L1_DoubleJet80er2p7_ = tree->GetBranch("L1_DoubleJet80er2p7");
    if (b_L1_DoubleJet80er2p7_) { b_L1_DoubleJet80er2p7_->SetAddress(&L1_DoubleJet80er2p7_); }
    b_L1_DoubleJet80er3p0_ = tree->GetBranch("L1_DoubleJet80er3p0");
    if (b_L1_DoubleJet80er3p0_) { b_L1_DoubleJet80er3p0_->SetAddress(&L1_DoubleJet80er3p0_); }
    b_L1_DoubleJet8_ForwardBackward_ = tree->GetBranch("L1_DoubleJet8_ForwardBackward");
    if (b_L1_DoubleJet8_ForwardBackward_) { b_L1_DoubleJet8_ForwardBackward_->SetAddress(&L1_DoubleJet8_ForwardBackward_); }
    b_L1_DoubleJetC100_ = tree->GetBranch("L1_DoubleJetC100");
    if (b_L1_DoubleJetC100_) { b_L1_DoubleJetC100_->SetAddress(&L1_DoubleJetC100_); }
    b_L1_DoubleJetC112_ = tree->GetBranch("L1_DoubleJetC112");
    if (b_L1_DoubleJetC112_) { b_L1_DoubleJetC112_->SetAddress(&L1_DoubleJetC112_); }
    b_L1_DoubleJetC120_ = tree->GetBranch("L1_DoubleJetC120");
    if (b_L1_DoubleJetC120_) { b_L1_DoubleJetC120_->SetAddress(&L1_DoubleJetC120_); }
    b_L1_DoubleJetC40_ = tree->GetBranch("L1_DoubleJetC40");
    if (b_L1_DoubleJetC40_) { b_L1_DoubleJetC40_->SetAddress(&L1_DoubleJetC40_); }
    b_L1_DoubleJetC50_ = tree->GetBranch("L1_DoubleJetC50");
    if (b_L1_DoubleJetC50_) { b_L1_DoubleJetC50_->SetAddress(&L1_DoubleJetC50_); }
    b_L1_DoubleJetC60_ = tree->GetBranch("L1_DoubleJetC60");
    if (b_L1_DoubleJetC60_) { b_L1_DoubleJetC60_->SetAddress(&L1_DoubleJetC60_); }
    b_L1_DoubleJetC60_ETM60_ = tree->GetBranch("L1_DoubleJetC60_ETM60");
    if (b_L1_DoubleJetC60_ETM60_) { b_L1_DoubleJetC60_ETM60_->SetAddress(&L1_DoubleJetC60_ETM60_); }
    b_L1_DoubleJetC80_ = tree->GetBranch("L1_DoubleJetC80");
    if (b_L1_DoubleJetC80_) { b_L1_DoubleJetC80_->SetAddress(&L1_DoubleJetC80_); }
    b_L1_DoubleJet_100_30_DoubleJet30_Mass_Min620_ = tree->GetBranch("L1_DoubleJet_100_30_DoubleJet30_Mass_Min620");
    if (b_L1_DoubleJet_100_30_DoubleJet30_Mass_Min620_) { b_L1_DoubleJet_100_30_DoubleJet30_Mass_Min620_->SetAddress(&L1_DoubleJet_100_30_DoubleJet30_Mass_Min620_); }
    b_L1_DoubleJet_100_30_Mj30j30_620_ = tree->GetBranch("L1_DoubleJet_100_30_Mj30j30_620");
    if (b_L1_DoubleJet_100_30_Mj30j30_620_) { b_L1_DoubleJet_100_30_Mj30j30_620_->SetAddress(&L1_DoubleJet_100_30_Mj30j30_620_); }
    b_L1_DoubleJet_100_35_DoubleJet35_Mass_Min620_ = tree->GetBranch("L1_DoubleJet_100_35_DoubleJet35_Mass_Min620");
    if (b_L1_DoubleJet_100_35_DoubleJet35_Mass_Min620_) { b_L1_DoubleJet_100_35_DoubleJet35_Mass_Min620_->SetAddress(&L1_DoubleJet_100_35_DoubleJet35_Mass_Min620_); }
    b_L1_DoubleJet_110_35_DoubleJet35_Mass_Min620_ = tree->GetBranch("L1_DoubleJet_110_35_DoubleJet35_Mass_Min620");
    if (b_L1_DoubleJet_110_35_DoubleJet35_Mass_Min620_) { b_L1_DoubleJet_110_35_DoubleJet35_Mass_Min620_->SetAddress(&L1_DoubleJet_110_35_DoubleJet35_Mass_Min620_); }
    b_L1_DoubleJet_110_40_DoubleJet40_Mass_Min620_ = tree->GetBranch("L1_DoubleJet_110_40_DoubleJet40_Mass_Min620");
    if (b_L1_DoubleJet_110_40_DoubleJet40_Mass_Min620_) { b_L1_DoubleJet_110_40_DoubleJet40_Mass_Min620_->SetAddress(&L1_DoubleJet_110_40_DoubleJet40_Mass_Min620_); }
    b_L1_DoubleJet_115_35_DoubleJet35_Mass_Min620_ = tree->GetBranch("L1_DoubleJet_115_35_DoubleJet35_Mass_Min620");
    if (b_L1_DoubleJet_115_35_DoubleJet35_Mass_Min620_) { b_L1_DoubleJet_115_35_DoubleJet35_Mass_Min620_->SetAddress(&L1_DoubleJet_115_35_DoubleJet35_Mass_Min620_); }
    b_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_ = tree->GetBranch("L1_DoubleJet_115_40_DoubleJet40_Mass_Min620");
    if (b_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_) { b_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_->SetAddress(&L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_); }
    b_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28_ = tree->GetBranch("L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28");
    if (b_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28_) { b_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28_->SetAddress(&L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28_); }
    b_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_ = tree->GetBranch("L1_DoubleJet_120_45_DoubleJet45_Mass_Min620");
    if (b_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_) { b_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_->SetAddress(&L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_); }
    b_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28_ = tree->GetBranch("L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28");
    if (b_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28_) { b_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28_->SetAddress(&L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28_); }
    b_L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ_ = tree->GetBranch("L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ");
    if (b_L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ_) { b_L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ_->SetAddress(&L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ_); }
    b_L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp_ = tree->GetBranch("L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp");
    if (b_L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp_) { b_L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp_->SetAddress(&L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp_); }
    b_L1_DoubleJet_80_30_Mass_Min420_Mu8_ = tree->GetBranch("L1_DoubleJet_80_30_Mass_Min420_Mu8");
    if (b_L1_DoubleJet_80_30_Mass_Min420_Mu8_) { b_L1_DoubleJet_80_30_Mass_Min420_Mu8_->SetAddress(&L1_DoubleJet_80_30_Mass_Min420_Mu8_); }
    b_L1_DoubleJet_90_30_DoubleJet30_Mass_Min620_ = tree->GetBranch("L1_DoubleJet_90_30_DoubleJet30_Mass_Min620");
    if (b_L1_DoubleJet_90_30_DoubleJet30_Mass_Min620_) { b_L1_DoubleJet_90_30_DoubleJet30_Mass_Min620_->SetAddress(&L1_DoubleJet_90_30_DoubleJet30_Mass_Min620_); }
    b_L1_DoubleJet_90_30_Mj30j30_620_ = tree->GetBranch("L1_DoubleJet_90_30_Mj30j30_620");
    if (b_L1_DoubleJet_90_30_Mj30j30_620_) { b_L1_DoubleJet_90_30_Mj30j30_620_->SetAddress(&L1_DoubleJet_90_30_Mj30j30_620_); }
    b_L1_DoubleLLPJet40_ = tree->GetBranch("L1_DoubleLLPJet40");
    if (b_L1_DoubleLLPJet40_) { b_L1_DoubleLLPJet40_->SetAddress(&L1_DoubleLLPJet40_); }
    b_L1_DoubleLooseIsoEG22er2p1_ = tree->GetBranch("L1_DoubleLooseIsoEG22er2p1");
    if (b_L1_DoubleLooseIsoEG22er2p1_) { b_L1_DoubleLooseIsoEG22er2p1_->SetAddress(&L1_DoubleLooseIsoEG22er2p1_); }
    b_L1_DoubleLooseIsoEG24er2p1_ = tree->GetBranch("L1_DoubleLooseIsoEG24er2p1");
    if (b_L1_DoubleLooseIsoEG24er2p1_) { b_L1_DoubleLooseIsoEG24er2p1_->SetAddress(&L1_DoubleLooseIsoEG24er2p1_); }
    b_L1_DoubleMu0_ = tree->GetBranch("L1_DoubleMu0");
    if (b_L1_DoubleMu0_) { b_L1_DoubleMu0_->SetAddress(&L1_DoubleMu0_); }
    b_L1_DoubleMu0_ETM40_ = tree->GetBranch("L1_DoubleMu0_ETM40");
    if (b_L1_DoubleMu0_ETM40_) { b_L1_DoubleMu0_ETM40_->SetAddress(&L1_DoubleMu0_ETM40_); }
    b_L1_DoubleMu0_ETM55_ = tree->GetBranch("L1_DoubleMu0_ETM55");
    if (b_L1_DoubleMu0_ETM55_) { b_L1_DoubleMu0_ETM55_->SetAddress(&L1_DoubleMu0_ETM55_); }
    b_L1_DoubleMu0_ETM60_ = tree->GetBranch("L1_DoubleMu0_ETM60");
    if (b_L1_DoubleMu0_ETM60_) { b_L1_DoubleMu0_ETM60_->SetAddress(&L1_DoubleMu0_ETM60_); }
    b_L1_DoubleMu0_ETM65_ = tree->GetBranch("L1_DoubleMu0_ETM65");
    if (b_L1_DoubleMu0_ETM65_) { b_L1_DoubleMu0_ETM65_->SetAddress(&L1_DoubleMu0_ETM65_); }
    b_L1_DoubleMu0_ETM70_ = tree->GetBranch("L1_DoubleMu0_ETM70");
    if (b_L1_DoubleMu0_ETM70_) { b_L1_DoubleMu0_ETM70_->SetAddress(&L1_DoubleMu0_ETM70_); }
    b_L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30");
    if (b_L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30_) { b_L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30_->SetAddress(&L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30_); }
    b_L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30");
    if (b_L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30_) { b_L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30_->SetAddress(&L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30_); }
    b_L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30");
    if (b_L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30_) { b_L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30_->SetAddress(&L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30_); }
    b_L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30");
    if (b_L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30_) { b_L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30_->SetAddress(&L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30_); }
    b_L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30");
    if (b_L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30_) { b_L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30_->SetAddress(&L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30_); }
    b_L1_DoubleMu0_Mass_Min1_ = tree->GetBranch("L1_DoubleMu0_Mass_Min1");
    if (b_L1_DoubleMu0_Mass_Min1_) { b_L1_DoubleMu0_Mass_Min1_->SetAddress(&L1_DoubleMu0_Mass_Min1_); }
    b_L1_DoubleMu0_OQ_ = tree->GetBranch("L1_DoubleMu0_OQ");
    if (b_L1_DoubleMu0_OQ_) { b_L1_DoubleMu0_OQ_->SetAddress(&L1_DoubleMu0_OQ_); }
    b_L1_DoubleMu0_SQ_ = tree->GetBranch("L1_DoubleMu0_SQ");
    if (b_L1_DoubleMu0_SQ_) { b_L1_DoubleMu0_SQ_->SetAddress(&L1_DoubleMu0_SQ_); }
    b_L1_DoubleMu0_SQ_OS_ = tree->GetBranch("L1_DoubleMu0_SQ_OS");
    if (b_L1_DoubleMu0_SQ_OS_) { b_L1_DoubleMu0_SQ_OS_->SetAddress(&L1_DoubleMu0_SQ_OS_); }
    b_L1_DoubleMu0_Upt15_Upt7_ = tree->GetBranch("L1_DoubleMu0_Upt15_Upt7");
    if (b_L1_DoubleMu0_Upt15_Upt7_) { b_L1_DoubleMu0_Upt15_Upt7_->SetAddress(&L1_DoubleMu0_Upt15_Upt7_); }
    b_L1_DoubleMu0_Upt5_Upt5_ = tree->GetBranch("L1_DoubleMu0_Upt5_Upt5");
    if (b_L1_DoubleMu0_Upt5_Upt5_) { b_L1_DoubleMu0_Upt5_Upt5_->SetAddress(&L1_DoubleMu0_Upt5_Upt5_); }
    b_L1_DoubleMu0_Upt6_IP_Min1_Upt4_ = tree->GetBranch("L1_DoubleMu0_Upt6_IP_Min1_Upt4");
    if (b_L1_DoubleMu0_Upt6_IP_Min1_Upt4_) { b_L1_DoubleMu0_Upt6_IP_Min1_Upt4_->SetAddress(&L1_DoubleMu0_Upt6_IP_Min1_Upt4_); }
    b_L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8_ = tree->GetBranch("L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8");
    if (b_L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8_) { b_L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8_->SetAddress(&L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8_); }
    b_L1_DoubleMu0er1p25_dEta_Max1p8_OS_ = tree->GetBranch("L1_DoubleMu0er1p25_dEta_Max1p8_OS");
    if (b_L1_DoubleMu0er1p25_dEta_Max1p8_OS_) { b_L1_DoubleMu0er1p25_dEta_Max1p8_OS_->SetAddress(&L1_DoubleMu0er1p25_dEta_Max1p8_OS_); }
    b_L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6_ = tree->GetBranch("L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6");
    if (b_L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6_) { b_L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6_->SetAddress(&L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6_); }
    b_L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4_ = tree->GetBranch("L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4");
    if (b_L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4_) { b_L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4_->SetAddress(&L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4_); }
    b_L1_DoubleMu0er1p4_dEta_Max1p8_OS_ = tree->GetBranch("L1_DoubleMu0er1p4_dEta_Max1p8_OS");
    if (b_L1_DoubleMu0er1p4_dEta_Max1p8_OS_) { b_L1_DoubleMu0er1p4_dEta_Max1p8_OS_->SetAddress(&L1_DoubleMu0er1p4_dEta_Max1p8_OS_); }
    b_L1_DoubleMu0er1p5_SQ_ = tree->GetBranch("L1_DoubleMu0er1p5_SQ");
    if (b_L1_DoubleMu0er1p5_SQ_) { b_L1_DoubleMu0er1p5_SQ_->SetAddress(&L1_DoubleMu0er1p5_SQ_); }
    b_L1_DoubleMu0er1p5_SQ_OS_ = tree->GetBranch("L1_DoubleMu0er1p5_SQ_OS");
    if (b_L1_DoubleMu0er1p5_SQ_OS_) { b_L1_DoubleMu0er1p5_SQ_OS_->SetAddress(&L1_DoubleMu0er1p5_SQ_OS_); }
    b_L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4_ = tree->GetBranch("L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4");
    if (b_L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4_) { b_L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4_->SetAddress(&L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4_); }
    b_L1_DoubleMu0er1p5_SQ_dR_Max1p4_ = tree->GetBranch("L1_DoubleMu0er1p5_SQ_dR_Max1p4");
    if (b_L1_DoubleMu0er1p5_SQ_dR_Max1p4_) { b_L1_DoubleMu0er1p5_SQ_dR_Max1p4_->SetAddress(&L1_DoubleMu0er1p5_SQ_dR_Max1p4_); }
    b_L1_DoubleMu0er1p6_dEta_Max1p8_ = tree->GetBranch("L1_DoubleMu0er1p6_dEta_Max1p8");
    if (b_L1_DoubleMu0er1p6_dEta_Max1p8_) { b_L1_DoubleMu0er1p6_dEta_Max1p8_->SetAddress(&L1_DoubleMu0er1p6_dEta_Max1p8_); }
    b_L1_DoubleMu0er1p6_dEta_Max1p8_OS_ = tree->GetBranch("L1_DoubleMu0er1p6_dEta_Max1p8_OS");
    if (b_L1_DoubleMu0er1p6_dEta_Max1p8_OS_) { b_L1_DoubleMu0er1p6_dEta_Max1p8_OS_->SetAddress(&L1_DoubleMu0er1p6_dEta_Max1p8_OS_); }
    b_L1_DoubleMu0er2_SQ_dR_Max1p4_ = tree->GetBranch("L1_DoubleMu0er2_SQ_dR_Max1p4");
    if (b_L1_DoubleMu0er2_SQ_dR_Max1p4_) { b_L1_DoubleMu0er2_SQ_dR_Max1p4_->SetAddress(&L1_DoubleMu0er2_SQ_dR_Max1p4_); }
    b_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5_ = tree->GetBranch("L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5");
    if (b_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5_) { b_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5_->SetAddress(&L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5_); }
    b_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6_ = tree->GetBranch("L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6");
    if (b_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6_) { b_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6_->SetAddress(&L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6_); }
    b_L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4_ = tree->GetBranch("L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4");
    if (b_L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4_) { b_L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4_->SetAddress(&L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4_); }
    b_L1_DoubleMu0er2p0_SQ_dEta_Max1p5_ = tree->GetBranch("L1_DoubleMu0er2p0_SQ_dEta_Max1p5");
    if (b_L1_DoubleMu0er2p0_SQ_dEta_Max1p5_) { b_L1_DoubleMu0er2p0_SQ_dEta_Max1p5_->SetAddress(&L1_DoubleMu0er2p0_SQ_dEta_Max1p5_); }
    b_L1_DoubleMu0er2p0_SQ_dEta_Max1p6_ = tree->GetBranch("L1_DoubleMu0er2p0_SQ_dEta_Max1p6");
    if (b_L1_DoubleMu0er2p0_SQ_dEta_Max1p6_) { b_L1_DoubleMu0er2p0_SQ_dEta_Max1p6_->SetAddress(&L1_DoubleMu0er2p0_SQ_dEta_Max1p6_); }
    b_L1_DoubleMu0er2p0_SQ_dR_Max1p4_ = tree->GetBranch("L1_DoubleMu0er2p0_SQ_dR_Max1p4");
    if (b_L1_DoubleMu0er2p0_SQ_dR_Max1p4_) { b_L1_DoubleMu0er2p0_SQ_dR_Max1p4_->SetAddress(&L1_DoubleMu0er2p0_SQ_dR_Max1p4_); }
    b_L1_DoubleMu10_SQ_ = tree->GetBranch("L1_DoubleMu10_SQ");
    if (b_L1_DoubleMu10_SQ_) { b_L1_DoubleMu10_SQ_->SetAddress(&L1_DoubleMu10_SQ_); }
    b_L1_DoubleMu18er2p1_ = tree->GetBranch("L1_DoubleMu18er2p1");
    if (b_L1_DoubleMu18er2p1_) { b_L1_DoubleMu18er2p1_->SetAddress(&L1_DoubleMu18er2p1_); }
    b_L1_DoubleMu18er2p1_SQ_ = tree->GetBranch("L1_DoubleMu18er2p1_SQ");
    if (b_L1_DoubleMu18er2p1_SQ_) { b_L1_DoubleMu18er2p1_SQ_->SetAddress(&L1_DoubleMu18er2p1_SQ_); }
    b_L1_DoubleMu22er2p1_ = tree->GetBranch("L1_DoubleMu22er2p1");
    if (b_L1_DoubleMu22er2p1_) { b_L1_DoubleMu22er2p1_->SetAddress(&L1_DoubleMu22er2p1_); }
    b_L1_DoubleMu3_OS_DoubleEG7p5Upsilon_ = tree->GetBranch("L1_DoubleMu3_OS_DoubleEG7p5Upsilon");
    if (b_L1_DoubleMu3_OS_DoubleEG7p5Upsilon_) { b_L1_DoubleMu3_OS_DoubleEG7p5Upsilon_->SetAddress(&L1_DoubleMu3_OS_DoubleEG7p5Upsilon_); }
    b_L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20_ = tree->GetBranch("L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20");
    if (b_L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20_) { b_L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20_->SetAddress(&L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20_); }
    b_L1_DoubleMu3_SQ_ETMHF30_HTT60er_ = tree->GetBranch("L1_DoubleMu3_SQ_ETMHF30_HTT60er");
    if (b_L1_DoubleMu3_SQ_ETMHF30_HTT60er_) { b_L1_DoubleMu3_SQ_ETMHF30_HTT60er_->SetAddress(&L1_DoubleMu3_SQ_ETMHF30_HTT60er_); }
    b_L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5_ = tree->GetBranch("L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5");
    if (b_L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5_) { b_L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5_->SetAddress(&L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5_); }
    b_L1_DoubleMu3_SQ_ETMHF40_HTT60er_ = tree->GetBranch("L1_DoubleMu3_SQ_ETMHF40_HTT60er");
    if (b_L1_DoubleMu3_SQ_ETMHF40_HTT60er_) { b_L1_DoubleMu3_SQ_ETMHF40_HTT60er_->SetAddress(&L1_DoubleMu3_SQ_ETMHF40_HTT60er_); }
    b_L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30");
    if (b_L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30_) { b_L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30_->SetAddress(&L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30_); }
    b_L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5_ = tree->GetBranch("L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5");
    if (b_L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5_) { b_L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5_->SetAddress(&L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5_); }
    b_L1_DoubleMu3_SQ_ETMHF50_HTT60er_ = tree->GetBranch("L1_DoubleMu3_SQ_ETMHF50_HTT60er");
    if (b_L1_DoubleMu3_SQ_ETMHF50_HTT60er_) { b_L1_DoubleMu3_SQ_ETMHF50_HTT60er_->SetAddress(&L1_DoubleMu3_SQ_ETMHF50_HTT60er_); }
    b_L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30");
    if (b_L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30_) { b_L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30_->SetAddress(&L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30_); }
    b_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_ = tree->GetBranch("L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5");
    if (b_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_) { b_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_->SetAddress(&L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_); }
    b_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5_ = tree->GetBranch("L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5");
    if (b_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5_) { b_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5_->SetAddress(&L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5_); }
    b_L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30");
    if (b_L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30_) { b_L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30_->SetAddress(&L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30_); }
    b_L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5_ = tree->GetBranch("L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5");
    if (b_L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5_) { b_L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5_->SetAddress(&L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5_); }
    b_L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30");
    if (b_L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30_) { b_L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30_->SetAddress(&L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30_); }
    b_L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30");
    if (b_L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30_) { b_L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30_->SetAddress(&L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30_); }
    b_L1_DoubleMu3_SQ_HTT100er_ = tree->GetBranch("L1_DoubleMu3_SQ_HTT100er");
    if (b_L1_DoubleMu3_SQ_HTT100er_) { b_L1_DoubleMu3_SQ_HTT100er_->SetAddress(&L1_DoubleMu3_SQ_HTT100er_); }
    b_L1_DoubleMu3_SQ_HTT200er_ = tree->GetBranch("L1_DoubleMu3_SQ_HTT200er");
    if (b_L1_DoubleMu3_SQ_HTT200er_) { b_L1_DoubleMu3_SQ_HTT200er_->SetAddress(&L1_DoubleMu3_SQ_HTT200er_); }
    b_L1_DoubleMu3_SQ_HTT220er_ = tree->GetBranch("L1_DoubleMu3_SQ_HTT220er");
    if (b_L1_DoubleMu3_SQ_HTT220er_) { b_L1_DoubleMu3_SQ_HTT220er_->SetAddress(&L1_DoubleMu3_SQ_HTT220er_); }
    b_L1_DoubleMu3_SQ_HTT240er_ = tree->GetBranch("L1_DoubleMu3_SQ_HTT240er");
    if (b_L1_DoubleMu3_SQ_HTT240er_) { b_L1_DoubleMu3_SQ_HTT240er_->SetAddress(&L1_DoubleMu3_SQ_HTT240er_); }
    b_L1_DoubleMu3_SQ_HTT260er_ = tree->GetBranch("L1_DoubleMu3_SQ_HTT260er");
    if (b_L1_DoubleMu3_SQ_HTT260er_) { b_L1_DoubleMu3_SQ_HTT260er_->SetAddress(&L1_DoubleMu3_SQ_HTT260er_); }
    b_L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8_ = tree->GetBranch("L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8");
    if (b_L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8_) { b_L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8_->SetAddress(&L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8_); }
    b_L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4_ = tree->GetBranch("L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4");
    if (b_L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4_) { b_L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4_->SetAddress(&L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4_); }
    b_L1_DoubleMu4_OS_EG12_ = tree->GetBranch("L1_DoubleMu4_OS_EG12");
    if (b_L1_DoubleMu4_OS_EG12_) { b_L1_DoubleMu4_OS_EG12_->SetAddress(&L1_DoubleMu4_OS_EG12_); }
    b_L1_DoubleMu4_SQ_EG9er2p5_ = tree->GetBranch("L1_DoubleMu4_SQ_EG9er2p5");
    if (b_L1_DoubleMu4_SQ_EG9er2p5_) { b_L1_DoubleMu4_SQ_EG9er2p5_->SetAddress(&L1_DoubleMu4_SQ_EG9er2p5_); }
    b_L1_DoubleMu4_SQ_OS_ = tree->GetBranch("L1_DoubleMu4_SQ_OS");
    if (b_L1_DoubleMu4_SQ_OS_) { b_L1_DoubleMu4_SQ_OS_->SetAddress(&L1_DoubleMu4_SQ_OS_); }
    b_L1_DoubleMu4_SQ_OS_dR_Max1p2_ = tree->GetBranch("L1_DoubleMu4_SQ_OS_dR_Max1p2");
    if (b_L1_DoubleMu4_SQ_OS_dR_Max1p2_) { b_L1_DoubleMu4_SQ_OS_dR_Max1p2_->SetAddress(&L1_DoubleMu4_SQ_OS_dR_Max1p2_); }
    b_L1_DoubleMu4p5_SQ_ = tree->GetBranch("L1_DoubleMu4p5_SQ");
    if (b_L1_DoubleMu4p5_SQ_) { b_L1_DoubleMu4p5_SQ_->SetAddress(&L1_DoubleMu4p5_SQ_); }
    b_L1_DoubleMu4p5_SQ_OS_ = tree->GetBranch("L1_DoubleMu4p5_SQ_OS");
    if (b_L1_DoubleMu4p5_SQ_OS_) { b_L1_DoubleMu4p5_SQ_OS_->SetAddress(&L1_DoubleMu4p5_SQ_OS_); }
    b_L1_DoubleMu4p5_SQ_OS_dR_Max1p2_ = tree->GetBranch("L1_DoubleMu4p5_SQ_OS_dR_Max1p2");
    if (b_L1_DoubleMu4p5_SQ_OS_dR_Max1p2_) { b_L1_DoubleMu4p5_SQ_OS_dR_Max1p2_->SetAddress(&L1_DoubleMu4p5_SQ_OS_dR_Max1p2_); }
    b_L1_DoubleMu4p5er2p0_SQ_OS_ = tree->GetBranch("L1_DoubleMu4p5er2p0_SQ_OS");
    if (b_L1_DoubleMu4p5er2p0_SQ_OS_) { b_L1_DoubleMu4p5er2p0_SQ_OS_->SetAddress(&L1_DoubleMu4p5er2p0_SQ_OS_); }
    b_L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18_ = tree->GetBranch("L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18");
    if (b_L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18_) { b_L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18_->SetAddress(&L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18_); }
    b_L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18_ = tree->GetBranch("L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18");
    if (b_L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18_) { b_L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18_->SetAddress(&L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18_); }
    b_L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7_ = tree->GetBranch("L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7");
    if (b_L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7_) { b_L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7_->SetAddress(&L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7_); }
    b_L1_DoubleMu5Upsilon_OS_DoubleEG3_ = tree->GetBranch("L1_DoubleMu5Upsilon_OS_DoubleEG3");
    if (b_L1_DoubleMu5Upsilon_OS_DoubleEG3_) { b_L1_DoubleMu5Upsilon_OS_DoubleEG3_->SetAddress(&L1_DoubleMu5Upsilon_OS_DoubleEG3_); }
    b_L1_DoubleMu5_OS_EG12_ = tree->GetBranch("L1_DoubleMu5_OS_EG12");
    if (b_L1_DoubleMu5_OS_EG12_) { b_L1_DoubleMu5_OS_EG12_->SetAddress(&L1_DoubleMu5_OS_EG12_); }
    b_L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20_ = tree->GetBranch("L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20");
    if (b_L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20_) { b_L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20_->SetAddress(&L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20_); }
    b_L1_DoubleMu5_SQ_EG9er2p5_ = tree->GetBranch("L1_DoubleMu5_SQ_EG9er2p5");
    if (b_L1_DoubleMu5_SQ_EG9er2p5_) { b_L1_DoubleMu5_SQ_EG9er2p5_->SetAddress(&L1_DoubleMu5_SQ_EG9er2p5_); }
    b_L1_DoubleMu5_SQ_OS_ = tree->GetBranch("L1_DoubleMu5_SQ_OS");
    if (b_L1_DoubleMu5_SQ_OS_) { b_L1_DoubleMu5_SQ_OS_->SetAddress(&L1_DoubleMu5_SQ_OS_); }
    b_L1_DoubleMu5_SQ_OS_Mass7to18_ = tree->GetBranch("L1_DoubleMu5_SQ_OS_Mass7to18");
    if (b_L1_DoubleMu5_SQ_OS_Mass7to18_) { b_L1_DoubleMu5_SQ_OS_Mass7to18_->SetAddress(&L1_DoubleMu5_SQ_OS_Mass7to18_); }
    b_L1_DoubleMu6_SQ_OS_ = tree->GetBranch("L1_DoubleMu6_SQ_OS");
    if (b_L1_DoubleMu6_SQ_OS_) { b_L1_DoubleMu6_SQ_OS_->SetAddress(&L1_DoubleMu6_SQ_OS_); }
    b_L1_DoubleMu7_EG14_ = tree->GetBranch("L1_DoubleMu7_EG14");
    if (b_L1_DoubleMu7_EG14_) { b_L1_DoubleMu7_EG14_->SetAddress(&L1_DoubleMu7_EG14_); }
    b_L1_DoubleMu7_EG7_ = tree->GetBranch("L1_DoubleMu7_EG7");
    if (b_L1_DoubleMu7_EG7_) { b_L1_DoubleMu7_EG7_->SetAddress(&L1_DoubleMu7_EG7_); }
    b_L1_DoubleMu7_SQ_EG7_ = tree->GetBranch("L1_DoubleMu7_SQ_EG7");
    if (b_L1_DoubleMu7_SQ_EG7_) { b_L1_DoubleMu7_SQ_EG7_->SetAddress(&L1_DoubleMu7_SQ_EG7_); }
    b_L1_DoubleMu8_SQ_ = tree->GetBranch("L1_DoubleMu8_SQ");
    if (b_L1_DoubleMu8_SQ_) { b_L1_DoubleMu8_SQ_->SetAddress(&L1_DoubleMu8_SQ_); }
    b_L1_DoubleMu9_SQ_ = tree->GetBranch("L1_DoubleMu9_SQ");
    if (b_L1_DoubleMu9_SQ_) { b_L1_DoubleMu9_SQ_->SetAddress(&L1_DoubleMu9_SQ_); }
    b_L1_DoubleMuOpen_ = tree->GetBranch("L1_DoubleMuOpen");
    if (b_L1_DoubleMuOpen_) { b_L1_DoubleMuOpen_->SetAddress(&L1_DoubleMuOpen_); }
    b_L1_DoubleMu_10_0_dEta_Max1p8_ = tree->GetBranch("L1_DoubleMu_10_0_dEta_Max1p8");
    if (b_L1_DoubleMu_10_0_dEta_Max1p8_) { b_L1_DoubleMu_10_0_dEta_Max1p8_->SetAddress(&L1_DoubleMu_10_0_dEta_Max1p8_); }
    b_L1_DoubleMu_10_3p5_ = tree->GetBranch("L1_DoubleMu_10_3p5");
    if (b_L1_DoubleMu_10_3p5_) { b_L1_DoubleMu_10_3p5_->SetAddress(&L1_DoubleMu_10_3p5_); }
    b_L1_DoubleMu_10_Open_ = tree->GetBranch("L1_DoubleMu_10_Open");
    if (b_L1_DoubleMu_10_Open_) { b_L1_DoubleMu_10_Open_->SetAddress(&L1_DoubleMu_10_Open_); }
    b_L1_DoubleMu_11_4_ = tree->GetBranch("L1_DoubleMu_11_4");
    if (b_L1_DoubleMu_11_4_) { b_L1_DoubleMu_11_4_->SetAddress(&L1_DoubleMu_11_4_); }
    b_L1_DoubleMu_12_5_ = tree->GetBranch("L1_DoubleMu_12_5");
    if (b_L1_DoubleMu_12_5_) { b_L1_DoubleMu_12_5_->SetAddress(&L1_DoubleMu_12_5_); }
    b_L1_DoubleMu_12_8_ = tree->GetBranch("L1_DoubleMu_12_8");
    if (b_L1_DoubleMu_12_8_) { b_L1_DoubleMu_12_8_->SetAddress(&L1_DoubleMu_12_8_); }
    b_L1_DoubleMu_13_6_ = tree->GetBranch("L1_DoubleMu_13_6");
    if (b_L1_DoubleMu_13_6_) { b_L1_DoubleMu_13_6_->SetAddress(&L1_DoubleMu_13_6_); }
    b_L1_DoubleMu_15_5_ = tree->GetBranch("L1_DoubleMu_15_5");
    if (b_L1_DoubleMu_15_5_) { b_L1_DoubleMu_15_5_->SetAddress(&L1_DoubleMu_15_5_); }
    b_L1_DoubleMu_15_5_SQ_ = tree->GetBranch("L1_DoubleMu_15_5_SQ");
    if (b_L1_DoubleMu_15_5_SQ_) { b_L1_DoubleMu_15_5_SQ_->SetAddress(&L1_DoubleMu_15_5_SQ_); }
    b_L1_DoubleMu_15_7_ = tree->GetBranch("L1_DoubleMu_15_7");
    if (b_L1_DoubleMu_15_7_) { b_L1_DoubleMu_15_7_->SetAddress(&L1_DoubleMu_15_7_); }
    b_L1_DoubleMu_15_7_Mass_Min1_ = tree->GetBranch("L1_DoubleMu_15_7_Mass_Min1");
    if (b_L1_DoubleMu_15_7_Mass_Min1_) { b_L1_DoubleMu_15_7_Mass_Min1_->SetAddress(&L1_DoubleMu_15_7_Mass_Min1_); }
    b_L1_DoubleMu_15_7_SQ_ = tree->GetBranch("L1_DoubleMu_15_7_SQ");
    if (b_L1_DoubleMu_15_7_SQ_) { b_L1_DoubleMu_15_7_SQ_->SetAddress(&L1_DoubleMu_15_7_SQ_); }
    b_L1_DoubleMu_15_7_SQ_Mass_Min4_ = tree->GetBranch("L1_DoubleMu_15_7_SQ_Mass_Min4");
    if (b_L1_DoubleMu_15_7_SQ_Mass_Min4_) { b_L1_DoubleMu_15_7_SQ_Mass_Min4_->SetAddress(&L1_DoubleMu_15_7_SQ_Mass_Min4_); }
    b_L1_DoubleMu_20_2_SQ_Mass_Max20_ = tree->GetBranch("L1_DoubleMu_20_2_SQ_Mass_Max20");
    if (b_L1_DoubleMu_20_2_SQ_Mass_Max20_) { b_L1_DoubleMu_20_2_SQ_Mass_Max20_->SetAddress(&L1_DoubleMu_20_2_SQ_Mass_Max20_); }
    b_L1_DoubleTau50er_ = tree->GetBranch("L1_DoubleTau50er");
    if (b_L1_DoubleTau50er_) { b_L1_DoubleTau50er_->SetAddress(&L1_DoubleTau50er_); }
    b_L1_DoubleTau50er2p1_ = tree->GetBranch("L1_DoubleTau50er2p1");
    if (b_L1_DoubleTau50er2p1_) { b_L1_DoubleTau50er2p1_->SetAddress(&L1_DoubleTau50er2p1_); }
    b_L1_DoubleTau70er_ = tree->GetBranch("L1_DoubleTau70er");
    if (b_L1_DoubleTau70er_) { b_L1_DoubleTau70er_->SetAddress(&L1_DoubleTau70er_); }
    b_L1_DoubleTau70er2p1_ = tree->GetBranch("L1_DoubleTau70er2p1");
    if (b_L1_DoubleTau70er2p1_) { b_L1_DoubleTau70er2p1_->SetAddress(&L1_DoubleTau70er2p1_); }
    b_L1_EG25er2p1_HTT125er_ = tree->GetBranch("L1_EG25er2p1_HTT125er");
    if (b_L1_EG25er2p1_HTT125er_) { b_L1_EG25er2p1_HTT125er_->SetAddress(&L1_EG25er2p1_HTT125er_); }
    b_L1_EG25er_HTT125_ = tree->GetBranch("L1_EG25er_HTT125");
    if (b_L1_EG25er_HTT125_) { b_L1_EG25er_HTT125_->SetAddress(&L1_EG25er_HTT125_); }
    b_L1_EG27er2p1_HTT200er_ = tree->GetBranch("L1_EG27er2p1_HTT200er");
    if (b_L1_EG27er2p1_HTT200er_) { b_L1_EG27er2p1_HTT200er_->SetAddress(&L1_EG27er2p1_HTT200er_); }
    b_L1_EG27er_HTT200_ = tree->GetBranch("L1_EG27er_HTT200");
    if (b_L1_EG27er_HTT200_) { b_L1_EG27er_HTT200_->SetAddress(&L1_EG27er_HTT200_); }
    b_L1_EG40er2p1_Tau20er2p1_dR_Min0p3_ = tree->GetBranch("L1_EG40er2p1_Tau20er2p1_dR_Min0p3");
    if (b_L1_EG40er2p1_Tau20er2p1_dR_Min0p3_) { b_L1_EG40er2p1_Tau20er2p1_dR_Min0p3_->SetAddress(&L1_EG40er2p1_Tau20er2p1_dR_Min0p3_); }
    b_L1_ETM100_ = tree->GetBranch("L1_ETM100");
    if (b_L1_ETM100_) { b_L1_ETM100_->SetAddress(&L1_ETM100_); }
    b_L1_ETM100_Jet60_dPhi_Min0p4_ = tree->GetBranch("L1_ETM100_Jet60_dPhi_Min0p4");
    if (b_L1_ETM100_Jet60_dPhi_Min0p4_) { b_L1_ETM100_Jet60_dPhi_Min0p4_->SetAddress(&L1_ETM100_Jet60_dPhi_Min0p4_); }
    b_L1_ETM105_ = tree->GetBranch("L1_ETM105");
    if (b_L1_ETM105_) { b_L1_ETM105_->SetAddress(&L1_ETM105_); }
    b_L1_ETM110_ = tree->GetBranch("L1_ETM110");
    if (b_L1_ETM110_) { b_L1_ETM110_->SetAddress(&L1_ETM110_); }
    b_L1_ETM110_Jet60_dPhi_Min0p4_ = tree->GetBranch("L1_ETM110_Jet60_dPhi_Min0p4");
    if (b_L1_ETM110_Jet60_dPhi_Min0p4_) { b_L1_ETM110_Jet60_dPhi_Min0p4_->SetAddress(&L1_ETM110_Jet60_dPhi_Min0p4_); }
    b_L1_ETM115_ = tree->GetBranch("L1_ETM115");
    if (b_L1_ETM115_) { b_L1_ETM115_->SetAddress(&L1_ETM115_); }
    b_L1_ETM120_ = tree->GetBranch("L1_ETM120");
    if (b_L1_ETM120_) { b_L1_ETM120_->SetAddress(&L1_ETM120_); }
    b_L1_ETM150_ = tree->GetBranch("L1_ETM150");
    if (b_L1_ETM150_) { b_L1_ETM150_->SetAddress(&L1_ETM150_); }
    b_L1_ETM30_ = tree->GetBranch("L1_ETM30");
    if (b_L1_ETM30_) { b_L1_ETM30_->SetAddress(&L1_ETM30_); }
    b_L1_ETM40_ = tree->GetBranch("L1_ETM40");
    if (b_L1_ETM40_) { b_L1_ETM40_->SetAddress(&L1_ETM40_); }
    b_L1_ETM50_ = tree->GetBranch("L1_ETM50");
    if (b_L1_ETM50_) { b_L1_ETM50_->SetAddress(&L1_ETM50_); }
    b_L1_ETM60_ = tree->GetBranch("L1_ETM60");
    if (b_L1_ETM60_) { b_L1_ETM60_->SetAddress(&L1_ETM60_); }
    b_L1_ETM60_Jet60_dPhi_Min0p4_ = tree->GetBranch("L1_ETM60_Jet60_dPhi_Min0p4");
    if (b_L1_ETM60_Jet60_dPhi_Min0p4_) { b_L1_ETM60_Jet60_dPhi_Min0p4_->SetAddress(&L1_ETM60_Jet60_dPhi_Min0p4_); }
    b_L1_ETM70_ = tree->GetBranch("L1_ETM70");
    if (b_L1_ETM70_) { b_L1_ETM70_->SetAddress(&L1_ETM70_); }
    b_L1_ETM70_Jet60_dPhi_Min0p4_ = tree->GetBranch("L1_ETM70_Jet60_dPhi_Min0p4");
    if (b_L1_ETM70_Jet60_dPhi_Min0p4_) { b_L1_ETM70_Jet60_dPhi_Min0p4_->SetAddress(&L1_ETM70_Jet60_dPhi_Min0p4_); }
    b_L1_ETM75_ = tree->GetBranch("L1_ETM75");
    if (b_L1_ETM75_) { b_L1_ETM75_->SetAddress(&L1_ETM75_); }
    b_L1_ETM75_Jet60_dPhi_Min0p4_ = tree->GetBranch("L1_ETM75_Jet60_dPhi_Min0p4");
    if (b_L1_ETM75_Jet60_dPhi_Min0p4_) { b_L1_ETM75_Jet60_dPhi_Min0p4_->SetAddress(&L1_ETM75_Jet60_dPhi_Min0p4_); }
    b_L1_ETM80_ = tree->GetBranch("L1_ETM80");
    if (b_L1_ETM80_) { b_L1_ETM80_->SetAddress(&L1_ETM80_); }
    b_L1_ETM80_Jet60_dPhi_Min0p4_ = tree->GetBranch("L1_ETM80_Jet60_dPhi_Min0p4");
    if (b_L1_ETM80_Jet60_dPhi_Min0p4_) { b_L1_ETM80_Jet60_dPhi_Min0p4_->SetAddress(&L1_ETM80_Jet60_dPhi_Min0p4_); }
    b_L1_ETM85_ = tree->GetBranch("L1_ETM85");
    if (b_L1_ETM85_) { b_L1_ETM85_->SetAddress(&L1_ETM85_); }
    b_L1_ETM90_ = tree->GetBranch("L1_ETM90");
    if (b_L1_ETM90_) { b_L1_ETM90_->SetAddress(&L1_ETM90_); }
    b_L1_ETM90_Jet60_dPhi_Min0p4_ = tree->GetBranch("L1_ETM90_Jet60_dPhi_Min0p4");
    if (b_L1_ETM90_Jet60_dPhi_Min0p4_) { b_L1_ETM90_Jet60_dPhi_Min0p4_->SetAddress(&L1_ETM90_Jet60_dPhi_Min0p4_); }
    b_L1_ETM95_ = tree->GetBranch("L1_ETM95");
    if (b_L1_ETM95_) { b_L1_ETM95_->SetAddress(&L1_ETM95_); }
    b_L1_ETMHF100_ = tree->GetBranch("L1_ETMHF100");
    if (b_L1_ETMHF100_) { b_L1_ETMHF100_->SetAddress(&L1_ETMHF100_); }
    b_L1_ETMHF100_HTT60_ = tree->GetBranch("L1_ETMHF100_HTT60");
    if (b_L1_ETMHF100_HTT60_) { b_L1_ETMHF100_HTT60_->SetAddress(&L1_ETMHF100_HTT60_); }
    b_L1_ETMHF100_HTT60er_ = tree->GetBranch("L1_ETMHF100_HTT60er");
    if (b_L1_ETMHF100_HTT60er_) { b_L1_ETMHF100_HTT60er_->SetAddress(&L1_ETMHF100_HTT60er_); }
    b_L1_ETMHF100_Jet60_OR_DiJet30woTT28_ = tree->GetBranch("L1_ETMHF100_Jet60_OR_DiJet30woTT28");
    if (b_L1_ETMHF100_Jet60_OR_DiJet30woTT28_) { b_L1_ETMHF100_Jet60_OR_DiJet30woTT28_->SetAddress(&L1_ETMHF100_Jet60_OR_DiJet30woTT28_); }
    b_L1_ETMHF100_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_ETMHF100_Jet60_OR_DoubleJet30");
    if (b_L1_ETMHF100_Jet60_OR_DoubleJet30_) { b_L1_ETMHF100_Jet60_OR_DoubleJet30_->SetAddress(&L1_ETMHF100_Jet60_OR_DoubleJet30_); }
    b_L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30_ = tree->GetBranch("L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30");
    if (b_L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30_) { b_L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30_->SetAddress(&L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30_); }
    b_L1_ETMHF105_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_ETMHF105_Jet60_OR_DoubleJet30");
    if (b_L1_ETMHF105_Jet60_OR_DoubleJet30_) { b_L1_ETMHF105_Jet60_OR_DoubleJet30_->SetAddress(&L1_ETMHF105_Jet60_OR_DoubleJet30_); }
    b_L1_ETMHF110_ = tree->GetBranch("L1_ETMHF110");
    if (b_L1_ETMHF110_) { b_L1_ETMHF110_->SetAddress(&L1_ETMHF110_); }
    b_L1_ETMHF110_HTT60_ = tree->GetBranch("L1_ETMHF110_HTT60");
    if (b_L1_ETMHF110_HTT60_) { b_L1_ETMHF110_HTT60_->SetAddress(&L1_ETMHF110_HTT60_); }
    b_L1_ETMHF110_HTT60er_ = tree->GetBranch("L1_ETMHF110_HTT60er");
    if (b_L1_ETMHF110_HTT60er_) { b_L1_ETMHF110_HTT60er_->SetAddress(&L1_ETMHF110_HTT60er_); }
    b_L1_ETMHF110_HTT60er_NotSecondBunchInTrain_ = tree->GetBranch("L1_ETMHF110_HTT60er_NotSecondBunchInTrain");
    if (b_L1_ETMHF110_HTT60er_NotSecondBunchInTrain_) { b_L1_ETMHF110_HTT60er_NotSecondBunchInTrain_->SetAddress(&L1_ETMHF110_HTT60er_NotSecondBunchInTrain_); }
    b_L1_ETMHF110_Jet60_OR_DiJet30woTT28_ = tree->GetBranch("L1_ETMHF110_Jet60_OR_DiJet30woTT28");
    if (b_L1_ETMHF110_Jet60_OR_DiJet30woTT28_) { b_L1_ETMHF110_Jet60_OR_DiJet30woTT28_->SetAddress(&L1_ETMHF110_Jet60_OR_DiJet30woTT28_); }
    b_L1_ETMHF110_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_ETMHF110_Jet60_OR_DoubleJet30");
    if (b_L1_ETMHF110_Jet60_OR_DoubleJet30_) { b_L1_ETMHF110_Jet60_OR_DoubleJet30_->SetAddress(&L1_ETMHF110_Jet60_OR_DoubleJet30_); }
    b_L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30_ = tree->GetBranch("L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30");
    if (b_L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30_) { b_L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30_->SetAddress(&L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30_); }
    b_L1_ETMHF115_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_ETMHF115_Jet60_OR_DoubleJet30");
    if (b_L1_ETMHF115_Jet60_OR_DoubleJet30_) { b_L1_ETMHF115_Jet60_OR_DoubleJet30_->SetAddress(&L1_ETMHF115_Jet60_OR_DoubleJet30_); }
    b_L1_ETMHF120_ = tree->GetBranch("L1_ETMHF120");
    if (b_L1_ETMHF120_) { b_L1_ETMHF120_->SetAddress(&L1_ETMHF120_); }
    b_L1_ETMHF120_HTT60_ = tree->GetBranch("L1_ETMHF120_HTT60");
    if (b_L1_ETMHF120_HTT60_) { b_L1_ETMHF120_HTT60_->SetAddress(&L1_ETMHF120_HTT60_); }
    b_L1_ETMHF120_HTT60er_ = tree->GetBranch("L1_ETMHF120_HTT60er");
    if (b_L1_ETMHF120_HTT60er_) { b_L1_ETMHF120_HTT60er_->SetAddress(&L1_ETMHF120_HTT60er_); }
    b_L1_ETMHF120_Jet60_OR_DiJet30woTT28_ = tree->GetBranch("L1_ETMHF120_Jet60_OR_DiJet30woTT28");
    if (b_L1_ETMHF120_Jet60_OR_DiJet30woTT28_) { b_L1_ETMHF120_Jet60_OR_DiJet30woTT28_->SetAddress(&L1_ETMHF120_Jet60_OR_DiJet30woTT28_); }
    b_L1_ETMHF120_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_ETMHF120_Jet60_OR_DoubleJet30");
    if (b_L1_ETMHF120_Jet60_OR_DoubleJet30_) { b_L1_ETMHF120_Jet60_OR_DoubleJet30_->SetAddress(&L1_ETMHF120_Jet60_OR_DoubleJet30_); }
    b_L1_ETMHF120_NotSecondBunchInTrain_ = tree->GetBranch("L1_ETMHF120_NotSecondBunchInTrain");
    if (b_L1_ETMHF120_NotSecondBunchInTrain_) { b_L1_ETMHF120_NotSecondBunchInTrain_->SetAddress(&L1_ETMHF120_NotSecondBunchInTrain_); }
    b_L1_ETMHF130_ = tree->GetBranch("L1_ETMHF130");
    if (b_L1_ETMHF130_) { b_L1_ETMHF130_->SetAddress(&L1_ETMHF130_); }
    b_L1_ETMHF130_HTT60er_ = tree->GetBranch("L1_ETMHF130_HTT60er");
    if (b_L1_ETMHF130_HTT60er_) { b_L1_ETMHF130_HTT60er_->SetAddress(&L1_ETMHF130_HTT60er_); }
    b_L1_ETMHF140_ = tree->GetBranch("L1_ETMHF140");
    if (b_L1_ETMHF140_) { b_L1_ETMHF140_->SetAddress(&L1_ETMHF140_); }
    b_L1_ETMHF150_ = tree->GetBranch("L1_ETMHF150");
    if (b_L1_ETMHF150_) { b_L1_ETMHF150_->SetAddress(&L1_ETMHF150_); }
    b_L1_ETMHF70_ = tree->GetBranch("L1_ETMHF70");
    if (b_L1_ETMHF70_) { b_L1_ETMHF70_->SetAddress(&L1_ETMHF70_); }
    b_L1_ETMHF70_HTT60er_ = tree->GetBranch("L1_ETMHF70_HTT60er");
    if (b_L1_ETMHF70_HTT60er_) { b_L1_ETMHF70_HTT60er_->SetAddress(&L1_ETMHF70_HTT60er_); }
    b_L1_ETMHF70_Jet60_OR_DiJet30woTT28_ = tree->GetBranch("L1_ETMHF70_Jet60_OR_DiJet30woTT28");
    if (b_L1_ETMHF70_Jet60_OR_DiJet30woTT28_) { b_L1_ETMHF70_Jet60_OR_DiJet30woTT28_->SetAddress(&L1_ETMHF70_Jet60_OR_DiJet30woTT28_); }
    b_L1_ETMHF70_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_ETMHF70_Jet60_OR_DoubleJet30");
    if (b_L1_ETMHF70_Jet60_OR_DoubleJet30_) { b_L1_ETMHF70_Jet60_OR_DoubleJet30_->SetAddress(&L1_ETMHF70_Jet60_OR_DoubleJet30_); }
    b_L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30_ = tree->GetBranch("L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30");
    if (b_L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30_) { b_L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30_->SetAddress(&L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30_); }
    b_L1_ETMHF75_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_ETMHF75_Jet60_OR_DoubleJet30");
    if (b_L1_ETMHF75_Jet60_OR_DoubleJet30_) { b_L1_ETMHF75_Jet60_OR_DoubleJet30_->SetAddress(&L1_ETMHF75_Jet60_OR_DoubleJet30_); }
    b_L1_ETMHF80_ = tree->GetBranch("L1_ETMHF80");
    if (b_L1_ETMHF80_) { b_L1_ETMHF80_->SetAddress(&L1_ETMHF80_); }
    b_L1_ETMHF80_HTT60_ = tree->GetBranch("L1_ETMHF80_HTT60");
    if (b_L1_ETMHF80_HTT60_) { b_L1_ETMHF80_HTT60_->SetAddress(&L1_ETMHF80_HTT60_); }
    b_L1_ETMHF80_HTT60er_ = tree->GetBranch("L1_ETMHF80_HTT60er");
    if (b_L1_ETMHF80_HTT60er_) { b_L1_ETMHF80_HTT60er_->SetAddress(&L1_ETMHF80_HTT60er_); }
    b_L1_ETMHF80_Jet60_OR_DiJet30woTT28_ = tree->GetBranch("L1_ETMHF80_Jet60_OR_DiJet30woTT28");
    if (b_L1_ETMHF80_Jet60_OR_DiJet30woTT28_) { b_L1_ETMHF80_Jet60_OR_DiJet30woTT28_->SetAddress(&L1_ETMHF80_Jet60_OR_DiJet30woTT28_); }
    b_L1_ETMHF80_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_ETMHF80_Jet60_OR_DoubleJet30");
    if (b_L1_ETMHF80_Jet60_OR_DoubleJet30_) { b_L1_ETMHF80_Jet60_OR_DoubleJet30_->SetAddress(&L1_ETMHF80_Jet60_OR_DoubleJet30_); }
    b_L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30_ = tree->GetBranch("L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30");
    if (b_L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30_) { b_L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30_->SetAddress(&L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30_); }
    b_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1_ = tree->GetBranch("L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1");
    if (b_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1_) { b_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1_->SetAddress(&L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1_); }
    b_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6_ = tree->GetBranch("L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6");
    if (b_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6_) { b_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6_->SetAddress(&L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6_); }
    b_L1_ETMHF85_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_ETMHF85_Jet60_OR_DoubleJet30");
    if (b_L1_ETMHF85_Jet60_OR_DoubleJet30_) { b_L1_ETMHF85_Jet60_OR_DoubleJet30_->SetAddress(&L1_ETMHF85_Jet60_OR_DoubleJet30_); }
    b_L1_ETMHF90_ = tree->GetBranch("L1_ETMHF90");
    if (b_L1_ETMHF90_) { b_L1_ETMHF90_->SetAddress(&L1_ETMHF90_); }
    b_L1_ETMHF90_HTT60_ = tree->GetBranch("L1_ETMHF90_HTT60");
    if (b_L1_ETMHF90_HTT60_) { b_L1_ETMHF90_HTT60_->SetAddress(&L1_ETMHF90_HTT60_); }
    b_L1_ETMHF90_HTT60er_ = tree->GetBranch("L1_ETMHF90_HTT60er");
    if (b_L1_ETMHF90_HTT60er_) { b_L1_ETMHF90_HTT60er_->SetAddress(&L1_ETMHF90_HTT60er_); }
    b_L1_ETMHF90_Jet60_OR_DiJet30woTT28_ = tree->GetBranch("L1_ETMHF90_Jet60_OR_DiJet30woTT28");
    if (b_L1_ETMHF90_Jet60_OR_DiJet30woTT28_) { b_L1_ETMHF90_Jet60_OR_DiJet30woTT28_->SetAddress(&L1_ETMHF90_Jet60_OR_DiJet30woTT28_); }
    b_L1_ETMHF90_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_ETMHF90_Jet60_OR_DoubleJet30");
    if (b_L1_ETMHF90_Jet60_OR_DoubleJet30_) { b_L1_ETMHF90_Jet60_OR_DoubleJet30_->SetAddress(&L1_ETMHF90_Jet60_OR_DoubleJet30_); }
    b_L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30_ = tree->GetBranch("L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30");
    if (b_L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30_) { b_L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30_->SetAddress(&L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30_); }
    b_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1_ = tree->GetBranch("L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1");
    if (b_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1_) { b_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1_->SetAddress(&L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1_); }
    b_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6_ = tree->GetBranch("L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6");
    if (b_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6_) { b_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6_->SetAddress(&L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6_); }
    b_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1_ = tree->GetBranch("L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1");
    if (b_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1_) { b_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1_->SetAddress(&L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1_); }
    b_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6_ = tree->GetBranch("L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6");
    if (b_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6_) { b_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6_->SetAddress(&L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6_); }
    b_L1_ETMHF95_Jet60_OR_DoubleJet30_ = tree->GetBranch("L1_ETMHF95_Jet60_OR_DoubleJet30");
    if (b_L1_ETMHF95_Jet60_OR_DoubleJet30_) { b_L1_ETMHF95_Jet60_OR_DoubleJet30_->SetAddress(&L1_ETMHF95_Jet60_OR_DoubleJet30_); }
    b_L1_ETT100_BptxAND_ = tree->GetBranch("L1_ETT100_BptxAND");
    if (b_L1_ETT100_BptxAND_) { b_L1_ETT100_BptxAND_->SetAddress(&L1_ETT100_BptxAND_); }
    b_L1_ETT110_BptxAND_ = tree->GetBranch("L1_ETT110_BptxAND");
    if (b_L1_ETT110_BptxAND_) { b_L1_ETT110_BptxAND_->SetAddress(&L1_ETT110_BptxAND_); }
    b_L1_ETT1200_ = tree->GetBranch("L1_ETT1200");
    if (b_L1_ETT1200_) { b_L1_ETT1200_->SetAddress(&L1_ETT1200_); }
    b_L1_ETT15_BptxAND_ = tree->GetBranch("L1_ETT15_BptxAND");
    if (b_L1_ETT15_BptxAND_) { b_L1_ETT15_BptxAND_->SetAddress(&L1_ETT15_BptxAND_); }
    b_L1_ETT1600_ = tree->GetBranch("L1_ETT1600");
    if (b_L1_ETT1600_) { b_L1_ETT1600_->SetAddress(&L1_ETT1600_); }
    b_L1_ETT2000_ = tree->GetBranch("L1_ETT2000");
    if (b_L1_ETT2000_) { b_L1_ETT2000_->SetAddress(&L1_ETT2000_); }
    b_L1_ETT25_ = tree->GetBranch("L1_ETT25");
    if (b_L1_ETT25_) { b_L1_ETT25_->SetAddress(&L1_ETT25_); }
    b_L1_ETT25_BptxAND_ = tree->GetBranch("L1_ETT25_BptxAND");
    if (b_L1_ETT25_BptxAND_) { b_L1_ETT25_BptxAND_->SetAddress(&L1_ETT25_BptxAND_); }
    b_L1_ETT35_BptxAND_ = tree->GetBranch("L1_ETT35_BptxAND");
    if (b_L1_ETT35_BptxAND_) { b_L1_ETT35_BptxAND_->SetAddress(&L1_ETT35_BptxAND_); }
    b_L1_ETT40_ = tree->GetBranch("L1_ETT40");
    if (b_L1_ETT40_) { b_L1_ETT40_->SetAddress(&L1_ETT40_); }
    b_L1_ETT40_BptxAND_ = tree->GetBranch("L1_ETT40_BptxAND");
    if (b_L1_ETT40_BptxAND_) { b_L1_ETT40_BptxAND_->SetAddress(&L1_ETT40_BptxAND_); }
    b_L1_ETT50_BptxAND_ = tree->GetBranch("L1_ETT50_BptxAND");
    if (b_L1_ETT50_BptxAND_) { b_L1_ETT50_BptxAND_->SetAddress(&L1_ETT50_BptxAND_); }
    b_L1_ETT55_BptxAND_ = tree->GetBranch("L1_ETT55_BptxAND");
    if (b_L1_ETT55_BptxAND_) { b_L1_ETT55_BptxAND_->SetAddress(&L1_ETT55_BptxAND_); }
    b_L1_ETT60_ = tree->GetBranch("L1_ETT60");
    if (b_L1_ETT60_) { b_L1_ETT60_->SetAddress(&L1_ETT60_); }
    b_L1_ETT60_BptxAND_ = tree->GetBranch("L1_ETT60_BptxAND");
    if (b_L1_ETT60_BptxAND_) { b_L1_ETT60_BptxAND_->SetAddress(&L1_ETT60_BptxAND_); }
    b_L1_ETT70_BptxAND_ = tree->GetBranch("L1_ETT70_BptxAND");
    if (b_L1_ETT70_BptxAND_) { b_L1_ETT70_BptxAND_->SetAddress(&L1_ETT70_BptxAND_); }
    b_L1_ETT75_BptxAND_ = tree->GetBranch("L1_ETT75_BptxAND");
    if (b_L1_ETT75_BptxAND_) { b_L1_ETT75_BptxAND_->SetAddress(&L1_ETT75_BptxAND_); }
    b_L1_ETT80_BptxAND_ = tree->GetBranch("L1_ETT80_BptxAND");
    if (b_L1_ETT80_BptxAND_) { b_L1_ETT80_BptxAND_->SetAddress(&L1_ETT80_BptxAND_); }
    b_L1_ETT85_BptxAND_ = tree->GetBranch("L1_ETT85_BptxAND");
    if (b_L1_ETT85_BptxAND_) { b_L1_ETT85_BptxAND_->SetAddress(&L1_ETT85_BptxAND_); }
    b_L1_ETT90_BptxAND_ = tree->GetBranch("L1_ETT90_BptxAND");
    if (b_L1_ETT90_BptxAND_) { b_L1_ETT90_BptxAND_->SetAddress(&L1_ETT90_BptxAND_); }
    b_L1_ETT95_BptxAND_ = tree->GetBranch("L1_ETT95_BptxAND");
    if (b_L1_ETT95_BptxAND_) { b_L1_ETT95_BptxAND_->SetAddress(&L1_ETT95_BptxAND_); }
    b_L1_FirstBunchAfterTrain_ = tree->GetBranch("L1_FirstBunchAfterTrain");
    if (b_L1_FirstBunchAfterTrain_) { b_L1_FirstBunchAfterTrain_->SetAddress(&L1_FirstBunchAfterTrain_); }
    b_L1_FirstBunchBeforeTrain_ = tree->GetBranch("L1_FirstBunchBeforeTrain");
    if (b_L1_FirstBunchBeforeTrain_) { b_L1_FirstBunchBeforeTrain_->SetAddress(&L1_FirstBunchBeforeTrain_); }
    b_L1_FirstBunchInTrain_ = tree->GetBranch("L1_FirstBunchInTrain");
    if (b_L1_FirstBunchInTrain_) { b_L1_FirstBunchInTrain_->SetAddress(&L1_FirstBunchInTrain_); }
    b_L1_FirstCollisionInOrbit_ = tree->GetBranch("L1_FirstCollisionInOrbit");
    if (b_L1_FirstCollisionInOrbit_) { b_L1_FirstCollisionInOrbit_->SetAddress(&L1_FirstCollisionInOrbit_); }
    b_L1_FirstCollisionInTrain_ = tree->GetBranch("L1_FirstCollisionInTrain");
    if (b_L1_FirstCollisionInTrain_) { b_L1_FirstCollisionInTrain_->SetAddress(&L1_FirstCollisionInTrain_); }
    b_L1_HCAL_LaserMon_Trig_ = tree->GetBranch("L1_HCAL_LaserMon_Trig");
    if (b_L1_HCAL_LaserMon_Trig_) { b_L1_HCAL_LaserMon_Trig_->SetAddress(&L1_HCAL_LaserMon_Trig_); }
    b_L1_HCAL_LaserMon_Veto_ = tree->GetBranch("L1_HCAL_LaserMon_Veto");
    if (b_L1_HCAL_LaserMon_Veto_) { b_L1_HCAL_LaserMon_Veto_->SetAddress(&L1_HCAL_LaserMon_Veto_); }
    b_L1_HTM100_ = tree->GetBranch("L1_HTM100");
    if (b_L1_HTM100_) { b_L1_HTM100_->SetAddress(&L1_HTM100_); }
    b_L1_HTM120_ = tree->GetBranch("L1_HTM120");
    if (b_L1_HTM120_) { b_L1_HTM120_->SetAddress(&L1_HTM120_); }
    b_L1_HTM130_ = tree->GetBranch("L1_HTM130");
    if (b_L1_HTM130_) { b_L1_HTM130_->SetAddress(&L1_HTM130_); }
    b_L1_HTM140_ = tree->GetBranch("L1_HTM140");
    if (b_L1_HTM140_) { b_L1_HTM140_->SetAddress(&L1_HTM140_); }
    b_L1_HTM150_ = tree->GetBranch("L1_HTM150");
    if (b_L1_HTM150_) { b_L1_HTM150_->SetAddress(&L1_HTM150_); }
    b_L1_HTM50_ = tree->GetBranch("L1_HTM50");
    if (b_L1_HTM50_) { b_L1_HTM50_->SetAddress(&L1_HTM50_); }
    b_L1_HTM60_HTT260_ = tree->GetBranch("L1_HTM60_HTT260");
    if (b_L1_HTM60_HTT260_) { b_L1_HTM60_HTT260_->SetAddress(&L1_HTM60_HTT260_); }
    b_L1_HTM70_ = tree->GetBranch("L1_HTM70");
    if (b_L1_HTM70_) { b_L1_HTM70_->SetAddress(&L1_HTM70_); }
    b_L1_HTM80_ = tree->GetBranch("L1_HTM80");
    if (b_L1_HTM80_) { b_L1_HTM80_->SetAddress(&L1_HTM80_); }
    b_L1_HTM80_HTT220_ = tree->GetBranch("L1_HTM80_HTT220");
    if (b_L1_HTM80_HTT220_) { b_L1_HTM80_HTT220_->SetAddress(&L1_HTM80_HTT220_); }
    b_L1_HTT120_ = tree->GetBranch("L1_HTT120");
    if (b_L1_HTT120_) { b_L1_HTT120_->SetAddress(&L1_HTT120_); }
    b_L1_HTT120_SingleLLPJet40_ = tree->GetBranch("L1_HTT120_SingleLLPJet40");
    if (b_L1_HTT120_SingleLLPJet40_) { b_L1_HTT120_SingleLLPJet40_->SetAddress(&L1_HTT120_SingleLLPJet40_); }
    b_L1_HTT120er_ = tree->GetBranch("L1_HTT120er");
    if (b_L1_HTT120er_) { b_L1_HTT120er_->SetAddress(&L1_HTT120er_); }
    b_L1_HTT160_ = tree->GetBranch("L1_HTT160");
    if (b_L1_HTT160_) { b_L1_HTT160_->SetAddress(&L1_HTT160_); }
    b_L1_HTT160_SingleLLPJet50_ = tree->GetBranch("L1_HTT160_SingleLLPJet50");
    if (b_L1_HTT160_SingleLLPJet50_) { b_L1_HTT160_SingleLLPJet50_->SetAddress(&L1_HTT160_SingleLLPJet50_); }
    b_L1_HTT160er_ = tree->GetBranch("L1_HTT160er");
    if (b_L1_HTT160er_) { b_L1_HTT160er_->SetAddress(&L1_HTT160er_); }
    b_L1_HTT200_ = tree->GetBranch("L1_HTT200");
    if (b_L1_HTT200_) { b_L1_HTT200_->SetAddress(&L1_HTT200_); }
    b_L1_HTT200_SingleLLPJet60_ = tree->GetBranch("L1_HTT200_SingleLLPJet60");
    if (b_L1_HTT200_SingleLLPJet60_) { b_L1_HTT200_SingleLLPJet60_->SetAddress(&L1_HTT200_SingleLLPJet60_); }
    b_L1_HTT200er_ = tree->GetBranch("L1_HTT200er");
    if (b_L1_HTT200er_) { b_L1_HTT200er_->SetAddress(&L1_HTT200er_); }
    b_L1_HTT220_ = tree->GetBranch("L1_HTT220");
    if (b_L1_HTT220_) { b_L1_HTT220_->SetAddress(&L1_HTT220_); }
    b_L1_HTT220er_ = tree->GetBranch("L1_HTT220er");
    if (b_L1_HTT220er_) { b_L1_HTT220er_->SetAddress(&L1_HTT220er_); }
    b_L1_HTT240_ = tree->GetBranch("L1_HTT240");
    if (b_L1_HTT240_) { b_L1_HTT240_->SetAddress(&L1_HTT240_); }
    b_L1_HTT240_SingleLLPJet70_ = tree->GetBranch("L1_HTT240_SingleLLPJet70");
    if (b_L1_HTT240_SingleLLPJet70_) { b_L1_HTT240_SingleLLPJet70_->SetAddress(&L1_HTT240_SingleLLPJet70_); }
    b_L1_HTT240er_ = tree->GetBranch("L1_HTT240er");
    if (b_L1_HTT240er_) { b_L1_HTT240er_->SetAddress(&L1_HTT240er_); }
    b_L1_HTT250er_QuadJet_70_55_40_35_er2p5_ = tree->GetBranch("L1_HTT250er_QuadJet_70_55_40_35_er2p5");
    if (b_L1_HTT250er_QuadJet_70_55_40_35_er2p5_) { b_L1_HTT250er_QuadJet_70_55_40_35_er2p5_->SetAddress(&L1_HTT250er_QuadJet_70_55_40_35_er2p5_); }
    b_L1_HTT255_ = tree->GetBranch("L1_HTT255");
    if (b_L1_HTT255_) { b_L1_HTT255_->SetAddress(&L1_HTT255_); }
    b_L1_HTT255er_ = tree->GetBranch("L1_HTT255er");
    if (b_L1_HTT255er_) { b_L1_HTT255er_->SetAddress(&L1_HTT255er_); }
    b_L1_HTT270_ = tree->GetBranch("L1_HTT270");
    if (b_L1_HTT270_) { b_L1_HTT270_->SetAddress(&L1_HTT270_); }
    b_L1_HTT270er_ = tree->GetBranch("L1_HTT270er");
    if (b_L1_HTT270er_) { b_L1_HTT270er_->SetAddress(&L1_HTT270er_); }
    b_L1_HTT280_ = tree->GetBranch("L1_HTT280");
    if (b_L1_HTT280_) { b_L1_HTT280_->SetAddress(&L1_HTT280_); }
    b_L1_HTT280er_ = tree->GetBranch("L1_HTT280er");
    if (b_L1_HTT280er_) { b_L1_HTT280er_->SetAddress(&L1_HTT280er_); }
    b_L1_HTT280er_QuadJet_70_55_40_35_er2p4_ = tree->GetBranch("L1_HTT280er_QuadJet_70_55_40_35_er2p4");
    if (b_L1_HTT280er_QuadJet_70_55_40_35_er2p4_) { b_L1_HTT280er_QuadJet_70_55_40_35_er2p4_->SetAddress(&L1_HTT280er_QuadJet_70_55_40_35_er2p4_); }
    b_L1_HTT280er_QuadJet_70_55_40_35_er2p5_ = tree->GetBranch("L1_HTT280er_QuadJet_70_55_40_35_er2p5");
    if (b_L1_HTT280er_QuadJet_70_55_40_35_er2p5_) { b_L1_HTT280er_QuadJet_70_55_40_35_er2p5_->SetAddress(&L1_HTT280er_QuadJet_70_55_40_35_er2p5_); }
    b_L1_HTT300_ = tree->GetBranch("L1_HTT300");
    if (b_L1_HTT300_) { b_L1_HTT300_->SetAddress(&L1_HTT300_); }
    b_L1_HTT300er_ = tree->GetBranch("L1_HTT300er");
    if (b_L1_HTT300er_) { b_L1_HTT300er_->SetAddress(&L1_HTT300er_); }
    b_L1_HTT300er_QuadJet_70_55_40_35_er2p5_ = tree->GetBranch("L1_HTT300er_QuadJet_70_55_40_35_er2p5");
    if (b_L1_HTT300er_QuadJet_70_55_40_35_er2p5_) { b_L1_HTT300er_QuadJet_70_55_40_35_er2p5_->SetAddress(&L1_HTT300er_QuadJet_70_55_40_35_er2p5_); }
    b_L1_HTT320_ = tree->GetBranch("L1_HTT320");
    if (b_L1_HTT320_) { b_L1_HTT320_->SetAddress(&L1_HTT320_); }
    b_L1_HTT320er_ = tree->GetBranch("L1_HTT320er");
    if (b_L1_HTT320er_) { b_L1_HTT320er_->SetAddress(&L1_HTT320er_); }
    b_L1_HTT320er_QuadJet_70_55_40_40_er2p4_ = tree->GetBranch("L1_HTT320er_QuadJet_70_55_40_40_er2p4");
    if (b_L1_HTT320er_QuadJet_70_55_40_40_er2p4_) { b_L1_HTT320er_QuadJet_70_55_40_40_er2p4_->SetAddress(&L1_HTT320er_QuadJet_70_55_40_40_er2p4_); }
    b_L1_HTT320er_QuadJet_70_55_40_40_er2p5_ = tree->GetBranch("L1_HTT320er_QuadJet_70_55_40_40_er2p5");
    if (b_L1_HTT320er_QuadJet_70_55_40_40_er2p5_) { b_L1_HTT320er_QuadJet_70_55_40_40_er2p5_->SetAddress(&L1_HTT320er_QuadJet_70_55_40_40_er2p5_); }
    b_L1_HTT320er_QuadJet_70_55_45_45_er2p5_ = tree->GetBranch("L1_HTT320er_QuadJet_70_55_45_45_er2p5");
    if (b_L1_HTT320er_QuadJet_70_55_45_45_er2p5_) { b_L1_HTT320er_QuadJet_70_55_45_45_er2p5_->SetAddress(&L1_HTT320er_QuadJet_70_55_45_45_er2p5_); }
    b_L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3_ = tree->GetBranch("L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3");
    if (b_L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3_) { b_L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3_->SetAddress(&L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3_); }
    b_L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3_ = tree->GetBranch("L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3");
    if (b_L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3_) { b_L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3_->SetAddress(&L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3_); }
    b_L1_HTT340er_ = tree->GetBranch("L1_HTT340er");
    if (b_L1_HTT340er_) { b_L1_HTT340er_->SetAddress(&L1_HTT340er_); }
    b_L1_HTT340er_QuadJet_70_55_40_40_er2p5_ = tree->GetBranch("L1_HTT340er_QuadJet_70_55_40_40_er2p5");
    if (b_L1_HTT340er_QuadJet_70_55_40_40_er2p5_) { b_L1_HTT340er_QuadJet_70_55_40_40_er2p5_->SetAddress(&L1_HTT340er_QuadJet_70_55_40_40_er2p5_); }
    b_L1_HTT340er_QuadJet_70_55_45_45_er2p5_ = tree->GetBranch("L1_HTT340er_QuadJet_70_55_45_45_er2p5");
    if (b_L1_HTT340er_QuadJet_70_55_45_45_er2p5_) { b_L1_HTT340er_QuadJet_70_55_45_45_er2p5_->SetAddress(&L1_HTT340er_QuadJet_70_55_45_45_er2p5_); }
    b_L1_HTT360er_ = tree->GetBranch("L1_HTT360er");
    if (b_L1_HTT360er_) { b_L1_HTT360er_->SetAddress(&L1_HTT360er_); }
    b_L1_HTT380er_ = tree->GetBranch("L1_HTT380er");
    if (b_L1_HTT380er_) { b_L1_HTT380er_->SetAddress(&L1_HTT380er_); }
    b_L1_HTT400er_ = tree->GetBranch("L1_HTT400er");
    if (b_L1_HTT400er_) { b_L1_HTT400er_->SetAddress(&L1_HTT400er_); }
    b_L1_HTT450er_ = tree->GetBranch("L1_HTT450er");
    if (b_L1_HTT450er_) { b_L1_HTT450er_->SetAddress(&L1_HTT450er_); }
    b_L1_HTT500er_ = tree->GetBranch("L1_HTT500er");
    if (b_L1_HTT500er_) { b_L1_HTT500er_->SetAddress(&L1_HTT500er_); }
    b_L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2_ = tree->GetBranch("L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2");
    if (b_L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2_) { b_L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2_->SetAddress(&L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2_); }
    b_L1_IsoEG18er_IsoTau24er_dEta_Min0p2_ = tree->GetBranch("L1_IsoEG18er_IsoTau24er_dEta_Min0p2");
    if (b_L1_IsoEG18er_IsoTau24er_dEta_Min0p2_) { b_L1_IsoEG18er_IsoTau24er_dEta_Min0p2_->SetAddress(&L1_IsoEG18er_IsoTau24er_dEta_Min0p2_); }
    b_L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2_ = tree->GetBranch("L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2");
    if (b_L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2_) { b_L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2_->SetAddress(&L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2_); }
    b_L1_IsoEG20er_IsoTau25er_dEta_Min0p2_ = tree->GetBranch("L1_IsoEG20er_IsoTau25er_dEta_Min0p2");
    if (b_L1_IsoEG20er_IsoTau25er_dEta_Min0p2_) { b_L1_IsoEG20er_IsoTau25er_dEta_Min0p2_->SetAddress(&L1_IsoEG20er_IsoTau25er_dEta_Min0p2_); }
    b_L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2_ = tree->GetBranch("L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2");
    if (b_L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2_) { b_L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2_->SetAddress(&L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2_); }
    b_L1_IsoEG22er_IsoTau26er_dEta_Min0p2_ = tree->GetBranch("L1_IsoEG22er_IsoTau26er_dEta_Min0p2");
    if (b_L1_IsoEG22er_IsoTau26er_dEta_Min0p2_) { b_L1_IsoEG22er_IsoTau26er_dEta_Min0p2_->SetAddress(&L1_IsoEG22er_IsoTau26er_dEta_Min0p2_); }
    b_L1_IsoEG22er_Tau20er_dEta_Min0p2_ = tree->GetBranch("L1_IsoEG22er_Tau20er_dEta_Min0p2");
    if (b_L1_IsoEG22er_Tau20er_dEta_Min0p2_) { b_L1_IsoEG22er_Tau20er_dEta_Min0p2_->SetAddress(&L1_IsoEG22er_Tau20er_dEta_Min0p2_); }
    b_L1_IsoEG24er2p1_HTT100er_ = tree->GetBranch("L1_IsoEG24er2p1_HTT100er");
    if (b_L1_IsoEG24er2p1_HTT100er_) { b_L1_IsoEG24er2p1_HTT100er_->SetAddress(&L1_IsoEG24er2p1_HTT100er_); }
    b_L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3_ = tree->GetBranch("L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3");
    if (b_L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3_) { b_L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3_->SetAddress(&L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3_); }
    b_L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_ = tree->GetBranch("L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0");
    if (b_L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_) { b_L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_->SetAddress(&L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_); }
    b_L1_IsoEG26er2p1_HTT100er_ = tree->GetBranch("L1_IsoEG26er2p1_HTT100er");
    if (b_L1_IsoEG26er2p1_HTT100er_) { b_L1_IsoEG26er2p1_HTT100er_->SetAddress(&L1_IsoEG26er2p1_HTT100er_); }
    b_L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3_ = tree->GetBranch("L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3");
    if (b_L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3_) { b_L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3_->SetAddress(&L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3_); }
    b_L1_IsoEG28er2p1_HTT100er_ = tree->GetBranch("L1_IsoEG28er2p1_HTT100er");
    if (b_L1_IsoEG28er2p1_HTT100er_) { b_L1_IsoEG28er2p1_HTT100er_->SetAddress(&L1_IsoEG28er2p1_HTT100er_); }
    b_L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3_ = tree->GetBranch("L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3");
    if (b_L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3_) { b_L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3_->SetAddress(&L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3_); }
    b_L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3_ = tree->GetBranch("L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3");
    if (b_L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3_) { b_L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3_->SetAddress(&L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3_); }
    b_L1_IsoEG32er2p5_Mt40_ = tree->GetBranch("L1_IsoEG32er2p5_Mt40");
    if (b_L1_IsoEG32er2p5_Mt40_) { b_L1_IsoEG32er2p5_Mt40_->SetAddress(&L1_IsoEG32er2p5_Mt40_); }
    b_L1_IsoEG32er2p5_Mt44_ = tree->GetBranch("L1_IsoEG32er2p5_Mt44");
    if (b_L1_IsoEG32er2p5_Mt44_) { b_L1_IsoEG32er2p5_Mt44_->SetAddress(&L1_IsoEG32er2p5_Mt44_); }
    b_L1_IsoEG32er2p5_Mt48_ = tree->GetBranch("L1_IsoEG32er2p5_Mt48");
    if (b_L1_IsoEG32er2p5_Mt48_) { b_L1_IsoEG32er2p5_Mt48_->SetAddress(&L1_IsoEG32er2p5_Mt48_); }
    b_L1_IsoEG33_Mt40_ = tree->GetBranch("L1_IsoEG33_Mt40");
    if (b_L1_IsoEG33_Mt40_) { b_L1_IsoEG33_Mt40_->SetAddress(&L1_IsoEG33_Mt40_); }
    b_L1_IsoEG33_Mt44_ = tree->GetBranch("L1_IsoEG33_Mt44");
    if (b_L1_IsoEG33_Mt44_) { b_L1_IsoEG33_Mt44_->SetAddress(&L1_IsoEG33_Mt44_); }
    b_L1_IsoEG33_Mt48_ = tree->GetBranch("L1_IsoEG33_Mt48");
    if (b_L1_IsoEG33_Mt48_) { b_L1_IsoEG33_Mt48_->SetAddress(&L1_IsoEG33_Mt48_); }
    b_L1_IsoTau40er2p1_ETMHF100_ = tree->GetBranch("L1_IsoTau40er2p1_ETMHF100");
    if (b_L1_IsoTau40er2p1_ETMHF100_) { b_L1_IsoTau40er2p1_ETMHF100_->SetAddress(&L1_IsoTau40er2p1_ETMHF100_); }
    b_L1_IsoTau40er2p1_ETMHF110_ = tree->GetBranch("L1_IsoTau40er2p1_ETMHF110");
    if (b_L1_IsoTau40er2p1_ETMHF110_) { b_L1_IsoTau40er2p1_ETMHF110_->SetAddress(&L1_IsoTau40er2p1_ETMHF110_); }
    b_L1_IsoTau40er2p1_ETMHF120_ = tree->GetBranch("L1_IsoTau40er2p1_ETMHF120");
    if (b_L1_IsoTau40er2p1_ETMHF120_) { b_L1_IsoTau40er2p1_ETMHF120_->SetAddress(&L1_IsoTau40er2p1_ETMHF120_); }
    b_L1_IsoTau40er2p1_ETMHF80_ = tree->GetBranch("L1_IsoTau40er2p1_ETMHF80");
    if (b_L1_IsoTau40er2p1_ETMHF80_) { b_L1_IsoTau40er2p1_ETMHF80_->SetAddress(&L1_IsoTau40er2p1_ETMHF80_); }
    b_L1_IsoTau40er2p1_ETMHF90_ = tree->GetBranch("L1_IsoTau40er2p1_ETMHF90");
    if (b_L1_IsoTau40er2p1_ETMHF90_) { b_L1_IsoTau40er2p1_ETMHF90_->SetAddress(&L1_IsoTau40er2p1_ETMHF90_); }
    b_L1_IsoTau40er_ETM100_ = tree->GetBranch("L1_IsoTau40er_ETM100");
    if (b_L1_IsoTau40er_ETM100_) { b_L1_IsoTau40er_ETM100_->SetAddress(&L1_IsoTau40er_ETM100_); }
    b_L1_IsoTau40er_ETM105_ = tree->GetBranch("L1_IsoTau40er_ETM105");
    if (b_L1_IsoTau40er_ETM105_) { b_L1_IsoTau40er_ETM105_->SetAddress(&L1_IsoTau40er_ETM105_); }
    b_L1_IsoTau40er_ETM110_ = tree->GetBranch("L1_IsoTau40er_ETM110");
    if (b_L1_IsoTau40er_ETM110_) { b_L1_IsoTau40er_ETM110_->SetAddress(&L1_IsoTau40er_ETM110_); }
    b_L1_IsoTau40er_ETM115_ = tree->GetBranch("L1_IsoTau40er_ETM115");
    if (b_L1_IsoTau40er_ETM115_) { b_L1_IsoTau40er_ETM115_->SetAddress(&L1_IsoTau40er_ETM115_); }
    b_L1_IsoTau40er_ETM120_ = tree->GetBranch("L1_IsoTau40er_ETM120");
    if (b_L1_IsoTau40er_ETM120_) { b_L1_IsoTau40er_ETM120_->SetAddress(&L1_IsoTau40er_ETM120_); }
    b_L1_IsoTau40er_ETM80_ = tree->GetBranch("L1_IsoTau40er_ETM80");
    if (b_L1_IsoTau40er_ETM80_) { b_L1_IsoTau40er_ETM80_->SetAddress(&L1_IsoTau40er_ETM80_); }
    b_L1_IsoTau40er_ETM85_ = tree->GetBranch("L1_IsoTau40er_ETM85");
    if (b_L1_IsoTau40er_ETM85_) { b_L1_IsoTau40er_ETM85_->SetAddress(&L1_IsoTau40er_ETM85_); }
    b_L1_IsoTau40er_ETM90_ = tree->GetBranch("L1_IsoTau40er_ETM90");
    if (b_L1_IsoTau40er_ETM90_) { b_L1_IsoTau40er_ETM90_->SetAddress(&L1_IsoTau40er_ETM90_); }
    b_L1_IsoTau40er_ETM95_ = tree->GetBranch("L1_IsoTau40er_ETM95");
    if (b_L1_IsoTau40er_ETM95_) { b_L1_IsoTau40er_ETM95_->SetAddress(&L1_IsoTau40er_ETM95_); }
    b_L1_IsoTau40er_ETMHF100_ = tree->GetBranch("L1_IsoTau40er_ETMHF100");
    if (b_L1_IsoTau40er_ETMHF100_) { b_L1_IsoTau40er_ETMHF100_->SetAddress(&L1_IsoTau40er_ETMHF100_); }
    b_L1_IsoTau40er_ETMHF110_ = tree->GetBranch("L1_IsoTau40er_ETMHF110");
    if (b_L1_IsoTau40er_ETMHF110_) { b_L1_IsoTau40er_ETMHF110_->SetAddress(&L1_IsoTau40er_ETMHF110_); }
    b_L1_IsoTau40er_ETMHF120_ = tree->GetBranch("L1_IsoTau40er_ETMHF120");
    if (b_L1_IsoTau40er_ETMHF120_) { b_L1_IsoTau40er_ETMHF120_->SetAddress(&L1_IsoTau40er_ETMHF120_); }
    b_L1_IsoTau40er_ETMHF80_ = tree->GetBranch("L1_IsoTau40er_ETMHF80");
    if (b_L1_IsoTau40er_ETMHF80_) { b_L1_IsoTau40er_ETMHF80_->SetAddress(&L1_IsoTau40er_ETMHF80_); }
    b_L1_IsoTau40er_ETMHF90_ = tree->GetBranch("L1_IsoTau40er_ETMHF90");
    if (b_L1_IsoTau40er_ETMHF90_) { b_L1_IsoTau40er_ETMHF90_->SetAddress(&L1_IsoTau40er_ETMHF90_); }
    b_L1_IsoTau52er2p1_QuadJet36er2p5_ = tree->GetBranch("L1_IsoTau52er2p1_QuadJet36er2p5");
    if (b_L1_IsoTau52er2p1_QuadJet36er2p5_) { b_L1_IsoTau52er2p1_QuadJet36er2p5_->SetAddress(&L1_IsoTau52er2p1_QuadJet36er2p5_); }
    b_L1_IsolatedBunch_ = tree->GetBranch("L1_IsolatedBunch");
    if (b_L1_IsolatedBunch_) { b_L1_IsolatedBunch_->SetAddress(&L1_IsolatedBunch_); }
    b_L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_ = tree->GetBranch("L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0");
    if (b_L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_) { b_L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_->SetAddress(&L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_); }
    b_L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_ = tree->GetBranch("L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0");
    if (b_L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_) { b_L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_->SetAddress(&L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_); }
    b_L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_ = tree->GetBranch("L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0");
    if (b_L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_) { b_L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_->SetAddress(&L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_); }
    b_L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_ = tree->GetBranch("L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0");
    if (b_L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_) { b_L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_->SetAddress(&L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_); }
    b_L1_LastBunchInTrain_ = tree->GetBranch("L1_LastBunchInTrain");
    if (b_L1_LastBunchInTrain_) { b_L1_LastBunchInTrain_->SetAddress(&L1_LastBunchInTrain_); }
    b_L1_LastCollisionInTrain_ = tree->GetBranch("L1_LastCollisionInTrain");
    if (b_L1_LastCollisionInTrain_) { b_L1_LastCollisionInTrain_->SetAddress(&L1_LastCollisionInTrain_); }
    b_L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3_ = tree->GetBranch("L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3");
    if (b_L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3_) { b_L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3_->SetAddress(&L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3_); }
    b_L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3_ = tree->GetBranch("L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3");
    if (b_L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3_) { b_L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3_->SetAddress(&L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3_); }
    b_L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3_ = tree->GetBranch("L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3");
    if (b_L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3_) { b_L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3_->SetAddress(&L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3_); }
    b_L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3_ = tree->GetBranch("L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3");
    if (b_L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3_) { b_L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3_->SetAddress(&L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3_); }
    b_L1_LooseIsoEG24er2p1_HTT100er_ = tree->GetBranch("L1_LooseIsoEG24er2p1_HTT100er");
    if (b_L1_LooseIsoEG24er2p1_HTT100er_) { b_L1_LooseIsoEG24er2p1_HTT100er_->SetAddress(&L1_LooseIsoEG24er2p1_HTT100er_); }
    b_L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3_ = tree->GetBranch("L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3");
    if (b_L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3_) { b_L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3_->SetAddress(&L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3_); }
    b_L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3_ = tree->GetBranch("L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3");
    if (b_L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3_) { b_L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3_->SetAddress(&L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3_); }
    b_L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3_ = tree->GetBranch("L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3");
    if (b_L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3_) { b_L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3_->SetAddress(&L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3_); }
    b_L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7_ = tree->GetBranch("L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7");
    if (b_L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7_) { b_L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7_->SetAddress(&L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7_); }
    b_L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_ = tree->GetBranch("L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0");
    if (b_L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_) { b_L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_->SetAddress(&L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_); }
    b_L1_LooseIsoEG26er2p1_HTT100er_ = tree->GetBranch("L1_LooseIsoEG26er2p1_HTT100er");
    if (b_L1_LooseIsoEG26er2p1_HTT100er_) { b_L1_LooseIsoEG26er2p1_HTT100er_->SetAddress(&L1_LooseIsoEG26er2p1_HTT100er_); }
    b_L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3_ = tree->GetBranch("L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3");
    if (b_L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3_) { b_L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3_->SetAddress(&L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3_); }
    b_L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3_ = tree->GetBranch("L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3");
    if (b_L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3_) { b_L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3_->SetAddress(&L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3_); }
    b_L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3_ = tree->GetBranch("L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3");
    if (b_L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3_) { b_L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3_->SetAddress(&L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3_); }
    b_L1_LooseIsoEG28er2p1_HTT100er_ = tree->GetBranch("L1_LooseIsoEG28er2p1_HTT100er");
    if (b_L1_LooseIsoEG28er2p1_HTT100er_) { b_L1_LooseIsoEG28er2p1_HTT100er_->SetAddress(&L1_LooseIsoEG28er2p1_HTT100er_); }
    b_L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3_ = tree->GetBranch("L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3");
    if (b_L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3_) { b_L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3_->SetAddress(&L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3_); }
    b_L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3_ = tree->GetBranch("L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3");
    if (b_L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3_) { b_L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3_->SetAddress(&L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3_); }
    b_L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3_ = tree->GetBranch("L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3");
    if (b_L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3_) { b_L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3_->SetAddress(&L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3_); }
    b_L1_LooseIsoEG30er2p1_HTT100er_ = tree->GetBranch("L1_LooseIsoEG30er2p1_HTT100er");
    if (b_L1_LooseIsoEG30er2p1_HTT100er_) { b_L1_LooseIsoEG30er2p1_HTT100er_->SetAddress(&L1_LooseIsoEG30er2p1_HTT100er_); }
    b_L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3_ = tree->GetBranch("L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3");
    if (b_L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3_) { b_L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3_->SetAddress(&L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3_); }
    b_L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3_ = tree->GetBranch("L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3");
    if (b_L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3_) { b_L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3_->SetAddress(&L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3_); }
    b_L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3_ = tree->GetBranch("L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3");
    if (b_L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3_) { b_L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3_->SetAddress(&L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3_); }
    b_L1_MU20_EG15_ = tree->GetBranch("L1_MU20_EG15");
    if (b_L1_MU20_EG15_) { b_L1_MU20_EG15_->SetAddress(&L1_MU20_EG15_); }
    b_L1_MinimumBiasHF0_ = tree->GetBranch("L1_MinimumBiasHF0");
    if (b_L1_MinimumBiasHF0_) { b_L1_MinimumBiasHF0_->SetAddress(&L1_MinimumBiasHF0_); }
    b_L1_MinimumBiasHF0_AND_ = tree->GetBranch("L1_MinimumBiasHF0_AND");
    if (b_L1_MinimumBiasHF0_AND_) { b_L1_MinimumBiasHF0_AND_->SetAddress(&L1_MinimumBiasHF0_AND_); }
    b_L1_MinimumBiasHF0_AND_BptxAND_ = tree->GetBranch("L1_MinimumBiasHF0_AND_BptxAND");
    if (b_L1_MinimumBiasHF0_AND_BptxAND_) { b_L1_MinimumBiasHF0_AND_BptxAND_->SetAddress(&L1_MinimumBiasHF0_AND_BptxAND_); }
    b_L1_MinimumBiasHF0_OR_ = tree->GetBranch("L1_MinimumBiasHF0_OR");
    if (b_L1_MinimumBiasHF0_OR_) { b_L1_MinimumBiasHF0_OR_->SetAddress(&L1_MinimumBiasHF0_OR_); }
    b_L1_MinimumBiasHF0_OR_BptxAND_ = tree->GetBranch("L1_MinimumBiasHF0_OR_BptxAND");
    if (b_L1_MinimumBiasHF0_OR_BptxAND_) { b_L1_MinimumBiasHF0_OR_BptxAND_->SetAddress(&L1_MinimumBiasHF0_OR_BptxAND_); }
    b_L1_MinimumBiasHF1_AND_ = tree->GetBranch("L1_MinimumBiasHF1_AND");
    if (b_L1_MinimumBiasHF1_AND_) { b_L1_MinimumBiasHF1_AND_->SetAddress(&L1_MinimumBiasHF1_AND_); }
    b_L1_MinimumBiasHF1_AND_BptxAND_ = tree->GetBranch("L1_MinimumBiasHF1_AND_BptxAND");
    if (b_L1_MinimumBiasHF1_AND_BptxAND_) { b_L1_MinimumBiasHF1_AND_BptxAND_->SetAddress(&L1_MinimumBiasHF1_AND_BptxAND_); }
    b_L1_MinimumBiasHF1_OR_ = tree->GetBranch("L1_MinimumBiasHF1_OR");
    if (b_L1_MinimumBiasHF1_OR_) { b_L1_MinimumBiasHF1_OR_->SetAddress(&L1_MinimumBiasHF1_OR_); }
    b_L1_MinimumBiasHF1_OR_BptxAND_ = tree->GetBranch("L1_MinimumBiasHF1_OR_BptxAND");
    if (b_L1_MinimumBiasHF1_OR_BptxAND_) { b_L1_MinimumBiasHF1_OR_BptxAND_->SetAddress(&L1_MinimumBiasHF1_OR_BptxAND_); }
    b_L1_Mu0er_ETM40_ = tree->GetBranch("L1_Mu0er_ETM40");
    if (b_L1_Mu0er_ETM40_) { b_L1_Mu0er_ETM40_->SetAddress(&L1_Mu0er_ETM40_); }
    b_L1_Mu0er_ETM55_ = tree->GetBranch("L1_Mu0er_ETM55");
    if (b_L1_Mu0er_ETM55_) { b_L1_Mu0er_ETM55_->SetAddress(&L1_Mu0er_ETM55_); }
    b_L1_Mu10er2p1_ETM30_ = tree->GetBranch("L1_Mu10er2p1_ETM30");
    if (b_L1_Mu10er2p1_ETM30_) { b_L1_Mu10er2p1_ETM30_->SetAddress(&L1_Mu10er2p1_ETM30_); }
    b_L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6_ = tree->GetBranch("L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6");
    if (b_L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6_) { b_L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6_->SetAddress(&L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6_); }
    b_L1_Mu10er_ETM30_ = tree->GetBranch("L1_Mu10er_ETM30");
    if (b_L1_Mu10er_ETM30_) { b_L1_Mu10er_ETM30_->SetAddress(&L1_Mu10er_ETM30_); }
    b_L1_Mu10er_ETM50_ = tree->GetBranch("L1_Mu10er_ETM50");
    if (b_L1_Mu10er_ETM50_) { b_L1_Mu10er_ETM50_->SetAddress(&L1_Mu10er_ETM50_); }
    b_L1_Mu12_EG10_ = tree->GetBranch("L1_Mu12_EG10");
    if (b_L1_Mu12_EG10_) { b_L1_Mu12_EG10_->SetAddress(&L1_Mu12_EG10_); }
    b_L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6_ = tree->GetBranch("L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6");
    if (b_L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6_) { b_L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6_->SetAddress(&L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6_); }
    b_L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6_ = tree->GetBranch("L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6");
    if (b_L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6_) { b_L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6_->SetAddress(&L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6_); }
    b_L1_Mu14er2p1_ETM30_ = tree->GetBranch("L1_Mu14er2p1_ETM30");
    if (b_L1_Mu14er2p1_ETM30_) { b_L1_Mu14er2p1_ETM30_->SetAddress(&L1_Mu14er2p1_ETM30_); }
    b_L1_Mu14er_ETM30_ = tree->GetBranch("L1_Mu14er_ETM30");
    if (b_L1_Mu14er_ETM30_) { b_L1_Mu14er_ETM30_->SetAddress(&L1_Mu14er_ETM30_); }
    b_L1_Mu15_HTT100er_ = tree->GetBranch("L1_Mu15_HTT100er");
    if (b_L1_Mu15_HTT100er_) { b_L1_Mu15_HTT100er_->SetAddress(&L1_Mu15_HTT100er_); }
    b_L1_Mu16er2p1_Tau20er2p1_ = tree->GetBranch("L1_Mu16er2p1_Tau20er2p1");
    if (b_L1_Mu16er2p1_Tau20er2p1_) { b_L1_Mu16er2p1_Tau20er2p1_->SetAddress(&L1_Mu16er2p1_Tau20er2p1_); }
    b_L1_Mu16er2p1_Tau24er2p1_ = tree->GetBranch("L1_Mu16er2p1_Tau24er2p1");
    if (b_L1_Mu16er2p1_Tau24er2p1_) { b_L1_Mu16er2p1_Tau24er2p1_->SetAddress(&L1_Mu16er2p1_Tau24er2p1_); }
    b_L1_Mu16er_Tau20er_ = tree->GetBranch("L1_Mu16er_Tau20er");
    if (b_L1_Mu16er_Tau20er_) { b_L1_Mu16er_Tau20er_->SetAddress(&L1_Mu16er_Tau20er_); }
    b_L1_Mu16er_Tau24er_ = tree->GetBranch("L1_Mu16er_Tau24er");
    if (b_L1_Mu16er_Tau24er_) { b_L1_Mu16er_Tau24er_->SetAddress(&L1_Mu16er_Tau24er_); }
    b_L1_Mu18_HTT100er_ = tree->GetBranch("L1_Mu18_HTT100er");
    if (b_L1_Mu18_HTT100er_) { b_L1_Mu18_HTT100er_->SetAddress(&L1_Mu18_HTT100er_); }
    b_L1_Mu18_Jet24er2p7_ = tree->GetBranch("L1_Mu18_Jet24er2p7");
    if (b_L1_Mu18_Jet24er2p7_) { b_L1_Mu18_Jet24er2p7_->SetAddress(&L1_Mu18_Jet24er2p7_); }
    b_L1_Mu18_Jet24er3p0_ = tree->GetBranch("L1_Mu18_Jet24er3p0");
    if (b_L1_Mu18_Jet24er3p0_) { b_L1_Mu18_Jet24er3p0_->SetAddress(&L1_Mu18_Jet24er3p0_); }
    b_L1_Mu18er2p1_IsoTau26er2p1_ = tree->GetBranch("L1_Mu18er2p1_IsoTau26er2p1");
    if (b_L1_Mu18er2p1_IsoTau26er2p1_) { b_L1_Mu18er2p1_IsoTau26er2p1_->SetAddress(&L1_Mu18er2p1_IsoTau26er2p1_); }
    b_L1_Mu18er2p1_Tau20er2p1_ = tree->GetBranch("L1_Mu18er2p1_Tau20er2p1");
    if (b_L1_Mu18er2p1_Tau20er2p1_) { b_L1_Mu18er2p1_Tau20er2p1_->SetAddress(&L1_Mu18er2p1_Tau20er2p1_); }
    b_L1_Mu18er2p1_Tau24er2p1_ = tree->GetBranch("L1_Mu18er2p1_Tau24er2p1");
    if (b_L1_Mu18er2p1_Tau24er2p1_) { b_L1_Mu18er2p1_Tau24er2p1_->SetAddress(&L1_Mu18er2p1_Tau24er2p1_); }
    b_L1_Mu18er2p1_Tau26er2p1_ = tree->GetBranch("L1_Mu18er2p1_Tau26er2p1");
    if (b_L1_Mu18er2p1_Tau26er2p1_) { b_L1_Mu18er2p1_Tau26er2p1_->SetAddress(&L1_Mu18er2p1_Tau26er2p1_); }
    b_L1_Mu18er2p1_Tau26er2p1_Jet55_ = tree->GetBranch("L1_Mu18er2p1_Tau26er2p1_Jet55");
    if (b_L1_Mu18er2p1_Tau26er2p1_Jet55_) { b_L1_Mu18er2p1_Tau26er2p1_Jet55_->SetAddress(&L1_Mu18er2p1_Tau26er2p1_Jet55_); }
    b_L1_Mu18er2p1_Tau26er2p1_Jet70_ = tree->GetBranch("L1_Mu18er2p1_Tau26er2p1_Jet70");
    if (b_L1_Mu18er2p1_Tau26er2p1_Jet70_) { b_L1_Mu18er2p1_Tau26er2p1_Jet70_->SetAddress(&L1_Mu18er2p1_Tau26er2p1_Jet70_); }
    b_L1_Mu18er_IsoTau26er_ = tree->GetBranch("L1_Mu18er_IsoTau26er");
    if (b_L1_Mu18er_IsoTau26er_) { b_L1_Mu18er_IsoTau26er_->SetAddress(&L1_Mu18er_IsoTau26er_); }
    b_L1_Mu18er_Tau20er_ = tree->GetBranch("L1_Mu18er_Tau20er");
    if (b_L1_Mu18er_Tau20er_) { b_L1_Mu18er_Tau20er_->SetAddress(&L1_Mu18er_Tau20er_); }
    b_L1_Mu18er_Tau24er_ = tree->GetBranch("L1_Mu18er_Tau24er");
    if (b_L1_Mu18er_Tau24er_) { b_L1_Mu18er_Tau24er_->SetAddress(&L1_Mu18er_Tau24er_); }
    b_L1_Mu20_EG10_ = tree->GetBranch("L1_Mu20_EG10");
    if (b_L1_Mu20_EG10_) { b_L1_Mu20_EG10_->SetAddress(&L1_Mu20_EG10_); }
    b_L1_Mu20_EG10er2p5_ = tree->GetBranch("L1_Mu20_EG10er2p5");
    if (b_L1_Mu20_EG10er2p5_) { b_L1_Mu20_EG10er2p5_->SetAddress(&L1_Mu20_EG10er2p5_); }
    b_L1_Mu20_EG17_ = tree->GetBranch("L1_Mu20_EG17");
    if (b_L1_Mu20_EG17_) { b_L1_Mu20_EG17_->SetAddress(&L1_Mu20_EG17_); }
    b_L1_Mu20_IsoEG6_ = tree->GetBranch("L1_Mu20_IsoEG6");
    if (b_L1_Mu20_IsoEG6_) { b_L1_Mu20_IsoEG6_->SetAddress(&L1_Mu20_IsoEG6_); }
    b_L1_Mu20_LooseIsoEG6_ = tree->GetBranch("L1_Mu20_LooseIsoEG6");
    if (b_L1_Mu20_LooseIsoEG6_) { b_L1_Mu20_LooseIsoEG6_->SetAddress(&L1_Mu20_LooseIsoEG6_); }
    b_L1_Mu20er2p1_IsoTau26er2p1_ = tree->GetBranch("L1_Mu20er2p1_IsoTau26er2p1");
    if (b_L1_Mu20er2p1_IsoTau26er2p1_) { b_L1_Mu20er2p1_IsoTau26er2p1_->SetAddress(&L1_Mu20er2p1_IsoTau26er2p1_); }
    b_L1_Mu20er2p1_IsoTau27er2p1_ = tree->GetBranch("L1_Mu20er2p1_IsoTau27er2p1");
    if (b_L1_Mu20er2p1_IsoTau27er2p1_) { b_L1_Mu20er2p1_IsoTau27er2p1_->SetAddress(&L1_Mu20er2p1_IsoTau27er2p1_); }
    b_L1_Mu20er_IsoTau26er_ = tree->GetBranch("L1_Mu20er_IsoTau26er");
    if (b_L1_Mu20er_IsoTau26er_) { b_L1_Mu20er_IsoTau26er_->SetAddress(&L1_Mu20er_IsoTau26er_); }
    b_L1_Mu22er2p1_IsoTau28er2p1_ = tree->GetBranch("L1_Mu22er2p1_IsoTau28er2p1");
    if (b_L1_Mu22er2p1_IsoTau28er2p1_) { b_L1_Mu22er2p1_IsoTau28er2p1_->SetAddress(&L1_Mu22er2p1_IsoTau28er2p1_); }
    b_L1_Mu22er2p1_IsoTau30er2p1_ = tree->GetBranch("L1_Mu22er2p1_IsoTau30er2p1");
    if (b_L1_Mu22er2p1_IsoTau30er2p1_) { b_L1_Mu22er2p1_IsoTau30er2p1_->SetAddress(&L1_Mu22er2p1_IsoTau30er2p1_); }
    b_L1_Mu22er2p1_IsoTau32er2p1_ = tree->GetBranch("L1_Mu22er2p1_IsoTau32er2p1");
    if (b_L1_Mu22er2p1_IsoTau32er2p1_) { b_L1_Mu22er2p1_IsoTau32er2p1_->SetAddress(&L1_Mu22er2p1_IsoTau32er2p1_); }
    b_L1_Mu22er2p1_IsoTau33er2p1_ = tree->GetBranch("L1_Mu22er2p1_IsoTau33er2p1");
    if (b_L1_Mu22er2p1_IsoTau33er2p1_) { b_L1_Mu22er2p1_IsoTau33er2p1_->SetAddress(&L1_Mu22er2p1_IsoTau33er2p1_); }
    b_L1_Mu22er2p1_IsoTau34er2p1_ = tree->GetBranch("L1_Mu22er2p1_IsoTau34er2p1");
    if (b_L1_Mu22er2p1_IsoTau34er2p1_) { b_L1_Mu22er2p1_IsoTau34er2p1_->SetAddress(&L1_Mu22er2p1_IsoTau34er2p1_); }
    b_L1_Mu22er2p1_IsoTau35er2p1_ = tree->GetBranch("L1_Mu22er2p1_IsoTau35er2p1");
    if (b_L1_Mu22er2p1_IsoTau35er2p1_) { b_L1_Mu22er2p1_IsoTau35er2p1_->SetAddress(&L1_Mu22er2p1_IsoTau35er2p1_); }
    b_L1_Mu22er2p1_IsoTau36er2p1_ = tree->GetBranch("L1_Mu22er2p1_IsoTau36er2p1");
    if (b_L1_Mu22er2p1_IsoTau36er2p1_) { b_L1_Mu22er2p1_IsoTau36er2p1_->SetAddress(&L1_Mu22er2p1_IsoTau36er2p1_); }
    b_L1_Mu22er2p1_IsoTau38er2p1_ = tree->GetBranch("L1_Mu22er2p1_IsoTau38er2p1");
    if (b_L1_Mu22er2p1_IsoTau38er2p1_) { b_L1_Mu22er2p1_IsoTau38er2p1_->SetAddress(&L1_Mu22er2p1_IsoTau38er2p1_); }
    b_L1_Mu22er2p1_IsoTau40er2p1_ = tree->GetBranch("L1_Mu22er2p1_IsoTau40er2p1");
    if (b_L1_Mu22er2p1_IsoTau40er2p1_) { b_L1_Mu22er2p1_IsoTau40er2p1_->SetAddress(&L1_Mu22er2p1_IsoTau40er2p1_); }
    b_L1_Mu22er2p1_Tau50er2p1_ = tree->GetBranch("L1_Mu22er2p1_Tau50er2p1");
    if (b_L1_Mu22er2p1_Tau50er2p1_) { b_L1_Mu22er2p1_Tau50er2p1_->SetAddress(&L1_Mu22er2p1_Tau50er2p1_); }
    b_L1_Mu22er2p1_Tau70er2p1_ = tree->GetBranch("L1_Mu22er2p1_Tau70er2p1");
    if (b_L1_Mu22er2p1_Tau70er2p1_) { b_L1_Mu22er2p1_Tau70er2p1_->SetAddress(&L1_Mu22er2p1_Tau70er2p1_); }
    b_L1_Mu22er_IsoTau26er_ = tree->GetBranch("L1_Mu22er_IsoTau26er");
    if (b_L1_Mu22er_IsoTau26er_) { b_L1_Mu22er_IsoTau26er_->SetAddress(&L1_Mu22er_IsoTau26er_); }
    b_L1_Mu23_EG10_ = tree->GetBranch("L1_Mu23_EG10");
    if (b_L1_Mu23_EG10_) { b_L1_Mu23_EG10_->SetAddress(&L1_Mu23_EG10_); }
    b_L1_Mu23_IsoEG10_ = tree->GetBranch("L1_Mu23_IsoEG10");
    if (b_L1_Mu23_IsoEG10_) { b_L1_Mu23_IsoEG10_->SetAddress(&L1_Mu23_IsoEG10_); }
    b_L1_Mu23_LooseIsoEG10_ = tree->GetBranch("L1_Mu23_LooseIsoEG10");
    if (b_L1_Mu23_LooseIsoEG10_) { b_L1_Mu23_LooseIsoEG10_->SetAddress(&L1_Mu23_LooseIsoEG10_); }
    b_L1_Mu25er_IsoTau26er_ = tree->GetBranch("L1_Mu25er_IsoTau26er");
    if (b_L1_Mu25er_IsoTau26er_) { b_L1_Mu25er_IsoTau26er_->SetAddress(&L1_Mu25er_IsoTau26er_); }
    b_L1_Mu3_Jet120er2p5_dR_Max0p4_ = tree->GetBranch("L1_Mu3_Jet120er2p5_dR_Max0p4");
    if (b_L1_Mu3_Jet120er2p5_dR_Max0p4_) { b_L1_Mu3_Jet120er2p5_dR_Max0p4_->SetAddress(&L1_Mu3_Jet120er2p5_dR_Max0p4_); }
    b_L1_Mu3_Jet120er2p5_dR_Max0p8_ = tree->GetBranch("L1_Mu3_Jet120er2p5_dR_Max0p8");
    if (b_L1_Mu3_Jet120er2p5_dR_Max0p8_) { b_L1_Mu3_Jet120er2p5_dR_Max0p8_->SetAddress(&L1_Mu3_Jet120er2p5_dR_Max0p8_); }
    b_L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4_ = tree->GetBranch("L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4");
    if (b_L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4_) { b_L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4_->SetAddress(&L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4_); }
    b_L1_Mu3_Jet16er2p5_dR_Max0p4_ = tree->GetBranch("L1_Mu3_Jet16er2p5_dR_Max0p4");
    if (b_L1_Mu3_Jet16er2p5_dR_Max0p4_) { b_L1_Mu3_Jet16er2p5_dR_Max0p4_->SetAddress(&L1_Mu3_Jet16er2p5_dR_Max0p4_); }
    b_L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4_ = tree->GetBranch("L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4");
    if (b_L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4_) { b_L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4_->SetAddress(&L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4_); }
    b_L1_Mu3_Jet30er2p5_ = tree->GetBranch("L1_Mu3_Jet30er2p5");
    if (b_L1_Mu3_Jet30er2p5_) { b_L1_Mu3_Jet30er2p5_->SetAddress(&L1_Mu3_Jet30er2p5_); }
    b_L1_Mu3_Jet35er2p5_dR_Max0p4_ = tree->GetBranch("L1_Mu3_Jet35er2p5_dR_Max0p4");
    if (b_L1_Mu3_Jet35er2p5_dR_Max0p4_) { b_L1_Mu3_Jet35er2p5_dR_Max0p4_->SetAddress(&L1_Mu3_Jet35er2p5_dR_Max0p4_); }
    b_L1_Mu3_Jet60er2p5_dR_Max0p4_ = tree->GetBranch("L1_Mu3_Jet60er2p5_dR_Max0p4");
    if (b_L1_Mu3_Jet60er2p5_dR_Max0p4_) { b_L1_Mu3_Jet60er2p5_dR_Max0p4_->SetAddress(&L1_Mu3_Jet60er2p5_dR_Max0p4_); }
    b_L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4_ = tree->GetBranch("L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4");
    if (b_L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4_) { b_L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4_->SetAddress(&L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4_); }
    b_L1_Mu3_Jet80er2p5_dR_Max0p4_ = tree->GetBranch("L1_Mu3_Jet80er2p5_dR_Max0p4");
    if (b_L1_Mu3_Jet80er2p5_dR_Max0p4_) { b_L1_Mu3_Jet80er2p5_dR_Max0p4_->SetAddress(&L1_Mu3_Jet80er2p5_dR_Max0p4_); }
    b_L1_Mu3_JetC120_ = tree->GetBranch("L1_Mu3_JetC120");
    if (b_L1_Mu3_JetC120_) { b_L1_Mu3_JetC120_->SetAddress(&L1_Mu3_JetC120_); }
    b_L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4_ = tree->GetBranch("L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4");
    if (b_L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4_) { b_L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4_->SetAddress(&L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4_); }
    b_L1_Mu3_JetC16_ = tree->GetBranch("L1_Mu3_JetC16");
    if (b_L1_Mu3_JetC16_) { b_L1_Mu3_JetC16_->SetAddress(&L1_Mu3_JetC16_); }
    b_L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4_ = tree->GetBranch("L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4");
    if (b_L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4_) { b_L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4_->SetAddress(&L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4_); }
    b_L1_Mu3_JetC60_ = tree->GetBranch("L1_Mu3_JetC60");
    if (b_L1_Mu3_JetC60_) { b_L1_Mu3_JetC60_->SetAddress(&L1_Mu3_JetC60_); }
    b_L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4_ = tree->GetBranch("L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4");
    if (b_L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4_) { b_L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4_->SetAddress(&L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4_); }
    b_L1_Mu3er1p5_Jet100er2p5_ETMHF30_ = tree->GetBranch("L1_Mu3er1p5_Jet100er2p5_ETMHF30");
    if (b_L1_Mu3er1p5_Jet100er2p5_ETMHF30_) { b_L1_Mu3er1p5_Jet100er2p5_ETMHF30_->SetAddress(&L1_Mu3er1p5_Jet100er2p5_ETMHF30_); }
    b_L1_Mu3er1p5_Jet100er2p5_ETMHF40_ = tree->GetBranch("L1_Mu3er1p5_Jet100er2p5_ETMHF40");
    if (b_L1_Mu3er1p5_Jet100er2p5_ETMHF40_) { b_L1_Mu3er1p5_Jet100er2p5_ETMHF40_->SetAddress(&L1_Mu3er1p5_Jet100er2p5_ETMHF40_); }
    b_L1_Mu3er1p5_Jet100er2p5_ETMHF50_ = tree->GetBranch("L1_Mu3er1p5_Jet100er2p5_ETMHF50");
    if (b_L1_Mu3er1p5_Jet100er2p5_ETMHF50_) { b_L1_Mu3er1p5_Jet100er2p5_ETMHF50_->SetAddress(&L1_Mu3er1p5_Jet100er2p5_ETMHF50_); }
    b_L1_Mu5_EG15_ = tree->GetBranch("L1_Mu5_EG15");
    if (b_L1_Mu5_EG15_) { b_L1_Mu5_EG15_->SetAddress(&L1_Mu5_EG15_); }
    b_L1_Mu5_EG20_ = tree->GetBranch("L1_Mu5_EG20");
    if (b_L1_Mu5_EG20_) { b_L1_Mu5_EG20_->SetAddress(&L1_Mu5_EG20_); }
    b_L1_Mu5_EG23_ = tree->GetBranch("L1_Mu5_EG23");
    if (b_L1_Mu5_EG23_) { b_L1_Mu5_EG23_->SetAddress(&L1_Mu5_EG23_); }
    b_L1_Mu5_EG23er2p5_ = tree->GetBranch("L1_Mu5_EG23er2p5");
    if (b_L1_Mu5_EG23er2p5_) { b_L1_Mu5_EG23er2p5_->SetAddress(&L1_Mu5_EG23er2p5_); }
    b_L1_Mu5_IsoEG18_ = tree->GetBranch("L1_Mu5_IsoEG18");
    if (b_L1_Mu5_IsoEG18_) { b_L1_Mu5_IsoEG18_->SetAddress(&L1_Mu5_IsoEG18_); }
    b_L1_Mu5_IsoEG20_ = tree->GetBranch("L1_Mu5_IsoEG20");
    if (b_L1_Mu5_IsoEG20_) { b_L1_Mu5_IsoEG20_->SetAddress(&L1_Mu5_IsoEG20_); }
    b_L1_Mu5_LooseIsoEG18_ = tree->GetBranch("L1_Mu5_LooseIsoEG18");
    if (b_L1_Mu5_LooseIsoEG18_) { b_L1_Mu5_LooseIsoEG18_->SetAddress(&L1_Mu5_LooseIsoEG18_); }
    b_L1_Mu5_LooseIsoEG20_ = tree->GetBranch("L1_Mu5_LooseIsoEG20");
    if (b_L1_Mu5_LooseIsoEG20_) { b_L1_Mu5_LooseIsoEG20_->SetAddress(&L1_Mu5_LooseIsoEG20_); }
    b_L1_Mu5_LooseIsoEG20er2p5_ = tree->GetBranch("L1_Mu5_LooseIsoEG20er2p5");
    if (b_L1_Mu5_LooseIsoEG20er2p5_) { b_L1_Mu5_LooseIsoEG20er2p5_->SetAddress(&L1_Mu5_LooseIsoEG20er2p5_); }
    b_L1_Mu6_DoubleEG10_ = tree->GetBranch("L1_Mu6_DoubleEG10");
    if (b_L1_Mu6_DoubleEG10_) { b_L1_Mu6_DoubleEG10_->SetAddress(&L1_Mu6_DoubleEG10_); }
    b_L1_Mu6_DoubleEG10er2p5_ = tree->GetBranch("L1_Mu6_DoubleEG10er2p5");
    if (b_L1_Mu6_DoubleEG10er2p5_) { b_L1_Mu6_DoubleEG10er2p5_->SetAddress(&L1_Mu6_DoubleEG10er2p5_); }
    b_L1_Mu6_DoubleEG12er2p5_ = tree->GetBranch("L1_Mu6_DoubleEG12er2p5");
    if (b_L1_Mu6_DoubleEG12er2p5_) { b_L1_Mu6_DoubleEG12er2p5_->SetAddress(&L1_Mu6_DoubleEG12er2p5_); }
    b_L1_Mu6_DoubleEG15er2p5_ = tree->GetBranch("L1_Mu6_DoubleEG15er2p5");
    if (b_L1_Mu6_DoubleEG15er2p5_) { b_L1_Mu6_DoubleEG15er2p5_->SetAddress(&L1_Mu6_DoubleEG15er2p5_); }
    b_L1_Mu6_DoubleEG17_ = tree->GetBranch("L1_Mu6_DoubleEG17");
    if (b_L1_Mu6_DoubleEG17_) { b_L1_Mu6_DoubleEG17_->SetAddress(&L1_Mu6_DoubleEG17_); }
    b_L1_Mu6_DoubleEG17er2p5_ = tree->GetBranch("L1_Mu6_DoubleEG17er2p5");
    if (b_L1_Mu6_DoubleEG17er2p5_) { b_L1_Mu6_DoubleEG17er2p5_->SetAddress(&L1_Mu6_DoubleEG17er2p5_); }
    b_L1_Mu6_HTT200_ = tree->GetBranch("L1_Mu6_HTT200");
    if (b_L1_Mu6_HTT200_) { b_L1_Mu6_HTT200_->SetAddress(&L1_Mu6_HTT200_); }
    b_L1_Mu6_HTT200er_ = tree->GetBranch("L1_Mu6_HTT200er");
    if (b_L1_Mu6_HTT200er_) { b_L1_Mu6_HTT200er_->SetAddress(&L1_Mu6_HTT200er_); }
    b_L1_Mu6_HTT240er_ = tree->GetBranch("L1_Mu6_HTT240er");
    if (b_L1_Mu6_HTT240er_) { b_L1_Mu6_HTT240er_->SetAddress(&L1_Mu6_HTT240er_); }
    b_L1_Mu6_HTT250er_ = tree->GetBranch("L1_Mu6_HTT250er");
    if (b_L1_Mu6_HTT250er_) { b_L1_Mu6_HTT250er_->SetAddress(&L1_Mu6_HTT250er_); }
    b_L1_Mu7_EG20er2p5_ = tree->GetBranch("L1_Mu7_EG20er2p5");
    if (b_L1_Mu7_EG20er2p5_) { b_L1_Mu7_EG20er2p5_->SetAddress(&L1_Mu7_EG20er2p5_); }
    b_L1_Mu7_EG23_ = tree->GetBranch("L1_Mu7_EG23");
    if (b_L1_Mu7_EG23_) { b_L1_Mu7_EG23_->SetAddress(&L1_Mu7_EG23_); }
    b_L1_Mu7_EG23er2p5_ = tree->GetBranch("L1_Mu7_EG23er2p5");
    if (b_L1_Mu7_EG23er2p5_) { b_L1_Mu7_EG23er2p5_->SetAddress(&L1_Mu7_EG23er2p5_); }
    b_L1_Mu7_IsoEG20_ = tree->GetBranch("L1_Mu7_IsoEG20");
    if (b_L1_Mu7_IsoEG20_) { b_L1_Mu7_IsoEG20_->SetAddress(&L1_Mu7_IsoEG20_); }
    b_L1_Mu7_IsoEG23_ = tree->GetBranch("L1_Mu7_IsoEG23");
    if (b_L1_Mu7_IsoEG23_) { b_L1_Mu7_IsoEG23_->SetAddress(&L1_Mu7_IsoEG23_); }
    b_L1_Mu7_LooseIsoEG20_ = tree->GetBranch("L1_Mu7_LooseIsoEG20");
    if (b_L1_Mu7_LooseIsoEG20_) { b_L1_Mu7_LooseIsoEG20_->SetAddress(&L1_Mu7_LooseIsoEG20_); }
    b_L1_Mu7_LooseIsoEG20er2p5_ = tree->GetBranch("L1_Mu7_LooseIsoEG20er2p5");
    if (b_L1_Mu7_LooseIsoEG20er2p5_) { b_L1_Mu7_LooseIsoEG20er2p5_->SetAddress(&L1_Mu7_LooseIsoEG20er2p5_); }
    b_L1_Mu7_LooseIsoEG23_ = tree->GetBranch("L1_Mu7_LooseIsoEG23");
    if (b_L1_Mu7_LooseIsoEG23_) { b_L1_Mu7_LooseIsoEG23_->SetAddress(&L1_Mu7_LooseIsoEG23_); }
    b_L1_Mu7_LooseIsoEG23er2p5_ = tree->GetBranch("L1_Mu7_LooseIsoEG23er2p5");
    if (b_L1_Mu7_LooseIsoEG23er2p5_) { b_L1_Mu7_LooseIsoEG23er2p5_->SetAddress(&L1_Mu7_LooseIsoEG23er2p5_); }
    b_L1_Mu8_HTT150_ = tree->GetBranch("L1_Mu8_HTT150");
    if (b_L1_Mu8_HTT150_) { b_L1_Mu8_HTT150_->SetAddress(&L1_Mu8_HTT150_); }
    b_L1_Mu8_HTT150er_ = tree->GetBranch("L1_Mu8_HTT150er");
    if (b_L1_Mu8_HTT150er_) { b_L1_Mu8_HTT150er_->SetAddress(&L1_Mu8_HTT150er_); }
    b_L1_NotBptxOR_ = tree->GetBranch("L1_NotBptxOR");
    if (b_L1_NotBptxOR_) { b_L1_NotBptxOR_->SetAddress(&L1_NotBptxOR_); }
    b_L1_QuadJet36er2p5_IsoTau52er2p1_ = tree->GetBranch("L1_QuadJet36er2p5_IsoTau52er2p1");
    if (b_L1_QuadJet36er2p5_IsoTau52er2p1_) { b_L1_QuadJet36er2p5_IsoTau52er2p1_->SetAddress(&L1_QuadJet36er2p5_IsoTau52er2p1_); }
    b_L1_QuadJet36er2p7_IsoTau52er2p1_ = tree->GetBranch("L1_QuadJet36er2p7_IsoTau52er2p1");
    if (b_L1_QuadJet36er2p7_IsoTau52er2p1_) { b_L1_QuadJet36er2p7_IsoTau52er2p1_->SetAddress(&L1_QuadJet36er2p7_IsoTau52er2p1_); }
    b_L1_QuadJet36er2p7_Tau52_ = tree->GetBranch("L1_QuadJet36er2p7_Tau52");
    if (b_L1_QuadJet36er2p7_Tau52_) { b_L1_QuadJet36er2p7_Tau52_->SetAddress(&L1_QuadJet36er2p7_Tau52_); }
    b_L1_QuadJet36er3p0_IsoTau52er2p1_ = tree->GetBranch("L1_QuadJet36er3p0_IsoTau52er2p1");
    if (b_L1_QuadJet36er3p0_IsoTau52er2p1_) { b_L1_QuadJet36er3p0_IsoTau52er2p1_->SetAddress(&L1_QuadJet36er3p0_IsoTau52er2p1_); }
    b_L1_QuadJet36er3p0_Tau52_ = tree->GetBranch("L1_QuadJet36er3p0_Tau52");
    if (b_L1_QuadJet36er3p0_Tau52_) { b_L1_QuadJet36er3p0_Tau52_->SetAddress(&L1_QuadJet36er3p0_Tau52_); }
    b_L1_QuadJet40er2p7_ = tree->GetBranch("L1_QuadJet40er2p7");
    if (b_L1_QuadJet40er2p7_) { b_L1_QuadJet40er2p7_->SetAddress(&L1_QuadJet40er2p7_); }
    b_L1_QuadJet40er3p0_ = tree->GetBranch("L1_QuadJet40er3p0");
    if (b_L1_QuadJet40er3p0_) { b_L1_QuadJet40er3p0_->SetAddress(&L1_QuadJet40er3p0_); }
    b_L1_QuadJet50er2p7_ = tree->GetBranch("L1_QuadJet50er2p7");
    if (b_L1_QuadJet50er2p7_) { b_L1_QuadJet50er2p7_->SetAddress(&L1_QuadJet50er2p7_); }
    b_L1_QuadJet50er3p0_ = tree->GetBranch("L1_QuadJet50er3p0");
    if (b_L1_QuadJet50er3p0_) { b_L1_QuadJet50er3p0_->SetAddress(&L1_QuadJet50er3p0_); }
    b_L1_QuadJet60er2p5_ = tree->GetBranch("L1_QuadJet60er2p5");
    if (b_L1_QuadJet60er2p5_) { b_L1_QuadJet60er2p5_->SetAddress(&L1_QuadJet60er2p5_); }
    b_L1_QuadJet60er2p7_ = tree->GetBranch("L1_QuadJet60er2p7");
    if (b_L1_QuadJet60er2p7_) { b_L1_QuadJet60er2p7_->SetAddress(&L1_QuadJet60er2p7_); }
    b_L1_QuadJet60er3p0_ = tree->GetBranch("L1_QuadJet60er3p0");
    if (b_L1_QuadJet60er3p0_) { b_L1_QuadJet60er3p0_->SetAddress(&L1_QuadJet60er3p0_); }
    b_L1_QuadJetC36_Tau52_ = tree->GetBranch("L1_QuadJetC36_Tau52");
    if (b_L1_QuadJetC36_Tau52_) { b_L1_QuadJetC36_Tau52_->SetAddress(&L1_QuadJetC36_Tau52_); }
    b_L1_QuadJetC40_ = tree->GetBranch("L1_QuadJetC40");
    if (b_L1_QuadJetC40_) { b_L1_QuadJetC40_->SetAddress(&L1_QuadJetC40_); }
    b_L1_QuadJetC50_ = tree->GetBranch("L1_QuadJetC50");
    if (b_L1_QuadJetC50_) { b_L1_QuadJetC50_->SetAddress(&L1_QuadJetC50_); }
    b_L1_QuadJetC60_ = tree->GetBranch("L1_QuadJetC60");
    if (b_L1_QuadJetC60_) { b_L1_QuadJetC60_->SetAddress(&L1_QuadJetC60_); }
    b_L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0_ = tree->GetBranch("L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0");
    if (b_L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0_) { b_L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0_->SetAddress(&L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0_); }
    b_L1_QuadMu0_ = tree->GetBranch("L1_QuadMu0");
    if (b_L1_QuadMu0_) { b_L1_QuadMu0_->SetAddress(&L1_QuadMu0_); }
    b_L1_QuadMu0_OQ_ = tree->GetBranch("L1_QuadMu0_OQ");
    if (b_L1_QuadMu0_OQ_) { b_L1_QuadMu0_OQ_->SetAddress(&L1_QuadMu0_OQ_); }
    b_L1_QuadMu0_SQ_ = tree->GetBranch("L1_QuadMu0_SQ");
    if (b_L1_QuadMu0_SQ_) { b_L1_QuadMu0_SQ_->SetAddress(&L1_QuadMu0_SQ_); }
    b_L1_SecondBunchInTrain_ = tree->GetBranch("L1_SecondBunchInTrain");
    if (b_L1_SecondBunchInTrain_) { b_L1_SecondBunchInTrain_->SetAddress(&L1_SecondBunchInTrain_); }
    b_L1_SecondLastBunchInTrain_ = tree->GetBranch("L1_SecondLastBunchInTrain");
    if (b_L1_SecondLastBunchInTrain_) { b_L1_SecondLastBunchInTrain_->SetAddress(&L1_SecondLastBunchInTrain_); }
    b_L1_SingleEG10_ = tree->GetBranch("L1_SingleEG10");
    if (b_L1_SingleEG10_) { b_L1_SingleEG10_->SetAddress(&L1_SingleEG10_); }
    b_L1_SingleEG10er2p5_ = tree->GetBranch("L1_SingleEG10er2p5");
    if (b_L1_SingleEG10er2p5_) { b_L1_SingleEG10er2p5_->SetAddress(&L1_SingleEG10er2p5_); }
    b_L1_SingleEG15_ = tree->GetBranch("L1_SingleEG15");
    if (b_L1_SingleEG15_) { b_L1_SingleEG15_->SetAddress(&L1_SingleEG15_); }
    b_L1_SingleEG15er2p5_ = tree->GetBranch("L1_SingleEG15er2p5");
    if (b_L1_SingleEG15er2p5_) { b_L1_SingleEG15er2p5_->SetAddress(&L1_SingleEG15er2p5_); }
    b_L1_SingleEG18_ = tree->GetBranch("L1_SingleEG18");
    if (b_L1_SingleEG18_) { b_L1_SingleEG18_->SetAddress(&L1_SingleEG18_); }
    b_L1_SingleEG24_ = tree->GetBranch("L1_SingleEG24");
    if (b_L1_SingleEG24_) { b_L1_SingleEG24_->SetAddress(&L1_SingleEG24_); }
    b_L1_SingleEG26_ = tree->GetBranch("L1_SingleEG26");
    if (b_L1_SingleEG26_) { b_L1_SingleEG26_->SetAddress(&L1_SingleEG26_); }
    b_L1_SingleEG26er2p5_ = tree->GetBranch("L1_SingleEG26er2p5");
    if (b_L1_SingleEG26er2p5_) { b_L1_SingleEG26er2p5_->SetAddress(&L1_SingleEG26er2p5_); }
    b_L1_SingleEG28_ = tree->GetBranch("L1_SingleEG28");
    if (b_L1_SingleEG28_) { b_L1_SingleEG28_->SetAddress(&L1_SingleEG28_); }
    b_L1_SingleEG28_FWD2p5_ = tree->GetBranch("L1_SingleEG28_FWD2p5");
    if (b_L1_SingleEG28_FWD2p5_) { b_L1_SingleEG28_FWD2p5_->SetAddress(&L1_SingleEG28_FWD2p5_); }
    b_L1_SingleEG28er1p5_ = tree->GetBranch("L1_SingleEG28er1p5");
    if (b_L1_SingleEG28er1p5_) { b_L1_SingleEG28er1p5_->SetAddress(&L1_SingleEG28er1p5_); }
    b_L1_SingleEG28er2p1_ = tree->GetBranch("L1_SingleEG28er2p1");
    if (b_L1_SingleEG28er2p1_) { b_L1_SingleEG28er2p1_->SetAddress(&L1_SingleEG28er2p1_); }
    b_L1_SingleEG28er2p5_ = tree->GetBranch("L1_SingleEG28er2p5");
    if (b_L1_SingleEG28er2p5_) { b_L1_SingleEG28er2p5_->SetAddress(&L1_SingleEG28er2p5_); }
    b_L1_SingleEG2_BptxAND_ = tree->GetBranch("L1_SingleEG2_BptxAND");
    if (b_L1_SingleEG2_BptxAND_) { b_L1_SingleEG2_BptxAND_->SetAddress(&L1_SingleEG2_BptxAND_); }
    b_L1_SingleEG30_ = tree->GetBranch("L1_SingleEG30");
    if (b_L1_SingleEG30_) { b_L1_SingleEG30_->SetAddress(&L1_SingleEG30_); }
    b_L1_SingleEG32_ = tree->GetBranch("L1_SingleEG32");
    if (b_L1_SingleEG32_) { b_L1_SingleEG32_->SetAddress(&L1_SingleEG32_); }
    b_L1_SingleEG34_ = tree->GetBranch("L1_SingleEG34");
    if (b_L1_SingleEG34_) { b_L1_SingleEG34_->SetAddress(&L1_SingleEG34_); }
    b_L1_SingleEG34er2p1_ = tree->GetBranch("L1_SingleEG34er2p1");
    if (b_L1_SingleEG34er2p1_) { b_L1_SingleEG34er2p1_->SetAddress(&L1_SingleEG34er2p1_); }
    b_L1_SingleEG34er2p5_ = tree->GetBranch("L1_SingleEG34er2p5");
    if (b_L1_SingleEG34er2p5_) { b_L1_SingleEG34er2p5_->SetAddress(&L1_SingleEG34er2p5_); }
    b_L1_SingleEG36_ = tree->GetBranch("L1_SingleEG36");
    if (b_L1_SingleEG36_) { b_L1_SingleEG36_->SetAddress(&L1_SingleEG36_); }
    b_L1_SingleEG36er2p1_ = tree->GetBranch("L1_SingleEG36er2p1");
    if (b_L1_SingleEG36er2p1_) { b_L1_SingleEG36er2p1_->SetAddress(&L1_SingleEG36er2p1_); }
    b_L1_SingleEG36er2p5_ = tree->GetBranch("L1_SingleEG36er2p5");
    if (b_L1_SingleEG36er2p5_) { b_L1_SingleEG36er2p5_->SetAddress(&L1_SingleEG36er2p5_); }
    b_L1_SingleEG38_ = tree->GetBranch("L1_SingleEG38");
    if (b_L1_SingleEG38_) { b_L1_SingleEG38_->SetAddress(&L1_SingleEG38_); }
    b_L1_SingleEG38er2p1_ = tree->GetBranch("L1_SingleEG38er2p1");
    if (b_L1_SingleEG38er2p1_) { b_L1_SingleEG38er2p1_->SetAddress(&L1_SingleEG38er2p1_); }
    b_L1_SingleEG38er2p5_ = tree->GetBranch("L1_SingleEG38er2p5");
    if (b_L1_SingleEG38er2p5_) { b_L1_SingleEG38er2p5_->SetAddress(&L1_SingleEG38er2p5_); }
    b_L1_SingleEG40_ = tree->GetBranch("L1_SingleEG40");
    if (b_L1_SingleEG40_) { b_L1_SingleEG40_->SetAddress(&L1_SingleEG40_); }
    b_L1_SingleEG40er2p5_ = tree->GetBranch("L1_SingleEG40er2p5");
    if (b_L1_SingleEG40er2p5_) { b_L1_SingleEG40er2p5_->SetAddress(&L1_SingleEG40er2p5_); }
    b_L1_SingleEG42_ = tree->GetBranch("L1_SingleEG42");
    if (b_L1_SingleEG42_) { b_L1_SingleEG42_->SetAddress(&L1_SingleEG42_); }
    b_L1_SingleEG42er2p5_ = tree->GetBranch("L1_SingleEG42er2p5");
    if (b_L1_SingleEG42er2p5_) { b_L1_SingleEG42er2p5_->SetAddress(&L1_SingleEG42er2p5_); }
    b_L1_SingleEG45_ = tree->GetBranch("L1_SingleEG45");
    if (b_L1_SingleEG45_) { b_L1_SingleEG45_->SetAddress(&L1_SingleEG45_); }
    b_L1_SingleEG45er2p5_ = tree->GetBranch("L1_SingleEG45er2p5");
    if (b_L1_SingleEG45er2p5_) { b_L1_SingleEG45er2p5_->SetAddress(&L1_SingleEG45er2p5_); }
    b_L1_SingleEG5_ = tree->GetBranch("L1_SingleEG5");
    if (b_L1_SingleEG5_) { b_L1_SingleEG5_->SetAddress(&L1_SingleEG5_); }
    b_L1_SingleEG50_ = tree->GetBranch("L1_SingleEG50");
    if (b_L1_SingleEG50_) { b_L1_SingleEG50_->SetAddress(&L1_SingleEG50_); }
    b_L1_SingleEG60_ = tree->GetBranch("L1_SingleEG60");
    if (b_L1_SingleEG60_) { b_L1_SingleEG60_->SetAddress(&L1_SingleEG60_); }
    b_L1_SingleEG8er2p5_ = tree->GetBranch("L1_SingleEG8er2p5");
    if (b_L1_SingleEG8er2p5_) { b_L1_SingleEG8er2p5_->SetAddress(&L1_SingleEG8er2p5_); }
    b_L1_SingleIsoEG18_ = tree->GetBranch("L1_SingleIsoEG18");
    if (b_L1_SingleIsoEG18_) { b_L1_SingleIsoEG18_->SetAddress(&L1_SingleIsoEG18_); }
    b_L1_SingleIsoEG18er_ = tree->GetBranch("L1_SingleIsoEG18er");
    if (b_L1_SingleIsoEG18er_) { b_L1_SingleIsoEG18er_->SetAddress(&L1_SingleIsoEG18er_); }
    b_L1_SingleIsoEG18er2p1_ = tree->GetBranch("L1_SingleIsoEG18er2p1");
    if (b_L1_SingleIsoEG18er2p1_) { b_L1_SingleIsoEG18er2p1_->SetAddress(&L1_SingleIsoEG18er2p1_); }
    b_L1_SingleIsoEG20_ = tree->GetBranch("L1_SingleIsoEG20");
    if (b_L1_SingleIsoEG20_) { b_L1_SingleIsoEG20_->SetAddress(&L1_SingleIsoEG20_); }
    b_L1_SingleIsoEG20er_ = tree->GetBranch("L1_SingleIsoEG20er");
    if (b_L1_SingleIsoEG20er_) { b_L1_SingleIsoEG20er_->SetAddress(&L1_SingleIsoEG20er_); }
    b_L1_SingleIsoEG20er2p1_ = tree->GetBranch("L1_SingleIsoEG20er2p1");
    if (b_L1_SingleIsoEG20er2p1_) { b_L1_SingleIsoEG20er2p1_->SetAddress(&L1_SingleIsoEG20er2p1_); }
    b_L1_SingleIsoEG22_ = tree->GetBranch("L1_SingleIsoEG22");
    if (b_L1_SingleIsoEG22_) { b_L1_SingleIsoEG22_->SetAddress(&L1_SingleIsoEG22_); }
    b_L1_SingleIsoEG22er_ = tree->GetBranch("L1_SingleIsoEG22er");
    if (b_L1_SingleIsoEG22er_) { b_L1_SingleIsoEG22er_->SetAddress(&L1_SingleIsoEG22er_); }
    b_L1_SingleIsoEG22er2p1_ = tree->GetBranch("L1_SingleIsoEG22er2p1");
    if (b_L1_SingleIsoEG22er2p1_) { b_L1_SingleIsoEG22er2p1_->SetAddress(&L1_SingleIsoEG22er2p1_); }
    b_L1_SingleIsoEG24_ = tree->GetBranch("L1_SingleIsoEG24");
    if (b_L1_SingleIsoEG24_) { b_L1_SingleIsoEG24_->SetAddress(&L1_SingleIsoEG24_); }
    b_L1_SingleIsoEG24er_ = tree->GetBranch("L1_SingleIsoEG24er");
    if (b_L1_SingleIsoEG24er_) { b_L1_SingleIsoEG24er_->SetAddress(&L1_SingleIsoEG24er_); }
    b_L1_SingleIsoEG24er1p5_ = tree->GetBranch("L1_SingleIsoEG24er1p5");
    if (b_L1_SingleIsoEG24er1p5_) { b_L1_SingleIsoEG24er1p5_->SetAddress(&L1_SingleIsoEG24er1p5_); }
    b_L1_SingleIsoEG24er2p1_ = tree->GetBranch("L1_SingleIsoEG24er2p1");
    if (b_L1_SingleIsoEG24er2p1_) { b_L1_SingleIsoEG24er2p1_->SetAddress(&L1_SingleIsoEG24er2p1_); }
    b_L1_SingleIsoEG26_ = tree->GetBranch("L1_SingleIsoEG26");
    if (b_L1_SingleIsoEG26_) { b_L1_SingleIsoEG26_->SetAddress(&L1_SingleIsoEG26_); }
    b_L1_SingleIsoEG26er_ = tree->GetBranch("L1_SingleIsoEG26er");
    if (b_L1_SingleIsoEG26er_) { b_L1_SingleIsoEG26er_->SetAddress(&L1_SingleIsoEG26er_); }
    b_L1_SingleIsoEG26er1p5_ = tree->GetBranch("L1_SingleIsoEG26er1p5");
    if (b_L1_SingleIsoEG26er1p5_) { b_L1_SingleIsoEG26er1p5_->SetAddress(&L1_SingleIsoEG26er1p5_); }
    b_L1_SingleIsoEG26er2p1_ = tree->GetBranch("L1_SingleIsoEG26er2p1");
    if (b_L1_SingleIsoEG26er2p1_) { b_L1_SingleIsoEG26er2p1_->SetAddress(&L1_SingleIsoEG26er2p1_); }
    b_L1_SingleIsoEG26er2p5_ = tree->GetBranch("L1_SingleIsoEG26er2p5");
    if (b_L1_SingleIsoEG26er2p5_) { b_L1_SingleIsoEG26er2p5_->SetAddress(&L1_SingleIsoEG26er2p5_); }
    b_L1_SingleIsoEG28_ = tree->GetBranch("L1_SingleIsoEG28");
    if (b_L1_SingleIsoEG28_) { b_L1_SingleIsoEG28_->SetAddress(&L1_SingleIsoEG28_); }
    b_L1_SingleIsoEG28_FWD2p5_ = tree->GetBranch("L1_SingleIsoEG28_FWD2p5");
    if (b_L1_SingleIsoEG28_FWD2p5_) { b_L1_SingleIsoEG28_FWD2p5_->SetAddress(&L1_SingleIsoEG28_FWD2p5_); }
    b_L1_SingleIsoEG28er_ = tree->GetBranch("L1_SingleIsoEG28er");
    if (b_L1_SingleIsoEG28er_) { b_L1_SingleIsoEG28er_->SetAddress(&L1_SingleIsoEG28er_); }
    b_L1_SingleIsoEG28er1p5_ = tree->GetBranch("L1_SingleIsoEG28er1p5");
    if (b_L1_SingleIsoEG28er1p5_) { b_L1_SingleIsoEG28er1p5_->SetAddress(&L1_SingleIsoEG28er1p5_); }
    b_L1_SingleIsoEG28er2p1_ = tree->GetBranch("L1_SingleIsoEG28er2p1");
    if (b_L1_SingleIsoEG28er2p1_) { b_L1_SingleIsoEG28er2p1_->SetAddress(&L1_SingleIsoEG28er2p1_); }
    b_L1_SingleIsoEG28er2p5_ = tree->GetBranch("L1_SingleIsoEG28er2p5");
    if (b_L1_SingleIsoEG28er2p5_) { b_L1_SingleIsoEG28er2p5_->SetAddress(&L1_SingleIsoEG28er2p5_); }
    b_L1_SingleIsoEG30_ = tree->GetBranch("L1_SingleIsoEG30");
    if (b_L1_SingleIsoEG30_) { b_L1_SingleIsoEG30_->SetAddress(&L1_SingleIsoEG30_); }
    b_L1_SingleIsoEG30er_ = tree->GetBranch("L1_SingleIsoEG30er");
    if (b_L1_SingleIsoEG30er_) { b_L1_SingleIsoEG30er_->SetAddress(&L1_SingleIsoEG30er_); }
    b_L1_SingleIsoEG30er2p1_ = tree->GetBranch("L1_SingleIsoEG30er2p1");
    if (b_L1_SingleIsoEG30er2p1_) { b_L1_SingleIsoEG30er2p1_->SetAddress(&L1_SingleIsoEG30er2p1_); }
    b_L1_SingleIsoEG30er2p5_ = tree->GetBranch("L1_SingleIsoEG30er2p5");
    if (b_L1_SingleIsoEG30er2p5_) { b_L1_SingleIsoEG30er2p5_->SetAddress(&L1_SingleIsoEG30er2p5_); }
    b_L1_SingleIsoEG32_ = tree->GetBranch("L1_SingleIsoEG32");
    if (b_L1_SingleIsoEG32_) { b_L1_SingleIsoEG32_->SetAddress(&L1_SingleIsoEG32_); }
    b_L1_SingleIsoEG32er_ = tree->GetBranch("L1_SingleIsoEG32er");
    if (b_L1_SingleIsoEG32er_) { b_L1_SingleIsoEG32er_->SetAddress(&L1_SingleIsoEG32er_); }
    b_L1_SingleIsoEG32er2p1_ = tree->GetBranch("L1_SingleIsoEG32er2p1");
    if (b_L1_SingleIsoEG32er2p1_) { b_L1_SingleIsoEG32er2p1_->SetAddress(&L1_SingleIsoEG32er2p1_); }
    b_L1_SingleIsoEG32er2p5_ = tree->GetBranch("L1_SingleIsoEG32er2p5");
    if (b_L1_SingleIsoEG32er2p5_) { b_L1_SingleIsoEG32er2p5_->SetAddress(&L1_SingleIsoEG32er2p5_); }
    b_L1_SingleIsoEG33er2p1_ = tree->GetBranch("L1_SingleIsoEG33er2p1");
    if (b_L1_SingleIsoEG33er2p1_) { b_L1_SingleIsoEG33er2p1_->SetAddress(&L1_SingleIsoEG33er2p1_); }
    b_L1_SingleIsoEG34_ = tree->GetBranch("L1_SingleIsoEG34");
    if (b_L1_SingleIsoEG34_) { b_L1_SingleIsoEG34_->SetAddress(&L1_SingleIsoEG34_); }
    b_L1_SingleIsoEG34er_ = tree->GetBranch("L1_SingleIsoEG34er");
    if (b_L1_SingleIsoEG34er_) { b_L1_SingleIsoEG34er_->SetAddress(&L1_SingleIsoEG34er_); }
    b_L1_SingleIsoEG34er2p1_ = tree->GetBranch("L1_SingleIsoEG34er2p1");
    if (b_L1_SingleIsoEG34er2p1_) { b_L1_SingleIsoEG34er2p1_->SetAddress(&L1_SingleIsoEG34er2p1_); }
    b_L1_SingleIsoEG34er2p5_ = tree->GetBranch("L1_SingleIsoEG34er2p5");
    if (b_L1_SingleIsoEG34er2p5_) { b_L1_SingleIsoEG34er2p5_->SetAddress(&L1_SingleIsoEG34er2p5_); }
    b_L1_SingleIsoEG35_ = tree->GetBranch("L1_SingleIsoEG35");
    if (b_L1_SingleIsoEG35_) { b_L1_SingleIsoEG35_->SetAddress(&L1_SingleIsoEG35_); }
    b_L1_SingleIsoEG35er2p1_ = tree->GetBranch("L1_SingleIsoEG35er2p1");
    if (b_L1_SingleIsoEG35er2p1_) { b_L1_SingleIsoEG35er2p1_->SetAddress(&L1_SingleIsoEG35er2p1_); }
    b_L1_SingleIsoEG36_ = tree->GetBranch("L1_SingleIsoEG36");
    if (b_L1_SingleIsoEG36_) { b_L1_SingleIsoEG36_->SetAddress(&L1_SingleIsoEG36_); }
    b_L1_SingleIsoEG36er2p1_ = tree->GetBranch("L1_SingleIsoEG36er2p1");
    if (b_L1_SingleIsoEG36er2p1_) { b_L1_SingleIsoEG36er2p1_->SetAddress(&L1_SingleIsoEG36er2p1_); }
    b_L1_SingleIsoEG37_ = tree->GetBranch("L1_SingleIsoEG37");
    if (b_L1_SingleIsoEG37_) { b_L1_SingleIsoEG37_->SetAddress(&L1_SingleIsoEG37_); }
    b_L1_SingleIsoEG38_ = tree->GetBranch("L1_SingleIsoEG38");
    if (b_L1_SingleIsoEG38_) { b_L1_SingleIsoEG38_->SetAddress(&L1_SingleIsoEG38_); }
    b_L1_SingleIsoEG38er2p1_ = tree->GetBranch("L1_SingleIsoEG38er2p1");
    if (b_L1_SingleIsoEG38er2p1_) { b_L1_SingleIsoEG38er2p1_->SetAddress(&L1_SingleIsoEG38er2p1_); }
    b_L1_SingleIsoEG40_ = tree->GetBranch("L1_SingleIsoEG40");
    if (b_L1_SingleIsoEG40_) { b_L1_SingleIsoEG40_->SetAddress(&L1_SingleIsoEG40_); }
    b_L1_SingleIsoEG40er2p1_ = tree->GetBranch("L1_SingleIsoEG40er2p1");
    if (b_L1_SingleIsoEG40er2p1_) { b_L1_SingleIsoEG40er2p1_->SetAddress(&L1_SingleIsoEG40er2p1_); }
    b_L1_SingleIsoTau32er2p1_ = tree->GetBranch("L1_SingleIsoTau32er2p1");
    if (b_L1_SingleIsoTau32er2p1_) { b_L1_SingleIsoTau32er2p1_->SetAddress(&L1_SingleIsoTau32er2p1_); }
    b_L1_SingleJet10erHE_ = tree->GetBranch("L1_SingleJet10erHE");
    if (b_L1_SingleJet10erHE_) { b_L1_SingleJet10erHE_->SetAddress(&L1_SingleJet10erHE_); }
    b_L1_SingleJet12_ = tree->GetBranch("L1_SingleJet12");
    if (b_L1_SingleJet12_) { b_L1_SingleJet12_->SetAddress(&L1_SingleJet12_); }
    b_L1_SingleJet120_ = tree->GetBranch("L1_SingleJet120");
    if (b_L1_SingleJet120_) { b_L1_SingleJet120_->SetAddress(&L1_SingleJet120_); }
    b_L1_SingleJet120_FWD_ = tree->GetBranch("L1_SingleJet120_FWD");
    if (b_L1_SingleJet120_FWD_) { b_L1_SingleJet120_FWD_->SetAddress(&L1_SingleJet120_FWD_); }
    b_L1_SingleJet120_FWD3p0_ = tree->GetBranch("L1_SingleJet120_FWD3p0");
    if (b_L1_SingleJet120_FWD3p0_) { b_L1_SingleJet120_FWD3p0_->SetAddress(&L1_SingleJet120_FWD3p0_); }
    b_L1_SingleJet120er2p5_ = tree->GetBranch("L1_SingleJet120er2p5");
    if (b_L1_SingleJet120er2p5_) { b_L1_SingleJet120er2p5_->SetAddress(&L1_SingleJet120er2p5_); }
    b_L1_SingleJet12_BptxAND_ = tree->GetBranch("L1_SingleJet12_BptxAND");
    if (b_L1_SingleJet12_BptxAND_) { b_L1_SingleJet12_BptxAND_->SetAddress(&L1_SingleJet12_BptxAND_); }
    b_L1_SingleJet12erHE_ = tree->GetBranch("L1_SingleJet12erHE");
    if (b_L1_SingleJet12erHE_) { b_L1_SingleJet12erHE_->SetAddress(&L1_SingleJet12erHE_); }
    b_L1_SingleJet140_ = tree->GetBranch("L1_SingleJet140");
    if (b_L1_SingleJet140_) { b_L1_SingleJet140_->SetAddress(&L1_SingleJet140_); }
    b_L1_SingleJet140er2p5_ = tree->GetBranch("L1_SingleJet140er2p5");
    if (b_L1_SingleJet140er2p5_) { b_L1_SingleJet140er2p5_->SetAddress(&L1_SingleJet140er2p5_); }
    b_L1_SingleJet140er2p5_ETMHF70_ = tree->GetBranch("L1_SingleJet140er2p5_ETMHF70");
    if (b_L1_SingleJet140er2p5_ETMHF70_) { b_L1_SingleJet140er2p5_ETMHF70_->SetAddress(&L1_SingleJet140er2p5_ETMHF70_); }
    b_L1_SingleJet140er2p5_ETMHF80_ = tree->GetBranch("L1_SingleJet140er2p5_ETMHF80");
    if (b_L1_SingleJet140er2p5_ETMHF80_) { b_L1_SingleJet140er2p5_ETMHF80_->SetAddress(&L1_SingleJet140er2p5_ETMHF80_); }
    b_L1_SingleJet140er2p5_ETMHF90_ = tree->GetBranch("L1_SingleJet140er2p5_ETMHF90");
    if (b_L1_SingleJet140er2p5_ETMHF90_) { b_L1_SingleJet140er2p5_ETMHF90_->SetAddress(&L1_SingleJet140er2p5_ETMHF90_); }
    b_L1_SingleJet150_ = tree->GetBranch("L1_SingleJet150");
    if (b_L1_SingleJet150_) { b_L1_SingleJet150_->SetAddress(&L1_SingleJet150_); }
    b_L1_SingleJet16_ = tree->GetBranch("L1_SingleJet16");
    if (b_L1_SingleJet16_) { b_L1_SingleJet16_->SetAddress(&L1_SingleJet16_); }
    b_L1_SingleJet160_ = tree->GetBranch("L1_SingleJet160");
    if (b_L1_SingleJet160_) { b_L1_SingleJet160_->SetAddress(&L1_SingleJet160_); }
    b_L1_SingleJet160er2p5_ = tree->GetBranch("L1_SingleJet160er2p5");
    if (b_L1_SingleJet160er2p5_) { b_L1_SingleJet160er2p5_->SetAddress(&L1_SingleJet160er2p5_); }
    b_L1_SingleJet170_ = tree->GetBranch("L1_SingleJet170");
    if (b_L1_SingleJet170_) { b_L1_SingleJet170_->SetAddress(&L1_SingleJet170_); }
    b_L1_SingleJet180_ = tree->GetBranch("L1_SingleJet180");
    if (b_L1_SingleJet180_) { b_L1_SingleJet180_->SetAddress(&L1_SingleJet180_); }
    b_L1_SingleJet180er2p5_ = tree->GetBranch("L1_SingleJet180er2p5");
    if (b_L1_SingleJet180er2p5_) { b_L1_SingleJet180er2p5_->SetAddress(&L1_SingleJet180er2p5_); }
    b_L1_SingleJet20_ = tree->GetBranch("L1_SingleJet20");
    if (b_L1_SingleJet20_) { b_L1_SingleJet20_->SetAddress(&L1_SingleJet20_); }
    b_L1_SingleJet200_ = tree->GetBranch("L1_SingleJet200");
    if (b_L1_SingleJet200_) { b_L1_SingleJet200_->SetAddress(&L1_SingleJet200_); }
    b_L1_SingleJet20er2p5_NotBptxOR_ = tree->GetBranch("L1_SingleJet20er2p5_NotBptxOR");
    if (b_L1_SingleJet20er2p5_NotBptxOR_) { b_L1_SingleJet20er2p5_NotBptxOR_->SetAddress(&L1_SingleJet20er2p5_NotBptxOR_); }
    b_L1_SingleJet20er2p5_NotBptxOR_3BX_ = tree->GetBranch("L1_SingleJet20er2p5_NotBptxOR_3BX");
    if (b_L1_SingleJet20er2p5_NotBptxOR_3BX_) { b_L1_SingleJet20er2p5_NotBptxOR_3BX_->SetAddress(&L1_SingleJet20er2p5_NotBptxOR_3BX_); }
    b_L1_SingleJet20er2p7_NotBptxOR_ = tree->GetBranch("L1_SingleJet20er2p7_NotBptxOR");
    if (b_L1_SingleJet20er2p7_NotBptxOR_) { b_L1_SingleJet20er2p7_NotBptxOR_->SetAddress(&L1_SingleJet20er2p7_NotBptxOR_); }
    b_L1_SingleJet20er2p7_NotBptxOR_3BX_ = tree->GetBranch("L1_SingleJet20er2p7_NotBptxOR_3BX");
    if (b_L1_SingleJet20er2p7_NotBptxOR_3BX_) { b_L1_SingleJet20er2p7_NotBptxOR_3BX_->SetAddress(&L1_SingleJet20er2p7_NotBptxOR_3BX_); }
    b_L1_SingleJet20er3p0_NotBptxOR_ = tree->GetBranch("L1_SingleJet20er3p0_NotBptxOR");
    if (b_L1_SingleJet20er3p0_NotBptxOR_) { b_L1_SingleJet20er3p0_NotBptxOR_->SetAddress(&L1_SingleJet20er3p0_NotBptxOR_); }
    b_L1_SingleJet20er3p0_NotBptxOR_3BX_ = tree->GetBranch("L1_SingleJet20er3p0_NotBptxOR_3BX");
    if (b_L1_SingleJet20er3p0_NotBptxOR_3BX_) { b_L1_SingleJet20er3p0_NotBptxOR_3BX_->SetAddress(&L1_SingleJet20er3p0_NotBptxOR_3BX_); }
    b_L1_SingleJet35_ = tree->GetBranch("L1_SingleJet35");
    if (b_L1_SingleJet35_) { b_L1_SingleJet35_->SetAddress(&L1_SingleJet35_); }
    b_L1_SingleJet35_FWD_ = tree->GetBranch("L1_SingleJet35_FWD");
    if (b_L1_SingleJet35_FWD_) { b_L1_SingleJet35_FWD_->SetAddress(&L1_SingleJet35_FWD_); }
    b_L1_SingleJet35_FWD3p0_ = tree->GetBranch("L1_SingleJet35_FWD3p0");
    if (b_L1_SingleJet35_FWD3p0_) { b_L1_SingleJet35_FWD3p0_->SetAddress(&L1_SingleJet35_FWD3p0_); }
    b_L1_SingleJet35_HFm_ = tree->GetBranch("L1_SingleJet35_HFm");
    if (b_L1_SingleJet35_HFm_) { b_L1_SingleJet35_HFm_->SetAddress(&L1_SingleJet35_HFm_); }
    b_L1_SingleJet35_HFp_ = tree->GetBranch("L1_SingleJet35_HFp");
    if (b_L1_SingleJet35_HFp_) { b_L1_SingleJet35_HFp_->SetAddress(&L1_SingleJet35_HFp_); }
    b_L1_SingleJet35er2p5_ = tree->GetBranch("L1_SingleJet35er2p5");
    if (b_L1_SingleJet35er2p5_) { b_L1_SingleJet35er2p5_->SetAddress(&L1_SingleJet35er2p5_); }
    b_L1_SingleJet4_ = tree->GetBranch("L1_SingleJet4");
    if (b_L1_SingleJet4_) { b_L1_SingleJet4_->SetAddress(&L1_SingleJet4_); }
    b_L1_SingleJet43er2p5_NotBptxOR_3BX_ = tree->GetBranch("L1_SingleJet43er2p5_NotBptxOR_3BX");
    if (b_L1_SingleJet43er2p5_NotBptxOR_3BX_) { b_L1_SingleJet43er2p5_NotBptxOR_3BX_->SetAddress(&L1_SingleJet43er2p5_NotBptxOR_3BX_); }
    b_L1_SingleJet43er2p7_NotBptxOR_3BX_ = tree->GetBranch("L1_SingleJet43er2p7_NotBptxOR_3BX");
    if (b_L1_SingleJet43er2p7_NotBptxOR_3BX_) { b_L1_SingleJet43er2p7_NotBptxOR_3BX_->SetAddress(&L1_SingleJet43er2p7_NotBptxOR_3BX_); }
    b_L1_SingleJet43er3p0_NotBptxOR_3BX_ = tree->GetBranch("L1_SingleJet43er3p0_NotBptxOR_3BX");
    if (b_L1_SingleJet43er3p0_NotBptxOR_3BX_) { b_L1_SingleJet43er3p0_NotBptxOR_3BX_->SetAddress(&L1_SingleJet43er3p0_NotBptxOR_3BX_); }
    b_L1_SingleJet46er2p5_NotBptxOR_3BX_ = tree->GetBranch("L1_SingleJet46er2p5_NotBptxOR_3BX");
    if (b_L1_SingleJet46er2p5_NotBptxOR_3BX_) { b_L1_SingleJet46er2p5_NotBptxOR_3BX_->SetAddress(&L1_SingleJet46er2p5_NotBptxOR_3BX_); }
    b_L1_SingleJet46er2p7_NotBptxOR_3BX_ = tree->GetBranch("L1_SingleJet46er2p7_NotBptxOR_3BX");
    if (b_L1_SingleJet46er2p7_NotBptxOR_3BX_) { b_L1_SingleJet46er2p7_NotBptxOR_3BX_->SetAddress(&L1_SingleJet46er2p7_NotBptxOR_3BX_); }
    b_L1_SingleJet46er3p0_NotBptxOR_3BX_ = tree->GetBranch("L1_SingleJet46er3p0_NotBptxOR_3BX");
    if (b_L1_SingleJet46er3p0_NotBptxOR_3BX_) { b_L1_SingleJet46er3p0_NotBptxOR_3BX_->SetAddress(&L1_SingleJet46er3p0_NotBptxOR_3BX_); }
    b_L1_SingleJet60_ = tree->GetBranch("L1_SingleJet60");
    if (b_L1_SingleJet60_) { b_L1_SingleJet60_->SetAddress(&L1_SingleJet60_); }
    b_L1_SingleJet60_FWD_ = tree->GetBranch("L1_SingleJet60_FWD");
    if (b_L1_SingleJet60_FWD_) { b_L1_SingleJet60_FWD_->SetAddress(&L1_SingleJet60_FWD_); }
    b_L1_SingleJet60_FWD3p0_ = tree->GetBranch("L1_SingleJet60_FWD3p0");
    if (b_L1_SingleJet60_FWD3p0_) { b_L1_SingleJet60_FWD3p0_->SetAddress(&L1_SingleJet60_FWD3p0_); }
    b_L1_SingleJet60_HFm_ = tree->GetBranch("L1_SingleJet60_HFm");
    if (b_L1_SingleJet60_HFm_) { b_L1_SingleJet60_HFm_->SetAddress(&L1_SingleJet60_HFm_); }
    b_L1_SingleJet60_HFp_ = tree->GetBranch("L1_SingleJet60_HFp");
    if (b_L1_SingleJet60_HFp_) { b_L1_SingleJet60_HFp_->SetAddress(&L1_SingleJet60_HFp_); }
    b_L1_SingleJet60er2p5_ = tree->GetBranch("L1_SingleJet60er2p5");
    if (b_L1_SingleJet60er2p5_) { b_L1_SingleJet60er2p5_->SetAddress(&L1_SingleJet60er2p5_); }
    b_L1_SingleJet8_ = tree->GetBranch("L1_SingleJet8");
    if (b_L1_SingleJet8_) { b_L1_SingleJet8_->SetAddress(&L1_SingleJet8_); }
    b_L1_SingleJet8_BptxAND_ = tree->GetBranch("L1_SingleJet8_BptxAND");
    if (b_L1_SingleJet8_BptxAND_) { b_L1_SingleJet8_BptxAND_->SetAddress(&L1_SingleJet8_BptxAND_); }
    b_L1_SingleJet8erHE_ = tree->GetBranch("L1_SingleJet8erHE");
    if (b_L1_SingleJet8erHE_) { b_L1_SingleJet8erHE_->SetAddress(&L1_SingleJet8erHE_); }
    b_L1_SingleJet90_ = tree->GetBranch("L1_SingleJet90");
    if (b_L1_SingleJet90_) { b_L1_SingleJet90_->SetAddress(&L1_SingleJet90_); }
    b_L1_SingleJet90_FWD_ = tree->GetBranch("L1_SingleJet90_FWD");
    if (b_L1_SingleJet90_FWD_) { b_L1_SingleJet90_FWD_->SetAddress(&L1_SingleJet90_FWD_); }
    b_L1_SingleJet90_FWD3p0_ = tree->GetBranch("L1_SingleJet90_FWD3p0");
    if (b_L1_SingleJet90_FWD3p0_) { b_L1_SingleJet90_FWD3p0_->SetAddress(&L1_SingleJet90_FWD3p0_); }
    b_L1_SingleJet90er2p5_ = tree->GetBranch("L1_SingleJet90er2p5");
    if (b_L1_SingleJet90er2p5_) { b_L1_SingleJet90er2p5_->SetAddress(&L1_SingleJet90er2p5_); }
    b_L1_SingleJetC20_NotBptxOR_ = tree->GetBranch("L1_SingleJetC20_NotBptxOR");
    if (b_L1_SingleJetC20_NotBptxOR_) { b_L1_SingleJetC20_NotBptxOR_->SetAddress(&L1_SingleJetC20_NotBptxOR_); }
    b_L1_SingleJetC20_NotBptxOR_3BX_ = tree->GetBranch("L1_SingleJetC20_NotBptxOR_3BX");
    if (b_L1_SingleJetC20_NotBptxOR_3BX_) { b_L1_SingleJetC20_NotBptxOR_3BX_->SetAddress(&L1_SingleJetC20_NotBptxOR_3BX_); }
    b_L1_SingleJetC32_NotBptxOR_ = tree->GetBranch("L1_SingleJetC32_NotBptxOR");
    if (b_L1_SingleJetC32_NotBptxOR_) { b_L1_SingleJetC32_NotBptxOR_->SetAddress(&L1_SingleJetC32_NotBptxOR_); }
    b_L1_SingleJetC32_NotBptxOR_3BX_ = tree->GetBranch("L1_SingleJetC32_NotBptxOR_3BX");
    if (b_L1_SingleJetC32_NotBptxOR_3BX_) { b_L1_SingleJetC32_NotBptxOR_3BX_->SetAddress(&L1_SingleJetC32_NotBptxOR_3BX_); }
    b_L1_SingleJetC36_NotBptxOR_3BX_ = tree->GetBranch("L1_SingleJetC36_NotBptxOR_3BX");
    if (b_L1_SingleJetC36_NotBptxOR_3BX_) { b_L1_SingleJetC36_NotBptxOR_3BX_->SetAddress(&L1_SingleJetC36_NotBptxOR_3BX_); }
    b_L1_SingleJetC40_NotBptxOR_3BX_ = tree->GetBranch("L1_SingleJetC40_NotBptxOR_3BX");
    if (b_L1_SingleJetC40_NotBptxOR_3BX_) { b_L1_SingleJetC40_NotBptxOR_3BX_->SetAddress(&L1_SingleJetC40_NotBptxOR_3BX_); }
    b_L1_SingleJetC40_NotBptxOR_5BX_ = tree->GetBranch("L1_SingleJetC40_NotBptxOR_5BX");
    if (b_L1_SingleJetC40_NotBptxOR_5BX_) { b_L1_SingleJetC40_NotBptxOR_5BX_->SetAddress(&L1_SingleJetC40_NotBptxOR_5BX_); }
    b_L1_SingleLooseIsoEG26er1p5_ = tree->GetBranch("L1_SingleLooseIsoEG26er1p5");
    if (b_L1_SingleLooseIsoEG26er1p5_) { b_L1_SingleLooseIsoEG26er1p5_->SetAddress(&L1_SingleLooseIsoEG26er1p5_); }
    b_L1_SingleLooseIsoEG26er2p5_ = tree->GetBranch("L1_SingleLooseIsoEG26er2p5");
    if (b_L1_SingleLooseIsoEG26er2p5_) { b_L1_SingleLooseIsoEG26er2p5_->SetAddress(&L1_SingleLooseIsoEG26er2p5_); }
    b_L1_SingleLooseIsoEG28_FWD2p5_ = tree->GetBranch("L1_SingleLooseIsoEG28_FWD2p5");
    if (b_L1_SingleLooseIsoEG28_FWD2p5_) { b_L1_SingleLooseIsoEG28_FWD2p5_->SetAddress(&L1_SingleLooseIsoEG28_FWD2p5_); }
    b_L1_SingleLooseIsoEG28er1p5_ = tree->GetBranch("L1_SingleLooseIsoEG28er1p5");
    if (b_L1_SingleLooseIsoEG28er1p5_) { b_L1_SingleLooseIsoEG28er1p5_->SetAddress(&L1_SingleLooseIsoEG28er1p5_); }
    b_L1_SingleLooseIsoEG28er2p1_ = tree->GetBranch("L1_SingleLooseIsoEG28er2p1");
    if (b_L1_SingleLooseIsoEG28er2p1_) { b_L1_SingleLooseIsoEG28er2p1_->SetAddress(&L1_SingleLooseIsoEG28er2p1_); }
    b_L1_SingleLooseIsoEG28er2p5_ = tree->GetBranch("L1_SingleLooseIsoEG28er2p5");
    if (b_L1_SingleLooseIsoEG28er2p5_) { b_L1_SingleLooseIsoEG28er2p5_->SetAddress(&L1_SingleLooseIsoEG28er2p5_); }
    b_L1_SingleLooseIsoEG30er1p5_ = tree->GetBranch("L1_SingleLooseIsoEG30er1p5");
    if (b_L1_SingleLooseIsoEG30er1p5_) { b_L1_SingleLooseIsoEG30er1p5_->SetAddress(&L1_SingleLooseIsoEG30er1p5_); }
    b_L1_SingleLooseIsoEG30er2p5_ = tree->GetBranch("L1_SingleLooseIsoEG30er2p5");
    if (b_L1_SingleLooseIsoEG30er2p5_) { b_L1_SingleLooseIsoEG30er2p5_->SetAddress(&L1_SingleLooseIsoEG30er2p5_); }
    b_L1_SingleMu0_BMTF_ = tree->GetBranch("L1_SingleMu0_BMTF");
    if (b_L1_SingleMu0_BMTF_) { b_L1_SingleMu0_BMTF_->SetAddress(&L1_SingleMu0_BMTF_); }
    b_L1_SingleMu0_DQ_ = tree->GetBranch("L1_SingleMu0_DQ");
    if (b_L1_SingleMu0_DQ_) { b_L1_SingleMu0_DQ_->SetAddress(&L1_SingleMu0_DQ_); }
    b_L1_SingleMu0_EMTF_ = tree->GetBranch("L1_SingleMu0_EMTF");
    if (b_L1_SingleMu0_EMTF_) { b_L1_SingleMu0_EMTF_->SetAddress(&L1_SingleMu0_EMTF_); }
    b_L1_SingleMu0_OMTF_ = tree->GetBranch("L1_SingleMu0_OMTF");
    if (b_L1_SingleMu0_OMTF_) { b_L1_SingleMu0_OMTF_->SetAddress(&L1_SingleMu0_OMTF_); }
    b_L1_SingleMu10_LowQ_ = tree->GetBranch("L1_SingleMu10_LowQ");
    if (b_L1_SingleMu10_LowQ_) { b_L1_SingleMu10_LowQ_->SetAddress(&L1_SingleMu10_LowQ_); }
    b_L1_SingleMu10er1p5_ = tree->GetBranch("L1_SingleMu10er1p5");
    if (b_L1_SingleMu10er1p5_) { b_L1_SingleMu10er1p5_->SetAddress(&L1_SingleMu10er1p5_); }
    b_L1_SingleMu11_LowQ_ = tree->GetBranch("L1_SingleMu11_LowQ");
    if (b_L1_SingleMu11_LowQ_) { b_L1_SingleMu11_LowQ_->SetAddress(&L1_SingleMu11_LowQ_); }
    b_L1_SingleMu12_ = tree->GetBranch("L1_SingleMu12");
    if (b_L1_SingleMu12_) { b_L1_SingleMu12_->SetAddress(&L1_SingleMu12_); }
    b_L1_SingleMu12_DQ_BMTF_ = tree->GetBranch("L1_SingleMu12_DQ_BMTF");
    if (b_L1_SingleMu12_DQ_BMTF_) { b_L1_SingleMu12_DQ_BMTF_->SetAddress(&L1_SingleMu12_DQ_BMTF_); }
    b_L1_SingleMu12_DQ_EMTF_ = tree->GetBranch("L1_SingleMu12_DQ_EMTF");
    if (b_L1_SingleMu12_DQ_EMTF_) { b_L1_SingleMu12_DQ_EMTF_->SetAddress(&L1_SingleMu12_DQ_EMTF_); }
    b_L1_SingleMu12_DQ_OMTF_ = tree->GetBranch("L1_SingleMu12_DQ_OMTF");
    if (b_L1_SingleMu12_DQ_OMTF_) { b_L1_SingleMu12_DQ_OMTF_->SetAddress(&L1_SingleMu12_DQ_OMTF_); }
    b_L1_SingleMu12_LowQ_BMTF_ = tree->GetBranch("L1_SingleMu12_LowQ_BMTF");
    if (b_L1_SingleMu12_LowQ_BMTF_) { b_L1_SingleMu12_LowQ_BMTF_->SetAddress(&L1_SingleMu12_LowQ_BMTF_); }
    b_L1_SingleMu12_LowQ_EMTF_ = tree->GetBranch("L1_SingleMu12_LowQ_EMTF");
    if (b_L1_SingleMu12_LowQ_EMTF_) { b_L1_SingleMu12_LowQ_EMTF_->SetAddress(&L1_SingleMu12_LowQ_EMTF_); }
    b_L1_SingleMu12_LowQ_OMTF_ = tree->GetBranch("L1_SingleMu12_LowQ_OMTF");
    if (b_L1_SingleMu12_LowQ_OMTF_) { b_L1_SingleMu12_LowQ_OMTF_->SetAddress(&L1_SingleMu12_LowQ_OMTF_); }
    b_L1_SingleMu12er1p5_ = tree->GetBranch("L1_SingleMu12er1p5");
    if (b_L1_SingleMu12er1p5_) { b_L1_SingleMu12er1p5_->SetAddress(&L1_SingleMu12er1p5_); }
    b_L1_SingleMu14_ = tree->GetBranch("L1_SingleMu14");
    if (b_L1_SingleMu14_) { b_L1_SingleMu14_->SetAddress(&L1_SingleMu14_); }
    b_L1_SingleMu14er_ = tree->GetBranch("L1_SingleMu14er");
    if (b_L1_SingleMu14er_) { b_L1_SingleMu14er_->SetAddress(&L1_SingleMu14er_); }
    b_L1_SingleMu14er1p5_ = tree->GetBranch("L1_SingleMu14er1p5");
    if (b_L1_SingleMu14er1p5_) { b_L1_SingleMu14er1p5_->SetAddress(&L1_SingleMu14er1p5_); }
    b_L1_SingleMu14er2p1_ = tree->GetBranch("L1_SingleMu14er2p1");
    if (b_L1_SingleMu14er2p1_) { b_L1_SingleMu14er2p1_->SetAddress(&L1_SingleMu14er2p1_); }
    b_L1_SingleMu15_DQ_ = tree->GetBranch("L1_SingleMu15_DQ");
    if (b_L1_SingleMu15_DQ_) { b_L1_SingleMu15_DQ_->SetAddress(&L1_SingleMu15_DQ_); }
    b_L1_SingleMu16_ = tree->GetBranch("L1_SingleMu16");
    if (b_L1_SingleMu16_) { b_L1_SingleMu16_->SetAddress(&L1_SingleMu16_); }
    b_L1_SingleMu16er_ = tree->GetBranch("L1_SingleMu16er");
    if (b_L1_SingleMu16er_) { b_L1_SingleMu16er_->SetAddress(&L1_SingleMu16er_); }
    b_L1_SingleMu16er1p5_ = tree->GetBranch("L1_SingleMu16er1p5");
    if (b_L1_SingleMu16er1p5_) { b_L1_SingleMu16er1p5_->SetAddress(&L1_SingleMu16er1p5_); }
    b_L1_SingleMu16er2p1_ = tree->GetBranch("L1_SingleMu16er2p1");
    if (b_L1_SingleMu16er2p1_) { b_L1_SingleMu16er2p1_->SetAddress(&L1_SingleMu16er2p1_); }
    b_L1_SingleMu18_ = tree->GetBranch("L1_SingleMu18");
    if (b_L1_SingleMu18_) { b_L1_SingleMu18_->SetAddress(&L1_SingleMu18_); }
    b_L1_SingleMu18er_ = tree->GetBranch("L1_SingleMu18er");
    if (b_L1_SingleMu18er_) { b_L1_SingleMu18er_->SetAddress(&L1_SingleMu18er_); }
    b_L1_SingleMu18er1p5_ = tree->GetBranch("L1_SingleMu18er1p5");
    if (b_L1_SingleMu18er1p5_) { b_L1_SingleMu18er1p5_->SetAddress(&L1_SingleMu18er1p5_); }
    b_L1_SingleMu18er2p1_ = tree->GetBranch("L1_SingleMu18er2p1");
    if (b_L1_SingleMu18er2p1_) { b_L1_SingleMu18er2p1_->SetAddress(&L1_SingleMu18er2p1_); }
    b_L1_SingleMu20_ = tree->GetBranch("L1_SingleMu20");
    if (b_L1_SingleMu20_) { b_L1_SingleMu20_->SetAddress(&L1_SingleMu20_); }
    b_L1_SingleMu20er_ = tree->GetBranch("L1_SingleMu20er");
    if (b_L1_SingleMu20er_) { b_L1_SingleMu20er_->SetAddress(&L1_SingleMu20er_); }
    b_L1_SingleMu20er2p1_ = tree->GetBranch("L1_SingleMu20er2p1");
    if (b_L1_SingleMu20er2p1_) { b_L1_SingleMu20er2p1_->SetAddress(&L1_SingleMu20er2p1_); }
    b_L1_SingleMu22_ = tree->GetBranch("L1_SingleMu22");
    if (b_L1_SingleMu22_) { b_L1_SingleMu22_->SetAddress(&L1_SingleMu22_); }
    b_L1_SingleMu22_BMTF_ = tree->GetBranch("L1_SingleMu22_BMTF");
    if (b_L1_SingleMu22_BMTF_) { b_L1_SingleMu22_BMTF_->SetAddress(&L1_SingleMu22_BMTF_); }
    b_L1_SingleMu22_DQ_ = tree->GetBranch("L1_SingleMu22_DQ");
    if (b_L1_SingleMu22_DQ_) { b_L1_SingleMu22_DQ_->SetAddress(&L1_SingleMu22_DQ_); }
    b_L1_SingleMu22_EMTF_ = tree->GetBranch("L1_SingleMu22_EMTF");
    if (b_L1_SingleMu22_EMTF_) { b_L1_SingleMu22_EMTF_->SetAddress(&L1_SingleMu22_EMTF_); }
    b_L1_SingleMu22_OMTF_ = tree->GetBranch("L1_SingleMu22_OMTF");
    if (b_L1_SingleMu22_OMTF_) { b_L1_SingleMu22_OMTF_->SetAddress(&L1_SingleMu22_OMTF_); }
    b_L1_SingleMu22_OQ_ = tree->GetBranch("L1_SingleMu22_OQ");
    if (b_L1_SingleMu22_OQ_) { b_L1_SingleMu22_OQ_->SetAddress(&L1_SingleMu22_OQ_); }
    b_L1_SingleMu22er_ = tree->GetBranch("L1_SingleMu22er");
    if (b_L1_SingleMu22er_) { b_L1_SingleMu22er_->SetAddress(&L1_SingleMu22er_); }
    b_L1_SingleMu22er2p1_ = tree->GetBranch("L1_SingleMu22er2p1");
    if (b_L1_SingleMu22er2p1_) { b_L1_SingleMu22er2p1_->SetAddress(&L1_SingleMu22er2p1_); }
    b_L1_SingleMu25_ = tree->GetBranch("L1_SingleMu25");
    if (b_L1_SingleMu25_) { b_L1_SingleMu25_->SetAddress(&L1_SingleMu25_); }
    b_L1_SingleMu25er_ = tree->GetBranch("L1_SingleMu25er");
    if (b_L1_SingleMu25er_) { b_L1_SingleMu25er_->SetAddress(&L1_SingleMu25er_); }
    b_L1_SingleMu3_ = tree->GetBranch("L1_SingleMu3");
    if (b_L1_SingleMu3_) { b_L1_SingleMu3_->SetAddress(&L1_SingleMu3_); }
    b_L1_SingleMu30_ = tree->GetBranch("L1_SingleMu30");
    if (b_L1_SingleMu30_) { b_L1_SingleMu30_->SetAddress(&L1_SingleMu30_); }
    b_L1_SingleMu30er_ = tree->GetBranch("L1_SingleMu30er");
    if (b_L1_SingleMu30er_) { b_L1_SingleMu30er_->SetAddress(&L1_SingleMu30er_); }
    b_L1_SingleMu5_ = tree->GetBranch("L1_SingleMu5");
    if (b_L1_SingleMu5_) { b_L1_SingleMu5_->SetAddress(&L1_SingleMu5_); }
    b_L1_SingleMu6er1p5_ = tree->GetBranch("L1_SingleMu6er1p5");
    if (b_L1_SingleMu6er1p5_) { b_L1_SingleMu6er1p5_->SetAddress(&L1_SingleMu6er1p5_); }
    b_L1_SingleMu7_ = tree->GetBranch("L1_SingleMu7");
    if (b_L1_SingleMu7_) { b_L1_SingleMu7_->SetAddress(&L1_SingleMu7_); }
    b_L1_SingleMu7_DQ_ = tree->GetBranch("L1_SingleMu7_DQ");
    if (b_L1_SingleMu7_DQ_) { b_L1_SingleMu7_DQ_->SetAddress(&L1_SingleMu7_DQ_); }
    b_L1_SingleMu7er1p5_ = tree->GetBranch("L1_SingleMu7er1p5");
    if (b_L1_SingleMu7er1p5_) { b_L1_SingleMu7er1p5_->SetAddress(&L1_SingleMu7er1p5_); }
    b_L1_SingleMu8er1p5_ = tree->GetBranch("L1_SingleMu8er1p5");
    if (b_L1_SingleMu8er1p5_) { b_L1_SingleMu8er1p5_->SetAddress(&L1_SingleMu8er1p5_); }
    b_L1_SingleMu9er1p5_ = tree->GetBranch("L1_SingleMu9er1p5");
    if (b_L1_SingleMu9er1p5_) { b_L1_SingleMu9er1p5_->SetAddress(&L1_SingleMu9er1p5_); }
    b_L1_SingleMuCosmics_ = tree->GetBranch("L1_SingleMuCosmics");
    if (b_L1_SingleMuCosmics_) { b_L1_SingleMuCosmics_->SetAddress(&L1_SingleMuCosmics_); }
    b_L1_SingleMuCosmics_BMTF_ = tree->GetBranch("L1_SingleMuCosmics_BMTF");
    if (b_L1_SingleMuCosmics_BMTF_) { b_L1_SingleMuCosmics_BMTF_->SetAddress(&L1_SingleMuCosmics_BMTF_); }
    b_L1_SingleMuCosmics_EMTF_ = tree->GetBranch("L1_SingleMuCosmics_EMTF");
    if (b_L1_SingleMuCosmics_EMTF_) { b_L1_SingleMuCosmics_EMTF_->SetAddress(&L1_SingleMuCosmics_EMTF_); }
    b_L1_SingleMuCosmics_OMTF_ = tree->GetBranch("L1_SingleMuCosmics_OMTF");
    if (b_L1_SingleMuCosmics_OMTF_) { b_L1_SingleMuCosmics_OMTF_->SetAddress(&L1_SingleMuCosmics_OMTF_); }
    b_L1_SingleMuOpen_ = tree->GetBranch("L1_SingleMuOpen");
    if (b_L1_SingleMuOpen_) { b_L1_SingleMuOpen_->SetAddress(&L1_SingleMuOpen_); }
    b_L1_SingleMuOpen_NotBptxOR_ = tree->GetBranch("L1_SingleMuOpen_NotBptxOR");
    if (b_L1_SingleMuOpen_NotBptxOR_) { b_L1_SingleMuOpen_NotBptxOR_->SetAddress(&L1_SingleMuOpen_NotBptxOR_); }
    b_L1_SingleMuOpen_NotBptxOR_3BX_ = tree->GetBranch("L1_SingleMuOpen_NotBptxOR_3BX");
    if (b_L1_SingleMuOpen_NotBptxOR_3BX_) { b_L1_SingleMuOpen_NotBptxOR_3BX_->SetAddress(&L1_SingleMuOpen_NotBptxOR_3BX_); }
    b_L1_SingleMuOpen_er1p1_NotBptxOR_3BX_ = tree->GetBranch("L1_SingleMuOpen_er1p1_NotBptxOR_3BX");
    if (b_L1_SingleMuOpen_er1p1_NotBptxOR_3BX_) { b_L1_SingleMuOpen_er1p1_NotBptxOR_3BX_->SetAddress(&L1_SingleMuOpen_er1p1_NotBptxOR_3BX_); }
    b_L1_SingleMuOpen_er1p4_NotBptxOR_3BX_ = tree->GetBranch("L1_SingleMuOpen_er1p4_NotBptxOR_3BX");
    if (b_L1_SingleMuOpen_er1p4_NotBptxOR_3BX_) { b_L1_SingleMuOpen_er1p4_NotBptxOR_3BX_->SetAddress(&L1_SingleMuOpen_er1p4_NotBptxOR_3BX_); }
    b_L1_SingleMuShower_Nominal_ = tree->GetBranch("L1_SingleMuShower_Nominal");
    if (b_L1_SingleMuShower_Nominal_) { b_L1_SingleMuShower_Nominal_->SetAddress(&L1_SingleMuShower_Nominal_); }
    b_L1_SingleMuShower_Tight_ = tree->GetBranch("L1_SingleMuShower_Tight");
    if (b_L1_SingleMuShower_Tight_) { b_L1_SingleMuShower_Tight_->SetAddress(&L1_SingleMuShower_Tight_); }
    b_L1_SingleTau100er_ = tree->GetBranch("L1_SingleTau100er");
    if (b_L1_SingleTau100er_) { b_L1_SingleTau100er_->SetAddress(&L1_SingleTau100er_); }
    b_L1_SingleTau100er2p1_ = tree->GetBranch("L1_SingleTau100er2p1");
    if (b_L1_SingleTau100er2p1_) { b_L1_SingleTau100er2p1_->SetAddress(&L1_SingleTau100er2p1_); }
    b_L1_SingleTau120er_ = tree->GetBranch("L1_SingleTau120er");
    if (b_L1_SingleTau120er_) { b_L1_SingleTau120er_->SetAddress(&L1_SingleTau120er_); }
    b_L1_SingleTau120er2p1_ = tree->GetBranch("L1_SingleTau120er2p1");
    if (b_L1_SingleTau120er2p1_) { b_L1_SingleTau120er2p1_->SetAddress(&L1_SingleTau120er2p1_); }
    b_L1_SingleTau130er2p1_ = tree->GetBranch("L1_SingleTau130er2p1");
    if (b_L1_SingleTau130er2p1_) { b_L1_SingleTau130er2p1_->SetAddress(&L1_SingleTau130er2p1_); }
    b_L1_SingleTau140er2p1_ = tree->GetBranch("L1_SingleTau140er2p1");
    if (b_L1_SingleTau140er2p1_) { b_L1_SingleTau140er2p1_->SetAddress(&L1_SingleTau140er2p1_); }
    b_L1_SingleTau20_ = tree->GetBranch("L1_SingleTau20");
    if (b_L1_SingleTau20_) { b_L1_SingleTau20_->SetAddress(&L1_SingleTau20_); }
    b_L1_SingleTau70er2p1_ = tree->GetBranch("L1_SingleTau70er2p1");
    if (b_L1_SingleTau70er2p1_) { b_L1_SingleTau70er2p1_->SetAddress(&L1_SingleTau70er2p1_); }
    b_L1_SingleTau80er_ = tree->GetBranch("L1_SingleTau80er");
    if (b_L1_SingleTau80er_) { b_L1_SingleTau80er_->SetAddress(&L1_SingleTau80er_); }
    b_L1_SingleTau80er2p1_ = tree->GetBranch("L1_SingleTau80er2p1");
    if (b_L1_SingleTau80er2p1_) { b_L1_SingleTau80er2p1_->SetAddress(&L1_SingleTau80er2p1_); }
    b_L1_TOTEM_1_ = tree->GetBranch("L1_TOTEM_1");
    if (b_L1_TOTEM_1_) { b_L1_TOTEM_1_->SetAddress(&L1_TOTEM_1_); }
    b_L1_TOTEM_2_ = tree->GetBranch("L1_TOTEM_2");
    if (b_L1_TOTEM_2_) { b_L1_TOTEM_2_->SetAddress(&L1_TOTEM_2_); }
    b_L1_TOTEM_3_ = tree->GetBranch("L1_TOTEM_3");
    if (b_L1_TOTEM_3_) { b_L1_TOTEM_3_->SetAddress(&L1_TOTEM_3_); }
    b_L1_TOTEM_4_ = tree->GetBranch("L1_TOTEM_4");
    if (b_L1_TOTEM_4_) { b_L1_TOTEM_4_->SetAddress(&L1_TOTEM_4_); }
    b_L1_TripleEG16er2p5_ = tree->GetBranch("L1_TripleEG16er2p5");
    if (b_L1_TripleEG16er2p5_) { b_L1_TripleEG16er2p5_->SetAddress(&L1_TripleEG16er2p5_); }
    b_L1_TripleEG_14_10_8_ = tree->GetBranch("L1_TripleEG_14_10_8");
    if (b_L1_TripleEG_14_10_8_) { b_L1_TripleEG_14_10_8_->SetAddress(&L1_TripleEG_14_10_8_); }
    b_L1_TripleEG_16_12_8_er2p5_ = tree->GetBranch("L1_TripleEG_16_12_8_er2p5");
    if (b_L1_TripleEG_16_12_8_er2p5_) { b_L1_TripleEG_16_12_8_er2p5_->SetAddress(&L1_TripleEG_16_12_8_er2p5_); }
    b_L1_TripleEG_16_15_8_er2p5_ = tree->GetBranch("L1_TripleEG_16_15_8_er2p5");
    if (b_L1_TripleEG_16_15_8_er2p5_) { b_L1_TripleEG_16_15_8_er2p5_->SetAddress(&L1_TripleEG_16_15_8_er2p5_); }
    b_L1_TripleEG_18_17_8_ = tree->GetBranch("L1_TripleEG_18_17_8");
    if (b_L1_TripleEG_18_17_8_) { b_L1_TripleEG_18_17_8_->SetAddress(&L1_TripleEG_18_17_8_); }
    b_L1_TripleEG_18_17_8_er2p5_ = tree->GetBranch("L1_TripleEG_18_17_8_er2p5");
    if (b_L1_TripleEG_18_17_8_er2p5_) { b_L1_TripleEG_18_17_8_er2p5_->SetAddress(&L1_TripleEG_18_17_8_er2p5_); }
    b_L1_TripleEG_18_18_12_er2p5_ = tree->GetBranch("L1_TripleEG_18_18_12_er2p5");
    if (b_L1_TripleEG_18_18_12_er2p5_) { b_L1_TripleEG_18_18_12_er2p5_->SetAddress(&L1_TripleEG_18_18_12_er2p5_); }
    b_L1_TripleEG_Iso20_10_5_ = tree->GetBranch("L1_TripleEG_Iso20_10_5");
    if (b_L1_TripleEG_Iso20_10_5_) { b_L1_TripleEG_Iso20_10_5_->SetAddress(&L1_TripleEG_Iso20_10_5_); }
    b_L1_TripleEG_LooseIso20_10_5_ = tree->GetBranch("L1_TripleEG_LooseIso20_10_5");
    if (b_L1_TripleEG_LooseIso20_10_5_) { b_L1_TripleEG_LooseIso20_10_5_->SetAddress(&L1_TripleEG_LooseIso20_10_5_); }
    b_L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5_ = tree->GetBranch("L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5");
    if (b_L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5_) { b_L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5_->SetAddress(&L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5_); }
    b_L1_TripleJet_100_85_72_VBF_ = tree->GetBranch("L1_TripleJet_100_85_72_VBF");
    if (b_L1_TripleJet_100_85_72_VBF_) { b_L1_TripleJet_100_85_72_VBF_->SetAddress(&L1_TripleJet_100_85_72_VBF_); }
    b_L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5_ = tree->GetBranch("L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5");
    if (b_L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5_) { b_L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5_->SetAddress(&L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5_); }
    b_L1_TripleJet_105_85_76_VBF_ = tree->GetBranch("L1_TripleJet_105_85_76_VBF");
    if (b_L1_TripleJet_105_85_76_VBF_) { b_L1_TripleJet_105_85_76_VBF_->SetAddress(&L1_TripleJet_105_85_76_VBF_); }
    b_L1_TripleJet_84_68_48_VBF_ = tree->GetBranch("L1_TripleJet_84_68_48_VBF");
    if (b_L1_TripleJet_84_68_48_VBF_) { b_L1_TripleJet_84_68_48_VBF_->SetAddress(&L1_TripleJet_84_68_48_VBF_); }
    b_L1_TripleJet_88_72_56_VBF_ = tree->GetBranch("L1_TripleJet_88_72_56_VBF");
    if (b_L1_TripleJet_88_72_56_VBF_) { b_L1_TripleJet_88_72_56_VBF_->SetAddress(&L1_TripleJet_88_72_56_VBF_); }
    b_L1_TripleJet_92_76_64_VBF_ = tree->GetBranch("L1_TripleJet_92_76_64_VBF");
    if (b_L1_TripleJet_92_76_64_VBF_) { b_L1_TripleJet_92_76_64_VBF_->SetAddress(&L1_TripleJet_92_76_64_VBF_); }
    b_L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5_ = tree->GetBranch("L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5");
    if (b_L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5_) { b_L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5_->SetAddress(&L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5_); }
    b_L1_TripleJet_98_83_71_VBF_ = tree->GetBranch("L1_TripleJet_98_83_71_VBF");
    if (b_L1_TripleJet_98_83_71_VBF_) { b_L1_TripleJet_98_83_71_VBF_->SetAddress(&L1_TripleJet_98_83_71_VBF_); }
    b_L1_TripleMu0_ = tree->GetBranch("L1_TripleMu0");
    if (b_L1_TripleMu0_) { b_L1_TripleMu0_->SetAddress(&L1_TripleMu0_); }
    b_L1_TripleMu0_OQ_ = tree->GetBranch("L1_TripleMu0_OQ");
    if (b_L1_TripleMu0_OQ_) { b_L1_TripleMu0_OQ_->SetAddress(&L1_TripleMu0_OQ_); }
    b_L1_TripleMu0_SQ_ = tree->GetBranch("L1_TripleMu0_SQ");
    if (b_L1_TripleMu0_SQ_) { b_L1_TripleMu0_SQ_->SetAddress(&L1_TripleMu0_SQ_); }
    b_L1_TripleMu3_ = tree->GetBranch("L1_TripleMu3");
    if (b_L1_TripleMu3_) { b_L1_TripleMu3_->SetAddress(&L1_TripleMu3_); }
    b_L1_TripleMu3_SQ_ = tree->GetBranch("L1_TripleMu3_SQ");
    if (b_L1_TripleMu3_SQ_) { b_L1_TripleMu3_SQ_->SetAddress(&L1_TripleMu3_SQ_); }
    b_L1_TripleMu_2SQ_1p5SQ_0OQ_ = tree->GetBranch("L1_TripleMu_2SQ_1p5SQ_0OQ");
    if (b_L1_TripleMu_2SQ_1p5SQ_0OQ_) { b_L1_TripleMu_2SQ_1p5SQ_0OQ_->SetAddress(&L1_TripleMu_2SQ_1p5SQ_0OQ_); }
    b_L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12_ = tree->GetBranch("L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12");
    if (b_L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12_) { b_L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12_->SetAddress(&L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12_); }
    b_L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12_ = tree->GetBranch("L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12");
    if (b_L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12_) { b_L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12_->SetAddress(&L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12_); }
    b_L1_TripleMu_4_4_4_ = tree->GetBranch("L1_TripleMu_4_4_4");
    if (b_L1_TripleMu_4_4_4_) { b_L1_TripleMu_4_4_4_->SetAddress(&L1_TripleMu_4_4_4_); }
    b_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_ = tree->GetBranch("L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17");
    if (b_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_) { b_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_->SetAddress(&L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_); }
    b_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14_ = tree->GetBranch("L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14");
    if (b_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14_) { b_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14_->SetAddress(&L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14_); }
    b_L1_TripleMu_5SQ_3SQ_0OQ_ = tree->GetBranch("L1_TripleMu_5SQ_3SQ_0OQ");
    if (b_L1_TripleMu_5SQ_3SQ_0OQ_) { b_L1_TripleMu_5SQ_3SQ_0OQ_->SetAddress(&L1_TripleMu_5SQ_3SQ_0OQ_); }
    b_L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9_ = tree->GetBranch("L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9");
    if (b_L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9_) { b_L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9_->SetAddress(&L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9_); }
    b_L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9_ = tree->GetBranch("L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9");
    if (b_L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9_) { b_L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9_->SetAddress(&L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9_); }
    b_L1_TripleMu_5_0_0_ = tree->GetBranch("L1_TripleMu_5_0_0");
    if (b_L1_TripleMu_5_0_0_) { b_L1_TripleMu_5_0_0_->SetAddress(&L1_TripleMu_5_0_0_); }
    b_L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17_ = tree->GetBranch("L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17");
    if (b_L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17_) { b_L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17_->SetAddress(&L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17_); }
    b_L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17_ = tree->GetBranch("L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17");
    if (b_L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17_) { b_L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17_->SetAddress(&L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17_); }
    b_L1_TripleMu_5_3_3_ = tree->GetBranch("L1_TripleMu_5_3_3");
    if (b_L1_TripleMu_5_3_3_) { b_L1_TripleMu_5_3_3_->SetAddress(&L1_TripleMu_5_3_3_); }
    b_L1_TripleMu_5_3_3_SQ_ = tree->GetBranch("L1_TripleMu_5_3_3_SQ");
    if (b_L1_TripleMu_5_3_3_SQ_) { b_L1_TripleMu_5_3_3_SQ_->SetAddress(&L1_TripleMu_5_3_3_SQ_); }
    b_L1_TripleMu_5_3p5_2p5_ = tree->GetBranch("L1_TripleMu_5_3p5_2p5");
    if (b_L1_TripleMu_5_3p5_2p5_) { b_L1_TripleMu_5_3p5_2p5_->SetAddress(&L1_TripleMu_5_3p5_2p5_); }
    b_L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17_ = tree->GetBranch("L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17");
    if (b_L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17_) { b_L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17_->SetAddress(&L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17_); }
    b_L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_ = tree->GetBranch("L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17");
    if (b_L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_) { b_L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_->SetAddress(&L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_); }
    b_L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17_ = tree->GetBranch("L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17");
    if (b_L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17_) { b_L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17_->SetAddress(&L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17_); }
    b_L1_TripleMu_5_5_3_ = tree->GetBranch("L1_TripleMu_5_5_3");
    if (b_L1_TripleMu_5_5_3_) { b_L1_TripleMu_5_5_3_->SetAddress(&L1_TripleMu_5_5_3_); }
    b_L1_UnpairedBunchBptxMinus_ = tree->GetBranch("L1_UnpairedBunchBptxMinus");
    if (b_L1_UnpairedBunchBptxMinus_) { b_L1_UnpairedBunchBptxMinus_->SetAddress(&L1_UnpairedBunchBptxMinus_); }
    b_L1_UnpairedBunchBptxPlus_ = tree->GetBranch("L1_UnpairedBunchBptxPlus");
    if (b_L1_UnpairedBunchBptxPlus_) { b_L1_UnpairedBunchBptxPlus_->SetAddress(&L1_UnpairedBunchBptxPlus_); }
    b_L1_UnprefireableEvent_ = tree->GetBranch("L1_UnprefireableEvent");
    if (b_L1_UnprefireableEvent_) { b_L1_UnprefireableEvent_->SetAddress(&L1_UnprefireableEvent_); }
    b_L1_ZeroBias_ = tree->GetBranch("L1_ZeroBias");
    if (b_L1_ZeroBias_) { b_L1_ZeroBias_->SetAddress(&L1_ZeroBias_); }
    b_L1_ZeroBias_FirstCollidingBunch_ = tree->GetBranch("L1_ZeroBias_FirstCollidingBunch");
    if (b_L1_ZeroBias_FirstCollidingBunch_) { b_L1_ZeroBias_FirstCollidingBunch_->SetAddress(&L1_ZeroBias_FirstCollidingBunch_); }
    b_L1_ZeroBias_copy_ = tree->GetBranch("L1_ZeroBias_copy");
    if (b_L1_ZeroBias_copy_) { b_L1_ZeroBias_copy_->SetAddress(&L1_ZeroBias_copy_); }
    b_L1simulation_step_ = tree->GetBranch("L1simulation_step");
    if (b_L1simulation_step_) { b_L1simulation_step_->SetAddress(&L1simulation_step_); }
    b_LHEPart_eta_ = tree->GetBranch("LHEPart_eta");
    if (b_LHEPart_eta_) { b_LHEPart_eta_->SetAddress(&LHEPart_eta_); }
    b_LHEPart_incomingpz_ = tree->GetBranch("LHEPart_incomingpz");
    if (b_LHEPart_incomingpz_) { b_LHEPart_incomingpz_->SetAddress(&LHEPart_incomingpz_); }
    b_LHEPart_mass_ = tree->GetBranch("LHEPart_mass");
    if (b_LHEPart_mass_) { b_LHEPart_mass_->SetAddress(&LHEPart_mass_); }
    b_LHEPart_pdgId_ = tree->GetBranch("LHEPart_pdgId");
    if (b_LHEPart_pdgId_) { b_LHEPart_pdgId_->SetAddress(&LHEPart_pdgId_); }
    b_LHEPart_phi_ = tree->GetBranch("LHEPart_phi");
    if (b_LHEPart_phi_) { b_LHEPart_phi_->SetAddress(&LHEPart_phi_); }
    b_LHEPart_pt_ = tree->GetBranch("LHEPart_pt");
    if (b_LHEPart_pt_) { b_LHEPart_pt_->SetAddress(&LHEPart_pt_); }
    b_LHEPart_spin_ = tree->GetBranch("LHEPart_spin");
    if (b_LHEPart_spin_) { b_LHEPart_spin_->SetAddress(&LHEPart_spin_); }
    b_LHEPart_status_ = tree->GetBranch("LHEPart_status");
    if (b_LHEPart_status_) { b_LHEPart_status_->SetAddress(&LHEPart_status_); }
    b_LHEPdfWeight_ = tree->GetBranch("LHEPdfWeight");
    if (b_LHEPdfWeight_) { b_LHEPdfWeight_->SetAddress(&LHEPdfWeight_); }
    b_LHEReweightingWeight_ = tree->GetBranch("LHEReweightingWeight");
    if (b_LHEReweightingWeight_) { b_LHEReweightingWeight_->SetAddress(&LHEReweightingWeight_); }
    b_LHEScaleWeight_ = tree->GetBranch("LHEScaleWeight");
    if (b_LHEScaleWeight_) { b_LHEScaleWeight_->SetAddress(&LHEScaleWeight_); }
    b_LHEWeight_dummy_ = tree->GetBranch("LHEWeight_dummy");
    if (b_LHEWeight_dummy_) { b_LHEWeight_dummy_->SetAddress(&LHEWeight_dummy_); }
    b_LHEWeight_originalXWGTUP_ = tree->GetBranch("LHEWeight_originalXWGTUP");
    if (b_LHEWeight_originalXWGTUP_) { b_LHEWeight_originalXWGTUP_->SetAddress(&LHEWeight_originalXWGTUP_); }
    b_LHE_AlphaS_ = tree->GetBranch("LHE_AlphaS");
    if (b_LHE_AlphaS_) { b_LHE_AlphaS_->SetAddress(&LHE_AlphaS_); }
    b_LHE_HT_ = tree->GetBranch("LHE_HT");
    if (b_LHE_HT_) { b_LHE_HT_->SetAddress(&LHE_HT_); }
    b_LHE_HTIncoming_ = tree->GetBranch("LHE_HTIncoming");
    if (b_LHE_HTIncoming_) { b_LHE_HTIncoming_->SetAddress(&LHE_HTIncoming_); }
    b_LHE_Nb_ = tree->GetBranch("LHE_Nb");
    if (b_LHE_Nb_) { b_LHE_Nb_->SetAddress(&LHE_Nb_); }
    b_LHE_Nc_ = tree->GetBranch("LHE_Nc");
    if (b_LHE_Nc_) { b_LHE_Nc_->SetAddress(&LHE_Nc_); }
    b_LHE_Nglu_ = tree->GetBranch("LHE_Nglu");
    if (b_LHE_Nglu_) { b_LHE_Nglu_->SetAddress(&LHE_Nglu_); }
    b_LHE_Njets_ = tree->GetBranch("LHE_Njets");
    if (b_LHE_Njets_) { b_LHE_Njets_->SetAddress(&LHE_Njets_); }
    b_LHE_NpLO_ = tree->GetBranch("LHE_NpLO");
    if (b_LHE_NpLO_) { b_LHE_NpLO_->SetAddress(&LHE_NpLO_); }
    b_LHE_NpNLO_ = tree->GetBranch("LHE_NpNLO");
    if (b_LHE_NpNLO_) { b_LHE_NpNLO_->SetAddress(&LHE_NpNLO_); }
    b_LHE_Nuds_ = tree->GetBranch("LHE_Nuds");
    if (b_LHE_Nuds_) { b_LHE_Nuds_->SetAddress(&LHE_Nuds_); }
    b_LHE_Vpt_ = tree->GetBranch("LHE_Vpt");
    if (b_LHE_Vpt_) { b_LHE_Vpt_->SetAddress(&LHE_Vpt_); }
    b_LowPtElectron_ID_ = tree->GetBranch("LowPtElectron_ID");
    if (b_LowPtElectron_ID_) { b_LowPtElectron_ID_->SetAddress(&LowPtElectron_ID_); }
    b_LowPtElectron_charge_ = tree->GetBranch("LowPtElectron_charge");
    if (b_LowPtElectron_charge_) { b_LowPtElectron_charge_->SetAddress(&LowPtElectron_charge_); }
    b_LowPtElectron_convVeto_ = tree->GetBranch("LowPtElectron_convVeto");
    if (b_LowPtElectron_convVeto_) { b_LowPtElectron_convVeto_->SetAddress(&LowPtElectron_convVeto_); }
    b_LowPtElectron_convVtxRadius_ = tree->GetBranch("LowPtElectron_convVtxRadius");
    if (b_LowPtElectron_convVtxRadius_) { b_LowPtElectron_convVtxRadius_->SetAddress(&LowPtElectron_convVtxRadius_); }
    b_LowPtElectron_convWP_ = tree->GetBranch("LowPtElectron_convWP");
    if (b_LowPtElectron_convWP_) { b_LowPtElectron_convWP_->SetAddress(&LowPtElectron_convWP_); }
    b_LowPtElectron_deltaEtaSC_ = tree->GetBranch("LowPtElectron_deltaEtaSC");
    if (b_LowPtElectron_deltaEtaSC_) { b_LowPtElectron_deltaEtaSC_->SetAddress(&LowPtElectron_deltaEtaSC_); }
    b_LowPtElectron_dxy_ = tree->GetBranch("LowPtElectron_dxy");
    if (b_LowPtElectron_dxy_) { b_LowPtElectron_dxy_->SetAddress(&LowPtElectron_dxy_); }
    b_LowPtElectron_dxyErr_ = tree->GetBranch("LowPtElectron_dxyErr");
    if (b_LowPtElectron_dxyErr_) { b_LowPtElectron_dxyErr_->SetAddress(&LowPtElectron_dxyErr_); }
    b_LowPtElectron_dz_ = tree->GetBranch("LowPtElectron_dz");
    if (b_LowPtElectron_dz_) { b_LowPtElectron_dz_->SetAddress(&LowPtElectron_dz_); }
    b_LowPtElectron_dzErr_ = tree->GetBranch("LowPtElectron_dzErr");
    if (b_LowPtElectron_dzErr_) { b_LowPtElectron_dzErr_->SetAddress(&LowPtElectron_dzErr_); }
    b_LowPtElectron_eInvMinusPInv_ = tree->GetBranch("LowPtElectron_eInvMinusPInv");
    if (b_LowPtElectron_eInvMinusPInv_) { b_LowPtElectron_eInvMinusPInv_->SetAddress(&LowPtElectron_eInvMinusPInv_); }
    b_LowPtElectron_electronIdx_ = tree->GetBranch("LowPtElectron_electronIdx");
    if (b_LowPtElectron_electronIdx_) { b_LowPtElectron_electronIdx_->SetAddress(&LowPtElectron_electronIdx_); }
    b_LowPtElectron_embeddedID_ = tree->GetBranch("LowPtElectron_embeddedID");
    if (b_LowPtElectron_embeddedID_) { b_LowPtElectron_embeddedID_->SetAddress(&LowPtElectron_embeddedID_); }
    b_LowPtElectron_energyErr_ = tree->GetBranch("LowPtElectron_energyErr");
    if (b_LowPtElectron_energyErr_) { b_LowPtElectron_energyErr_->SetAddress(&LowPtElectron_energyErr_); }
    b_LowPtElectron_eta_ = tree->GetBranch("LowPtElectron_eta");
    if (b_LowPtElectron_eta_) { b_LowPtElectron_eta_->SetAddress(&LowPtElectron_eta_); }
    b_LowPtElectron_genPartFlav_ = tree->GetBranch("LowPtElectron_genPartFlav");
    if (b_LowPtElectron_genPartFlav_) { b_LowPtElectron_genPartFlav_->SetAddress(&LowPtElectron_genPartFlav_); }
    b_LowPtElectron_genPartIdx_ = tree->GetBranch("LowPtElectron_genPartIdx");
    if (b_LowPtElectron_genPartIdx_) { b_LowPtElectron_genPartIdx_->SetAddress(&LowPtElectron_genPartIdx_); }
    b_LowPtElectron_hoe_ = tree->GetBranch("LowPtElectron_hoe");
    if (b_LowPtElectron_hoe_) { b_LowPtElectron_hoe_->SetAddress(&LowPtElectron_hoe_); }
    b_LowPtElectron_lostHits_ = tree->GetBranch("LowPtElectron_lostHits");
    if (b_LowPtElectron_lostHits_) { b_LowPtElectron_lostHits_->SetAddress(&LowPtElectron_lostHits_); }
    b_LowPtElectron_mass_ = tree->GetBranch("LowPtElectron_mass");
    if (b_LowPtElectron_mass_) { b_LowPtElectron_mass_->SetAddress(&LowPtElectron_mass_); }
    b_LowPtElectron_miniPFRelIso_all_ = tree->GetBranch("LowPtElectron_miniPFRelIso_all");
    if (b_LowPtElectron_miniPFRelIso_all_) { b_LowPtElectron_miniPFRelIso_all_->SetAddress(&LowPtElectron_miniPFRelIso_all_); }
    b_LowPtElectron_miniPFRelIso_chg_ = tree->GetBranch("LowPtElectron_miniPFRelIso_chg");
    if (b_LowPtElectron_miniPFRelIso_chg_) { b_LowPtElectron_miniPFRelIso_chg_->SetAddress(&LowPtElectron_miniPFRelIso_chg_); }
    b_LowPtElectron_pdgId_ = tree->GetBranch("LowPtElectron_pdgId");
    if (b_LowPtElectron_pdgId_) { b_LowPtElectron_pdgId_->SetAddress(&LowPtElectron_pdgId_); }
    b_LowPtElectron_phi_ = tree->GetBranch("LowPtElectron_phi");
    if (b_LowPtElectron_phi_) { b_LowPtElectron_phi_->SetAddress(&LowPtElectron_phi_); }
    b_LowPtElectron_photonIdx_ = tree->GetBranch("LowPtElectron_photonIdx");
    if (b_LowPtElectron_photonIdx_) { b_LowPtElectron_photonIdx_->SetAddress(&LowPtElectron_photonIdx_); }
    b_LowPtElectron_pt_ = tree->GetBranch("LowPtElectron_pt");
    if (b_LowPtElectron_pt_) { b_LowPtElectron_pt_->SetAddress(&LowPtElectron_pt_); }
    b_LowPtElectron_ptbiased_ = tree->GetBranch("LowPtElectron_ptbiased");
    if (b_LowPtElectron_ptbiased_) { b_LowPtElectron_ptbiased_->SetAddress(&LowPtElectron_ptbiased_); }
    b_LowPtElectron_r9_ = tree->GetBranch("LowPtElectron_r9");
    if (b_LowPtElectron_r9_) { b_LowPtElectron_r9_->SetAddress(&LowPtElectron_r9_); }
    b_LowPtElectron_scEtOverPt_ = tree->GetBranch("LowPtElectron_scEtOverPt");
    if (b_LowPtElectron_scEtOverPt_) { b_LowPtElectron_scEtOverPt_->SetAddress(&LowPtElectron_scEtOverPt_); }
    b_LowPtElectron_sieie_ = tree->GetBranch("LowPtElectron_sieie");
    if (b_LowPtElectron_sieie_) { b_LowPtElectron_sieie_->SetAddress(&LowPtElectron_sieie_); }
    b_LowPtElectron_unbiased_ = tree->GetBranch("LowPtElectron_unbiased");
    if (b_LowPtElectron_unbiased_) { b_LowPtElectron_unbiased_->SetAddress(&LowPtElectron_unbiased_); }
    b_MET_MetUnclustEnUpDeltaX_ = tree->GetBranch("MET_MetUnclustEnUpDeltaX");
    if (b_MET_MetUnclustEnUpDeltaX_) { b_MET_MetUnclustEnUpDeltaX_->SetAddress(&MET_MetUnclustEnUpDeltaX_); }
    b_MET_MetUnclustEnUpDeltaY_ = tree->GetBranch("MET_MetUnclustEnUpDeltaY");
    if (b_MET_MetUnclustEnUpDeltaY_) { b_MET_MetUnclustEnUpDeltaY_->SetAddress(&MET_MetUnclustEnUpDeltaY_); }
    b_MET_T1Smear_phi_ = tree->GetBranch("MET_T1Smear_phi");
    if (b_MET_T1Smear_phi_) { b_MET_T1Smear_phi_->SetAddress(&MET_T1Smear_phi_); }
    b_MET_T1Smear_phi_jerDown_ = tree->GetBranch("MET_T1Smear_phi_jerDown");
    if (b_MET_T1Smear_phi_jerDown_) { b_MET_T1Smear_phi_jerDown_->SetAddress(&MET_T1Smear_phi_jerDown_); }
    b_MET_T1Smear_phi_jerUp_ = tree->GetBranch("MET_T1Smear_phi_jerUp");
    if (b_MET_T1Smear_phi_jerUp_) { b_MET_T1Smear_phi_jerUp_->SetAddress(&MET_T1Smear_phi_jerUp_); }
    b_MET_T1Smear_phi_jesHEMIssueDown_ = tree->GetBranch("MET_T1Smear_phi_jesHEMIssueDown");
    if (b_MET_T1Smear_phi_jesHEMIssueDown_) { b_MET_T1Smear_phi_jesHEMIssueDown_->SetAddress(&MET_T1Smear_phi_jesHEMIssueDown_); }
    b_MET_T1Smear_phi_jesHEMIssueUp_ = tree->GetBranch("MET_T1Smear_phi_jesHEMIssueUp");
    if (b_MET_T1Smear_phi_jesHEMIssueUp_) { b_MET_T1Smear_phi_jesHEMIssueUp_->SetAddress(&MET_T1Smear_phi_jesHEMIssueUp_); }
    b_MET_T1Smear_phi_jesTotalDown_ = tree->GetBranch("MET_T1Smear_phi_jesTotalDown");
    if (b_MET_T1Smear_phi_jesTotalDown_) { b_MET_T1Smear_phi_jesTotalDown_->SetAddress(&MET_T1Smear_phi_jesTotalDown_); }
    b_MET_T1Smear_phi_jesTotalUp_ = tree->GetBranch("MET_T1Smear_phi_jesTotalUp");
    if (b_MET_T1Smear_phi_jesTotalUp_) { b_MET_T1Smear_phi_jesTotalUp_->SetAddress(&MET_T1Smear_phi_jesTotalUp_); }
    b_MET_T1Smear_phi_unclustEnDown_ = tree->GetBranch("MET_T1Smear_phi_unclustEnDown");
    if (b_MET_T1Smear_phi_unclustEnDown_) { b_MET_T1Smear_phi_unclustEnDown_->SetAddress(&MET_T1Smear_phi_unclustEnDown_); }
    b_MET_T1Smear_phi_unclustEnUp_ = tree->GetBranch("MET_T1Smear_phi_unclustEnUp");
    if (b_MET_T1Smear_phi_unclustEnUp_) { b_MET_T1Smear_phi_unclustEnUp_->SetAddress(&MET_T1Smear_phi_unclustEnUp_); }
    b_MET_T1Smear_pt_ = tree->GetBranch("MET_T1Smear_pt");
    if (b_MET_T1Smear_pt_) { b_MET_T1Smear_pt_->SetAddress(&MET_T1Smear_pt_); }
    b_MET_T1Smear_pt_jerDown_ = tree->GetBranch("MET_T1Smear_pt_jerDown");
    if (b_MET_T1Smear_pt_jerDown_) { b_MET_T1Smear_pt_jerDown_->SetAddress(&MET_T1Smear_pt_jerDown_); }
    b_MET_T1Smear_pt_jerUp_ = tree->GetBranch("MET_T1Smear_pt_jerUp");
    if (b_MET_T1Smear_pt_jerUp_) { b_MET_T1Smear_pt_jerUp_->SetAddress(&MET_T1Smear_pt_jerUp_); }
    b_MET_T1Smear_pt_jesHEMIssueDown_ = tree->GetBranch("MET_T1Smear_pt_jesHEMIssueDown");
    if (b_MET_T1Smear_pt_jesHEMIssueDown_) { b_MET_T1Smear_pt_jesHEMIssueDown_->SetAddress(&MET_T1Smear_pt_jesHEMIssueDown_); }
    b_MET_T1Smear_pt_jesHEMIssueUp_ = tree->GetBranch("MET_T1Smear_pt_jesHEMIssueUp");
    if (b_MET_T1Smear_pt_jesHEMIssueUp_) { b_MET_T1Smear_pt_jesHEMIssueUp_->SetAddress(&MET_T1Smear_pt_jesHEMIssueUp_); }
    b_MET_T1Smear_pt_jesTotalDown_ = tree->GetBranch("MET_T1Smear_pt_jesTotalDown");
    if (b_MET_T1Smear_pt_jesTotalDown_) { b_MET_T1Smear_pt_jesTotalDown_->SetAddress(&MET_T1Smear_pt_jesTotalDown_); }
    b_MET_T1Smear_pt_jesTotalUp_ = tree->GetBranch("MET_T1Smear_pt_jesTotalUp");
    if (b_MET_T1Smear_pt_jesTotalUp_) { b_MET_T1Smear_pt_jesTotalUp_->SetAddress(&MET_T1Smear_pt_jesTotalUp_); }
    b_MET_T1Smear_pt_unclustEnDown_ = tree->GetBranch("MET_T1Smear_pt_unclustEnDown");
    if (b_MET_T1Smear_pt_unclustEnDown_) { b_MET_T1Smear_pt_unclustEnDown_->SetAddress(&MET_T1Smear_pt_unclustEnDown_); }
    b_MET_T1Smear_pt_unclustEnUp_ = tree->GetBranch("MET_T1Smear_pt_unclustEnUp");
    if (b_MET_T1Smear_pt_unclustEnUp_) { b_MET_T1Smear_pt_unclustEnUp_->SetAddress(&MET_T1Smear_pt_unclustEnUp_); }
    b_MET_T1_phi_ = tree->GetBranch("MET_T1_phi");
    if (b_MET_T1_phi_) { b_MET_T1_phi_->SetAddress(&MET_T1_phi_); }
    b_MET_T1_phi_jerDown_ = tree->GetBranch("MET_T1_phi_jerDown");
    if (b_MET_T1_phi_jerDown_) { b_MET_T1_phi_jerDown_->SetAddress(&MET_T1_phi_jerDown_); }
    b_MET_T1_phi_jerUp_ = tree->GetBranch("MET_T1_phi_jerUp");
    if (b_MET_T1_phi_jerUp_) { b_MET_T1_phi_jerUp_->SetAddress(&MET_T1_phi_jerUp_); }
    b_MET_T1_phi_jesHEMIssueDown_ = tree->GetBranch("MET_T1_phi_jesHEMIssueDown");
    if (b_MET_T1_phi_jesHEMIssueDown_) { b_MET_T1_phi_jesHEMIssueDown_->SetAddress(&MET_T1_phi_jesHEMIssueDown_); }
    b_MET_T1_phi_jesHEMIssueUp_ = tree->GetBranch("MET_T1_phi_jesHEMIssueUp");
    if (b_MET_T1_phi_jesHEMIssueUp_) { b_MET_T1_phi_jesHEMIssueUp_->SetAddress(&MET_T1_phi_jesHEMIssueUp_); }
    b_MET_T1_phi_jesTotalDown_ = tree->GetBranch("MET_T1_phi_jesTotalDown");
    if (b_MET_T1_phi_jesTotalDown_) { b_MET_T1_phi_jesTotalDown_->SetAddress(&MET_T1_phi_jesTotalDown_); }
    b_MET_T1_phi_jesTotalUp_ = tree->GetBranch("MET_T1_phi_jesTotalUp");
    if (b_MET_T1_phi_jesTotalUp_) { b_MET_T1_phi_jesTotalUp_->SetAddress(&MET_T1_phi_jesTotalUp_); }
    b_MET_T1_phi_unclustEnDown_ = tree->GetBranch("MET_T1_phi_unclustEnDown");
    if (b_MET_T1_phi_unclustEnDown_) { b_MET_T1_phi_unclustEnDown_->SetAddress(&MET_T1_phi_unclustEnDown_); }
    b_MET_T1_phi_unclustEnUp_ = tree->GetBranch("MET_T1_phi_unclustEnUp");
    if (b_MET_T1_phi_unclustEnUp_) { b_MET_T1_phi_unclustEnUp_->SetAddress(&MET_T1_phi_unclustEnUp_); }
    b_MET_T1_pt_ = tree->GetBranch("MET_T1_pt");
    if (b_MET_T1_pt_) { b_MET_T1_pt_->SetAddress(&MET_T1_pt_); }
    b_MET_T1_pt_jerDown_ = tree->GetBranch("MET_T1_pt_jerDown");
    if (b_MET_T1_pt_jerDown_) { b_MET_T1_pt_jerDown_->SetAddress(&MET_T1_pt_jerDown_); }
    b_MET_T1_pt_jerUp_ = tree->GetBranch("MET_T1_pt_jerUp");
    if (b_MET_T1_pt_jerUp_) { b_MET_T1_pt_jerUp_->SetAddress(&MET_T1_pt_jerUp_); }
    b_MET_T1_pt_jesHEMIssueDown_ = tree->GetBranch("MET_T1_pt_jesHEMIssueDown");
    if (b_MET_T1_pt_jesHEMIssueDown_) { b_MET_T1_pt_jesHEMIssueDown_->SetAddress(&MET_T1_pt_jesHEMIssueDown_); }
    b_MET_T1_pt_jesHEMIssueUp_ = tree->GetBranch("MET_T1_pt_jesHEMIssueUp");
    if (b_MET_T1_pt_jesHEMIssueUp_) { b_MET_T1_pt_jesHEMIssueUp_->SetAddress(&MET_T1_pt_jesHEMIssueUp_); }
    b_MET_T1_pt_jesTotalDown_ = tree->GetBranch("MET_T1_pt_jesTotalDown");
    if (b_MET_T1_pt_jesTotalDown_) { b_MET_T1_pt_jesTotalDown_->SetAddress(&MET_T1_pt_jesTotalDown_); }
    b_MET_T1_pt_jesTotalUp_ = tree->GetBranch("MET_T1_pt_jesTotalUp");
    if (b_MET_T1_pt_jesTotalUp_) { b_MET_T1_pt_jesTotalUp_->SetAddress(&MET_T1_pt_jesTotalUp_); }
    b_MET_T1_pt_unclustEnDown_ = tree->GetBranch("MET_T1_pt_unclustEnDown");
    if (b_MET_T1_pt_unclustEnDown_) { b_MET_T1_pt_unclustEnDown_->SetAddress(&MET_T1_pt_unclustEnDown_); }
    b_MET_T1_pt_unclustEnUp_ = tree->GetBranch("MET_T1_pt_unclustEnUp");
    if (b_MET_T1_pt_unclustEnUp_) { b_MET_T1_pt_unclustEnUp_->SetAddress(&MET_T1_pt_unclustEnUp_); }
    b_MET_covXX_ = tree->GetBranch("MET_covXX");
    if (b_MET_covXX_) { b_MET_covXX_->SetAddress(&MET_covXX_); }
    b_MET_covXY_ = tree->GetBranch("MET_covXY");
    if (b_MET_covXY_) { b_MET_covXY_->SetAddress(&MET_covXY_); }
    b_MET_covYY_ = tree->GetBranch("MET_covYY");
    if (b_MET_covYY_) { b_MET_covYY_->SetAddress(&MET_covYY_); }
    b_MET_fiducialGenPhi_ = tree->GetBranch("MET_fiducialGenPhi");
    if (b_MET_fiducialGenPhi_) { b_MET_fiducialGenPhi_->SetAddress(&MET_fiducialGenPhi_); }
    b_MET_fiducialGenPt_ = tree->GetBranch("MET_fiducialGenPt");
    if (b_MET_fiducialGenPt_) { b_MET_fiducialGenPt_->SetAddress(&MET_fiducialGenPt_); }
    b_MET_phi_ = tree->GetBranch("MET_phi");
    if (b_MET_phi_) { b_MET_phi_->SetAddress(&MET_phi_); }
    b_MET_pt_ = tree->GetBranch("MET_pt");
    if (b_MET_pt_) { b_MET_pt_->SetAddress(&MET_pt_); }
    b_MET_significance_ = tree->GetBranch("MET_significance");
    if (b_MET_significance_) { b_MET_significance_->SetAddress(&MET_significance_); }
    b_MET_sumEt_ = tree->GetBranch("MET_sumEt");
    if (b_MET_sumEt_) { b_MET_sumEt_->SetAddress(&MET_sumEt_); }
    b_MET_sumPtUnclustered_ = tree->GetBranch("MET_sumPtUnclustered");
    if (b_MET_sumPtUnclustered_) { b_MET_sumPtUnclustered_->SetAddress(&MET_sumPtUnclustered_); }
    b_Muon_CutBased_HighPtID_SF_ = tree->GetBranch("Muon_CutBased_HighPtID_SF");
    if (b_Muon_CutBased_HighPtID_SF_) { b_Muon_CutBased_HighPtID_SF_->SetAddress(&Muon_CutBased_HighPtID_SF_); }
    b_Muon_CutBased_HighPtID_SFerr_ = tree->GetBranch("Muon_CutBased_HighPtID_SFerr");
    if (b_Muon_CutBased_HighPtID_SFerr_) { b_Muon_CutBased_HighPtID_SFerr_->SetAddress(&Muon_CutBased_HighPtID_SFerr_); }
    b_Muon_CutBased_LooseID_SF_ = tree->GetBranch("Muon_CutBased_LooseID_SF");
    if (b_Muon_CutBased_LooseID_SF_) { b_Muon_CutBased_LooseID_SF_->SetAddress(&Muon_CutBased_LooseID_SF_); }
    b_Muon_CutBased_LooseID_SFerr_ = tree->GetBranch("Muon_CutBased_LooseID_SFerr");
    if (b_Muon_CutBased_LooseID_SFerr_) { b_Muon_CutBased_LooseID_SFerr_->SetAddress(&Muon_CutBased_LooseID_SFerr_); }
    b_Muon_CutBased_MediumID_SF_ = tree->GetBranch("Muon_CutBased_MediumID_SF");
    if (b_Muon_CutBased_MediumID_SF_) { b_Muon_CutBased_MediumID_SF_->SetAddress(&Muon_CutBased_MediumID_SF_); }
    b_Muon_CutBased_MediumID_SFerr_ = tree->GetBranch("Muon_CutBased_MediumID_SFerr");
    if (b_Muon_CutBased_MediumID_SFerr_) { b_Muon_CutBased_MediumID_SFerr_->SetAddress(&Muon_CutBased_MediumID_SFerr_); }
    b_Muon_CutBased_MediumPromptID_SF_ = tree->GetBranch("Muon_CutBased_MediumPromptID_SF");
    if (b_Muon_CutBased_MediumPromptID_SF_) { b_Muon_CutBased_MediumPromptID_SF_->SetAddress(&Muon_CutBased_MediumPromptID_SF_); }
    b_Muon_CutBased_MediumPromptID_SFerr_ = tree->GetBranch("Muon_CutBased_MediumPromptID_SFerr");
    if (b_Muon_CutBased_MediumPromptID_SFerr_) { b_Muon_CutBased_MediumPromptID_SFerr_->SetAddress(&Muon_CutBased_MediumPromptID_SFerr_); }
    b_Muon_CutBased_SoftID_SF_ = tree->GetBranch("Muon_CutBased_SoftID_SF");
    if (b_Muon_CutBased_SoftID_SF_) { b_Muon_CutBased_SoftID_SF_->SetAddress(&Muon_CutBased_SoftID_SF_); }
    b_Muon_CutBased_SoftID_SFerr_ = tree->GetBranch("Muon_CutBased_SoftID_SFerr");
    if (b_Muon_CutBased_SoftID_SFerr_) { b_Muon_CutBased_SoftID_SFerr_->SetAddress(&Muon_CutBased_SoftID_SFerr_); }
    b_Muon_CutBased_TightID_SF_ = tree->GetBranch("Muon_CutBased_TightID_SF");
    if (b_Muon_CutBased_TightID_SF_) { b_Muon_CutBased_TightID_SF_->SetAddress(&Muon_CutBased_TightID_SF_); }
    b_Muon_CutBased_TightID_SFerr_ = tree->GetBranch("Muon_CutBased_TightID_SFerr");
    if (b_Muon_CutBased_TightID_SFerr_) { b_Muon_CutBased_TightID_SFerr_->SetAddress(&Muon_CutBased_TightID_SFerr_); }
    b_Muon_CutBased_TrkHighPtID_SF_ = tree->GetBranch("Muon_CutBased_TrkHighPtID_SF");
    if (b_Muon_CutBased_TrkHighPtID_SF_) { b_Muon_CutBased_TrkHighPtID_SF_->SetAddress(&Muon_CutBased_TrkHighPtID_SF_); }
    b_Muon_CutBased_TrkHighPtID_SFerr_ = tree->GetBranch("Muon_CutBased_TrkHighPtID_SFerr");
    if (b_Muon_CutBased_TrkHighPtID_SFerr_) { b_Muon_CutBased_TrkHighPtID_SFerr_->SetAddress(&Muon_CutBased_TrkHighPtID_SFerr_); }
    b_Muon_LooseRelIso_LooseID_SF_ = tree->GetBranch("Muon_LooseRelIso_LooseID_SF");
    if (b_Muon_LooseRelIso_LooseID_SF_) { b_Muon_LooseRelIso_LooseID_SF_->SetAddress(&Muon_LooseRelIso_LooseID_SF_); }
    b_Muon_LooseRelIso_LooseID_SFerr_ = tree->GetBranch("Muon_LooseRelIso_LooseID_SFerr");
    if (b_Muon_LooseRelIso_LooseID_SFerr_) { b_Muon_LooseRelIso_LooseID_SFerr_->SetAddress(&Muon_LooseRelIso_LooseID_SFerr_); }
    b_Muon_LooseRelIso_MediumID_SF_ = tree->GetBranch("Muon_LooseRelIso_MediumID_SF");
    if (b_Muon_LooseRelIso_MediumID_SF_) { b_Muon_LooseRelIso_MediumID_SF_->SetAddress(&Muon_LooseRelIso_MediumID_SF_); }
    b_Muon_LooseRelIso_MediumID_SFerr_ = tree->GetBranch("Muon_LooseRelIso_MediumID_SFerr");
    if (b_Muon_LooseRelIso_MediumID_SFerr_) { b_Muon_LooseRelIso_MediumID_SFerr_->SetAddress(&Muon_LooseRelIso_MediumID_SFerr_); }
    b_Muon_LooseRelIso_MediumPromptID_SF_ = tree->GetBranch("Muon_LooseRelIso_MediumPromptID_SF");
    if (b_Muon_LooseRelIso_MediumPromptID_SF_) { b_Muon_LooseRelIso_MediumPromptID_SF_->SetAddress(&Muon_LooseRelIso_MediumPromptID_SF_); }
    b_Muon_LooseRelIso_MediumPromptID_SFerr_ = tree->GetBranch("Muon_LooseRelIso_MediumPromptID_SFerr");
    if (b_Muon_LooseRelIso_MediumPromptID_SFerr_) { b_Muon_LooseRelIso_MediumPromptID_SFerr_->SetAddress(&Muon_LooseRelIso_MediumPromptID_SFerr_); }
    b_Muon_LooseRelIso_TightIDandIPCut_SF_ = tree->GetBranch("Muon_LooseRelIso_TightIDandIPCut_SF");
    if (b_Muon_LooseRelIso_TightIDandIPCut_SF_) { b_Muon_LooseRelIso_TightIDandIPCut_SF_->SetAddress(&Muon_LooseRelIso_TightIDandIPCut_SF_); }
    b_Muon_LooseRelIso_TightIDandIPCut_SFerr_ = tree->GetBranch("Muon_LooseRelIso_TightIDandIPCut_SFerr");
    if (b_Muon_LooseRelIso_TightIDandIPCut_SFerr_) { b_Muon_LooseRelIso_TightIDandIPCut_SFerr_->SetAddress(&Muon_LooseRelIso_TightIDandIPCut_SFerr_); }
    b_Muon_LooseRelTkIso_HighPtIDandIPCut_SF_ = tree->GetBranch("Muon_LooseRelTkIso_HighPtIDandIPCut_SF");
    if (b_Muon_LooseRelTkIso_HighPtIDandIPCut_SF_) { b_Muon_LooseRelTkIso_HighPtIDandIPCut_SF_->SetAddress(&Muon_LooseRelTkIso_HighPtIDandIPCut_SF_); }
    b_Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_ = tree->GetBranch("Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr");
    if (b_Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_) { b_Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_->SetAddress(&Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_); }
    b_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_ = tree->GetBranch("Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF");
    if (b_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_) { b_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_->SetAddress(&Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_); }
    b_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_ = tree->GetBranch("Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr");
    if (b_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_) { b_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_->SetAddress(&Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_); }
    b_Muon_TightRelIso_MediumID_SF_ = tree->GetBranch("Muon_TightRelIso_MediumID_SF");
    if (b_Muon_TightRelIso_MediumID_SF_) { b_Muon_TightRelIso_MediumID_SF_->SetAddress(&Muon_TightRelIso_MediumID_SF_); }
    b_Muon_TightRelIso_MediumID_SFerr_ = tree->GetBranch("Muon_TightRelIso_MediumID_SFerr");
    if (b_Muon_TightRelIso_MediumID_SFerr_) { b_Muon_TightRelIso_MediumID_SFerr_->SetAddress(&Muon_TightRelIso_MediumID_SFerr_); }
    b_Muon_TightRelIso_MediumPromptID_SF_ = tree->GetBranch("Muon_TightRelIso_MediumPromptID_SF");
    if (b_Muon_TightRelIso_MediumPromptID_SF_) { b_Muon_TightRelIso_MediumPromptID_SF_->SetAddress(&Muon_TightRelIso_MediumPromptID_SF_); }
    b_Muon_TightRelIso_MediumPromptID_SFerr_ = tree->GetBranch("Muon_TightRelIso_MediumPromptID_SFerr");
    if (b_Muon_TightRelIso_MediumPromptID_SFerr_) { b_Muon_TightRelIso_MediumPromptID_SFerr_->SetAddress(&Muon_TightRelIso_MediumPromptID_SFerr_); }
    b_Muon_TightRelIso_TightIDandIPCut_SF_ = tree->GetBranch("Muon_TightRelIso_TightIDandIPCut_SF");
    if (b_Muon_TightRelIso_TightIDandIPCut_SF_) { b_Muon_TightRelIso_TightIDandIPCut_SF_->SetAddress(&Muon_TightRelIso_TightIDandIPCut_SF_); }
    b_Muon_TightRelIso_TightIDandIPCut_SFerr_ = tree->GetBranch("Muon_TightRelIso_TightIDandIPCut_SFerr");
    if (b_Muon_TightRelIso_TightIDandIPCut_SFerr_) { b_Muon_TightRelIso_TightIDandIPCut_SFerr_->SetAddress(&Muon_TightRelIso_TightIDandIPCut_SFerr_); }
    b_Muon_TightRelTkIso_HighPtIDandIPCut_SF_ = tree->GetBranch("Muon_TightRelTkIso_HighPtIDandIPCut_SF");
    if (b_Muon_TightRelTkIso_HighPtIDandIPCut_SF_) { b_Muon_TightRelTkIso_HighPtIDandIPCut_SF_->SetAddress(&Muon_TightRelTkIso_HighPtIDandIPCut_SF_); }
    b_Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_ = tree->GetBranch("Muon_TightRelTkIso_HighPtIDandIPCut_SFerr");
    if (b_Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_) { b_Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_->SetAddress(&Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_); }
    b_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_ = tree->GetBranch("Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF");
    if (b_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_) { b_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_->SetAddress(&Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_); }
    b_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_ = tree->GetBranch("Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr");
    if (b_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_) { b_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_->SetAddress(&Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_); }
    b_Muon_charge_ = tree->GetBranch("Muon_charge");
    if (b_Muon_charge_) { b_Muon_charge_->SetAddress(&Muon_charge_); }
    b_Muon_cleanmask_ = tree->GetBranch("Muon_cleanmask");
    if (b_Muon_cleanmask_) { b_Muon_cleanmask_->SetAddress(&Muon_cleanmask_); }
    b_Muon_correctedDown_pt_ = tree->GetBranch("Muon_correctedDown_pt");
    if (b_Muon_correctedDown_pt_) { b_Muon_correctedDown_pt_->SetAddress(&Muon_correctedDown_pt_); }
    b_Muon_correctedUp_pt_ = tree->GetBranch("Muon_correctedUp_pt");
    if (b_Muon_correctedUp_pt_) { b_Muon_correctedUp_pt_->SetAddress(&Muon_correctedUp_pt_); }
    b_Muon_corrected_pt_ = tree->GetBranch("Muon_corrected_pt");
    if (b_Muon_corrected_pt_) { b_Muon_corrected_pt_->SetAddress(&Muon_corrected_pt_); }
    b_Muon_dxy_ = tree->GetBranch("Muon_dxy");
    if (b_Muon_dxy_) { b_Muon_dxy_->SetAddress(&Muon_dxy_); }
    b_Muon_dxyErr_ = tree->GetBranch("Muon_dxyErr");
    if (b_Muon_dxyErr_) { b_Muon_dxyErr_->SetAddress(&Muon_dxyErr_); }
    b_Muon_dxybs_ = tree->GetBranch("Muon_dxybs");
    if (b_Muon_dxybs_) { b_Muon_dxybs_->SetAddress(&Muon_dxybs_); }
    b_Muon_dz_ = tree->GetBranch("Muon_dz");
    if (b_Muon_dz_) { b_Muon_dz_->SetAddress(&Muon_dz_); }
    b_Muon_dzErr_ = tree->GetBranch("Muon_dzErr");
    if (b_Muon_dzErr_) { b_Muon_dzErr_->SetAddress(&Muon_dzErr_); }
    b_Muon_eta_ = tree->GetBranch("Muon_eta");
    if (b_Muon_eta_) { b_Muon_eta_->SetAddress(&Muon_eta_); }
    b_Muon_fsrPhotonIdx_ = tree->GetBranch("Muon_fsrPhotonIdx");
    if (b_Muon_fsrPhotonIdx_) { b_Muon_fsrPhotonIdx_->SetAddress(&Muon_fsrPhotonIdx_); }
    b_Muon_genPartFlav_ = tree->GetBranch("Muon_genPartFlav");
    if (b_Muon_genPartFlav_) { b_Muon_genPartFlav_->SetAddress(&Muon_genPartFlav_); }
    b_Muon_genPartIdx_ = tree->GetBranch("Muon_genPartIdx");
    if (b_Muon_genPartIdx_) { b_Muon_genPartIdx_->SetAddress(&Muon_genPartIdx_); }
    b_Muon_highPtId_ = tree->GetBranch("Muon_highPtId");
    if (b_Muon_highPtId_) { b_Muon_highPtId_->SetAddress(&Muon_highPtId_); }
    b_Muon_highPurity_ = tree->GetBranch("Muon_highPurity");
    if (b_Muon_highPurity_) { b_Muon_highPurity_->SetAddress(&Muon_highPurity_); }
    b_Muon_inTimeMuon_ = tree->GetBranch("Muon_inTimeMuon");
    if (b_Muon_inTimeMuon_) { b_Muon_inTimeMuon_->SetAddress(&Muon_inTimeMuon_); }
    b_Muon_ip3d_ = tree->GetBranch("Muon_ip3d");
    if (b_Muon_ip3d_) { b_Muon_ip3d_->SetAddress(&Muon_ip3d_); }
    b_Muon_isGlobal_ = tree->GetBranch("Muon_isGlobal");
    if (b_Muon_isGlobal_) { b_Muon_isGlobal_->SetAddress(&Muon_isGlobal_); }
    b_Muon_isPFcand_ = tree->GetBranch("Muon_isPFcand");
    if (b_Muon_isPFcand_) { b_Muon_isPFcand_->SetAddress(&Muon_isPFcand_); }
    b_Muon_isStandalone_ = tree->GetBranch("Muon_isStandalone");
    if (b_Muon_isStandalone_) { b_Muon_isStandalone_->SetAddress(&Muon_isStandalone_); }
    b_Muon_isTracker_ = tree->GetBranch("Muon_isTracker");
    if (b_Muon_isTracker_) { b_Muon_isTracker_->SetAddress(&Muon_isTracker_); }
    b_Muon_jetIdx_ = tree->GetBranch("Muon_jetIdx");
    if (b_Muon_jetIdx_) { b_Muon_jetIdx_->SetAddress(&Muon_jetIdx_); }
    b_Muon_jetNDauCharged_ = tree->GetBranch("Muon_jetNDauCharged");
    if (b_Muon_jetNDauCharged_) { b_Muon_jetNDauCharged_->SetAddress(&Muon_jetNDauCharged_); }
    b_Muon_jetPtRelv2_ = tree->GetBranch("Muon_jetPtRelv2");
    if (b_Muon_jetPtRelv2_) { b_Muon_jetPtRelv2_->SetAddress(&Muon_jetPtRelv2_); }
    b_Muon_jetRelIso_ = tree->GetBranch("Muon_jetRelIso");
    if (b_Muon_jetRelIso_) { b_Muon_jetRelIso_->SetAddress(&Muon_jetRelIso_); }
    b_Muon_looseId_ = tree->GetBranch("Muon_looseId");
    if (b_Muon_looseId_) { b_Muon_looseId_->SetAddress(&Muon_looseId_); }
    b_Muon_mass_ = tree->GetBranch("Muon_mass");
    if (b_Muon_mass_) { b_Muon_mass_->SetAddress(&Muon_mass_); }
    b_Muon_mediumId_ = tree->GetBranch("Muon_mediumId");
    if (b_Muon_mediumId_) { b_Muon_mediumId_->SetAddress(&Muon_mediumId_); }
    b_Muon_mediumPromptId_ = tree->GetBranch("Muon_mediumPromptId");
    if (b_Muon_mediumPromptId_) { b_Muon_mediumPromptId_->SetAddress(&Muon_mediumPromptId_); }
    b_Muon_miniIsoId_ = tree->GetBranch("Muon_miniIsoId");
    if (b_Muon_miniIsoId_) { b_Muon_miniIsoId_->SetAddress(&Muon_miniIsoId_); }
    b_Muon_miniPFRelIso_all_ = tree->GetBranch("Muon_miniPFRelIso_all");
    if (b_Muon_miniPFRelIso_all_) { b_Muon_miniPFRelIso_all_->SetAddress(&Muon_miniPFRelIso_all_); }
    b_Muon_miniPFRelIso_chg_ = tree->GetBranch("Muon_miniPFRelIso_chg");
    if (b_Muon_miniPFRelIso_chg_) { b_Muon_miniPFRelIso_chg_->SetAddress(&Muon_miniPFRelIso_chg_); }
    b_Muon_multiIsoId_ = tree->GetBranch("Muon_multiIsoId");
    if (b_Muon_multiIsoId_) { b_Muon_multiIsoId_->SetAddress(&Muon_multiIsoId_); }
    b_Muon_mvaId_ = tree->GetBranch("Muon_mvaId");
    if (b_Muon_mvaId_) { b_Muon_mvaId_->SetAddress(&Muon_mvaId_); }
    b_Muon_mvaLowPt_ = tree->GetBranch("Muon_mvaLowPt");
    if (b_Muon_mvaLowPt_) { b_Muon_mvaLowPt_->SetAddress(&Muon_mvaLowPt_); }
    b_Muon_mvaLowPtId_ = tree->GetBranch("Muon_mvaLowPtId");
    if (b_Muon_mvaLowPtId_) { b_Muon_mvaLowPtId_->SetAddress(&Muon_mvaLowPtId_); }
    b_Muon_mvaMuID_ = tree->GetBranch("Muon_mvaMuID");
    if (b_Muon_mvaMuID_) { b_Muon_mvaMuID_->SetAddress(&Muon_mvaMuID_); }
    b_Muon_mvaMuID_WP_ = tree->GetBranch("Muon_mvaMuID_WP");
    if (b_Muon_mvaMuID_WP_) { b_Muon_mvaMuID_WP_->SetAddress(&Muon_mvaMuID_WP_); }
    b_Muon_mvaTTH_ = tree->GetBranch("Muon_mvaTTH");
    if (b_Muon_mvaTTH_) { b_Muon_mvaTTH_->SetAddress(&Muon_mvaTTH_); }
    // NOTE: this is a custom branch; temporarily added for convenience
    b_Muon_mvaTTHUL_ = tree->GetBranch("Muon_mvaTTHUL");
    if (b_Muon_mvaTTHUL_) { b_Muon_mvaTTHUL_->SetAddress(&Muon_mvaTTHUL_); }
    //
    b_Muon_nStations_ = tree->GetBranch("Muon_nStations");
    if (b_Muon_nStations_) { b_Muon_nStations_->SetAddress(&Muon_nStations_); }
    b_Muon_nTrackerLayers_ = tree->GetBranch("Muon_nTrackerLayers");
    if (b_Muon_nTrackerLayers_) { b_Muon_nTrackerLayers_->SetAddress(&Muon_nTrackerLayers_); }
    b_Muon_pdgId_ = tree->GetBranch("Muon_pdgId");
    if (b_Muon_pdgId_) { b_Muon_pdgId_->SetAddress(&Muon_pdgId_); }
    b_Muon_pfIsoId_ = tree->GetBranch("Muon_pfIsoId");
    if (b_Muon_pfIsoId_) { b_Muon_pfIsoId_->SetAddress(&Muon_pfIsoId_); }
    b_Muon_pfRelIso03_all_ = tree->GetBranch("Muon_pfRelIso03_all");
    if (b_Muon_pfRelIso03_all_) { b_Muon_pfRelIso03_all_->SetAddress(&Muon_pfRelIso03_all_); }
    b_Muon_pfRelIso03_chg_ = tree->GetBranch("Muon_pfRelIso03_chg");
    if (b_Muon_pfRelIso03_chg_) { b_Muon_pfRelIso03_chg_->SetAddress(&Muon_pfRelIso03_chg_); }
    b_Muon_pfRelIso04_all_ = tree->GetBranch("Muon_pfRelIso04_all");
    if (b_Muon_pfRelIso04_all_) { b_Muon_pfRelIso04_all_->SetAddress(&Muon_pfRelIso04_all_); }
    b_Muon_phi_ = tree->GetBranch("Muon_phi");
    if (b_Muon_phi_) { b_Muon_phi_->SetAddress(&Muon_phi_); }
    b_Muon_pt_ = tree->GetBranch("Muon_pt");
    if (b_Muon_pt_) { b_Muon_pt_->SetAddress(&Muon_pt_); }
    b_Muon_ptErr_ = tree->GetBranch("Muon_ptErr");
    if (b_Muon_ptErr_) { b_Muon_ptErr_->SetAddress(&Muon_ptErr_); }
    b_Muon_puppiIsoId_ = tree->GetBranch("Muon_puppiIsoId");
    if (b_Muon_puppiIsoId_) { b_Muon_puppiIsoId_->SetAddress(&Muon_puppiIsoId_); }
    b_Muon_segmentComp_ = tree->GetBranch("Muon_segmentComp");
    if (b_Muon_segmentComp_) { b_Muon_segmentComp_->SetAddress(&Muon_segmentComp_); }
    b_Muon_sip3d_ = tree->GetBranch("Muon_sip3d");
    if (b_Muon_sip3d_) { b_Muon_sip3d_->SetAddress(&Muon_sip3d_); }
    b_Muon_softId_ = tree->GetBranch("Muon_softId");
    if (b_Muon_softId_) { b_Muon_softId_->SetAddress(&Muon_softId_); }
    b_Muon_softMva_ = tree->GetBranch("Muon_softMva");
    if (b_Muon_softMva_) { b_Muon_softMva_->SetAddress(&Muon_softMva_); }
    b_Muon_softMvaId_ = tree->GetBranch("Muon_softMvaId");
    if (b_Muon_softMvaId_) { b_Muon_softMvaId_->SetAddress(&Muon_softMvaId_); }
    b_Muon_svIdx_ = tree->GetBranch("Muon_svIdx");
    if (b_Muon_svIdx_) { b_Muon_svIdx_->SetAddress(&Muon_svIdx_); }
    b_Muon_tightCharge_ = tree->GetBranch("Muon_tightCharge");
    if (b_Muon_tightCharge_) { b_Muon_tightCharge_->SetAddress(&Muon_tightCharge_); }
    b_Muon_tightId_ = tree->GetBranch("Muon_tightId");
    if (b_Muon_tightId_) { b_Muon_tightId_->SetAddress(&Muon_tightId_); }
    b_Muon_tkIsoId_ = tree->GetBranch("Muon_tkIsoId");
    if (b_Muon_tkIsoId_) { b_Muon_tkIsoId_->SetAddress(&Muon_tkIsoId_); }
    b_Muon_tkRelIso_ = tree->GetBranch("Muon_tkRelIso");
    if (b_Muon_tkRelIso_) { b_Muon_tkRelIso_->SetAddress(&Muon_tkRelIso_); }
    b_Muon_triggerIdLoose_ = tree->GetBranch("Muon_triggerIdLoose");
    if (b_Muon_triggerIdLoose_) { b_Muon_triggerIdLoose_->SetAddress(&Muon_triggerIdLoose_); }
    b_Muon_tunepRelPt_ = tree->GetBranch("Muon_tunepRelPt");
    if (b_Muon_tunepRelPt_) { b_Muon_tunepRelPt_->SetAddress(&Muon_tunepRelPt_); }
    b_OtherPV_score_ = tree->GetBranch("OtherPV_score");
    if (b_OtherPV_score_) { b_OtherPV_score_->SetAddress(&OtherPV_score_); }
    b_OtherPV_z_ = tree->GetBranch("OtherPV_z");
    if (b_OtherPV_z_) { b_OtherPV_z_->SetAddress(&OtherPV_z_); }
    b_PPSLocalTrack_decRPId_ = tree->GetBranch("PPSLocalTrack_decRPId");
    if (b_PPSLocalTrack_decRPId_) { b_PPSLocalTrack_decRPId_->SetAddress(&PPSLocalTrack_decRPId_); }
    b_PPSLocalTrack_multiRPProtonIdx_ = tree->GetBranch("PPSLocalTrack_multiRPProtonIdx");
    if (b_PPSLocalTrack_multiRPProtonIdx_) { b_PPSLocalTrack_multiRPProtonIdx_->SetAddress(&PPSLocalTrack_multiRPProtonIdx_); }
    b_PPSLocalTrack_rpType_ = tree->GetBranch("PPSLocalTrack_rpType");
    if (b_PPSLocalTrack_rpType_) { b_PPSLocalTrack_rpType_->SetAddress(&PPSLocalTrack_rpType_); }
    b_PPSLocalTrack_singleRPProtonIdx_ = tree->GetBranch("PPSLocalTrack_singleRPProtonIdx");
    if (b_PPSLocalTrack_singleRPProtonIdx_) { b_PPSLocalTrack_singleRPProtonIdx_->SetAddress(&PPSLocalTrack_singleRPProtonIdx_); }
    b_PPSLocalTrack_time_ = tree->GetBranch("PPSLocalTrack_time");
    if (b_PPSLocalTrack_time_) { b_PPSLocalTrack_time_->SetAddress(&PPSLocalTrack_time_); }
    b_PPSLocalTrack_timeUnc_ = tree->GetBranch("PPSLocalTrack_timeUnc");
    if (b_PPSLocalTrack_timeUnc_) { b_PPSLocalTrack_timeUnc_->SetAddress(&PPSLocalTrack_timeUnc_); }
    b_PPSLocalTrack_x_ = tree->GetBranch("PPSLocalTrack_x");
    if (b_PPSLocalTrack_x_) { b_PPSLocalTrack_x_->SetAddress(&PPSLocalTrack_x_); }
    b_PPSLocalTrack_y_ = tree->GetBranch("PPSLocalTrack_y");
    if (b_PPSLocalTrack_y_) { b_PPSLocalTrack_y_->SetAddress(&PPSLocalTrack_y_); }
    b_PSWeight_ = tree->GetBranch("PSWeight");
    if (b_PSWeight_) { b_PSWeight_->SetAddress(&PSWeight_); }
    b_PV_chi2_ = tree->GetBranch("PV_chi2");
    if (b_PV_chi2_) { b_PV_chi2_->SetAddress(&PV_chi2_); }
    b_PV_ndof_ = tree->GetBranch("PV_ndof");
    if (b_PV_ndof_) { b_PV_ndof_->SetAddress(&PV_ndof_); }
    b_PV_npvs_ = tree->GetBranch("PV_npvs");
    if (b_PV_npvs_) { b_PV_npvs_->SetAddress(&PV_npvs_); }
    b_PV_npvsGood_ = tree->GetBranch("PV_npvsGood");
    if (b_PV_npvsGood_) { b_PV_npvsGood_->SetAddress(&PV_npvsGood_); }
    b_PV_score_ = tree->GetBranch("PV_score");
    if (b_PV_score_) { b_PV_score_->SetAddress(&PV_score_); }
    b_PV_x_ = tree->GetBranch("PV_x");
    if (b_PV_x_) { b_PV_x_->SetAddress(&PV_x_); }
    b_PV_y_ = tree->GetBranch("PV_y");
    if (b_PV_y_) { b_PV_y_->SetAddress(&PV_y_); }
    b_PV_z_ = tree->GetBranch("PV_z");
    if (b_PV_z_) { b_PV_z_->SetAddress(&PV_z_); }
    b_Photon_charge_ = tree->GetBranch("Photon_charge");
    if (b_Photon_charge_) { b_Photon_charge_->SetAddress(&Photon_charge_); }
    b_Photon_cleanmask_ = tree->GetBranch("Photon_cleanmask");
    if (b_Photon_cleanmask_) { b_Photon_cleanmask_->SetAddress(&Photon_cleanmask_); }
    b_Photon_cutBased_ = tree->GetBranch("Photon_cutBased");
    if (b_Photon_cutBased_) { b_Photon_cutBased_->SetAddress(&Photon_cutBased_); }
    b_Photon_cutBased17Bitmap_ = tree->GetBranch("Photon_cutBased17Bitmap");
    if (b_Photon_cutBased17Bitmap_) { b_Photon_cutBased17Bitmap_->SetAddress(&Photon_cutBased17Bitmap_); }
    b_Photon_cutBasedBitmap_ = tree->GetBranch("Photon_cutBasedBitmap");
    if (b_Photon_cutBasedBitmap_) { b_Photon_cutBasedBitmap_->SetAddress(&Photon_cutBasedBitmap_); }
    b_Photon_cutBased_Fall17V1Bitmap_ = tree->GetBranch("Photon_cutBased_Fall17V1Bitmap");
    if (b_Photon_cutBased_Fall17V1Bitmap_) { b_Photon_cutBased_Fall17V1Bitmap_->SetAddress(&Photon_cutBased_Fall17V1Bitmap_); }
    b_Photon_cutBased_Fall17V2_ = tree->GetBranch("Photon_cutBased_Fall17V2");
    if (b_Photon_cutBased_Fall17V2_) { b_Photon_cutBased_Fall17V2_->SetAddress(&Photon_cutBased_Fall17V2_); }
    b_Photon_dEscaleDown_ = tree->GetBranch("Photon_dEscaleDown");
    if (b_Photon_dEscaleDown_) { b_Photon_dEscaleDown_->SetAddress(&Photon_dEscaleDown_); }
    b_Photon_dEscaleUp_ = tree->GetBranch("Photon_dEscaleUp");
    if (b_Photon_dEscaleUp_) { b_Photon_dEscaleUp_->SetAddress(&Photon_dEscaleUp_); }
    b_Photon_dEsigmaDown_ = tree->GetBranch("Photon_dEsigmaDown");
    if (b_Photon_dEsigmaDown_) { b_Photon_dEsigmaDown_->SetAddress(&Photon_dEsigmaDown_); }
    b_Photon_dEsigmaUp_ = tree->GetBranch("Photon_dEsigmaUp");
    if (b_Photon_dEsigmaUp_) { b_Photon_dEsigmaUp_->SetAddress(&Photon_dEsigmaUp_); }
    b_Photon_eCorr_ = tree->GetBranch("Photon_eCorr");
    if (b_Photon_eCorr_) { b_Photon_eCorr_->SetAddress(&Photon_eCorr_); }
    b_Photon_electronIdx_ = tree->GetBranch("Photon_electronIdx");
    if (b_Photon_electronIdx_) { b_Photon_electronIdx_->SetAddress(&Photon_electronIdx_); }
    b_Photon_electronVeto_ = tree->GetBranch("Photon_electronVeto");
    if (b_Photon_electronVeto_) { b_Photon_electronVeto_->SetAddress(&Photon_electronVeto_); }
    b_Photon_energyErr_ = tree->GetBranch("Photon_energyErr");
    if (b_Photon_energyErr_) { b_Photon_energyErr_->SetAddress(&Photon_energyErr_); }
    b_Photon_energyRaw_ = tree->GetBranch("Photon_energyRaw");
    if (b_Photon_energyRaw_) { b_Photon_energyRaw_->SetAddress(&Photon_energyRaw_); }
    b_Photon_esEffSigmaRR_ = tree->GetBranch("Photon_esEffSigmaRR");
    if (b_Photon_esEffSigmaRR_) { b_Photon_esEffSigmaRR_->SetAddress(&Photon_esEffSigmaRR_); }
    b_Photon_esEnergyOverRawE_ = tree->GetBranch("Photon_esEnergyOverRawE");
    if (b_Photon_esEnergyOverRawE_) { b_Photon_esEnergyOverRawE_->SetAddress(&Photon_esEnergyOverRawE_); }
    b_Photon_eta_ = tree->GetBranch("Photon_eta");
    if (b_Photon_eta_) { b_Photon_eta_->SetAddress(&Photon_eta_); }
    b_Photon_etaWidth_ = tree->GetBranch("Photon_etaWidth");
    if (b_Photon_etaWidth_) { b_Photon_etaWidth_->SetAddress(&Photon_etaWidth_); }
    b_Photon_genPartFlav_ = tree->GetBranch("Photon_genPartFlav");
    if (b_Photon_genPartFlav_) { b_Photon_genPartFlav_->SetAddress(&Photon_genPartFlav_); }
    b_Photon_genPartIdx_ = tree->GetBranch("Photon_genPartIdx");
    if (b_Photon_genPartIdx_) { b_Photon_genPartIdx_->SetAddress(&Photon_genPartIdx_); }
    b_Photon_haloTaggerMVAVal_ = tree->GetBranch("Photon_haloTaggerMVAVal");
    if (b_Photon_haloTaggerMVAVal_) { b_Photon_haloTaggerMVAVal_->SetAddress(&Photon_haloTaggerMVAVal_); }
    b_Photon_hoe_ = tree->GetBranch("Photon_hoe");
    if (b_Photon_hoe_) { b_Photon_hoe_->SetAddress(&Photon_hoe_); }
    b_Photon_hoe_PUcorr_ = tree->GetBranch("Photon_hoe_PUcorr");
    if (b_Photon_hoe_PUcorr_) { b_Photon_hoe_PUcorr_->SetAddress(&Photon_hoe_PUcorr_); }
    b_Photon_isScEtaEB_ = tree->GetBranch("Photon_isScEtaEB");
    if (b_Photon_isScEtaEB_) { b_Photon_isScEtaEB_->SetAddress(&Photon_isScEtaEB_); }
    b_Photon_isScEtaEE_ = tree->GetBranch("Photon_isScEtaEE");
    if (b_Photon_isScEtaEE_) { b_Photon_isScEtaEE_->SetAddress(&Photon_isScEtaEE_); }
    b_Photon_jetIdx_ = tree->GetBranch("Photon_jetIdx");
    if (b_Photon_jetIdx_) { b_Photon_jetIdx_->SetAddress(&Photon_jetIdx_); }
    b_Photon_mass_ = tree->GetBranch("Photon_mass");
    if (b_Photon_mass_) { b_Photon_mass_->SetAddress(&Photon_mass_); }
    b_Photon_mvaID_ = tree->GetBranch("Photon_mvaID");
    if (b_Photon_mvaID_) { b_Photon_mvaID_->SetAddress(&Photon_mvaID_); }
    b_Photon_mvaID17_ = tree->GetBranch("Photon_mvaID17");
    if (b_Photon_mvaID17_) { b_Photon_mvaID17_->SetAddress(&Photon_mvaID17_); }
    b_Photon_mvaID17_WP80_ = tree->GetBranch("Photon_mvaID17_WP80");
    if (b_Photon_mvaID17_WP80_) { b_Photon_mvaID17_WP80_->SetAddress(&Photon_mvaID17_WP80_); }
    b_Photon_mvaID17_WP90_ = tree->GetBranch("Photon_mvaID17_WP90");
    if (b_Photon_mvaID17_WP90_) { b_Photon_mvaID17_WP90_->SetAddress(&Photon_mvaID17_WP90_); }
    b_Photon_mvaID_Fall17V1p1_ = tree->GetBranch("Photon_mvaID_Fall17V1p1");
    if (b_Photon_mvaID_Fall17V1p1_) { b_Photon_mvaID_Fall17V1p1_->SetAddress(&Photon_mvaID_Fall17V1p1_); }
    b_Photon_mvaID_Fall17V2_ = tree->GetBranch("Photon_mvaID_Fall17V2");
    if (b_Photon_mvaID_Fall17V2_) { b_Photon_mvaID_Fall17V2_->SetAddress(&Photon_mvaID_Fall17V2_); }
    b_Photon_mvaID_Fall17V2_WP80_ = tree->GetBranch("Photon_mvaID_Fall17V2_WP80");
    if (b_Photon_mvaID_Fall17V2_WP80_) { b_Photon_mvaID_Fall17V2_WP80_->SetAddress(&Photon_mvaID_Fall17V2_WP80_); }
    b_Photon_mvaID_Fall17V2_WP90_ = tree->GetBranch("Photon_mvaID_Fall17V2_WP90");
    if (b_Photon_mvaID_Fall17V2_WP90_) { b_Photon_mvaID_Fall17V2_WP90_->SetAddress(&Photon_mvaID_Fall17V2_WP90_); }
    b_Photon_mvaID_WP80_ = tree->GetBranch("Photon_mvaID_WP80");
    if (b_Photon_mvaID_WP80_) { b_Photon_mvaID_WP80_->SetAddress(&Photon_mvaID_WP80_); }
    b_Photon_mvaID_WP90_ = tree->GetBranch("Photon_mvaID_WP90");
    if (b_Photon_mvaID_WP90_) { b_Photon_mvaID_WP90_->SetAddress(&Photon_mvaID_WP90_); }
    b_Photon_pdgId_ = tree->GetBranch("Photon_pdgId");
    if (b_Photon_pdgId_) { b_Photon_pdgId_->SetAddress(&Photon_pdgId_); }
    b_Photon_pfChargedIsoPFPV_ = tree->GetBranch("Photon_pfChargedIsoPFPV");
    if (b_Photon_pfChargedIsoPFPV_) { b_Photon_pfChargedIsoPFPV_->SetAddress(&Photon_pfChargedIsoPFPV_); }
    b_Photon_pfChargedIsoWorstVtx_ = tree->GetBranch("Photon_pfChargedIsoWorstVtx");
    if (b_Photon_pfChargedIsoWorstVtx_) { b_Photon_pfChargedIsoWorstVtx_->SetAddress(&Photon_pfChargedIsoWorstVtx_); }
    b_Photon_pfPhoIso03_ = tree->GetBranch("Photon_pfPhoIso03");
    if (b_Photon_pfPhoIso03_) { b_Photon_pfPhoIso03_->SetAddress(&Photon_pfPhoIso03_); }
    b_Photon_pfRelIso03_all_ = tree->GetBranch("Photon_pfRelIso03_all");
    if (b_Photon_pfRelIso03_all_) { b_Photon_pfRelIso03_all_->SetAddress(&Photon_pfRelIso03_all_); }
    b_Photon_pfRelIso03_all_Fall17V2_ = tree->GetBranch("Photon_pfRelIso03_all_Fall17V2");
    if (b_Photon_pfRelIso03_all_Fall17V2_) { b_Photon_pfRelIso03_all_Fall17V2_->SetAddress(&Photon_pfRelIso03_all_Fall17V2_); }
    b_Photon_pfRelIso03_all_quadratic_ = tree->GetBranch("Photon_pfRelIso03_all_quadratic");
    if (b_Photon_pfRelIso03_all_quadratic_) { b_Photon_pfRelIso03_all_quadratic_->SetAddress(&Photon_pfRelIso03_all_quadratic_); }
    b_Photon_pfRelIso03_chg_ = tree->GetBranch("Photon_pfRelIso03_chg");
    if (b_Photon_pfRelIso03_chg_) { b_Photon_pfRelIso03_chg_->SetAddress(&Photon_pfRelIso03_chg_); }
    b_Photon_pfRelIso03_chg_Fall17V2_ = tree->GetBranch("Photon_pfRelIso03_chg_Fall17V2");
    if (b_Photon_pfRelIso03_chg_Fall17V2_) { b_Photon_pfRelIso03_chg_Fall17V2_->SetAddress(&Photon_pfRelIso03_chg_Fall17V2_); }
    b_Photon_pfRelIso03_chg_quadratic_ = tree->GetBranch("Photon_pfRelIso03_chg_quadratic");
    if (b_Photon_pfRelIso03_chg_quadratic_) { b_Photon_pfRelIso03_chg_quadratic_->SetAddress(&Photon_pfRelIso03_chg_quadratic_); }
    b_Photon_phi_ = tree->GetBranch("Photon_phi");
    if (b_Photon_phi_) { b_Photon_phi_->SetAddress(&Photon_phi_); }
    b_Photon_phiWidth_ = tree->GetBranch("Photon_phiWidth");
    if (b_Photon_phiWidth_) { b_Photon_phiWidth_->SetAddress(&Photon_phiWidth_); }
    b_Photon_pixelSeed_ = tree->GetBranch("Photon_pixelSeed");
    if (b_Photon_pixelSeed_) { b_Photon_pixelSeed_->SetAddress(&Photon_pixelSeed_); }
    b_Photon_pt_ = tree->GetBranch("Photon_pt");
    if (b_Photon_pt_) { b_Photon_pt_->SetAddress(&Photon_pt_); }
    b_Photon_r9_ = tree->GetBranch("Photon_r9");
    if (b_Photon_r9_) { b_Photon_r9_->SetAddress(&Photon_r9_); }
    b_Photon_s4_ = tree->GetBranch("Photon_s4");
    if (b_Photon_s4_) { b_Photon_s4_->SetAddress(&Photon_s4_); }
    b_Photon_seedGain_ = tree->GetBranch("Photon_seedGain");
    if (b_Photon_seedGain_) { b_Photon_seedGain_->SetAddress(&Photon_seedGain_); }
    b_Photon_seediEtaOriX_ = tree->GetBranch("Photon_seediEtaOriX");
    if (b_Photon_seediEtaOriX_) { b_Photon_seediEtaOriX_->SetAddress(&Photon_seediEtaOriX_); }
    b_Photon_seediPhiOriY_ = tree->GetBranch("Photon_seediPhiOriY");
    if (b_Photon_seediPhiOriY_) { b_Photon_seediPhiOriY_->SetAddress(&Photon_seediPhiOriY_); }
    b_Photon_sieie_ = tree->GetBranch("Photon_sieie");
    if (b_Photon_sieie_) { b_Photon_sieie_->SetAddress(&Photon_sieie_); }
    b_Photon_sieip_ = tree->GetBranch("Photon_sieip");
    if (b_Photon_sieip_) { b_Photon_sieip_->SetAddress(&Photon_sieip_); }
    b_Photon_sipip_ = tree->GetBranch("Photon_sipip");
    if (b_Photon_sipip_) { b_Photon_sipip_->SetAddress(&Photon_sipip_); }
    b_Photon_vidNestedWPBitmap_ = tree->GetBranch("Photon_vidNestedWPBitmap");
    if (b_Photon_vidNestedWPBitmap_) { b_Photon_vidNestedWPBitmap_->SetAddress(&Photon_vidNestedWPBitmap_); }
    b_Photon_vidNestedWPBitmap_Fall17V2_ = tree->GetBranch("Photon_vidNestedWPBitmap_Fall17V2");
    if (b_Photon_vidNestedWPBitmap_Fall17V2_) { b_Photon_vidNestedWPBitmap_Fall17V2_->SetAddress(&Photon_vidNestedWPBitmap_Fall17V2_); }
    b_Photon_x_calo_ = tree->GetBranch("Photon_x_calo");
    if (b_Photon_x_calo_) { b_Photon_x_calo_->SetAddress(&Photon_x_calo_); }
    b_Photon_y_calo_ = tree->GetBranch("Photon_y_calo");
    if (b_Photon_y_calo_) { b_Photon_y_calo_->SetAddress(&Photon_y_calo_); }
    b_Photon_z_calo_ = tree->GetBranch("Photon_z_calo");
    if (b_Photon_z_calo_) { b_Photon_z_calo_->SetAddress(&Photon_z_calo_); }
    b_Pileup_gpudensity_ = tree->GetBranch("Pileup_gpudensity");
    if (b_Pileup_gpudensity_) { b_Pileup_gpudensity_->SetAddress(&Pileup_gpudensity_); }
    b_Pileup_nPU_ = tree->GetBranch("Pileup_nPU");
    if (b_Pileup_nPU_) { b_Pileup_nPU_->SetAddress(&Pileup_nPU_); }
    b_Pileup_nTrueInt_ = tree->GetBranch("Pileup_nTrueInt");
    if (b_Pileup_nTrueInt_) { b_Pileup_nTrueInt_->SetAddress(&Pileup_nTrueInt_); }
    b_Pileup_pudensity_ = tree->GetBranch("Pileup_pudensity");
    if (b_Pileup_pudensity_) { b_Pileup_pudensity_->SetAddress(&Pileup_pudensity_); }
    b_Pileup_sumEOOT_ = tree->GetBranch("Pileup_sumEOOT");
    if (b_Pileup_sumEOOT_) { b_Pileup_sumEOOT_->SetAddress(&Pileup_sumEOOT_); }
    b_Pileup_sumLOOT_ = tree->GetBranch("Pileup_sumLOOT");
    if (b_Pileup_sumLOOT_) { b_Pileup_sumLOOT_->SetAddress(&Pileup_sumLOOT_); }
    b_Proton_multiRP_arm_ = tree->GetBranch("Proton_multiRP_arm");
    if (b_Proton_multiRP_arm_) { b_Proton_multiRP_arm_->SetAddress(&Proton_multiRP_arm_); }
    b_Proton_multiRP_t_ = tree->GetBranch("Proton_multiRP_t");
    if (b_Proton_multiRP_t_) { b_Proton_multiRP_t_->SetAddress(&Proton_multiRP_t_); }
    b_Proton_multiRP_thetaX_ = tree->GetBranch("Proton_multiRP_thetaX");
    if (b_Proton_multiRP_thetaX_) { b_Proton_multiRP_thetaX_->SetAddress(&Proton_multiRP_thetaX_); }
    b_Proton_multiRP_thetaY_ = tree->GetBranch("Proton_multiRP_thetaY");
    if (b_Proton_multiRP_thetaY_) { b_Proton_multiRP_thetaY_->SetAddress(&Proton_multiRP_thetaY_); }
    b_Proton_multiRP_time_ = tree->GetBranch("Proton_multiRP_time");
    if (b_Proton_multiRP_time_) { b_Proton_multiRP_time_->SetAddress(&Proton_multiRP_time_); }
    b_Proton_multiRP_timeUnc_ = tree->GetBranch("Proton_multiRP_timeUnc");
    if (b_Proton_multiRP_timeUnc_) { b_Proton_multiRP_timeUnc_->SetAddress(&Proton_multiRP_timeUnc_); }
    b_Proton_multiRP_xi_ = tree->GetBranch("Proton_multiRP_xi");
    if (b_Proton_multiRP_xi_) { b_Proton_multiRP_xi_->SetAddress(&Proton_multiRP_xi_); }
    b_Proton_singleRP_decRPId_ = tree->GetBranch("Proton_singleRP_decRPId");
    if (b_Proton_singleRP_decRPId_) { b_Proton_singleRP_decRPId_->SetAddress(&Proton_singleRP_decRPId_); }
    b_Proton_singleRP_thetaY_ = tree->GetBranch("Proton_singleRP_thetaY");
    if (b_Proton_singleRP_thetaY_) { b_Proton_singleRP_thetaY_->SetAddress(&Proton_singleRP_thetaY_); }
    b_Proton_singleRP_xi_ = tree->GetBranch("Proton_singleRP_xi");
    if (b_Proton_singleRP_xi_) { b_Proton_singleRP_xi_->SetAddress(&Proton_singleRP_xi_); }
    b_PuppiMET_phi_ = tree->GetBranch("PuppiMET_phi");
    if (b_PuppiMET_phi_) { b_PuppiMET_phi_->SetAddress(&PuppiMET_phi_); }
    b_PuppiMET_phiJERDown_ = tree->GetBranch("PuppiMET_phiJERDown");
    if (b_PuppiMET_phiJERDown_) { b_PuppiMET_phiJERDown_->SetAddress(&PuppiMET_phiJERDown_); }
    b_PuppiMET_phiJERUp_ = tree->GetBranch("PuppiMET_phiJERUp");
    if (b_PuppiMET_phiJERUp_) { b_PuppiMET_phiJERUp_->SetAddress(&PuppiMET_phiJERUp_); }
    b_PuppiMET_phiJESDown_ = tree->GetBranch("PuppiMET_phiJESDown");
    if (b_PuppiMET_phiJESDown_) { b_PuppiMET_phiJESDown_->SetAddress(&PuppiMET_phiJESDown_); }
    b_PuppiMET_phiJESUp_ = tree->GetBranch("PuppiMET_phiJESUp");
    if (b_PuppiMET_phiJESUp_) { b_PuppiMET_phiJESUp_->SetAddress(&PuppiMET_phiJESUp_); }
    b_PuppiMET_phiUnclusteredDown_ = tree->GetBranch("PuppiMET_phiUnclusteredDown");
    if (b_PuppiMET_phiUnclusteredDown_) { b_PuppiMET_phiUnclusteredDown_->SetAddress(&PuppiMET_phiUnclusteredDown_); }
    b_PuppiMET_phiUnclusteredUp_ = tree->GetBranch("PuppiMET_phiUnclusteredUp");
    if (b_PuppiMET_phiUnclusteredUp_) { b_PuppiMET_phiUnclusteredUp_->SetAddress(&PuppiMET_phiUnclusteredUp_); }
    b_PuppiMET_pt_ = tree->GetBranch("PuppiMET_pt");
    if (b_PuppiMET_pt_) { b_PuppiMET_pt_->SetAddress(&PuppiMET_pt_); }
    b_PuppiMET_ptJERDown_ = tree->GetBranch("PuppiMET_ptJERDown");
    if (b_PuppiMET_ptJERDown_) { b_PuppiMET_ptJERDown_->SetAddress(&PuppiMET_ptJERDown_); }
    b_PuppiMET_ptJERUp_ = tree->GetBranch("PuppiMET_ptJERUp");
    if (b_PuppiMET_ptJERUp_) { b_PuppiMET_ptJERUp_->SetAddress(&PuppiMET_ptJERUp_); }
    b_PuppiMET_ptJESDown_ = tree->GetBranch("PuppiMET_ptJESDown");
    if (b_PuppiMET_ptJESDown_) { b_PuppiMET_ptJESDown_->SetAddress(&PuppiMET_ptJESDown_); }
    b_PuppiMET_ptJESUp_ = tree->GetBranch("PuppiMET_ptJESUp");
    if (b_PuppiMET_ptJESUp_) { b_PuppiMET_ptJESUp_->SetAddress(&PuppiMET_ptJESUp_); }
    b_PuppiMET_ptUnclusteredDown_ = tree->GetBranch("PuppiMET_ptUnclusteredDown");
    if (b_PuppiMET_ptUnclusteredDown_) { b_PuppiMET_ptUnclusteredDown_->SetAddress(&PuppiMET_ptUnclusteredDown_); }
    b_PuppiMET_ptUnclusteredUp_ = tree->GetBranch("PuppiMET_ptUnclusteredUp");
    if (b_PuppiMET_ptUnclusteredUp_) { b_PuppiMET_ptUnclusteredUp_->SetAddress(&PuppiMET_ptUnclusteredUp_); }
    b_PuppiMET_sumEt_ = tree->GetBranch("PuppiMET_sumEt");
    if (b_PuppiMET_sumEt_) { b_PuppiMET_sumEt_->SetAddress(&PuppiMET_sumEt_); }
    b_RawMET_phi_ = tree->GetBranch("RawMET_phi");
    if (b_RawMET_phi_) { b_RawMET_phi_->SetAddress(&RawMET_phi_); }
    b_RawMET_pt_ = tree->GetBranch("RawMET_pt");
    if (b_RawMET_pt_) { b_RawMET_pt_->SetAddress(&RawMET_pt_); }
    b_RawMET_sumEt_ = tree->GetBranch("RawMET_sumEt");
    if (b_RawMET_sumEt_) { b_RawMET_sumEt_->SetAddress(&RawMET_sumEt_); }
    b_RawPuppiMET_phi_ = tree->GetBranch("RawPuppiMET_phi");
    if (b_RawPuppiMET_phi_) { b_RawPuppiMET_phi_->SetAddress(&RawPuppiMET_phi_); }
    b_RawPuppiMET_pt_ = tree->GetBranch("RawPuppiMET_pt");
    if (b_RawPuppiMET_pt_) { b_RawPuppiMET_pt_->SetAddress(&RawPuppiMET_pt_); }
    b_RawPuppiMET_sumEt_ = tree->GetBranch("RawPuppiMET_sumEt");
    if (b_RawPuppiMET_sumEt_) { b_RawPuppiMET_sumEt_->SetAddress(&RawPuppiMET_sumEt_); }
    b_Rho_fixedGridRhoAll_ = tree->GetBranch("Rho_fixedGridRhoAll");
    if (b_Rho_fixedGridRhoAll_) { b_Rho_fixedGridRhoAll_->SetAddress(&Rho_fixedGridRhoAll_); }
    b_Rho_fixedGridRhoFastjetAll_ = tree->GetBranch("Rho_fixedGridRhoFastjetAll");
    if (b_Rho_fixedGridRhoFastjetAll_) { b_Rho_fixedGridRhoFastjetAll_->SetAddress(&Rho_fixedGridRhoFastjetAll_); }
    b_Rho_fixedGridRhoFastjetCentral_ = tree->GetBranch("Rho_fixedGridRhoFastjetCentral");
    if (b_Rho_fixedGridRhoFastjetCentral_) { b_Rho_fixedGridRhoFastjetCentral_->SetAddress(&Rho_fixedGridRhoFastjetCentral_); }
    b_Rho_fixedGridRhoFastjetCentralCalo_ = tree->GetBranch("Rho_fixedGridRhoFastjetCentralCalo");
    if (b_Rho_fixedGridRhoFastjetCentralCalo_) { b_Rho_fixedGridRhoFastjetCentralCalo_->SetAddress(&Rho_fixedGridRhoFastjetCentralCalo_); }
    b_Rho_fixedGridRhoFastjetCentralChargedPileUp_ = tree->GetBranch("Rho_fixedGridRhoFastjetCentralChargedPileUp");
    if (b_Rho_fixedGridRhoFastjetCentralChargedPileUp_) { b_Rho_fixedGridRhoFastjetCentralChargedPileUp_->SetAddress(&Rho_fixedGridRhoFastjetCentralChargedPileUp_); }
    b_Rho_fixedGridRhoFastjetCentralNeutral_ = tree->GetBranch("Rho_fixedGridRhoFastjetCentralNeutral");
    if (b_Rho_fixedGridRhoFastjetCentralNeutral_) { b_Rho_fixedGridRhoFastjetCentralNeutral_->SetAddress(&Rho_fixedGridRhoFastjetCentralNeutral_); }
    b_SV_charge_ = tree->GetBranch("SV_charge");
    if (b_SV_charge_) { b_SV_charge_->SetAddress(&SV_charge_); }
    b_SV_chi2_ = tree->GetBranch("SV_chi2");
    if (b_SV_chi2_) { b_SV_chi2_->SetAddress(&SV_chi2_); }
    b_SV_dlen_ = tree->GetBranch("SV_dlen");
    if (b_SV_dlen_) { b_SV_dlen_->SetAddress(&SV_dlen_); }
    b_SV_dlenSig_ = tree->GetBranch("SV_dlenSig");
    if (b_SV_dlenSig_) { b_SV_dlenSig_->SetAddress(&SV_dlenSig_); }
    b_SV_dxy_ = tree->GetBranch("SV_dxy");
    if (b_SV_dxy_) { b_SV_dxy_->SetAddress(&SV_dxy_); }
    b_SV_dxySig_ = tree->GetBranch("SV_dxySig");
    if (b_SV_dxySig_) { b_SV_dxySig_->SetAddress(&SV_dxySig_); }
    b_SV_eta_ = tree->GetBranch("SV_eta");
    if (b_SV_eta_) { b_SV_eta_->SetAddress(&SV_eta_); }
    b_SV_mass_ = tree->GetBranch("SV_mass");
    if (b_SV_mass_) { b_SV_mass_->SetAddress(&SV_mass_); }
    b_SV_ndof_ = tree->GetBranch("SV_ndof");
    if (b_SV_ndof_) { b_SV_ndof_->SetAddress(&SV_ndof_); }
    b_SV_ntracks_ = tree->GetBranch("SV_ntracks");
    if (b_SV_ntracks_) { b_SV_ntracks_->SetAddress(&SV_ntracks_); }
    b_SV_pAngle_ = tree->GetBranch("SV_pAngle");
    if (b_SV_pAngle_) { b_SV_pAngle_->SetAddress(&SV_pAngle_); }
    b_SV_phi_ = tree->GetBranch("SV_phi");
    if (b_SV_phi_) { b_SV_phi_->SetAddress(&SV_phi_); }
    b_SV_pt_ = tree->GetBranch("SV_pt");
    if (b_SV_pt_) { b_SV_pt_->SetAddress(&SV_pt_); }
    b_SV_x_ = tree->GetBranch("SV_x");
    if (b_SV_x_) { b_SV_x_->SetAddress(&SV_x_); }
    b_SV_y_ = tree->GetBranch("SV_y");
    if (b_SV_y_) { b_SV_y_->SetAddress(&SV_y_); }
    b_SV_z_ = tree->GetBranch("SV_z");
    if (b_SV_z_) { b_SV_z_->SetAddress(&SV_z_); }
    b_SoftActivityJetHT_ = tree->GetBranch("SoftActivityJetHT");
    if (b_SoftActivityJetHT_) { b_SoftActivityJetHT_->SetAddress(&SoftActivityJetHT_); }
    b_SoftActivityJetHT10_ = tree->GetBranch("SoftActivityJetHT10");
    if (b_SoftActivityJetHT10_) { b_SoftActivityJetHT10_->SetAddress(&SoftActivityJetHT10_); }
    b_SoftActivityJetHT2_ = tree->GetBranch("SoftActivityJetHT2");
    if (b_SoftActivityJetHT2_) { b_SoftActivityJetHT2_->SetAddress(&SoftActivityJetHT2_); }
    b_SoftActivityJetHT5_ = tree->GetBranch("SoftActivityJetHT5");
    if (b_SoftActivityJetHT5_) { b_SoftActivityJetHT5_->SetAddress(&SoftActivityJetHT5_); }
    b_SoftActivityJetNjets10_ = tree->GetBranch("SoftActivityJetNjets10");
    if (b_SoftActivityJetNjets10_) { b_SoftActivityJetNjets10_->SetAddress(&SoftActivityJetNjets10_); }
    b_SoftActivityJetNjets2_ = tree->GetBranch("SoftActivityJetNjets2");
    if (b_SoftActivityJetNjets2_) { b_SoftActivityJetNjets2_->SetAddress(&SoftActivityJetNjets2_); }
    b_SoftActivityJetNjets5_ = tree->GetBranch("SoftActivityJetNjets5");
    if (b_SoftActivityJetNjets5_) { b_SoftActivityJetNjets5_->SetAddress(&SoftActivityJetNjets5_); }
    b_SoftActivityJet_eta_ = tree->GetBranch("SoftActivityJet_eta");
    if (b_SoftActivityJet_eta_) { b_SoftActivityJet_eta_->SetAddress(&SoftActivityJet_eta_); }
    b_SoftActivityJet_phi_ = tree->GetBranch("SoftActivityJet_phi");
    if (b_SoftActivityJet_phi_) { b_SoftActivityJet_phi_->SetAddress(&SoftActivityJet_phi_); }
    b_SoftActivityJet_pt_ = tree->GetBranch("SoftActivityJet_pt");
    if (b_SoftActivityJet_pt_) { b_SoftActivityJet_pt_->SetAddress(&SoftActivityJet_pt_); }
    b_SubGenJetAK8_eta_ = tree->GetBranch("SubGenJetAK8_eta");
    if (b_SubGenJetAK8_eta_) { b_SubGenJetAK8_eta_->SetAddress(&SubGenJetAK8_eta_); }
    b_SubGenJetAK8_mass_ = tree->GetBranch("SubGenJetAK8_mass");
    if (b_SubGenJetAK8_mass_) { b_SubGenJetAK8_mass_->SetAddress(&SubGenJetAK8_mass_); }
    b_SubGenJetAK8_phi_ = tree->GetBranch("SubGenJetAK8_phi");
    if (b_SubGenJetAK8_phi_) { b_SubGenJetAK8_phi_->SetAddress(&SubGenJetAK8_phi_); }
    b_SubGenJetAK8_pt_ = tree->GetBranch("SubGenJetAK8_pt");
    if (b_SubGenJetAK8_pt_) { b_SubGenJetAK8_pt_->SetAddress(&SubGenJetAK8_pt_); }
    b_SubJet_btagCMVA_ = tree->GetBranch("SubJet_btagCMVA");
    if (b_SubJet_btagCMVA_) { b_SubJet_btagCMVA_->SetAddress(&SubJet_btagCMVA_); }
    b_SubJet_btagCSVV2_ = tree->GetBranch("SubJet_btagCSVV2");
    if (b_SubJet_btagCSVV2_) { b_SubJet_btagCSVV2_->SetAddress(&SubJet_btagCSVV2_); }
    b_SubJet_btagDeepB_ = tree->GetBranch("SubJet_btagDeepB");
    if (b_SubJet_btagDeepB_) { b_SubJet_btagDeepB_->SetAddress(&SubJet_btagDeepB_); }
    b_SubJet_eta_ = tree->GetBranch("SubJet_eta");
    if (b_SubJet_eta_) { b_SubJet_eta_->SetAddress(&SubJet_eta_); }
    b_SubJet_hadronFlavour_ = tree->GetBranch("SubJet_hadronFlavour");
    if (b_SubJet_hadronFlavour_) { b_SubJet_hadronFlavour_->SetAddress(&SubJet_hadronFlavour_); }
    b_SubJet_mass_ = tree->GetBranch("SubJet_mass");
    if (b_SubJet_mass_) { b_SubJet_mass_->SetAddress(&SubJet_mass_); }
    b_SubJet_n2b1_ = tree->GetBranch("SubJet_n2b1");
    if (b_SubJet_n2b1_) { b_SubJet_n2b1_->SetAddress(&SubJet_n2b1_); }
    b_SubJet_n3b1_ = tree->GetBranch("SubJet_n3b1");
    if (b_SubJet_n3b1_) { b_SubJet_n3b1_->SetAddress(&SubJet_n3b1_); }
    b_SubJet_nBHadrons_ = tree->GetBranch("SubJet_nBHadrons");
    if (b_SubJet_nBHadrons_) { b_SubJet_nBHadrons_->SetAddress(&SubJet_nBHadrons_); }
    b_SubJet_nCHadrons_ = tree->GetBranch("SubJet_nCHadrons");
    if (b_SubJet_nCHadrons_) { b_SubJet_nCHadrons_->SetAddress(&SubJet_nCHadrons_); }
    b_SubJet_phi_ = tree->GetBranch("SubJet_phi");
    if (b_SubJet_phi_) { b_SubJet_phi_->SetAddress(&SubJet_phi_); }
    b_SubJet_pt_ = tree->GetBranch("SubJet_pt");
    if (b_SubJet_pt_) { b_SubJet_pt_->SetAddress(&SubJet_pt_); }
    b_SubJet_rawFactor_ = tree->GetBranch("SubJet_rawFactor");
    if (b_SubJet_rawFactor_) { b_SubJet_rawFactor_->SetAddress(&SubJet_rawFactor_); }
    b_SubJet_tau1_ = tree->GetBranch("SubJet_tau1");
    if (b_SubJet_tau1_) { b_SubJet_tau1_->SetAddress(&SubJet_tau1_); }
    b_SubJet_tau2_ = tree->GetBranch("SubJet_tau2");
    if (b_SubJet_tau2_) { b_SubJet_tau2_->SetAddress(&SubJet_tau2_); }
    b_SubJet_tau3_ = tree->GetBranch("SubJet_tau3");
    if (b_SubJet_tau3_) { b_SubJet_tau3_->SetAddress(&SubJet_tau3_); }
    b_SubJet_tau4_ = tree->GetBranch("SubJet_tau4");
    if (b_SubJet_tau4_) { b_SubJet_tau4_->SetAddress(&SubJet_tau4_); }
    b_Tau_charge_ = tree->GetBranch("Tau_charge");
    if (b_Tau_charge_) { b_Tau_charge_->SetAddress(&Tau_charge_); }
    b_Tau_chargedIso_ = tree->GetBranch("Tau_chargedIso");
    if (b_Tau_chargedIso_) { b_Tau_chargedIso_->SetAddress(&Tau_chargedIso_); }
    b_Tau_cleanmask_ = tree->GetBranch("Tau_cleanmask");
    if (b_Tau_cleanmask_) { b_Tau_cleanmask_->SetAddress(&Tau_cleanmask_); }
    b_Tau_decayMode_ = tree->GetBranch("Tau_decayMode");
    if (b_Tau_decayMode_) { b_Tau_decayMode_->SetAddress(&Tau_decayMode_); }
    b_Tau_dxy_ = tree->GetBranch("Tau_dxy");
    if (b_Tau_dxy_) { b_Tau_dxy_->SetAddress(&Tau_dxy_); }
    b_Tau_dz_ = tree->GetBranch("Tau_dz");
    if (b_Tau_dz_) { b_Tau_dz_->SetAddress(&Tau_dz_); }
    b_Tau_eleIdx_ = tree->GetBranch("Tau_eleIdx");
    if (b_Tau_eleIdx_) { b_Tau_eleIdx_->SetAddress(&Tau_eleIdx_); }
    b_Tau_eta_ = tree->GetBranch("Tau_eta");
    if (b_Tau_eta_) { b_Tau_eta_->SetAddress(&Tau_eta_); }
    b_Tau_genPartFlav_ = tree->GetBranch("Tau_genPartFlav");
    if (b_Tau_genPartFlav_) { b_Tau_genPartFlav_->SetAddress(&Tau_genPartFlav_); }
    b_Tau_genPartIdx_ = tree->GetBranch("Tau_genPartIdx");
    if (b_Tau_genPartIdx_) { b_Tau_genPartIdx_->SetAddress(&Tau_genPartIdx_); }
    b_Tau_idAntiEle_ = tree->GetBranch("Tau_idAntiEle");
    if (b_Tau_idAntiEle_) { b_Tau_idAntiEle_->SetAddress(&Tau_idAntiEle_); }
    b_Tau_idAntiEle2018_ = tree->GetBranch("Tau_idAntiEle2018");
    if (b_Tau_idAntiEle2018_) { b_Tau_idAntiEle2018_->SetAddress(&Tau_idAntiEle2018_); }
    b_Tau_idAntiEleDeadECal_ = tree->GetBranch("Tau_idAntiEleDeadECal");
    if (b_Tau_idAntiEleDeadECal_) { b_Tau_idAntiEleDeadECal_->SetAddress(&Tau_idAntiEleDeadECal_); }
    b_Tau_idAntiMu_ = tree->GetBranch("Tau_idAntiMu");
    if (b_Tau_idAntiMu_) { b_Tau_idAntiMu_->SetAddress(&Tau_idAntiMu_); }
    b_Tau_idDecayMode_ = tree->GetBranch("Tau_idDecayMode");
    if (b_Tau_idDecayMode_) { b_Tau_idDecayMode_->SetAddress(&Tau_idDecayMode_); }
    b_Tau_idDecayModeNewDMs_ = tree->GetBranch("Tau_idDecayModeNewDMs");
    if (b_Tau_idDecayModeNewDMs_) { b_Tau_idDecayModeNewDMs_->SetAddress(&Tau_idDecayModeNewDMs_); }
    b_Tau_idDecayModeOldDMs_ = tree->GetBranch("Tau_idDecayModeOldDMs");
    if (b_Tau_idDecayModeOldDMs_) { b_Tau_idDecayModeOldDMs_->SetAddress(&Tau_idDecayModeOldDMs_); }
    b_Tau_idDeepTau2017v2p1VSe_ = tree->GetBranch("Tau_idDeepTau2017v2p1VSe");
    if (b_Tau_idDeepTau2017v2p1VSe_) { b_Tau_idDeepTau2017v2p1VSe_->SetAddress(&Tau_idDeepTau2017v2p1VSe_); }
    b_Tau_idDeepTau2017v2p1VSjet_ = tree->GetBranch("Tau_idDeepTau2017v2p1VSjet");
    if (b_Tau_idDeepTau2017v2p1VSjet_) { b_Tau_idDeepTau2017v2p1VSjet_->SetAddress(&Tau_idDeepTau2017v2p1VSjet_); }
    b_Tau_idDeepTau2017v2p1VSmu_ = tree->GetBranch("Tau_idDeepTau2017v2p1VSmu");
    if (b_Tau_idDeepTau2017v2p1VSmu_) { b_Tau_idDeepTau2017v2p1VSmu_->SetAddress(&Tau_idDeepTau2017v2p1VSmu_); }
    b_Tau_idDeepTau2018v2p5VSe_ = tree->GetBranch("Tau_idDeepTau2018v2p5VSe");
    if (b_Tau_idDeepTau2018v2p5VSe_) { b_Tau_idDeepTau2018v2p5VSe_->SetAddress(&Tau_idDeepTau2018v2p5VSe_); }
    b_Tau_idDeepTau2018v2p5VSjet_ = tree->GetBranch("Tau_idDeepTau2018v2p5VSjet");
    if (b_Tau_idDeepTau2018v2p5VSjet_) { b_Tau_idDeepTau2018v2p5VSjet_->SetAddress(&Tau_idDeepTau2018v2p5VSjet_); }
    b_Tau_idDeepTau2018v2p5VSmu_ = tree->GetBranch("Tau_idDeepTau2018v2p5VSmu");
    if (b_Tau_idDeepTau2018v2p5VSmu_) { b_Tau_idDeepTau2018v2p5VSmu_->SetAddress(&Tau_idDeepTau2018v2p5VSmu_); }
    b_Tau_idMVAnewDM2017v2_ = tree->GetBranch("Tau_idMVAnewDM2017v2");
    if (b_Tau_idMVAnewDM2017v2_) { b_Tau_idMVAnewDM2017v2_->SetAddress(&Tau_idMVAnewDM2017v2_); }
    b_Tau_idMVAoldDM_ = tree->GetBranch("Tau_idMVAoldDM");
    if (b_Tau_idMVAoldDM_) { b_Tau_idMVAoldDM_->SetAddress(&Tau_idMVAoldDM_); }
    b_Tau_idMVAoldDM2017v1_ = tree->GetBranch("Tau_idMVAoldDM2017v1");
    if (b_Tau_idMVAoldDM2017v1_) { b_Tau_idMVAoldDM2017v1_->SetAddress(&Tau_idMVAoldDM2017v1_); }
    b_Tau_idMVAoldDM2017v2_ = tree->GetBranch("Tau_idMVAoldDM2017v2");
    if (b_Tau_idMVAoldDM2017v2_) { b_Tau_idMVAoldDM2017v2_->SetAddress(&Tau_idMVAoldDM2017v2_); }
    b_Tau_idMVAoldDMdR032017v2_ = tree->GetBranch("Tau_idMVAoldDMdR032017v2");
    if (b_Tau_idMVAoldDMdR032017v2_) { b_Tau_idMVAoldDMdR032017v2_->SetAddress(&Tau_idMVAoldDMdR032017v2_); }
    b_Tau_jetIdx_ = tree->GetBranch("Tau_jetIdx");
    if (b_Tau_jetIdx_) { b_Tau_jetIdx_->SetAddress(&Tau_jetIdx_); }
    b_Tau_leadTkDeltaEta_ = tree->GetBranch("Tau_leadTkDeltaEta");
    if (b_Tau_leadTkDeltaEta_) { b_Tau_leadTkDeltaEta_->SetAddress(&Tau_leadTkDeltaEta_); }
    b_Tau_leadTkDeltaPhi_ = tree->GetBranch("Tau_leadTkDeltaPhi");
    if (b_Tau_leadTkDeltaPhi_) { b_Tau_leadTkDeltaPhi_->SetAddress(&Tau_leadTkDeltaPhi_); }
    b_Tau_leadTkPtOverTauPt_ = tree->GetBranch("Tau_leadTkPtOverTauPt");
    if (b_Tau_leadTkPtOverTauPt_) { b_Tau_leadTkPtOverTauPt_->SetAddress(&Tau_leadTkPtOverTauPt_); }
    b_Tau_mass_ = tree->GetBranch("Tau_mass");
    if (b_Tau_mass_) { b_Tau_mass_->SetAddress(&Tau_mass_); }
    b_Tau_muIdx_ = tree->GetBranch("Tau_muIdx");
    if (b_Tau_muIdx_) { b_Tau_muIdx_->SetAddress(&Tau_muIdx_); }
    b_Tau_nSVs_ = tree->GetBranch("Tau_nSVs");
    if (b_Tau_nSVs_) { b_Tau_nSVs_->SetAddress(&Tau_nSVs_); }
    b_Tau_neutralIso_ = tree->GetBranch("Tau_neutralIso");
    if (b_Tau_neutralIso_) { b_Tau_neutralIso_->SetAddress(&Tau_neutralIso_); }
    b_Tau_phi_ = tree->GetBranch("Tau_phi");
    if (b_Tau_phi_) { b_Tau_phi_->SetAddress(&Tau_phi_); }
    b_Tau_photonsOutsideSignalCone_ = tree->GetBranch("Tau_photonsOutsideSignalCone");
    if (b_Tau_photonsOutsideSignalCone_) { b_Tau_photonsOutsideSignalCone_->SetAddress(&Tau_photonsOutsideSignalCone_); }
    b_Tau_pt_ = tree->GetBranch("Tau_pt");
    if (b_Tau_pt_) { b_Tau_pt_->SetAddress(&Tau_pt_); }
    b_Tau_puCorr_ = tree->GetBranch("Tau_puCorr");
    if (b_Tau_puCorr_) { b_Tau_puCorr_->SetAddress(&Tau_puCorr_); }
    b_Tau_rawAntiEle_ = tree->GetBranch("Tau_rawAntiEle");
    if (b_Tau_rawAntiEle_) { b_Tau_rawAntiEle_->SetAddress(&Tau_rawAntiEle_); }
    b_Tau_rawAntiEle2018_ = tree->GetBranch("Tau_rawAntiEle2018");
    if (b_Tau_rawAntiEle2018_) { b_Tau_rawAntiEle2018_->SetAddress(&Tau_rawAntiEle2018_); }
    b_Tau_rawAntiEleCat_ = tree->GetBranch("Tau_rawAntiEleCat");
    if (b_Tau_rawAntiEleCat_) { b_Tau_rawAntiEleCat_->SetAddress(&Tau_rawAntiEleCat_); }
    b_Tau_rawAntiEleCat2018_ = tree->GetBranch("Tau_rawAntiEleCat2018");
    if (b_Tau_rawAntiEleCat2018_) { b_Tau_rawAntiEleCat2018_->SetAddress(&Tau_rawAntiEleCat2018_); }
    b_Tau_rawDeepTau2017v2p1VSe_ = tree->GetBranch("Tau_rawDeepTau2017v2p1VSe");
    if (b_Tau_rawDeepTau2017v2p1VSe_) { b_Tau_rawDeepTau2017v2p1VSe_->SetAddress(&Tau_rawDeepTau2017v2p1VSe_); }
    b_Tau_rawDeepTau2017v2p1VSjet_ = tree->GetBranch("Tau_rawDeepTau2017v2p1VSjet");
    if (b_Tau_rawDeepTau2017v2p1VSjet_) { b_Tau_rawDeepTau2017v2p1VSjet_->SetAddress(&Tau_rawDeepTau2017v2p1VSjet_); }
    b_Tau_rawDeepTau2017v2p1VSmu_ = tree->GetBranch("Tau_rawDeepTau2017v2p1VSmu");
    if (b_Tau_rawDeepTau2017v2p1VSmu_) { b_Tau_rawDeepTau2017v2p1VSmu_->SetAddress(&Tau_rawDeepTau2017v2p1VSmu_); }
    b_Tau_rawDeepTau2018v2p5VSe_ = tree->GetBranch("Tau_rawDeepTau2018v2p5VSe");
    if (b_Tau_rawDeepTau2018v2p5VSe_) { b_Tau_rawDeepTau2018v2p5VSe_->SetAddress(&Tau_rawDeepTau2018v2p5VSe_); }
    b_Tau_rawDeepTau2018v2p5VSjet_ = tree->GetBranch("Tau_rawDeepTau2018v2p5VSjet");
    if (b_Tau_rawDeepTau2018v2p5VSjet_) { b_Tau_rawDeepTau2018v2p5VSjet_->SetAddress(&Tau_rawDeepTau2018v2p5VSjet_); }
    b_Tau_rawDeepTau2018v2p5VSmu_ = tree->GetBranch("Tau_rawDeepTau2018v2p5VSmu");
    if (b_Tau_rawDeepTau2018v2p5VSmu_) { b_Tau_rawDeepTau2018v2p5VSmu_->SetAddress(&Tau_rawDeepTau2018v2p5VSmu_); }
    b_Tau_rawIso_ = tree->GetBranch("Tau_rawIso");
    if (b_Tau_rawIso_) { b_Tau_rawIso_->SetAddress(&Tau_rawIso_); }
    b_Tau_rawIsodR03_ = tree->GetBranch("Tau_rawIsodR03");
    if (b_Tau_rawIsodR03_) { b_Tau_rawIsodR03_->SetAddress(&Tau_rawIsodR03_); }
    b_Tau_rawMVAnewDM2017v2_ = tree->GetBranch("Tau_rawMVAnewDM2017v2");
    if (b_Tau_rawMVAnewDM2017v2_) { b_Tau_rawMVAnewDM2017v2_->SetAddress(&Tau_rawMVAnewDM2017v2_); }
    b_Tau_rawMVAoldDM_ = tree->GetBranch("Tau_rawMVAoldDM");
    if (b_Tau_rawMVAoldDM_) { b_Tau_rawMVAoldDM_->SetAddress(&Tau_rawMVAoldDM_); }
    b_Tau_rawMVAoldDM2017v1_ = tree->GetBranch("Tau_rawMVAoldDM2017v1");
    if (b_Tau_rawMVAoldDM2017v1_) { b_Tau_rawMVAoldDM2017v1_->SetAddress(&Tau_rawMVAoldDM2017v1_); }
    b_Tau_rawMVAoldDM2017v2_ = tree->GetBranch("Tau_rawMVAoldDM2017v2");
    if (b_Tau_rawMVAoldDM2017v2_) { b_Tau_rawMVAoldDM2017v2_->SetAddress(&Tau_rawMVAoldDM2017v2_); }
    b_Tau_rawMVAoldDMdR032017v2_ = tree->GetBranch("Tau_rawMVAoldDMdR032017v2");
    if (b_Tau_rawMVAoldDMdR032017v2_) { b_Tau_rawMVAoldDMdR032017v2_->SetAddress(&Tau_rawMVAoldDMdR032017v2_); }
    b_Tau_svIdx1_ = tree->GetBranch("Tau_svIdx1");
    if (b_Tau_svIdx1_) { b_Tau_svIdx1_->SetAddress(&Tau_svIdx1_); }
    b_Tau_svIdx2_ = tree->GetBranch("Tau_svIdx2");
    if (b_Tau_svIdx2_) { b_Tau_svIdx2_->SetAddress(&Tau_svIdx2_); }
    b_TkMET_phi_ = tree->GetBranch("TkMET_phi");
    if (b_TkMET_phi_) { b_TkMET_phi_->SetAddress(&TkMET_phi_); }
    b_TkMET_pt_ = tree->GetBranch("TkMET_pt");
    if (b_TkMET_pt_) { b_TkMET_pt_->SetAddress(&TkMET_pt_); }
    b_TkMET_sumEt_ = tree->GetBranch("TkMET_sumEt");
    if (b_TkMET_sumEt_) { b_TkMET_sumEt_->SetAddress(&TkMET_sumEt_); }
    b_TrigObj_eta_ = tree->GetBranch("TrigObj_eta");
    if (b_TrigObj_eta_) { b_TrigObj_eta_->SetAddress(&TrigObj_eta_); }
    b_TrigObj_filterBits_ = tree->GetBranch("TrigObj_filterBits");
    if (b_TrigObj_filterBits_) { b_TrigObj_filterBits_->SetAddress(&TrigObj_filterBits_); }
    b_TrigObj_id_ = tree->GetBranch("TrigObj_id");
    if (b_TrigObj_id_) { b_TrigObj_id_->SetAddress(&TrigObj_id_); }
    b_TrigObj_l1charge_ = tree->GetBranch("TrigObj_l1charge");
    if (b_TrigObj_l1charge_) { b_TrigObj_l1charge_->SetAddress(&TrigObj_l1charge_); }
    b_TrigObj_l1iso_ = tree->GetBranch("TrigObj_l1iso");
    if (b_TrigObj_l1iso_) { b_TrigObj_l1iso_->SetAddress(&TrigObj_l1iso_); }
    b_TrigObj_l1pt_ = tree->GetBranch("TrigObj_l1pt");
    if (b_TrigObj_l1pt_) { b_TrigObj_l1pt_->SetAddress(&TrigObj_l1pt_); }
    b_TrigObj_l1pt_2_ = tree->GetBranch("TrigObj_l1pt_2");
    if (b_TrigObj_l1pt_2_) { b_TrigObj_l1pt_2_->SetAddress(&TrigObj_l1pt_2_); }
    b_TrigObj_l2pt_ = tree->GetBranch("TrigObj_l2pt");
    if (b_TrigObj_l2pt_) { b_TrigObj_l2pt_->SetAddress(&TrigObj_l2pt_); }
    b_TrigObj_phi_ = tree->GetBranch("TrigObj_phi");
    if (b_TrigObj_phi_) { b_TrigObj_phi_->SetAddress(&TrigObj_phi_); }
    b_TrigObj_pt_ = tree->GetBranch("TrigObj_pt");
    if (b_TrigObj_pt_) { b_TrigObj_pt_->SetAddress(&TrigObj_pt_); }
    b_WCnames_ = tree->GetBranch("WCnames");
    if (b_WCnames_) { b_WCnames_->SetAddress(&WCnames_); }
    b_boostedTau_charge_ = tree->GetBranch("boostedTau_charge");
    if (b_boostedTau_charge_) { b_boostedTau_charge_->SetAddress(&boostedTau_charge_); }
    b_boostedTau_chargedIso_ = tree->GetBranch("boostedTau_chargedIso");
    if (b_boostedTau_chargedIso_) { b_boostedTau_chargedIso_->SetAddress(&boostedTau_chargedIso_); }
    b_boostedTau_decayMode_ = tree->GetBranch("boostedTau_decayMode");
    if (b_boostedTau_decayMode_) { b_boostedTau_decayMode_->SetAddress(&boostedTau_decayMode_); }
    b_boostedTau_eta_ = tree->GetBranch("boostedTau_eta");
    if (b_boostedTau_eta_) { b_boostedTau_eta_->SetAddress(&boostedTau_eta_); }
    b_boostedTau_genPartFlav_ = tree->GetBranch("boostedTau_genPartFlav");
    if (b_boostedTau_genPartFlav_) { b_boostedTau_genPartFlav_->SetAddress(&boostedTau_genPartFlav_); }
    b_boostedTau_genPartIdx_ = tree->GetBranch("boostedTau_genPartIdx");
    if (b_boostedTau_genPartIdx_) { b_boostedTau_genPartIdx_->SetAddress(&boostedTau_genPartIdx_); }
    b_boostedTau_idAntiEle2018_ = tree->GetBranch("boostedTau_idAntiEle2018");
    if (b_boostedTau_idAntiEle2018_) { b_boostedTau_idAntiEle2018_->SetAddress(&boostedTau_idAntiEle2018_); }
    b_boostedTau_idAntiMu_ = tree->GetBranch("boostedTau_idAntiMu");
    if (b_boostedTau_idAntiMu_) { b_boostedTau_idAntiMu_->SetAddress(&boostedTau_idAntiMu_); }
    b_boostedTau_idMVAnewDM2017v2_ = tree->GetBranch("boostedTau_idMVAnewDM2017v2");
    if (b_boostedTau_idMVAnewDM2017v2_) { b_boostedTau_idMVAnewDM2017v2_->SetAddress(&boostedTau_idMVAnewDM2017v2_); }
    b_boostedTau_idMVAoldDM2017v2_ = tree->GetBranch("boostedTau_idMVAoldDM2017v2");
    if (b_boostedTau_idMVAoldDM2017v2_) { b_boostedTau_idMVAoldDM2017v2_->SetAddress(&boostedTau_idMVAoldDM2017v2_); }
    b_boostedTau_idMVAoldDMdR032017v2_ = tree->GetBranch("boostedTau_idMVAoldDMdR032017v2");
    if (b_boostedTau_idMVAoldDMdR032017v2_) { b_boostedTau_idMVAoldDMdR032017v2_->SetAddress(&boostedTau_idMVAoldDMdR032017v2_); }
    b_boostedTau_jetIdx_ = tree->GetBranch("boostedTau_jetIdx");
    if (b_boostedTau_jetIdx_) { b_boostedTau_jetIdx_->SetAddress(&boostedTau_jetIdx_); }
    b_boostedTau_leadTkDeltaEta_ = tree->GetBranch("boostedTau_leadTkDeltaEta");
    if (b_boostedTau_leadTkDeltaEta_) { b_boostedTau_leadTkDeltaEta_->SetAddress(&boostedTau_leadTkDeltaEta_); }
    b_boostedTau_leadTkDeltaPhi_ = tree->GetBranch("boostedTau_leadTkDeltaPhi");
    if (b_boostedTau_leadTkDeltaPhi_) { b_boostedTau_leadTkDeltaPhi_->SetAddress(&boostedTau_leadTkDeltaPhi_); }
    b_boostedTau_leadTkPtOverTauPt_ = tree->GetBranch("boostedTau_leadTkPtOverTauPt");
    if (b_boostedTau_leadTkPtOverTauPt_) { b_boostedTau_leadTkPtOverTauPt_->SetAddress(&boostedTau_leadTkPtOverTauPt_); }
    b_boostedTau_mass_ = tree->GetBranch("boostedTau_mass");
    if (b_boostedTau_mass_) { b_boostedTau_mass_->SetAddress(&boostedTau_mass_); }
    b_boostedTau_neutralIso_ = tree->GetBranch("boostedTau_neutralIso");
    if (b_boostedTau_neutralIso_) { b_boostedTau_neutralIso_->SetAddress(&boostedTau_neutralIso_); }
    b_boostedTau_phi_ = tree->GetBranch("boostedTau_phi");
    if (b_boostedTau_phi_) { b_boostedTau_phi_->SetAddress(&boostedTau_phi_); }
    b_boostedTau_photonsOutsideSignalCone_ = tree->GetBranch("boostedTau_photonsOutsideSignalCone");
    if (b_boostedTau_photonsOutsideSignalCone_) { b_boostedTau_photonsOutsideSignalCone_->SetAddress(&boostedTau_photonsOutsideSignalCone_); }
    b_boostedTau_pt_ = tree->GetBranch("boostedTau_pt");
    if (b_boostedTau_pt_) { b_boostedTau_pt_->SetAddress(&boostedTau_pt_); }
    b_boostedTau_puCorr_ = tree->GetBranch("boostedTau_puCorr");
    if (b_boostedTau_puCorr_) { b_boostedTau_puCorr_->SetAddress(&boostedTau_puCorr_); }
    b_boostedTau_rawAntiEle2018_ = tree->GetBranch("boostedTau_rawAntiEle2018");
    if (b_boostedTau_rawAntiEle2018_) { b_boostedTau_rawAntiEle2018_->SetAddress(&boostedTau_rawAntiEle2018_); }
    b_boostedTau_rawAntiEleCat2018_ = tree->GetBranch("boostedTau_rawAntiEleCat2018");
    if (b_boostedTau_rawAntiEleCat2018_) { b_boostedTau_rawAntiEleCat2018_->SetAddress(&boostedTau_rawAntiEleCat2018_); }
    b_boostedTau_rawIso_ = tree->GetBranch("boostedTau_rawIso");
    if (b_boostedTau_rawIso_) { b_boostedTau_rawIso_->SetAddress(&boostedTau_rawIso_); }
    b_boostedTau_rawIsodR03_ = tree->GetBranch("boostedTau_rawIsodR03");
    if (b_boostedTau_rawIsodR03_) { b_boostedTau_rawIsodR03_->SetAddress(&boostedTau_rawIsodR03_); }
    b_boostedTau_rawMVAnewDM2017v2_ = tree->GetBranch("boostedTau_rawMVAnewDM2017v2");
    if (b_boostedTau_rawMVAnewDM2017v2_) { b_boostedTau_rawMVAnewDM2017v2_->SetAddress(&boostedTau_rawMVAnewDM2017v2_); }
    b_boostedTau_rawMVAoldDM2017v2_ = tree->GetBranch("boostedTau_rawMVAoldDM2017v2");
    if (b_boostedTau_rawMVAoldDM2017v2_) { b_boostedTau_rawMVAoldDM2017v2_->SetAddress(&boostedTau_rawMVAoldDM2017v2_); }
    b_boostedTau_rawMVAoldDMdR032017v2_ = tree->GetBranch("boostedTau_rawMVAoldDMdR032017v2");
    if (b_boostedTau_rawMVAoldDMdR032017v2_) { b_boostedTau_rawMVAoldDMdR032017v2_->SetAddress(&boostedTau_rawMVAoldDMdR032017v2_); }
    b_btagWeight_CSVV2_ = tree->GetBranch("btagWeight_CSVV2");
    if (b_btagWeight_CSVV2_) { b_btagWeight_CSVV2_->SetAddress(&btagWeight_CSVV2_); }
    b_btagWeight_DeepCSVB_ = tree->GetBranch("btagWeight_DeepCSVB");
    if (b_btagWeight_DeepCSVB_) { b_btagWeight_DeepCSVB_->SetAddress(&btagWeight_DeepCSVB_); }
    b_bunchCrossing_ = tree->GetBranch("bunchCrossing");
    if (b_bunchCrossing_) { b_bunchCrossing_->SetAddress(&bunchCrossing_); }
    b_event_ = tree->GetBranch("event");
    if (b_event_) { b_event_->SetAddress(&event_); }
    b_fixedGridRhoFastjetAll_ = tree->GetBranch("fixedGridRhoFastjetAll");
    if (b_fixedGridRhoFastjetAll_) { b_fixedGridRhoFastjetAll_->SetAddress(&fixedGridRhoFastjetAll_); }
    b_fixedGridRhoFastjetCentral_ = tree->GetBranch("fixedGridRhoFastjetCentral");
    if (b_fixedGridRhoFastjetCentral_) { b_fixedGridRhoFastjetCentral_->SetAddress(&fixedGridRhoFastjetCentral_); }
    b_fixedGridRhoFastjetCentralCalo_ = tree->GetBranch("fixedGridRhoFastjetCentralCalo");
    if (b_fixedGridRhoFastjetCentralCalo_) { b_fixedGridRhoFastjetCentralCalo_->SetAddress(&fixedGridRhoFastjetCentralCalo_); }
    b_fixedGridRhoFastjetCentralChargedPileUp_ = tree->GetBranch("fixedGridRhoFastjetCentralChargedPileUp");
    if (b_fixedGridRhoFastjetCentralChargedPileUp_) { b_fixedGridRhoFastjetCentralChargedPileUp_->SetAddress(&fixedGridRhoFastjetCentralChargedPileUp_); }
    b_fixedGridRhoFastjetCentralNeutral_ = tree->GetBranch("fixedGridRhoFastjetCentralNeutral");
    if (b_fixedGridRhoFastjetCentralNeutral_) { b_fixedGridRhoFastjetCentralNeutral_->SetAddress(&fixedGridRhoFastjetCentralNeutral_); }
    b_genTtbarId_ = tree->GetBranch("genTtbarId");
    if (b_genTtbarId_) { b_genTtbarId_->SetAddress(&genTtbarId_); }
    b_genWeight_ = tree->GetBranch("genWeight");
    if (b_genWeight_) { b_genWeight_->SetAddress(&genWeight_); }
    b_luminosityBlock_ = tree->GetBranch("luminosityBlock");
    if (b_luminosityBlock_) { b_luminosityBlock_->SetAddress(&luminosityBlock_); }
    b_nCorrT1METJet_ = tree->GetBranch("nCorrT1METJet");
    if (b_nCorrT1METJet_) { b_nCorrT1METJet_->SetAddress(&nCorrT1METJet_); }
    b_nEFTfitCoefficients_ = tree->GetBranch("nEFTfitCoefficients");
    if (b_nEFTfitCoefficients_) { b_nEFTfitCoefficients_->SetAddress(&nEFTfitCoefficients_); }
    b_nElectron_ = tree->GetBranch("nElectron");
    if (b_nElectron_) { b_nElectron_->SetAddress(&nElectron_); }
    b_nFatJet_ = tree->GetBranch("nFatJet");
    if (b_nFatJet_) { b_nFatJet_->SetAddress(&nFatJet_); }
    b_nFsrPhoton_ = tree->GetBranch("nFsrPhoton");
    if (b_nFsrPhoton_) { b_nFsrPhoton_->SetAddress(&nFsrPhoton_); }
    b_nGenDressedLepton_ = tree->GetBranch("nGenDressedLepton");
    if (b_nGenDressedLepton_) { b_nGenDressedLepton_->SetAddress(&nGenDressedLepton_); }
    b_nGenIsolatedPhoton_ = tree->GetBranch("nGenIsolatedPhoton");
    if (b_nGenIsolatedPhoton_) { b_nGenIsolatedPhoton_->SetAddress(&nGenIsolatedPhoton_); }
    b_nGenJet_ = tree->GetBranch("nGenJet");
    if (b_nGenJet_) { b_nGenJet_->SetAddress(&nGenJet_); }
    b_nGenJetAK8_ = tree->GetBranch("nGenJetAK8");
    if (b_nGenJetAK8_) { b_nGenJetAK8_->SetAddress(&nGenJetAK8_); }
    b_nGenPart_ = tree->GetBranch("nGenPart");
    if (b_nGenPart_) { b_nGenPart_->SetAddress(&nGenPart_); }
    b_nGenProton_ = tree->GetBranch("nGenProton");
    if (b_nGenProton_) { b_nGenProton_->SetAddress(&nGenProton_); }
    b_nGenVisTau_ = tree->GetBranch("nGenVisTau");
    if (b_nGenVisTau_) { b_nGenVisTau_->SetAddress(&nGenVisTau_); }
    b_nIsoTrack_ = tree->GetBranch("nIsoTrack");
    if (b_nIsoTrack_) { b_nIsoTrack_->SetAddress(&nIsoTrack_); }
    b_nJet_ = tree->GetBranch("nJet");
    if (b_nJet_) { b_nJet_->SetAddress(&nJet_); }
    b_nLHEPart_ = tree->GetBranch("nLHEPart");
    if (b_nLHEPart_) { b_nLHEPart_->SetAddress(&nLHEPart_); }
    b_nLHEPdfWeight_ = tree->GetBranch("nLHEPdfWeight");
    if (b_nLHEPdfWeight_) { b_nLHEPdfWeight_->SetAddress(&nLHEPdfWeight_); }
    b_nLHEReweightingWeight_ = tree->GetBranch("nLHEReweightingWeight");
    if (b_nLHEReweightingWeight_) { b_nLHEReweightingWeight_->SetAddress(&nLHEReweightingWeight_); }
    b_nLHEScaleWeight_ = tree->GetBranch("nLHEScaleWeight");
    if (b_nLHEScaleWeight_) { b_nLHEScaleWeight_->SetAddress(&nLHEScaleWeight_); }
    b_nLowPtElectron_ = tree->GetBranch("nLowPtElectron");
    if (b_nLowPtElectron_) { b_nLowPtElectron_->SetAddress(&nLowPtElectron_); }
    b_nMuon_ = tree->GetBranch("nMuon");
    if (b_nMuon_) { b_nMuon_->SetAddress(&nMuon_); }
    b_nOtherPV_ = tree->GetBranch("nOtherPV");
    if (b_nOtherPV_) { b_nOtherPV_->SetAddress(&nOtherPV_); }
    b_nPPSLocalTrack_ = tree->GetBranch("nPPSLocalTrack");
    if (b_nPPSLocalTrack_) { b_nPPSLocalTrack_->SetAddress(&nPPSLocalTrack_); }
    b_nPSWeight_ = tree->GetBranch("nPSWeight");
    if (b_nPSWeight_) { b_nPSWeight_->SetAddress(&nPSWeight_); }
    b_nPhoton_ = tree->GetBranch("nPhoton");
    if (b_nPhoton_) { b_nPhoton_->SetAddress(&nPhoton_); }
    b_nProton_multiRP_ = tree->GetBranch("nProton_multiRP");
    if (b_nProton_multiRP_) { b_nProton_multiRP_->SetAddress(&nProton_multiRP_); }
    b_nProton_singleRP_ = tree->GetBranch("nProton_singleRP");
    if (b_nProton_singleRP_) { b_nProton_singleRP_->SetAddress(&nProton_singleRP_); }
    b_nSV_ = tree->GetBranch("nSV");
    if (b_nSV_) { b_nSV_->SetAddress(&nSV_); }
    b_nSoftActivityJet_ = tree->GetBranch("nSoftActivityJet");
    if (b_nSoftActivityJet_) { b_nSoftActivityJet_->SetAddress(&nSoftActivityJet_); }
    b_nSubGenJetAK8_ = tree->GetBranch("nSubGenJetAK8");
    if (b_nSubGenJetAK8_) { b_nSubGenJetAK8_->SetAddress(&nSubGenJetAK8_); }
    b_nSubJet_ = tree->GetBranch("nSubJet");
    if (b_nSubJet_) { b_nSubJet_->SetAddress(&nSubJet_); }
    b_nTau_ = tree->GetBranch("nTau");
    if (b_nTau_) { b_nTau_->SetAddress(&nTau_); }
    b_nTrigObj_ = tree->GetBranch("nTrigObj");
    if (b_nTrigObj_) { b_nTrigObj_->SetAddress(&nTrigObj_); }
    b_nWCnames_ = tree->GetBranch("nWCnames");
    if (b_nWCnames_) { b_nWCnames_->SetAddress(&nWCnames_); }
    b_nboostedTau_ = tree->GetBranch("nboostedTau");
    if (b_nboostedTau_) { b_nboostedTau_->SetAddress(&nboostedTau_); }
    b_puWeight_ = tree->GetBranch("puWeight");
    if (b_puWeight_) { b_puWeight_->SetAddress(&puWeight_); }
    b_puWeightDown_ = tree->GetBranch("puWeightDown");
    if (b_puWeightDown_) { b_puWeightDown_->SetAddress(&puWeightDown_); }
    b_puWeightUp_ = tree->GetBranch("puWeightUp");
    if (b_puWeightUp_) { b_puWeightUp_->SetAddress(&puWeightUp_); }
    b_run_ = tree->GetBranch("run");
    if (b_run_) { b_run_->SetAddress(&run_); }
    ParseYear(tree);
}
void Nano::SetYear(int year) {
    year_ = year;
}

void Nano::ParseYear(TTree* tree) {
    // if (year_ != 0) return; // disabled so that per root file that it reads it will always reset it to the correct year.
    year_ = -999;
    TString full_file_path = TString(((TFile*) tree->GetCurrentFile())->GetName());
    if (full_file_path.Contains("RunIIAutumn18NanoAOD")) year_ = 2018;
    else if (full_file_path.Contains("RunIIFall17NanoAOD")) year_ = 2017;
    else if (full_file_path.Contains("RunIISummer16NanoAOD")) year_ = 2016;
    else if (full_file_path.Contains("Run3Summer22")) year_ = 2022;
    // Ultra-legacy
    else if (full_file_path.Contains("RunIISummer20UL18")) year_ = 2018;
    else if (full_file_path.Contains("RunIISummer20UL17")) year_ = 2017;
    else if (full_file_path.Contains("RunIISummer20UL16")) year_ = 2016;
    // Ultra-legacy
    else if (full_file_path.Contains("RunIISummer19UL18")) year_ = 2018;
    else if (full_file_path.Contains("RunIISummer19UL17")) year_ = 2017;
    else if (full_file_path.Contains("RunIISummer19UL16")) year_ = 2016;
    // Data
    else if (full_file_path.Contains("Run2018")) year_ = 2018;
    else if (full_file_path.Contains("Run2017")) year_ = 2017;
    else if (full_file_path.Contains("Run2016")) year_ = 2016;
    else if (full_file_path.Contains("Run2022")) year_ = 2022;
    else throw std::runtime_error("Nano::parseYear():: ERROR - Failed to recognize which year this NanoAOD is !\nPlease make sure the path has one of the following keywords:\n  2016: 'Run2016' or 'RunIISummer16NanoAOD' or 'RunIISummer20UL16'\n  2017: 'Run2017' or 'RunIIFall17NanoAOD' or 'RunIISummer20UL17'\n  2018: 'Run2018' or 'RunIIAutumn18NanoAOD' or 'RunIISummer20UL18'\nOR, use Nano::SetYear(int year) before Nano::Init()");
}


const Int_t &Nano::year() {
    return year_;
}

Bool_t Nano::isData() {
    return !((bool)b_GenPart_pt_);
}



void Nano::PrintUsage() {
    std::cout << "BeamSpot_sigmaZ (uncached/cached calls): " << counter_uncached_BeamSpot_sigmaZ_ << " / " << counter_cached_BeamSpot_sigmaZ_ << std::endl;;
    std::cout << "BeamSpot_sigmaZError (uncached/cached calls): " << counter_uncached_BeamSpot_sigmaZError_ << " / " << counter_cached_BeamSpot_sigmaZError_ << std::endl;;
    std::cout << "BeamSpot_type (uncached/cached calls): " << counter_uncached_BeamSpot_type_ << " / " << counter_cached_BeamSpot_type_ << std::endl;;
    std::cout << "BeamSpot_z (uncached/cached calls): " << counter_uncached_BeamSpot_z_ << " / " << counter_cached_BeamSpot_z_ << std::endl;;
    std::cout << "BeamSpot_zError (uncached/cached calls): " << counter_uncached_BeamSpot_zError_ << " / " << counter_cached_BeamSpot_zError_ << std::endl;;
    std::cout << "CaloMET_phi (uncached/cached calls): " << counter_uncached_CaloMET_phi_ << " / " << counter_cached_CaloMET_phi_ << std::endl;;
    std::cout << "CaloMET_pt (uncached/cached calls): " << counter_uncached_CaloMET_pt_ << " / " << counter_cached_CaloMET_pt_ << std::endl;;
    std::cout << "CaloMET_sumEt (uncached/cached calls): " << counter_uncached_CaloMET_sumEt_ << " / " << counter_cached_CaloMET_sumEt_ << std::endl;;
    std::cout << "ChsMET_phi (uncached/cached calls): " << counter_uncached_ChsMET_phi_ << " / " << counter_cached_ChsMET_phi_ << std::endl;;
    std::cout << "ChsMET_pt (uncached/cached calls): " << counter_uncached_ChsMET_pt_ << " / " << counter_cached_ChsMET_pt_ << std::endl;;
    std::cout << "ChsMET_sumEt (uncached/cached calls): " << counter_uncached_ChsMET_sumEt_ << " / " << counter_cached_ChsMET_sumEt_ << std::endl;;
    std::cout << "CorrT1METJet_area (uncached/cached calls): " << counter_uncached_CorrT1METJet_area_ << " / " << counter_cached_CorrT1METJet_area_ << std::endl;;
    std::cout << "CorrT1METJet_eta (uncached/cached calls): " << counter_uncached_CorrT1METJet_eta_ << " / " << counter_cached_CorrT1METJet_eta_ << std::endl;;
    std::cout << "CorrT1METJet_muonSubtrFactor (uncached/cached calls): " << counter_uncached_CorrT1METJet_muonSubtrFactor_ << " / " << counter_cached_CorrT1METJet_muonSubtrFactor_ << std::endl;;
    std::cout << "CorrT1METJet_phi (uncached/cached calls): " << counter_uncached_CorrT1METJet_phi_ << " / " << counter_cached_CorrT1METJet_phi_ << std::endl;;
    std::cout << "CorrT1METJet_rawPt (uncached/cached calls): " << counter_uncached_CorrT1METJet_rawPt_ << " / " << counter_cached_CorrT1METJet_rawPt_ << std::endl;;
    std::cout << "DeepMETResolutionTune_phi (uncached/cached calls): " << counter_uncached_DeepMETResolutionTune_phi_ << " / " << counter_cached_DeepMETResolutionTune_phi_ << std::endl;;
    std::cout << "DeepMETResolutionTune_pt (uncached/cached calls): " << counter_uncached_DeepMETResolutionTune_pt_ << " / " << counter_cached_DeepMETResolutionTune_pt_ << std::endl;;
    std::cout << "DeepMETResponseTune_phi (uncached/cached calls): " << counter_uncached_DeepMETResponseTune_phi_ << " / " << counter_cached_DeepMETResponseTune_phi_ << std::endl;;
    std::cout << "DeepMETResponseTune_pt (uncached/cached calls): " << counter_uncached_DeepMETResponseTune_pt_ << " / " << counter_cached_DeepMETResponseTune_pt_ << std::endl;;
    std::cout << "EFTfitCoefficients (uncached/cached calls): " << counter_uncached_EFTfitCoefficients_ << " / " << counter_cached_EFTfitCoefficients_ << std::endl;;
    std::cout << "Electron_CutBased_LooseID_SF (uncached/cached calls): " << counter_uncached_Electron_CutBased_LooseID_SF_ << " / " << counter_cached_Electron_CutBased_LooseID_SF_ << std::endl;;
    std::cout << "Electron_CutBased_LooseID_SFerr (uncached/cached calls): " << counter_uncached_Electron_CutBased_LooseID_SFerr_ << " / " << counter_cached_Electron_CutBased_LooseID_SFerr_ << std::endl;;
    std::cout << "Electron_CutBased_MediumID_SF (uncached/cached calls): " << counter_uncached_Electron_CutBased_MediumID_SF_ << " / " << counter_cached_Electron_CutBased_MediumID_SF_ << std::endl;;
    std::cout << "Electron_CutBased_MediumID_SFerr (uncached/cached calls): " << counter_uncached_Electron_CutBased_MediumID_SFerr_ << " / " << counter_cached_Electron_CutBased_MediumID_SFerr_ << std::endl;;
    std::cout << "Electron_CutBased_TightID_SF (uncached/cached calls): " << counter_uncached_Electron_CutBased_TightID_SF_ << " / " << counter_cached_Electron_CutBased_TightID_SF_ << std::endl;;
    std::cout << "Electron_CutBased_TightID_SFerr (uncached/cached calls): " << counter_uncached_Electron_CutBased_TightID_SFerr_ << " / " << counter_cached_Electron_CutBased_TightID_SFerr_ << std::endl;;
    std::cout << "Electron_CutBased_VetoID_SF (uncached/cached calls): " << counter_uncached_Electron_CutBased_VetoID_SF_ << " / " << counter_cached_Electron_CutBased_VetoID_SF_ << std::endl;;
    std::cout << "Electron_CutBased_VetoID_SFerr (uncached/cached calls): " << counter_uncached_Electron_CutBased_VetoID_SFerr_ << " / " << counter_cached_Electron_CutBased_VetoID_SFerr_ << std::endl;;
    std::cout << "Electron_MVAFall17V2Iso_WP80_SF (uncached/cached calls): " << counter_uncached_Electron_MVAFall17V2Iso_WP80_SF_ << " / " << counter_cached_Electron_MVAFall17V2Iso_WP80_SF_ << std::endl;;
    std::cout << "Electron_MVAFall17V2Iso_WP80_SFerr (uncached/cached calls): " << counter_uncached_Electron_MVAFall17V2Iso_WP80_SFerr_ << " / " << counter_cached_Electron_MVAFall17V2Iso_WP80_SFerr_ << std::endl;;
    std::cout << "Electron_MVAFall17V2Iso_WP90_SF (uncached/cached calls): " << counter_uncached_Electron_MVAFall17V2Iso_WP90_SF_ << " / " << counter_cached_Electron_MVAFall17V2Iso_WP90_SF_ << std::endl;;
    std::cout << "Electron_MVAFall17V2Iso_WP90_SFerr (uncached/cached calls): " << counter_uncached_Electron_MVAFall17V2Iso_WP90_SFerr_ << " / " << counter_cached_Electron_MVAFall17V2Iso_WP90_SFerr_ << std::endl;;
    std::cout << "Electron_MVAFall17V2noIso_WP80_SF (uncached/cached calls): " << counter_uncached_Electron_MVAFall17V2noIso_WP80_SF_ << " / " << counter_cached_Electron_MVAFall17V2noIso_WP80_SF_ << std::endl;;
    std::cout << "Electron_MVAFall17V2noIso_WP80_SFerr (uncached/cached calls): " << counter_uncached_Electron_MVAFall17V2noIso_WP80_SFerr_ << " / " << counter_cached_Electron_MVAFall17V2noIso_WP80_SFerr_ << std::endl;;
    std::cout << "Electron_MVAFall17V2noIso_WP90_SF (uncached/cached calls): " << counter_uncached_Electron_MVAFall17V2noIso_WP90_SF_ << " / " << counter_cached_Electron_MVAFall17V2noIso_WP90_SF_ << std::endl;;
    std::cout << "Electron_MVAFall17V2noIso_WP90_SFerr (uncached/cached calls): " << counter_uncached_Electron_MVAFall17V2noIso_WP90_SFerr_ << " / " << counter_cached_Electron_MVAFall17V2noIso_WP90_SFerr_ << std::endl;;
    std::cout << "Electron_RECO_SF (uncached/cached calls): " << counter_uncached_Electron_RECO_SF_ << " / " << counter_cached_Electron_RECO_SF_ << std::endl;;
    std::cout << "Electron_RECO_SFerr (uncached/cached calls): " << counter_uncached_Electron_RECO_SFerr_ << " / " << counter_cached_Electron_RECO_SFerr_ << std::endl;;
    std::cout << "Electron_charge (uncached/cached calls): " << counter_uncached_Electron_charge_ << " / " << counter_cached_Electron_charge_ << std::endl;;
    std::cout << "Electron_cleanmask (uncached/cached calls): " << counter_uncached_Electron_cleanmask_ << " / " << counter_cached_Electron_cleanmask_ << std::endl;;
    std::cout << "Electron_convVeto (uncached/cached calls): " << counter_uncached_Electron_convVeto_ << " / " << counter_cached_Electron_convVeto_ << std::endl;;
    std::cout << "Electron_cutBased (uncached/cached calls): " << counter_uncached_Electron_cutBased_ << " / " << counter_cached_Electron_cutBased_ << std::endl;;
    std::cout << "Electron_cutBased17 (uncached/cached calls): " << counter_uncached_Electron_cutBased17_ << " / " << counter_cached_Electron_cutBased17_ << std::endl;;
    std::cout << "Electron_cutBased_Fall17V2 (uncached/cached calls): " << counter_uncached_Electron_cutBased_Fall17V2_ << " / " << counter_cached_Electron_cutBased_Fall17V2_ << std::endl;;
    std::cout << "Electron_cutBased_Fall17_V1 (uncached/cached calls): " << counter_uncached_Electron_cutBased_Fall17_V1_ << " / " << counter_cached_Electron_cutBased_Fall17_V1_ << std::endl;;
    std::cout << "Electron_cutBased_HEEP (uncached/cached calls): " << counter_uncached_Electron_cutBased_HEEP_ << " / " << counter_cached_Electron_cutBased_HEEP_ << std::endl;;
    std::cout << "Electron_cutBased_HLTPreSel (uncached/cached calls): " << counter_uncached_Electron_cutBased_HLTPreSel_ << " / " << counter_cached_Electron_cutBased_HLTPreSel_ << std::endl;;
    std::cout << "Electron_dEscaleDown (uncached/cached calls): " << counter_uncached_Electron_dEscaleDown_ << " / " << counter_cached_Electron_dEscaleDown_ << std::endl;;
    std::cout << "Electron_dEscaleUp (uncached/cached calls): " << counter_uncached_Electron_dEscaleUp_ << " / " << counter_cached_Electron_dEscaleUp_ << std::endl;;
    std::cout << "Electron_dEsigmaDown (uncached/cached calls): " << counter_uncached_Electron_dEsigmaDown_ << " / " << counter_cached_Electron_dEsigmaDown_ << std::endl;;
    std::cout << "Electron_dEsigmaUp (uncached/cached calls): " << counter_uncached_Electron_dEsigmaUp_ << " / " << counter_cached_Electron_dEsigmaUp_ << std::endl;;
    std::cout << "Electron_deltaEtaSC (uncached/cached calls): " << counter_uncached_Electron_deltaEtaSC_ << " / " << counter_cached_Electron_deltaEtaSC_ << std::endl;;
    std::cout << "Electron_dr03EcalRecHitSumEt (uncached/cached calls): " << counter_uncached_Electron_dr03EcalRecHitSumEt_ << " / " << counter_cached_Electron_dr03EcalRecHitSumEt_ << std::endl;;
    std::cout << "Electron_dr03HcalDepth1TowerSumEt (uncached/cached calls): " << counter_uncached_Electron_dr03HcalDepth1TowerSumEt_ << " / " << counter_cached_Electron_dr03HcalDepth1TowerSumEt_ << std::endl;;
    std::cout << "Electron_dr03TkSumPt (uncached/cached calls): " << counter_uncached_Electron_dr03TkSumPt_ << " / " << counter_cached_Electron_dr03TkSumPt_ << std::endl;;
    std::cout << "Electron_dr03TkSumPtHEEP (uncached/cached calls): " << counter_uncached_Electron_dr03TkSumPtHEEP_ << " / " << counter_cached_Electron_dr03TkSumPtHEEP_ << std::endl;;
    std::cout << "Electron_dxy (uncached/cached calls): " << counter_uncached_Electron_dxy_ << " / " << counter_cached_Electron_dxy_ << std::endl;;
    std::cout << "Electron_dxyErr (uncached/cached calls): " << counter_uncached_Electron_dxyErr_ << " / " << counter_cached_Electron_dxyErr_ << std::endl;;
    std::cout << "Electron_dz (uncached/cached calls): " << counter_uncached_Electron_dz_ << " / " << counter_cached_Electron_dz_ << std::endl;;
    std::cout << "Electron_dzErr (uncached/cached calls): " << counter_uncached_Electron_dzErr_ << " / " << counter_cached_Electron_dzErr_ << std::endl;;
    std::cout << "Electron_eCorr (uncached/cached calls): " << counter_uncached_Electron_eCorr_ << " / " << counter_cached_Electron_eCorr_ << std::endl;;
    std::cout << "Electron_eInvMinusPInv (uncached/cached calls): " << counter_uncached_Electron_eInvMinusPInv_ << " / " << counter_cached_Electron_eInvMinusPInv_ << std::endl;;
    std::cout << "Electron_energyErr (uncached/cached calls): " << counter_uncached_Electron_energyErr_ << " / " << counter_cached_Electron_energyErr_ << std::endl;;
    std::cout << "Electron_eta (uncached/cached calls): " << counter_uncached_Electron_eta_ << " / " << counter_cached_Electron_eta_ << std::endl;;
    std::cout << "Electron_fsrPhotonIdx (uncached/cached calls): " << counter_uncached_Electron_fsrPhotonIdx_ << " / " << counter_cached_Electron_fsrPhotonIdx_ << std::endl;;
    std::cout << "Electron_genPartFlav (uncached/cached calls): " << counter_uncached_Electron_genPartFlav_ << " / " << counter_cached_Electron_genPartFlav_ << std::endl;;
    std::cout << "Electron_genPartIdx (uncached/cached calls): " << counter_uncached_Electron_genPartIdx_ << " / " << counter_cached_Electron_genPartIdx_ << std::endl;;
    std::cout << "Electron_hoe (uncached/cached calls): " << counter_uncached_Electron_hoe_ << " / " << counter_cached_Electron_hoe_ << std::endl;;
    std::cout << "Electron_ip3d (uncached/cached calls): " << counter_uncached_Electron_ip3d_ << " / " << counter_cached_Electron_ip3d_ << std::endl;;
    std::cout << "Electron_isPFcand (uncached/cached calls): " << counter_uncached_Electron_isPFcand_ << " / " << counter_cached_Electron_isPFcand_ << std::endl;;
    std::cout << "Electron_jetIdx (uncached/cached calls): " << counter_uncached_Electron_jetIdx_ << " / " << counter_cached_Electron_jetIdx_ << std::endl;;
    std::cout << "Electron_jetNDauCharged (uncached/cached calls): " << counter_uncached_Electron_jetNDauCharged_ << " / " << counter_cached_Electron_jetNDauCharged_ << std::endl;;
    std::cout << "Electron_jetPtRelv2 (uncached/cached calls): " << counter_uncached_Electron_jetPtRelv2_ << " / " << counter_cached_Electron_jetPtRelv2_ << std::endl;;
    std::cout << "Electron_jetRelIso (uncached/cached calls): " << counter_uncached_Electron_jetRelIso_ << " / " << counter_cached_Electron_jetRelIso_ << std::endl;;
    std::cout << "Electron_jetRelIso_Fall17V2 (uncached/cached calls): " << counter_uncached_Electron_jetRelIso_Fall17V2_ << " / " << counter_cached_Electron_jetRelIso_Fall17V2_ << std::endl;;
    std::cout << "Electron_lostHits (uncached/cached calls): " << counter_uncached_Electron_lostHits_ << " / " << counter_cached_Electron_lostHits_ << std::endl;;
    std::cout << "Electron_mass (uncached/cached calls): " << counter_uncached_Electron_mass_ << " / " << counter_cached_Electron_mass_ << std::endl;;
    std::cout << "Electron_miniPFRelIso_all (uncached/cached calls): " << counter_uncached_Electron_miniPFRelIso_all_ << " / " << counter_cached_Electron_miniPFRelIso_all_ << std::endl;;
    std::cout << "Electron_miniPFRelIso_all_Fall17V2 (uncached/cached calls): " << counter_uncached_Electron_miniPFRelIso_all_Fall17V2_ << " / " << counter_cached_Electron_miniPFRelIso_all_Fall17V2_ << std::endl;;
    std::cout << "Electron_miniPFRelIso_chg (uncached/cached calls): " << counter_uncached_Electron_miniPFRelIso_chg_ << " / " << counter_cached_Electron_miniPFRelIso_chg_ << std::endl;;
    std::cout << "Electron_miniPFRelIso_chg_Fall17V2 (uncached/cached calls): " << counter_uncached_Electron_miniPFRelIso_chg_Fall17V2_ << " / " << counter_cached_Electron_miniPFRelIso_chg_Fall17V2_ << std::endl;;
    std::cout << "Electron_mvaFall17Iso (uncached/cached calls): " << counter_uncached_Electron_mvaFall17Iso_ << " / " << counter_cached_Electron_mvaFall17Iso_ << std::endl;;
    std::cout << "Electron_mvaFall17Iso_WP80 (uncached/cached calls): " << counter_uncached_Electron_mvaFall17Iso_WP80_ << " / " << counter_cached_Electron_mvaFall17Iso_WP80_ << std::endl;;
    std::cout << "Electron_mvaFall17Iso_WP90 (uncached/cached calls): " << counter_uncached_Electron_mvaFall17Iso_WP90_ << " / " << counter_cached_Electron_mvaFall17Iso_WP90_ << std::endl;;
    std::cout << "Electron_mvaFall17Iso_WPL (uncached/cached calls): " << counter_uncached_Electron_mvaFall17Iso_WPL_ << " / " << counter_cached_Electron_mvaFall17Iso_WPL_ << std::endl;;
    std::cout << "Electron_mvaFall17V1Iso (uncached/cached calls): " << counter_uncached_Electron_mvaFall17V1Iso_ << " / " << counter_cached_Electron_mvaFall17V1Iso_ << std::endl;;
    std::cout << "Electron_mvaFall17V1Iso_WP80 (uncached/cached calls): " << counter_uncached_Electron_mvaFall17V1Iso_WP80_ << " / " << counter_cached_Electron_mvaFall17V1Iso_WP80_ << std::endl;;
    std::cout << "Electron_mvaFall17V1Iso_WP90 (uncached/cached calls): " << counter_uncached_Electron_mvaFall17V1Iso_WP90_ << " / " << counter_cached_Electron_mvaFall17V1Iso_WP90_ << std::endl;;
    std::cout << "Electron_mvaFall17V1Iso_WPL (uncached/cached calls): " << counter_uncached_Electron_mvaFall17V1Iso_WPL_ << " / " << counter_cached_Electron_mvaFall17V1Iso_WPL_ << std::endl;;
    std::cout << "Electron_mvaFall17V1noIso (uncached/cached calls): " << counter_uncached_Electron_mvaFall17V1noIso_ << " / " << counter_cached_Electron_mvaFall17V1noIso_ << std::endl;;
    std::cout << "Electron_mvaFall17V1noIso_WP80 (uncached/cached calls): " << counter_uncached_Electron_mvaFall17V1noIso_WP80_ << " / " << counter_cached_Electron_mvaFall17V1noIso_WP80_ << std::endl;;
    std::cout << "Electron_mvaFall17V1noIso_WP90 (uncached/cached calls): " << counter_uncached_Electron_mvaFall17V1noIso_WP90_ << " / " << counter_cached_Electron_mvaFall17V1noIso_WP90_ << std::endl;;
    std::cout << "Electron_mvaFall17V1noIso_WPL (uncached/cached calls): " << counter_uncached_Electron_mvaFall17V1noIso_WPL_ << " / " << counter_cached_Electron_mvaFall17V1noIso_WPL_ << std::endl;;
    std::cout << "Electron_mvaFall17V2Iso (uncached/cached calls): " << counter_uncached_Electron_mvaFall17V2Iso_ << " / " << counter_cached_Electron_mvaFall17V2Iso_ << std::endl;;
    std::cout << "Electron_mvaFall17V2Iso_WP80 (uncached/cached calls): " << counter_uncached_Electron_mvaFall17V2Iso_WP80_ << " / " << counter_cached_Electron_mvaFall17V2Iso_WP80_ << std::endl;;
    std::cout << "Electron_mvaFall17V2Iso_WP90 (uncached/cached calls): " << counter_uncached_Electron_mvaFall17V2Iso_WP90_ << " / " << counter_cached_Electron_mvaFall17V2Iso_WP90_ << std::endl;;
    std::cout << "Electron_mvaFall17V2Iso_WPL (uncached/cached calls): " << counter_uncached_Electron_mvaFall17V2Iso_WPL_ << " / " << counter_cached_Electron_mvaFall17V2Iso_WPL_ << std::endl;;
    std::cout << "Electron_mvaFall17V2noIso (uncached/cached calls): " << counter_uncached_Electron_mvaFall17V2noIso_ << " / " << counter_cached_Electron_mvaFall17V2noIso_ << std::endl;;
    std::cout << "Electron_mvaFall17V2noIso_WP80 (uncached/cached calls): " << counter_uncached_Electron_mvaFall17V2noIso_WP80_ << " / " << counter_cached_Electron_mvaFall17V2noIso_WP80_ << std::endl;;
    std::cout << "Electron_mvaFall17V2noIso_WP90 (uncached/cached calls): " << counter_uncached_Electron_mvaFall17V2noIso_WP90_ << " / " << counter_cached_Electron_mvaFall17V2noIso_WP90_ << std::endl;;
    std::cout << "Electron_mvaFall17V2noIso_WPL (uncached/cached calls): " << counter_uncached_Electron_mvaFall17V2noIso_WPL_ << " / " << counter_cached_Electron_mvaFall17V2noIso_WPL_ << std::endl;;
    std::cout << "Electron_mvaFall17noIso (uncached/cached calls): " << counter_uncached_Electron_mvaFall17noIso_ << " / " << counter_cached_Electron_mvaFall17noIso_ << std::endl;;
    std::cout << "Electron_mvaFall17noIso_WP80 (uncached/cached calls): " << counter_uncached_Electron_mvaFall17noIso_WP80_ << " / " << counter_cached_Electron_mvaFall17noIso_WP80_ << std::endl;;
    std::cout << "Electron_mvaFall17noIso_WP90 (uncached/cached calls): " << counter_uncached_Electron_mvaFall17noIso_WP90_ << " / " << counter_cached_Electron_mvaFall17noIso_WP90_ << std::endl;;
    std::cout << "Electron_mvaFall17noIso_WPL (uncached/cached calls): " << counter_uncached_Electron_mvaFall17noIso_WPL_ << " / " << counter_cached_Electron_mvaFall17noIso_WPL_ << std::endl;;
    std::cout << "Electron_mvaHZZIso (uncached/cached calls): " << counter_uncached_Electron_mvaHZZIso_ << " / " << counter_cached_Electron_mvaHZZIso_ << std::endl;;
    std::cout << "Electron_mvaIso (uncached/cached calls): " << counter_uncached_Electron_mvaIso_ << " / " << counter_cached_Electron_mvaIso_ << std::endl;;
    std::cout << "Electron_mvaIso_Fall17V2 (uncached/cached calls): " << counter_uncached_Electron_mvaIso_Fall17V2_ << " / " << counter_cached_Electron_mvaIso_Fall17V2_ << std::endl;;
    std::cout << "Electron_mvaIso_Fall17V2_WP80 (uncached/cached calls): " << counter_uncached_Electron_mvaIso_Fall17V2_WP80_ << " / " << counter_cached_Electron_mvaIso_Fall17V2_WP80_ << std::endl;;
    std::cout << "Electron_mvaIso_Fall17V2_WP90 (uncached/cached calls): " << counter_uncached_Electron_mvaIso_Fall17V2_WP90_ << " / " << counter_cached_Electron_mvaIso_Fall17V2_WP90_ << std::endl;;
    std::cout << "Electron_mvaIso_Fall17V2_WPL (uncached/cached calls): " << counter_uncached_Electron_mvaIso_Fall17V2_WPL_ << " / " << counter_cached_Electron_mvaIso_Fall17V2_WPL_ << std::endl;;
    std::cout << "Electron_mvaIso_WP80 (uncached/cached calls): " << counter_uncached_Electron_mvaIso_WP80_ << " / " << counter_cached_Electron_mvaIso_WP80_ << std::endl;;
    std::cout << "Electron_mvaIso_WP90 (uncached/cached calls): " << counter_uncached_Electron_mvaIso_WP90_ << " / " << counter_cached_Electron_mvaIso_WP90_ << std::endl;;
    std::cout << "Electron_mvaNoIso (uncached/cached calls): " << counter_uncached_Electron_mvaNoIso_ << " / " << counter_cached_Electron_mvaNoIso_ << std::endl;;
    std::cout << "Electron_mvaNoIso_Fall17V2 (uncached/cached calls): " << counter_uncached_Electron_mvaNoIso_Fall17V2_ << " / " << counter_cached_Electron_mvaNoIso_Fall17V2_ << std::endl;;
    std::cout << "Electron_mvaNoIso_Fall17V2_WP80 (uncached/cached calls): " << counter_uncached_Electron_mvaNoIso_Fall17V2_WP80_ << " / " << counter_cached_Electron_mvaNoIso_Fall17V2_WP80_ << std::endl;;
    std::cout << "Electron_mvaNoIso_Fall17V2_WP90 (uncached/cached calls): " << counter_uncached_Electron_mvaNoIso_Fall17V2_WP90_ << " / " << counter_cached_Electron_mvaNoIso_Fall17V2_WP90_ << std::endl;;
    std::cout << "Electron_mvaNoIso_Fall17V2_WPL (uncached/cached calls): " << counter_uncached_Electron_mvaNoIso_Fall17V2_WPL_ << " / " << counter_cached_Electron_mvaNoIso_Fall17V2_WPL_ << std::endl;;
    std::cout << "Electron_mvaNoIso_WP80 (uncached/cached calls): " << counter_uncached_Electron_mvaNoIso_WP80_ << " / " << counter_cached_Electron_mvaNoIso_WP80_ << std::endl;;
    std::cout << "Electron_mvaNoIso_WP90 (uncached/cached calls): " << counter_uncached_Electron_mvaNoIso_WP90_ << " / " << counter_cached_Electron_mvaNoIso_WP90_ << std::endl;;
    std::cout << "Electron_mvaSpring16GP (uncached/cached calls): " << counter_uncached_Electron_mvaSpring16GP_ << " / " << counter_cached_Electron_mvaSpring16GP_ << std::endl;;
    std::cout << "Electron_mvaSpring16GP_WP80 (uncached/cached calls): " << counter_uncached_Electron_mvaSpring16GP_WP80_ << " / " << counter_cached_Electron_mvaSpring16GP_WP80_ << std::endl;;
    std::cout << "Electron_mvaSpring16GP_WP90 (uncached/cached calls): " << counter_uncached_Electron_mvaSpring16GP_WP90_ << " / " << counter_cached_Electron_mvaSpring16GP_WP90_ << std::endl;;
    std::cout << "Electron_mvaSpring16HZZ (uncached/cached calls): " << counter_uncached_Electron_mvaSpring16HZZ_ << " / " << counter_cached_Electron_mvaSpring16HZZ_ << std::endl;;
    std::cout << "Electron_mvaSpring16HZZ_WPL (uncached/cached calls): " << counter_uncached_Electron_mvaSpring16HZZ_WPL_ << " / " << counter_cached_Electron_mvaSpring16HZZ_WPL_ << std::endl;;
    std::cout << "Electron_mvaTTH (uncached/cached calls): " << counter_uncached_Electron_mvaTTH_ << " / " << counter_cached_Electron_mvaTTH_ << std::endl;;
    // NOTE: this is a custom branch; temporarily added for convenience
    std::cout << "Electron_mvaTTHUL (uncached/cached calls): " << counter_uncached_Electron_mvaTTHUL_ << " / " << counter_cached_Electron_mvaTTHUL_ << std::endl;;
    //
    std::cout << "Electron_p4 (uncached/cached calls): " << counter_uncached_Electron_p4_ << " / " << counter_cached_Electron_p4_ << std::endl;;
    std::cout << "Electron_pdgId (uncached/cached calls): " << counter_uncached_Electron_pdgId_ << " / " << counter_cached_Electron_pdgId_ << std::endl;;
    std::cout << "Electron_pfRelIso03_all (uncached/cached calls): " << counter_uncached_Electron_pfRelIso03_all_ << " / " << counter_cached_Electron_pfRelIso03_all_ << std::endl;;
    std::cout << "Electron_pfRelIso03_all_Fall17V2 (uncached/cached calls): " << counter_uncached_Electron_pfRelIso03_all_Fall17V2_ << " / " << counter_cached_Electron_pfRelIso03_all_Fall17V2_ << std::endl;;
    std::cout << "Electron_pfRelIso03_chg (uncached/cached calls): " << counter_uncached_Electron_pfRelIso03_chg_ << " / " << counter_cached_Electron_pfRelIso03_chg_ << std::endl;;
    std::cout << "Electron_pfRelIso03_chg_Fall17V2 (uncached/cached calls): " << counter_uncached_Electron_pfRelIso03_chg_Fall17V2_ << " / " << counter_cached_Electron_pfRelIso03_chg_Fall17V2_ << std::endl;;
    std::cout << "Electron_phi (uncached/cached calls): " << counter_uncached_Electron_phi_ << " / " << counter_cached_Electron_phi_ << std::endl;;
    std::cout << "Electron_photonIdx (uncached/cached calls): " << counter_uncached_Electron_photonIdx_ << " / " << counter_cached_Electron_photonIdx_ << std::endl;;
    std::cout << "Electron_pt (uncached/cached calls): " << counter_uncached_Electron_pt_ << " / " << counter_cached_Electron_pt_ << std::endl;;
    std::cout << "Electron_r9 (uncached/cached calls): " << counter_uncached_Electron_r9_ << " / " << counter_cached_Electron_r9_ << std::endl;;
    std::cout << "Electron_scEtOverPt (uncached/cached calls): " << counter_uncached_Electron_scEtOverPt_ << " / " << counter_cached_Electron_scEtOverPt_ << std::endl;;
    std::cout << "Electron_seedGain (uncached/cached calls): " << counter_uncached_Electron_seedGain_ << " / " << counter_cached_Electron_seedGain_ << std::endl;;
    std::cout << "Electron_seediEtaOriX (uncached/cached calls): " << counter_uncached_Electron_seediEtaOriX_ << " / " << counter_cached_Electron_seediEtaOriX_ << std::endl;;
    std::cout << "Electron_seediPhiOriY (uncached/cached calls): " << counter_uncached_Electron_seediPhiOriY_ << " / " << counter_cached_Electron_seediPhiOriY_ << std::endl;;
    std::cout << "Electron_sieie (uncached/cached calls): " << counter_uncached_Electron_sieie_ << " / " << counter_cached_Electron_sieie_ << std::endl;;
    std::cout << "Electron_sip3d (uncached/cached calls): " << counter_uncached_Electron_sip3d_ << " / " << counter_cached_Electron_sip3d_ << std::endl;;
    std::cout << "Electron_svIdx (uncached/cached calls): " << counter_uncached_Electron_svIdx_ << " / " << counter_cached_Electron_svIdx_ << std::endl;;
    std::cout << "Electron_tightCharge (uncached/cached calls): " << counter_uncached_Electron_tightCharge_ << " / " << counter_cached_Electron_tightCharge_ << std::endl;;
    std::cout << "Electron_vidNestedWPBitmap (uncached/cached calls): " << counter_uncached_Electron_vidNestedWPBitmap_ << " / " << counter_cached_Electron_vidNestedWPBitmap_ << std::endl;;
    std::cout << "Electron_vidNestedWPBitmapHEEP (uncached/cached calls): " << counter_uncached_Electron_vidNestedWPBitmapHEEP_ << " / " << counter_cached_Electron_vidNestedWPBitmapHEEP_ << std::endl;;
    std::cout << "Electron_vidNestedWPBitmap_Fall17V2 (uncached/cached calls): " << counter_uncached_Electron_vidNestedWPBitmap_Fall17V2_ << " / " << counter_cached_Electron_vidNestedWPBitmap_Fall17V2_ << std::endl;;
    std::cout << "FatJet_area (uncached/cached calls): " << counter_uncached_FatJet_area_ << " / " << counter_cached_FatJet_area_ << std::endl;;
    std::cout << "FatJet_btagCMVA (uncached/cached calls): " << counter_uncached_FatJet_btagCMVA_ << " / " << counter_cached_FatJet_btagCMVA_ << std::endl;;
    std::cout << "FatJet_btagCSVV2 (uncached/cached calls): " << counter_uncached_FatJet_btagCSVV2_ << " / " << counter_cached_FatJet_btagCSVV2_ << std::endl;;
    std::cout << "FatJet_btagDDBvL (uncached/cached calls): " << counter_uncached_FatJet_btagDDBvL_ << " / " << counter_cached_FatJet_btagDDBvL_ << std::endl;;
    std::cout << "FatJet_btagDDBvLV2 (uncached/cached calls): " << counter_uncached_FatJet_btagDDBvLV2_ << " / " << counter_cached_FatJet_btagDDBvLV2_ << std::endl;;
    std::cout << "FatJet_btagDDBvL_noMD (uncached/cached calls): " << counter_uncached_FatJet_btagDDBvL_noMD_ << " / " << counter_cached_FatJet_btagDDBvL_noMD_ << std::endl;;
    std::cout << "FatJet_btagDDCvB (uncached/cached calls): " << counter_uncached_FatJet_btagDDCvB_ << " / " << counter_cached_FatJet_btagDDCvB_ << std::endl;;
    std::cout << "FatJet_btagDDCvBV2 (uncached/cached calls): " << counter_uncached_FatJet_btagDDCvBV2_ << " / " << counter_cached_FatJet_btagDDCvBV2_ << std::endl;;
    std::cout << "FatJet_btagDDCvB_noMD (uncached/cached calls): " << counter_uncached_FatJet_btagDDCvB_noMD_ << " / " << counter_cached_FatJet_btagDDCvB_noMD_ << std::endl;;
    std::cout << "FatJet_btagDDCvL (uncached/cached calls): " << counter_uncached_FatJet_btagDDCvL_ << " / " << counter_cached_FatJet_btagDDCvL_ << std::endl;;
    std::cout << "FatJet_btagDDCvLV2 (uncached/cached calls): " << counter_uncached_FatJet_btagDDCvLV2_ << " / " << counter_cached_FatJet_btagDDCvLV2_ << std::endl;;
    std::cout << "FatJet_btagDDCvL_noMD (uncached/cached calls): " << counter_uncached_FatJet_btagDDCvL_noMD_ << " / " << counter_cached_FatJet_btagDDCvL_noMD_ << std::endl;;
    std::cout << "FatJet_btagDeepB (uncached/cached calls): " << counter_uncached_FatJet_btagDeepB_ << " / " << counter_cached_FatJet_btagDeepB_ << std::endl;;
    std::cout << "FatJet_btagHbb (uncached/cached calls): " << counter_uncached_FatJet_btagHbb_ << " / " << counter_cached_FatJet_btagHbb_ << std::endl;;
    std::cout << "FatJet_corr_JEC (uncached/cached calls): " << counter_uncached_FatJet_corr_JEC_ << " / " << counter_cached_FatJet_corr_JEC_ << std::endl;;
    std::cout << "FatJet_corr_JER (uncached/cached calls): " << counter_uncached_FatJet_corr_JER_ << " / " << counter_cached_FatJet_corr_JER_ << std::endl;;
    std::cout << "FatJet_corr_JMR (uncached/cached calls): " << counter_uncached_FatJet_corr_JMR_ << " / " << counter_cached_FatJet_corr_JMR_ << std::endl;;
    std::cout << "FatJet_corr_JMS (uncached/cached calls): " << counter_uncached_FatJet_corr_JMS_ << " / " << counter_cached_FatJet_corr_JMS_ << std::endl;;
    std::cout << "FatJet_deepTagMD_H4qvsQCD (uncached/cached calls): " << counter_uncached_FatJet_deepTagMD_H4qvsQCD_ << " / " << counter_cached_FatJet_deepTagMD_H4qvsQCD_ << std::endl;;
    std::cout << "FatJet_deepTagMD_HbbvsQCD (uncached/cached calls): " << counter_uncached_FatJet_deepTagMD_HbbvsQCD_ << " / " << counter_cached_FatJet_deepTagMD_HbbvsQCD_ << std::endl;;
    std::cout << "FatJet_deepTagMD_TvsQCD (uncached/cached calls): " << counter_uncached_FatJet_deepTagMD_TvsQCD_ << " / " << counter_cached_FatJet_deepTagMD_TvsQCD_ << std::endl;;
    std::cout << "FatJet_deepTagMD_WvsQCD (uncached/cached calls): " << counter_uncached_FatJet_deepTagMD_WvsQCD_ << " / " << counter_cached_FatJet_deepTagMD_WvsQCD_ << std::endl;;
    std::cout << "FatJet_deepTagMD_ZHbbvsQCD (uncached/cached calls): " << counter_uncached_FatJet_deepTagMD_ZHbbvsQCD_ << " / " << counter_cached_FatJet_deepTagMD_ZHbbvsQCD_ << std::endl;;
    std::cout << "FatJet_deepTagMD_ZHccvsQCD (uncached/cached calls): " << counter_uncached_FatJet_deepTagMD_ZHccvsQCD_ << " / " << counter_cached_FatJet_deepTagMD_ZHccvsQCD_ << std::endl;;
    std::cout << "FatJet_deepTagMD_ZbbvsQCD (uncached/cached calls): " << counter_uncached_FatJet_deepTagMD_ZbbvsQCD_ << " / " << counter_cached_FatJet_deepTagMD_ZbbvsQCD_ << std::endl;;
    std::cout << "FatJet_deepTagMD_ZvsQCD (uncached/cached calls): " << counter_uncached_FatJet_deepTagMD_ZvsQCD_ << " / " << counter_cached_FatJet_deepTagMD_ZvsQCD_ << std::endl;;
    std::cout << "FatJet_deepTagMD_bbvsLight (uncached/cached calls): " << counter_uncached_FatJet_deepTagMD_bbvsLight_ << " / " << counter_cached_FatJet_deepTagMD_bbvsLight_ << std::endl;;
    std::cout << "FatJet_deepTagMD_ccvsLight (uncached/cached calls): " << counter_uncached_FatJet_deepTagMD_ccvsLight_ << " / " << counter_cached_FatJet_deepTagMD_ccvsLight_ << std::endl;;
    std::cout << "FatJet_deepTag_H (uncached/cached calls): " << counter_uncached_FatJet_deepTag_H_ << " / " << counter_cached_FatJet_deepTag_H_ << std::endl;;
    std::cout << "FatJet_deepTag_QCD (uncached/cached calls): " << counter_uncached_FatJet_deepTag_QCD_ << " / " << counter_cached_FatJet_deepTag_QCD_ << std::endl;;
    std::cout << "FatJet_deepTag_QCDothers (uncached/cached calls): " << counter_uncached_FatJet_deepTag_QCDothers_ << " / " << counter_cached_FatJet_deepTag_QCDothers_ << std::endl;;
    std::cout << "FatJet_deepTag_TvsQCD (uncached/cached calls): " << counter_uncached_FatJet_deepTag_TvsQCD_ << " / " << counter_cached_FatJet_deepTag_TvsQCD_ << std::endl;;
    std::cout << "FatJet_deepTag_WvsQCD (uncached/cached calls): " << counter_uncached_FatJet_deepTag_WvsQCD_ << " / " << counter_cached_FatJet_deepTag_WvsQCD_ << std::endl;;
    std::cout << "FatJet_deepTag_ZvsQCD (uncached/cached calls): " << counter_uncached_FatJet_deepTag_ZvsQCD_ << " / " << counter_cached_FatJet_deepTag_ZvsQCD_ << std::endl;;
    std::cout << "FatJet_electronIdx3SJ (uncached/cached calls): " << counter_uncached_FatJet_electronIdx3SJ_ << " / " << counter_cached_FatJet_electronIdx3SJ_ << std::endl;;
    std::cout << "FatJet_eta (uncached/cached calls): " << counter_uncached_FatJet_eta_ << " / " << counter_cached_FatJet_eta_ << std::endl;;
    std::cout << "FatJet_genJetAK8Idx (uncached/cached calls): " << counter_uncached_FatJet_genJetAK8Idx_ << " / " << counter_cached_FatJet_genJetAK8Idx_ << std::endl;;
    std::cout << "FatJet_hadronFlavour (uncached/cached calls): " << counter_uncached_FatJet_hadronFlavour_ << " / " << counter_cached_FatJet_hadronFlavour_ << std::endl;;
    std::cout << "FatJet_jetId (uncached/cached calls): " << counter_uncached_FatJet_jetId_ << " / " << counter_cached_FatJet_jetId_ << std::endl;;
    std::cout << "FatJet_lsf3 (uncached/cached calls): " << counter_uncached_FatJet_lsf3_ << " / " << counter_cached_FatJet_lsf3_ << std::endl;;
    std::cout << "FatJet_mass (uncached/cached calls): " << counter_uncached_FatJet_mass_ << " / " << counter_cached_FatJet_mass_ << std::endl;;
    std::cout << "FatJet_mass_jerDown (uncached/cached calls): " << counter_uncached_FatJet_mass_jerDown_ << " / " << counter_cached_FatJet_mass_jerDown_ << std::endl;;
    std::cout << "FatJet_mass_jerUp (uncached/cached calls): " << counter_uncached_FatJet_mass_jerUp_ << " / " << counter_cached_FatJet_mass_jerUp_ << std::endl;;
    std::cout << "FatJet_mass_jesTotalDown (uncached/cached calls): " << counter_uncached_FatJet_mass_jesTotalDown_ << " / " << counter_cached_FatJet_mass_jesTotalDown_ << std::endl;;
    std::cout << "FatJet_mass_jesTotalUp (uncached/cached calls): " << counter_uncached_FatJet_mass_jesTotalUp_ << " / " << counter_cached_FatJet_mass_jesTotalUp_ << std::endl;;
    std::cout << "FatJet_mass_jmrDown (uncached/cached calls): " << counter_uncached_FatJet_mass_jmrDown_ << " / " << counter_cached_FatJet_mass_jmrDown_ << std::endl;;
    std::cout << "FatJet_mass_jmrUp (uncached/cached calls): " << counter_uncached_FatJet_mass_jmrUp_ << " / " << counter_cached_FatJet_mass_jmrUp_ << std::endl;;
    std::cout << "FatJet_mass_jmsDown (uncached/cached calls): " << counter_uncached_FatJet_mass_jmsDown_ << " / " << counter_cached_FatJet_mass_jmsDown_ << std::endl;;
    std::cout << "FatJet_mass_jmsUp (uncached/cached calls): " << counter_uncached_FatJet_mass_jmsUp_ << " / " << counter_cached_FatJet_mass_jmsUp_ << std::endl;;
    std::cout << "FatJet_mass_nom (uncached/cached calls): " << counter_uncached_FatJet_mass_nom_ << " / " << counter_cached_FatJet_mass_nom_ << std::endl;;
    std::cout << "FatJet_mass_raw (uncached/cached calls): " << counter_uncached_FatJet_mass_raw_ << " / " << counter_cached_FatJet_mass_raw_ << std::endl;;
    std::cout << "FatJet_msoftdrop (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_ << " / " << counter_cached_FatJet_msoftdrop_ << std::endl;;
    std::cout << "FatJet_msoftdrop_corr_JMR (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_corr_JMR_ << " / " << counter_cached_FatJet_msoftdrop_corr_JMR_ << std::endl;;
    std::cout << "FatJet_msoftdrop_corr_JMS (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_corr_JMS_ << " / " << counter_cached_FatJet_msoftdrop_corr_JMS_ << std::endl;;
    std::cout << "FatJet_msoftdrop_corr_PUPPI (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_corr_PUPPI_ << " / " << counter_cached_FatJet_msoftdrop_corr_PUPPI_ << std::endl;;
    std::cout << "FatJet_msoftdrop_jerDown (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_jerDown_ << " / " << counter_cached_FatJet_msoftdrop_jerDown_ << std::endl;;
    std::cout << "FatJet_msoftdrop_jerUp (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_jerUp_ << " / " << counter_cached_FatJet_msoftdrop_jerUp_ << std::endl;;
    std::cout << "FatJet_msoftdrop_jesTotalDown (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_jesTotalDown_ << " / " << counter_cached_FatJet_msoftdrop_jesTotalDown_ << std::endl;;
    std::cout << "FatJet_msoftdrop_jesTotalUp (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_jesTotalUp_ << " / " << counter_cached_FatJet_msoftdrop_jesTotalUp_ << std::endl;;
    std::cout << "FatJet_msoftdrop_jmrDown (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_jmrDown_ << " / " << counter_cached_FatJet_msoftdrop_jmrDown_ << std::endl;;
    std::cout << "FatJet_msoftdrop_jmrUp (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_jmrUp_ << " / " << counter_cached_FatJet_msoftdrop_jmrUp_ << std::endl;;
    std::cout << "FatJet_msoftdrop_jmsDown (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_jmsDown_ << " / " << counter_cached_FatJet_msoftdrop_jmsDown_ << std::endl;;
    std::cout << "FatJet_msoftdrop_jmsUp (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_jmsUp_ << " / " << counter_cached_FatJet_msoftdrop_jmsUp_ << std::endl;;
    std::cout << "FatJet_msoftdrop_nom (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_nom_ << " / " << counter_cached_FatJet_msoftdrop_nom_ << std::endl;;
    std::cout << "FatJet_msoftdrop_raw (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_raw_ << " / " << counter_cached_FatJet_msoftdrop_raw_ << std::endl;;
    std::cout << "FatJet_msoftdrop_tau21DDT_jerDown (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_tau21DDT_jerDown_ << " / " << counter_cached_FatJet_msoftdrop_tau21DDT_jerDown_ << std::endl;;
    std::cout << "FatJet_msoftdrop_tau21DDT_jerUp (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_tau21DDT_jerUp_ << " / " << counter_cached_FatJet_msoftdrop_tau21DDT_jerUp_ << std::endl;;
    std::cout << "FatJet_msoftdrop_tau21DDT_jmrDown (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_tau21DDT_jmrDown_ << " / " << counter_cached_FatJet_msoftdrop_tau21DDT_jmrDown_ << std::endl;;
    std::cout << "FatJet_msoftdrop_tau21DDT_jmrUp (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_tau21DDT_jmrUp_ << " / " << counter_cached_FatJet_msoftdrop_tau21DDT_jmrUp_ << std::endl;;
    std::cout << "FatJet_msoftdrop_tau21DDT_jmsDown (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_tau21DDT_jmsDown_ << " / " << counter_cached_FatJet_msoftdrop_tau21DDT_jmsDown_ << std::endl;;
    std::cout << "FatJet_msoftdrop_tau21DDT_jmsUp (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_tau21DDT_jmsUp_ << " / " << counter_cached_FatJet_msoftdrop_tau21DDT_jmsUp_ << std::endl;;
    std::cout << "FatJet_msoftdrop_tau21DDT_nom (uncached/cached calls): " << counter_uncached_FatJet_msoftdrop_tau21DDT_nom_ << " / " << counter_cached_FatJet_msoftdrop_tau21DDT_nom_ << std::endl;;
    std::cout << "FatJet_muonIdx3SJ (uncached/cached calls): " << counter_uncached_FatJet_muonIdx3SJ_ << " / " << counter_cached_FatJet_muonIdx3SJ_ << std::endl;;
    std::cout << "FatJet_n2b1 (uncached/cached calls): " << counter_uncached_FatJet_n2b1_ << " / " << counter_cached_FatJet_n2b1_ << std::endl;;
    std::cout << "FatJet_n3b1 (uncached/cached calls): " << counter_uncached_FatJet_n3b1_ << " / " << counter_cached_FatJet_n3b1_ << std::endl;;
    std::cout << "FatJet_nBHadrons (uncached/cached calls): " << counter_uncached_FatJet_nBHadrons_ << " / " << counter_cached_FatJet_nBHadrons_ << std::endl;;
    std::cout << "FatJet_nCHadrons (uncached/cached calls): " << counter_uncached_FatJet_nCHadrons_ << " / " << counter_cached_FatJet_nCHadrons_ << std::endl;;
    std::cout << "FatJet_nConstituents (uncached/cached calls): " << counter_uncached_FatJet_nConstituents_ << " / " << counter_cached_FatJet_nConstituents_ << std::endl;;
    std::cout << "FatJet_p4 (uncached/cached calls): " << counter_uncached_FatJet_p4_ << " / " << counter_cached_FatJet_p4_ << std::endl;;
    std::cout << "FatJet_particleNetMD_QCD (uncached/cached calls): " << counter_uncached_FatJet_particleNetMD_QCD_ << " / " << counter_cached_FatJet_particleNetMD_QCD_ << std::endl;;
    std::cout << "FatJet_particleNetMD_Xbb (uncached/cached calls): " << counter_uncached_FatJet_particleNetMD_Xbb_ << " / " << counter_cached_FatJet_particleNetMD_Xbb_ << std::endl;;
    std::cout << "FatJet_particleNetMD_Xcc (uncached/cached calls): " << counter_uncached_FatJet_particleNetMD_Xcc_ << " / " << counter_cached_FatJet_particleNetMD_Xcc_ << std::endl;;
    std::cout << "FatJet_particleNetMD_Xqq (uncached/cached calls): " << counter_uncached_FatJet_particleNetMD_Xqq_ << " / " << counter_cached_FatJet_particleNetMD_Xqq_ << std::endl;;
    std::cout << "FatJet_particleNet_H4qvsQCD (uncached/cached calls): " << counter_uncached_FatJet_particleNet_H4qvsQCD_ << " / " << counter_cached_FatJet_particleNet_H4qvsQCD_ << std::endl;;
    std::cout << "FatJet_particleNet_HbbvsQCD (uncached/cached calls): " << counter_uncached_FatJet_particleNet_HbbvsQCD_ << " / " << counter_cached_FatJet_particleNet_HbbvsQCD_ << std::endl;;
    std::cout << "FatJet_particleNet_HccvsQCD (uncached/cached calls): " << counter_uncached_FatJet_particleNet_HccvsQCD_ << " / " << counter_cached_FatJet_particleNet_HccvsQCD_ << std::endl;;
    std::cout << "FatJet_particleNet_QCD (uncached/cached calls): " << counter_uncached_FatJet_particleNet_QCD_ << " / " << counter_cached_FatJet_particleNet_QCD_ << std::endl;;
    std::cout << "FatJet_particleNet_TvsQCD (uncached/cached calls): " << counter_uncached_FatJet_particleNet_TvsQCD_ << " / " << counter_cached_FatJet_particleNet_TvsQCD_ << std::endl;;
    std::cout << "FatJet_particleNet_WvsQCD (uncached/cached calls): " << counter_uncached_FatJet_particleNet_WvsQCD_ << " / " << counter_cached_FatJet_particleNet_WvsQCD_ << std::endl;;
    std::cout << "FatJet_particleNet_ZvsQCD (uncached/cached calls): " << counter_uncached_FatJet_particleNet_ZvsQCD_ << " / " << counter_cached_FatJet_particleNet_ZvsQCD_ << std::endl;;
    std::cout << "FatJet_particleNet_mass (uncached/cached calls): " << counter_uncached_FatJet_particleNet_mass_ << " / " << counter_cached_FatJet_particleNet_mass_ << std::endl;;
    std::cout << "FatJet_phi (uncached/cached calls): " << counter_uncached_FatJet_phi_ << " / " << counter_cached_FatJet_phi_ << std::endl;;
    std::cout << "FatJet_pt (uncached/cached calls): " << counter_uncached_FatJet_pt_ << " / " << counter_cached_FatJet_pt_ << std::endl;;
    std::cout << "FatJet_pt_jerDown (uncached/cached calls): " << counter_uncached_FatJet_pt_jerDown_ << " / " << counter_cached_FatJet_pt_jerDown_ << std::endl;;
    std::cout << "FatJet_pt_jerUp (uncached/cached calls): " << counter_uncached_FatJet_pt_jerUp_ << " / " << counter_cached_FatJet_pt_jerUp_ << std::endl;;
    std::cout << "FatJet_pt_jesTotalDown (uncached/cached calls): " << counter_uncached_FatJet_pt_jesTotalDown_ << " / " << counter_cached_FatJet_pt_jesTotalDown_ << std::endl;;
    std::cout << "FatJet_pt_jesTotalUp (uncached/cached calls): " << counter_uncached_FatJet_pt_jesTotalUp_ << " / " << counter_cached_FatJet_pt_jesTotalUp_ << std::endl;;
    std::cout << "FatJet_pt_nom (uncached/cached calls): " << counter_uncached_FatJet_pt_nom_ << " / " << counter_cached_FatJet_pt_nom_ << std::endl;;
    std::cout << "FatJet_pt_raw (uncached/cached calls): " << counter_uncached_FatJet_pt_raw_ << " / " << counter_cached_FatJet_pt_raw_ << std::endl;;
    std::cout << "FatJet_rawFactor (uncached/cached calls): " << counter_uncached_FatJet_rawFactor_ << " / " << counter_cached_FatJet_rawFactor_ << std::endl;;
    std::cout << "FatJet_subJetIdx1 (uncached/cached calls): " << counter_uncached_FatJet_subJetIdx1_ << " / " << counter_cached_FatJet_subJetIdx1_ << std::endl;;
    std::cout << "FatJet_subJetIdx2 (uncached/cached calls): " << counter_uncached_FatJet_subJetIdx2_ << " / " << counter_cached_FatJet_subJetIdx2_ << std::endl;;
    std::cout << "FatJet_tau1 (uncached/cached calls): " << counter_uncached_FatJet_tau1_ << " / " << counter_cached_FatJet_tau1_ << std::endl;;
    std::cout << "FatJet_tau2 (uncached/cached calls): " << counter_uncached_FatJet_tau2_ << " / " << counter_cached_FatJet_tau2_ << std::endl;;
    std::cout << "FatJet_tau3 (uncached/cached calls): " << counter_uncached_FatJet_tau3_ << " / " << counter_cached_FatJet_tau3_ << std::endl;;
    std::cout << "FatJet_tau4 (uncached/cached calls): " << counter_uncached_FatJet_tau4_ << " / " << counter_cached_FatJet_tau4_ << std::endl;;
    std::cout << "Flag_BadChargedCandidateFilter (uncached/cached calls): " << counter_uncached_Flag_BadChargedCandidateFilter_ << " / " << counter_cached_Flag_BadChargedCandidateFilter_ << std::endl;;
    std::cout << "Flag_BadChargedCandidateFilter_pRECO (uncached/cached calls): " << counter_uncached_Flag_BadChargedCandidateFilter_pRECO_ << " / " << counter_cached_Flag_BadChargedCandidateFilter_pRECO_ << std::endl;;
    std::cout << "Flag_BadChargedCandidateSummer16Filter (uncached/cached calls): " << counter_uncached_Flag_BadChargedCandidateSummer16Filter_ << " / " << counter_cached_Flag_BadChargedCandidateSummer16Filter_ << std::endl;;
    std::cout << "Flag_BadChargedCandidateSummer16Filter_pRECO (uncached/cached calls): " << counter_uncached_Flag_BadChargedCandidateSummer16Filter_pRECO_ << " / " << counter_cached_Flag_BadChargedCandidateSummer16Filter_pRECO_ << std::endl;;
    std::cout << "Flag_BadPFMuonDzFilter (uncached/cached calls): " << counter_uncached_Flag_BadPFMuonDzFilter_ << " / " << counter_cached_Flag_BadPFMuonDzFilter_ << std::endl;;
    std::cout << "Flag_BadPFMuonFilter (uncached/cached calls): " << counter_uncached_Flag_BadPFMuonFilter_ << " / " << counter_cached_Flag_BadPFMuonFilter_ << std::endl;;
    std::cout << "Flag_BadPFMuonFilter_pRECO (uncached/cached calls): " << counter_uncached_Flag_BadPFMuonFilter_pRECO_ << " / " << counter_cached_Flag_BadPFMuonFilter_pRECO_ << std::endl;;
    std::cout << "Flag_BadPFMuonSummer16Filter (uncached/cached calls): " << counter_uncached_Flag_BadPFMuonSummer16Filter_ << " / " << counter_cached_Flag_BadPFMuonSummer16Filter_ << std::endl;;
    std::cout << "Flag_BadPFMuonSummer16Filter_pRECO (uncached/cached calls): " << counter_uncached_Flag_BadPFMuonSummer16Filter_pRECO_ << " / " << counter_cached_Flag_BadPFMuonSummer16Filter_pRECO_ << std::endl;;
    std::cout << "Flag_CSCTightHalo2015Filter (uncached/cached calls): " << counter_uncached_Flag_CSCTightHalo2015Filter_ << " / " << counter_cached_Flag_CSCTightHalo2015Filter_ << std::endl;;
    std::cout << "Flag_CSCTightHalo2015Filter_pRECO (uncached/cached calls): " << counter_uncached_Flag_CSCTightHalo2015Filter_pRECO_ << " / " << counter_cached_Flag_CSCTightHalo2015Filter_pRECO_ << std::endl;;
    std::cout << "Flag_CSCTightHaloFilter (uncached/cached calls): " << counter_uncached_Flag_CSCTightHaloFilter_ << " / " << counter_cached_Flag_CSCTightHaloFilter_ << std::endl;;
    std::cout << "Flag_CSCTightHaloFilter_pRECO (uncached/cached calls): " << counter_uncached_Flag_CSCTightHaloFilter_pRECO_ << " / " << counter_cached_Flag_CSCTightHaloFilter_pRECO_ << std::endl;;
    std::cout << "Flag_CSCTightHaloTrkMuUnvetoFilter (uncached/cached calls): " << counter_uncached_Flag_CSCTightHaloTrkMuUnvetoFilter_ << " / " << counter_cached_Flag_CSCTightHaloTrkMuUnvetoFilter_ << std::endl;;
    std::cout << "Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO (uncached/cached calls): " << counter_uncached_Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO_ << " / " << counter_cached_Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO_ << std::endl;;
    std::cout << "Flag_EcalDeadCellBoundaryEnergyFilter (uncached/cached calls): " << counter_uncached_Flag_EcalDeadCellBoundaryEnergyFilter_ << " / " << counter_cached_Flag_EcalDeadCellBoundaryEnergyFilter_ << std::endl;;
    std::cout << "Flag_EcalDeadCellBoundaryEnergyFilter_pRECO (uncached/cached calls): " << counter_uncached_Flag_EcalDeadCellBoundaryEnergyFilter_pRECO_ << " / " << counter_cached_Flag_EcalDeadCellBoundaryEnergyFilter_pRECO_ << std::endl;;
    std::cout << "Flag_EcalDeadCellTriggerPrimitiveFilter (uncached/cached calls): " << counter_uncached_Flag_EcalDeadCellTriggerPrimitiveFilter_ << " / " << counter_cached_Flag_EcalDeadCellTriggerPrimitiveFilter_ << std::endl;;
    std::cout << "Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO (uncached/cached calls): " << counter_uncached_Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO_ << " / " << counter_cached_Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO_ << std::endl;;
    std::cout << "Flag_HBHENoiseFilter (uncached/cached calls): " << counter_uncached_Flag_HBHENoiseFilter_ << " / " << counter_cached_Flag_HBHENoiseFilter_ << std::endl;;
    std::cout << "Flag_HBHENoiseFilter_pRECO (uncached/cached calls): " << counter_uncached_Flag_HBHENoiseFilter_pRECO_ << " / " << counter_cached_Flag_HBHENoiseFilter_pRECO_ << std::endl;;
    std::cout << "Flag_HBHENoiseIsoFilter (uncached/cached calls): " << counter_uncached_Flag_HBHENoiseIsoFilter_ << " / " << counter_cached_Flag_HBHENoiseIsoFilter_ << std::endl;;
    std::cout << "Flag_HBHENoiseIsoFilter_pRECO (uncached/cached calls): " << counter_uncached_Flag_HBHENoiseIsoFilter_pRECO_ << " / " << counter_cached_Flag_HBHENoiseIsoFilter_pRECO_ << std::endl;;
    std::cout << "Flag_HcalStripHaloFilter (uncached/cached calls): " << counter_uncached_Flag_HcalStripHaloFilter_ << " / " << counter_cached_Flag_HcalStripHaloFilter_ << std::endl;;
    std::cout << "Flag_HcalStripHaloFilter_pRECO (uncached/cached calls): " << counter_uncached_Flag_HcalStripHaloFilter_pRECO_ << " / " << counter_cached_Flag_HcalStripHaloFilter_pRECO_ << std::endl;;
    std::cout << "Flag_METFilters (uncached/cached calls): " << counter_uncached_Flag_METFilters_ << " / " << counter_cached_Flag_METFilters_ << std::endl;;
    std::cout << "Flag_METFilters_pRECO (uncached/cached calls): " << counter_uncached_Flag_METFilters_pRECO_ << " / " << counter_cached_Flag_METFilters_pRECO_ << std::endl;;
    std::cout << "Flag_chargedHadronTrackResolutionFilter (uncached/cached calls): " << counter_uncached_Flag_chargedHadronTrackResolutionFilter_ << " / " << counter_cached_Flag_chargedHadronTrackResolutionFilter_ << std::endl;;
    std::cout << "Flag_chargedHadronTrackResolutionFilter_pRECO (uncached/cached calls): " << counter_uncached_Flag_chargedHadronTrackResolutionFilter_pRECO_ << " / " << counter_cached_Flag_chargedHadronTrackResolutionFilter_pRECO_ << std::endl;;
    std::cout << "Flag_ecalBadCalibFilter (uncached/cached calls): " << counter_uncached_Flag_ecalBadCalibFilter_ << " / " << counter_cached_Flag_ecalBadCalibFilter_ << std::endl;;
    std::cout << "Flag_ecalBadCalibFilter_pRECO (uncached/cached calls): " << counter_uncached_Flag_ecalBadCalibFilter_pRECO_ << " / " << counter_cached_Flag_ecalBadCalibFilter_pRECO_ << std::endl;;
    std::cout << "Flag_ecalLaserCorrFilter (uncached/cached calls): " << counter_uncached_Flag_ecalLaserCorrFilter_ << " / " << counter_cached_Flag_ecalLaserCorrFilter_ << std::endl;;
    std::cout << "Flag_ecalLaserCorrFilter_pRECO (uncached/cached calls): " << counter_uncached_Flag_ecalLaserCorrFilter_pRECO_ << " / " << counter_cached_Flag_ecalLaserCorrFilter_pRECO_ << std::endl;;
    std::cout << "Flag_eeBadScFilter (uncached/cached calls): " << counter_uncached_Flag_eeBadScFilter_ << " / " << counter_cached_Flag_eeBadScFilter_ << std::endl;;
    std::cout << "Flag_eeBadScFilter_pRECO (uncached/cached calls): " << counter_uncached_Flag_eeBadScFilter_pRECO_ << " / " << counter_cached_Flag_eeBadScFilter_pRECO_ << std::endl;;
    std::cout << "Flag_globalSuperTightHalo2016Filter (uncached/cached calls): " << counter_uncached_Flag_globalSuperTightHalo2016Filter_ << " / " << counter_cached_Flag_globalSuperTightHalo2016Filter_ << std::endl;;
    std::cout << "Flag_globalSuperTightHalo2016Filter_pRECO (uncached/cached calls): " << counter_uncached_Flag_globalSuperTightHalo2016Filter_pRECO_ << " / " << counter_cached_Flag_globalSuperTightHalo2016Filter_pRECO_ << std::endl;;
    std::cout << "Flag_globalTightHalo2016Filter (uncached/cached calls): " << counter_uncached_Flag_globalTightHalo2016Filter_ << " / " << counter_cached_Flag_globalTightHalo2016Filter_ << std::endl;;
    std::cout << "Flag_globalTightHalo2016Filter_pRECO (uncached/cached calls): " << counter_uncached_Flag_globalTightHalo2016Filter_pRECO_ << " / " << counter_cached_Flag_globalTightHalo2016Filter_pRECO_ << std::endl;;
    std::cout << "Flag_goodVertices (uncached/cached calls): " << counter_uncached_Flag_goodVertices_ << " / " << counter_cached_Flag_goodVertices_ << std::endl;;
    std::cout << "Flag_goodVertices_pRECO (uncached/cached calls): " << counter_uncached_Flag_goodVertices_pRECO_ << " / " << counter_cached_Flag_goodVertices_pRECO_ << std::endl;;
    std::cout << "Flag_hcalLaserEventFilter (uncached/cached calls): " << counter_uncached_Flag_hcalLaserEventFilter_ << " / " << counter_cached_Flag_hcalLaserEventFilter_ << std::endl;;
    std::cout << "Flag_hcalLaserEventFilter_pRECO (uncached/cached calls): " << counter_uncached_Flag_hcalLaserEventFilter_pRECO_ << " / " << counter_cached_Flag_hcalLaserEventFilter_pRECO_ << std::endl;;
    std::cout << "Flag_hfNoisyHitsFilter (uncached/cached calls): " << counter_uncached_Flag_hfNoisyHitsFilter_ << " / " << counter_cached_Flag_hfNoisyHitsFilter_ << std::endl;;
    std::cout << "Flag_muonBadTrackFilter (uncached/cached calls): " << counter_uncached_Flag_muonBadTrackFilter_ << " / " << counter_cached_Flag_muonBadTrackFilter_ << std::endl;;
    std::cout << "Flag_muonBadTrackFilter_pRECO (uncached/cached calls): " << counter_uncached_Flag_muonBadTrackFilter_pRECO_ << " / " << counter_cached_Flag_muonBadTrackFilter_pRECO_ << std::endl;;
    std::cout << "Flag_trkPOGFilters (uncached/cached calls): " << counter_uncached_Flag_trkPOGFilters_ << " / " << counter_cached_Flag_trkPOGFilters_ << std::endl;;
    std::cout << "Flag_trkPOGFilters_pRECO (uncached/cached calls): " << counter_uncached_Flag_trkPOGFilters_pRECO_ << " / " << counter_cached_Flag_trkPOGFilters_pRECO_ << std::endl;;
    std::cout << "Flag_trkPOG_logErrorTooManyClusters (uncached/cached calls): " << counter_uncached_Flag_trkPOG_logErrorTooManyClusters_ << " / " << counter_cached_Flag_trkPOG_logErrorTooManyClusters_ << std::endl;;
    std::cout << "Flag_trkPOG_logErrorTooManyClusters_pRECO (uncached/cached calls): " << counter_uncached_Flag_trkPOG_logErrorTooManyClusters_pRECO_ << " / " << counter_cached_Flag_trkPOG_logErrorTooManyClusters_pRECO_ << std::endl;;
    std::cout << "Flag_trkPOG_manystripclus53X (uncached/cached calls): " << counter_uncached_Flag_trkPOG_manystripclus53X_ << " / " << counter_cached_Flag_trkPOG_manystripclus53X_ << std::endl;;
    std::cout << "Flag_trkPOG_manystripclus53X_pRECO (uncached/cached calls): " << counter_uncached_Flag_trkPOG_manystripclus53X_pRECO_ << " / " << counter_cached_Flag_trkPOG_manystripclus53X_pRECO_ << std::endl;;
    std::cout << "Flag_trkPOG_toomanystripclus53X (uncached/cached calls): " << counter_uncached_Flag_trkPOG_toomanystripclus53X_ << " / " << counter_cached_Flag_trkPOG_toomanystripclus53X_ << std::endl;;
    std::cout << "Flag_trkPOG_toomanystripclus53X_pRECO (uncached/cached calls): " << counter_uncached_Flag_trkPOG_toomanystripclus53X_pRECO_ << " / " << counter_cached_Flag_trkPOG_toomanystripclus53X_pRECO_ << std::endl;;
    std::cout << "FsrPhoton_dROverEt2 (uncached/cached calls): " << counter_uncached_FsrPhoton_dROverEt2_ << " / " << counter_cached_FsrPhoton_dROverEt2_ << std::endl;;
    std::cout << "FsrPhoton_electronIdx (uncached/cached calls): " << counter_uncached_FsrPhoton_electronIdx_ << " / " << counter_cached_FsrPhoton_electronIdx_ << std::endl;;
    std::cout << "FsrPhoton_eta (uncached/cached calls): " << counter_uncached_FsrPhoton_eta_ << " / " << counter_cached_FsrPhoton_eta_ << std::endl;;
    std::cout << "FsrPhoton_muonIdx (uncached/cached calls): " << counter_uncached_FsrPhoton_muonIdx_ << " / " << counter_cached_FsrPhoton_muonIdx_ << std::endl;;
    std::cout << "FsrPhoton_phi (uncached/cached calls): " << counter_uncached_FsrPhoton_phi_ << " / " << counter_cached_FsrPhoton_phi_ << std::endl;;
    std::cout << "FsrPhoton_pt (uncached/cached calls): " << counter_uncached_FsrPhoton_pt_ << " / " << counter_cached_FsrPhoton_pt_ << std::endl;;
    std::cout << "FsrPhoton_relIso03 (uncached/cached calls): " << counter_uncached_FsrPhoton_relIso03_ << " / " << counter_cached_FsrPhoton_relIso03_ << std::endl;;
    std::cout << "GenDressedLepton_eta (uncached/cached calls): " << counter_uncached_GenDressedLepton_eta_ << " / " << counter_cached_GenDressedLepton_eta_ << std::endl;;
    std::cout << "GenDressedLepton_hasTauAnc (uncached/cached calls): " << counter_uncached_GenDressedLepton_hasTauAnc_ << " / " << counter_cached_GenDressedLepton_hasTauAnc_ << std::endl;;
    std::cout << "GenDressedLepton_mass (uncached/cached calls): " << counter_uncached_GenDressedLepton_mass_ << " / " << counter_cached_GenDressedLepton_mass_ << std::endl;;
    std::cout << "GenDressedLepton_p4 (uncached/cached calls): " << counter_uncached_GenDressedLepton_p4_ << " / " << counter_cached_GenDressedLepton_p4_ << std::endl;;
    std::cout << "GenDressedLepton_pdgId (uncached/cached calls): " << counter_uncached_GenDressedLepton_pdgId_ << " / " << counter_cached_GenDressedLepton_pdgId_ << std::endl;;
    std::cout << "GenDressedLepton_phi (uncached/cached calls): " << counter_uncached_GenDressedLepton_phi_ << " / " << counter_cached_GenDressedLepton_phi_ << std::endl;;
    std::cout << "GenDressedLepton_pt (uncached/cached calls): " << counter_uncached_GenDressedLepton_pt_ << " / " << counter_cached_GenDressedLepton_pt_ << std::endl;;
    std::cout << "GenIsolatedPhoton_eta (uncached/cached calls): " << counter_uncached_GenIsolatedPhoton_eta_ << " / " << counter_cached_GenIsolatedPhoton_eta_ << std::endl;;
    std::cout << "GenIsolatedPhoton_mass (uncached/cached calls): " << counter_uncached_GenIsolatedPhoton_mass_ << " / " << counter_cached_GenIsolatedPhoton_mass_ << std::endl;;
    std::cout << "GenIsolatedPhoton_p4 (uncached/cached calls): " << counter_uncached_GenIsolatedPhoton_p4_ << " / " << counter_cached_GenIsolatedPhoton_p4_ << std::endl;;
    std::cout << "GenIsolatedPhoton_phi (uncached/cached calls): " << counter_uncached_GenIsolatedPhoton_phi_ << " / " << counter_cached_GenIsolatedPhoton_phi_ << std::endl;;
    std::cout << "GenIsolatedPhoton_pt (uncached/cached calls): " << counter_uncached_GenIsolatedPhoton_pt_ << " / " << counter_cached_GenIsolatedPhoton_pt_ << std::endl;;
    std::cout << "GenJetAK8_eta (uncached/cached calls): " << counter_uncached_GenJetAK8_eta_ << " / " << counter_cached_GenJetAK8_eta_ << std::endl;;
    std::cout << "GenJetAK8_hadronFlavour (uncached/cached calls): " << counter_uncached_GenJetAK8_hadronFlavour_ << " / " << counter_cached_GenJetAK8_hadronFlavour_ << std::endl;;
    std::cout << "GenJetAK8_mass (uncached/cached calls): " << counter_uncached_GenJetAK8_mass_ << " / " << counter_cached_GenJetAK8_mass_ << std::endl;;
    std::cout << "GenJetAK8_p4 (uncached/cached calls): " << counter_uncached_GenJetAK8_p4_ << " / " << counter_cached_GenJetAK8_p4_ << std::endl;;
    std::cout << "GenJetAK8_partonFlavour (uncached/cached calls): " << counter_uncached_GenJetAK8_partonFlavour_ << " / " << counter_cached_GenJetAK8_partonFlavour_ << std::endl;;
    std::cout << "GenJetAK8_phi (uncached/cached calls): " << counter_uncached_GenJetAK8_phi_ << " / " << counter_cached_GenJetAK8_phi_ << std::endl;;
    std::cout << "GenJetAK8_pt (uncached/cached calls): " << counter_uncached_GenJetAK8_pt_ << " / " << counter_cached_GenJetAK8_pt_ << std::endl;;
    std::cout << "GenJet_eta (uncached/cached calls): " << counter_uncached_GenJet_eta_ << " / " << counter_cached_GenJet_eta_ << std::endl;;
    std::cout << "GenJet_hadronFlavour (uncached/cached calls): " << counter_uncached_GenJet_hadronFlavour_ << " / " << counter_cached_GenJet_hadronFlavour_ << std::endl;;
    std::cout << "GenJet_mass (uncached/cached calls): " << counter_uncached_GenJet_mass_ << " / " << counter_cached_GenJet_mass_ << std::endl;;
    std::cout << "GenJet_p4 (uncached/cached calls): " << counter_uncached_GenJet_p4_ << " / " << counter_cached_GenJet_p4_ << std::endl;;
    std::cout << "GenJet_partonFlavour (uncached/cached calls): " << counter_uncached_GenJet_partonFlavour_ << " / " << counter_cached_GenJet_partonFlavour_ << std::endl;;
    std::cout << "GenJet_phi (uncached/cached calls): " << counter_uncached_GenJet_phi_ << " / " << counter_cached_GenJet_phi_ << std::endl;;
    std::cout << "GenJet_pt (uncached/cached calls): " << counter_uncached_GenJet_pt_ << " / " << counter_cached_GenJet_pt_ << std::endl;;
    std::cout << "GenMET_phi (uncached/cached calls): " << counter_uncached_GenMET_phi_ << " / " << counter_cached_GenMET_phi_ << std::endl;;
    std::cout << "GenMET_pt (uncached/cached calls): " << counter_uncached_GenMET_pt_ << " / " << counter_cached_GenMET_pt_ << std::endl;;
    std::cout << "GenPart_eta (uncached/cached calls): " << counter_uncached_GenPart_eta_ << " / " << counter_cached_GenPart_eta_ << std::endl;;
    std::cout << "GenPart_genPartIdxMother (uncached/cached calls): " << counter_uncached_GenPart_genPartIdxMother_ << " / " << counter_cached_GenPart_genPartIdxMother_ << std::endl;;
    std::cout << "GenPart_mass (uncached/cached calls): " << counter_uncached_GenPart_mass_ << " / " << counter_cached_GenPart_mass_ << std::endl;;
    std::cout << "GenPart_p4 (uncached/cached calls): " << counter_uncached_GenPart_p4_ << " / " << counter_cached_GenPart_p4_ << std::endl;;
    std::cout << "GenPart_pdgId (uncached/cached calls): " << counter_uncached_GenPart_pdgId_ << " / " << counter_cached_GenPart_pdgId_ << std::endl;;
    std::cout << "GenPart_phi (uncached/cached calls): " << counter_uncached_GenPart_phi_ << " / " << counter_cached_GenPart_phi_ << std::endl;;
    std::cout << "GenPart_pt (uncached/cached calls): " << counter_uncached_GenPart_pt_ << " / " << counter_cached_GenPart_pt_ << std::endl;;
    std::cout << "GenPart_status (uncached/cached calls): " << counter_uncached_GenPart_status_ << " / " << counter_cached_GenPart_status_ << std::endl;;
    std::cout << "GenPart_statusFlags (uncached/cached calls): " << counter_uncached_GenPart_statusFlags_ << " / " << counter_cached_GenPart_statusFlags_ << std::endl;;
    std::cout << "GenProton_isPU (uncached/cached calls): " << counter_uncached_GenProton_isPU_ << " / " << counter_cached_GenProton_isPU_ << std::endl;;
    std::cout << "GenProton_px (uncached/cached calls): " << counter_uncached_GenProton_px_ << " / " << counter_cached_GenProton_px_ << std::endl;;
    std::cout << "GenProton_py (uncached/cached calls): " << counter_uncached_GenProton_py_ << " / " << counter_cached_GenProton_py_ << std::endl;;
    std::cout << "GenProton_pz (uncached/cached calls): " << counter_uncached_GenProton_pz_ << " / " << counter_cached_GenProton_pz_ << std::endl;;
    std::cout << "GenProton_vz (uncached/cached calls): " << counter_uncached_GenProton_vz_ << " / " << counter_cached_GenProton_vz_ << std::endl;;
    std::cout << "GenVisTau_charge (uncached/cached calls): " << counter_uncached_GenVisTau_charge_ << " / " << counter_cached_GenVisTau_charge_ << std::endl;;
    std::cout << "GenVisTau_eta (uncached/cached calls): " << counter_uncached_GenVisTau_eta_ << " / " << counter_cached_GenVisTau_eta_ << std::endl;;
    std::cout << "GenVisTau_genPartIdxMother (uncached/cached calls): " << counter_uncached_GenVisTau_genPartIdxMother_ << " / " << counter_cached_GenVisTau_genPartIdxMother_ << std::endl;;
    std::cout << "GenVisTau_mass (uncached/cached calls): " << counter_uncached_GenVisTau_mass_ << " / " << counter_cached_GenVisTau_mass_ << std::endl;;
    std::cout << "GenVisTau_p4 (uncached/cached calls): " << counter_uncached_GenVisTau_p4_ << " / " << counter_cached_GenVisTau_p4_ << std::endl;;
    std::cout << "GenVisTau_phi (uncached/cached calls): " << counter_uncached_GenVisTau_phi_ << " / " << counter_cached_GenVisTau_phi_ << std::endl;;
    std::cout << "GenVisTau_pt (uncached/cached calls): " << counter_uncached_GenVisTau_pt_ << " / " << counter_cached_GenVisTau_pt_ << std::endl;;
    std::cout << "GenVisTau_status (uncached/cached calls): " << counter_uncached_GenVisTau_status_ << " / " << counter_cached_GenVisTau_status_ << std::endl;;
    std::cout << "GenVtx_t0 (uncached/cached calls): " << counter_uncached_GenVtx_t0_ << " / " << counter_cached_GenVtx_t0_ << std::endl;;
    std::cout << "GenVtx_x (uncached/cached calls): " << counter_uncached_GenVtx_x_ << " / " << counter_cached_GenVtx_x_ << std::endl;;
    std::cout << "GenVtx_y (uncached/cached calls): " << counter_uncached_GenVtx_y_ << " / " << counter_cached_GenVtx_y_ << std::endl;;
    std::cout << "GenVtx_z (uncached/cached calls): " << counter_uncached_GenVtx_z_ << " / " << counter_cached_GenVtx_z_ << std::endl;;
    std::cout << "Generator_binvar (uncached/cached calls): " << counter_uncached_Generator_binvar_ << " / " << counter_cached_Generator_binvar_ << std::endl;;
    std::cout << "Generator_id1 (uncached/cached calls): " << counter_uncached_Generator_id1_ << " / " << counter_cached_Generator_id1_ << std::endl;;
    std::cout << "Generator_id2 (uncached/cached calls): " << counter_uncached_Generator_id2_ << " / " << counter_cached_Generator_id2_ << std::endl;;
    std::cout << "Generator_scalePDF (uncached/cached calls): " << counter_uncached_Generator_scalePDF_ << " / " << counter_cached_Generator_scalePDF_ << std::endl;;
    std::cout << "Generator_weight (uncached/cached calls): " << counter_uncached_Generator_weight_ << " / " << counter_cached_Generator_weight_ << std::endl;;
    std::cout << "Generator_x1 (uncached/cached calls): " << counter_uncached_Generator_x1_ << " / " << counter_cached_Generator_x1_ << std::endl;;
    std::cout << "Generator_x2 (uncached/cached calls): " << counter_uncached_Generator_x2_ << " / " << counter_cached_Generator_x2_ << std::endl;;
    std::cout << "Generator_xpdf1 (uncached/cached calls): " << counter_uncached_Generator_xpdf1_ << " / " << counter_cached_Generator_xpdf1_ << std::endl;;
    std::cout << "Generator_xpdf2 (uncached/cached calls): " << counter_uncached_Generator_xpdf2_ << " / " << counter_cached_Generator_xpdf2_ << std::endl;;
    std::cout << "HLT_AK4CaloJet100 (uncached/cached calls): " << counter_uncached_HLT_AK4CaloJet100_ << " / " << counter_cached_HLT_AK4CaloJet100_ << std::endl;;
    std::cout << "HLT_AK4CaloJet120 (uncached/cached calls): " << counter_uncached_HLT_AK4CaloJet120_ << " / " << counter_cached_HLT_AK4CaloJet120_ << std::endl;;
    std::cout << "HLT_AK4CaloJet30 (uncached/cached calls): " << counter_uncached_HLT_AK4CaloJet30_ << " / " << counter_cached_HLT_AK4CaloJet30_ << std::endl;;
    std::cout << "HLT_AK4CaloJet40 (uncached/cached calls): " << counter_uncached_HLT_AK4CaloJet40_ << " / " << counter_cached_HLT_AK4CaloJet40_ << std::endl;;
    std::cout << "HLT_AK4CaloJet50 (uncached/cached calls): " << counter_uncached_HLT_AK4CaloJet50_ << " / " << counter_cached_HLT_AK4CaloJet50_ << std::endl;;
    std::cout << "HLT_AK4CaloJet80 (uncached/cached calls): " << counter_uncached_HLT_AK4CaloJet80_ << " / " << counter_cached_HLT_AK4CaloJet80_ << std::endl;;
    std::cout << "HLT_AK4PFJet100 (uncached/cached calls): " << counter_uncached_HLT_AK4PFJet100_ << " / " << counter_cached_HLT_AK4PFJet100_ << std::endl;;
    std::cout << "HLT_AK4PFJet120 (uncached/cached calls): " << counter_uncached_HLT_AK4PFJet120_ << " / " << counter_cached_HLT_AK4PFJet120_ << std::endl;;
    std::cout << "HLT_AK4PFJet30 (uncached/cached calls): " << counter_uncached_HLT_AK4PFJet30_ << " / " << counter_cached_HLT_AK4PFJet30_ << std::endl;;
    std::cout << "HLT_AK4PFJet50 (uncached/cached calls): " << counter_uncached_HLT_AK4PFJet50_ << " / " << counter_cached_HLT_AK4PFJet50_ << std::endl;;
    std::cout << "HLT_AK4PFJet80 (uncached/cached calls): " << counter_uncached_HLT_AK4PFJet80_ << " / " << counter_cached_HLT_AK4PFJet80_ << std::endl;;
    std::cout << "HLT_AK8DiPFJet250_200_TrimMass30 (uncached/cached calls): " << counter_uncached_HLT_AK8DiPFJet250_200_TrimMass30_ << " / " << counter_cached_HLT_AK8DiPFJet250_200_TrimMass30_ << std::endl;;
    std::cout << "HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20 (uncached/cached calls): " << counter_uncached_HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20_ << " / " << counter_cached_HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20_ << std::endl;;
    std::cout << "HLT_AK8DiPFJet250_250_MassSD30 (uncached/cached calls): " << counter_uncached_HLT_AK8DiPFJet250_250_MassSD30_ << " / " << counter_cached_HLT_AK8DiPFJet250_250_MassSD30_ << std::endl;;
    std::cout << "HLT_AK8DiPFJet250_250_MassSD50 (uncached/cached calls): " << counter_uncached_HLT_AK8DiPFJet250_250_MassSD50_ << " / " << counter_cached_HLT_AK8DiPFJet250_250_MassSD50_ << std::endl;;
    std::cout << "HLT_AK8DiPFJet260_260_MassSD30 (uncached/cached calls): " << counter_uncached_HLT_AK8DiPFJet260_260_MassSD30_ << " / " << counter_cached_HLT_AK8DiPFJet260_260_MassSD30_ << std::endl;;
    std::cout << "HLT_AK8DiPFJet270_270_MassSD30 (uncached/cached calls): " << counter_uncached_HLT_AK8DiPFJet270_270_MassSD30_ << " / " << counter_cached_HLT_AK8DiPFJet270_270_MassSD30_ << std::endl;;
    std::cout << "HLT_AK8DiPFJet280_200_TrimMass30 (uncached/cached calls): " << counter_uncached_HLT_AK8DiPFJet280_200_TrimMass30_ << " / " << counter_cached_HLT_AK8DiPFJet280_200_TrimMass30_ << std::endl;;
    std::cout << "HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087 (uncached/cached calls): " << counter_uncached_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087_ << " / " << counter_cached_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087_ << std::endl;;
    std::cout << "HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20 (uncached/cached calls): " << counter_uncached_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20_ << " / " << counter_cached_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20_ << std::endl;;
    std::cout << "HLT_AK8DiPFJet300_200_TrimMass30 (uncached/cached calls): " << counter_uncached_HLT_AK8DiPFJet300_200_TrimMass30_ << " / " << counter_cached_HLT_AK8DiPFJet300_200_TrimMass30_ << std::endl;;
    std::cout << "HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087 (uncached/cached calls): " << counter_uncached_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087_ << " / " << counter_cached_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087_ << std::endl;;
    std::cout << "HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20 (uncached/cached calls): " << counter_uncached_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20_ << " / " << counter_cached_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20_ << std::endl;;
    std::cout << "HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20 (uncached/cached calls): " << counter_uncached_HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20_ << " / " << counter_cached_HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20_ << std::endl;;
    std::cout << "HLT_AK8PFHT650_TrimR0p1PT0p03Mass50 (uncached/cached calls): " << counter_uncached_HLT_AK8PFHT650_TrimR0p1PT0p03Mass50_ << " / " << counter_cached_HLT_AK8PFHT650_TrimR0p1PT0p03Mass50_ << std::endl;;
    std::cout << "HLT_AK8PFHT700_TrimR0p1PT0p03Mass50 (uncached/cached calls): " << counter_uncached_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_ << " / " << counter_cached_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_ << std::endl;;
    std::cout << "HLT_AK8PFHT750_TrimMass50 (uncached/cached calls): " << counter_uncached_HLT_AK8PFHT750_TrimMass50_ << " / " << counter_cached_HLT_AK8PFHT750_TrimMass50_ << std::endl;;
    std::cout << "HLT_AK8PFHT800_TrimMass50 (uncached/cached calls): " << counter_uncached_HLT_AK8PFHT800_TrimMass50_ << " / " << counter_cached_HLT_AK8PFHT800_TrimMass50_ << std::endl;;
    std::cout << "HLT_AK8PFHT850_TrimMass50 (uncached/cached calls): " << counter_uncached_HLT_AK8PFHT850_TrimMass50_ << " / " << counter_cached_HLT_AK8PFHT850_TrimMass50_ << std::endl;;
    std::cout << "HLT_AK8PFHT900_TrimMass50 (uncached/cached calls): " << counter_uncached_HLT_AK8PFHT900_TrimMass50_ << " / " << counter_cached_HLT_AK8PFHT900_TrimMass50_ << std::endl;;
    std::cout << "HLT_AK8PFJet140 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet140_ << " / " << counter_cached_HLT_AK8PFJet140_ << std::endl;;
    std::cout << "HLT_AK8PFJet15 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet15_ << " / " << counter_cached_HLT_AK8PFJet15_ << std::endl;;
    std::cout << "HLT_AK8PFJet200 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet200_ << " / " << counter_cached_HLT_AK8PFJet200_ << std::endl;;
    std::cout << "HLT_AK8PFJet230_SoftDropMass40 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet230_SoftDropMass40_ << " / " << counter_cached_HLT_AK8PFJet230_SoftDropMass40_ << std::endl;;
    std::cout << "HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_ << " / " << counter_cached_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_ << std::endl;;
    std::cout << "HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_ << " / " << counter_cached_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_ << std::endl;;
    std::cout << "HLT_AK8PFJet25 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet25_ << " / " << counter_cached_HLT_AK8PFJet25_ << std::endl;;
    std::cout << "HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_ << " / " << counter_cached_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_ << std::endl;;
    std::cout << "HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_ << " / " << counter_cached_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_ << std::endl;;
    std::cout << "HLT_AK8PFJet260 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet260_ << " / " << counter_cached_HLT_AK8PFJet260_ << std::endl;;
    std::cout << "HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_ << " / " << counter_cached_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_ << std::endl;;
    std::cout << "HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_ << " / " << counter_cached_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_ << std::endl;;
    std::cout << "HLT_AK8PFJet320 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet320_ << " / " << counter_cached_HLT_AK8PFJet320_ << std::endl;;
    std::cout << "HLT_AK8PFJet330_PFAK8BTagCSV_p1 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet330_PFAK8BTagCSV_p1_ << " / " << counter_cached_HLT_AK8PFJet330_PFAK8BTagCSV_p1_ << std::endl;;
    std::cout << "HLT_AK8PFJet330_PFAK8BTagCSV_p17 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet330_PFAK8BTagCSV_p17_ << " / " << counter_cached_HLT_AK8PFJet330_PFAK8BTagCSV_p17_ << std::endl;;
    std::cout << "HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1_ << " / " << counter_cached_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1_ << std::endl;;
    std::cout << "HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17_ << " / " << counter_cached_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17_ << std::endl;;
    std::cout << "HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_ << " / " << counter_cached_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_ << std::endl;;
    std::cout << "HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_ << " / " << counter_cached_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_ << std::endl;;
    std::cout << "HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_ << " / " << counter_cached_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_ << std::endl;;
    std::cout << "HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_ << " / " << counter_cached_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_ << std::endl;;
    std::cout << "HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_ << " / " << counter_cached_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_ << std::endl;;
    std::cout << "HLT_AK8PFJet360_TrimMass30 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet360_TrimMass30_ << " / " << counter_cached_HLT_AK8PFJet360_TrimMass30_ << std::endl;;
    std::cout << "HLT_AK8PFJet380_TrimMass30 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet380_TrimMass30_ << " / " << counter_cached_HLT_AK8PFJet380_TrimMass30_ << std::endl;;
    std::cout << "HLT_AK8PFJet40 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet40_ << " / " << counter_cached_HLT_AK8PFJet40_ << std::endl;;
    std::cout << "HLT_AK8PFJet400 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet400_ << " / " << counter_cached_HLT_AK8PFJet400_ << std::endl;;
    std::cout << "HLT_AK8PFJet400_MassSD30 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet400_MassSD30_ << " / " << counter_cached_HLT_AK8PFJet400_MassSD30_ << std::endl;;
    std::cout << "HLT_AK8PFJet400_SoftDropMass40 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet400_SoftDropMass40_ << " / " << counter_cached_HLT_AK8PFJet400_SoftDropMass40_ << std::endl;;
    std::cout << "HLT_AK8PFJet400_TrimMass30 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet400_TrimMass30_ << " / " << counter_cached_HLT_AK8PFJet400_TrimMass30_ << std::endl;;
    std::cout << "HLT_AK8PFJet420_MassSD30 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet420_MassSD30_ << " / " << counter_cached_HLT_AK8PFJet420_MassSD30_ << std::endl;;
    std::cout << "HLT_AK8PFJet420_TrimMass30 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet420_TrimMass30_ << " / " << counter_cached_HLT_AK8PFJet420_TrimMass30_ << std::endl;;
    std::cout << "HLT_AK8PFJet425_SoftDropMass40 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet425_SoftDropMass40_ << " / " << counter_cached_HLT_AK8PFJet425_SoftDropMass40_ << std::endl;;
    std::cout << "HLT_AK8PFJet450 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet450_ << " / " << counter_cached_HLT_AK8PFJet450_ << std::endl;;
    std::cout << "HLT_AK8PFJet450_MassSD30 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet450_MassSD30_ << " / " << counter_cached_HLT_AK8PFJet450_MassSD30_ << std::endl;;
    std::cout << "HLT_AK8PFJet450_SoftDropMass40 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet450_SoftDropMass40_ << " / " << counter_cached_HLT_AK8PFJet450_SoftDropMass40_ << std::endl;;
    std::cout << "HLT_AK8PFJet500 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet500_ << " / " << counter_cached_HLT_AK8PFJet500_ << std::endl;;
    std::cout << "HLT_AK8PFJet550 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet550_ << " / " << counter_cached_HLT_AK8PFJet550_ << std::endl;;
    std::cout << "HLT_AK8PFJet60 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet60_ << " / " << counter_cached_HLT_AK8PFJet60_ << std::endl;;
    std::cout << "HLT_AK8PFJet80 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJet80_ << " / " << counter_cached_HLT_AK8PFJet80_ << std::endl;;
    std::cout << "HLT_AK8PFJetFwd140 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJetFwd140_ << " / " << counter_cached_HLT_AK8PFJetFwd140_ << std::endl;;
    std::cout << "HLT_AK8PFJetFwd15 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJetFwd15_ << " / " << counter_cached_HLT_AK8PFJetFwd15_ << std::endl;;
    std::cout << "HLT_AK8PFJetFwd200 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJetFwd200_ << " / " << counter_cached_HLT_AK8PFJetFwd200_ << std::endl;;
    std::cout << "HLT_AK8PFJetFwd25 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJetFwd25_ << " / " << counter_cached_HLT_AK8PFJetFwd25_ << std::endl;;
    std::cout << "HLT_AK8PFJetFwd260 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJetFwd260_ << " / " << counter_cached_HLT_AK8PFJetFwd260_ << std::endl;;
    std::cout << "HLT_AK8PFJetFwd320 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJetFwd320_ << " / " << counter_cached_HLT_AK8PFJetFwd320_ << std::endl;;
    std::cout << "HLT_AK8PFJetFwd40 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJetFwd40_ << " / " << counter_cached_HLT_AK8PFJetFwd40_ << std::endl;;
    std::cout << "HLT_AK8PFJetFwd400 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJetFwd400_ << " / " << counter_cached_HLT_AK8PFJetFwd400_ << std::endl;;
    std::cout << "HLT_AK8PFJetFwd450 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJetFwd450_ << " / " << counter_cached_HLT_AK8PFJetFwd450_ << std::endl;;
    std::cout << "HLT_AK8PFJetFwd500 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJetFwd500_ << " / " << counter_cached_HLT_AK8PFJetFwd500_ << std::endl;;
    std::cout << "HLT_AK8PFJetFwd60 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJetFwd60_ << " / " << counter_cached_HLT_AK8PFJetFwd60_ << std::endl;;
    std::cout << "HLT_AK8PFJetFwd80 (uncached/cached calls): " << counter_uncached_HLT_AK8PFJetFwd80_ << " / " << counter_cached_HLT_AK8PFJetFwd80_ << std::endl;;
    std::cout << "HLT_BTagMu_AK4DiJet110_Mu5 (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK4DiJet110_Mu5_ << " / " << counter_cached_HLT_BTagMu_AK4DiJet110_Mu5_ << std::endl;;
    std::cout << "HLT_BTagMu_AK4DiJet110_Mu5_noalgo (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK4DiJet110_Mu5_noalgo_ << " / " << counter_cached_HLT_BTagMu_AK4DiJet110_Mu5_noalgo_ << std::endl;;
    std::cout << "HLT_BTagMu_AK4DiJet170_Mu5 (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK4DiJet170_Mu5_ << " / " << counter_cached_HLT_BTagMu_AK4DiJet170_Mu5_ << std::endl;;
    std::cout << "HLT_BTagMu_AK4DiJet170_Mu5_noalgo (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK4DiJet170_Mu5_noalgo_ << " / " << counter_cached_HLT_BTagMu_AK4DiJet170_Mu5_noalgo_ << std::endl;;
    std::cout << "HLT_BTagMu_AK4DiJet20_Mu5 (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK4DiJet20_Mu5_ << " / " << counter_cached_HLT_BTagMu_AK4DiJet20_Mu5_ << std::endl;;
    std::cout << "HLT_BTagMu_AK4DiJet20_Mu5_noalgo (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK4DiJet20_Mu5_noalgo_ << " / " << counter_cached_HLT_BTagMu_AK4DiJet20_Mu5_noalgo_ << std::endl;;
    std::cout << "HLT_BTagMu_AK4DiJet40_Mu5 (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK4DiJet40_Mu5_ << " / " << counter_cached_HLT_BTagMu_AK4DiJet40_Mu5_ << std::endl;;
    std::cout << "HLT_BTagMu_AK4DiJet40_Mu5_noalgo (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK4DiJet40_Mu5_noalgo_ << " / " << counter_cached_HLT_BTagMu_AK4DiJet40_Mu5_noalgo_ << std::endl;;
    std::cout << "HLT_BTagMu_AK4DiJet70_Mu5 (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK4DiJet70_Mu5_ << " / " << counter_cached_HLT_BTagMu_AK4DiJet70_Mu5_ << std::endl;;
    std::cout << "HLT_BTagMu_AK4DiJet70_Mu5_noalgo (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK4DiJet70_Mu5_noalgo_ << " / " << counter_cached_HLT_BTagMu_AK4DiJet70_Mu5_noalgo_ << std::endl;;
    std::cout << "HLT_BTagMu_AK4Jet300_Mu5 (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK4Jet300_Mu5_ << " / " << counter_cached_HLT_BTagMu_AK4Jet300_Mu5_ << std::endl;;
    std::cout << "HLT_BTagMu_AK4Jet300_Mu5_noalgo (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK4Jet300_Mu5_noalgo_ << " / " << counter_cached_HLT_BTagMu_AK4Jet300_Mu5_noalgo_ << std::endl;;
    std::cout << "HLT_BTagMu_AK8DiJet170_Mu5 (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK8DiJet170_Mu5_ << " / " << counter_cached_HLT_BTagMu_AK8DiJet170_Mu5_ << std::endl;;
    std::cout << "HLT_BTagMu_AK8DiJet170_Mu5_noalgo (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK8DiJet170_Mu5_noalgo_ << " / " << counter_cached_HLT_BTagMu_AK8DiJet170_Mu5_noalgo_ << std::endl;;
    std::cout << "HLT_BTagMu_AK8Jet170_DoubleMu5 (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK8Jet170_DoubleMu5_ << " / " << counter_cached_HLT_BTagMu_AK8Jet170_DoubleMu5_ << std::endl;;
    std::cout << "HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_ << " / " << counter_cached_HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_ << std::endl;;
    std::cout << "HLT_BTagMu_AK8Jet300_Mu5 (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK8Jet300_Mu5_ << " / " << counter_cached_HLT_BTagMu_AK8Jet300_Mu5_ << std::endl;;
    std::cout << "HLT_BTagMu_AK8Jet300_Mu5_noalgo (uncached/cached calls): " << counter_uncached_HLT_BTagMu_AK8Jet300_Mu5_noalgo_ << " / " << counter_cached_HLT_BTagMu_AK8Jet300_Mu5_noalgo_ << std::endl;;
    std::cout << "HLT_BTagMu_DiJet110_Mu5 (uncached/cached calls): " << counter_uncached_HLT_BTagMu_DiJet110_Mu5_ << " / " << counter_cached_HLT_BTagMu_DiJet110_Mu5_ << std::endl;;
    std::cout << "HLT_BTagMu_DiJet170_Mu5 (uncached/cached calls): " << counter_uncached_HLT_BTagMu_DiJet170_Mu5_ << " / " << counter_cached_HLT_BTagMu_DiJet170_Mu5_ << std::endl;;
    std::cout << "HLT_BTagMu_DiJet20_Mu5 (uncached/cached calls): " << counter_uncached_HLT_BTagMu_DiJet20_Mu5_ << " / " << counter_cached_HLT_BTagMu_DiJet20_Mu5_ << std::endl;;
    std::cout << "HLT_BTagMu_DiJet40_Mu5 (uncached/cached calls): " << counter_uncached_HLT_BTagMu_DiJet40_Mu5_ << " / " << counter_cached_HLT_BTagMu_DiJet40_Mu5_ << std::endl;;
    std::cout << "HLT_BTagMu_DiJet70_Mu5 (uncached/cached calls): " << counter_uncached_HLT_BTagMu_DiJet70_Mu5_ << " / " << counter_cached_HLT_BTagMu_DiJet70_Mu5_ << std::endl;;
    std::cout << "HLT_BTagMu_Jet300_Mu5 (uncached/cached calls): " << counter_uncached_HLT_BTagMu_Jet300_Mu5_ << " / " << counter_cached_HLT_BTagMu_Jet300_Mu5_ << std::endl;;
    std::cout << "HLT_CDC_L2cosmic_10_er1p0 (uncached/cached calls): " << counter_uncached_HLT_CDC_L2cosmic_10_er1p0_ << " / " << counter_cached_HLT_CDC_L2cosmic_10_er1p0_ << std::endl;;
    std::cout << "HLT_CDC_L2cosmic_5_er1p0 (uncached/cached calls): " << counter_uncached_HLT_CDC_L2cosmic_5_er1p0_ << " / " << counter_cached_HLT_CDC_L2cosmic_5_er1p0_ << std::endl;;
    std::cout << "HLT_CDC_L2cosmic_5p5_er1p0 (uncached/cached calls): " << counter_uncached_HLT_CDC_L2cosmic_5p5_er1p0_ << " / " << counter_cached_HLT_CDC_L2cosmic_5p5_er1p0_ << std::endl;;
    std::cout << "HLT_CaloJet260 (uncached/cached calls): " << counter_uncached_HLT_CaloJet260_ << " / " << counter_cached_HLT_CaloJet260_ << std::endl;;
    std::cout << "HLT_CaloJet500_NoJetID (uncached/cached calls): " << counter_uncached_HLT_CaloJet500_NoJetID_ << " / " << counter_cached_HLT_CaloJet500_NoJetID_ << std::endl;;
    std::cout << "HLT_CaloJet550_NoJetID (uncached/cached calls): " << counter_uncached_HLT_CaloJet550_NoJetID_ << " / " << counter_cached_HLT_CaloJet550_NoJetID_ << std::endl;;
    std::cout << "HLT_CaloMET100_HBHECleaned (uncached/cached calls): " << counter_uncached_HLT_CaloMET100_HBHECleaned_ << " / " << counter_cached_HLT_CaloMET100_HBHECleaned_ << std::endl;;
    std::cout << "HLT_CaloMET100_NotCleaned (uncached/cached calls): " << counter_uncached_HLT_CaloMET100_NotCleaned_ << " / " << counter_cached_HLT_CaloMET100_NotCleaned_ << std::endl;;
    std::cout << "HLT_CaloMET110_NotCleaned (uncached/cached calls): " << counter_uncached_HLT_CaloMET110_NotCleaned_ << " / " << counter_cached_HLT_CaloMET110_NotCleaned_ << std::endl;;
    std::cout << "HLT_CaloMET250_HBHECleaned (uncached/cached calls): " << counter_uncached_HLT_CaloMET250_HBHECleaned_ << " / " << counter_cached_HLT_CaloMET250_HBHECleaned_ << std::endl;;
    std::cout << "HLT_CaloMET250_NotCleaned (uncached/cached calls): " << counter_uncached_HLT_CaloMET250_NotCleaned_ << " / " << counter_cached_HLT_CaloMET250_NotCleaned_ << std::endl;;
    std::cout << "HLT_CaloMET300_HBHECleaned (uncached/cached calls): " << counter_uncached_HLT_CaloMET300_HBHECleaned_ << " / " << counter_cached_HLT_CaloMET300_HBHECleaned_ << std::endl;;
    std::cout << "HLT_CaloMET350_HBHECleaned (uncached/cached calls): " << counter_uncached_HLT_CaloMET350_HBHECleaned_ << " / " << counter_cached_HLT_CaloMET350_HBHECleaned_ << std::endl;;
    std::cout << "HLT_CaloMET350_NotCleaned (uncached/cached calls): " << counter_uncached_HLT_CaloMET350_NotCleaned_ << " / " << counter_cached_HLT_CaloMET350_NotCleaned_ << std::endl;;
    std::cout << "HLT_CaloMET60_DTCluster50 (uncached/cached calls): " << counter_uncached_HLT_CaloMET60_DTCluster50_ << " / " << counter_cached_HLT_CaloMET60_DTCluster50_ << std::endl;;
    std::cout << "HLT_CaloMET60_DTClusterNoMB1S50 (uncached/cached calls): " << counter_uncached_HLT_CaloMET60_DTClusterNoMB1S50_ << " / " << counter_cached_HLT_CaloMET60_DTClusterNoMB1S50_ << std::endl;;
    std::cout << "HLT_CaloMET70_HBHECleaned (uncached/cached calls): " << counter_uncached_HLT_CaloMET70_HBHECleaned_ << " / " << counter_cached_HLT_CaloMET70_HBHECleaned_ << std::endl;;
    std::cout << "HLT_CaloMET80_HBHECleaned (uncached/cached calls): " << counter_uncached_HLT_CaloMET80_HBHECleaned_ << " / " << counter_cached_HLT_CaloMET80_HBHECleaned_ << std::endl;;
    std::cout << "HLT_CaloMET80_NotCleaned (uncached/cached calls): " << counter_uncached_HLT_CaloMET80_NotCleaned_ << " / " << counter_cached_HLT_CaloMET80_NotCleaned_ << std::endl;;
    std::cout << "HLT_CaloMET90_HBHECleaned (uncached/cached calls): " << counter_uncached_HLT_CaloMET90_HBHECleaned_ << " / " << counter_cached_HLT_CaloMET90_HBHECleaned_ << std::endl;;
    std::cout << "HLT_CaloMET90_NotCleaned (uncached/cached calls): " << counter_uncached_HLT_CaloMET90_NotCleaned_ << " / " << counter_cached_HLT_CaloMET90_NotCleaned_ << std::endl;;
    std::cout << "HLT_CaloMHT90 (uncached/cached calls): " << counter_uncached_HLT_CaloMHT90_ << " / " << counter_cached_HLT_CaloMHT90_ << std::endl;;
    std::cout << "HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight (uncached/cached calls): " << counter_uncached_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_ << " / " << counter_cached_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_ << std::endl;;
    std::cout << "HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067 (uncached/cached calls): " << counter_uncached_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067_ << " / " << counter_cached_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067_ << std::endl;;
    std::cout << "HLT_CascadeMu100 (uncached/cached calls): " << counter_uncached_HLT_CascadeMu100_ << " / " << counter_cached_HLT_CascadeMu100_ << std::endl;;
    std::cout << "HLT_CscCluster_Loose (uncached/cached calls): " << counter_uncached_HLT_CscCluster_Loose_ << " / " << counter_cached_HLT_CscCluster_Loose_ << std::endl;;
    std::cout << "HLT_CscCluster_Medium (uncached/cached calls): " << counter_uncached_HLT_CscCluster_Medium_ << " / " << counter_cached_HLT_CscCluster_Medium_ << std::endl;;
    std::cout << "HLT_CscCluster_Tight (uncached/cached calls): " << counter_uncached_HLT_CscCluster_Tight_ << " / " << counter_cached_HLT_CscCluster_Tight_ << std::endl;;
    std::cout << "HLT_DiCentralPFJet170 (uncached/cached calls): " << counter_uncached_HLT_DiCentralPFJet170_ << " / " << counter_cached_HLT_DiCentralPFJet170_ << std::endl;;
    std::cout << "HLT_DiCentralPFJet170_CFMax0p1 (uncached/cached calls): " << counter_uncached_HLT_DiCentralPFJet170_CFMax0p1_ << " / " << counter_cached_HLT_DiCentralPFJet170_CFMax0p1_ << std::endl;;
    std::cout << "HLT_DiCentralPFJet220_CFMax0p3 (uncached/cached calls): " << counter_uncached_HLT_DiCentralPFJet220_CFMax0p3_ << " / " << counter_cached_HLT_DiCentralPFJet220_CFMax0p3_ << std::endl;;
    std::cout << "HLT_DiCentralPFJet330_CFMax0p5 (uncached/cached calls): " << counter_uncached_HLT_DiCentralPFJet330_CFMax0p5_ << " / " << counter_cached_HLT_DiCentralPFJet330_CFMax0p5_ << std::endl;;
    std::cout << "HLT_DiCentralPFJet430 (uncached/cached calls): " << counter_uncached_HLT_DiCentralPFJet430_ << " / " << counter_cached_HLT_DiCentralPFJet430_ << std::endl;;
    std::cout << "HLT_DiCentralPFJet55_PFMET110 (uncached/cached calls): " << counter_uncached_HLT_DiCentralPFJet55_PFMET110_ << " / " << counter_cached_HLT_DiCentralPFJet55_PFMET110_ << std::endl;;
    std::cout << "HLT_DiEle27_WPTightCaloOnly_L1DoubleEG (uncached/cached calls): " << counter_uncached_HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_ << " / " << counter_cached_HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_ << std::endl;;
    std::cout << "HLT_DiJet110_35_Mjj650_PFMET110 (uncached/cached calls): " << counter_uncached_HLT_DiJet110_35_Mjj650_PFMET110_ << " / " << counter_cached_HLT_DiJet110_35_Mjj650_PFMET110_ << std::endl;;
    std::cout << "HLT_DiJet110_35_Mjj650_PFMET120 (uncached/cached calls): " << counter_uncached_HLT_DiJet110_35_Mjj650_PFMET120_ << " / " << counter_cached_HLT_DiJet110_35_Mjj650_PFMET120_ << std::endl;;
    std::cout << "HLT_DiJet110_35_Mjj650_PFMET130 (uncached/cached calls): " << counter_uncached_HLT_DiJet110_35_Mjj650_PFMET130_ << " / " << counter_cached_HLT_DiJet110_35_Mjj650_PFMET130_ << std::endl;;
    std::cout << "HLT_DiJetVBFMu_PassThrough (uncached/cached calls): " << counter_uncached_HLT_DiJetVBFMu_PassThrough_ << " / " << counter_cached_HLT_DiJetVBFMu_PassThrough_ << std::endl;;
    std::cout << "HLT_DiJetVBF_PassThrough (uncached/cached calls): " << counter_uncached_HLT_DiJetVBF_PassThrough_ << " / " << counter_cached_HLT_DiJetVBF_PassThrough_ << std::endl;;
    std::cout << "HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8 (uncached/cached calls): " << counter_uncached_HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_ << " / " << counter_cached_HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_ << std::endl;;
    std::cout << "HLT_DiMu9_Ele9_CaloIdL_TrackIdL (uncached/cached calls): " << counter_uncached_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_ << " / " << counter_cached_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_ << std::endl;;
    std::cout << "HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ (uncached/cached calls): " << counter_uncached_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_ << " / " << counter_cached_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_ << std::endl;;
    std::cout << "HLT_DiPFJet15_FBEta3_NoCaloMatched (uncached/cached calls): " << counter_uncached_HLT_DiPFJet15_FBEta3_NoCaloMatched_ << " / " << counter_cached_HLT_DiPFJet15_FBEta3_NoCaloMatched_ << std::endl;;
    std::cout << "HLT_DiPFJet15_NoCaloMatched (uncached/cached calls): " << counter_uncached_HLT_DiPFJet15_NoCaloMatched_ << " / " << counter_cached_HLT_DiPFJet15_NoCaloMatched_ << std::endl;;
    std::cout << "HLT_DiPFJet25_FBEta3_NoCaloMatched (uncached/cached calls): " << counter_uncached_HLT_DiPFJet25_FBEta3_NoCaloMatched_ << " / " << counter_cached_HLT_DiPFJet25_FBEta3_NoCaloMatched_ << std::endl;;
    std::cout << "HLT_DiPFJet25_NoCaloMatched (uncached/cached calls): " << counter_uncached_HLT_DiPFJet25_NoCaloMatched_ << " / " << counter_cached_HLT_DiPFJet25_NoCaloMatched_ << std::endl;;
    std::cout << "HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140 (uncached/cached calls): " << counter_uncached_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140_ << " / " << counter_cached_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140_ << std::endl;;
    std::cout << "HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80 (uncached/cached calls): " << counter_uncached_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80_ << " / " << counter_cached_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80_ << std::endl;;
    std::cout << "HLT_DiPFJetAve100_HFJEC (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve100_HFJEC_ << " / " << counter_cached_HLT_DiPFJetAve100_HFJEC_ << std::endl;;
    std::cout << "HLT_DiPFJetAve140 (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve140_ << " / " << counter_cached_HLT_DiPFJetAve140_ << std::endl;;
    std::cout << "HLT_DiPFJetAve15_HFJEC (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve15_HFJEC_ << " / " << counter_cached_HLT_DiPFJetAve15_HFJEC_ << std::endl;;
    std::cout << "HLT_DiPFJetAve160_HFJEC (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve160_HFJEC_ << " / " << counter_cached_HLT_DiPFJetAve160_HFJEC_ << std::endl;;
    std::cout << "HLT_DiPFJetAve200 (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve200_ << " / " << counter_cached_HLT_DiPFJetAve200_ << std::endl;;
    std::cout << "HLT_DiPFJetAve220_HFJEC (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve220_HFJEC_ << " / " << counter_cached_HLT_DiPFJetAve220_HFJEC_ << std::endl;;
    std::cout << "HLT_DiPFJetAve25_HFJEC (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve25_HFJEC_ << " / " << counter_cached_HLT_DiPFJetAve25_HFJEC_ << std::endl;;
    std::cout << "HLT_DiPFJetAve260 (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve260_ << " / " << counter_cached_HLT_DiPFJetAve260_ << std::endl;;
    std::cout << "HLT_DiPFJetAve260_HFJEC (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve260_HFJEC_ << " / " << counter_cached_HLT_DiPFJetAve260_HFJEC_ << std::endl;;
    std::cout << "HLT_DiPFJetAve300_HFJEC (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve300_HFJEC_ << " / " << counter_cached_HLT_DiPFJetAve300_HFJEC_ << std::endl;;
    std::cout << "HLT_DiPFJetAve320 (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve320_ << " / " << counter_cached_HLT_DiPFJetAve320_ << std::endl;;
    std::cout << "HLT_DiPFJetAve35_HFJEC (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve35_HFJEC_ << " / " << counter_cached_HLT_DiPFJetAve35_HFJEC_ << std::endl;;
    std::cout << "HLT_DiPFJetAve40 (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve40_ << " / " << counter_cached_HLT_DiPFJetAve40_ << std::endl;;
    std::cout << "HLT_DiPFJetAve400 (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve400_ << " / " << counter_cached_HLT_DiPFJetAve400_ << std::endl;;
    std::cout << "HLT_DiPFJetAve500 (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve500_ << " / " << counter_cached_HLT_DiPFJetAve500_ << std::endl;;
    std::cout << "HLT_DiPFJetAve60 (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve60_ << " / " << counter_cached_HLT_DiPFJetAve60_ << std::endl;;
    std::cout << "HLT_DiPFJetAve60_HFJEC (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve60_HFJEC_ << " / " << counter_cached_HLT_DiPFJetAve60_HFJEC_ << std::endl;;
    std::cout << "HLT_DiPFJetAve80 (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve80_ << " / " << counter_cached_HLT_DiPFJetAve80_ << std::endl;;
    std::cout << "HLT_DiPFJetAve80_HFJEC (uncached/cached calls): " << counter_uncached_HLT_DiPFJetAve80_HFJEC_ << " / " << counter_cached_HLT_DiPFJetAve80_HFJEC_ << std::endl;;
    std::cout << "HLT_DiPhoton10Time1ns (uncached/cached calls): " << counter_uncached_HLT_DiPhoton10Time1ns_ << " / " << counter_cached_HLT_DiPhoton10Time1ns_ << std::endl;;
    std::cout << "HLT_DiPhoton10Time1p2ns (uncached/cached calls): " << counter_uncached_HLT_DiPhoton10Time1p2ns_ << " / " << counter_cached_HLT_DiPhoton10Time1p2ns_ << std::endl;;
    std::cout << "HLT_DiPhoton10Time1p4ns (uncached/cached calls): " << counter_uncached_HLT_DiPhoton10Time1p4ns_ << " / " << counter_cached_HLT_DiPhoton10Time1p4ns_ << std::endl;;
    std::cout << "HLT_DiPhoton10Time1p6ns (uncached/cached calls): " << counter_uncached_HLT_DiPhoton10Time1p6ns_ << " / " << counter_cached_HLT_DiPhoton10Time1p6ns_ << std::endl;;
    std::cout << "HLT_DiPhoton10Time1p8ns (uncached/cached calls): " << counter_uncached_HLT_DiPhoton10Time1p8ns_ << " / " << counter_cached_HLT_DiPhoton10Time1p8ns_ << std::endl;;
    std::cout << "HLT_DiPhoton10Time2ns (uncached/cached calls): " << counter_uncached_HLT_DiPhoton10Time2ns_ << " / " << counter_cached_HLT_DiPhoton10Time2ns_ << std::endl;;
    std::cout << "HLT_DiPhoton10_CaloIdL (uncached/cached calls): " << counter_uncached_HLT_DiPhoton10_CaloIdL_ << " / " << counter_cached_HLT_DiPhoton10_CaloIdL_ << std::endl;;
    std::cout << "HLT_DiPhoton10sminlt0p1 (uncached/cached calls): " << counter_uncached_HLT_DiPhoton10sminlt0p1_ << " / " << counter_cached_HLT_DiPhoton10sminlt0p1_ << std::endl;;
    std::cout << "HLT_DiPhoton10sminlt0p12 (uncached/cached calls): " << counter_uncached_HLT_DiPhoton10sminlt0p12_ << " / " << counter_cached_HLT_DiPhoton10sminlt0p12_ << std::endl;;
    std::cout << "HLT_DiSC30_18_EIso_AND_HE_Mass70 (uncached/cached calls): " << counter_uncached_HLT_DiSC30_18_EIso_AND_HE_Mass70_ << " / " << counter_cached_HLT_DiSC30_18_EIso_AND_HE_Mass70_ << std::endl;;
    std::cout << "HLT_Dimuon0_Jpsi (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Jpsi_ << " / " << counter_cached_HLT_Dimuon0_Jpsi_ << std::endl;;
    std::cout << "HLT_Dimuon0_Jpsi3p5_Muon2 (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Jpsi3p5_Muon2_ << " / " << counter_cached_HLT_Dimuon0_Jpsi3p5_Muon2_ << std::endl;;
    std::cout << "HLT_Dimuon0_Jpsi_L1_4R_0er1p5R (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_ << " / " << counter_cached_HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_ << std::endl;;
    std::cout << "HLT_Dimuon0_Jpsi_L1_NoOS (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Jpsi_L1_NoOS_ << " / " << counter_cached_HLT_Dimuon0_Jpsi_L1_NoOS_ << std::endl;;
    std::cout << "HLT_Dimuon0_Jpsi_Muon (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Jpsi_Muon_ << " / " << counter_cached_HLT_Dimuon0_Jpsi_Muon_ << std::endl;;
    std::cout << "HLT_Dimuon0_Jpsi_NoVertexing (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Jpsi_NoVertexing_ << " / " << counter_cached_HLT_Dimuon0_Jpsi_NoVertexing_ << std::endl;;
    std::cout << "HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_ << " / " << counter_cached_HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_ << std::endl;;
    std::cout << "HLT_Dimuon0_Jpsi_NoVertexing_NoOS (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Jpsi_NoVertexing_NoOS_ << " / " << counter_cached_HLT_Dimuon0_Jpsi_NoVertexing_NoOS_ << std::endl;;
    std::cout << "HLT_Dimuon0_LowMass (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_LowMass_ << " / " << counter_cached_HLT_Dimuon0_LowMass_ << std::endl;;
    std::cout << "HLT_Dimuon0_LowMass_L1_0er1p5 (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_LowMass_L1_0er1p5_ << " / " << counter_cached_HLT_Dimuon0_LowMass_L1_0er1p5_ << std::endl;;
    std::cout << "HLT_Dimuon0_LowMass_L1_0er1p5R (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_LowMass_L1_0er1p5R_ << " / " << counter_cached_HLT_Dimuon0_LowMass_L1_0er1p5R_ << std::endl;;
    std::cout << "HLT_Dimuon0_LowMass_L1_4 (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_LowMass_L1_4_ << " / " << counter_cached_HLT_Dimuon0_LowMass_L1_4_ << std::endl;;
    std::cout << "HLT_Dimuon0_LowMass_L1_4R (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_LowMass_L1_4R_ << " / " << counter_cached_HLT_Dimuon0_LowMass_L1_4R_ << std::endl;;
    std::cout << "HLT_Dimuon0_LowMass_L1_TM530 (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_LowMass_L1_TM530_ << " / " << counter_cached_HLT_Dimuon0_LowMass_L1_TM530_ << std::endl;;
    std::cout << "HLT_Dimuon0_Phi_Barrel (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Phi_Barrel_ << " / " << counter_cached_HLT_Dimuon0_Phi_Barrel_ << std::endl;;
    std::cout << "HLT_Dimuon0_Upsilon_L1_4p5 (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Upsilon_L1_4p5_ << " / " << counter_cached_HLT_Dimuon0_Upsilon_L1_4p5_ << std::endl;;
    std::cout << "HLT_Dimuon0_Upsilon_L1_4p5NoOS (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Upsilon_L1_4p5NoOS_ << " / " << counter_cached_HLT_Dimuon0_Upsilon_L1_4p5NoOS_ << std::endl;;
    std::cout << "HLT_Dimuon0_Upsilon_L1_4p5er2p0 (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Upsilon_L1_4p5er2p0_ << " / " << counter_cached_HLT_Dimuon0_Upsilon_L1_4p5er2p0_ << std::endl;;
    std::cout << "HLT_Dimuon0_Upsilon_L1_4p5er2p0M (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Upsilon_L1_4p5er2p0M_ << " / " << counter_cached_HLT_Dimuon0_Upsilon_L1_4p5er2p0M_ << std::endl;;
    std::cout << "HLT_Dimuon0_Upsilon_L1_5 (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Upsilon_L1_5_ << " / " << counter_cached_HLT_Dimuon0_Upsilon_L1_5_ << std::endl;;
    std::cout << "HLT_Dimuon0_Upsilon_L1_5M (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Upsilon_L1_5M_ << " / " << counter_cached_HLT_Dimuon0_Upsilon_L1_5M_ << std::endl;;
    std::cout << "HLT_Dimuon0_Upsilon_Muon (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Upsilon_Muon_ << " / " << counter_cached_HLT_Dimuon0_Upsilon_Muon_ << std::endl;;
    std::cout << "HLT_Dimuon0_Upsilon_Muon_L1_TM0 (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Upsilon_Muon_L1_TM0_ << " / " << counter_cached_HLT_Dimuon0_Upsilon_Muon_L1_TM0_ << std::endl;;
    std::cout << "HLT_Dimuon0_Upsilon_Muon_NoL1Mass (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Upsilon_Muon_NoL1Mass_ << " / " << counter_cached_HLT_Dimuon0_Upsilon_Muon_NoL1Mass_ << std::endl;;
    std::cout << "HLT_Dimuon0_Upsilon_NoVertexing (uncached/cached calls): " << counter_uncached_HLT_Dimuon0_Upsilon_NoVertexing_ << " / " << counter_cached_HLT_Dimuon0_Upsilon_NoVertexing_ << std::endl;;
    std::cout << "HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing (uncached/cached calls): " << counter_uncached_HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing_ << " / " << counter_cached_HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing_ << std::endl;;
    std::cout << "HLT_Dimuon0er16_Jpsi_NoVertexing (uncached/cached calls): " << counter_uncached_HLT_Dimuon0er16_Jpsi_NoVertexing_ << " / " << counter_cached_HLT_Dimuon0er16_Jpsi_NoVertexing_ << std::endl;;
    std::cout << "HLT_Dimuon10_Jpsi_Barrel (uncached/cached calls): " << counter_uncached_HLT_Dimuon10_Jpsi_Barrel_ << " / " << counter_cached_HLT_Dimuon10_Jpsi_Barrel_ << std::endl;;
    std::cout << "HLT_Dimuon10_PsiPrime_Barrel_Seagulls (uncached/cached calls): " << counter_uncached_HLT_Dimuon10_PsiPrime_Barrel_Seagulls_ << " / " << counter_cached_HLT_Dimuon10_PsiPrime_Barrel_Seagulls_ << std::endl;;
    std::cout << "HLT_Dimuon10_Upsilon_Barrel_Seagulls (uncached/cached calls): " << counter_uncached_HLT_Dimuon10_Upsilon_Barrel_Seagulls_ << " / " << counter_cached_HLT_Dimuon10_Upsilon_Barrel_Seagulls_ << std::endl;;
    std::cout << "HLT_Dimuon10_Upsilon_y1p4 (uncached/cached calls): " << counter_uncached_HLT_Dimuon10_Upsilon_y1p4_ << " / " << counter_cached_HLT_Dimuon10_Upsilon_y1p4_ << std::endl;;
    std::cout << "HLT_Dimuon12_Upsilon_eta1p5 (uncached/cached calls): " << counter_uncached_HLT_Dimuon12_Upsilon_eta1p5_ << " / " << counter_cached_HLT_Dimuon12_Upsilon_eta1p5_ << std::endl;;
    std::cout << "HLT_Dimuon12_Upsilon_y1p4 (uncached/cached calls): " << counter_uncached_HLT_Dimuon12_Upsilon_y1p4_ << " / " << counter_cached_HLT_Dimuon12_Upsilon_y1p4_ << std::endl;;
    std::cout << "HLT_Dimuon13_PsiPrime (uncached/cached calls): " << counter_uncached_HLT_Dimuon13_PsiPrime_ << " / " << counter_cached_HLT_Dimuon13_PsiPrime_ << std::endl;;
    std::cout << "HLT_Dimuon13_Upsilon (uncached/cached calls): " << counter_uncached_HLT_Dimuon13_Upsilon_ << " / " << counter_cached_HLT_Dimuon13_Upsilon_ << std::endl;;
    std::cout << "HLT_Dimuon14_Phi_Barrel_Seagulls (uncached/cached calls): " << counter_uncached_HLT_Dimuon14_Phi_Barrel_Seagulls_ << " / " << counter_cached_HLT_Dimuon14_Phi_Barrel_Seagulls_ << std::endl;;
    std::cout << "HLT_Dimuon14_PsiPrime (uncached/cached calls): " << counter_uncached_HLT_Dimuon14_PsiPrime_ << " / " << counter_cached_HLT_Dimuon14_PsiPrime_ << std::endl;;
    std::cout << "HLT_Dimuon14_PsiPrime_noCorrL1 (uncached/cached calls): " << counter_uncached_HLT_Dimuon14_PsiPrime_noCorrL1_ << " / " << counter_cached_HLT_Dimuon14_PsiPrime_noCorrL1_ << std::endl;;
    std::cout << "HLT_Dimuon16_Jpsi (uncached/cached calls): " << counter_uncached_HLT_Dimuon16_Jpsi_ << " / " << counter_cached_HLT_Dimuon16_Jpsi_ << std::endl;;
    std::cout << "HLT_Dimuon18_PsiPrime (uncached/cached calls): " << counter_uncached_HLT_Dimuon18_PsiPrime_ << " / " << counter_cached_HLT_Dimuon18_PsiPrime_ << std::endl;;
    std::cout << "HLT_Dimuon18_PsiPrime_noCorrL1 (uncached/cached calls): " << counter_uncached_HLT_Dimuon18_PsiPrime_noCorrL1_ << " / " << counter_cached_HLT_Dimuon18_PsiPrime_noCorrL1_ << std::endl;;
    std::cout << "HLT_Dimuon20_Jpsi (uncached/cached calls): " << counter_uncached_HLT_Dimuon20_Jpsi_ << " / " << counter_cached_HLT_Dimuon20_Jpsi_ << std::endl;;
    std::cout << "HLT_Dimuon20_Jpsi_Barrel_Seagulls (uncached/cached calls): " << counter_uncached_HLT_Dimuon20_Jpsi_Barrel_Seagulls_ << " / " << counter_cached_HLT_Dimuon20_Jpsi_Barrel_Seagulls_ << std::endl;;
    std::cout << "HLT_Dimuon24_Phi_noCorrL1 (uncached/cached calls): " << counter_uncached_HLT_Dimuon24_Phi_noCorrL1_ << " / " << counter_cached_HLT_Dimuon24_Phi_noCorrL1_ << std::endl;;
    std::cout << "HLT_Dimuon24_Upsilon_noCorrL1 (uncached/cached calls): " << counter_uncached_HLT_Dimuon24_Upsilon_noCorrL1_ << " / " << counter_cached_HLT_Dimuon24_Upsilon_noCorrL1_ << std::endl;;
    std::cout << "HLT_Dimuon25_Jpsi (uncached/cached calls): " << counter_uncached_HLT_Dimuon25_Jpsi_ << " / " << counter_cached_HLT_Dimuon25_Jpsi_ << std::endl;;
    std::cout << "HLT_Dimuon25_Jpsi_noCorrL1 (uncached/cached calls): " << counter_uncached_HLT_Dimuon25_Jpsi_noCorrL1_ << " / " << counter_cached_HLT_Dimuon25_Jpsi_noCorrL1_ << std::endl;;
    std::cout << "HLT_Dimuon6_Jpsi_NoVertexing (uncached/cached calls): " << counter_uncached_HLT_Dimuon6_Jpsi_NoVertexing_ << " / " << counter_cached_HLT_Dimuon6_Jpsi_NoVertexing_ << std::endl;;
    std::cout << "HLT_Dimuon8_PsiPrime_Barrel (uncached/cached calls): " << counter_uncached_HLT_Dimuon8_PsiPrime_Barrel_ << " / " << counter_cached_HLT_Dimuon8_PsiPrime_Barrel_ << std::endl;;
    std::cout << "HLT_Dimuon8_Upsilon_Barrel (uncached/cached calls): " << counter_uncached_HLT_Dimuon8_Upsilon_Barrel_ << " / " << counter_cached_HLT_Dimuon8_Upsilon_Barrel_ << std::endl;;
    std::cout << "HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT (uncached/cached calls): " << counter_uncached_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_ << " / " << counter_cached_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_ << std::endl;;
    std::cout << "HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT (uncached/cached calls): " << counter_uncached_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_ << " / " << counter_cached_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_ << std::endl;;
    std::cout << "HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT (uncached/cached calls): " << counter_uncached_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_ << " / " << counter_cached_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_ << std::endl;;
    std::cout << "HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT (uncached/cached calls): " << counter_uncached_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_ << " / " << counter_cached_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_ << std::endl;;
    std::cout << "HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55 (uncached/cached calls): " << counter_uncached_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_ << " / " << counter_cached_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_ << std::endl;;
    std::cout << "HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55 (uncached/cached calls): " << counter_uncached_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_ << " / " << counter_cached_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_ << std::endl;;
    std::cout << "HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55 (uncached/cached calls): " << counter_uncached_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_ << " / " << counter_cached_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_ << std::endl;;
    std::cout << "HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55 (uncached/cached calls): " << counter_uncached_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_ << " / " << counter_cached_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_ << std::endl;;
    std::cout << "HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55 (uncached/cached calls): " << counter_uncached_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_ << " / " << counter_cached_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_ << std::endl;;
    std::cout << "HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55 (uncached/cached calls): " << counter_uncached_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_ << " / " << counter_cached_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_ << std::endl;;
    std::cout << "HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55 (uncached/cached calls): " << counter_uncached_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_ << " / " << counter_cached_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_ << std::endl;;
    std::cout << "HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55 (uncached/cached calls): " << counter_uncached_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_ << " / " << counter_cached_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_ << std::endl;;
    std::cout << "HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId (uncached/cached calls): " << counter_uncached_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_ << " / " << counter_cached_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_ << std::endl;;
    std::cout << "HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55 (uncached/cached calls): " << counter_uncached_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_ << " / " << counter_cached_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_ << std::endl;;
    std::cout << "HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto (uncached/cached calls): " << counter_uncached_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_ << " / " << counter_cached_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_ << std::endl;;
    std::cout << "HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55 (uncached/cached calls): " << counter_uncached_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_ << " / " << counter_cached_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_ << std::endl;;
    std::cout << "HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70 (uncached/cached calls): " << counter_uncached_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70_ << " / " << counter_cached_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70_ << std::endl;;
    std::cout << "HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90 (uncached/cached calls): " << counter_uncached_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_ << " / " << counter_cached_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_ << std::endl;;
    std::cout << "HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55 (uncached/cached calls): " << counter_uncached_HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55_ << " / " << counter_cached_HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55_ << std::endl;;
    std::cout << "HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90 (uncached/cached calls): " << counter_uncached_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_ << " / " << counter_cached_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_ << std::endl;;
    std::cout << "HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95 (uncached/cached calls): " << counter_uncached_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_ << " / " << counter_cached_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_ << std::endl;;
    std::cout << "HLT_DoubleEle10_eta1p22_mMax6 (uncached/cached calls): " << counter_uncached_HLT_DoubleEle10_eta1p22_mMax6_ << " / " << counter_cached_HLT_DoubleEle10_eta1p22_mMax6_ << std::endl;;
    std::cout << "HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf (uncached/cached calls): " << counter_uncached_HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf_ << " / " << counter_cached_HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf_ << std::endl;;
    std::cout << "HLT_DoubleEle24_eta2p1_WPTight_Gsf (uncached/cached calls): " << counter_uncached_HLT_DoubleEle24_eta2p1_WPTight_Gsf_ << " / " << counter_cached_HLT_DoubleEle24_eta2p1_WPTight_Gsf_ << std::endl;;
    std::cout << "HLT_DoubleEle25_CaloIdL_GsfTrkIdVL (uncached/cached calls): " << counter_uncached_HLT_DoubleEle25_CaloIdL_GsfTrkIdVL_ << " / " << counter_cached_HLT_DoubleEle25_CaloIdL_GsfTrkIdVL_ << std::endl;;
    std::cout << "HLT_DoubleEle25_CaloIdL_MW (uncached/cached calls): " << counter_uncached_HLT_DoubleEle25_CaloIdL_MW_ << " / " << counter_cached_HLT_DoubleEle25_CaloIdL_MW_ << std::endl;;
    std::cout << "HLT_DoubleEle27_CaloIdL_MW (uncached/cached calls): " << counter_uncached_HLT_DoubleEle27_CaloIdL_MW_ << " / " << counter_cached_HLT_DoubleEle27_CaloIdL_MW_ << std::endl;;
    std::cout << "HLT_DoubleEle33_CaloIdL (uncached/cached calls): " << counter_uncached_HLT_DoubleEle33_CaloIdL_ << " / " << counter_cached_HLT_DoubleEle33_CaloIdL_ << std::endl;;
    std::cout << "HLT_DoubleEle33_CaloIdL_GsfTrkIdVL (uncached/cached calls): " << counter_uncached_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_ << " / " << counter_cached_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_ << std::endl;;
    std::cout << "HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW (uncached/cached calls): " << counter_uncached_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW_ << " / " << counter_cached_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW_ << std::endl;;
    std::cout << "HLT_DoubleEle33_CaloIdL_MW (uncached/cached calls): " << counter_uncached_HLT_DoubleEle33_CaloIdL_MW_ << " / " << counter_cached_HLT_DoubleEle33_CaloIdL_MW_ << std::endl;;
    std::cout << "HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL (uncached/cached calls): " << counter_uncached_HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL_ << " / " << counter_cached_HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL_ << std::endl;;
    std::cout << "HLT_DoubleEle4_eta1p22_mMax6 (uncached/cached calls): " << counter_uncached_HLT_DoubleEle4_eta1p22_mMax6_ << " / " << counter_cached_HLT_DoubleEle4_eta1p22_mMax6_ << std::endl;;
    std::cout << "HLT_DoubleEle4p5_eta1p22_mMax6 (uncached/cached calls): " << counter_uncached_HLT_DoubleEle4p5_eta1p22_mMax6_ << " / " << counter_cached_HLT_DoubleEle4p5_eta1p22_mMax6_ << std::endl;;
    std::cout << "HLT_DoubleEle5_eta1p22_mMax6 (uncached/cached calls): " << counter_uncached_HLT_DoubleEle5_eta1p22_mMax6_ << " / " << counter_cached_HLT_DoubleEle5_eta1p22_mMax6_ << std::endl;;
    std::cout << "HLT_DoubleEle5p5_eta1p22_mMax6 (uncached/cached calls): " << counter_uncached_HLT_DoubleEle5p5_eta1p22_mMax6_ << " / " << counter_cached_HLT_DoubleEle5p5_eta1p22_mMax6_ << std::endl;;
    std::cout << "HLT_DoubleEle6_eta1p22_mMax6 (uncached/cached calls): " << counter_uncached_HLT_DoubleEle6_eta1p22_mMax6_ << " / " << counter_cached_HLT_DoubleEle6_eta1p22_mMax6_ << std::endl;;
    std::cout << "HLT_DoubleEle6p5_eta1p22_mMax6 (uncached/cached calls): " << counter_uncached_HLT_DoubleEle6p5_eta1p22_mMax6_ << " / " << counter_cached_HLT_DoubleEle6p5_eta1p22_mMax6_ << std::endl;;
    std::cout << "HLT_DoubleEle7_eta1p22_mMax6 (uncached/cached calls): " << counter_uncached_HLT_DoubleEle7_eta1p22_mMax6_ << " / " << counter_cached_HLT_DoubleEle7_eta1p22_mMax6_ << std::endl;;
    std::cout << "HLT_DoubleEle7p5_eta1p22_mMax6 (uncached/cached calls): " << counter_uncached_HLT_DoubleEle7p5_eta1p22_mMax6_ << " / " << counter_cached_HLT_DoubleEle7p5_eta1p22_mMax6_ << std::endl;;
    std::cout << "HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350 (uncached/cached calls): " << counter_uncached_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_ << " / " << counter_cached_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_ << std::endl;;
    std::cout << "HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250 (uncached/cached calls): " << counter_uncached_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250_ << " / " << counter_cached_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250_ << std::endl;;
    std::cout << "HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300 (uncached/cached calls): " << counter_uncached_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300_ << " / " << counter_cached_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300_ << std::endl;;
    std::cout << "HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350 (uncached/cached calls): " << counter_uncached_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_ << " / " << counter_cached_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_ << std::endl;;
    std::cout << "HLT_DoubleEle8_eta1p22_mMax6 (uncached/cached calls): " << counter_uncached_HLT_DoubleEle8_eta1p22_mMax6_ << " / " << counter_cached_HLT_DoubleEle8_eta1p22_mMax6_ << std::endl;;
    std::cout << "HLT_DoubleEle8p5_eta1p22_mMax6 (uncached/cached calls): " << counter_uncached_HLT_DoubleEle8p5_eta1p22_mMax6_ << " / " << counter_cached_HLT_DoubleEle8p5_eta1p22_mMax6_ << std::endl;;
    std::cout << "HLT_DoubleEle9_eta1p22_mMax6 (uncached/cached calls): " << counter_uncached_HLT_DoubleEle9_eta1p22_mMax6_ << " / " << counter_cached_HLT_DoubleEle9_eta1p22_mMax6_ << std::endl;;
    std::cout << "HLT_DoubleEle9p5_eta1p22_mMax6 (uncached/cached calls): " << counter_uncached_HLT_DoubleEle9p5_eta1p22_mMax6_ << " / " << counter_cached_HLT_DoubleEle9p5_eta1p22_mMax6_ << std::endl;;
    std::cout << "HLT_DoubleIsoMu17_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_DoubleIsoMu17_eta2p1_ << " / " << counter_cached_HLT_DoubleIsoMu17_eta2p1_ << std::endl;;
    std::cout << "HLT_DoubleIsoMu17_eta2p1_noDzCut (uncached/cached calls): " << counter_uncached_HLT_DoubleIsoMu17_eta2p1_noDzCut_ << " / " << counter_cached_HLT_DoubleIsoMu17_eta2p1_noDzCut_ << std::endl;;
    std::cout << "HLT_DoubleIsoMu20_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_DoubleIsoMu20_eta2p1_ << " / " << counter_cached_HLT_DoubleIsoMu20_eta2p1_ << std::endl;;
    std::cout << "HLT_DoubleIsoMu24_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_DoubleIsoMu24_eta2p1_ << " / " << counter_cached_HLT_DoubleIsoMu24_eta2p1_ << std::endl;;
    std::cout << "HLT_DoubleJet90_Double30_DoubleBTagCSV_p087 (uncached/cached calls): " << counter_uncached_HLT_DoubleJet90_Double30_DoubleBTagCSV_p087_ << " / " << counter_cached_HLT_DoubleJet90_Double30_DoubleBTagCSV_p087_ << std::endl;;
    std::cout << "HLT_DoubleJet90_Double30_TripleBTagCSV_p087 (uncached/cached calls): " << counter_uncached_HLT_DoubleJet90_Double30_TripleBTagCSV_p087_ << " / " << counter_cached_HLT_DoubleJet90_Double30_TripleBTagCSV_p087_ << std::endl;;
    std::cout << "HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6 (uncached/cached calls): " << counter_uncached_HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6_ << " / " << counter_cached_HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6_ << std::endl;;
    std::cout << "HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160 (uncached/cached calls): " << counter_uncached_HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160_ << " / " << counter_cached_HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160_ << std::endl;;
    std::cout << "HLT_DoubleJetsC100_SingleBTagCSV_p014 (uncached/cached calls): " << counter_uncached_HLT_DoubleJetsC100_SingleBTagCSV_p014_ << " / " << counter_cached_HLT_DoubleJetsC100_SingleBTagCSV_p014_ << std::endl;;
    std::cout << "HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350 (uncached/cached calls): " << counter_uncached_HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350_ << " / " << counter_cached_HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350_ << std::endl;;
    std::cout << "HLT_DoubleJetsC100_SingleBTagCSV_p026 (uncached/cached calls): " << counter_uncached_HLT_DoubleJetsC100_SingleBTagCSV_p026_ << " / " << counter_cached_HLT_DoubleJetsC100_SingleBTagCSV_p026_ << std::endl;;
    std::cout << "HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350 (uncached/cached calls): " << counter_uncached_HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350_ << " / " << counter_cached_HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350_ << std::endl;;
    std::cout << "HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6 (uncached/cached calls): " << counter_uncached_HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6_ << " / " << counter_cached_HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6_ << std::endl;;
    std::cout << "HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172 (uncached/cached calls): " << counter_uncached_HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172_ << " / " << counter_cached_HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_ << " / " << counter_cached_HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ << " / " << counter_cached_HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_ << " / " << counter_cached_HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ << " / " << counter_cached_HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ << " / " << counter_cached_HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu23NoVtx_2Cha (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu23NoVtx_2Cha_ << " / " << counter_cached_HLT_DoubleL2Mu23NoVtx_2Cha_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_ << " / " << counter_cached_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_ << " / " << counter_cached_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_ << " / " << counter_cached_HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu25NoVtx_2Cha (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu25NoVtx_2Cha_ << " / " << counter_cached_HLT_DoubleL2Mu25NoVtx_2Cha_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_ << " / " << counter_cached_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4 (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_ << " / " << counter_cached_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_ << " / " << counter_cached_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4 (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_ << " / " << counter_cached_HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_ << " / " << counter_cached_HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4 (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_ << " / " << counter_cached_HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4 (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_ << " / " << counter_cached_HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu50 (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu50_ << " / " << counter_cached_HLT_DoubleL2Mu50_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_ << " / " << counter_cached_HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_ << std::endl;;
    std::cout << "HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm (uncached/cached calls): " << counter_uncached_HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_ << " / " << counter_cached_HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_ << std::endl;;
    std::cout << "HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm (uncached/cached calls): " << counter_uncached_HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_ << " / " << counter_cached_HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_ << std::endl;;
    std::cout << "HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm (uncached/cached calls): " << counter_uncached_HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_ << " / " << counter_cached_HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_ << std::endl;;
    std::cout << "HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm (uncached/cached calls): " << counter_uncached_HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_ << " / " << counter_cached_HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_ << std::endl;;
    std::cout << "HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm (uncached/cached calls): " << counter_uncached_HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_ << " / " << counter_cached_HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_ << std::endl;;
    std::cout << "HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_ << " / " << counter_cached_HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_ << std::endl;;
    std::cout << "HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_ << " / " << counter_cached_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_ << std::endl;;
    std::cout << "HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_ << " / " << counter_cached_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_ << std::endl;;
    std::cout << "HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60 (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_ << " / " << counter_cached_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_ << std::endl;;
    std::cout << "HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75 (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_ << " / " << counter_cached_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_ << std::endl;;
    std::cout << "HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_ << " / " << counter_cached_HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_ << std::endl;;
    std::cout << "HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_ << " / " << counter_cached_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_ << std::endl;;
    std::cout << "HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleMu0 (uncached/cached calls): " << counter_uncached_HLT_DoubleMu0_ << " / " << counter_cached_HLT_DoubleMu0_ << std::endl;;
    std::cout << "HLT_DoubleMu18NoFiltersNoVtx (uncached/cached calls): " << counter_uncached_HLT_DoubleMu18NoFiltersNoVtx_ << " / " << counter_cached_HLT_DoubleMu18NoFiltersNoVtx_ << std::endl;;
    std::cout << "HLT_DoubleMu20_7_Mass0to30_L1_DM4 (uncached/cached calls): " << counter_uncached_HLT_DoubleMu20_7_Mass0to30_L1_DM4_ << " / " << counter_cached_HLT_DoubleMu20_7_Mass0to30_L1_DM4_ << std::endl;;
    std::cout << "HLT_DoubleMu20_7_Mass0to30_L1_DM4EG (uncached/cached calls): " << counter_uncached_HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_ << " / " << counter_cached_HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_ << std::endl;;
    std::cout << "HLT_DoubleMu20_7_Mass0to30_Photon23 (uncached/cached calls): " << counter_uncached_HLT_DoubleMu20_7_Mass0to30_Photon23_ << " / " << counter_cached_HLT_DoubleMu20_7_Mass0to30_Photon23_ << std::endl;;
    std::cout << "HLT_DoubleMu23NoFiltersNoVtxDisplaced (uncached/cached calls): " << counter_uncached_HLT_DoubleMu23NoFiltersNoVtxDisplaced_ << " / " << counter_cached_HLT_DoubleMu23NoFiltersNoVtxDisplaced_ << std::endl;;
    std::cout << "HLT_DoubleMu28NoFiltersNoVtxDisplaced (uncached/cached calls): " << counter_uncached_HLT_DoubleMu28NoFiltersNoVtxDisplaced_ << " / " << counter_cached_HLT_DoubleMu28NoFiltersNoVtxDisplaced_ << std::endl;;
    std::cout << "HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi (uncached/cached calls): " << counter_uncached_HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_ << " / " << counter_cached_HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_ << std::endl;;
    std::cout << "HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi (uncached/cached calls): " << counter_uncached_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi_ << " / " << counter_cached_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi_ << std::endl;;
    std::cout << "HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05 (uncached/cached calls): " << counter_uncached_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_ << " / " << counter_cached_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_ << std::endl;;
    std::cout << "HLT_DoubleMu33NoFiltersNoVtx (uncached/cached calls): " << counter_uncached_HLT_DoubleMu33NoFiltersNoVtx_ << " / " << counter_cached_HLT_DoubleMu33NoFiltersNoVtx_ << std::endl;;
    std::cout << "HLT_DoubleMu33NoFiltersNoVtxDisplaced (uncached/cached calls): " << counter_uncached_HLT_DoubleMu33NoFiltersNoVtxDisplaced_ << " / " << counter_cached_HLT_DoubleMu33NoFiltersNoVtxDisplaced_ << std::endl;;
    std::cout << "HLT_DoubleMu38NoFiltersNoVtx (uncached/cached calls): " << counter_uncached_HLT_DoubleMu38NoFiltersNoVtx_ << " / " << counter_cached_HLT_DoubleMu38NoFiltersNoVtx_ << std::endl;;
    std::cout << "HLT_DoubleMu3_DCA_PFMET50_PFMHT60 (uncached/cached calls): " << counter_uncached_HLT_DoubleMu3_DCA_PFMET50_PFMHT60_ << " / " << counter_cached_HLT_DoubleMu3_DCA_PFMET50_PFMHT60_ << std::endl;;
    std::cout << "HLT_DoubleMu3_DZ_PFMET50_PFMHT60 (uncached/cached calls): " << counter_uncached_HLT_DoubleMu3_DZ_PFMET50_PFMHT60_ << " / " << counter_cached_HLT_DoubleMu3_DZ_PFMET50_PFMHT60_ << std::endl;;
    std::cout << "HLT_DoubleMu3_DZ_PFMET70_PFMHT70 (uncached/cached calls): " << counter_uncached_HLT_DoubleMu3_DZ_PFMET70_PFMHT70_ << " / " << counter_cached_HLT_DoubleMu3_DZ_PFMET70_PFMHT70_ << std::endl;;
    std::cout << "HLT_DoubleMu3_DZ_PFMET90_PFMHT90 (uncached/cached calls): " << counter_uncached_HLT_DoubleMu3_DZ_PFMET90_PFMHT90_ << " / " << counter_cached_HLT_DoubleMu3_DZ_PFMET90_PFMHT90_ << std::endl;;
    std::cout << "HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon (uncached/cached calls): " << counter_uncached_HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_ << " / " << counter_cached_HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_ << std::endl;;
    std::cout << "HLT_DoubleMu3_PFMET50 (uncached/cached calls): " << counter_uncached_HLT_DoubleMu3_PFMET50_ << " / " << counter_cached_HLT_DoubleMu3_PFMET50_ << std::endl;;
    std::cout << "HLT_DoubleMu3_TkMu_DsTau3Mu (uncached/cached calls): " << counter_uncached_HLT_DoubleMu3_TkMu_DsTau3Mu_ << " / " << counter_cached_HLT_DoubleMu3_TkMu_DsTau3Mu_ << std::endl;;
    std::cout << "HLT_DoubleMu3_Trk_Tau3mu (uncached/cached calls): " << counter_uncached_HLT_DoubleMu3_Trk_Tau3mu_ << " / " << counter_cached_HLT_DoubleMu3_Trk_Tau3mu_ << std::endl;;
    std::cout << "HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass (uncached/cached calls): " << counter_uncached_HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_ << " / " << counter_cached_HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_ << std::endl;;
    std::cout << "HLT_DoubleMu40NoFiltersNoVtxDisplaced (uncached/cached calls): " << counter_uncached_HLT_DoubleMu40NoFiltersNoVtxDisplaced_ << " / " << counter_cached_HLT_DoubleMu40NoFiltersNoVtxDisplaced_ << std::endl;;
    std::cout << "HLT_DoubleMu43NoFiltersNoVtx (uncached/cached calls): " << counter_uncached_HLT_DoubleMu43NoFiltersNoVtx_ << " / " << counter_cached_HLT_DoubleMu43NoFiltersNoVtx_ << std::endl;;
    std::cout << "HLT_DoubleMu48NoFiltersNoVtx (uncached/cached calls): " << counter_uncached_HLT_DoubleMu48NoFiltersNoVtx_ << " / " << counter_cached_HLT_DoubleMu48NoFiltersNoVtx_ << std::endl;;
    std::cout << "HLT_DoubleMu4_3_Bs (uncached/cached calls): " << counter_uncached_HLT_DoubleMu4_3_Bs_ << " / " << counter_cached_HLT_DoubleMu4_3_Bs_ << std::endl;;
    std::cout << "HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG (uncached/cached calls): " << counter_uncached_HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_ << " / " << counter_cached_HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_ << std::endl;;
    std::cout << "HLT_DoubleMu4_3_Jpsi (uncached/cached calls): " << counter_uncached_HLT_DoubleMu4_3_Jpsi_ << " / " << counter_cached_HLT_DoubleMu4_3_Jpsi_ << std::endl;;
    std::cout << "HLT_DoubleMu4_3_Jpsi_Displaced (uncached/cached calls): " << counter_uncached_HLT_DoubleMu4_3_Jpsi_Displaced_ << " / " << counter_cached_HLT_DoubleMu4_3_Jpsi_Displaced_ << std::endl;;
    std::cout << "HLT_DoubleMu4_3_LowMass (uncached/cached calls): " << counter_uncached_HLT_DoubleMu4_3_LowMass_ << " / " << counter_cached_HLT_DoubleMu4_3_LowMass_ << std::endl;;
    std::cout << "HLT_DoubleMu4_3_Photon4_BsToMMG (uncached/cached calls): " << counter_uncached_HLT_DoubleMu4_3_Photon4_BsToMMG_ << " / " << counter_cached_HLT_DoubleMu4_3_Photon4_BsToMMG_ << std::endl;;
    std::cout << "HLT_DoubleMu4_JpsiTrkTrk_Displaced (uncached/cached calls): " << counter_uncached_HLT_DoubleMu4_JpsiTrkTrk_Displaced_ << " / " << counter_cached_HLT_DoubleMu4_JpsiTrkTrk_Displaced_ << std::endl;;
    std::cout << "HLT_DoubleMu4_JpsiTrk_Bc (uncached/cached calls): " << counter_uncached_HLT_DoubleMu4_JpsiTrk_Bc_ << " / " << counter_cached_HLT_DoubleMu4_JpsiTrk_Bc_ << std::endl;;
    std::cout << "HLT_DoubleMu4_JpsiTrk_Displaced (uncached/cached calls): " << counter_uncached_HLT_DoubleMu4_JpsiTrk_Displaced_ << " / " << counter_cached_HLT_DoubleMu4_JpsiTrk_Displaced_ << std::endl;;
    std::cout << "HLT_DoubleMu4_Jpsi_Displaced (uncached/cached calls): " << counter_uncached_HLT_DoubleMu4_Jpsi_Displaced_ << " / " << counter_cached_HLT_DoubleMu4_Jpsi_Displaced_ << std::endl;;
    std::cout << "HLT_DoubleMu4_Jpsi_NoVertexing (uncached/cached calls): " << counter_uncached_HLT_DoubleMu4_Jpsi_NoVertexing_ << " / " << counter_cached_HLT_DoubleMu4_Jpsi_NoVertexing_ << std::endl;;
    std::cout << "HLT_DoubleMu4_LowMassNonResonantTrk_Displaced (uncached/cached calls): " << counter_uncached_HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_ << " / " << counter_cached_HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_ << std::endl;;
    std::cout << "HLT_DoubleMu4_LowMass_Displaced (uncached/cached calls): " << counter_uncached_HLT_DoubleMu4_LowMass_Displaced_ << " / " << counter_cached_HLT_DoubleMu4_LowMass_Displaced_ << std::endl;;
    std::cout << "HLT_DoubleMu4_Mass3p8_DZ_PFHT350 (uncached/cached calls): " << counter_uncached_HLT_DoubleMu4_Mass3p8_DZ_PFHT350_ << " / " << counter_cached_HLT_DoubleMu4_Mass3p8_DZ_PFHT350_ << std::endl;;
    std::cout << "HLT_DoubleMu4_Mass8_DZ_PFHT350 (uncached/cached calls): " << counter_uncached_HLT_DoubleMu4_Mass8_DZ_PFHT350_ << " / " << counter_cached_HLT_DoubleMu4_Mass8_DZ_PFHT350_ << std::endl;;
    std::cout << "HLT_DoubleMu4_MuMuTrk_Displaced (uncached/cached calls): " << counter_uncached_HLT_DoubleMu4_MuMuTrk_Displaced_ << " / " << counter_cached_HLT_DoubleMu4_MuMuTrk_Displaced_ << std::endl;;
    std::cout << "HLT_DoubleMu4_PsiPrimeTrk_Displaced (uncached/cached calls): " << counter_uncached_HLT_DoubleMu4_PsiPrimeTrk_Displaced_ << " / " << counter_cached_HLT_DoubleMu4_PsiPrimeTrk_Displaced_ << std::endl;;
    std::cout << "HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL (uncached/cached calls): " << counter_uncached_HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_ << " / " << counter_cached_HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_ << std::endl;;
    std::cout << "HLT_DoubleMu8_Mass8_PFHT250 (uncached/cached calls): " << counter_uncached_HLT_DoubleMu8_Mass8_PFHT250_ << " / " << counter_cached_HLT_DoubleMu8_Mass8_PFHT250_ << std::endl;;
    std::cout << "HLT_DoubleMu8_Mass8_PFHT300 (uncached/cached calls): " << counter_uncached_HLT_DoubleMu8_Mass8_PFHT300_ << " / " << counter_cached_HLT_DoubleMu8_Mass8_PFHT300_ << std::endl;;
    std::cout << "HLT_DoubleMu8_Mass8_PFHT350 (uncached/cached calls): " << counter_uncached_HLT_DoubleMu8_Mass8_PFHT350_ << " / " << counter_cached_HLT_DoubleMu8_Mass8_PFHT350_ << std::endl;;
    std::cout << "HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33_ << " / " << counter_cached_HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33_ << std::endl;;
    std::cout << "HLT_DoublePFJets100_CaloBTagCSV_p33 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets100_CaloBTagCSV_p33_ << " / " << counter_cached_HLT_DoublePFJets100_CaloBTagCSV_p33_ << std::endl;;
    std::cout << "HLT_DoublePFJets100_CaloBTagCSV_p79 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets100_CaloBTagCSV_p79_ << " / " << counter_cached_HLT_DoublePFJets100_CaloBTagCSV_p79_ << std::endl;;
    std::cout << "HLT_DoublePFJets100_CaloBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets100_CaloBTagDeepCSV_p71_ << " / " << counter_cached_HLT_DoublePFJets100_CaloBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_DoublePFJets100_PFBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets100_PFBTagDeepCSV_p71_ << " / " << counter_cached_HLT_DoublePFJets100_PFBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_DoublePFJets100_PFBTagDeepJet_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets100_PFBTagDeepJet_p71_ << " / " << counter_cached_HLT_DoublePFJets100_PFBTagDeepJet_p71_ << std::endl;;
    std::cout << "HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33_ << " / " << counter_cached_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33_ << std::endl;;
    std::cout << "HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79_ << " / " << counter_cached_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79_ << std::endl;;
    std::cout << "HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ << " / " << counter_cached_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_ << " / " << counter_cached_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_ << " / " << counter_cached_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_ << std::endl;;
    std::cout << "HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33_ << " / " << counter_cached_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33_ << std::endl;;
    std::cout << "HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79_ << " / " << counter_cached_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79_ << std::endl;;
    std::cout << "HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ << " / " << counter_cached_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_ << " / " << counter_cached_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_ << " / " << counter_cached_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_ << std::endl;;
    std::cout << "HLT_DoublePFJets200_CaloBTagCSV_p33 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets200_CaloBTagCSV_p33_ << " / " << counter_cached_HLT_DoublePFJets200_CaloBTagCSV_p33_ << std::endl;;
    std::cout << "HLT_DoublePFJets200_CaloBTagCSV_p79 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets200_CaloBTagCSV_p79_ << " / " << counter_cached_HLT_DoublePFJets200_CaloBTagCSV_p79_ << std::endl;;
    std::cout << "HLT_DoublePFJets200_CaloBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets200_CaloBTagDeepCSV_p71_ << " / " << counter_cached_HLT_DoublePFJets200_CaloBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_DoublePFJets200_PFBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets200_PFBTagDeepCSV_p71_ << " / " << counter_cached_HLT_DoublePFJets200_PFBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_DoublePFJets200_PFBTagDeepJet_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets200_PFBTagDeepJet_p71_ << " / " << counter_cached_HLT_DoublePFJets200_PFBTagDeepJet_p71_ << std::endl;;
    std::cout << "HLT_DoublePFJets350_CaloBTagCSV_p33 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets350_CaloBTagCSV_p33_ << " / " << counter_cached_HLT_DoublePFJets350_CaloBTagCSV_p33_ << std::endl;;
    std::cout << "HLT_DoublePFJets350_CaloBTagCSV_p79 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets350_CaloBTagCSV_p79_ << " / " << counter_cached_HLT_DoublePFJets350_CaloBTagCSV_p79_ << std::endl;;
    std::cout << "HLT_DoublePFJets350_CaloBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets350_CaloBTagDeepCSV_p71_ << " / " << counter_cached_HLT_DoublePFJets350_CaloBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_DoublePFJets350_PFBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets350_PFBTagDeepCSV_p71_ << " / " << counter_cached_HLT_DoublePFJets350_PFBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_DoublePFJets350_PFBTagDeepJet_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets350_PFBTagDeepJet_p71_ << " / " << counter_cached_HLT_DoublePFJets350_PFBTagDeepJet_p71_ << std::endl;;
    std::cout << "HLT_DoublePFJets40_CaloBTagCSV_p33 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets40_CaloBTagCSV_p33_ << " / " << counter_cached_HLT_DoublePFJets40_CaloBTagCSV_p33_ << std::endl;;
    std::cout << "HLT_DoublePFJets40_CaloBTagCSV_p79 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets40_CaloBTagCSV_p79_ << " / " << counter_cached_HLT_DoublePFJets40_CaloBTagCSV_p79_ << std::endl;;
    std::cout << "HLT_DoublePFJets40_CaloBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets40_CaloBTagDeepCSV_p71_ << " / " << counter_cached_HLT_DoublePFJets40_CaloBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_ << " / " << counter_cached_HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_ << std::endl;;
    std::cout << "HLT_DoublePFJets40_PFBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets40_PFBTagDeepCSV_p71_ << " / " << counter_cached_HLT_DoublePFJets40_PFBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_DoublePFJets40_PFBTagDeepJet_p71 (uncached/cached calls): " << counter_uncached_HLT_DoublePFJets40_PFBTagDeepJet_p71_ << " / " << counter_cached_HLT_DoublePFJets40_PFBTagDeepJet_p71_ << std::endl;;
    std::cout << "HLT_DoublePhoton33_CaloIdL (uncached/cached calls): " << counter_uncached_HLT_DoublePhoton33_CaloIdL_ << " / " << counter_cached_HLT_DoublePhoton33_CaloIdL_ << std::endl;;
    std::cout << "HLT_DoublePhoton60 (uncached/cached calls): " << counter_uncached_HLT_DoublePhoton60_ << " / " << counter_cached_HLT_DoublePhoton60_ << std::endl;;
    std::cout << "HLT_DoublePhoton70 (uncached/cached calls): " << counter_uncached_HLT_DoublePhoton70_ << " / " << counter_cached_HLT_DoublePhoton70_ << std::endl;;
    std::cout << "HLT_DoublePhoton85 (uncached/cached calls): " << counter_uncached_HLT_DoublePhoton85_ << " / " << counter_cached_HLT_DoublePhoton85_ << std::endl;;
    std::cout << "HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_ << " / " << counter_cached_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_ << std::endl;;
    std::cout << "HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_ << " / " << counter_cached_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_ << std::endl;;
    std::cout << "HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_DoubleTrkMu_16_6_NoFiltersNoVtx (uncached/cached calls): " << counter_uncached_HLT_DoubleTrkMu_16_6_NoFiltersNoVtx_ << " / " << counter_cached_HLT_DoubleTrkMu_16_6_NoFiltersNoVtx_ << std::endl;;
    std::cout << "HLT_ECALHT800 (uncached/cached calls): " << counter_uncached_HLT_ECALHT800_ << " / " << counter_cached_HLT_ECALHT800_ << std::endl;;
    std::cout << "HLT_EcalCalibration (uncached/cached calls): " << counter_uncached_HLT_EcalCalibration_ << " / " << counter_cached_HLT_EcalCalibration_ << std::endl;;
    std::cout << "HLT_Ele105_CaloIdVT_GsfTrkIdT (uncached/cached calls): " << counter_uncached_HLT_Ele105_CaloIdVT_GsfTrkIdT_ << " / " << counter_cached_HLT_Ele105_CaloIdVT_GsfTrkIdT_ << std::endl;;
    std::cout << "HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13 (uncached/cached calls): " << counter_uncached_HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13_ << " / " << counter_cached_HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13_ << std::endl;;
    std::cout << "HLT_Ele115_CaloIdVT_GsfTrkIdT (uncached/cached calls): " << counter_uncached_HLT_Ele115_CaloIdVT_GsfTrkIdT_ << " / " << counter_cached_HLT_Ele115_CaloIdVT_GsfTrkIdT_ << std::endl;;
    std::cout << "HLT_Ele12_CaloIdL_TrackIdL_IsoVL (uncached/cached calls): " << counter_uncached_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_ << " / " << counter_cached_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_ << std::endl;;
    std::cout << "HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30 (uncached/cached calls): " << counter_uncached_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_ << " / " << counter_cached_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_ << std::endl;;
    std::cout << "HLT_Ele12_CaloIdM_TrackIdM_PFJet30 (uncached/cached calls): " << counter_uncached_HLT_Ele12_CaloIdM_TrackIdM_PFJet30_ << " / " << counter_cached_HLT_Ele12_CaloIdM_TrackIdM_PFJet30_ << std::endl;;
    std::cout << "HLT_Ele135_CaloIdVT_GsfTrkIdT (uncached/cached calls): " << counter_uncached_HLT_Ele135_CaloIdVT_GsfTrkIdT_ << " / " << counter_cached_HLT_Ele135_CaloIdVT_GsfTrkIdT_ << std::endl;;
    std::cout << "HLT_Ele145_CaloIdVT_GsfTrkIdT (uncached/cached calls): " << counter_uncached_HLT_Ele145_CaloIdVT_GsfTrkIdT_ << " / " << counter_cached_HLT_Ele145_CaloIdVT_GsfTrkIdT_ << std::endl;;
    std::cout << "HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30 (uncached/cached calls): " << counter_uncached_HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_ << " / " << counter_cached_HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_ << std::endl;;
    std::cout << "HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL (uncached/cached calls): " << counter_uncached_HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_ << " / " << counter_cached_HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_ << std::endl;;
    std::cout << "HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400 (uncached/cached calls): " << counter_uncached_HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400_ << " / " << counter_cached_HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400_ << std::endl;;
    std::cout << "HLT_Ele15_IsoVVVL_PFHT350 (uncached/cached calls): " << counter_uncached_HLT_Ele15_IsoVVVL_PFHT350_ << " / " << counter_cached_HLT_Ele15_IsoVVVL_PFHT350_ << std::endl;;
    std::cout << "HLT_Ele15_IsoVVVL_PFHT350_PFMET50 (uncached/cached calls): " << counter_uncached_HLT_Ele15_IsoVVVL_PFHT350_PFMET50_ << " / " << counter_cached_HLT_Ele15_IsoVVVL_PFHT350_PFMET50_ << std::endl;;
    std::cout << "HLT_Ele15_IsoVVVL_PFHT400 (uncached/cached calls): " << counter_uncached_HLT_Ele15_IsoVVVL_PFHT400_ << " / " << counter_cached_HLT_Ele15_IsoVVVL_PFHT400_ << std::endl;;
    std::cout << "HLT_Ele15_IsoVVVL_PFHT400_PFMET50 (uncached/cached calls): " << counter_uncached_HLT_Ele15_IsoVVVL_PFHT400_PFMET50_ << " / " << counter_cached_HLT_Ele15_IsoVVVL_PFHT400_PFMET50_ << std::endl;;
    std::cout << "HLT_Ele15_IsoVVVL_PFHT450 (uncached/cached calls): " << counter_uncached_HLT_Ele15_IsoVVVL_PFHT450_ << " / " << counter_cached_HLT_Ele15_IsoVVVL_PFHT450_ << std::endl;;
    std::cout << "HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5 (uncached/cached calls): " << counter_uncached_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_ << " / " << counter_cached_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_ << std::endl;;
    std::cout << "HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5 (uncached/cached calls): " << counter_uncached_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_ << " / " << counter_cached_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_ << std::endl;;
    std::cout << "HLT_Ele15_IsoVVVL_PFHT450_PFMET50 (uncached/cached calls): " << counter_uncached_HLT_Ele15_IsoVVVL_PFHT450_PFMET50_ << " / " << counter_cached_HLT_Ele15_IsoVVVL_PFHT450_PFMET50_ << std::endl;;
    std::cout << "HLT_Ele15_IsoVVVL_PFHT600 (uncached/cached calls): " << counter_uncached_HLT_Ele15_IsoVVVL_PFHT600_ << " / " << counter_cached_HLT_Ele15_IsoVVVL_PFHT600_ << std::endl;;
    std::cout << "HLT_Ele15_WPLoose_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele15_WPLoose_Gsf_ << " / " << counter_cached_HLT_Ele15_WPLoose_Gsf_ << std::endl;;
    std::cout << "HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL (uncached/cached calls): " << counter_uncached_HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_ << " / " << counter_cached_HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_ << std::endl;;
    std::cout << "HLT_Ele17_CaloIdL_GsfTrkIdVL (uncached/cached calls): " << counter_uncached_HLT_Ele17_CaloIdL_GsfTrkIdVL_ << " / " << counter_cached_HLT_Ele17_CaloIdL_GsfTrkIdVL_ << std::endl;;
    std::cout << "HLT_Ele17_CaloIdL_TrackIdL_IsoVL (uncached/cached calls): " << counter_uncached_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_ << " / " << counter_cached_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_ << std::endl;;
    std::cout << "HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30 (uncached/cached calls): " << counter_uncached_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_ << " / " << counter_cached_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_ << std::endl;;
    std::cout << "HLT_Ele17_CaloIdM_TrackIdM_PFJet30 (uncached/cached calls): " << counter_uncached_HLT_Ele17_CaloIdM_TrackIdM_PFJet30_ << " / " << counter_cached_HLT_Ele17_CaloIdM_TrackIdM_PFJet30_ << std::endl;;
    std::cout << "HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL (uncached/cached calls): " << counter_uncached_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_ << " / " << counter_cached_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_ << std::endl;;
    std::cout << "HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ (uncached/cached calls): " << counter_uncached_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_ << " / " << counter_cached_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_ << std::endl;;
    std::cout << "HLT_Ele17_Ele8_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele17_Ele8_Gsf_ << " / " << counter_cached_HLT_Ele17_Ele8_Gsf_ << std::endl;;
    std::cout << "HLT_Ele17_WPLoose_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele17_WPLoose_Gsf_ << " / " << counter_cached_HLT_Ele17_WPLoose_Gsf_ << std::endl;;
    std::cout << "HLT_Ele200_CaloIdVT_GsfTrkIdT (uncached/cached calls): " << counter_uncached_HLT_Ele200_CaloIdVT_GsfTrkIdT_ << " / " << counter_cached_HLT_Ele200_CaloIdVT_GsfTrkIdT_ << std::endl;;
    std::cout << "HLT_Ele20_WPLoose_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele20_WPLoose_Gsf_ << " / " << counter_cached_HLT_Ele20_WPLoose_Gsf_ << std::endl;;
    std::cout << "HLT_Ele20_WPTight_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele20_WPTight_Gsf_ << " / " << counter_cached_HLT_Ele20_WPTight_Gsf_ << std::endl;;
    std::cout << "HLT_Ele20_eta2p1_WPLoose_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele20_eta2p1_WPLoose_Gsf_ << " / " << counter_cached_HLT_Ele20_eta2p1_WPLoose_Gsf_ << std::endl;;
    std::cout << "HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28 (uncached/cached calls): " << counter_uncached_HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28_ << " / " << counter_cached_HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28_ << std::endl;;
    std::cout << "HLT_Ele22_eta2p1_WPLoose_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele22_eta2p1_WPLoose_Gsf_ << " / " << counter_cached_HLT_Ele22_eta2p1_WPLoose_Gsf_ << std::endl;;
    std::cout << "HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ << " / " << counter_cached_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ << std::endl;;
    std::cout << "HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29 (uncached/cached calls): " << counter_uncached_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29_ << " / " << counter_cached_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29_ << std::endl;;
    std::cout << "HLT_Ele23_CaloIdL_TrackIdL_IsoVL (uncached/cached calls): " << counter_uncached_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_ << " / " << counter_cached_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_ << std::endl;;
    std::cout << "HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30 (uncached/cached calls): " << counter_uncached_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_ << " / " << counter_cached_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_ << std::endl;;
    std::cout << "HLT_Ele23_CaloIdM_TrackIdM_PFJet30 (uncached/cached calls): " << counter_uncached_HLT_Ele23_CaloIdM_TrackIdM_PFJet30_ << " / " << counter_cached_HLT_Ele23_CaloIdM_TrackIdM_PFJet30_ << std::endl;;
    std::cout << "HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL (uncached/cached calls): " << counter_uncached_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_ << " / " << counter_cached_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_ << std::endl;;
    std::cout << "HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ (uncached/cached calls): " << counter_uncached_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_ << " / " << counter_cached_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_ << std::endl;;
    std::cout << "HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded (uncached/cached calls): " << counter_uncached_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded_ << " / " << counter_cached_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded_ << std::endl;;
    std::cout << "HLT_Ele23_WPLoose_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele23_WPLoose_Gsf_ << " / " << counter_cached_HLT_Ele23_WPLoose_Gsf_ << std::endl;;
    std::cout << "HLT_Ele23_WPLoose_Gsf_WHbbBoost (uncached/cached calls): " << counter_uncached_HLT_Ele23_WPLoose_Gsf_WHbbBoost_ << " / " << counter_cached_HLT_Ele23_WPLoose_Gsf_WHbbBoost_ << std::endl;;
    std::cout << "HLT_Ele24_eta2p1_WPLoose_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele24_eta2p1_WPLoose_Gsf_ << " / " << counter_cached_HLT_Ele24_eta2p1_WPLoose_Gsf_ << std::endl;;
    std::cout << "HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20 (uncached/cached calls): " << counter_uncached_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_ << " / " << counter_cached_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_ << std::endl;;
    std::cout << "HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ << " / " << counter_cached_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ << std::endl;;
    std::cout << "HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30 (uncached/cached calls): " << counter_uncached_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30_ << " / " << counter_cached_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30_ << std::endl;;
    std::cout << "HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1_ << " / " << counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1_ << " / " << counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1_ << std::endl;;
    std::cout << "HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_ << " / " << counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_ << " / " << counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_ << std::endl;;
    std::cout << "HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_ << " / " << counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1_ << " / " << counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1_ << " / " << counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1_ << std::endl;;
    std::cout << "HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_ << " / " << counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_ << " / " << counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_ << std::endl;;
    std::cout << "HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1_ << " / " << counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1_ << " / " << counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1_ << std::endl;;
    std::cout << "HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_ << " / " << counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_ << " / " << counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_ << std::endl;;
    std::cout << "HLT_Ele250_CaloIdVT_GsfTrkIdT (uncached/cached calls): " << counter_uncached_HLT_Ele250_CaloIdVT_GsfTrkIdT_ << " / " << counter_cached_HLT_Ele250_CaloIdVT_GsfTrkIdT_ << std::endl;;
    std::cout << "HLT_Ele25_WPTight_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele25_WPTight_Gsf_ << " / " << counter_cached_HLT_Ele25_WPTight_Gsf_ << std::endl;;
    std::cout << "HLT_Ele25_eta2p1_WPLoose_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele25_eta2p1_WPLoose_Gsf_ << " / " << counter_cached_HLT_Ele25_eta2p1_WPLoose_Gsf_ << std::endl;;
    std::cout << "HLT_Ele25_eta2p1_WPTight_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele25_eta2p1_WPTight_Gsf_ << " / " << counter_cached_HLT_Ele25_eta2p1_WPTight_Gsf_ << std::endl;;
    std::cout << "HLT_Ele27_Ele37_CaloIdL_MW (uncached/cached calls): " << counter_uncached_HLT_Ele27_Ele37_CaloIdL_MW_ << " / " << counter_cached_HLT_Ele27_Ele37_CaloIdL_MW_ << std::endl;;
    std::cout << "HLT_Ele27_HighEta_Ele20_Mass55 (uncached/cached calls): " << counter_uncached_HLT_Ele27_HighEta_Ele20_Mass55_ << " / " << counter_cached_HLT_Ele27_HighEta_Ele20_Mass55_ << std::endl;;
    std::cout << "HLT_Ele27_WPLoose_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele27_WPLoose_Gsf_ << " / " << counter_cached_HLT_Ele27_WPLoose_Gsf_ << std::endl;;
    std::cout << "HLT_Ele27_WPLoose_Gsf_WHbbBoost (uncached/cached calls): " << counter_uncached_HLT_Ele27_WPLoose_Gsf_WHbbBoost_ << " / " << counter_cached_HLT_Ele27_WPLoose_Gsf_WHbbBoost_ << std::endl;;
    std::cout << "HLT_Ele27_WPTight_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele27_WPTight_Gsf_ << " / " << counter_cached_HLT_Ele27_WPTight_Gsf_ << std::endl;;
    std::cout << "HLT_Ele27_WPTight_Gsf_L1JetTauSeeded (uncached/cached calls): " << counter_uncached_HLT_Ele27_WPTight_Gsf_L1JetTauSeeded_ << " / " << counter_cached_HLT_Ele27_WPTight_Gsf_L1JetTauSeeded_ << std::endl;;
    std::cout << "HLT_Ele27_eta2p1_WPLoose_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele27_eta2p1_WPLoose_Gsf_ << " / " << counter_cached_HLT_Ele27_eta2p1_WPLoose_Gsf_ << std::endl;;
    std::cout << "HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_Ele27_eta2p1_WPLoose_Gsf_HT200 (uncached/cached calls): " << counter_uncached_HLT_Ele27_eta2p1_WPLoose_Gsf_HT200_ << " / " << counter_cached_HLT_Ele27_eta2p1_WPLoose_Gsf_HT200_ << std::endl;;
    std::cout << "HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ << " / " << counter_cached_HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ << std::endl;;
    std::cout << "HLT_Ele27_eta2p1_WPTight_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele27_eta2p1_WPTight_Gsf_ << " / " << counter_cached_HLT_Ele27_eta2p1_WPTight_Gsf_ << std::endl;;
    std::cout << "HLT_Ele28_HighEta_SC20_Mass55 (uncached/cached calls): " << counter_uncached_HLT_Ele28_HighEta_SC20_Mass55_ << " / " << counter_cached_HLT_Ele28_HighEta_SC20_Mass55_ << std::endl;;
    std::cout << "HLT_Ele28_WPTight_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele28_WPTight_Gsf_ << " / " << counter_cached_HLT_Ele28_WPTight_Gsf_ << std::endl;;
    std::cout << "HLT_Ele28_eta2p1_WPTight_Gsf_HT150 (uncached/cached calls): " << counter_uncached_HLT_Ele28_eta2p1_WPTight_Gsf_HT150_ << " / " << counter_cached_HLT_Ele28_eta2p1_WPTight_Gsf_HT150_ << std::endl;;
    std::cout << "HLT_Ele300_CaloIdVT_GsfTrkIdT (uncached/cached calls): " << counter_uncached_HLT_Ele300_CaloIdVT_GsfTrkIdT_ << " / " << counter_cached_HLT_Ele300_CaloIdVT_GsfTrkIdT_ << std::endl;;
    std::cout << "HLT_Ele30WP60_Ele8_Mass55 (uncached/cached calls): " << counter_uncached_HLT_Ele30WP60_Ele8_Mass55_ << " / " << counter_cached_HLT_Ele30WP60_Ele8_Mass55_ << std::endl;;
    std::cout << "HLT_Ele30WP60_SC4_Mass55 (uncached/cached calls): " << counter_uncached_HLT_Ele30WP60_SC4_Mass55_ << " / " << counter_cached_HLT_Ele30WP60_SC4_Mass55_ << std::endl;;
    std::cout << "HLT_Ele30_WPTight_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele30_WPTight_Gsf_ << " / " << counter_cached_HLT_Ele30_WPTight_Gsf_ << std::endl;;
    std::cout << "HLT_Ele30_eta2p1_WPLoose_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele30_eta2p1_WPLoose_Gsf_ << " / " << counter_cached_HLT_Ele30_eta2p1_WPLoose_Gsf_ << std::endl;;
    std::cout << "HLT_Ele30_eta2p1_WPTight_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele30_eta2p1_WPTight_Gsf_ << " / " << counter_cached_HLT_Ele30_eta2p1_WPTight_Gsf_ << std::endl;;
    std::cout << "HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned (uncached/cached calls): " << counter_uncached_HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_ << " / " << counter_cached_HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_ << std::endl;;
    std::cout << "HLT_Ele32_WPTight_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele32_WPTight_Gsf_ << " / " << counter_cached_HLT_Ele32_WPTight_Gsf_ << std::endl;;
    std::cout << "HLT_Ele32_WPTight_Gsf_L1DoubleEG (uncached/cached calls): " << counter_uncached_HLT_Ele32_WPTight_Gsf_L1DoubleEG_ << " / " << counter_cached_HLT_Ele32_WPTight_Gsf_L1DoubleEG_ << std::endl;;
    std::cout << "HLT_Ele32_eta2p1_WPLoose_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele32_eta2p1_WPLoose_Gsf_ << " / " << counter_cached_HLT_Ele32_eta2p1_WPLoose_Gsf_ << std::endl;;
    std::cout << "HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ << " / " << counter_cached_HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ << std::endl;;
    std::cout << "HLT_Ele32_eta2p1_WPTight_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele32_eta2p1_WPTight_Gsf_ << " / " << counter_cached_HLT_Ele32_eta2p1_WPTight_Gsf_ << std::endl;;
    std::cout << "HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50 (uncached/cached calls): " << counter_uncached_HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50_ << " / " << counter_cached_HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50_ << std::endl;;
    std::cout << "HLT_Ele35_WPLoose_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele35_WPLoose_Gsf_ << " / " << counter_cached_HLT_Ele35_WPLoose_Gsf_ << std::endl;;
    std::cout << "HLT_Ele35_WPTight_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele35_WPTight_Gsf_ << " / " << counter_cached_HLT_Ele35_WPTight_Gsf_ << std::endl;;
    std::cout << "HLT_Ele35_WPTight_Gsf_L1EGMT (uncached/cached calls): " << counter_uncached_HLT_Ele35_WPTight_Gsf_L1EGMT_ << " / " << counter_cached_HLT_Ele35_WPTight_Gsf_L1EGMT_ << std::endl;;
    std::cout << "HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ << " / " << counter_cached_HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ << std::endl;;
    std::cout << "HLT_Ele38_WPTight_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele38_WPTight_Gsf_ << " / " << counter_cached_HLT_Ele38_WPTight_Gsf_ << std::endl;;
    std::cout << "HLT_Ele40_WPTight_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele40_WPTight_Gsf_ << " / " << counter_cached_HLT_Ele40_WPTight_Gsf_ << std::endl;;
    std::cout << "HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50 (uncached/cached calls): " << counter_uncached_HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50_ << " / " << counter_cached_HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50_ << std::endl;;
    std::cout << "HLT_Ele45_WPLoose_Gsf (uncached/cached calls): " << counter_uncached_HLT_Ele45_WPLoose_Gsf_ << " / " << counter_cached_HLT_Ele45_WPLoose_Gsf_ << std::endl;;
    std::cout << "HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded (uncached/cached calls): " << counter_uncached_HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded_ << " / " << counter_cached_HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded_ << std::endl;;
    std::cout << "HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40 (uncached/cached calls): " << counter_uncached_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_ << " / " << counter_cached_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_ << std::endl;;
    std::cout << "HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35 (uncached/cached calls): " << counter_uncached_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_ << " / " << counter_cached_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_ << std::endl;;
    std::cout << "HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140 (uncached/cached calls): " << counter_uncached_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140_ << " / " << counter_cached_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140_ << std::endl;;
    std::cout << "HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165 (uncached/cached calls): " << counter_uncached_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_ << " / " << counter_cached_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_ << std::endl;;
    std::cout << "HLT_Ele50_IsoVVVL_PFHT400 (uncached/cached calls): " << counter_uncached_HLT_Ele50_IsoVVVL_PFHT400_ << " / " << counter_cached_HLT_Ele50_IsoVVVL_PFHT400_ << std::endl;;
    std::cout << "HLT_Ele50_IsoVVVL_PFHT450 (uncached/cached calls): " << counter_uncached_HLT_Ele50_IsoVVVL_PFHT450_ << " / " << counter_cached_HLT_Ele50_IsoVVVL_PFHT450_ << std::endl;;
    std::cout << "HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30 (uncached/cached calls): " << counter_uncached_HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_ << " / " << counter_cached_HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_ << std::endl;;
    std::cout << "HLT_Ele8_CaloIdM_TrackIdM_PFJet30 (uncached/cached calls): " << counter_uncached_HLT_Ele8_CaloIdM_TrackIdM_PFJet30_ << " / " << counter_cached_HLT_Ele8_CaloIdM_TrackIdM_PFJet30_ << std::endl;;
    std::cout << "HLT_EphemeralPhysics (uncached/cached calls): " << counter_uncached_HLT_EphemeralPhysics_ << " / " << counter_cached_HLT_EphemeralPhysics_ << std::endl;;
    std::cout << "HLT_EphemeralZeroBias (uncached/cached calls): " << counter_uncached_HLT_EphemeralZeroBias_ << " / " << counter_cached_HLT_EphemeralZeroBias_ << std::endl;;
    std::cout << "HLT_ExpressMuons (uncached/cached calls): " << counter_uncached_HLT_ExpressMuons_ << " / " << counter_cached_HLT_ExpressMuons_ << std::endl;;
    std::cout << "HLT_FullTrack_Multiplicity100 (uncached/cached calls): " << counter_uncached_HLT_FullTrack_Multiplicity100_ << " / " << counter_cached_HLT_FullTrack_Multiplicity100_ << std::endl;;
    std::cout << "HLT_FullTrack_Multiplicity105 (uncached/cached calls): " << counter_uncached_HLT_FullTrack_Multiplicity105_ << " / " << counter_cached_HLT_FullTrack_Multiplicity105_ << std::endl;;
    std::cout << "HLT_FullTrack_Multiplicity130 (uncached/cached calls): " << counter_uncached_HLT_FullTrack_Multiplicity130_ << " / " << counter_cached_HLT_FullTrack_Multiplicity130_ << std::endl;;
    std::cout << "HLT_FullTrack_Multiplicity135 (uncached/cached calls): " << counter_uncached_HLT_FullTrack_Multiplicity135_ << " / " << counter_cached_HLT_FullTrack_Multiplicity135_ << std::endl;;
    std::cout << "HLT_FullTrack_Multiplicity155 (uncached/cached calls): " << counter_uncached_HLT_FullTrack_Multiplicity155_ << " / " << counter_cached_HLT_FullTrack_Multiplicity155_ << std::endl;;
    std::cout << "HLT_FullTrack_Multiplicity85 (uncached/cached calls): " << counter_uncached_HLT_FullTrack_Multiplicity85_ << " / " << counter_cached_HLT_FullTrack_Multiplicity85_ << std::endl;;
    std::cout << "HLT_FullTracks_Multiplicity100 (uncached/cached calls): " << counter_uncached_HLT_FullTracks_Multiplicity100_ << " / " << counter_cached_HLT_FullTracks_Multiplicity100_ << std::endl;;
    std::cout << "HLT_FullTracks_Multiplicity130 (uncached/cached calls): " << counter_uncached_HLT_FullTracks_Multiplicity130_ << " / " << counter_cached_HLT_FullTracks_Multiplicity130_ << std::endl;;
    std::cout << "HLT_FullTracks_Multiplicity150 (uncached/cached calls): " << counter_uncached_HLT_FullTracks_Multiplicity150_ << " / " << counter_cached_HLT_FullTracks_Multiplicity150_ << std::endl;;
    std::cout << "HLT_FullTracks_Multiplicity80 (uncached/cached calls): " << counter_uncached_HLT_FullTracks_Multiplicity80_ << " / " << counter_cached_HLT_FullTracks_Multiplicity80_ << std::endl;;
    std::cout << "HLT_GlobalRunHPDNoise (uncached/cached calls): " << counter_uncached_HLT_GlobalRunHPDNoise_ << " / " << counter_cached_HLT_GlobalRunHPDNoise_ << std::endl;;
    std::cout << "HLT_HISinglePhoton10 (uncached/cached calls): " << counter_uncached_HLT_HISinglePhoton10_ << " / " << counter_cached_HLT_HISinglePhoton10_ << std::endl;;
    std::cout << "HLT_HISinglePhoton10_Eta3p1ForPPRef (uncached/cached calls): " << counter_uncached_HLT_HISinglePhoton10_Eta3p1ForPPRef_ << " / " << counter_cached_HLT_HISinglePhoton10_Eta3p1ForPPRef_ << std::endl;;
    std::cout << "HLT_HISinglePhoton15 (uncached/cached calls): " << counter_uncached_HLT_HISinglePhoton15_ << " / " << counter_cached_HLT_HISinglePhoton15_ << std::endl;;
    std::cout << "HLT_HISinglePhoton20 (uncached/cached calls): " << counter_uncached_HLT_HISinglePhoton20_ << " / " << counter_cached_HLT_HISinglePhoton20_ << std::endl;;
    std::cout << "HLT_HISinglePhoton20_Eta3p1ForPPRef (uncached/cached calls): " << counter_uncached_HLT_HISinglePhoton20_Eta3p1ForPPRef_ << " / " << counter_cached_HLT_HISinglePhoton20_Eta3p1ForPPRef_ << std::endl;;
    std::cout << "HLT_HISinglePhoton30_Eta3p1ForPPRef (uncached/cached calls): " << counter_uncached_HLT_HISinglePhoton30_Eta3p1ForPPRef_ << " / " << counter_cached_HLT_HISinglePhoton30_Eta3p1ForPPRef_ << std::endl;;
    std::cout << "HLT_HISinglePhoton40 (uncached/cached calls): " << counter_uncached_HLT_HISinglePhoton40_ << " / " << counter_cached_HLT_HISinglePhoton40_ << std::endl;;
    std::cout << "HLT_HISinglePhoton40_Eta3p1ForPPRef (uncached/cached calls): " << counter_uncached_HLT_HISinglePhoton40_Eta3p1ForPPRef_ << " / " << counter_cached_HLT_HISinglePhoton40_Eta3p1ForPPRef_ << std::endl;;
    std::cout << "HLT_HISinglePhoton50_Eta3p1ForPPRef (uncached/cached calls): " << counter_uncached_HLT_HISinglePhoton50_Eta3p1ForPPRef_ << " / " << counter_cached_HLT_HISinglePhoton50_Eta3p1ForPPRef_ << std::endl;;
    std::cout << "HLT_HISinglePhoton60 (uncached/cached calls): " << counter_uncached_HLT_HISinglePhoton60_ << " / " << counter_cached_HLT_HISinglePhoton60_ << std::endl;;
    std::cout << "HLT_HISinglePhoton60_Eta3p1ForPPRef (uncached/cached calls): " << counter_uncached_HLT_HISinglePhoton60_Eta3p1ForPPRef_ << " / " << counter_cached_HLT_HISinglePhoton60_Eta3p1ForPPRef_ << std::endl;;
    std::cout << "HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_ << " / " << counter_cached_HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_HT200 (uncached/cached calls): " << counter_uncached_HLT_HT200_ << " / " << counter_cached_HLT_HT200_ << std::endl;;
    std::cout << "HLT_HT2000 (uncached/cached calls): " << counter_uncached_HLT_HT2000_ << " / " << counter_cached_HLT_HT2000_ << std::endl;;
    std::cout << "HLT_HT200_DisplacedDijet40_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_HT200_DisplacedDijet40_DisplacedTrack_ << " / " << counter_cached_HLT_HT200_DisplacedDijet40_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless (uncached/cached calls): " << counter_uncached_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_ << " / " << counter_cached_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_ << std::endl;;
    std::cout << "HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive (uncached/cached calls): " << counter_uncached_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_ << " / " << counter_cached_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_ << std::endl;;
    std::cout << "HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless (uncached/cached calls): " << counter_uncached_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_ << " / " << counter_cached_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_ << std::endl;;
    std::cout << "HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive (uncached/cached calls): " << counter_uncached_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_ << " / " << counter_cached_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_ << std::endl;;
    std::cout << "HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5 (uncached/cached calls): " << counter_uncached_HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5_ << " / " << counter_cached_HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5_ << std::endl;;
    std::cout << "HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5 (uncached/cached calls): " << counter_uncached_HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_ << " / " << counter_cached_HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_ << std::endl;;
    std::cout << "HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_ << " / " << counter_cached_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5 (uncached/cached calls): " << counter_uncached_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_ << " / " << counter_cached_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_ << std::endl;;
    std::cout << "HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_ << " / " << counter_cached_HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_HT2500 (uncached/cached calls): " << counter_uncached_HLT_HT2500_ << " / " << counter_cached_HLT_HT2500_ << std::endl;;
    std::cout << "HLT_HT250_CaloMET70 (uncached/cached calls): " << counter_uncached_HLT_HT250_CaloMET70_ << " / " << counter_cached_HLT_HT250_CaloMET70_ << std::endl;;
    std::cout << "HLT_HT250_DisplacedDijet40_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_HT250_DisplacedDijet40_DisplacedTrack_ << " / " << counter_cached_HLT_HT250_DisplacedDijet40_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_ << " / " << counter_cached_HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_HT275 (uncached/cached calls): " << counter_uncached_HLT_HT275_ << " / " << counter_cached_HLT_HT275_ << std::endl;;
    std::cout << "HLT_HT300PT30_QuadJet_75_60_45_40 (uncached/cached calls): " << counter_uncached_HLT_HT300PT30_QuadJet_75_60_45_40_ << " / " << counter_cached_HLT_HT300PT30_QuadJet_75_60_45_40_ << std::endl;;
    std::cout << "HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07 (uncached/cached calls): " << counter_uncached_HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07_ << " / " << counter_cached_HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07_ << std::endl;;
    std::cout << "HLT_HT300_Beamspot (uncached/cached calls): " << counter_uncached_HLT_HT300_Beamspot_ << " / " << counter_cached_HLT_HT300_Beamspot_ << std::endl;;
    std::cout << "HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive (uncached/cached calls): " << counter_uncached_HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_ << " / " << counter_cached_HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_ << std::endl;;
    std::cout << "HLT_HT325 (uncached/cached calls): " << counter_uncached_HLT_HT325_ << " / " << counter_cached_HLT_HT325_ << std::endl;;
    std::cout << "HLT_HT350_DisplacedDijet40_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_HT350_DisplacedDijet40_DisplacedTrack_ << " / " << counter_cached_HLT_HT350_DisplacedDijet40_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_HT350_DisplacedDijet40_Inclusive (uncached/cached calls): " << counter_uncached_HLT_HT350_DisplacedDijet40_Inclusive_ << " / " << counter_cached_HLT_HT350_DisplacedDijet40_Inclusive_ << std::endl;;
    std::cout << "HLT_HT350_DisplacedDijet80_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_HT350_DisplacedDijet80_DisplacedTrack_ << " / " << counter_cached_HLT_HT350_DisplacedDijet80_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack_ << " / " << counter_cached_HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_HT400_DisplacedDijet40_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_HT400_DisplacedDijet40_DisplacedTrack_ << " / " << counter_cached_HLT_HT400_DisplacedDijet40_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_HT400_DisplacedDijet40_Inclusive (uncached/cached calls): " << counter_uncached_HLT_HT400_DisplacedDijet40_Inclusive_ << " / " << counter_cached_HLT_HT400_DisplacedDijet40_Inclusive_ << std::endl;;
    std::cout << "HLT_HT410to430 (uncached/cached calls): " << counter_uncached_HLT_HT410to430_ << " / " << counter_cached_HLT_HT410to430_ << std::endl;;
    std::cout << "HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive (uncached/cached calls): " << counter_uncached_HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_ << " / " << counter_cached_HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_ << std::endl;;
    std::cout << "HLT_HT425 (uncached/cached calls): " << counter_uncached_HLT_HT425_ << " / " << counter_cached_HLT_HT425_ << std::endl;;
    std::cout << "HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive (uncached/cached calls): " << counter_uncached_HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_ << " / " << counter_cached_HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_ << std::endl;;
    std::cout << "HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless (uncached/cached calls): " << counter_uncached_HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_ << " / " << counter_cached_HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_ << std::endl;;
    std::cout << "HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive (uncached/cached calls): " << counter_uncached_HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_ << " / " << counter_cached_HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_ << std::endl;;
    std::cout << "HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive (uncached/cached calls): " << counter_uncached_HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_ << " / " << counter_cached_HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_ << std::endl;;
    std::cout << "HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless (uncached/cached calls): " << counter_uncached_HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_ << " / " << counter_cached_HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_ << std::endl;;
    std::cout << "HLT_HT430_DelayedJet40_SingleDelay1nsInclusive (uncached/cached calls): " << counter_uncached_HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_ << " / " << counter_cached_HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_ << std::endl;;
    std::cout << "HLT_HT430_DelayedJet40_SingleDelay1nsTrackless (uncached/cached calls): " << counter_uncached_HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_ << " / " << counter_cached_HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_ << std::endl;;
    std::cout << "HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive (uncached/cached calls): " << counter_uncached_HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_ << " / " << counter_cached_HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_ << std::endl;;
    std::cout << "HLT_HT430_DelayedJet40_SingleDelay2nsInclusive (uncached/cached calls): " << counter_uncached_HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_ << " / " << counter_cached_HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_ << std::endl;;
    std::cout << "HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5 (uncached/cached calls): " << counter_uncached_HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5_ << " / " << counter_cached_HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5_ << std::endl;;
    std::cout << "HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5 (uncached/cached calls): " << counter_uncached_HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5_ << " / " << counter_cached_HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5_ << std::endl;;
    std::cout << "HLT_HT430_DisplacedDijet40_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_HT430_DisplacedDijet40_DisplacedTrack_ << " / " << counter_cached_HLT_HT430_DisplacedDijet40_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5 (uncached/cached calls): " << counter_uncached_HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_ << " / " << counter_cached_HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_ << std::endl;;
    std::cout << "HLT_HT430_DisplacedDijet60_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_HT430_DisplacedDijet60_DisplacedTrack_ << " / " << counter_cached_HLT_HT430_DisplacedDijet60_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_HT430_DisplacedDijet80_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_HT430_DisplacedDijet80_DisplacedTrack_ << " / " << counter_cached_HLT_HT430_DisplacedDijet80_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_HT430to450 (uncached/cached calls): " << counter_uncached_HLT_HT430to450_ << " / " << counter_cached_HLT_HT430to450_ << std::endl;;
    std::cout << "HLT_HT450_Beamspot (uncached/cached calls): " << counter_uncached_HLT_HT450_Beamspot_ << " / " << counter_cached_HLT_HT450_Beamspot_ << std::endl;;
    std::cout << "HLT_HT450to470 (uncached/cached calls): " << counter_uncached_HLT_HT450to470_ << " / " << counter_cached_HLT_HT450to470_ << std::endl;;
    std::cout << "HLT_HT470to500 (uncached/cached calls): " << counter_uncached_HLT_HT470to500_ << " / " << counter_cached_HLT_HT470to500_ << std::endl;;
    std::cout << "HLT_HT500_DisplacedDijet40_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_HT500_DisplacedDijet40_DisplacedTrack_ << " / " << counter_cached_HLT_HT500_DisplacedDijet40_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_HT500_DisplacedDijet40_Inclusive (uncached/cached calls): " << counter_uncached_HLT_HT500_DisplacedDijet40_Inclusive_ << " / " << counter_cached_HLT_HT500_DisplacedDijet40_Inclusive_ << std::endl;;
    std::cout << "HLT_HT500to550 (uncached/cached calls): " << counter_uncached_HLT_HT500to550_ << " / " << counter_cached_HLT_HT500to550_ << std::endl;;
    std::cout << "HLT_HT550_DisplacedDijet40_Inclusive (uncached/cached calls): " << counter_uncached_HLT_HT550_DisplacedDijet40_Inclusive_ << " / " << counter_cached_HLT_HT550_DisplacedDijet40_Inclusive_ << std::endl;;
    std::cout << "HLT_HT550_DisplacedDijet60_Inclusive (uncached/cached calls): " << counter_uncached_HLT_HT550_DisplacedDijet60_Inclusive_ << " / " << counter_cached_HLT_HT550_DisplacedDijet60_Inclusive_ << std::endl;;
    std::cout << "HLT_HT550_DisplacedDijet80_Inclusive (uncached/cached calls): " << counter_uncached_HLT_HT550_DisplacedDijet80_Inclusive_ << " / " << counter_cached_HLT_HT550_DisplacedDijet80_Inclusive_ << std::endl;;
    std::cout << "HLT_HT550to650 (uncached/cached calls): " << counter_uncached_HLT_HT550to650_ << " / " << counter_cached_HLT_HT550to650_ << std::endl;;
    std::cout << "HLT_HT575 (uncached/cached calls): " << counter_uncached_HLT_HT575_ << " / " << counter_cached_HLT_HT575_ << std::endl;;
    std::cout << "HLT_HT650 (uncached/cached calls): " << counter_uncached_HLT_HT650_ << " / " << counter_cached_HLT_HT650_ << std::endl;;
    std::cout << "HLT_HT650_DisplacedDijet60_Inclusive (uncached/cached calls): " << counter_uncached_HLT_HT650_DisplacedDijet60_Inclusive_ << " / " << counter_cached_HLT_HT650_DisplacedDijet60_Inclusive_ << std::endl;;
    std::cout << "HLT_HT650_DisplacedDijet80_Inclusive (uncached/cached calls): " << counter_uncached_HLT_HT650_DisplacedDijet80_Inclusive_ << " / " << counter_cached_HLT_HT650_DisplacedDijet80_Inclusive_ << std::endl;;
    std::cout << "HLT_HT750_DisplacedDijet80_Inclusive (uncached/cached calls): " << counter_uncached_HLT_HT750_DisplacedDijet80_Inclusive_ << " / " << counter_cached_HLT_HT750_DisplacedDijet80_Inclusive_ << std::endl;;
    std::cout << "HLT_HcalCalibration (uncached/cached calls): " << counter_uncached_HLT_HcalCalibration_ << " / " << counter_cached_HLT_HcalCalibration_ << std::endl;;
    std::cout << "HLT_HcalIsolatedbunch (uncached/cached calls): " << counter_uncached_HLT_HcalIsolatedbunch_ << " / " << counter_cached_HLT_HcalIsolatedbunch_ << std::endl;;
    std::cout << "HLT_HcalNZS (uncached/cached calls): " << counter_uncached_HLT_HcalNZS_ << " / " << counter_cached_HLT_HcalNZS_ << std::endl;;
    std::cout << "HLT_HcalPhiSym (uncached/cached calls): " << counter_uncached_HLT_HcalPhiSym_ << " / " << counter_cached_HLT_HcalPhiSym_ << std::endl;;
    std::cout << "HLT_HighPtTkMu100 (uncached/cached calls): " << counter_uncached_HLT_HighPtTkMu100_ << " / " << counter_cached_HLT_HighPtTkMu100_ << std::endl;;
    std::cout << "HLT_IsoMu16_eta2p1_MET30 (uncached/cached calls): " << counter_uncached_HLT_IsoMu16_eta2p1_MET30_ << " / " << counter_cached_HLT_IsoMu16_eta2p1_MET30_ << std::endl;;
    std::cout << "HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1_ << " / " << counter_cached_HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1_ << std::endl;;
    std::cout << "HLT_IsoMu17_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu17_eta2p1_ << " / " << counter_cached_HLT_IsoMu17_eta2p1_ << std::endl;;
    std::cout << "HLT_IsoMu17_eta2p1_LooseIsoPFTau20 (uncached/cached calls): " << counter_uncached_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_ << " / " << counter_cached_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_ << std::endl;;
    std::cout << "HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1_ << " / " << counter_cached_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu18 (uncached/cached calls): " << counter_uncached_HLT_IsoMu18_ << " / " << counter_cached_HLT_IsoMu18_ << std::endl;;
    std::cout << "HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20 (uncached/cached calls): " << counter_uncached_HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20_ << " / " << counter_cached_HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20_ << std::endl;;
    std::cout << "HLT_IsoMu19_eta2p1_LooseIsoPFTau20 (uncached/cached calls): " << counter_uncached_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_ << " / " << counter_cached_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_ << std::endl;;
    std::cout << "HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1_ << " / " << counter_cached_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_IsoMu20 (uncached/cached calls): " << counter_uncached_HLT_IsoMu20_ << " / " << counter_cached_HLT_IsoMu20_ << std::endl;;
    std::cout << "HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1_ << " / " << counter_cached_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1_ << " / " << counter_cached_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_ << " / " << counter_cached_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_ << " / " << counter_cached_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_ << " / " << counter_cached_HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1_ << " / " << counter_cached_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1_ << " / " << counter_cached_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_ << " / " << counter_cached_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_ << " / " << counter_cached_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1_ << " / " << counter_cached_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1_ << " / " << counter_cached_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_ << " / " << counter_cached_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_ << " / " << counter_cached_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1_ << " / " << counter_cached_HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1_ << " / " << counter_cached_HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_IsoMu22 (uncached/cached calls): " << counter_uncached_HLT_IsoMu22_ << " / " << counter_cached_HLT_IsoMu22_ << std::endl;;
    std::cout << "HLT_IsoMu22_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu22_eta2p1_ << " / " << counter_cached_HLT_IsoMu22_eta2p1_ << std::endl;;
    std::cout << "HLT_IsoMu24 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_ << " / " << counter_cached_HLT_IsoMu24_ << std::endl;;
    std::cout << "HLT_IsoMu24_TwoProngs35 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_TwoProngs35_ << " / " << counter_cached_HLT_IsoMu24_TwoProngs35_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_ << " / " << counter_cached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_ << std::endl;;
    std::cout << "HLT_IsoMu27 (uncached/cached calls): " << counter_uncached_HLT_IsoMu27_ << " / " << counter_cached_HLT_IsoMu27_ << std::endl;;
    std::cout << "HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1_ << " / " << counter_cached_HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1_ << " / " << counter_cached_HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_ << " / " << counter_cached_HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu27_MET90 (uncached/cached calls): " << counter_uncached_HLT_IsoMu27_MET90_ << " / " << counter_cached_HLT_IsoMu27_MET90_ << std::endl;;
    std::cout << "HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1_ << " / " << counter_cached_HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1_ << " / " << counter_cached_HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_ << " / " << counter_cached_HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_ << " / " << counter_cached_HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1_ << " / " << counter_cached_HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1_ << " / " << counter_cached_HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1 (uncached/cached calls): " << counter_uncached_HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_ << " / " << counter_cached_HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_ << std::endl;;
    std::cout << "HLT_IsoMu30 (uncached/cached calls): " << counter_uncached_HLT_IsoMu30_ << " / " << counter_cached_HLT_IsoMu30_ << std::endl;;
    std::cout << "HLT_IsoMu50_AK8PFJet230_SoftDropMass40 (uncached/cached calls): " << counter_uncached_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_ << " / " << counter_cached_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_ << std::endl;;
    std::cout << "HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35 (uncached/cached calls): " << counter_uncached_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_ << " / " << counter_cached_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_ << std::endl;;
    std::cout << "HLT_IsoTkMu18 (uncached/cached calls): " << counter_uncached_HLT_IsoTkMu18_ << " / " << counter_cached_HLT_IsoTkMu18_ << std::endl;;
    std::cout << "HLT_IsoTkMu20 (uncached/cached calls): " << counter_uncached_HLT_IsoTkMu20_ << " / " << counter_cached_HLT_IsoTkMu20_ << std::endl;;
    std::cout << "HLT_IsoTkMu22 (uncached/cached calls): " << counter_uncached_HLT_IsoTkMu22_ << " / " << counter_cached_HLT_IsoTkMu22_ << std::endl;;
    std::cout << "HLT_IsoTkMu22_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_IsoTkMu22_eta2p1_ << " / " << counter_cached_HLT_IsoTkMu22_eta2p1_ << std::endl;;
    std::cout << "HLT_IsoTkMu24 (uncached/cached calls): " << counter_uncached_HLT_IsoTkMu24_ << " / " << counter_cached_HLT_IsoTkMu24_ << std::endl;;
    std::cout << "HLT_IsoTkMu24_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_IsoTkMu24_eta2p1_ << " / " << counter_cached_HLT_IsoTkMu24_eta2p1_ << std::endl;;
    std::cout << "HLT_IsoTkMu27 (uncached/cached calls): " << counter_uncached_HLT_IsoTkMu27_ << " / " << counter_cached_HLT_IsoTkMu27_ << std::endl;;
    std::cout << "HLT_IsoTrackHB (uncached/cached calls): " << counter_uncached_HLT_IsoTrackHB_ << " / " << counter_cached_HLT_IsoTrackHB_ << std::endl;;
    std::cout << "HLT_IsoTrackHE (uncached/cached calls): " << counter_uncached_HLT_IsoTrackHE_ << " / " << counter_cached_HLT_IsoTrackHE_ << std::endl;;
    std::cout << "HLT_JetE30_NoBPTX (uncached/cached calls): " << counter_uncached_HLT_JetE30_NoBPTX_ << " / " << counter_cached_HLT_JetE30_NoBPTX_ << std::endl;;
    std::cout << "HLT_JetE30_NoBPTX3BX (uncached/cached calls): " << counter_uncached_HLT_JetE30_NoBPTX3BX_ << " / " << counter_cached_HLT_JetE30_NoBPTX3BX_ << std::endl;;
    std::cout << "HLT_JetE50_NoBPTX3BX (uncached/cached calls): " << counter_uncached_HLT_JetE50_NoBPTX3BX_ << " / " << counter_cached_HLT_JetE50_NoBPTX3BX_ << std::endl;;
    std::cout << "HLT_JetE70_NoBPTX3BX (uncached/cached calls): " << counter_uncached_HLT_JetE70_NoBPTX3BX_ << " / " << counter_cached_HLT_JetE70_NoBPTX3BX_ << std::endl;;
    std::cout << "HLT_L1BeamGasMinus (uncached/cached calls): " << counter_uncached_HLT_L1BeamGasMinus_ << " / " << counter_cached_HLT_L1BeamGasMinus_ << std::endl;;
    std::cout << "HLT_L1BeamGasPlus (uncached/cached calls): " << counter_uncached_HLT_L1BeamGasPlus_ << " / " << counter_cached_HLT_L1BeamGasPlus_ << std::endl;;
    std::cout << "HLT_L1BptxMinus (uncached/cached calls): " << counter_uncached_HLT_L1BptxMinus_ << " / " << counter_cached_HLT_L1BptxMinus_ << std::endl;;
    std::cout << "HLT_L1BptxPlus (uncached/cached calls): " << counter_uncached_HLT_L1BptxPlus_ << " / " << counter_cached_HLT_L1BptxPlus_ << std::endl;;
    std::cout << "HLT_L1BptxXOR (uncached/cached calls): " << counter_uncached_HLT_L1BptxXOR_ << " / " << counter_cached_HLT_L1BptxXOR_ << std::endl;;
    std::cout << "HLT_L1CSCShower_DTCluster50 (uncached/cached calls): " << counter_uncached_HLT_L1CSCShower_DTCluster50_ << " / " << counter_cached_HLT_L1CSCShower_DTCluster50_ << std::endl;;
    std::cout << "HLT_L1CSCShower_DTCluster75 (uncached/cached calls): " << counter_uncached_HLT_L1CSCShower_DTCluster75_ << " / " << counter_cached_HLT_L1CSCShower_DTCluster75_ << std::endl;;
    std::cout << "HLT_L1ETMHadSeeds (uncached/cached calls): " << counter_uncached_HLT_L1ETMHadSeeds_ << " / " << counter_cached_HLT_L1ETMHadSeeds_ << std::endl;;
    std::cout << "HLT_L1FatEvents (uncached/cached calls): " << counter_uncached_HLT_L1FatEvents_ << " / " << counter_cached_HLT_L1FatEvents_ << std::endl;;
    std::cout << "HLT_L1FatEvents_part0 (uncached/cached calls): " << counter_uncached_HLT_L1FatEvents_part0_ << " / " << counter_cached_HLT_L1FatEvents_part0_ << std::endl;;
    std::cout << "HLT_L1FatEvents_part1 (uncached/cached calls): " << counter_uncached_HLT_L1FatEvents_part1_ << " / " << counter_cached_HLT_L1FatEvents_part1_ << std::endl;;
    std::cout << "HLT_L1FatEvents_part2 (uncached/cached calls): " << counter_uncached_HLT_L1FatEvents_part2_ << " / " << counter_cached_HLT_L1FatEvents_part2_ << std::endl;;
    std::cout << "HLT_L1FatEvents_part3 (uncached/cached calls): " << counter_uncached_HLT_L1FatEvents_part3_ << " / " << counter_cached_HLT_L1FatEvents_part3_ << std::endl;;
    std::cout << "HLT_L1MET_DTCluster50 (uncached/cached calls): " << counter_uncached_HLT_L1MET_DTCluster50_ << " / " << counter_cached_HLT_L1MET_DTCluster50_ << std::endl;;
    std::cout << "HLT_L1MET_DTClusterNoMB1S50 (uncached/cached calls): " << counter_uncached_HLT_L1MET_DTClusterNoMB1S50_ << " / " << counter_cached_HLT_L1MET_DTClusterNoMB1S50_ << std::endl;;
    std::cout << "HLT_L1MinimumBiasHF0OR (uncached/cached calls): " << counter_uncached_HLT_L1MinimumBiasHF0OR_ << " / " << counter_cached_HLT_L1MinimumBiasHF0OR_ << std::endl;;
    std::cout << "HLT_L1MinimumBiasHF_AND (uncached/cached calls): " << counter_uncached_HLT_L1MinimumBiasHF_AND_ << " / " << counter_cached_HLT_L1MinimumBiasHF_AND_ << std::endl;;
    std::cout << "HLT_L1MinimumBiasHF_OR (uncached/cached calls): " << counter_uncached_HLT_L1MinimumBiasHF_OR_ << " / " << counter_cached_HLT_L1MinimumBiasHF_OR_ << std::endl;;
    std::cout << "HLT_L1MinimumBiasHF_OR_part0 (uncached/cached calls): " << counter_uncached_HLT_L1MinimumBiasHF_OR_part0_ << " / " << counter_cached_HLT_L1MinimumBiasHF_OR_part0_ << std::endl;;
    std::cout << "HLT_L1MinimumBiasHF_OR_part1 (uncached/cached calls): " << counter_uncached_HLT_L1MinimumBiasHF_OR_part1_ << " / " << counter_cached_HLT_L1MinimumBiasHF_OR_part1_ << std::endl;;
    std::cout << "HLT_L1MinimumBiasHF_OR_part2 (uncached/cached calls): " << counter_uncached_HLT_L1MinimumBiasHF_OR_part2_ << " / " << counter_cached_HLT_L1MinimumBiasHF_OR_part2_ << std::endl;;
    std::cout << "HLT_L1MinimumBiasHF_OR_part3 (uncached/cached calls): " << counter_uncached_HLT_L1MinimumBiasHF_OR_part3_ << " / " << counter_cached_HLT_L1MinimumBiasHF_OR_part3_ << std::endl;;
    std::cout << "HLT_L1MinimumBiasHF_OR_part4 (uncached/cached calls): " << counter_uncached_HLT_L1MinimumBiasHF_OR_part4_ << " / " << counter_cached_HLT_L1MinimumBiasHF_OR_part4_ << std::endl;;
    std::cout << "HLT_L1MinimumBiasHF_OR_part5 (uncached/cached calls): " << counter_uncached_HLT_L1MinimumBiasHF_OR_part5_ << " / " << counter_cached_HLT_L1MinimumBiasHF_OR_part5_ << std::endl;;
    std::cout << "HLT_L1MinimumBiasHF_OR_part6 (uncached/cached calls): " << counter_uncached_HLT_L1MinimumBiasHF_OR_part6_ << " / " << counter_cached_HLT_L1MinimumBiasHF_OR_part6_ << std::endl;;
    std::cout << "HLT_L1MinimumBiasHF_OR_part7 (uncached/cached calls): " << counter_uncached_HLT_L1MinimumBiasHF_OR_part7_ << " / " << counter_cached_HLT_L1MinimumBiasHF_OR_part7_ << std::endl;;
    std::cout << "HLT_L1MinimumBiasHF_OR_part8 (uncached/cached calls): " << counter_uncached_HLT_L1MinimumBiasHF_OR_part8_ << " / " << counter_cached_HLT_L1MinimumBiasHF_OR_part8_ << std::endl;;
    std::cout << "HLT_L1MinimumBiasHF_OR_part9 (uncached/cached calls): " << counter_uncached_HLT_L1MinimumBiasHF_OR_part9_ << " / " << counter_cached_HLT_L1MinimumBiasHF_OR_part9_ << std::endl;;
    std::cout << "HLT_L1Mu6HT240 (uncached/cached calls): " << counter_uncached_HLT_L1Mu6HT240_ << " / " << counter_cached_HLT_L1Mu6HT240_ << std::endl;;
    std::cout << "HLT_L1NotBptxOR (uncached/cached calls): " << counter_uncached_HLT_L1NotBptxOR_ << " / " << counter_cached_HLT_L1NotBptxOR_ << std::endl;;
    std::cout << "HLT_L1SingleMu16 (uncached/cached calls): " << counter_uncached_HLT_L1SingleMu16_ << " / " << counter_cached_HLT_L1SingleMu16_ << std::endl;;
    std::cout << "HLT_L1SingleMu18 (uncached/cached calls): " << counter_uncached_HLT_L1SingleMu18_ << " / " << counter_cached_HLT_L1SingleMu18_ << std::endl;;
    std::cout << "HLT_L1SingleMu25 (uncached/cached calls): " << counter_uncached_HLT_L1SingleMu25_ << " / " << counter_cached_HLT_L1SingleMu25_ << std::endl;;
    std::cout << "HLT_L1SingleMuCosmics (uncached/cached calls): " << counter_uncached_HLT_L1SingleMuCosmics_ << " / " << counter_cached_HLT_L1SingleMuCosmics_ << std::endl;;
    std::cout << "HLT_L1SingleMuOpen (uncached/cached calls): " << counter_uncached_HLT_L1SingleMuOpen_ << " / " << counter_cached_HLT_L1SingleMuOpen_ << std::endl;;
    std::cout << "HLT_L1SingleMuOpen_DT (uncached/cached calls): " << counter_uncached_HLT_L1SingleMuOpen_DT_ << " / " << counter_cached_HLT_L1SingleMuOpen_DT_ << std::endl;;
    std::cout << "HLT_L1UnpairedBunchBptxMinus (uncached/cached calls): " << counter_uncached_HLT_L1UnpairedBunchBptxMinus_ << " / " << counter_cached_HLT_L1UnpairedBunchBptxMinus_ << std::endl;;
    std::cout << "HLT_L1UnpairedBunchBptxPlus (uncached/cached calls): " << counter_uncached_HLT_L1UnpairedBunchBptxPlus_ << " / " << counter_cached_HLT_L1UnpairedBunchBptxPlus_ << std::endl;;
    std::cout << "HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142 (uncached/cached calls): " << counter_uncached_HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_ << " / " << counter_cached_HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_ << std::endl;;
    std::cout << "HLT_L1_DoubleJet30_Mass_Min400_Mu10 (uncached/cached calls): " << counter_uncached_HLT_L1_DoubleJet30_Mass_Min400_Mu10_ << " / " << counter_cached_HLT_L1_DoubleJet30_Mass_Min400_Mu10_ << std::endl;;
    std::cout << "HLT_L1_TripleJet_VBF (uncached/cached calls): " << counter_uncached_HLT_L1_TripleJet_VBF_ << " / " << counter_cached_HLT_L1_TripleJet_VBF_ << std::endl;;
    std::cout << "HLT_L2DoubleMu23_NoVertex (uncached/cached calls): " << counter_uncached_HLT_L2DoubleMu23_NoVertex_ << " / " << counter_cached_HLT_L2DoubleMu23_NoVertex_ << std::endl;;
    std::cout << "HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10 (uncached/cached calls): " << counter_uncached_HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10_ << " / " << counter_cached_HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10_ << std::endl;;
    std::cout << "HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10 (uncached/cached calls): " << counter_uncached_HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10_ << " / " << counter_cached_HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10_ << std::endl;;
    std::cout << "HLT_L2Mu10 (uncached/cached calls): " << counter_uncached_HLT_L2Mu10_ << " / " << counter_cached_HLT_L2Mu10_ << std::endl;;
    std::cout << "HLT_L2Mu10NoVtx_2Cha (uncached/cached calls): " << counter_uncached_HLT_L2Mu10NoVtx_2Cha_ << " / " << counter_cached_HLT_L2Mu10NoVtx_2Cha_ << std::endl;;
    std::cout << "HLT_L2Mu10NoVtx_2Cha_CosmicSeed (uncached/cached calls): " << counter_uncached_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_ << " / " << counter_cached_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_ << std::endl;;
    std::cout << "HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm (uncached/cached calls): " << counter_uncached_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_ << " / " << counter_cached_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_ << std::endl;;
    std::cout << "HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm (uncached/cached calls): " << counter_uncached_HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ << " / " << counter_cached_HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ << std::endl;;
    std::cout << "HLT_L2Mu10_NoVertex_NoBPTX (uncached/cached calls): " << counter_uncached_HLT_L2Mu10_NoVertex_NoBPTX_ << " / " << counter_cached_HLT_L2Mu10_NoVertex_NoBPTX_ << std::endl;;
    std::cout << "HLT_L2Mu10_NoVertex_NoBPTX3BX (uncached/cached calls): " << counter_uncached_HLT_L2Mu10_NoVertex_NoBPTX3BX_ << " / " << counter_cached_HLT_L2Mu10_NoVertex_NoBPTX3BX_ << std::endl;;
    std::cout << "HLT_L2Mu23NoVtx_2Cha (uncached/cached calls): " << counter_uncached_HLT_L2Mu23NoVtx_2Cha_ << " / " << counter_cached_HLT_L2Mu23NoVtx_2Cha_ << std::endl;;
    std::cout << "HLT_L2Mu23NoVtx_2Cha_CosmicSeed (uncached/cached calls): " << counter_uncached_HLT_L2Mu23NoVtx_2Cha_CosmicSeed_ << " / " << counter_cached_HLT_L2Mu23NoVtx_2Cha_CosmicSeed_ << std::endl;;
    std::cout << "HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX (uncached/cached calls): " << counter_uncached_HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX_ << " / " << counter_cached_HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX_ << std::endl;;
    std::cout << "HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX (uncached/cached calls): " << counter_uncached_HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_ << " / " << counter_cached_HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_ << std::endl;;
    std::cout << "HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX (uncached/cached calls): " << counter_uncached_HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_ << " / " << counter_cached_HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_ << std::endl;;
    std::cout << "HLT_L2Mu50 (uncached/cached calls): " << counter_uncached_HLT_L2Mu50_ << " / " << counter_cached_HLT_L2Mu50_ << std::endl;;
    std::cout << "HLT_L3Mu10NoVtx (uncached/cached calls): " << counter_uncached_HLT_L3Mu10NoVtx_ << " / " << counter_cached_HLT_L3Mu10NoVtx_ << std::endl;;
    std::cout << "HLT_L3Mu10NoVtx_DxyMin0p01cm (uncached/cached calls): " << counter_uncached_HLT_L3Mu10NoVtx_DxyMin0p01cm_ << " / " << counter_cached_HLT_L3Mu10NoVtx_DxyMin0p01cm_ << std::endl;;
    std::cout << "HLT_L3dTksMu10_NoVtx_DxyMin0p01cm (uncached/cached calls): " << counter_uncached_HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_ << " / " << counter_cached_HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_ << std::endl;;
    std::cout << "HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_ << " / " << counter_cached_HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_ << std::endl;;
    std::cout << "HLT_LooseIsoPFTau50_Trk30_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_LooseIsoPFTau50_Trk30_eta2p1_ << " / " << counter_cached_HLT_LooseIsoPFTau50_Trk30_eta2p1_ << std::endl;;
    std::cout << "HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110 (uncached/cached calls): " << counter_uncached_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110_ << " / " << counter_cached_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110_ << std::endl;;
    std::cout << "HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120 (uncached/cached calls): " << counter_uncached_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120_ << " / " << counter_cached_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120_ << std::endl;;
    std::cout << "HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80 (uncached/cached calls): " << counter_uncached_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80_ << " / " << counter_cached_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80_ << std::endl;;
    std::cout << "HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90 (uncached/cached calls): " << counter_uncached_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90_ << " / " << counter_cached_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90_ << std::endl;;
    std::cout << "HLT_MET100 (uncached/cached calls): " << counter_uncached_HLT_MET100_ << " / " << counter_cached_HLT_MET100_ << std::endl;;
    std::cout << "HLT_MET105_IsoTrk50 (uncached/cached calls): " << counter_uncached_HLT_MET105_IsoTrk50_ << " / " << counter_cached_HLT_MET105_IsoTrk50_ << std::endl;;
    std::cout << "HLT_MET120_IsoTrk50 (uncached/cached calls): " << counter_uncached_HLT_MET120_IsoTrk50_ << " / " << counter_cached_HLT_MET120_IsoTrk50_ << std::endl;;
    std::cout << "HLT_MET150 (uncached/cached calls): " << counter_uncached_HLT_MET150_ << " / " << counter_cached_HLT_MET150_ << std::endl;;
    std::cout << "HLT_MET200 (uncached/cached calls): " << counter_uncached_HLT_MET200_ << " / " << counter_cached_HLT_MET200_ << std::endl;;
    std::cout << "HLT_MET250 (uncached/cached calls): " << counter_uncached_HLT_MET250_ << " / " << counter_cached_HLT_MET250_ << std::endl;;
    std::cout << "HLT_MET300 (uncached/cached calls): " << counter_uncached_HLT_MET300_ << " / " << counter_cached_HLT_MET300_ << std::endl;;
    std::cout << "HLT_MET600 (uncached/cached calls): " << counter_uncached_HLT_MET600_ << " / " << counter_cached_HLT_MET600_ << std::endl;;
    std::cout << "HLT_MET60_IsoTrk35_Loose (uncached/cached calls): " << counter_uncached_HLT_MET60_IsoTrk35_Loose_ << " / " << counter_cached_HLT_MET60_IsoTrk35_Loose_ << std::endl;;
    std::cout << "HLT_MET700 (uncached/cached calls): " << counter_uncached_HLT_MET700_ << " / " << counter_cached_HLT_MET700_ << std::endl;;
    std::cout << "HLT_MET75_IsoTrk50 (uncached/cached calls): " << counter_uncached_HLT_MET75_IsoTrk50_ << " / " << counter_cached_HLT_MET75_IsoTrk50_ << std::endl;;
    std::cout << "HLT_MET90_IsoTrk50 (uncached/cached calls): " << counter_uncached_HLT_MET90_IsoTrk50_ << " / " << counter_cached_HLT_MET90_IsoTrk50_ << std::endl;;
    std::cout << "HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr (uncached/cached calls): " << counter_uncached_HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr_ << " / " << counter_cached_HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr_ << std::endl;;
    std::cout << "HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_ << " / " << counter_cached_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_ << std::endl;;
    std::cout << "HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr (uncached/cached calls): " << counter_uncached_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_ << " / " << counter_cached_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_ << std::endl;;
    std::cout << "HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_ << " / " << counter_cached_HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_ << std::endl;;
    std::cout << "HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_ << " / " << counter_cached_HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_ << std::endl;;
    std::cout << "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr (uncached/cached calls): " << counter_uncached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_ << " / " << counter_cached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_ << std::endl;;
    std::cout << "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100 (uncached/cached calls): " << counter_uncached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_ << " / " << counter_cached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_ << std::endl;;
    std::cout << "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110 (uncached/cached calls): " << counter_uncached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_ << " / " << counter_cached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_ << std::endl;;
    std::cout << "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120 (uncached/cached calls): " << counter_uncached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_ << " / " << counter_cached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_ << std::endl;;
    std::cout << "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130 (uncached/cached calls): " << counter_uncached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_ << " / " << counter_cached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_ << std::endl;;
    std::cout << "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140 (uncached/cached calls): " << counter_uncached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_ << " / " << counter_cached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_ << std::endl;;
    std::cout << "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90 (uncached/cached calls): " << counter_uncached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_ << " / " << counter_cached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_ << std::endl;;
    std::cout << "HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight (uncached/cached calls): " << counter_uncached_HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight_ << " / " << counter_cached_HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight_ << std::endl;;
    std::cout << "HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight (uncached/cached calls): " << counter_uncached_HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_ << " / " << counter_cached_HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_ << std::endl;;
    std::cout << "HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight (uncached/cached calls): " << counter_uncached_HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_ << " / " << counter_cached_HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_ << std::endl;;
    std::cout << "HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight (uncached/cached calls): " << counter_uncached_HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_ << " / " << counter_cached_HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_ << std::endl;;
    std::cout << "HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight (uncached/cached calls): " << counter_uncached_HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_ << " / " << counter_cached_HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_ << std::endl;;
    std::cout << "HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight (uncached/cached calls): " << counter_uncached_HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight_ << " / " << counter_cached_HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight_ << std::endl;;
    std::cout << "HLT_Mu0_L1DoubleMu (uncached/cached calls): " << counter_uncached_HLT_Mu0_L1DoubleMu_ << " / " << counter_cached_HLT_Mu0_L1DoubleMu_ << std::endl;;
    std::cout << "HLT_Mu10_CentralPFJet30_BTagCSV_p13 (uncached/cached calls): " << counter_uncached_HLT_Mu10_CentralPFJet30_BTagCSV_p13_ << " / " << counter_cached_HLT_Mu10_CentralPFJet30_BTagCSV_p13_ << std::endl;;
    std::cout << "HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60 (uncached/cached calls): " << counter_uncached_HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_ << " / " << counter_cached_HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_ << std::endl;;
    std::cout << "HLT_Mu10p5_IP3p5_part0 (uncached/cached calls): " << counter_uncached_HLT_Mu10p5_IP3p5_part0_ << " / " << counter_cached_HLT_Mu10p5_IP3p5_part0_ << std::endl;;
    std::cout << "HLT_Mu10p5_IP3p5_part1 (uncached/cached calls): " << counter_uncached_HLT_Mu10p5_IP3p5_part1_ << " / " << counter_cached_HLT_Mu10p5_IP3p5_part1_ << std::endl;;
    std::cout << "HLT_Mu10p5_IP3p5_part2 (uncached/cached calls): " << counter_uncached_HLT_Mu10p5_IP3p5_part2_ << " / " << counter_cached_HLT_Mu10p5_IP3p5_part2_ << std::endl;;
    std::cout << "HLT_Mu10p5_IP3p5_part3 (uncached/cached calls): " << counter_uncached_HLT_Mu10p5_IP3p5_part3_ << " / " << counter_cached_HLT_Mu10p5_IP3p5_part3_ << std::endl;;
    std::cout << "HLT_Mu10p5_IP3p5_part4 (uncached/cached calls): " << counter_uncached_HLT_Mu10p5_IP3p5_part4_ << " / " << counter_cached_HLT_Mu10p5_IP3p5_part4_ << std::endl;;
    std::cout << "HLT_Mu10p5_IP3p5_part5 (uncached/cached calls): " << counter_uncached_HLT_Mu10p5_IP3p5_part5_ << " / " << counter_cached_HLT_Mu10p5_IP3p5_part5_ << std::endl;;
    std::cout << "HLT_Mu12 (uncached/cached calls): " << counter_uncached_HLT_Mu12_ << " / " << counter_cached_HLT_Mu12_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33_ << " / " << counter_cached_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79_ << " / " << counter_cached_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33_ << " / " << counter_cached_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79_ << " / " << counter_cached_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33_ << " / " << counter_cached_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79_ << " / " << counter_cached_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33_ << " / " << counter_cached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79_ << " / " << counter_cached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33_ << " / " << counter_cached_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79_ << " / " << counter_cached_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33_ << " / " << counter_cached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79_ << " / " << counter_cached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33_ << " / " << counter_cached_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79_ << " / " << counter_cached_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ << " / " << counter_cached_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ << std::endl;;
    std::cout << "HLT_Mu12_DoublePhoton20 (uncached/cached calls): " << counter_uncached_HLT_Mu12_DoublePhoton20_ << " / " << counter_cached_HLT_Mu12_DoublePhoton20_ << std::endl;;
    std::cout << "HLT_Mu12_IP6 (uncached/cached calls): " << counter_uncached_HLT_Mu12_IP6_ << " / " << counter_cached_HLT_Mu12_IP6_ << std::endl;;
    std::cout << "HLT_Mu12_IP6_ToCSCS (uncached/cached calls): " << counter_uncached_HLT_Mu12_IP6_ToCSCS_ << " / " << counter_cached_HLT_Mu12_IP6_ToCSCS_ << std::endl;;
    std::cout << "HLT_Mu12_IP6_part0 (uncached/cached calls): " << counter_uncached_HLT_Mu12_IP6_part0_ << " / " << counter_cached_HLT_Mu12_IP6_part0_ << std::endl;;
    std::cout << "HLT_Mu12_IP6_part1 (uncached/cached calls): " << counter_uncached_HLT_Mu12_IP6_part1_ << " / " << counter_cached_HLT_Mu12_IP6_part1_ << std::endl;;
    std::cout << "HLT_Mu12_IP6_part2 (uncached/cached calls): " << counter_uncached_HLT_Mu12_IP6_part2_ << " / " << counter_cached_HLT_Mu12_IP6_part2_ << std::endl;;
    std::cout << "HLT_Mu12_IP6_part3 (uncached/cached calls): " << counter_uncached_HLT_Mu12_IP6_part3_ << " / " << counter_cached_HLT_Mu12_IP6_part3_ << std::endl;;
    std::cout << "HLT_Mu12_IP6_part4 (uncached/cached calls): " << counter_uncached_HLT_Mu12_IP6_part4_ << " / " << counter_cached_HLT_Mu12_IP6_part4_ << std::endl;;
    std::cout << "HLT_Mu12_Photon25_CaloIdL (uncached/cached calls): " << counter_uncached_HLT_Mu12_Photon25_CaloIdL_ << " / " << counter_cached_HLT_Mu12_Photon25_CaloIdL_ << std::endl;;
    std::cout << "HLT_Mu12_Photon25_CaloIdL_L1ISO (uncached/cached calls): " << counter_uncached_HLT_Mu12_Photon25_CaloIdL_L1ISO_ << " / " << counter_cached_HLT_Mu12_Photon25_CaloIdL_L1ISO_ << std::endl;;
    std::cout << "HLT_Mu12_Photon25_CaloIdL_L1OR (uncached/cached calls): " << counter_uncached_HLT_Mu12_Photon25_CaloIdL_L1OR_ << " / " << counter_cached_HLT_Mu12_Photon25_CaloIdL_L1OR_ << std::endl;;
    std::cout << "HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL (uncached/cached calls): " << counter_uncached_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_ << " / " << counter_cached_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_ << std::endl;;
    std::cout << "HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_ << " / " << counter_cached_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_ << std::endl;;
    std::cout << "HLT_Mu12eta2p3 (uncached/cached calls): " << counter_uncached_HLT_Mu12eta2p3_ << " / " << counter_cached_HLT_Mu12eta2p3_ << std::endl;;
    std::cout << "HLT_Mu12eta2p3_PFJet40 (uncached/cached calls): " << counter_uncached_HLT_Mu12eta2p3_PFJet40_ << " / " << counter_cached_HLT_Mu12eta2p3_PFJet40_ << std::endl;;
    std::cout << "HLT_Mu14er_PFMET100 (uncached/cached calls): " << counter_uncached_HLT_Mu14er_PFMET100_ << " / " << counter_cached_HLT_Mu14er_PFMET100_ << std::endl;;
    std::cout << "HLT_Mu15 (uncached/cached calls): " << counter_uncached_HLT_Mu15_ << " / " << counter_cached_HLT_Mu15_ << std::endl;;
    std::cout << "HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400 (uncached/cached calls): " << counter_uncached_HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400_ << " / " << counter_cached_HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400_ << std::endl;;
    std::cout << "HLT_Mu15_IsoVVVL_PFHT350 (uncached/cached calls): " << counter_uncached_HLT_Mu15_IsoVVVL_PFHT350_ << " / " << counter_cached_HLT_Mu15_IsoVVVL_PFHT350_ << std::endl;;
    std::cout << "HLT_Mu15_IsoVVVL_PFHT350_PFMET50 (uncached/cached calls): " << counter_uncached_HLT_Mu15_IsoVVVL_PFHT350_PFMET50_ << " / " << counter_cached_HLT_Mu15_IsoVVVL_PFHT350_PFMET50_ << std::endl;;
    std::cout << "HLT_Mu15_IsoVVVL_PFHT400 (uncached/cached calls): " << counter_uncached_HLT_Mu15_IsoVVVL_PFHT400_ << " / " << counter_cached_HLT_Mu15_IsoVVVL_PFHT400_ << std::endl;;
    std::cout << "HLT_Mu15_IsoVVVL_PFHT400_PFMET50 (uncached/cached calls): " << counter_uncached_HLT_Mu15_IsoVVVL_PFHT400_PFMET50_ << " / " << counter_cached_HLT_Mu15_IsoVVVL_PFHT400_PFMET50_ << std::endl;;
    std::cout << "HLT_Mu15_IsoVVVL_PFHT450 (uncached/cached calls): " << counter_uncached_HLT_Mu15_IsoVVVL_PFHT450_ << " / " << counter_cached_HLT_Mu15_IsoVVVL_PFHT450_ << std::endl;;
    std::cout << "HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5 (uncached/cached calls): " << counter_uncached_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_ << " / " << counter_cached_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_ << std::endl;;
    std::cout << "HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5 (uncached/cached calls): " << counter_uncached_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_ << " / " << counter_cached_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_ << std::endl;;
    std::cout << "HLT_Mu15_IsoVVVL_PFHT450_PFMET50 (uncached/cached calls): " << counter_uncached_HLT_Mu15_IsoVVVL_PFHT450_PFMET50_ << " / " << counter_cached_HLT_Mu15_IsoVVVL_PFHT450_PFMET50_ << std::endl;;
    std::cout << "HLT_Mu15_IsoVVVL_PFHT600 (uncached/cached calls): " << counter_uncached_HLT_Mu15_IsoVVVL_PFHT600_ << " / " << counter_cached_HLT_Mu15_IsoVVVL_PFHT600_ << std::endl;;
    std::cout << "HLT_Mu16_TkMu0_dEta18_Onia (uncached/cached calls): " << counter_uncached_HLT_Mu16_TkMu0_dEta18_Onia_ << " / " << counter_cached_HLT_Mu16_TkMu0_dEta18_Onia_ << std::endl;;
    std::cout << "HLT_Mu16_TkMu0_dEta18_Phi (uncached/cached calls): " << counter_uncached_HLT_Mu16_TkMu0_dEta18_Phi_ << " / " << counter_cached_HLT_Mu16_TkMu0_dEta18_Phi_ << std::endl;;
    std::cout << "HLT_Mu16_eta2p1_MET30 (uncached/cached calls): " << counter_uncached_HLT_Mu16_eta2p1_MET30_ << " / " << counter_cached_HLT_Mu16_eta2p1_MET30_ << std::endl;;
    std::cout << "HLT_Mu17 (uncached/cached calls): " << counter_uncached_HLT_Mu17_ << " / " << counter_cached_HLT_Mu17_ << std::endl;;
    std::cout << "HLT_Mu17_Mu8 (uncached/cached calls): " << counter_uncached_HLT_Mu17_Mu8_ << " / " << counter_cached_HLT_Mu17_Mu8_ << std::endl;;
    std::cout << "HLT_Mu17_Mu8_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu17_Mu8_DZ_ << " / " << counter_cached_HLT_Mu17_Mu8_DZ_ << std::endl;;
    std::cout << "HLT_Mu17_Mu8_SameSign (uncached/cached calls): " << counter_uncached_HLT_Mu17_Mu8_SameSign_ << " / " << counter_cached_HLT_Mu17_Mu8_SameSign_ << std::endl;;
    std::cout << "HLT_Mu17_Mu8_SameSign_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu17_Mu8_SameSign_DZ_ << " / " << counter_cached_HLT_Mu17_Mu8_SameSign_DZ_ << std::endl;;
    std::cout << "HLT_Mu17_Photon22_CaloIdL_L1ISO (uncached/cached calls): " << counter_uncached_HLT_Mu17_Photon22_CaloIdL_L1ISO_ << " / " << counter_cached_HLT_Mu17_Photon22_CaloIdL_L1ISO_ << std::endl;;
    std::cout << "HLT_Mu17_Photon30_CaloIdL_L1ISO (uncached/cached calls): " << counter_uncached_HLT_Mu17_Photon30_CaloIdL_L1ISO_ << " / " << counter_cached_HLT_Mu17_Photon30_CaloIdL_L1ISO_ << std::endl;;
    std::cout << "HLT_Mu17_Photon30_IsoCaloId (uncached/cached calls): " << counter_uncached_HLT_Mu17_Photon30_IsoCaloId_ << " / " << counter_cached_HLT_Mu17_Photon30_IsoCaloId_ << std::endl;;
    std::cout << "HLT_Mu17_Photon35_CaloIdL_L1ISO (uncached/cached calls): " << counter_uncached_HLT_Mu17_Photon35_CaloIdL_L1ISO_ << " / " << counter_cached_HLT_Mu17_Photon35_CaloIdL_L1ISO_ << std::endl;;
    std::cout << "HLT_Mu17_TkMu8_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu17_TkMu8_DZ_ << " / " << counter_cached_HLT_Mu17_TkMu8_DZ_ << std::endl;;
    std::cout << "HLT_Mu17_TrkIsoVVL (uncached/cached calls): " << counter_uncached_HLT_Mu17_TrkIsoVVL_ << " / " << counter_cached_HLT_Mu17_TrkIsoVVL_ << std::endl;;
    std::cout << "HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL (uncached/cached calls): " << counter_uncached_HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_ << " / " << counter_cached_HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_ << std::endl;;
    std::cout << "HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL (uncached/cached calls): " << counter_uncached_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_ << " / " << counter_cached_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_ << std::endl;;
    std::cout << "HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_ << " / " << counter_cached_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_ << std::endl;;
    std::cout << "HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8 (uncached/cached calls): " << counter_uncached_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_ << " / " << counter_cached_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_ << std::endl;;
    std::cout << "HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8 (uncached/cached calls): " << counter_uncached_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_ << " / " << counter_cached_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_ << std::endl;;
    std::cout << "HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL (uncached/cached calls): " << counter_uncached_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_ << " / " << counter_cached_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_ << std::endl;;
    std::cout << "HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_ << " / " << counter_cached_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_ << std::endl;;
    std::cout << "HLT_Mu18_Mu9 (uncached/cached calls): " << counter_uncached_HLT_Mu18_Mu9_ << " / " << counter_cached_HLT_Mu18_Mu9_ << std::endl;;
    std::cout << "HLT_Mu18_Mu9_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu18_Mu9_DZ_ << " / " << counter_cached_HLT_Mu18_Mu9_DZ_ << std::endl;;
    std::cout << "HLT_Mu18_Mu9_SameSign (uncached/cached calls): " << counter_uncached_HLT_Mu18_Mu9_SameSign_ << " / " << counter_cached_HLT_Mu18_Mu9_SameSign_ << std::endl;;
    std::cout << "HLT_Mu18_Mu9_SameSign_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu18_Mu9_SameSign_DZ_ << " / " << counter_cached_HLT_Mu18_Mu9_SameSign_DZ_ << std::endl;;
    std::cout << "HLT_Mu19 (uncached/cached calls): " << counter_uncached_HLT_Mu19_ << " / " << counter_cached_HLT_Mu19_ << std::endl;;
    std::cout << "HLT_Mu19_TrkIsoVVL (uncached/cached calls): " << counter_uncached_HLT_Mu19_TrkIsoVVL_ << " / " << counter_cached_HLT_Mu19_TrkIsoVVL_ << std::endl;;
    std::cout << "HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL (uncached/cached calls): " << counter_uncached_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_ << " / " << counter_cached_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_ << std::endl;;
    std::cout << "HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_ << " / " << counter_cached_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_ << std::endl;;
    std::cout << "HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8 (uncached/cached calls): " << counter_uncached_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_ << " / " << counter_cached_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_ << std::endl;;
    std::cout << "HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8 (uncached/cached calls): " << counter_uncached_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_ << " / " << counter_cached_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_ << std::endl;;
    std::cout << "HLT_Mu20 (uncached/cached calls): " << counter_uncached_HLT_Mu20_ << " / " << counter_cached_HLT_Mu20_ << std::endl;;
    std::cout << "HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId (uncached/cached calls): " << counter_uncached_HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_ << " / " << counter_cached_HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_ << std::endl;;
    std::cout << "HLT_Mu20_Mu10 (uncached/cached calls): " << counter_uncached_HLT_Mu20_Mu10_ << " / " << counter_cached_HLT_Mu20_Mu10_ << std::endl;;
    std::cout << "HLT_Mu20_Mu10_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu20_Mu10_DZ_ << " / " << counter_cached_HLT_Mu20_Mu10_DZ_ << std::endl;;
    std::cout << "HLT_Mu20_Mu10_SameSign (uncached/cached calls): " << counter_uncached_HLT_Mu20_Mu10_SameSign_ << " / " << counter_cached_HLT_Mu20_Mu10_SameSign_ << std::endl;;
    std::cout << "HLT_Mu20_Mu10_SameSign_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu20_Mu10_SameSign_DZ_ << " / " << counter_cached_HLT_Mu20_Mu10_SameSign_DZ_ << std::endl;;
    std::cout << "HLT_Mu20_TkMu0_Phi (uncached/cached calls): " << counter_uncached_HLT_Mu20_TkMu0_Phi_ << " / " << counter_cached_HLT_Mu20_TkMu0_Phi_ << std::endl;;
    std::cout << "HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL (uncached/cached calls): " << counter_uncached_HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL_ << " / " << counter_cached_HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL_ << std::endl;;
    std::cout << "HLT_Mu23_Mu12 (uncached/cached calls): " << counter_uncached_HLT_Mu23_Mu12_ << " / " << counter_cached_HLT_Mu23_Mu12_ << std::endl;;
    std::cout << "HLT_Mu23_Mu12_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu23_Mu12_DZ_ << " / " << counter_cached_HLT_Mu23_Mu12_DZ_ << std::endl;;
    std::cout << "HLT_Mu23_Mu12_SameSign (uncached/cached calls): " << counter_uncached_HLT_Mu23_Mu12_SameSign_ << " / " << counter_cached_HLT_Mu23_Mu12_SameSign_ << std::endl;;
    std::cout << "HLT_Mu23_Mu12_SameSign_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu23_Mu12_SameSign_DZ_ << " / " << counter_cached_HLT_Mu23_Mu12_SameSign_DZ_ << std::endl;;
    std::cout << "HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL (uncached/cached calls): " << counter_uncached_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_ << " / " << counter_cached_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_ << std::endl;;
    std::cout << "HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_ << " / " << counter_cached_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_ << std::endl;;
    std::cout << "HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL (uncached/cached calls): " << counter_uncached_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_ << " / " << counter_cached_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_ << std::endl;;
    std::cout << "HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_ << " / " << counter_cached_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_ << std::endl;;
    std::cout << "HLT_Mu24_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_Mu24_eta2p1_ << " / " << counter_cached_HLT_Mu24_eta2p1_ << std::endl;;
    std::cout << "HLT_Mu25_TkMu0_Onia (uncached/cached calls): " << counter_uncached_HLT_Mu25_TkMu0_Onia_ << " / " << counter_cached_HLT_Mu25_TkMu0_Onia_ << std::endl;;
    std::cout << "HLT_Mu25_TkMu0_Phi (uncached/cached calls): " << counter_uncached_HLT_Mu25_TkMu0_Phi_ << " / " << counter_cached_HLT_Mu25_TkMu0_Phi_ << std::endl;;
    std::cout << "HLT_Mu25_TkMu0_dEta18_Onia (uncached/cached calls): " << counter_uncached_HLT_Mu25_TkMu0_dEta18_Onia_ << " / " << counter_cached_HLT_Mu25_TkMu0_dEta18_Onia_ << std::endl;;
    std::cout << "HLT_Mu27 (uncached/cached calls): " << counter_uncached_HLT_Mu27_ << " / " << counter_cached_HLT_Mu27_ << std::endl;;
    std::cout << "HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL (uncached/cached calls): " << counter_uncached_HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL_ << " / " << counter_cached_HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL_ << std::endl;;
    std::cout << "HLT_Mu27_Ele37_CaloIdL_MW (uncached/cached calls): " << counter_uncached_HLT_Mu27_Ele37_CaloIdL_MW_ << " / " << counter_cached_HLT_Mu27_Ele37_CaloIdL_MW_ << std::endl;;
    std::cout << "HLT_Mu27_TkMu8 (uncached/cached calls): " << counter_uncached_HLT_Mu27_TkMu8_ << " / " << counter_cached_HLT_Mu27_TkMu8_ << std::endl;;
    std::cout << "HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL (uncached/cached calls): " << counter_uncached_HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL_ << " / " << counter_cached_HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL_ << std::endl;;
    std::cout << "HLT_Mu28NoFiltersNoVtx_CentralCaloJet40 (uncached/cached calls): " << counter_uncached_HLT_Mu28NoFiltersNoVtx_CentralCaloJet40_ << " / " << counter_cached_HLT_Mu28NoFiltersNoVtx_CentralCaloJet40_ << std::endl;;
    std::cout << "HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose (uncached/cached calls): " << counter_uncached_HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose_ << " / " << counter_cached_HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose_ << std::endl;;
    std::cout << "HLT_Mu300 (uncached/cached calls): " << counter_uncached_HLT_Mu300_ << " / " << counter_cached_HLT_Mu300_ << std::endl;;
    std::cout << "HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL (uncached/cached calls): " << counter_uncached_HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL_ << " / " << counter_cached_HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL_ << std::endl;;
    std::cout << "HLT_Mu30_TkMu0_Onia (uncached/cached calls): " << counter_uncached_HLT_Mu30_TkMu0_Onia_ << " / " << counter_cached_HLT_Mu30_TkMu0_Onia_ << std::endl;;
    std::cout << "HLT_Mu30_TkMu0_Psi (uncached/cached calls): " << counter_uncached_HLT_Mu30_TkMu0_Psi_ << " / " << counter_cached_HLT_Mu30_TkMu0_Psi_ << std::endl;;
    std::cout << "HLT_Mu30_TkMu0_Upsilon (uncached/cached calls): " << counter_uncached_HLT_Mu30_TkMu0_Upsilon_ << " / " << counter_cached_HLT_Mu30_TkMu0_Upsilon_ << std::endl;;
    std::cout << "HLT_Mu30_TkMu11 (uncached/cached calls): " << counter_uncached_HLT_Mu30_TkMu11_ << " / " << counter_cached_HLT_Mu30_TkMu11_ << std::endl;;
    std::cout << "HLT_Mu30_eta2p1_PFJet150_PFJet50 (uncached/cached calls): " << counter_uncached_HLT_Mu30_eta2p1_PFJet150_PFJet50_ << " / " << counter_cached_HLT_Mu30_eta2p1_PFJet150_PFJet50_ << std::endl;;
    std::cout << "HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose (uncached/cached calls): " << counter_uncached_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose_ << " / " << counter_cached_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose_ << std::endl;;
    std::cout << "HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight (uncached/cached calls): " << counter_uncached_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight_ << " / " << counter_cached_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight_ << std::endl;;
    std::cout << "HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL (uncached/cached calls): " << counter_uncached_HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL_ << " / " << counter_cached_HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL_ << std::endl;;
    std::cout << "HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL (uncached/cached calls): " << counter_uncached_HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL_ << " / " << counter_cached_HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL_ << std::endl;;
    std::cout << "HLT_Mu350 (uncached/cached calls): " << counter_uncached_HLT_Mu350_ << " / " << counter_cached_HLT_Mu350_ << std::endl;;
    std::cout << "HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL (uncached/cached calls): " << counter_uncached_HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL_ << " / " << counter_cached_HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL_ << std::endl;;
    std::cout << "HLT_Mu37_Ele27_CaloIdL_MW (uncached/cached calls): " << counter_uncached_HLT_Mu37_Ele27_CaloIdL_MW_ << " / " << counter_cached_HLT_Mu37_Ele27_CaloIdL_MW_ << std::endl;;
    std::cout << "HLT_Mu37_TkMu27 (uncached/cached calls): " << counter_uncached_HLT_Mu37_TkMu27_ << " / " << counter_cached_HLT_Mu37_TkMu27_ << std::endl;;
    std::cout << "HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose (uncached/cached calls): " << counter_uncached_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose_ << " / " << counter_cached_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose_ << std::endl;;
    std::cout << "HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight (uncached/cached calls): " << counter_uncached_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight_ << " / " << counter_cached_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight_ << std::endl;;
    std::cout << "HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL (uncached/cached calls): " << counter_uncached_HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_ << " / " << counter_cached_HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_ << std::endl;;
    std::cout << "HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose (uncached/cached calls): " << counter_uncached_HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose_ << " / " << counter_cached_HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose_ << std::endl;;
    std::cout << "HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL (uncached/cached calls): " << counter_uncached_HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL_ << " / " << counter_cached_HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL_ << std::endl;;
    std::cout << "HLT_Mu3_L1SingleMu5orSingleMu7 (uncached/cached calls): " << counter_uncached_HLT_Mu3_L1SingleMu5orSingleMu7_ << " / " << counter_cached_HLT_Mu3_L1SingleMu5orSingleMu7_ << std::endl;;
    std::cout << "HLT_Mu3_PFJet40 (uncached/cached calls): " << counter_uncached_HLT_Mu3_PFJet40_ << " / " << counter_cached_HLT_Mu3_PFJet40_ << std::endl;;
    std::cout << "HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight (uncached/cached calls): " << counter_uncached_HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_ << " / " << counter_cached_HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_ << std::endl;;
    std::cout << "HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight (uncached/cached calls): " << counter_uncached_HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_ << " / " << counter_cached_HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_ << std::endl;;
    std::cout << "HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight (uncached/cached calls): " << counter_uncached_HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_ << " / " << counter_cached_HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_ << std::endl;;
    std::cout << "HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight (uncached/cached calls): " << counter_uncached_HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_ << " / " << counter_cached_HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_ << std::endl;;
    std::cout << "HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight (uncached/cached calls): " << counter_uncached_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_ << " / " << counter_cached_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_ << std::endl;;
    std::cout << "HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight (uncached/cached calls): " << counter_uncached_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_ << " / " << counter_cached_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_ << std::endl;;
    std::cout << "HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight (uncached/cached calls): " << counter_uncached_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_ << " / " << counter_cached_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_ << std::endl;;
    std::cout << "HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight (uncached/cached calls): " << counter_uncached_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_ << " / " << counter_cached_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_ << std::endl;;
    std::cout << "HLT_Mu3er_PFHT140_PFMET125 (uncached/cached calls): " << counter_uncached_HLT_Mu3er_PFHT140_PFMET125_ << " / " << counter_cached_HLT_Mu3er_PFHT140_PFMET125_ << std::endl;;
    std::cout << "HLT_Mu40_TkMu11 (uncached/cached calls): " << counter_uncached_HLT_Mu40_TkMu11_ << " / " << counter_cached_HLT_Mu40_TkMu11_ << std::endl;;
    std::cout << "HLT_Mu40_eta2p1_PFJet200_PFJet50 (uncached/cached calls): " << counter_uncached_HLT_Mu40_eta2p1_PFJet200_PFJet50_ << " / " << counter_cached_HLT_Mu40_eta2p1_PFJet200_PFJet50_ << std::endl;;
    std::cout << "HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL (uncached/cached calls): " << counter_uncached_HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL_ << " / " << counter_cached_HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL_ << std::endl;;
    std::cout << "HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL (uncached/cached calls): " << counter_uncached_HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_ << " / " << counter_cached_HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_ << std::endl;;
    std::cout << "HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL (uncached/cached calls): " << counter_uncached_HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_ << " / " << counter_cached_HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_ << std::endl;;
    std::cout << "HLT_Mu45_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_Mu45_eta2p1_ << " / " << counter_cached_HLT_Mu45_eta2p1_ << std::endl;;
    std::cout << "HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL (uncached/cached calls): " << counter_uncached_HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_ << " / " << counter_cached_HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_ << std::endl;;
    std::cout << "HLT_Mu4_L1DoubleMu (uncached/cached calls): " << counter_uncached_HLT_Mu4_L1DoubleMu_ << " / " << counter_cached_HLT_Mu4_L1DoubleMu_ << std::endl;;
    std::cout << "HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60 (uncached/cached calls): " << counter_uncached_HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_ << " / " << counter_cached_HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_ << std::endl;;
    std::cout << "HLT_Mu50 (uncached/cached calls): " << counter_uncached_HLT_Mu50_ << " / " << counter_cached_HLT_Mu50_ << std::endl;;
    std::cout << "HLT_Mu50_IsoVVVL_PFHT400 (uncached/cached calls): " << counter_uncached_HLT_Mu50_IsoVVVL_PFHT400_ << " / " << counter_cached_HLT_Mu50_IsoVVVL_PFHT400_ << std::endl;;
    std::cout << "HLT_Mu50_IsoVVVL_PFHT450 (uncached/cached calls): " << counter_uncached_HLT_Mu50_IsoVVVL_PFHT450_ << " / " << counter_cached_HLT_Mu50_IsoVVVL_PFHT450_ << std::endl;;
    std::cout << "HLT_Mu50_L1SingleMuShower (uncached/cached calls): " << counter_uncached_HLT_Mu50_L1SingleMuShower_ << " / " << counter_cached_HLT_Mu50_L1SingleMuShower_ << std::endl;;
    std::cout << "HLT_Mu55 (uncached/cached calls): " << counter_uncached_HLT_Mu55_ << " / " << counter_cached_HLT_Mu55_ << std::endl;;
    std::cout << "HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5 (uncached/cached calls): " << counter_uncached_HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5_ << " / " << counter_cached_HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5_ << std::endl;;
    std::cout << "HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose (uncached/cached calls): " << counter_uncached_HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_ << " / " << counter_cached_HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_ << std::endl;;
    std::cout << "HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5 (uncached/cached calls): " << counter_uncached_HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_ << " / " << counter_cached_HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_ << std::endl;;
    std::cout << "HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose (uncached/cached calls): " << counter_uncached_HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_ << " / " << counter_cached_HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_ << std::endl;;
    std::cout << "HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5 (uncached/cached calls): " << counter_uncached_HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_ << " / " << counter_cached_HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_ << std::endl;;
    std::cout << "HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose (uncached/cached calls): " << counter_uncached_HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_ << " / " << counter_cached_HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_ << std::endl;;
    std::cout << "HLT_Mu6_PFHT200_PFMET100 (uncached/cached calls): " << counter_uncached_HLT_Mu6_PFHT200_PFMET100_ << " / " << counter_cached_HLT_Mu6_PFHT200_PFMET100_ << std::endl;;
    std::cout << "HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067 (uncached/cached calls): " << counter_uncached_HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067_ << " / " << counter_cached_HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067_ << std::endl;;
    std::cout << "HLT_Mu7_IP4_ToCSCS (uncached/cached calls): " << counter_uncached_HLT_Mu7_IP4_ToCSCS_ << " / " << counter_cached_HLT_Mu7_IP4_ToCSCS_ << std::endl;;
    std::cout << "HLT_Mu7_IP4_part0 (uncached/cached calls): " << counter_uncached_HLT_Mu7_IP4_part0_ << " / " << counter_cached_HLT_Mu7_IP4_part0_ << std::endl;;
    std::cout << "HLT_Mu7_IP4_part1 (uncached/cached calls): " << counter_uncached_HLT_Mu7_IP4_part1_ << " / " << counter_cached_HLT_Mu7_IP4_part1_ << std::endl;;
    std::cout << "HLT_Mu7_IP4_part2 (uncached/cached calls): " << counter_uncached_HLT_Mu7_IP4_part2_ << " / " << counter_cached_HLT_Mu7_IP4_part2_ << std::endl;;
    std::cout << "HLT_Mu7_IP4_part3 (uncached/cached calls): " << counter_uncached_HLT_Mu7_IP4_part3_ << " / " << counter_cached_HLT_Mu7_IP4_part3_ << std::endl;;
    std::cout << "HLT_Mu7_IP4_part4 (uncached/cached calls): " << counter_uncached_HLT_Mu7_IP4_part4_ << " / " << counter_cached_HLT_Mu7_IP4_part4_ << std::endl;;
    std::cout << "HLT_Mu7p5_L2Mu2_Jpsi (uncached/cached calls): " << counter_uncached_HLT_Mu7p5_L2Mu2_Jpsi_ << " / " << counter_cached_HLT_Mu7p5_L2Mu2_Jpsi_ << std::endl;;
    std::cout << "HLT_Mu7p5_L2Mu2_Upsilon (uncached/cached calls): " << counter_uncached_HLT_Mu7p5_L2Mu2_Upsilon_ << " / " << counter_cached_HLT_Mu7p5_L2Mu2_Upsilon_ << std::endl;;
    std::cout << "HLT_Mu7p5_Track2_Jpsi (uncached/cached calls): " << counter_uncached_HLT_Mu7p5_Track2_Jpsi_ << " / " << counter_cached_HLT_Mu7p5_Track2_Jpsi_ << std::endl;;
    std::cout << "HLT_Mu7p5_Track2_Upsilon (uncached/cached calls): " << counter_uncached_HLT_Mu7p5_Track2_Upsilon_ << " / " << counter_cached_HLT_Mu7p5_Track2_Upsilon_ << std::endl;;
    std::cout << "HLT_Mu7p5_Track3p5_Jpsi (uncached/cached calls): " << counter_uncached_HLT_Mu7p5_Track3p5_Jpsi_ << " / " << counter_cached_HLT_Mu7p5_Track3p5_Jpsi_ << std::endl;;
    std::cout << "HLT_Mu7p5_Track3p5_Upsilon (uncached/cached calls): " << counter_uncached_HLT_Mu7p5_Track3p5_Upsilon_ << " / " << counter_cached_HLT_Mu7p5_Track3p5_Upsilon_ << std::endl;;
    std::cout << "HLT_Mu7p5_Track7_Jpsi (uncached/cached calls): " << counter_uncached_HLT_Mu7p5_Track7_Jpsi_ << " / " << counter_cached_HLT_Mu7p5_Track7_Jpsi_ << std::endl;;
    std::cout << "HLT_Mu7p5_Track7_Upsilon (uncached/cached calls): " << counter_uncached_HLT_Mu7p5_Track7_Upsilon_ << " / " << counter_cached_HLT_Mu7p5_Track7_Upsilon_ << std::endl;;
    std::cout << "HLT_Mu8 (uncached/cached calls): " << counter_uncached_HLT_Mu8_ << " / " << counter_cached_HLT_Mu8_ << std::endl;;
    std::cout << "HLT_Mu8_DiEle12_CaloIdL_TrackIdL (uncached/cached calls): " << counter_uncached_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_ << " / " << counter_cached_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_ << std::endl;;
    std::cout << "HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_ << " / " << counter_cached_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_ << std::endl;;
    std::cout << "HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250 (uncached/cached calls): " << counter_uncached_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250_ << " / " << counter_cached_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250_ << std::endl;;
    std::cout << "HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300 (uncached/cached calls): " << counter_uncached_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300_ << " / " << counter_cached_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300_ << std::endl;;
    std::cout << "HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350 (uncached/cached calls): " << counter_uncached_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_ << " / " << counter_cached_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_ << std::endl;;
    std::cout << "HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_ << " / " << counter_cached_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_ << std::endl;;
    std::cout << "HLT_Mu8_IP3_ToCSCS (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP3_ToCSCS_ << " / " << counter_cached_HLT_Mu8_IP3_ToCSCS_ << std::endl;;
    std::cout << "HLT_Mu8_IP3_part0 (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP3_part0_ << " / " << counter_cached_HLT_Mu8_IP3_part0_ << std::endl;;
    std::cout << "HLT_Mu8_IP3_part1 (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP3_part1_ << " / " << counter_cached_HLT_Mu8_IP3_part1_ << std::endl;;
    std::cout << "HLT_Mu8_IP3_part2 (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP3_part2_ << " / " << counter_cached_HLT_Mu8_IP3_part2_ << std::endl;;
    std::cout << "HLT_Mu8_IP3_part3 (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP3_part3_ << " / " << counter_cached_HLT_Mu8_IP3_part3_ << std::endl;;
    std::cout << "HLT_Mu8_IP3_part4 (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP3_part4_ << " / " << counter_cached_HLT_Mu8_IP3_part4_ << std::endl;;
    std::cout << "HLT_Mu8_IP3_part5 (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP3_part5_ << " / " << counter_cached_HLT_Mu8_IP3_part5_ << std::endl;;
    std::cout << "HLT_Mu8_IP5_ToCSCS (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP5_ToCSCS_ << " / " << counter_cached_HLT_Mu8_IP5_ToCSCS_ << std::endl;;
    std::cout << "HLT_Mu8_IP5_part0 (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP5_part0_ << " / " << counter_cached_HLT_Mu8_IP5_part0_ << std::endl;;
    std::cout << "HLT_Mu8_IP5_part1 (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP5_part1_ << " / " << counter_cached_HLT_Mu8_IP5_part1_ << std::endl;;
    std::cout << "HLT_Mu8_IP5_part2 (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP5_part2_ << " / " << counter_cached_HLT_Mu8_IP5_part2_ << std::endl;;
    std::cout << "HLT_Mu8_IP5_part3 (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP5_part3_ << " / " << counter_cached_HLT_Mu8_IP5_part3_ << std::endl;;
    std::cout << "HLT_Mu8_IP5_part4 (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP5_part4_ << " / " << counter_cached_HLT_Mu8_IP5_part4_ << std::endl;;
    std::cout << "HLT_Mu8_IP6_ToCSCS (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP6_ToCSCS_ << " / " << counter_cached_HLT_Mu8_IP6_ToCSCS_ << std::endl;;
    std::cout << "HLT_Mu8_IP6_part0 (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP6_part0_ << " / " << counter_cached_HLT_Mu8_IP6_part0_ << std::endl;;
    std::cout << "HLT_Mu8_IP6_part1 (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP6_part1_ << " / " << counter_cached_HLT_Mu8_IP6_part1_ << std::endl;;
    std::cout << "HLT_Mu8_IP6_part2 (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP6_part2_ << " / " << counter_cached_HLT_Mu8_IP6_part2_ << std::endl;;
    std::cout << "HLT_Mu8_IP6_part3 (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP6_part3_ << " / " << counter_cached_HLT_Mu8_IP6_part3_ << std::endl;;
    std::cout << "HLT_Mu8_IP6_part4 (uncached/cached calls): " << counter_uncached_HLT_Mu8_IP6_part4_ << " / " << counter_cached_HLT_Mu8_IP6_part4_ << std::endl;;
    std::cout << "HLT_Mu8_TrkIsoVVL (uncached/cached calls): " << counter_uncached_HLT_Mu8_TrkIsoVVL_ << " / " << counter_cached_HLT_Mu8_TrkIsoVVL_ << std::endl;;
    std::cout << "HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60 (uncached/cached calls): " << counter_uncached_HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_ << " / " << counter_cached_HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_ << std::endl;;
    std::cout << "HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL (uncached/cached calls): " << counter_uncached_HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL_ << " / " << counter_cached_HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL_ << std::endl;;
    std::cout << "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL (uncached/cached calls): " << counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_ << " / " << counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_ << std::endl;;
    std::cout << "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ (uncached/cached calls): " << counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_ << " / " << counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_ << std::endl;;
    std::cout << "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30 (uncached/cached calls): " << counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_ << " / " << counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_ << std::endl;;
    std::cout << "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5 (uncached/cached calls): " << counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_ << " / " << counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_ << std::endl;;
    std::cout << "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30 (uncached/cached calls): " << counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_ << " / " << counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_ << std::endl;;
    std::cout << "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65 (uncached/cached calls): " << counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_ << " / " << counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_ << std::endl;;
    std::cout << "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5 (uncached/cached calls): " << counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_ << " / " << counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_ << std::endl;;
    std::cout << "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5 (uncached/cached calls): " << counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_ << " / " << counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_ << std::endl;;
    std::cout << "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30 (uncached/cached calls): " << counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_ << " / " << counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_ << std::endl;;
    std::cout << "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65 (uncached/cached calls): " << counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_ << " / " << counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_ << std::endl;;
    std::cout << "HLT_Mu8p5_IP3p5_part0 (uncached/cached calls): " << counter_uncached_HLT_Mu8p5_IP3p5_part0_ << " / " << counter_cached_HLT_Mu8p5_IP3p5_part0_ << std::endl;;
    std::cout << "HLT_Mu8p5_IP3p5_part1 (uncached/cached calls): " << counter_uncached_HLT_Mu8p5_IP3p5_part1_ << " / " << counter_cached_HLT_Mu8p5_IP3p5_part1_ << std::endl;;
    std::cout << "HLT_Mu8p5_IP3p5_part2 (uncached/cached calls): " << counter_uncached_HLT_Mu8p5_IP3p5_part2_ << " / " << counter_cached_HLT_Mu8p5_IP3p5_part2_ << std::endl;;
    std::cout << "HLT_Mu8p5_IP3p5_part3 (uncached/cached calls): " << counter_uncached_HLT_Mu8p5_IP3p5_part3_ << " / " << counter_cached_HLT_Mu8p5_IP3p5_part3_ << std::endl;;
    std::cout << "HLT_Mu8p5_IP3p5_part4 (uncached/cached calls): " << counter_uncached_HLT_Mu8p5_IP3p5_part4_ << " / " << counter_cached_HLT_Mu8p5_IP3p5_part4_ << std::endl;;
    std::cout << "HLT_Mu8p5_IP3p5_part5 (uncached/cached calls): " << counter_uncached_HLT_Mu8p5_IP3p5_part5_ << " / " << counter_cached_HLT_Mu8p5_IP3p5_part5_ << std::endl;;
    std::cout << "HLT_Mu9_IP0_part0 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP0_part0_ << " / " << counter_cached_HLT_Mu9_IP0_part0_ << std::endl;;
    std::cout << "HLT_Mu9_IP3_part0 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP3_part0_ << " / " << counter_cached_HLT_Mu9_IP3_part0_ << std::endl;;
    std::cout << "HLT_Mu9_IP4_ToCSCS (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP4_ToCSCS_ << " / " << counter_cached_HLT_Mu9_IP4_ToCSCS_ << std::endl;;
    std::cout << "HLT_Mu9_IP4_part0 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP4_part0_ << " / " << counter_cached_HLT_Mu9_IP4_part0_ << std::endl;;
    std::cout << "HLT_Mu9_IP4_part1 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP4_part1_ << " / " << counter_cached_HLT_Mu9_IP4_part1_ << std::endl;;
    std::cout << "HLT_Mu9_IP4_part2 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP4_part2_ << " / " << counter_cached_HLT_Mu9_IP4_part2_ << std::endl;;
    std::cout << "HLT_Mu9_IP4_part3 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP4_part3_ << " / " << counter_cached_HLT_Mu9_IP4_part3_ << std::endl;;
    std::cout << "HLT_Mu9_IP4_part4 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP4_part4_ << " / " << counter_cached_HLT_Mu9_IP4_part4_ << std::endl;;
    std::cout << "HLT_Mu9_IP5_ToCSCS (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP5_ToCSCS_ << " / " << counter_cached_HLT_Mu9_IP5_ToCSCS_ << std::endl;;
    std::cout << "HLT_Mu9_IP5_part0 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP5_part0_ << " / " << counter_cached_HLT_Mu9_IP5_part0_ << std::endl;;
    std::cout << "HLT_Mu9_IP5_part1 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP5_part1_ << " / " << counter_cached_HLT_Mu9_IP5_part1_ << std::endl;;
    std::cout << "HLT_Mu9_IP5_part2 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP5_part2_ << " / " << counter_cached_HLT_Mu9_IP5_part2_ << std::endl;;
    std::cout << "HLT_Mu9_IP5_part3 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP5_part3_ << " / " << counter_cached_HLT_Mu9_IP5_part3_ << std::endl;;
    std::cout << "HLT_Mu9_IP5_part4 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP5_part4_ << " / " << counter_cached_HLT_Mu9_IP5_part4_ << std::endl;;
    std::cout << "HLT_Mu9_IP6_ToCSCS (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP6_ToCSCS_ << " / " << counter_cached_HLT_Mu9_IP6_ToCSCS_ << std::endl;;
    std::cout << "HLT_Mu9_IP6_part0 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP6_part0_ << " / " << counter_cached_HLT_Mu9_IP6_part0_ << std::endl;;
    std::cout << "HLT_Mu9_IP6_part1 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP6_part1_ << " / " << counter_cached_HLT_Mu9_IP6_part1_ << std::endl;;
    std::cout << "HLT_Mu9_IP6_part2 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP6_part2_ << " / " << counter_cached_HLT_Mu9_IP6_part2_ << std::endl;;
    std::cout << "HLT_Mu9_IP6_part3 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP6_part3_ << " / " << counter_cached_HLT_Mu9_IP6_part3_ << std::endl;;
    std::cout << "HLT_Mu9_IP6_part4 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP6_part4_ << " / " << counter_cached_HLT_Mu9_IP6_part4_ << std::endl;;
    std::cout << "HLT_Mu9_IP6_part5 (uncached/cached calls): " << counter_uncached_HLT_Mu9_IP6_part5_ << " / " << counter_cached_HLT_Mu9_IP6_part5_ << std::endl;;
    std::cout << "HLT_OldMu100 (uncached/cached calls): " << counter_uncached_HLT_OldMu100_ << " / " << counter_cached_HLT_OldMu100_ << std::endl;;
    std::cout << "HLT_OnlineMonitorGroup (uncached/cached calls): " << counter_uncached_HLT_OnlineMonitorGroup_ << " / " << counter_cached_HLT_OnlineMonitorGroup_ << std::endl;;
    std::cout << "HLT_PFHT1050 (uncached/cached calls): " << counter_uncached_HLT_PFHT1050_ << " / " << counter_cached_HLT_PFHT1050_ << std::endl;;
    std::cout << "HLT_PFHT125 (uncached/cached calls): " << counter_uncached_HLT_PFHT125_ << " / " << counter_cached_HLT_PFHT125_ << std::endl;;
    std::cout << "HLT_PFHT180 (uncached/cached calls): " << counter_uncached_HLT_PFHT180_ << " / " << counter_cached_HLT_PFHT180_ << std::endl;;
    std::cout << "HLT_PFHT200 (uncached/cached calls): " << counter_uncached_HLT_PFHT200_ << " / " << counter_cached_HLT_PFHT200_ << std::endl;;
    std::cout << "HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57 (uncached/cached calls): " << counter_uncached_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57_ << " / " << counter_cached_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57_ << std::endl;;
    std::cout << "HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63 (uncached/cached calls): " << counter_uncached_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63_ << " / " << counter_cached_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63_ << std::endl;;
    std::cout << "HLT_PFHT200_PFAlphaT0p51 (uncached/cached calls): " << counter_uncached_HLT_PFHT200_PFAlphaT0p51_ << " / " << counter_cached_HLT_PFHT200_PFAlphaT0p51_ << std::endl;;
    std::cout << "HLT_PFHT250 (uncached/cached calls): " << counter_uncached_HLT_PFHT250_ << " / " << counter_cached_HLT_PFHT250_ << std::endl;;
    std::cout << "HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55 (uncached/cached calls): " << counter_uncached_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55_ << " / " << counter_cached_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55_ << std::endl;;
    std::cout << "HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58 (uncached/cached calls): " << counter_uncached_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58_ << " / " << counter_cached_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58_ << std::endl;;
    std::cout << "HLT_PFHT300 (uncached/cached calls): " << counter_uncached_HLT_PFHT300_ << " / " << counter_cached_HLT_PFHT300_ << std::endl;;
    std::cout << "HLT_PFHT300PT30_QuadPFJet_75_60_45_40 (uncached/cached calls): " << counter_uncached_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_ << " / " << counter_cached_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_ << std::endl;;
    std::cout << "HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0 (uncached/cached calls): " << counter_uncached_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0_ << " / " << counter_cached_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0_ << std::endl;;
    std::cout << "HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53 (uncached/cached calls): " << counter_uncached_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53_ << " / " << counter_cached_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53_ << std::endl;;
    std::cout << "HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54 (uncached/cached calls): " << counter_uncached_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54_ << " / " << counter_cached_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54_ << std::endl;;
    std::cout << "HLT_PFHT300_PFMET100 (uncached/cached calls): " << counter_uncached_HLT_PFHT300_PFMET100_ << " / " << counter_cached_HLT_PFHT300_PFMET100_ << std::endl;;
    std::cout << "HLT_PFHT300_PFMET110 (uncached/cached calls): " << counter_uncached_HLT_PFHT300_PFMET110_ << " / " << counter_cached_HLT_PFHT300_PFMET110_ << std::endl;;
    std::cout << "HLT_PFHT330PT30_QuadPFJet_75_60_45_40 (uncached/cached calls): " << counter_uncached_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_ << " / " << counter_cached_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_ << std::endl;;
    std::cout << "HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5 (uncached/cached calls): " << counter_uncached_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_ << " / " << counter_cached_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_ << std::endl;;
    std::cout << "HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5 (uncached/cached calls): " << counter_uncached_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_ << " / " << counter_cached_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_ << std::endl;;
    std::cout << "HLT_PFHT350 (uncached/cached calls): " << counter_uncached_HLT_PFHT350_ << " / " << counter_cached_HLT_PFHT350_ << std::endl;;
    std::cout << "HLT_PFHT350MinPFJet15 (uncached/cached calls): " << counter_uncached_HLT_PFHT350MinPFJet15_ << " / " << counter_cached_HLT_PFHT350MinPFJet15_ << std::endl;;
    std::cout << "HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52 (uncached/cached calls): " << counter_uncached_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52_ << " / " << counter_cached_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52_ << std::endl;;
    std::cout << "HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53 (uncached/cached calls): " << counter_uncached_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53_ << " / " << counter_cached_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53_ << std::endl;;
    std::cout << "HLT_PFHT370 (uncached/cached calls): " << counter_uncached_HLT_PFHT370_ << " / " << counter_cached_HLT_PFHT370_ << std::endl;;
    std::cout << "HLT_PFHT380_SixJet32_DoubleBTagCSV_p075 (uncached/cached calls): " << counter_uncached_HLT_PFHT380_SixJet32_DoubleBTagCSV_p075_ << " / " << counter_cached_HLT_PFHT380_SixJet32_DoubleBTagCSV_p075_ << std::endl;;
    std::cout << "HLT_PFHT380_SixPFJet32 (uncached/cached calls): " << counter_uncached_HLT_PFHT380_SixPFJet32_ << " / " << counter_cached_HLT_PFHT380_SixPFJet32_ << std::endl;;
    std::cout << "HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2 (uncached/cached calls): " << counter_uncached_HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2_ << " / " << counter_cached_HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2_ << std::endl;;
    std::cout << "HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2 (uncached/cached calls): " << counter_uncached_HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2_ << " / " << counter_cached_HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2_ << std::endl;;
    std::cout << "HLT_PFHT400 (uncached/cached calls): " << counter_uncached_HLT_PFHT400_ << " / " << counter_cached_HLT_PFHT400_ << std::endl;;
    std::cout << "HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51 (uncached/cached calls): " << counter_uncached_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51_ << " / " << counter_cached_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51_ << std::endl;;
    std::cout << "HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52 (uncached/cached calls): " << counter_uncached_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52_ << " / " << counter_cached_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52_ << std::endl;;
    std::cout << "HLT_PFHT400_FivePFJet_100_100_60_30_30 (uncached/cached calls): " << counter_uncached_HLT_PFHT400_FivePFJet_100_100_60_30_30_ << " / " << counter_cached_HLT_PFHT400_FivePFJet_100_100_60_30_30_ << std::endl;;
    std::cout << "HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5 (uncached/cached calls): " << counter_uncached_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_ << " / " << counter_cached_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_ << std::endl;;
    std::cout << "HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5 (uncached/cached calls): " << counter_uncached_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_ << " / " << counter_cached_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_ << std::endl;;
    std::cout << "HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5 (uncached/cached calls): " << counter_uncached_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_ << " / " << counter_cached_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_ << std::endl;;
    std::cout << "HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5 (uncached/cached calls): " << counter_uncached_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_ << " / " << counter_cached_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_ << std::endl;;
    std::cout << "HLT_PFHT400_SixJet30 (uncached/cached calls): " << counter_uncached_HLT_PFHT400_SixJet30_ << " / " << counter_cached_HLT_PFHT400_SixJet30_ << std::endl;;
    std::cout << "HLT_PFHT400_SixJet30_DoubleBTagCSV_p056 (uncached/cached calls): " << counter_uncached_HLT_PFHT400_SixJet30_DoubleBTagCSV_p056_ << " / " << counter_cached_HLT_PFHT400_SixJet30_DoubleBTagCSV_p056_ << std::endl;;
    std::cout << "HLT_PFHT400_SixPFJet32 (uncached/cached calls): " << counter_uncached_HLT_PFHT400_SixPFJet32_ << " / " << counter_cached_HLT_PFHT400_SixPFJet32_ << std::endl;;
    std::cout << "HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94 (uncached/cached calls): " << counter_uncached_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_ << " / " << counter_cached_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_ << std::endl;;
    std::cout << "HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94 (uncached/cached calls): " << counter_uncached_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_ << " / " << counter_cached_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_ << std::endl;;
    std::cout << "HLT_PFHT430 (uncached/cached calls): " << counter_uncached_HLT_PFHT430_ << " / " << counter_cached_HLT_PFHT430_ << std::endl;;
    std::cout << "HLT_PFHT430_SixJet40_BTagCSV_p080 (uncached/cached calls): " << counter_uncached_HLT_PFHT430_SixJet40_BTagCSV_p080_ << " / " << counter_cached_HLT_PFHT430_SixJet40_BTagCSV_p080_ << std::endl;;
    std::cout << "HLT_PFHT430_SixPFJet40 (uncached/cached calls): " << counter_uncached_HLT_PFHT430_SixPFJet40_ << " / " << counter_cached_HLT_PFHT430_SixPFJet40_ << std::endl;;
    std::cout << "HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5 (uncached/cached calls): " << counter_uncached_HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5_ << " / " << counter_cached_HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5_ << std::endl;;
    std::cout << "HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5 (uncached/cached calls): " << counter_uncached_HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5_ << " / " << counter_cached_HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5_ << std::endl;;
    std::cout << "HLT_PFHT450_SixJet40 (uncached/cached calls): " << counter_uncached_HLT_PFHT450_SixJet40_ << " / " << counter_cached_HLT_PFHT450_SixJet40_ << std::endl;;
    std::cout << "HLT_PFHT450_SixJet40_BTagCSV_p056 (uncached/cached calls): " << counter_uncached_HLT_PFHT450_SixJet40_BTagCSV_p056_ << " / " << counter_cached_HLT_PFHT450_SixJet40_BTagCSV_p056_ << std::endl;;
    std::cout << "HLT_PFHT450_SixPFJet36 (uncached/cached calls): " << counter_uncached_HLT_PFHT450_SixPFJet36_ << " / " << counter_cached_HLT_PFHT450_SixPFJet36_ << std::endl;;
    std::cout << "HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59 (uncached/cached calls): " << counter_uncached_HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_ << " / " << counter_cached_HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_ << std::endl;;
    std::cout << "HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59 (uncached/cached calls): " << counter_uncached_HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_ << " / " << counter_cached_HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_ << std::endl;;
    std::cout << "HLT_PFHT475 (uncached/cached calls): " << counter_uncached_HLT_PFHT475_ << " / " << counter_cached_HLT_PFHT475_ << std::endl;;
    std::cout << "HLT_PFHT500_PFMET100_PFMHT100_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFHT500_PFMET100_PFMHT100_IDTight_ << " / " << counter_cached_HLT_PFHT500_PFMET100_PFMHT100_IDTight_ << std::endl;;
    std::cout << "HLT_PFHT500_PFMET110_PFMHT110_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFHT500_PFMET110_PFMHT110_IDTight_ << " / " << counter_cached_HLT_PFHT500_PFMET110_PFMHT110_IDTight_ << std::endl;;
    std::cout << "HLT_PFHT510 (uncached/cached calls): " << counter_uncached_HLT_PFHT510_ << " / " << counter_cached_HLT_PFHT510_ << std::endl;;
    std::cout << "HLT_PFHT550_4JetPt50 (uncached/cached calls): " << counter_uncached_HLT_PFHT550_4JetPt50_ << " / " << counter_cached_HLT_PFHT550_4JetPt50_ << std::endl;;
    std::cout << "HLT_PFHT590 (uncached/cached calls): " << counter_uncached_HLT_PFHT590_ << " / " << counter_cached_HLT_PFHT590_ << std::endl;;
    std::cout << "HLT_PFHT600 (uncached/cached calls): " << counter_uncached_HLT_PFHT600_ << " / " << counter_cached_HLT_PFHT600_ << std::endl;;
    std::cout << "HLT_PFHT650 (uncached/cached calls): " << counter_uncached_HLT_PFHT650_ << " / " << counter_cached_HLT_PFHT650_ << std::endl;;
    std::cout << "HLT_PFHT650_4JetPt50 (uncached/cached calls): " << counter_uncached_HLT_PFHT650_4JetPt50_ << " / " << counter_cached_HLT_PFHT650_4JetPt50_ << std::endl;;
    std::cout << "HLT_PFHT650_WideJetMJJ900DEtaJJ1p5 (uncached/cached calls): " << counter_uncached_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_ << " / " << counter_cached_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_ << std::endl;;
    std::cout << "HLT_PFHT650_WideJetMJJ950DEtaJJ1p5 (uncached/cached calls): " << counter_uncached_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_ << " / " << counter_cached_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_ << std::endl;;
    std::cout << "HLT_PFHT680 (uncached/cached calls): " << counter_uncached_HLT_PFHT680_ << " / " << counter_cached_HLT_PFHT680_ << std::endl;;
    std::cout << "HLT_PFHT700_PFMET85_PFMHT85_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFHT700_PFMET85_PFMHT85_IDTight_ << " / " << counter_cached_HLT_PFHT700_PFMET85_PFMHT85_IDTight_ << std::endl;;
    std::cout << "HLT_PFHT700_PFMET95_PFMHT95_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFHT700_PFMET95_PFMHT95_IDTight_ << " / " << counter_cached_HLT_PFHT700_PFMET95_PFMHT95_IDTight_ << std::endl;;
    std::cout << "HLT_PFHT750_4JetPt50 (uncached/cached calls): " << counter_uncached_HLT_PFHT750_4JetPt50_ << " / " << counter_cached_HLT_PFHT750_4JetPt50_ << std::endl;;
    std::cout << "HLT_PFHT750_4JetPt70 (uncached/cached calls): " << counter_uncached_HLT_PFHT750_4JetPt70_ << " / " << counter_cached_HLT_PFHT750_4JetPt70_ << std::endl;;
    std::cout << "HLT_PFHT750_4JetPt80 (uncached/cached calls): " << counter_uncached_HLT_PFHT750_4JetPt80_ << " / " << counter_cached_HLT_PFHT750_4JetPt80_ << std::endl;;
    std::cout << "HLT_PFHT780 (uncached/cached calls): " << counter_uncached_HLT_PFHT780_ << " / " << counter_cached_HLT_PFHT780_ << std::endl;;
    std::cout << "HLT_PFHT800 (uncached/cached calls): " << counter_uncached_HLT_PFHT800_ << " / " << counter_cached_HLT_PFHT800_ << std::endl;;
    std::cout << "HLT_PFHT800_4JetPt50 (uncached/cached calls): " << counter_uncached_HLT_PFHT800_4JetPt50_ << " / " << counter_cached_HLT_PFHT800_4JetPt50_ << std::endl;;
    std::cout << "HLT_PFHT800_PFMET75_PFMHT75_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFHT800_PFMET75_PFMHT75_IDTight_ << " / " << counter_cached_HLT_PFHT800_PFMET75_PFMHT75_IDTight_ << std::endl;;
    std::cout << "HLT_PFHT800_PFMET85_PFMHT85_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFHT800_PFMET85_PFMHT85_IDTight_ << " / " << counter_cached_HLT_PFHT800_PFMET85_PFMHT85_IDTight_ << std::endl;;
    std::cout << "HLT_PFHT850_4JetPt50 (uncached/cached calls): " << counter_uncached_HLT_PFHT850_4JetPt50_ << " / " << counter_cached_HLT_PFHT850_4JetPt50_ << std::endl;;
    std::cout << "HLT_PFHT890 (uncached/cached calls): " << counter_uncached_HLT_PFHT890_ << " / " << counter_cached_HLT_PFHT890_ << std::endl;;
    std::cout << "HLT_PFHT900 (uncached/cached calls): " << counter_uncached_HLT_PFHT900_ << " / " << counter_cached_HLT_PFHT900_ << std::endl;;
    std::cout << "HLT_PFJet110 (uncached/cached calls): " << counter_uncached_HLT_PFJet110_ << " / " << counter_cached_HLT_PFJet110_ << std::endl;;
    std::cout << "HLT_PFJet140 (uncached/cached calls): " << counter_uncached_HLT_PFJet140_ << " / " << counter_cached_HLT_PFJet140_ << std::endl;;
    std::cout << "HLT_PFJet15 (uncached/cached calls): " << counter_uncached_HLT_PFJet15_ << " / " << counter_cached_HLT_PFJet15_ << std::endl;;
    std::cout << "HLT_PFJet15_NoCaloMatched (uncached/cached calls): " << counter_uncached_HLT_PFJet15_NoCaloMatched_ << " / " << counter_cached_HLT_PFJet15_NoCaloMatched_ << std::endl;;
    std::cout << "HLT_PFJet200 (uncached/cached calls): " << counter_uncached_HLT_PFJet200_ << " / " << counter_cached_HLT_PFJet200_ << std::endl;;
    std::cout << "HLT_PFJet25 (uncached/cached calls): " << counter_uncached_HLT_PFJet25_ << " / " << counter_cached_HLT_PFJet25_ << std::endl;;
    std::cout << "HLT_PFJet25_NoCaloMatched (uncached/cached calls): " << counter_uncached_HLT_PFJet25_NoCaloMatched_ << " / " << counter_cached_HLT_PFJet25_NoCaloMatched_ << std::endl;;
    std::cout << "HLT_PFJet260 (uncached/cached calls): " << counter_uncached_HLT_PFJet260_ << " / " << counter_cached_HLT_PFJet260_ << std::endl;;
    std::cout << "HLT_PFJet320 (uncached/cached calls): " << counter_uncached_HLT_PFJet320_ << " / " << counter_cached_HLT_PFJet320_ << std::endl;;
    std::cout << "HLT_PFJet40 (uncached/cached calls): " << counter_uncached_HLT_PFJet40_ << " / " << counter_cached_HLT_PFJet40_ << std::endl;;
    std::cout << "HLT_PFJet400 (uncached/cached calls): " << counter_uncached_HLT_PFJet400_ << " / " << counter_cached_HLT_PFJet400_ << std::endl;;
    std::cout << "HLT_PFJet40_GPUvsCPU (uncached/cached calls): " << counter_uncached_HLT_PFJet40_GPUvsCPU_ << " / " << counter_cached_HLT_PFJet40_GPUvsCPU_ << std::endl;;
    std::cout << "HLT_PFJet450 (uncached/cached calls): " << counter_uncached_HLT_PFJet450_ << " / " << counter_cached_HLT_PFJet450_ << std::endl;;
    std::cout << "HLT_PFJet500 (uncached/cached calls): " << counter_uncached_HLT_PFJet500_ << " / " << counter_cached_HLT_PFJet500_ << std::endl;;
    std::cout << "HLT_PFJet550 (uncached/cached calls): " << counter_uncached_HLT_PFJet550_ << " / " << counter_cached_HLT_PFJet550_ << std::endl;;
    std::cout << "HLT_PFJet60 (uncached/cached calls): " << counter_uncached_HLT_PFJet60_ << " / " << counter_cached_HLT_PFJet60_ << std::endl;;
    std::cout << "HLT_PFJet80 (uncached/cached calls): " << counter_uncached_HLT_PFJet80_ << " / " << counter_cached_HLT_PFJet80_ << std::endl;;
    std::cout << "HLT_PFJetFwd140 (uncached/cached calls): " << counter_uncached_HLT_PFJetFwd140_ << " / " << counter_cached_HLT_PFJetFwd140_ << std::endl;;
    std::cout << "HLT_PFJetFwd15 (uncached/cached calls): " << counter_uncached_HLT_PFJetFwd15_ << " / " << counter_cached_HLT_PFJetFwd15_ << std::endl;;
    std::cout << "HLT_PFJetFwd200 (uncached/cached calls): " << counter_uncached_HLT_PFJetFwd200_ << " / " << counter_cached_HLT_PFJetFwd200_ << std::endl;;
    std::cout << "HLT_PFJetFwd25 (uncached/cached calls): " << counter_uncached_HLT_PFJetFwd25_ << " / " << counter_cached_HLT_PFJetFwd25_ << std::endl;;
    std::cout << "HLT_PFJetFwd260 (uncached/cached calls): " << counter_uncached_HLT_PFJetFwd260_ << " / " << counter_cached_HLT_PFJetFwd260_ << std::endl;;
    std::cout << "HLT_PFJetFwd320 (uncached/cached calls): " << counter_uncached_HLT_PFJetFwd320_ << " / " << counter_cached_HLT_PFJetFwd320_ << std::endl;;
    std::cout << "HLT_PFJetFwd40 (uncached/cached calls): " << counter_uncached_HLT_PFJetFwd40_ << " / " << counter_cached_HLT_PFJetFwd40_ << std::endl;;
    std::cout << "HLT_PFJetFwd400 (uncached/cached calls): " << counter_uncached_HLT_PFJetFwd400_ << " / " << counter_cached_HLT_PFJetFwd400_ << std::endl;;
    std::cout << "HLT_PFJetFwd450 (uncached/cached calls): " << counter_uncached_HLT_PFJetFwd450_ << " / " << counter_cached_HLT_PFJetFwd450_ << std::endl;;
    std::cout << "HLT_PFJetFwd500 (uncached/cached calls): " << counter_uncached_HLT_PFJetFwd500_ << " / " << counter_cached_HLT_PFJetFwd500_ << std::endl;;
    std::cout << "HLT_PFJetFwd60 (uncached/cached calls): " << counter_uncached_HLT_PFJetFwd60_ << " / " << counter_cached_HLT_PFJetFwd60_ << std::endl;;
    std::cout << "HLT_PFJetFwd80 (uncached/cached calls): " << counter_uncached_HLT_PFJetFwd80_ << " / " << counter_cached_HLT_PFJetFwd80_ << std::endl;;
    std::cout << "HLT_PFMET100_PFMHT100_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFMET100_PFMHT100_IDTight_ << " / " << counter_cached_HLT_PFMET100_PFMHT100_IDTight_ << std::endl;;
    std::cout << "HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned_ << " / " << counter_cached_HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned_ << std::endl;;
    std::cout << "HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1 (uncached/cached calls): " << counter_uncached_HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1_ << " / " << counter_cached_HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1_ << std::endl;;
    std::cout << "HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1 (uncached/cached calls): " << counter_uncached_HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_ << " / " << counter_cached_HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_ << std::endl;;
    std::cout << "HLT_PFMET100_PFMHT100_IDTight_PFHT60 (uncached/cached calls): " << counter_uncached_HLT_PFMET100_PFMHT100_IDTight_PFHT60_ << " / " << counter_cached_HLT_PFMET100_PFMHT100_IDTight_PFHT60_ << std::endl;;
    std::cout << "HLT_PFMET105_IsoTrk50 (uncached/cached calls): " << counter_uncached_HLT_PFMET105_IsoTrk50_ << " / " << counter_cached_HLT_PFMET105_IsoTrk50_ << std::endl;;
    std::cout << "HLT_PFMET110_PFJet100 (uncached/cached calls): " << counter_uncached_HLT_PFMET110_PFJet100_ << " / " << counter_cached_HLT_PFMET110_PFJet100_ << std::endl;;
    std::cout << "HLT_PFMET110_PFMHT110_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFMET110_PFMHT110_IDTight_ << " / " << counter_cached_HLT_PFMET110_PFMHT110_IDTight_ << std::endl;;
    std::cout << "HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1 (uncached/cached calls): " << counter_uncached_HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1_ << " / " << counter_cached_HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1_ << std::endl;;
    std::cout << "HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1 (uncached/cached calls): " << counter_uncached_HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_ << " / " << counter_cached_HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_ << std::endl;;
    std::cout << "HLT_PFMET120_BTagCSV_p067 (uncached/cached calls): " << counter_uncached_HLT_PFMET120_BTagCSV_p067_ << " / " << counter_cached_HLT_PFMET120_BTagCSV_p067_ << std::endl;;
    std::cout << "HLT_PFMET120_Mu5 (uncached/cached calls): " << counter_uncached_HLT_PFMET120_Mu5_ << " / " << counter_cached_HLT_PFMET120_Mu5_ << std::endl;;
    std::cout << "HLT_PFMET120_PFMHT120_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFMET120_PFMHT120_IDTight_ << " / " << counter_cached_HLT_PFMET120_PFMHT120_IDTight_ << std::endl;;
    std::cout << "HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1 (uncached/cached calls): " << counter_uncached_HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1_ << " / " << counter_cached_HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1_ << std::endl;;
    std::cout << "HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1 (uncached/cached calls): " << counter_uncached_HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_ << " / " << counter_cached_HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_ << std::endl;;
    std::cout << "HLT_PFMET120_PFMHT120_IDTight_HFCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMET120_PFMHT120_IDTight_HFCleaned_ << " / " << counter_cached_HLT_PFMET120_PFMHT120_IDTight_HFCleaned_ << std::endl;;
    std::cout << "HLT_PFMET120_PFMHT120_IDTight_PFHT60 (uncached/cached calls): " << counter_uncached_HLT_PFMET120_PFMHT120_IDTight_PFHT60_ << " / " << counter_cached_HLT_PFMET120_PFMHT120_IDTight_PFHT60_ << std::endl;;
    std::cout << "HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned_ << " / " << counter_cached_HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned_ << std::endl;;
    std::cout << "HLT_PFMET130_PFMHT130_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFMET130_PFMHT130_IDTight_ << " / " << counter_cached_HLT_PFMET130_PFMHT130_IDTight_ << std::endl;;
    std::cout << "HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1 (uncached/cached calls): " << counter_uncached_HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1_ << " / " << counter_cached_HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1_ << std::endl;;
    std::cout << "HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1 (uncached/cached calls): " << counter_uncached_HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_ << " / " << counter_cached_HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_ << std::endl;;
    std::cout << "HLT_PFMET140_PFMHT140_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFMET140_PFMHT140_IDTight_ << " / " << counter_cached_HLT_PFMET140_PFMHT140_IDTight_ << std::endl;;
    std::cout << "HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1 (uncached/cached calls): " << counter_uncached_HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1_ << " / " << counter_cached_HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1_ << std::endl;;
    std::cout << "HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1 (uncached/cached calls): " << counter_uncached_HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_ << " / " << counter_cached_HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_ << std::endl;;
    std::cout << "HLT_PFMET170_BeamHaloCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMET170_BeamHaloCleaned_ << " / " << counter_cached_HLT_PFMET170_BeamHaloCleaned_ << std::endl;;
    std::cout << "HLT_PFMET170_HBHECleaned (uncached/cached calls): " << counter_uncached_HLT_PFMET170_HBHECleaned_ << " / " << counter_cached_HLT_PFMET170_HBHECleaned_ << std::endl;;
    std::cout << "HLT_PFMET170_HBHE_BeamHaloCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMET170_HBHE_BeamHaloCleaned_ << " / " << counter_cached_HLT_PFMET170_HBHE_BeamHaloCleaned_ << std::endl;;
    std::cout << "HLT_PFMET170_JetIdCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMET170_JetIdCleaned_ << " / " << counter_cached_HLT_PFMET170_JetIdCleaned_ << std::endl;;
    std::cout << "HLT_PFMET170_NoiseCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMET170_NoiseCleaned_ << " / " << counter_cached_HLT_PFMET170_NoiseCleaned_ << std::endl;;
    std::cout << "HLT_PFMET170_NotCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMET170_NotCleaned_ << " / " << counter_cached_HLT_PFMET170_NotCleaned_ << std::endl;;
    std::cout << "HLT_PFMET200_BeamHaloCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMET200_BeamHaloCleaned_ << " / " << counter_cached_HLT_PFMET200_BeamHaloCleaned_ << std::endl;;
    std::cout << "HLT_PFMET200_HBHECleaned (uncached/cached calls): " << counter_uncached_HLT_PFMET200_HBHECleaned_ << " / " << counter_cached_HLT_PFMET200_HBHECleaned_ << std::endl;;
    std::cout << "HLT_PFMET200_HBHE_BeamHaloCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMET200_HBHE_BeamHaloCleaned_ << " / " << counter_cached_HLT_PFMET200_HBHE_BeamHaloCleaned_ << std::endl;;
    std::cout << "HLT_PFMET200_NotCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMET200_NotCleaned_ << " / " << counter_cached_HLT_PFMET200_NotCleaned_ << std::endl;;
    std::cout << "HLT_PFMET250_HBHECleaned (uncached/cached calls): " << counter_uncached_HLT_PFMET250_HBHECleaned_ << " / " << counter_cached_HLT_PFMET250_HBHECleaned_ << std::endl;;
    std::cout << "HLT_PFMET250_NotCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMET250_NotCleaned_ << " / " << counter_cached_HLT_PFMET250_NotCleaned_ << std::endl;;
    std::cout << "HLT_PFMET300 (uncached/cached calls): " << counter_uncached_HLT_PFMET300_ << " / " << counter_cached_HLT_PFMET300_ << std::endl;;
    std::cout << "HLT_PFMET300_HBHECleaned (uncached/cached calls): " << counter_uncached_HLT_PFMET300_HBHECleaned_ << " / " << counter_cached_HLT_PFMET300_HBHECleaned_ << std::endl;;
    std::cout << "HLT_PFMET300_NotCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMET300_NotCleaned_ << " / " << counter_cached_HLT_PFMET300_NotCleaned_ << std::endl;;
    std::cout << "HLT_PFMET400 (uncached/cached calls): " << counter_uncached_HLT_PFMET400_ << " / " << counter_cached_HLT_PFMET400_ << std::endl;;
    std::cout << "HLT_PFMET500 (uncached/cached calls): " << counter_uncached_HLT_PFMET500_ << " / " << counter_cached_HLT_PFMET500_ << std::endl;;
    std::cout << "HLT_PFMET600 (uncached/cached calls): " << counter_uncached_HLT_PFMET600_ << " / " << counter_cached_HLT_PFMET600_ << std::endl;;
    std::cout << "HLT_PFMET90_PFMHT90_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFMET90_PFMHT90_IDTight_ << " / " << counter_cached_HLT_PFMET90_PFMHT90_IDTight_ << std::endl;;
    std::cout << "HLT_PFMETNoMu100_PFMHTNoMu100_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_ << " / " << counter_cached_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_ << std::endl;;
    std::cout << "HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60 (uncached/cached calls): " << counter_uncached_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_ << " / " << counter_cached_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_ << std::endl;;
    std::cout << "HLT_PFMETNoMu110_PFMHTNoMu110_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_ << " / " << counter_cached_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_ << std::endl;;
    std::cout << "HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF (uncached/cached calls): " << counter_uncached_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_ << " / " << counter_cached_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_ << std::endl;;
    std::cout << "HLT_PFMETNoMu120_PFMHTNoMu120_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_ << " / " << counter_cached_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_ << std::endl;;
    std::cout << "HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF (uncached/cached calls): " << counter_uncached_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_ << " / " << counter_cached_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_ << std::endl;;
    std::cout << "HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned_ << " / " << counter_cached_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned_ << std::endl;;
    std::cout << "HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60 (uncached/cached calls): " << counter_uncached_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_ << " / " << counter_cached_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_ << std::endl;;
    std::cout << "HLT_PFMETNoMu130_PFMHTNoMu130_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_ << " / " << counter_cached_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_ << std::endl;;
    std::cout << "HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF (uncached/cached calls): " << counter_uncached_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_ << " / " << counter_cached_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_ << std::endl;;
    std::cout << "HLT_PFMETNoMu140_PFMHTNoMu140_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_ << " / " << counter_cached_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_ << std::endl;;
    std::cout << "HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF (uncached/cached calls): " << counter_uncached_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_ << " / " << counter_cached_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_ << std::endl;;
    std::cout << "HLT_PFMETNoMu90_PFMHTNoMu90_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFMETNoMu90_PFMHTNoMu90_IDTight_ << " / " << counter_cached_HLT_PFMETNoMu90_PFMHTNoMu90_IDTight_ << std::endl;;
    std::cout << "HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60 (uncached/cached calls): " << counter_uncached_HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_ << " / " << counter_cached_HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_ << std::endl;;
    std::cout << "HLT_PFMETTypeOne110_PFMHT110_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFMETTypeOne110_PFMHT110_IDTight_ << " / " << counter_cached_HLT_PFMETTypeOne110_PFMHT110_IDTight_ << std::endl;;
    std::cout << "HLT_PFMETTypeOne120_PFMHT120_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFMETTypeOne120_PFMHT120_IDTight_ << " / " << counter_cached_HLT_PFMETTypeOne120_PFMHT120_IDTight_ << std::endl;;
    std::cout << "HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned_ << " / " << counter_cached_HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned_ << std::endl;;
    std::cout << "HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60 (uncached/cached calls): " << counter_uncached_HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_ << " / " << counter_cached_HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_ << std::endl;;
    std::cout << "HLT_PFMETTypeOne130_PFMHT130_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFMETTypeOne130_PFMHT130_IDTight_ << " / " << counter_cached_HLT_PFMETTypeOne130_PFMHT130_IDTight_ << std::endl;;
    std::cout << "HLT_PFMETTypeOne140_PFMHT140_IDTight (uncached/cached calls): " << counter_uncached_HLT_PFMETTypeOne140_PFMHT140_IDTight_ << " / " << counter_cached_HLT_PFMETTypeOne140_PFMHT140_IDTight_ << std::endl;;
    std::cout << "HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned_ << " / " << counter_cached_HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned_ << std::endl;;
    std::cout << "HLT_PFMETTypeOne200_BeamHaloCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMETTypeOne200_BeamHaloCleaned_ << " / " << counter_cached_HLT_PFMETTypeOne200_BeamHaloCleaned_ << std::endl;;
    std::cout << "HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned (uncached/cached calls): " << counter_uncached_HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_ << " / " << counter_cached_HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_ << std::endl;;
    std::cout << "HLT_PFTau120_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_PFTau120_eta2p1_ << " / " << counter_cached_HLT_PFTau120_eta2p1_ << std::endl;;
    std::cout << "HLT_PFTau140_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_PFTau140_eta2p1_ << " / " << counter_cached_HLT_PFTau140_eta2p1_ << std::endl;;
    std::cout << "HLT_PPSMaxTracksPerArm1 (uncached/cached calls): " << counter_uncached_HLT_PPSMaxTracksPerArm1_ << " / " << counter_cached_HLT_PPSMaxTracksPerArm1_ << std::endl;;
    std::cout << "HLT_PPSMaxTracksPerRP4 (uncached/cached calls): " << counter_uncached_HLT_PPSMaxTracksPerRP4_ << " / " << counter_cached_HLT_PPSMaxTracksPerRP4_ << std::endl;;
    std::cout << "HLT_Photon100EBHE10 (uncached/cached calls): " << counter_uncached_HLT_Photon100EBHE10_ << " / " << counter_cached_HLT_Photon100EBHE10_ << std::endl;;
    std::cout << "HLT_Photon100EB_TightID_TightIso (uncached/cached calls): " << counter_uncached_HLT_Photon100EB_TightID_TightIso_ << " / " << counter_cached_HLT_Photon100EB_TightID_TightIso_ << std::endl;;
    std::cout << "HLT_Photon100EEHE10 (uncached/cached calls): " << counter_uncached_HLT_Photon100EEHE10_ << " / " << counter_cached_HLT_Photon100EEHE10_ << std::endl;;
    std::cout << "HLT_Photon100EE_TightID_TightIso (uncached/cached calls): " << counter_uncached_HLT_Photon100EE_TightID_TightIso_ << " / " << counter_cached_HLT_Photon100EE_TightID_TightIso_ << std::endl;;
    std::cout << "HLT_Photon110EB_TightID_TightIso (uncached/cached calls): " << counter_uncached_HLT_Photon110EB_TightID_TightIso_ << " / " << counter_cached_HLT_Photon110EB_TightID_TightIso_ << std::endl;;
    std::cout << "HLT_Photon120 (uncached/cached calls): " << counter_uncached_HLT_Photon120_ << " / " << counter_cached_HLT_Photon120_ << std::endl;;
    std::cout << "HLT_Photon120EB_TightID_TightIso (uncached/cached calls): " << counter_uncached_HLT_Photon120EB_TightID_TightIso_ << " / " << counter_cached_HLT_Photon120EB_TightID_TightIso_ << std::endl;;
    std::cout << "HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40 (uncached/cached calls): " << counter_uncached_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40_ << " / " << counter_cached_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40_ << std::endl;;
    std::cout << "HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF (uncached/cached calls): " << counter_uncached_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF_ << " / " << counter_cached_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF_ << std::endl;;
    std::cout << "HLT_Photon120_R9Id90_HE10_IsoM (uncached/cached calls): " << counter_uncached_HLT_Photon120_R9Id90_HE10_IsoM_ << " / " << counter_cached_HLT_Photon120_R9Id90_HE10_IsoM_ << std::endl;;
    std::cout << "HLT_Photon125 (uncached/cached calls): " << counter_uncached_HLT_Photon125_ << " / " << counter_cached_HLT_Photon125_ << std::endl;;
    std::cout << "HLT_Photon135_PFMET100 (uncached/cached calls): " << counter_uncached_HLT_Photon135_PFMET100_ << " / " << counter_cached_HLT_Photon135_PFMET100_ << std::endl;;
    std::cout << "HLT_Photon150 (uncached/cached calls): " << counter_uncached_HLT_Photon150_ << " / " << counter_cached_HLT_Photon150_ << std::endl;;
    std::cout << "HLT_Photon165_HE10 (uncached/cached calls): " << counter_uncached_HLT_Photon165_HE10_ << " / " << counter_cached_HLT_Photon165_HE10_ << std::endl;;
    std::cout << "HLT_Photon165_R9Id90_HE10_IsoM (uncached/cached calls): " << counter_uncached_HLT_Photon165_R9Id90_HE10_IsoM_ << " / " << counter_cached_HLT_Photon165_R9Id90_HE10_IsoM_ << std::endl;;
    std::cout << "HLT_Photon175 (uncached/cached calls): " << counter_uncached_HLT_Photon175_ << " / " << counter_cached_HLT_Photon175_ << std::endl;;
    std::cout << "HLT_Photon20 (uncached/cached calls): " << counter_uncached_HLT_Photon20_ << " / " << counter_cached_HLT_Photon20_ << std::endl;;
    std::cout << "HLT_Photon200 (uncached/cached calls): " << counter_uncached_HLT_Photon200_ << " / " << counter_cached_HLT_Photon200_ << std::endl;;
    std::cout << "HLT_Photon20_CaloIdVL_IsoL (uncached/cached calls): " << counter_uncached_HLT_Photon20_CaloIdVL_IsoL_ << " / " << counter_cached_HLT_Photon20_CaloIdVL_IsoL_ << std::endl;;
    std::cout << "HLT_Photon20_HoverELoose (uncached/cached calls): " << counter_uncached_HLT_Photon20_HoverELoose_ << " / " << counter_cached_HLT_Photon20_HoverELoose_ << std::endl;;
    std::cout << "HLT_Photon22 (uncached/cached calls): " << counter_uncached_HLT_Photon22_ << " / " << counter_cached_HLT_Photon22_ << std::endl;;
    std::cout << "HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40 (uncached/cached calls): " << counter_uncached_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40_ << " / " << counter_cached_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40_ << std::endl;;
    std::cout << "HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF (uncached/cached calls): " << counter_uncached_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF_ << " / " << counter_cached_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF_ << std::endl;;
    std::cout << "HLT_Photon22_R9Id90_HE10_IsoM (uncached/cached calls): " << counter_uncached_HLT_Photon22_R9Id90_HE10_IsoM_ << " / " << counter_cached_HLT_Photon22_R9Id90_HE10_IsoM_ << std::endl;;
    std::cout << "HLT_Photon25 (uncached/cached calls): " << counter_uncached_HLT_Photon25_ << " / " << counter_cached_HLT_Photon25_ << std::endl;;
    std::cout << "HLT_Photon250_NoHE (uncached/cached calls): " << counter_uncached_HLT_Photon250_NoHE_ << " / " << counter_cached_HLT_Photon250_NoHE_ << std::endl;;
    std::cout << "HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60 (uncached/cached calls): " << counter_uncached_HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60_ << " / " << counter_cached_HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60_ << std::endl;;
    std::cout << "HLT_Photon30 (uncached/cached calls): " << counter_uncached_HLT_Photon30_ << " / " << counter_cached_HLT_Photon30_ << std::endl;;
    std::cout << "HLT_Photon300_NoHE (uncached/cached calls): " << counter_uncached_HLT_Photon300_NoHE_ << " / " << counter_cached_HLT_Photon300_NoHE_ << std::endl;;
    std::cout << "HLT_Photon30EB_TightID_TightIso (uncached/cached calls): " << counter_uncached_HLT_Photon30EB_TightID_TightIso_ << " / " << counter_cached_HLT_Photon30EB_TightID_TightIso_ << std::endl;;
    std::cout << "HLT_Photon30_HoverELoose (uncached/cached calls): " << counter_uncached_HLT_Photon30_HoverELoose_ << " / " << counter_cached_HLT_Photon30_HoverELoose_ << std::endl;;
    std::cout << "HLT_Photon30_R9Id90_HE10_IsoM (uncached/cached calls): " << counter_uncached_HLT_Photon30_R9Id90_HE10_IsoM_ << " / " << counter_cached_HLT_Photon30_R9Id90_HE10_IsoM_ << std::endl;;
    std::cout << "HLT_Photon33 (uncached/cached calls): " << counter_uncached_HLT_Photon33_ << " / " << counter_cached_HLT_Photon33_ << std::endl;;
    std::cout << "HLT_Photon35_TwoProngs35 (uncached/cached calls): " << counter_uncached_HLT_Photon35_TwoProngs35_ << " / " << counter_cached_HLT_Photon35_TwoProngs35_ << std::endl;;
    std::cout << "HLT_Photon36 (uncached/cached calls): " << counter_uncached_HLT_Photon36_ << " / " << counter_cached_HLT_Photon36_ << std::endl;;
    std::cout << "HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15 (uncached/cached calls): " << counter_uncached_HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15_ << " / " << counter_cached_HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15_ << std::endl;;
    std::cout << "HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40 (uncached/cached calls): " << counter_uncached_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40_ << " / " << counter_cached_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40_ << std::endl;;
    std::cout << "HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF (uncached/cached calls): " << counter_uncached_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF_ << " / " << counter_cached_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF_ << std::endl;;
    std::cout << "HLT_Photon36_R9Id90_HE10_IsoM (uncached/cached calls): " << counter_uncached_HLT_Photon36_R9Id90_HE10_IsoM_ << " / " << counter_cached_HLT_Photon36_R9Id90_HE10_IsoM_ << std::endl;;
    std::cout << "HLT_Photon40_HoverELoose (uncached/cached calls): " << counter_uncached_HLT_Photon40_HoverELoose_ << " / " << counter_cached_HLT_Photon40_HoverELoose_ << std::endl;;
    std::cout << "HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15 (uncached/cached calls): " << counter_uncached_HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15_ << " / " << counter_cached_HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15_ << std::endl;;
    std::cout << "HLT_Photon50 (uncached/cached calls): " << counter_uncached_HLT_Photon50_ << " / " << counter_cached_HLT_Photon50_ << std::endl;;
    std::cout << "HLT_Photon500 (uncached/cached calls): " << counter_uncached_HLT_Photon500_ << " / " << counter_cached_HLT_Photon500_ << std::endl;;
    std::cout << "HLT_Photon50_HoverELoose (uncached/cached calls): " << counter_uncached_HLT_Photon50_HoverELoose_ << " / " << counter_cached_HLT_Photon50_HoverELoose_ << std::endl;;
    std::cout << "HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40 (uncached/cached calls): " << counter_uncached_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40_ << " / " << counter_cached_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40_ << std::endl;;
    std::cout << "HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF (uncached/cached calls): " << counter_uncached_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF_ << " / " << counter_cached_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF_ << std::endl;;
    std::cout << "HLT_Photon50_R9Id90_HE10_IsoM (uncached/cached calls): " << counter_uncached_HLT_Photon50_R9Id90_HE10_IsoM_ << " / " << counter_cached_HLT_Photon50_R9Id90_HE10_IsoM_ << std::endl;;
    std::cout << "HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50 (uncached/cached calls): " << counter_uncached_HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_ << " / " << counter_cached_HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_ << std::endl;;
    std::cout << "HLT_Photon600 (uncached/cached calls): " << counter_uncached_HLT_Photon600_ << " / " << counter_cached_HLT_Photon600_ << std::endl;;
    std::cout << "HLT_Photon60_HoverELoose (uncached/cached calls): " << counter_uncached_HLT_Photon60_HoverELoose_ << " / " << counter_cached_HLT_Photon60_HoverELoose_ << std::endl;;
    std::cout << "HLT_Photon60_R9Id90_CaloIdL_IsoL (uncached/cached calls): " << counter_uncached_HLT_Photon60_R9Id90_CaloIdL_IsoL_ << " / " << counter_cached_HLT_Photon60_R9Id90_CaloIdL_IsoL_ << std::endl;;
    std::cout << "HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL (uncached/cached calls): " << counter_uncached_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_ << " / " << counter_cached_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_ << std::endl;;
    std::cout << "HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15 (uncached/cached calls): " << counter_uncached_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_ << " / " << counter_cached_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_ << std::endl;;
    std::cout << "HLT_Photon75 (uncached/cached calls): " << counter_uncached_HLT_Photon75_ << " / " << counter_cached_HLT_Photon75_ << std::endl;;
    std::cout << "HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40 (uncached/cached calls): " << counter_uncached_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40_ << " / " << counter_cached_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40_ << std::endl;;
    std::cout << "HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF (uncached/cached calls): " << counter_uncached_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF_ << " / " << counter_cached_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF_ << std::endl;;
    std::cout << "HLT_Photon75_R9Id90_HE10_IsoM (uncached/cached calls): " << counter_uncached_HLT_Photon75_R9Id90_HE10_IsoM_ << " / " << counter_cached_HLT_Photon75_R9Id90_HE10_IsoM_ << std::endl;;
    std::cout << "HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3 (uncached/cached calls): " << counter_uncached_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_ << " / " << counter_cached_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_ << std::endl;;
    std::cout << "HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3 (uncached/cached calls): " << counter_uncached_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_ << " / " << counter_cached_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_ << std::endl;;
    std::cout << "HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3 (uncached/cached calls): " << counter_uncached_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_ << " / " << counter_cached_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_ << std::endl;;
    std::cout << "HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3 (uncached/cached calls): " << counter_uncached_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_ << " / " << counter_cached_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_ << std::endl;;
    std::cout << "HLT_Photon90 (uncached/cached calls): " << counter_uncached_HLT_Photon90_ << " / " << counter_cached_HLT_Photon90_ << std::endl;;
    std::cout << "HLT_Photon90_CaloIdL_HT300 (uncached/cached calls): " << counter_uncached_HLT_Photon90_CaloIdL_HT300_ << " / " << counter_cached_HLT_Photon90_CaloIdL_HT300_ << std::endl;;
    std::cout << "HLT_Photon90_CaloIdL_PFHT500 (uncached/cached calls): " << counter_uncached_HLT_Photon90_CaloIdL_PFHT500_ << " / " << counter_cached_HLT_Photon90_CaloIdL_PFHT500_ << std::endl;;
    std::cout << "HLT_Photon90_CaloIdL_PFHT600 (uncached/cached calls): " << counter_uncached_HLT_Photon90_CaloIdL_PFHT600_ << " / " << counter_cached_HLT_Photon90_CaloIdL_PFHT600_ << std::endl;;
    std::cout << "HLT_Photon90_CaloIdL_PFHT700 (uncached/cached calls): " << counter_uncached_HLT_Photon90_CaloIdL_PFHT700_ << " / " << counter_cached_HLT_Photon90_CaloIdL_PFHT700_ << std::endl;;
    std::cout << "HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40 (uncached/cached calls): " << counter_uncached_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40_ << " / " << counter_cached_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40_ << std::endl;;
    std::cout << "HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF (uncached/cached calls): " << counter_uncached_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF_ << " / " << counter_cached_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF_ << std::endl;;
    std::cout << "HLT_Photon90_R9Id90_HE10_IsoM (uncached/cached calls): " << counter_uncached_HLT_Photon90_R9Id90_HE10_IsoM_ << " / " << counter_cached_HLT_Photon90_R9Id90_HE10_IsoM_ << std::endl;;
    std::cout << "HLT_Physics (uncached/cached calls): " << counter_uncached_HLT_Physics_ << " / " << counter_cached_HLT_Physics_ << std::endl;;
    std::cout << "HLT_Physics_part0 (uncached/cached calls): " << counter_uncached_HLT_Physics_part0_ << " / " << counter_cached_HLT_Physics_part0_ << std::endl;;
    std::cout << "HLT_Physics_part1 (uncached/cached calls): " << counter_uncached_HLT_Physics_part1_ << " / " << counter_cached_HLT_Physics_part1_ << std::endl;;
    std::cout << "HLT_Physics_part2 (uncached/cached calls): " << counter_uncached_HLT_Physics_part2_ << " / " << counter_cached_HLT_Physics_part2_ << std::endl;;
    std::cout << "HLT_Physics_part3 (uncached/cached calls): " << counter_uncached_HLT_Physics_part3_ << " / " << counter_cached_HLT_Physics_part3_ << std::endl;;
    std::cout << "HLT_Physics_part4 (uncached/cached calls): " << counter_uncached_HLT_Physics_part4_ << " / " << counter_cached_HLT_Physics_part4_ << std::endl;;
    std::cout << "HLT_Physics_part5 (uncached/cached calls): " << counter_uncached_HLT_Physics_part5_ << " / " << counter_cached_HLT_Physics_part5_ << std::endl;;
    std::cout << "HLT_Physics_part6 (uncached/cached calls): " << counter_uncached_HLT_Physics_part6_ << " / " << counter_cached_HLT_Physics_part6_ << std::endl;;
    std::cout << "HLT_Physics_part7 (uncached/cached calls): " << counter_uncached_HLT_Physics_part7_ << " / " << counter_cached_HLT_Physics_part7_ << std::endl;;
    std::cout << "HLT_PixelTracks_Multiplicity110ForEndOfFill (uncached/cached calls): " << counter_uncached_HLT_PixelTracks_Multiplicity110ForEndOfFill_ << " / " << counter_cached_HLT_PixelTracks_Multiplicity110ForEndOfFill_ << std::endl;;
    std::cout << "HLT_PixelTracks_Multiplicity135ForEndOfFill (uncached/cached calls): " << counter_uncached_HLT_PixelTracks_Multiplicity135ForEndOfFill_ << " / " << counter_cached_HLT_PixelTracks_Multiplicity135ForEndOfFill_ << std::endl;;
    std::cout << "HLT_PixelTracks_Multiplicity160ForEndOfFill (uncached/cached calls): " << counter_uncached_HLT_PixelTracks_Multiplicity160ForEndOfFill_ << " / " << counter_cached_HLT_PixelTracks_Multiplicity160ForEndOfFill_ << std::endl;;
    std::cout << "HLT_PixelTracks_Multiplicity60ForEndOfFill (uncached/cached calls): " << counter_uncached_HLT_PixelTracks_Multiplicity60ForEndOfFill_ << " / " << counter_cached_HLT_PixelTracks_Multiplicity60ForEndOfFill_ << std::endl;;
    std::cout << "HLT_PixelTracks_Multiplicity85ForEndOfFill (uncached/cached calls): " << counter_uncached_HLT_PixelTracks_Multiplicity85ForEndOfFill_ << " / " << counter_cached_HLT_PixelTracks_Multiplicity85ForEndOfFill_ << std::endl;;
    std::cout << "HLT_QuadJet45_DoubleBTagCSV_p087 (uncached/cached calls): " << counter_uncached_HLT_QuadJet45_DoubleBTagCSV_p087_ << " / " << counter_cached_HLT_QuadJet45_DoubleBTagCSV_p087_ << std::endl;;
    std::cout << "HLT_QuadJet45_TripleBTagCSV_p087 (uncached/cached calls): " << counter_uncached_HLT_QuadJet45_TripleBTagCSV_p087_ << " / " << counter_cached_HLT_QuadJet45_TripleBTagCSV_p087_ << std::endl;;
    std::cout << "HLT_QuadMuon0_Dimuon0_Jpsi (uncached/cached calls): " << counter_uncached_HLT_QuadMuon0_Dimuon0_Jpsi_ << " / " << counter_cached_HLT_QuadMuon0_Dimuon0_Jpsi_ << std::endl;;
    std::cout << "HLT_QuadMuon0_Dimuon0_Upsilon (uncached/cached calls): " << counter_uncached_HLT_QuadMuon0_Dimuon0_Upsilon_ << " / " << counter_cached_HLT_QuadMuon0_Dimuon0_Upsilon_ << std::endl;;
    std::cout << "HLT_QuadPFJet103_88_75_15 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet103_88_75_15_ << " / " << counter_cached_HLT_QuadPFJet103_88_75_15_ << std::endl;;
    std::cout << "HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2_ << " / " << counter_cached_HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2_ << std::endl;;
    std::cout << "HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1_ << " / " << counter_cached_HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1_ << std::endl;;
    std::cout << "HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ << " / " << counter_cached_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ << std::endl;;
    std::cout << "HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_ << " / " << counter_cached_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_ << std::endl;;
    std::cout << "HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_ << " / " << counter_cached_HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_ << std::endl;;
    std::cout << "HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_ << " / " << counter_cached_HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_ << std::endl;;
    std::cout << "HLT_QuadPFJet105_88_76_15 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet105_88_76_15_ << " / " << counter_cached_HLT_QuadPFJet105_88_76_15_ << std::endl;;
    std::cout << "HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2_ << " / " << counter_cached_HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2_ << std::endl;;
    std::cout << "HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ << " / " << counter_cached_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ << std::endl;;
    std::cout << "HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_ << " / " << counter_cached_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_ << std::endl;;
    std::cout << "HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_ << " / " << counter_cached_HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_ << std::endl;;
    std::cout << "HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_ << " / " << counter_cached_HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_ << std::endl;;
    std::cout << "HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1_ << " / " << counter_cached_HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1_ << std::endl;;
    std::cout << "HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ << " / " << counter_cached_HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ << std::endl;;
    std::cout << "HLT_QuadPFJet111_90_80_15 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet111_90_80_15_ << " / " << counter_cached_HLT_QuadPFJet111_90_80_15_ << std::endl;;
    std::cout << "HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2_ << " / " << counter_cached_HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2_ << std::endl;;
    std::cout << "HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1_ << " / " << counter_cached_HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1_ << std::endl;;
    std::cout << "HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ << " / " << counter_cached_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ << std::endl;;
    std::cout << "HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_ << " / " << counter_cached_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_ << std::endl;;
    std::cout << "HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_ << " / " << counter_cached_HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_ << std::endl;;
    std::cout << "HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_ << " / " << counter_cached_HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_ << std::endl;;
    std::cout << "HLT_QuadPFJet70_50_40_30 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet70_50_40_30_ << " / " << counter_cached_HLT_QuadPFJet70_50_40_30_ << std::endl;;
    std::cout << "HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_ << " / " << counter_cached_HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_ << std::endl;;
    std::cout << "HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_ << " / " << counter_cached_HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_ << std::endl;;
    std::cout << "HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_ << " / " << counter_cached_HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_ << std::endl;;
    std::cout << "HLT_QuadPFJet98_83_71_15 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet98_83_71_15_ << " / " << counter_cached_HLT_QuadPFJet98_83_71_15_ << std::endl;;
    std::cout << "HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2_ << " / " << counter_cached_HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2_ << std::endl;;
    std::cout << "HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1_ << " / " << counter_cached_HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1_ << std::endl;;
    std::cout << "HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ << " / " << counter_cached_HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ << std::endl;;
    std::cout << "HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_ << " / " << counter_cached_HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_ << std::endl;;
    std::cout << "HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460_ << " / " << counter_cached_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460_ << std::endl;;
    std::cout << "HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500_ << " / " << counter_cached_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500_ << std::endl;;
    std::cout << "HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200_ << " / " << counter_cached_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200_ << std::endl;;
    std::cout << "HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240 (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240_ << " / " << counter_cached_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240_ << std::endl;;
    std::cout << "HLT_QuadPFJet_VBF (uncached/cached calls): " << counter_uncached_HLT_QuadPFJet_VBF_ << " / " << counter_cached_HLT_QuadPFJet_VBF_ << std::endl;;
    std::cout << "HLT_Random (uncached/cached calls): " << counter_uncached_HLT_Random_ << " / " << counter_cached_HLT_Random_ << std::endl;;
    std::cout << "HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200 (uncached/cached calls): " << counter_uncached_HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200_ << " / " << counter_cached_HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200_ << std::endl;;
    std::cout << "HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200 (uncached/cached calls): " << counter_uncached_HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ << " / " << counter_cached_HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ << std::endl;;
    std::cout << "HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200 (uncached/cached calls): " << counter_uncached_HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ << " / " << counter_cached_HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ << std::endl;;
    std::cout << "HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200 (uncached/cached calls): " << counter_uncached_HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ << " / " << counter_cached_HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ << std::endl;;
    std::cout << "HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200 (uncached/cached calls): " << counter_uncached_HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ << " / " << counter_cached_HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ << std::endl;;
    std::cout << "HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200 (uncached/cached calls): " << counter_uncached_HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ << " / " << counter_cached_HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ << std::endl;;
    std::cout << "HLT_Rsq0p25 (uncached/cached calls): " << counter_uncached_HLT_Rsq0p25_ << " / " << counter_cached_HLT_Rsq0p25_ << std::endl;;
    std::cout << "HLT_Rsq0p25_Calo (uncached/cached calls): " << counter_uncached_HLT_Rsq0p25_Calo_ << " / " << counter_cached_HLT_Rsq0p25_Calo_ << std::endl;;
    std::cout << "HLT_Rsq0p30 (uncached/cached calls): " << counter_uncached_HLT_Rsq0p30_ << " / " << counter_cached_HLT_Rsq0p30_ << std::endl;;
    std::cout << "HLT_Rsq0p35 (uncached/cached calls): " << counter_uncached_HLT_Rsq0p35_ << " / " << counter_cached_HLT_Rsq0p35_ << std::endl;;
    std::cout << "HLT_Rsq0p40 (uncached/cached calls): " << counter_uncached_HLT_Rsq0p40_ << " / " << counter_cached_HLT_Rsq0p40_ << std::endl;;
    std::cout << "HLT_RsqMR240_Rsq0p09_MR200 (uncached/cached calls): " << counter_uncached_HLT_RsqMR240_Rsq0p09_MR200_ << " / " << counter_cached_HLT_RsqMR240_Rsq0p09_MR200_ << std::endl;;
    std::cout << "HLT_RsqMR240_Rsq0p09_MR200_4jet (uncached/cached calls): " << counter_uncached_HLT_RsqMR240_Rsq0p09_MR200_4jet_ << " / " << counter_cached_HLT_RsqMR240_Rsq0p09_MR200_4jet_ << std::endl;;
    std::cout << "HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo (uncached/cached calls): " << counter_uncached_HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo_ << " / " << counter_cached_HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo_ << std::endl;;
    std::cout << "HLT_RsqMR240_Rsq0p09_MR200_Calo (uncached/cached calls): " << counter_uncached_HLT_RsqMR240_Rsq0p09_MR200_Calo_ << " / " << counter_cached_HLT_RsqMR240_Rsq0p09_MR200_Calo_ << std::endl;;
    std::cout << "HLT_RsqMR270_Rsq0p09_MR200 (uncached/cached calls): " << counter_uncached_HLT_RsqMR270_Rsq0p09_MR200_ << " / " << counter_cached_HLT_RsqMR270_Rsq0p09_MR200_ << std::endl;;
    std::cout << "HLT_RsqMR270_Rsq0p09_MR200_4jet (uncached/cached calls): " << counter_uncached_HLT_RsqMR270_Rsq0p09_MR200_4jet_ << " / " << counter_cached_HLT_RsqMR270_Rsq0p09_MR200_4jet_ << std::endl;;
    std::cout << "HLT_RsqMR300_Rsq0p09_MR200 (uncached/cached calls): " << counter_uncached_HLT_RsqMR300_Rsq0p09_MR200_ << " / " << counter_cached_HLT_RsqMR300_Rsq0p09_MR200_ << std::endl;;
    std::cout << "HLT_RsqMR300_Rsq0p09_MR200_4jet (uncached/cached calls): " << counter_uncached_HLT_RsqMR300_Rsq0p09_MR200_4jet_ << " / " << counter_cached_HLT_RsqMR300_Rsq0p09_MR200_4jet_ << std::endl;;
    std::cout << "HLT_RsqMR320_Rsq0p09_MR200 (uncached/cached calls): " << counter_uncached_HLT_RsqMR320_Rsq0p09_MR200_ << " / " << counter_cached_HLT_RsqMR320_Rsq0p09_MR200_ << std::endl;;
    std::cout << "HLT_RsqMR320_Rsq0p09_MR200_4jet (uncached/cached calls): " << counter_uncached_HLT_RsqMR320_Rsq0p09_MR200_4jet_ << " / " << counter_cached_HLT_RsqMR320_Rsq0p09_MR200_4jet_ << std::endl;;
    std::cout << "HLT_SingleCentralPFJet170_CFMax0p1 (uncached/cached calls): " << counter_uncached_HLT_SingleCentralPFJet170_CFMax0p1_ << " / " << counter_cached_HLT_SingleCentralPFJet170_CFMax0p1_ << std::endl;;
    std::cout << "HLT_SingleJet30_Mu12_SinglePFJet40 (uncached/cached calls): " << counter_uncached_HLT_SingleJet30_Mu12_SinglePFJet40_ << " / " << counter_cached_HLT_SingleJet30_Mu12_SinglePFJet40_ << std::endl;;
    std::cout << "HLT_SinglePhoton10_Eta3p1ForPPRef (uncached/cached calls): " << counter_uncached_HLT_SinglePhoton10_Eta3p1ForPPRef_ << " / " << counter_cached_HLT_SinglePhoton10_Eta3p1ForPPRef_ << std::endl;;
    std::cout << "HLT_SinglePhoton20_Eta3p1ForPPRef (uncached/cached calls): " << counter_uncached_HLT_SinglePhoton20_Eta3p1ForPPRef_ << " / " << counter_cached_HLT_SinglePhoton20_Eta3p1ForPPRef_ << std::endl;;
    std::cout << "HLT_SinglePhoton30_Eta3p1ForPPRef (uncached/cached calls): " << counter_uncached_HLT_SinglePhoton30_Eta3p1ForPPRef_ << " / " << counter_cached_HLT_SinglePhoton30_Eta3p1ForPPRef_ << std::endl;;
    std::cout << "HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10 (uncached/cached calls): " << counter_uncached_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_ << " / " << counter_cached_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_ << std::endl;;
    std::cout << "HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1 (uncached/cached calls): " << counter_uncached_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1_ << " / " << counter_cached_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1_ << std::endl;;
    std::cout << "HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10 (uncached/cached calls): " << counter_uncached_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_ << " / " << counter_cached_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_ << std::endl;;
    std::cout << "HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1 (uncached/cached calls): " << counter_uncached_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1_ << " / " << counter_cached_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1_ << std::endl;;
    std::cout << "HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15 (uncached/cached calls): " << counter_uncached_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_ << " / " << counter_cached_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_ << std::endl;;
    std::cout << "HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1 (uncached/cached calls): " << counter_uncached_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_ << " / " << counter_cached_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_ << std::endl;;
    std::cout << "HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15 (uncached/cached calls): " << counter_uncached_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_ << " / " << counter_cached_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_ << std::endl;;
    std::cout << "HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1 (uncached/cached calls): " << counter_uncached_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_ << " / " << counter_cached_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_ << std::endl;;
    std::cout << "HLT_TkMu100 (uncached/cached calls): " << counter_uncached_HLT_TkMu100_ << " / " << counter_cached_HLT_TkMu100_ << std::endl;;
    std::cout << "HLT_TkMu17 (uncached/cached calls): " << counter_uncached_HLT_TkMu17_ << " / " << counter_cached_HLT_TkMu17_ << std::endl;;
    std::cout << "HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL (uncached/cached calls): " << counter_uncached_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_ << " / " << counter_cached_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_ << std::endl;;
    std::cout << "HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ (uncached/cached calls): " << counter_uncached_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_ << " / " << counter_cached_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_ << std::endl;;
    std::cout << "HLT_TkMu20 (uncached/cached calls): " << counter_uncached_HLT_TkMu20_ << " / " << counter_cached_HLT_TkMu20_ << std::endl;;
    std::cout << "HLT_TkMu24_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_TkMu24_eta2p1_ << " / " << counter_cached_HLT_TkMu24_eta2p1_ << std::endl;;
    std::cout << "HLT_TkMu27 (uncached/cached calls): " << counter_uncached_HLT_TkMu27_ << " / " << counter_cached_HLT_TkMu27_ << std::endl;;
    std::cout << "HLT_TkMu50 (uncached/cached calls): " << counter_uncached_HLT_TkMu50_ << " / " << counter_cached_HLT_TkMu50_ << std::endl;;
    std::cout << "HLT_Trimuon2_Upsilon5_Muon (uncached/cached calls): " << counter_uncached_HLT_Trimuon2_Upsilon5_Muon_ << " / " << counter_cached_HLT_Trimuon2_Upsilon5_Muon_ << std::endl;;
    std::cout << "HLT_Trimuon5_3p5_2_Upsilon_Muon (uncached/cached calls): " << counter_uncached_HLT_Trimuon5_3p5_2_Upsilon_Muon_ << " / " << counter_cached_HLT_Trimuon5_3p5_2_Upsilon_Muon_ << std::endl;;
    std::cout << "HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon (uncached/cached calls): " << counter_uncached_HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_ << " / " << counter_cached_HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_ << std::endl;;
    std::cout << "HLT_TripleJet110_35_35_Mjj650_PFMET110 (uncached/cached calls): " << counter_uncached_HLT_TripleJet110_35_35_Mjj650_PFMET110_ << " / " << counter_cached_HLT_TripleJet110_35_35_Mjj650_PFMET110_ << std::endl;;
    std::cout << "HLT_TripleJet110_35_35_Mjj650_PFMET120 (uncached/cached calls): " << counter_uncached_HLT_TripleJet110_35_35_Mjj650_PFMET120_ << " / " << counter_cached_HLT_TripleJet110_35_35_Mjj650_PFMET120_ << std::endl;;
    std::cout << "HLT_TripleJet110_35_35_Mjj650_PFMET130 (uncached/cached calls): " << counter_uncached_HLT_TripleJet110_35_35_Mjj650_PFMET130_ << " / " << counter_cached_HLT_TripleJet110_35_35_Mjj650_PFMET130_ << std::endl;;
    std::cout << "HLT_TripleMu_10_5_5_DZ (uncached/cached calls): " << counter_uncached_HLT_TripleMu_10_5_5_DZ_ << " / " << counter_cached_HLT_TripleMu_10_5_5_DZ_ << std::endl;;
    std::cout << "HLT_TripleMu_12_10_5 (uncached/cached calls): " << counter_uncached_HLT_TripleMu_12_10_5_ << " / " << counter_cached_HLT_TripleMu_12_10_5_ << std::endl;;
    std::cout << "HLT_TripleMu_5_3_3 (uncached/cached calls): " << counter_uncached_HLT_TripleMu_5_3_3_ << " / " << counter_cached_HLT_TripleMu_5_3_3_ << std::endl;;
    std::cout << "HLT_TripleMu_5_3_3_DZ_Mass3p8 (uncached/cached calls): " << counter_uncached_HLT_TripleMu_5_3_3_DZ_Mass3p8_ << " / " << counter_cached_HLT_TripleMu_5_3_3_DZ_Mass3p8_ << std::endl;;
    std::cout << "HLT_TripleMu_5_3_3_Mass3p8_DCA (uncached/cached calls): " << counter_uncached_HLT_TripleMu_5_3_3_Mass3p8_DCA_ << " / " << counter_cached_HLT_TripleMu_5_3_3_Mass3p8_DCA_ << std::endl;;
    std::cout << "HLT_TripleMu_5_3_3_Mass3p8_DZ (uncached/cached calls): " << counter_uncached_HLT_TripleMu_5_3_3_Mass3p8_DZ_ << " / " << counter_cached_HLT_TripleMu_5_3_3_Mass3p8_DZ_ << std::endl;;
    std::cout << "HLT_TripleMu_5_3_3_Mass3p8to60_DCA (uncached/cached calls): " << counter_uncached_HLT_TripleMu_5_3_3_Mass3p8to60_DCA_ << " / " << counter_cached_HLT_TripleMu_5_3_3_Mass3p8to60_DCA_ << std::endl;;
    std::cout << "HLT_TripleMu_5_3_3_Mass3p8to60_DZ (uncached/cached calls): " << counter_uncached_HLT_TripleMu_5_3_3_Mass3p8to60_DZ_ << " / " << counter_cached_HLT_TripleMu_5_3_3_Mass3p8to60_DZ_ << std::endl;;
    std::cout << "HLT_TriplePhoton_20_20_20_CaloIdLV2 (uncached/cached calls): " << counter_uncached_HLT_TriplePhoton_20_20_20_CaloIdLV2_ << " / " << counter_cached_HLT_TriplePhoton_20_20_20_CaloIdLV2_ << std::endl;;
    std::cout << "HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL (uncached/cached calls): " << counter_uncached_HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_ << " / " << counter_cached_HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_ << std::endl;;
    std::cout << "HLT_TriplePhoton_30_30_10_CaloIdLV2 (uncached/cached calls): " << counter_uncached_HLT_TriplePhoton_30_30_10_CaloIdLV2_ << " / " << counter_cached_HLT_TriplePhoton_30_30_10_CaloIdLV2_ << std::endl;;
    std::cout << "HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL (uncached/cached calls): " << counter_uncached_HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_ << " / " << counter_cached_HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_ << std::endl;;
    std::cout << "HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL (uncached/cached calls): " << counter_uncached_HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_ << " / " << counter_cached_HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_ << std::endl;;
    std::cout << "HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx (uncached/cached calls): " << counter_uncached_HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_ << " / " << counter_cached_HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_ << std::endl;;
    std::cout << "HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx (uncached/cached calls): " << counter_uncached_HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx_ << " / " << counter_cached_HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx_ << std::endl;;
    std::cout << "HLT_TrkMu16NoFiltersNoVtx (uncached/cached calls): " << counter_uncached_HLT_TrkMu16NoFiltersNoVtx_ << " / " << counter_cached_HLT_TrkMu16NoFiltersNoVtx_ << std::endl;;
    std::cout << "HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx (uncached/cached calls): " << counter_uncached_HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_ << " / " << counter_cached_HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_ << std::endl;;
    std::cout << "HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx (uncached/cached calls): " << counter_uncached_HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_ << " / " << counter_cached_HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_ << std::endl;;
    std::cout << "HLT_TrkMu6NoFiltersNoVtx (uncached/cached calls): " << counter_uncached_HLT_TrkMu6NoFiltersNoVtx_ << " / " << counter_cached_HLT_TrkMu6NoFiltersNoVtx_ << std::endl;;
    std::cout << "HLT_UncorrectedJetE30_NoBPTX (uncached/cached calls): " << counter_uncached_HLT_UncorrectedJetE30_NoBPTX_ << " / " << counter_cached_HLT_UncorrectedJetE30_NoBPTX_ << std::endl;;
    std::cout << "HLT_UncorrectedJetE30_NoBPTX3BX (uncached/cached calls): " << counter_uncached_HLT_UncorrectedJetE30_NoBPTX3BX_ << " / " << counter_cached_HLT_UncorrectedJetE30_NoBPTX3BX_ << std::endl;;
    std::cout << "HLT_UncorrectedJetE60_NoBPTX3BX (uncached/cached calls): " << counter_uncached_HLT_UncorrectedJetE60_NoBPTX3BX_ << " / " << counter_cached_HLT_UncorrectedJetE60_NoBPTX3BX_ << std::endl;;
    std::cout << "HLT_UncorrectedJetE70_NoBPTX3BX (uncached/cached calls): " << counter_uncached_HLT_UncorrectedJetE70_NoBPTX3BX_ << " / " << counter_cached_HLT_UncorrectedJetE70_NoBPTX3BX_ << std::endl;;
    std::cout << "HLT_VBF_DisplacedJet40_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_VBF_DisplacedJet40_DisplacedTrack_ << " / " << counter_cached_HLT_VBF_DisplacedJet40_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5 (uncached/cached calls): " << counter_uncached_HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5_ << " / " << counter_cached_HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5_ << std::endl;;
    std::cout << "HLT_VBF_DisplacedJet40_Hadronic (uncached/cached calls): " << counter_uncached_HLT_VBF_DisplacedJet40_Hadronic_ << " / " << counter_cached_HLT_VBF_DisplacedJet40_Hadronic_ << std::endl;;
    std::cout << "HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack (uncached/cached calls): " << counter_uncached_HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack_ << " / " << counter_cached_HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack_ << std::endl;;
    std::cout << "HLT_VBF_DisplacedJet40_TightID_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_VBF_DisplacedJet40_TightID_DisplacedTrack_ << " / " << counter_cached_HLT_VBF_DisplacedJet40_TightID_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_VBF_DisplacedJet40_TightID_Hadronic (uncached/cached calls): " << counter_uncached_HLT_VBF_DisplacedJet40_TightID_Hadronic_ << " / " << counter_cached_HLT_VBF_DisplacedJet40_TightID_Hadronic_ << std::endl;;
    std::cout << "HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack_ << " / " << counter_cached_HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_VBF_DisplacedJet40_VTightID_Hadronic (uncached/cached calls): " << counter_uncached_HLT_VBF_DisplacedJet40_VTightID_Hadronic_ << " / " << counter_cached_HLT_VBF_DisplacedJet40_VTightID_Hadronic_ << std::endl;;
    std::cout << "HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack (uncached/cached calls): " << counter_uncached_HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack_ << " / " << counter_cached_HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack_ << std::endl;;
    std::cout << "HLT_VBF_DisplacedJet40_VVTightID_Hadronic (uncached/cached calls): " << counter_uncached_HLT_VBF_DisplacedJet40_VVTightID_Hadronic_ << " / " << counter_cached_HLT_VBF_DisplacedJet40_VVTightID_Hadronic_ << std::endl;;
    std::cout << "HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_ << " / " << counter_cached_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_ << std::endl;;
    std::cout << "HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_ << " / " << counter_cached_HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_ << std::endl;;
    std::cout << "HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_ << " / " << counter_cached_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_ << std::endl;;
    std::cout << "HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_ << " / " << counter_cached_HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_ << std::endl;;
    std::cout << "HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_ << " / " << counter_cached_HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_ << std::endl;;
    std::cout << "HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_ << " / " << counter_cached_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_ << std::endl;;
    std::cout << "HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg (uncached/cached calls): " << counter_uncached_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg_ << " / " << counter_cached_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg_ << std::endl;;
    std::cout << "HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_ << " / " << counter_cached_HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_ << std::endl;;
    std::cout << "HLT_VLooseIsoPFTau120_Trk50_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_VLooseIsoPFTau120_Trk50_eta2p1_ << " / " << counter_cached_HLT_VLooseIsoPFTau120_Trk50_eta2p1_ << std::endl;;
    std::cout << "HLT_VLooseIsoPFTau140_Trk50_eta2p1 (uncached/cached calls): " << counter_uncached_HLT_VLooseIsoPFTau140_Trk50_eta2p1_ << " / " << counter_cached_HLT_VLooseIsoPFTau140_Trk50_eta2p1_ << std::endl;;
    std::cout << "HLT_ZeroBias (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_ << " / " << counter_cached_HLT_ZeroBias_ << std::endl;;
    std::cout << "HLT_ZeroBias_Alignment (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_Alignment_ << " / " << counter_cached_HLT_ZeroBias_Alignment_ << std::endl;;
    std::cout << "HLT_ZeroBias_Beamspot (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_Beamspot_ << " / " << counter_cached_HLT_ZeroBias_Beamspot_ << std::endl;;
    std::cout << "HLT_ZeroBias_FirstBXAfterTrain (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_FirstBXAfterTrain_ << " / " << counter_cached_HLT_ZeroBias_FirstBXAfterTrain_ << std::endl;;
    std::cout << "HLT_ZeroBias_FirstCollisionAfterAbortGap (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_FirstCollisionAfterAbortGap_ << " / " << counter_cached_HLT_ZeroBias_FirstCollisionAfterAbortGap_ << std::endl;;
    std::cout << "HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS_ << " / " << counter_cached_HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS_ << std::endl;;
    std::cout << "HLT_ZeroBias_FirstCollisionAfterAbortGap_copy (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_FirstCollisionAfterAbortGap_copy_ << " / " << counter_cached_HLT_ZeroBias_FirstCollisionAfterAbortGap_copy_ << std::endl;;
    std::cout << "HLT_ZeroBias_FirstCollisionInTrain (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_FirstCollisionInTrain_ << " / " << counter_cached_HLT_ZeroBias_FirstCollisionInTrain_ << std::endl;;
    std::cout << "HLT_ZeroBias_IsolatedBunches (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_IsolatedBunches_ << " / " << counter_cached_HLT_ZeroBias_IsolatedBunches_ << std::endl;;
    std::cout << "HLT_ZeroBias_LastCollisionInTrain (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_LastCollisionInTrain_ << " / " << counter_cached_HLT_ZeroBias_LastCollisionInTrain_ << std::endl;;
    std::cout << "HLT_ZeroBias_part0 (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_part0_ << " / " << counter_cached_HLT_ZeroBias_part0_ << std::endl;;
    std::cout << "HLT_ZeroBias_part1 (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_part1_ << " / " << counter_cached_HLT_ZeroBias_part1_ << std::endl;;
    std::cout << "HLT_ZeroBias_part2 (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_part2_ << " / " << counter_cached_HLT_ZeroBias_part2_ << std::endl;;
    std::cout << "HLT_ZeroBias_part3 (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_part3_ << " / " << counter_cached_HLT_ZeroBias_part3_ << std::endl;;
    std::cout << "HLT_ZeroBias_part4 (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_part4_ << " / " << counter_cached_HLT_ZeroBias_part4_ << std::endl;;
    std::cout << "HLT_ZeroBias_part5 (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_part5_ << " / " << counter_cached_HLT_ZeroBias_part5_ << std::endl;;
    std::cout << "HLT_ZeroBias_part6 (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_part6_ << " / " << counter_cached_HLT_ZeroBias_part6_ << std::endl;;
    std::cout << "HLT_ZeroBias_part7 (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_part7_ << " / " << counter_cached_HLT_ZeroBias_part7_ << std::endl;;
    std::cout << "HLT_ZeroBias_part8 (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_part8_ << " / " << counter_cached_HLT_ZeroBias_part8_ << std::endl;;
    std::cout << "HLT_ZeroBias_part9 (uncached/cached calls): " << counter_uncached_HLT_ZeroBias_part9_ << " / " << counter_cached_HLT_ZeroBias_part9_ << std::endl;;
    std::cout << "HLTriggerFinalPath (uncached/cached calls): " << counter_uncached_HLTriggerFinalPath_ << " / " << counter_cached_HLTriggerFinalPath_ << std::endl;;
    std::cout << "HLTriggerFirstPath (uncached/cached calls): " << counter_uncached_HLTriggerFirstPath_ << " / " << counter_cached_HLTriggerFirstPath_ << std::endl;;
    std::cout << "HTXS_Higgs_pt (uncached/cached calls): " << counter_uncached_HTXS_Higgs_pt_ << " / " << counter_cached_HTXS_Higgs_pt_ << std::endl;;
    std::cout << "HTXS_Higgs_y (uncached/cached calls): " << counter_uncached_HTXS_Higgs_y_ << " / " << counter_cached_HTXS_Higgs_y_ << std::endl;;
    std::cout << "HTXS_njets25 (uncached/cached calls): " << counter_uncached_HTXS_njets25_ << " / " << counter_cached_HTXS_njets25_ << std::endl;;
    std::cout << "HTXS_njets30 (uncached/cached calls): " << counter_uncached_HTXS_njets30_ << " / " << counter_cached_HTXS_njets30_ << std::endl;;
    std::cout << "HTXS_stage1_1_cat_pTjet25GeV (uncached/cached calls): " << counter_uncached_HTXS_stage1_1_cat_pTjet25GeV_ << " / " << counter_cached_HTXS_stage1_1_cat_pTjet25GeV_ << std::endl;;
    std::cout << "HTXS_stage1_1_cat_pTjet30GeV (uncached/cached calls): " << counter_uncached_HTXS_stage1_1_cat_pTjet30GeV_ << " / " << counter_cached_HTXS_stage1_1_cat_pTjet30GeV_ << std::endl;;
    std::cout << "HTXS_stage1_1_fine_cat_pTjet25GeV (uncached/cached calls): " << counter_uncached_HTXS_stage1_1_fine_cat_pTjet25GeV_ << " / " << counter_cached_HTXS_stage1_1_fine_cat_pTjet25GeV_ << std::endl;;
    std::cout << "HTXS_stage1_1_fine_cat_pTjet30GeV (uncached/cached calls): " << counter_uncached_HTXS_stage1_1_fine_cat_pTjet30GeV_ << " / " << counter_cached_HTXS_stage1_1_fine_cat_pTjet30GeV_ << std::endl;;
    std::cout << "HTXS_stage1_2_cat_pTjet25GeV (uncached/cached calls): " << counter_uncached_HTXS_stage1_2_cat_pTjet25GeV_ << " / " << counter_cached_HTXS_stage1_2_cat_pTjet25GeV_ << std::endl;;
    std::cout << "HTXS_stage1_2_cat_pTjet30GeV (uncached/cached calls): " << counter_uncached_HTXS_stage1_2_cat_pTjet30GeV_ << " / " << counter_cached_HTXS_stage1_2_cat_pTjet30GeV_ << std::endl;;
    std::cout << "HTXS_stage1_2_fine_cat_pTjet25GeV (uncached/cached calls): " << counter_uncached_HTXS_stage1_2_fine_cat_pTjet25GeV_ << " / " << counter_cached_HTXS_stage1_2_fine_cat_pTjet25GeV_ << std::endl;;
    std::cout << "HTXS_stage1_2_fine_cat_pTjet30GeV (uncached/cached calls): " << counter_uncached_HTXS_stage1_2_fine_cat_pTjet30GeV_ << " / " << counter_cached_HTXS_stage1_2_fine_cat_pTjet30GeV_ << std::endl;;
    std::cout << "HTXS_stage_0 (uncached/cached calls): " << counter_uncached_HTXS_stage_0_ << " / " << counter_cached_HTXS_stage_0_ << std::endl;;
    std::cout << "HTXS_stage_1_pTjet25 (uncached/cached calls): " << counter_uncached_HTXS_stage_1_pTjet25_ << " / " << counter_cached_HTXS_stage_1_pTjet25_ << std::endl;;
    std::cout << "HTXS_stage_1_pTjet30 (uncached/cached calls): " << counter_uncached_HTXS_stage_1_pTjet30_ << " / " << counter_cached_HTXS_stage_1_pTjet30_ << std::endl;;
    std::cout << "IsoTrack_charge (uncached/cached calls): " << counter_uncached_IsoTrack_charge_ << " / " << counter_cached_IsoTrack_charge_ << std::endl;;
    std::cout << "IsoTrack_dxy (uncached/cached calls): " << counter_uncached_IsoTrack_dxy_ << " / " << counter_cached_IsoTrack_dxy_ << std::endl;;
    std::cout << "IsoTrack_dz (uncached/cached calls): " << counter_uncached_IsoTrack_dz_ << " / " << counter_cached_IsoTrack_dz_ << std::endl;;
    std::cout << "IsoTrack_eta (uncached/cached calls): " << counter_uncached_IsoTrack_eta_ << " / " << counter_cached_IsoTrack_eta_ << std::endl;;
    std::cout << "IsoTrack_fromPV (uncached/cached calls): " << counter_uncached_IsoTrack_fromPV_ << " / " << counter_cached_IsoTrack_fromPV_ << std::endl;;
    std::cout << "IsoTrack_isFromLostTrack (uncached/cached calls): " << counter_uncached_IsoTrack_isFromLostTrack_ << " / " << counter_cached_IsoTrack_isFromLostTrack_ << std::endl;;
    std::cout << "IsoTrack_isHighPurityTrack (uncached/cached calls): " << counter_uncached_IsoTrack_isHighPurityTrack_ << " / " << counter_cached_IsoTrack_isHighPurityTrack_ << std::endl;;
    std::cout << "IsoTrack_isPFcand (uncached/cached calls): " << counter_uncached_IsoTrack_isPFcand_ << " / " << counter_cached_IsoTrack_isPFcand_ << std::endl;;
    std::cout << "IsoTrack_miniPFRelIso_all (uncached/cached calls): " << counter_uncached_IsoTrack_miniPFRelIso_all_ << " / " << counter_cached_IsoTrack_miniPFRelIso_all_ << std::endl;;
    std::cout << "IsoTrack_miniPFRelIso_chg (uncached/cached calls): " << counter_uncached_IsoTrack_miniPFRelIso_chg_ << " / " << counter_cached_IsoTrack_miniPFRelIso_chg_ << std::endl;;
    std::cout << "IsoTrack_pdgId (uncached/cached calls): " << counter_uncached_IsoTrack_pdgId_ << " / " << counter_cached_IsoTrack_pdgId_ << std::endl;;
    std::cout << "IsoTrack_pfRelIso03_all (uncached/cached calls): " << counter_uncached_IsoTrack_pfRelIso03_all_ << " / " << counter_cached_IsoTrack_pfRelIso03_all_ << std::endl;;
    std::cout << "IsoTrack_pfRelIso03_chg (uncached/cached calls): " << counter_uncached_IsoTrack_pfRelIso03_chg_ << " / " << counter_cached_IsoTrack_pfRelIso03_chg_ << std::endl;;
    std::cout << "IsoTrack_phi (uncached/cached calls): " << counter_uncached_IsoTrack_phi_ << " / " << counter_cached_IsoTrack_phi_ << std::endl;;
    std::cout << "IsoTrack_pt (uncached/cached calls): " << counter_uncached_IsoTrack_pt_ << " / " << counter_cached_IsoTrack_pt_ << std::endl;;
    std::cout << "Jet_area (uncached/cached calls): " << counter_uncached_Jet_area_ << " / " << counter_cached_Jet_area_ << std::endl;;
    std::cout << "Jet_bReg (uncached/cached calls): " << counter_uncached_Jet_bReg_ << " / " << counter_cached_Jet_bReg_ << std::endl;;
    std::cout << "Jet_bRegCorr (uncached/cached calls): " << counter_uncached_Jet_bRegCorr_ << " / " << counter_cached_Jet_bRegCorr_ << std::endl;;
    std::cout << "Jet_bRegRes (uncached/cached calls): " << counter_uncached_Jet_bRegRes_ << " / " << counter_cached_Jet_bRegRes_ << std::endl;;
    std::cout << "Jet_btagCMVA (uncached/cached calls): " << counter_uncached_Jet_btagCMVA_ << " / " << counter_cached_Jet_btagCMVA_ << std::endl;;
    std::cout << "Jet_btagCSVV2 (uncached/cached calls): " << counter_uncached_Jet_btagCSVV2_ << " / " << counter_cached_Jet_btagCSVV2_ << std::endl;;
    std::cout << "Jet_btagDeepB (uncached/cached calls): " << counter_uncached_Jet_btagDeepB_ << " / " << counter_cached_Jet_btagDeepB_ << std::endl;;
    std::cout << "Jet_btagDeepC (uncached/cached calls): " << counter_uncached_Jet_btagDeepC_ << " / " << counter_cached_Jet_btagDeepC_ << std::endl;;
    std::cout << "Jet_btagDeepCvB (uncached/cached calls): " << counter_uncached_Jet_btagDeepCvB_ << " / " << counter_cached_Jet_btagDeepCvB_ << std::endl;;
    std::cout << "Jet_btagDeepCvL (uncached/cached calls): " << counter_uncached_Jet_btagDeepCvL_ << " / " << counter_cached_Jet_btagDeepCvL_ << std::endl;;
    std::cout << "Jet_btagDeepFlavB (uncached/cached calls): " << counter_uncached_Jet_btagDeepFlavB_ << " / " << counter_cached_Jet_btagDeepFlavB_ << std::endl;;
    std::cout << "Jet_btagDeepFlavC (uncached/cached calls): " << counter_uncached_Jet_btagDeepFlavC_ << " / " << counter_cached_Jet_btagDeepFlavC_ << std::endl;;
    std::cout << "Jet_btagDeepFlavCvB (uncached/cached calls): " << counter_uncached_Jet_btagDeepFlavCvB_ << " / " << counter_cached_Jet_btagDeepFlavCvB_ << std::endl;;
    std::cout << "Jet_btagDeepFlavCvL (uncached/cached calls): " << counter_uncached_Jet_btagDeepFlavCvL_ << " / " << counter_cached_Jet_btagDeepFlavCvL_ << std::endl;;
    std::cout << "Jet_btagDeepFlavQG (uncached/cached calls): " << counter_uncached_Jet_btagDeepFlavQG_ << " / " << counter_cached_Jet_btagDeepFlavQG_ << std::endl;;
    std::cout << "Jet_cRegCorr (uncached/cached calls): " << counter_uncached_Jet_cRegCorr_ << " / " << counter_cached_Jet_cRegCorr_ << std::endl;;
    std::cout << "Jet_cRegRes (uncached/cached calls): " << counter_uncached_Jet_cRegRes_ << " / " << counter_cached_Jet_cRegRes_ << std::endl;;
    std::cout << "Jet_chEmEF (uncached/cached calls): " << counter_uncached_Jet_chEmEF_ << " / " << counter_cached_Jet_chEmEF_ << std::endl;;
    std::cout << "Jet_chFPV0EF (uncached/cached calls): " << counter_uncached_Jet_chFPV0EF_ << " / " << counter_cached_Jet_chFPV0EF_ << std::endl;;
    std::cout << "Jet_chFPV1EF (uncached/cached calls): " << counter_uncached_Jet_chFPV1EF_ << " / " << counter_cached_Jet_chFPV1EF_ << std::endl;;
    std::cout << "Jet_chFPV2EF (uncached/cached calls): " << counter_uncached_Jet_chFPV2EF_ << " / " << counter_cached_Jet_chFPV2EF_ << std::endl;;
    std::cout << "Jet_chFPV3EF (uncached/cached calls): " << counter_uncached_Jet_chFPV3EF_ << " / " << counter_cached_Jet_chFPV3EF_ << std::endl;;
    std::cout << "Jet_chHEF (uncached/cached calls): " << counter_uncached_Jet_chHEF_ << " / " << counter_cached_Jet_chHEF_ << std::endl;;
    std::cout << "Jet_cleanmask (uncached/cached calls): " << counter_uncached_Jet_cleanmask_ << " / " << counter_cached_Jet_cleanmask_ << std::endl;;
    std::cout << "Jet_corr_JEC (uncached/cached calls): " << counter_uncached_Jet_corr_JEC_ << " / " << counter_cached_Jet_corr_JEC_ << std::endl;;
    std::cout << "Jet_corr_JER (uncached/cached calls): " << counter_uncached_Jet_corr_JER_ << " / " << counter_cached_Jet_corr_JER_ << std::endl;;
    std::cout << "Jet_electronIdx1 (uncached/cached calls): " << counter_uncached_Jet_electronIdx1_ << " / " << counter_cached_Jet_electronIdx1_ << std::endl;;
    std::cout << "Jet_electronIdx2 (uncached/cached calls): " << counter_uncached_Jet_electronIdx2_ << " / " << counter_cached_Jet_electronIdx2_ << std::endl;;
    std::cout << "Jet_eta (uncached/cached calls): " << counter_uncached_Jet_eta_ << " / " << counter_cached_Jet_eta_ << std::endl;;
    std::cout << "Jet_genJetIdx (uncached/cached calls): " << counter_uncached_Jet_genJetIdx_ << " / " << counter_cached_Jet_genJetIdx_ << std::endl;;
    std::cout << "Jet_hadronFlavour (uncached/cached calls): " << counter_uncached_Jet_hadronFlavour_ << " / " << counter_cached_Jet_hadronFlavour_ << std::endl;;
    std::cout << "Jet_hfadjacentEtaStripsSize (uncached/cached calls): " << counter_uncached_Jet_hfadjacentEtaStripsSize_ << " / " << counter_cached_Jet_hfadjacentEtaStripsSize_ << std::endl;;
    std::cout << "Jet_hfcentralEtaStripSize (uncached/cached calls): " << counter_uncached_Jet_hfcentralEtaStripSize_ << " / " << counter_cached_Jet_hfcentralEtaStripSize_ << std::endl;;
    std::cout << "Jet_hfsigmaEtaEta (uncached/cached calls): " << counter_uncached_Jet_hfsigmaEtaEta_ << " / " << counter_cached_Jet_hfsigmaEtaEta_ << std::endl;;
    std::cout << "Jet_hfsigmaPhiPhi (uncached/cached calls): " << counter_uncached_Jet_hfsigmaPhiPhi_ << " / " << counter_cached_Jet_hfsigmaPhiPhi_ << std::endl;;
    std::cout << "Jet_jetId (uncached/cached calls): " << counter_uncached_Jet_jetId_ << " / " << counter_cached_Jet_jetId_ << std::endl;;
    std::cout << "Jet_mass (uncached/cached calls): " << counter_uncached_Jet_mass_ << " / " << counter_cached_Jet_mass_ << std::endl;;
    std::cout << "Jet_mass_jerDown (uncached/cached calls): " << counter_uncached_Jet_mass_jerDown_ << " / " << counter_cached_Jet_mass_jerDown_ << std::endl;;
    std::cout << "Jet_mass_jerUp (uncached/cached calls): " << counter_uncached_Jet_mass_jerUp_ << " / " << counter_cached_Jet_mass_jerUp_ << std::endl;;
    std::cout << "Jet_mass_jesHEMIssueDown (uncached/cached calls): " << counter_uncached_Jet_mass_jesHEMIssueDown_ << " / " << counter_cached_Jet_mass_jesHEMIssueDown_ << std::endl;;
    std::cout << "Jet_mass_jesHEMIssueUp (uncached/cached calls): " << counter_uncached_Jet_mass_jesHEMIssueUp_ << " / " << counter_cached_Jet_mass_jesHEMIssueUp_ << std::endl;;
    std::cout << "Jet_mass_jesTotalDown (uncached/cached calls): " << counter_uncached_Jet_mass_jesTotalDown_ << " / " << counter_cached_Jet_mass_jesTotalDown_ << std::endl;;
    std::cout << "Jet_mass_jesTotalUp (uncached/cached calls): " << counter_uncached_Jet_mass_jesTotalUp_ << " / " << counter_cached_Jet_mass_jesTotalUp_ << std::endl;;
    std::cout << "Jet_mass_nom (uncached/cached calls): " << counter_uncached_Jet_mass_nom_ << " / " << counter_cached_Jet_mass_nom_ << std::endl;;
    std::cout << "Jet_mass_raw (uncached/cached calls): " << counter_uncached_Jet_mass_raw_ << " / " << counter_cached_Jet_mass_raw_ << std::endl;;
    std::cout << "Jet_muEF (uncached/cached calls): " << counter_uncached_Jet_muEF_ << " / " << counter_cached_Jet_muEF_ << std::endl;;
    std::cout << "Jet_muonIdx1 (uncached/cached calls): " << counter_uncached_Jet_muonIdx1_ << " / " << counter_cached_Jet_muonIdx1_ << std::endl;;
    std::cout << "Jet_muonIdx2 (uncached/cached calls): " << counter_uncached_Jet_muonIdx2_ << " / " << counter_cached_Jet_muonIdx2_ << std::endl;;
    std::cout << "Jet_muonSubtrFactor (uncached/cached calls): " << counter_uncached_Jet_muonSubtrFactor_ << " / " << counter_cached_Jet_muonSubtrFactor_ << std::endl;;
    std::cout << "Jet_nConstituents (uncached/cached calls): " << counter_uncached_Jet_nConstituents_ << " / " << counter_cached_Jet_nConstituents_ << std::endl;;
    std::cout << "Jet_nElectrons (uncached/cached calls): " << counter_uncached_Jet_nElectrons_ << " / " << counter_cached_Jet_nElectrons_ << std::endl;;
    std::cout << "Jet_nMuons (uncached/cached calls): " << counter_uncached_Jet_nMuons_ << " / " << counter_cached_Jet_nMuons_ << std::endl;;
    std::cout << "Jet_nSVs (uncached/cached calls): " << counter_uncached_Jet_nSVs_ << " / " << counter_cached_Jet_nSVs_ << std::endl;;
    std::cout << "Jet_neEmEF (uncached/cached calls): " << counter_uncached_Jet_neEmEF_ << " / " << counter_cached_Jet_neEmEF_ << std::endl;;
    std::cout << "Jet_neHEF (uncached/cached calls): " << counter_uncached_Jet_neHEF_ << " / " << counter_cached_Jet_neHEF_ << std::endl;;
    std::cout << "Jet_p4 (uncached/cached calls): " << counter_uncached_Jet_p4_ << " / " << counter_cached_Jet_p4_ << std::endl;;
    std::cout << "Jet_partonFlavour (uncached/cached calls): " << counter_uncached_Jet_partonFlavour_ << " / " << counter_cached_Jet_partonFlavour_ << std::endl;;
    std::cout << "Jet_phi (uncached/cached calls): " << counter_uncached_Jet_phi_ << " / " << counter_cached_Jet_phi_ << std::endl;;
    std::cout << "Jet_pt (uncached/cached calls): " << counter_uncached_Jet_pt_ << " / " << counter_cached_Jet_pt_ << std::endl;;
    std::cout << "Jet_pt_jerDown (uncached/cached calls): " << counter_uncached_Jet_pt_jerDown_ << " / " << counter_cached_Jet_pt_jerDown_ << std::endl;;
    std::cout << "Jet_pt_jerUp (uncached/cached calls): " << counter_uncached_Jet_pt_jerUp_ << " / " << counter_cached_Jet_pt_jerUp_ << std::endl;;
    std::cout << "Jet_pt_jesHEMIssueDown (uncached/cached calls): " << counter_uncached_Jet_pt_jesHEMIssueDown_ << " / " << counter_cached_Jet_pt_jesHEMIssueDown_ << std::endl;;
    std::cout << "Jet_pt_jesHEMIssueUp (uncached/cached calls): " << counter_uncached_Jet_pt_jesHEMIssueUp_ << " / " << counter_cached_Jet_pt_jesHEMIssueUp_ << std::endl;;
    std::cout << "Jet_pt_jesTotalDown (uncached/cached calls): " << counter_uncached_Jet_pt_jesTotalDown_ << " / " << counter_cached_Jet_pt_jesTotalDown_ << std::endl;;
    std::cout << "Jet_pt_jesTotalUp (uncached/cached calls): " << counter_uncached_Jet_pt_jesTotalUp_ << " / " << counter_cached_Jet_pt_jesTotalUp_ << std::endl;;
    std::cout << "Jet_pt_nom (uncached/cached calls): " << counter_uncached_Jet_pt_nom_ << " / " << counter_cached_Jet_pt_nom_ << std::endl;;
    std::cout << "Jet_pt_raw (uncached/cached calls): " << counter_uncached_Jet_pt_raw_ << " / " << counter_cached_Jet_pt_raw_ << std::endl;;
    std::cout << "Jet_puId (uncached/cached calls): " << counter_uncached_Jet_puId_ << " / " << counter_cached_Jet_puId_ << std::endl;;
    std::cout << "Jet_puIdDisc (uncached/cached calls): " << counter_uncached_Jet_puIdDisc_ << " / " << counter_cached_Jet_puIdDisc_ << std::endl;;
    std::cout << "Jet_qgl (uncached/cached calls): " << counter_uncached_Jet_qgl_ << " / " << counter_cached_Jet_qgl_ << std::endl;;
    std::cout << "Jet_rawFactor (uncached/cached calls): " << counter_uncached_Jet_rawFactor_ << " / " << counter_cached_Jet_rawFactor_ << std::endl;;
    std::cout << "Jet_svIdx1 (uncached/cached calls): " << counter_uncached_Jet_svIdx1_ << " / " << counter_cached_Jet_svIdx1_ << std::endl;;
    std::cout << "Jet_svIdx2 (uncached/cached calls): " << counter_uncached_Jet_svIdx2_ << " / " << counter_cached_Jet_svIdx2_ << std::endl;;
    std::cout << "L1PreFiringWeight_Dn (uncached/cached calls): " << counter_uncached_L1PreFiringWeight_Dn_ << " / " << counter_cached_L1PreFiringWeight_Dn_ << std::endl;;
    std::cout << "L1PreFiringWeight_ECAL_Dn (uncached/cached calls): " << counter_uncached_L1PreFiringWeight_ECAL_Dn_ << " / " << counter_cached_L1PreFiringWeight_ECAL_Dn_ << std::endl;;
    std::cout << "L1PreFiringWeight_ECAL_Nom (uncached/cached calls): " << counter_uncached_L1PreFiringWeight_ECAL_Nom_ << " / " << counter_cached_L1PreFiringWeight_ECAL_Nom_ << std::endl;;
    std::cout << "L1PreFiringWeight_ECAL_Up (uncached/cached calls): " << counter_uncached_L1PreFiringWeight_ECAL_Up_ << " / " << counter_cached_L1PreFiringWeight_ECAL_Up_ << std::endl;;
    std::cout << "L1PreFiringWeight_Muon_Nom (uncached/cached calls): " << counter_uncached_L1PreFiringWeight_Muon_Nom_ << " / " << counter_cached_L1PreFiringWeight_Muon_Nom_ << std::endl;;
    std::cout << "L1PreFiringWeight_Muon_StatDn (uncached/cached calls): " << counter_uncached_L1PreFiringWeight_Muon_StatDn_ << " / " << counter_cached_L1PreFiringWeight_Muon_StatDn_ << std::endl;;
    std::cout << "L1PreFiringWeight_Muon_StatUp (uncached/cached calls): " << counter_uncached_L1PreFiringWeight_Muon_StatUp_ << " / " << counter_cached_L1PreFiringWeight_Muon_StatUp_ << std::endl;;
    std::cout << "L1PreFiringWeight_Muon_SystDn (uncached/cached calls): " << counter_uncached_L1PreFiringWeight_Muon_SystDn_ << " / " << counter_cached_L1PreFiringWeight_Muon_SystDn_ << std::endl;;
    std::cout << "L1PreFiringWeight_Muon_SystUp (uncached/cached calls): " << counter_uncached_L1PreFiringWeight_Muon_SystUp_ << " / " << counter_cached_L1PreFiringWeight_Muon_SystUp_ << std::endl;;
    std::cout << "L1PreFiringWeight_Nom (uncached/cached calls): " << counter_uncached_L1PreFiringWeight_Nom_ << " / " << counter_cached_L1PreFiringWeight_Nom_ << std::endl;;
    std::cout << "L1PreFiringWeight_Up (uncached/cached calls): " << counter_uncached_L1PreFiringWeight_Up_ << " / " << counter_cached_L1PreFiringWeight_Up_ << std::endl;;
    std::cout << "L1Reco_step (uncached/cached calls): " << counter_uncached_L1Reco_step_ << " / " << counter_cached_L1Reco_step_ << std::endl;;
    std::cout << "L1_AlwaysTrue (uncached/cached calls): " << counter_uncached_L1_AlwaysTrue_ << " / " << counter_cached_L1_AlwaysTrue_ << std::endl;;
    std::cout << "L1_BPTX_AND_NIM (uncached/cached calls): " << counter_uncached_L1_BPTX_AND_NIM_ << " / " << counter_cached_L1_BPTX_AND_NIM_ << std::endl;;
    std::cout << "L1_BPTX_AND_Ref1_VME (uncached/cached calls): " << counter_uncached_L1_BPTX_AND_Ref1_VME_ << " / " << counter_cached_L1_BPTX_AND_Ref1_VME_ << std::endl;;
    std::cout << "L1_BPTX_AND_Ref2_NIM (uncached/cached calls): " << counter_uncached_L1_BPTX_AND_Ref2_NIM_ << " / " << counter_cached_L1_BPTX_AND_Ref2_NIM_ << std::endl;;
    std::cout << "L1_BPTX_AND_Ref3_VME (uncached/cached calls): " << counter_uncached_L1_BPTX_AND_Ref3_VME_ << " / " << counter_cached_L1_BPTX_AND_Ref3_VME_ << std::endl;;
    std::cout << "L1_BPTX_AND_Ref4_VME (uncached/cached calls): " << counter_uncached_L1_BPTX_AND_Ref4_VME_ << " / " << counter_cached_L1_BPTX_AND_Ref4_VME_ << std::endl;;
    std::cout << "L1_BPTX_B1NotB2_NIM (uncached/cached calls): " << counter_uncached_L1_BPTX_B1NotB2_NIM_ << " / " << counter_cached_L1_BPTX_B1NotB2_NIM_ << std::endl;;
    std::cout << "L1_BPTX_B1NotB2_VME (uncached/cached calls): " << counter_uncached_L1_BPTX_B1NotB2_VME_ << " / " << counter_cached_L1_BPTX_B1NotB2_VME_ << std::endl;;
    std::cout << "L1_BPTX_B1_NIM (uncached/cached calls): " << counter_uncached_L1_BPTX_B1_NIM_ << " / " << counter_cached_L1_BPTX_B1_NIM_ << std::endl;;
    std::cout << "L1_BPTX_B2NotB1_NIM (uncached/cached calls): " << counter_uncached_L1_BPTX_B2NotB1_NIM_ << " / " << counter_cached_L1_BPTX_B2NotB1_NIM_ << std::endl;;
    std::cout << "L1_BPTX_B2NotB1_VME (uncached/cached calls): " << counter_uncached_L1_BPTX_B2NotB1_VME_ << " / " << counter_cached_L1_BPTX_B2NotB1_VME_ << std::endl;;
    std::cout << "L1_BPTX_B2_NIM (uncached/cached calls): " << counter_uncached_L1_BPTX_B2_NIM_ << " / " << counter_cached_L1_BPTX_B2_NIM_ << std::endl;;
    std::cout << "L1_BPTX_BeamGas_B1_VME (uncached/cached calls): " << counter_uncached_L1_BPTX_BeamGas_B1_VME_ << " / " << counter_cached_L1_BPTX_BeamGas_B1_VME_ << std::endl;;
    std::cout << "L1_BPTX_BeamGas_B2_VME (uncached/cached calls): " << counter_uncached_L1_BPTX_BeamGas_B2_VME_ << " / " << counter_cached_L1_BPTX_BeamGas_B2_VME_ << std::endl;;
    std::cout << "L1_BPTX_BeamGas_Ref1_VME (uncached/cached calls): " << counter_uncached_L1_BPTX_BeamGas_Ref1_VME_ << " / " << counter_cached_L1_BPTX_BeamGas_Ref1_VME_ << std::endl;;
    std::cout << "L1_BPTX_BeamGas_Ref2_VME (uncached/cached calls): " << counter_uncached_L1_BPTX_BeamGas_Ref2_VME_ << " / " << counter_cached_L1_BPTX_BeamGas_Ref2_VME_ << std::endl;;
    std::cout << "L1_BPTX_LUT1_AND (uncached/cached calls): " << counter_uncached_L1_BPTX_LUT1_AND_ << " / " << counter_cached_L1_BPTX_LUT1_AND_ << std::endl;;
    std::cout << "L1_BPTX_LUT1_B1 (uncached/cached calls): " << counter_uncached_L1_BPTX_LUT1_B1_ << " / " << counter_cached_L1_BPTX_LUT1_B1_ << std::endl;;
    std::cout << "L1_BPTX_LUT1_B2 (uncached/cached calls): " << counter_uncached_L1_BPTX_LUT1_B2_ << " / " << counter_cached_L1_BPTX_LUT1_B2_ << std::endl;;
    std::cout << "L1_BPTX_LUT1_OR (uncached/cached calls): " << counter_uncached_L1_BPTX_LUT1_OR_ << " / " << counter_cached_L1_BPTX_LUT1_OR_ << std::endl;;
    std::cout << "L1_BPTX_LUT2_AND (uncached/cached calls): " << counter_uncached_L1_BPTX_LUT2_AND_ << " / " << counter_cached_L1_BPTX_LUT2_AND_ << std::endl;;
    std::cout << "L1_BPTX_LUT2_B1NotB2 (uncached/cached calls): " << counter_uncached_L1_BPTX_LUT2_B1NotB2_ << " / " << counter_cached_L1_BPTX_LUT2_B1NotB2_ << std::endl;;
    std::cout << "L1_BPTX_LUT2_B2NotB1 (uncached/cached calls): " << counter_uncached_L1_BPTX_LUT2_B2NotB1_ << " / " << counter_cached_L1_BPTX_LUT2_B2NotB1_ << std::endl;;
    std::cout << "L1_BPTX_LUT2_NotOR (uncached/cached calls): " << counter_uncached_L1_BPTX_LUT2_NotOR_ << " / " << counter_cached_L1_BPTX_LUT2_NotOR_ << std::endl;;
    std::cout << "L1_BPTX_NotOR_NIM (uncached/cached calls): " << counter_uncached_L1_BPTX_NotOR_NIM_ << " / " << counter_cached_L1_BPTX_NotOR_NIM_ << std::endl;;
    std::cout << "L1_BPTX_NotOR_VME (uncached/cached calls): " << counter_uncached_L1_BPTX_NotOR_VME_ << " / " << counter_cached_L1_BPTX_NotOR_VME_ << std::endl;;
    std::cout << "L1_BPTX_OR_NIM (uncached/cached calls): " << counter_uncached_L1_BPTX_OR_NIM_ << " / " << counter_cached_L1_BPTX_OR_NIM_ << std::endl;;
    std::cout << "L1_BPTX_OR_Ref3_VME (uncached/cached calls): " << counter_uncached_L1_BPTX_OR_Ref3_VME_ << " / " << counter_cached_L1_BPTX_OR_Ref3_VME_ << std::endl;;
    std::cout << "L1_BPTX_OR_Ref4_VME (uncached/cached calls): " << counter_uncached_L1_BPTX_OR_Ref4_VME_ << " / " << counter_cached_L1_BPTX_OR_Ref4_VME_ << std::endl;;
    std::cout << "L1_BPTX_RefAND_VME (uncached/cached calls): " << counter_uncached_L1_BPTX_RefAND_VME_ << " / " << counter_cached_L1_BPTX_RefAND_VME_ << std::endl;;
    std::cout << "L1_BPTX_TRIG2_AND (uncached/cached calls): " << counter_uncached_L1_BPTX_TRIG2_AND_ << " / " << counter_cached_L1_BPTX_TRIG2_AND_ << std::endl;;
    std::cout << "L1_BPTX_TRIG2_B1NotB2 (uncached/cached calls): " << counter_uncached_L1_BPTX_TRIG2_B1NotB2_ << " / " << counter_cached_L1_BPTX_TRIG2_B1NotB2_ << std::endl;;
    std::cout << "L1_BPTX_TRIG2_B2NotB1 (uncached/cached calls): " << counter_uncached_L1_BPTX_TRIG2_B2NotB1_ << " / " << counter_cached_L1_BPTX_TRIG2_B2NotB1_ << std::endl;;
    std::cout << "L1_BPTX_TRIG2_NotOR (uncached/cached calls): " << counter_uncached_L1_BPTX_TRIG2_NotOR_ << " / " << counter_cached_L1_BPTX_TRIG2_NotOR_ << std::endl;;
    std::cout << "L1_BRIL_TRIG0_AND (uncached/cached calls): " << counter_uncached_L1_BRIL_TRIG0_AND_ << " / " << counter_cached_L1_BRIL_TRIG0_AND_ << std::endl;;
    std::cout << "L1_BRIL_TRIG0_FstBunchInTrain (uncached/cached calls): " << counter_uncached_L1_BRIL_TRIG0_FstBunchInTrain_ << " / " << counter_cached_L1_BRIL_TRIG0_FstBunchInTrain_ << std::endl;;
    std::cout << "L1_BRIL_TRIG0_OR (uncached/cached calls): " << counter_uncached_L1_BRIL_TRIG0_OR_ << " / " << counter_cached_L1_BRIL_TRIG0_OR_ << std::endl;;
    std::cout << "L1_BRIL_TRIG0_delayedAND (uncached/cached calls): " << counter_uncached_L1_BRIL_TRIG0_delayedAND_ << " / " << counter_cached_L1_BRIL_TRIG0_delayedAND_ << std::endl;;
    std::cout << "L1_BRIL_TRIG3_AND (uncached/cached calls): " << counter_uncached_L1_BRIL_TRIG3_AND_ << " / " << counter_cached_L1_BRIL_TRIG3_AND_ << std::endl;;
    std::cout << "L1_BRIL_TRIG3_delayedAND (uncached/cached calls): " << counter_uncached_L1_BRIL_TRIG3_delayedAND_ << " / " << counter_cached_L1_BRIL_TRIG3_delayedAND_ << std::endl;;
    std::cout << "L1_BRIL_TRIG3_ref (uncached/cached calls): " << counter_uncached_L1_BRIL_TRIG3_ref_ << " / " << counter_cached_L1_BRIL_TRIG3_ref_ << std::endl;;
    std::cout << "L1_BeamGasB1 (uncached/cached calls): " << counter_uncached_L1_BeamGasB1_ << " / " << counter_cached_L1_BeamGasB1_ << std::endl;;
    std::cout << "L1_BeamGasB2 (uncached/cached calls): " << counter_uncached_L1_BeamGasB2_ << " / " << counter_cached_L1_BeamGasB2_ << std::endl;;
    std::cout << "L1_BeamGasMinus (uncached/cached calls): " << counter_uncached_L1_BeamGasMinus_ << " / " << counter_cached_L1_BeamGasMinus_ << std::endl;;
    std::cout << "L1_BeamGasPlus (uncached/cached calls): " << counter_uncached_L1_BeamGasPlus_ << " / " << counter_cached_L1_BeamGasPlus_ << std::endl;;
    std::cout << "L1_BptxMinus (uncached/cached calls): " << counter_uncached_L1_BptxMinus_ << " / " << counter_cached_L1_BptxMinus_ << std::endl;;
    std::cout << "L1_BptxOR (uncached/cached calls): " << counter_uncached_L1_BptxOR_ << " / " << counter_cached_L1_BptxOR_ << std::endl;;
    std::cout << "L1_BptxPlus (uncached/cached calls): " << counter_uncached_L1_BptxPlus_ << " / " << counter_cached_L1_BptxPlus_ << std::endl;;
    std::cout << "L1_BptxXOR (uncached/cached calls): " << counter_uncached_L1_BptxXOR_ << " / " << counter_cached_L1_BptxXOR_ << std::endl;;
    std::cout << "L1_CDC_3_TOP120_DPHI1p570_3p142 (uncached/cached calls): " << counter_uncached_L1_CDC_3_TOP120_DPHI1p570_3p142_ << " / " << counter_cached_L1_CDC_3_TOP120_DPHI1p570_3p142_ << std::endl;;
    std::cout << "L1_CDC_3_TOP120_DPHI2p094_3p142 (uncached/cached calls): " << counter_uncached_L1_CDC_3_TOP120_DPHI2p094_3p142_ << " / " << counter_cached_L1_CDC_3_TOP120_DPHI2p094_3p142_ << std::endl;;
    std::cout << "L1_CDC_3_TOP120_DPHI2p618_3p142 (uncached/cached calls): " << counter_uncached_L1_CDC_3_TOP120_DPHI2p618_3p142_ << " / " << counter_cached_L1_CDC_3_TOP120_DPHI2p618_3p142_ << std::endl;;
    std::cout << "L1_CDC_3_TOP_DPHI2p618_3p142 (uncached/cached calls): " << counter_uncached_L1_CDC_3_TOP_DPHI2p618_3p142_ << " / " << counter_cached_L1_CDC_3_TOP_DPHI2p618_3p142_ << std::endl;;
    std::cout << "L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142 (uncached/cached calls): " << counter_uncached_L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142_ << " / " << counter_cached_L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142_ << std::endl;;
    std::cout << "L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142 (uncached/cached calls): " << counter_uncached_L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142_ << " / " << counter_cached_L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142_ << std::endl;;
    std::cout << "L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142 (uncached/cached calls): " << counter_uncached_L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142_ << " / " << counter_cached_L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142_ << std::endl;;
    std::cout << "L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142 (uncached/cached calls): " << counter_uncached_L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142_ << " / " << counter_cached_L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142_ << std::endl;;
    std::cout << "L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142 (uncached/cached calls): " << counter_uncached_L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142_ << " / " << counter_cached_L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142_ << std::endl;;
    std::cout << "L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142 (uncached/cached calls): " << counter_uncached_L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142_ << " / " << counter_cached_L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142_ << std::endl;;
    std::cout << "L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142 (uncached/cached calls): " << counter_uncached_L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142_ << " / " << counter_cached_L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142_ << std::endl;;
    std::cout << "L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142 (uncached/cached calls): " << counter_uncached_L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142_ << " / " << counter_cached_L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142_ << std::endl;;
    std::cout << "L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142 (uncached/cached calls): " << counter_uncached_L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142_ << " / " << counter_cached_L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142_ << std::endl;;
    std::cout << "L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142 (uncached/cached calls): " << counter_uncached_L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142_ << " / " << counter_cached_L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142_ << std::endl;;
    std::cout << "L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142 (uncached/cached calls): " << counter_uncached_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_ << " / " << counter_cached_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_ << std::endl;;
    std::cout << "L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142 (uncached/cached calls): " << counter_uncached_L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142_ << " / " << counter_cached_L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142_ << std::endl;;
    std::cout << "L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142 (uncached/cached calls): " << counter_uncached_L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142_ << " / " << counter_cached_L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142_ << std::endl;;
    std::cout << "L1_CDCp1_3_TOP120_DPHI2p618_3p142 (uncached/cached calls): " << counter_uncached_L1_CDCp1_3_TOP120_DPHI2p618_3p142_ << " / " << counter_cached_L1_CDCp1_3_TOP120_DPHI2p618_3p142_ << std::endl;;
    std::cout << "L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142 (uncached/cached calls): " << counter_uncached_L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142_ << " / " << counter_cached_L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142_ << std::endl;;
    std::cout << "L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142 (uncached/cached calls): " << counter_uncached_L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142_ << " / " << counter_cached_L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142_ << std::endl;;
    std::cout << "L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142 (uncached/cached calls): " << counter_uncached_L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142_ << " / " << counter_cached_L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142_ << std::endl;;
    std::cout << "L1_CastorGap_BptxAND (uncached/cached calls): " << counter_uncached_L1_CastorGap_BptxAND_ << " / " << counter_cached_L1_CastorGap_BptxAND_ << std::endl;;
    std::cout << "L1_CastorHaloMuon (uncached/cached calls): " << counter_uncached_L1_CastorHaloMuon_ << " / " << counter_cached_L1_CastorHaloMuon_ << std::endl;;
    std::cout << "L1_CastorHaloMuon_BptxAND (uncached/cached calls): " << counter_uncached_L1_CastorHaloMuon_BptxAND_ << " / " << counter_cached_L1_CastorHaloMuon_BptxAND_ << std::endl;;
    std::cout << "L1_CastorHighJet_BptxAND (uncached/cached calls): " << counter_uncached_L1_CastorHighJet_BptxAND_ << " / " << counter_cached_L1_CastorHighJet_BptxAND_ << std::endl;;
    std::cout << "L1_CastorMediumJet_BptxAND (uncached/cached calls): " << counter_uncached_L1_CastorMediumJet_BptxAND_ << " / " << counter_cached_L1_CastorMediumJet_BptxAND_ << std::endl;;
    std::cout << "L1_DoubleEG10_er1p2_dR_Max0p6 (uncached/cached calls): " << counter_uncached_L1_DoubleEG10_er1p2_dR_Max0p6_ << " / " << counter_cached_L1_DoubleEG10_er1p2_dR_Max0p6_ << std::endl;;
    std::cout << "L1_DoubleEG10p5_er1p2_dR_Max0p6 (uncached/cached calls): " << counter_uncached_L1_DoubleEG10p5_er1p2_dR_Max0p6_ << " / " << counter_cached_L1_DoubleEG10p5_er1p2_dR_Max0p6_ << std::endl;;
    std::cout << "L1_DoubleEG11_er1p2_dR_Max0p6 (uncached/cached calls): " << counter_uncached_L1_DoubleEG11_er1p2_dR_Max0p6_ << " / " << counter_cached_L1_DoubleEG11_er1p2_dR_Max0p6_ << std::endl;;
    std::cout << "L1_DoubleEG4_er1p2_dR_Max0p9 (uncached/cached calls): " << counter_uncached_L1_DoubleEG4_er1p2_dR_Max0p9_ << " / " << counter_cached_L1_DoubleEG4_er1p2_dR_Max0p9_ << std::endl;;
    std::cout << "L1_DoubleEG4p5_er1p2_dR_Max0p9 (uncached/cached calls): " << counter_uncached_L1_DoubleEG4p5_er1p2_dR_Max0p9_ << " / " << counter_cached_L1_DoubleEG4p5_er1p2_dR_Max0p9_ << std::endl;;
    std::cout << "L1_DoubleEG5_er1p2_dR_Max0p9 (uncached/cached calls): " << counter_uncached_L1_DoubleEG5_er1p2_dR_Max0p9_ << " / " << counter_cached_L1_DoubleEG5_er1p2_dR_Max0p9_ << std::endl;;
    std::cout << "L1_DoubleEG5p5_er1p2_dR_Max0p8 (uncached/cached calls): " << counter_uncached_L1_DoubleEG5p5_er1p2_dR_Max0p8_ << " / " << counter_cached_L1_DoubleEG5p5_er1p2_dR_Max0p8_ << std::endl;;
    std::cout << "L1_DoubleEG6_HTT240er (uncached/cached calls): " << counter_uncached_L1_DoubleEG6_HTT240er_ << " / " << counter_cached_L1_DoubleEG6_HTT240er_ << std::endl;;
    std::cout << "L1_DoubleEG6_HTT250er (uncached/cached calls): " << counter_uncached_L1_DoubleEG6_HTT250er_ << " / " << counter_cached_L1_DoubleEG6_HTT250er_ << std::endl;;
    std::cout << "L1_DoubleEG6_HTT255 (uncached/cached calls): " << counter_uncached_L1_DoubleEG6_HTT255_ << " / " << counter_cached_L1_DoubleEG6_HTT255_ << std::endl;;
    std::cout << "L1_DoubleEG6_HTT255er (uncached/cached calls): " << counter_uncached_L1_DoubleEG6_HTT255er_ << " / " << counter_cached_L1_DoubleEG6_HTT255er_ << std::endl;;
    std::cout << "L1_DoubleEG6_HTT270er (uncached/cached calls): " << counter_uncached_L1_DoubleEG6_HTT270er_ << " / " << counter_cached_L1_DoubleEG6_HTT270er_ << std::endl;;
    std::cout << "L1_DoubleEG6_HTT300er (uncached/cached calls): " << counter_uncached_L1_DoubleEG6_HTT300er_ << " / " << counter_cached_L1_DoubleEG6_HTT300er_ << std::endl;;
    std::cout << "L1_DoubleEG6_er1p2_dR_Max0p8 (uncached/cached calls): " << counter_uncached_L1_DoubleEG6_er1p2_dR_Max0p8_ << " / " << counter_cached_L1_DoubleEG6_er1p2_dR_Max0p8_ << std::endl;;
    std::cout << "L1_DoubleEG6p5_er1p2_dR_Max0p8 (uncached/cached calls): " << counter_uncached_L1_DoubleEG6p5_er1p2_dR_Max0p8_ << " / " << counter_cached_L1_DoubleEG6p5_er1p2_dR_Max0p8_ << std::endl;;
    std::cout << "L1_DoubleEG7_er1p2_dR_Max0p8 (uncached/cached calls): " << counter_uncached_L1_DoubleEG7_er1p2_dR_Max0p8_ << " / " << counter_cached_L1_DoubleEG7_er1p2_dR_Max0p8_ << std::endl;;
    std::cout << "L1_DoubleEG7p5_er1p2_dR_Max0p7 (uncached/cached calls): " << counter_uncached_L1_DoubleEG7p5_er1p2_dR_Max0p7_ << " / " << counter_cached_L1_DoubleEG7p5_er1p2_dR_Max0p7_ << std::endl;;
    std::cout << "L1_DoubleEG8_er1p2_dR_Max0p7 (uncached/cached calls): " << counter_uncached_L1_DoubleEG8_er1p2_dR_Max0p7_ << " / " << counter_cached_L1_DoubleEG8_er1p2_dR_Max0p7_ << std::endl;;
    std::cout << "L1_DoubleEG8er2p5_HTT260er (uncached/cached calls): " << counter_uncached_L1_DoubleEG8er2p5_HTT260er_ << " / " << counter_cached_L1_DoubleEG8er2p5_HTT260er_ << std::endl;;
    std::cout << "L1_DoubleEG8er2p5_HTT280er (uncached/cached calls): " << counter_uncached_L1_DoubleEG8er2p5_HTT280er_ << " / " << counter_cached_L1_DoubleEG8er2p5_HTT280er_ << std::endl;;
    std::cout << "L1_DoubleEG8er2p5_HTT300er (uncached/cached calls): " << counter_uncached_L1_DoubleEG8er2p5_HTT300er_ << " / " << counter_cached_L1_DoubleEG8er2p5_HTT300er_ << std::endl;;
    std::cout << "L1_DoubleEG8er2p5_HTT320er (uncached/cached calls): " << counter_uncached_L1_DoubleEG8er2p5_HTT320er_ << " / " << counter_cached_L1_DoubleEG8er2p5_HTT320er_ << std::endl;;
    std::cout << "L1_DoubleEG8er2p5_HTT340er (uncached/cached calls): " << counter_uncached_L1_DoubleEG8er2p5_HTT340er_ << " / " << counter_cached_L1_DoubleEG8er2p5_HTT340er_ << std::endl;;
    std::cout << "L1_DoubleEG8er2p6_HTT255er (uncached/cached calls): " << counter_uncached_L1_DoubleEG8er2p6_HTT255er_ << " / " << counter_cached_L1_DoubleEG8er2p6_HTT255er_ << std::endl;;
    std::cout << "L1_DoubleEG8er2p6_HTT270er (uncached/cached calls): " << counter_uncached_L1_DoubleEG8er2p6_HTT270er_ << " / " << counter_cached_L1_DoubleEG8er2p6_HTT270er_ << std::endl;;
    std::cout << "L1_DoubleEG8er2p6_HTT300er (uncached/cached calls): " << counter_uncached_L1_DoubleEG8er2p6_HTT300er_ << " / " << counter_cached_L1_DoubleEG8er2p6_HTT300er_ << std::endl;;
    std::cout << "L1_DoubleEG8p5_er1p2_dR_Max0p7 (uncached/cached calls): " << counter_uncached_L1_DoubleEG8p5_er1p2_dR_Max0p7_ << " / " << counter_cached_L1_DoubleEG8p5_er1p2_dR_Max0p7_ << std::endl;;
    std::cout << "L1_DoubleEG9_er1p2_dR_Max0p7 (uncached/cached calls): " << counter_uncached_L1_DoubleEG9_er1p2_dR_Max0p7_ << " / " << counter_cached_L1_DoubleEG9_er1p2_dR_Max0p7_ << std::endl;;
    std::cout << "L1_DoubleEG9p5_er1p2_dR_Max0p6 (uncached/cached calls): " << counter_uncached_L1_DoubleEG9p5_er1p2_dR_Max0p6_ << " / " << counter_cached_L1_DoubleEG9p5_er1p2_dR_Max0p6_ << std::endl;;
    std::cout << "L1_DoubleEG_15_10 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_15_10_ << " / " << counter_cached_L1_DoubleEG_15_10_ << std::endl;;
    std::cout << "L1_DoubleEG_15_10_er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_15_10_er2p5_ << " / " << counter_cached_L1_DoubleEG_15_10_er2p5_ << std::endl;;
    std::cout << "L1_DoubleEG_18_17 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_18_17_ << " / " << counter_cached_L1_DoubleEG_18_17_ << std::endl;;
    std::cout << "L1_DoubleEG_20_10_er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_20_10_er2p5_ << " / " << counter_cached_L1_DoubleEG_20_10_er2p5_ << std::endl;;
    std::cout << "L1_DoubleEG_20_18 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_20_18_ << " / " << counter_cached_L1_DoubleEG_20_18_ << std::endl;;
    std::cout << "L1_DoubleEG_22_10 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_22_10_ << " / " << counter_cached_L1_DoubleEG_22_10_ << std::endl;;
    std::cout << "L1_DoubleEG_22_10_er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_22_10_er2p5_ << " / " << counter_cached_L1_DoubleEG_22_10_er2p5_ << std::endl;;
    std::cout << "L1_DoubleEG_22_12 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_22_12_ << " / " << counter_cached_L1_DoubleEG_22_12_ << std::endl;;
    std::cout << "L1_DoubleEG_22_15 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_22_15_ << " / " << counter_cached_L1_DoubleEG_22_15_ << std::endl;;
    std::cout << "L1_DoubleEG_23_10 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_23_10_ << " / " << counter_cached_L1_DoubleEG_23_10_ << std::endl;;
    std::cout << "L1_DoubleEG_24_17 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_24_17_ << " / " << counter_cached_L1_DoubleEG_24_17_ << std::endl;;
    std::cout << "L1_DoubleEG_25_12 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_25_12_ << " / " << counter_cached_L1_DoubleEG_25_12_ << std::endl;;
    std::cout << "L1_DoubleEG_25_12_er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_25_12_er2p5_ << " / " << counter_cached_L1_DoubleEG_25_12_er2p5_ << std::endl;;
    std::cout << "L1_DoubleEG_25_13 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_25_13_ << " / " << counter_cached_L1_DoubleEG_25_13_ << std::endl;;
    std::cout << "L1_DoubleEG_25_14 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_25_14_ << " / " << counter_cached_L1_DoubleEG_25_14_ << std::endl;;
    std::cout << "L1_DoubleEG_25_14_er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_25_14_er2p5_ << " / " << counter_cached_L1_DoubleEG_25_14_er2p5_ << std::endl;;
    std::cout << "L1_DoubleEG_27_14_er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_27_14_er2p5_ << " / " << counter_cached_L1_DoubleEG_27_14_er2p5_ << std::endl;;
    std::cout << "L1_DoubleEG_Iso23_10 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_Iso23_10_ << " / " << counter_cached_L1_DoubleEG_Iso23_10_ << std::endl;;
    std::cout << "L1_DoubleEG_Iso24_10 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_Iso24_10_ << " / " << counter_cached_L1_DoubleEG_Iso24_10_ << std::endl;;
    std::cout << "L1_DoubleEG_LooseIso16_LooseIso12_er1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_LooseIso16_LooseIso12_er1p5_ << " / " << counter_cached_L1_DoubleEG_LooseIso16_LooseIso12_er1p5_ << std::endl;;
    std::cout << "L1_DoubleEG_LooseIso18_LooseIso12_er1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_LooseIso18_LooseIso12_er1p5_ << " / " << counter_cached_L1_DoubleEG_LooseIso18_LooseIso12_er1p5_ << std::endl;;
    std::cout << "L1_DoubleEG_LooseIso20_10_er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_LooseIso20_10_er2p5_ << " / " << counter_cached_L1_DoubleEG_LooseIso20_10_er2p5_ << std::endl;;
    std::cout << "L1_DoubleEG_LooseIso20_LooseIso12_er1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_LooseIso20_LooseIso12_er1p5_ << " / " << counter_cached_L1_DoubleEG_LooseIso20_LooseIso12_er1p5_ << std::endl;;
    std::cout << "L1_DoubleEG_LooseIso22_10_er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_LooseIso22_10_er2p5_ << " / " << counter_cached_L1_DoubleEG_LooseIso22_10_er2p5_ << std::endl;;
    std::cout << "L1_DoubleEG_LooseIso22_12_er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_LooseIso22_12_er2p5_ << " / " << counter_cached_L1_DoubleEG_LooseIso22_12_er2p5_ << std::endl;;
    std::cout << "L1_DoubleEG_LooseIso22_LooseIso12_er1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_LooseIso22_LooseIso12_er1p5_ << " / " << counter_cached_L1_DoubleEG_LooseIso22_LooseIso12_er1p5_ << std::endl;;
    std::cout << "L1_DoubleEG_LooseIso23_10 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_LooseIso23_10_ << " / " << counter_cached_L1_DoubleEG_LooseIso23_10_ << std::endl;;
    std::cout << "L1_DoubleEG_LooseIso24_10 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_LooseIso24_10_ << " / " << counter_cached_L1_DoubleEG_LooseIso24_10_ << std::endl;;
    std::cout << "L1_DoubleEG_LooseIso25_12_er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_LooseIso25_12_er2p5_ << " / " << counter_cached_L1_DoubleEG_LooseIso25_12_er2p5_ << std::endl;;
    std::cout << "L1_DoubleEG_LooseIso25_LooseIso12_er1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleEG_LooseIso25_LooseIso12_er1p5_ << " / " << counter_cached_L1_DoubleEG_LooseIso25_LooseIso12_er1p5_ << std::endl;;
    std::cout << "L1_DoubleIsoTau26er (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau26er_ << " / " << counter_cached_L1_DoubleIsoTau26er_ << std::endl;;
    std::cout << "L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5 (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5_ << " / " << counter_cached_L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5_ << std::endl;;
    std::cout << "L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5 (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5_ << " / " << counter_cached_L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5_ << std::endl;;
    std::cout << "L1_DoubleIsoTau27er (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau27er_ << " / " << counter_cached_L1_DoubleIsoTau27er_ << std::endl;;
    std::cout << "L1_DoubleIsoTau28er (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau28er_ << " / " << counter_cached_L1_DoubleIsoTau28er_ << std::endl;;
    std::cout << "L1_DoubleIsoTau28er2p1 (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau28er2p1_ << " / " << counter_cached_L1_DoubleIsoTau28er2p1_ << std::endl;;
    std::cout << "L1_DoubleIsoTau28er2p1_Mass_Max80 (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau28er2p1_Mass_Max80_ << " / " << counter_cached_L1_DoubleIsoTau28er2p1_Mass_Max80_ << std::endl;;
    std::cout << "L1_DoubleIsoTau28er2p1_Mass_Max90 (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau28er2p1_Mass_Max90_ << " / " << counter_cached_L1_DoubleIsoTau28er2p1_Mass_Max90_ << std::endl;;
    std::cout << "L1_DoubleIsoTau29er (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau29er_ << " / " << counter_cached_L1_DoubleIsoTau29er_ << std::endl;;
    std::cout << "L1_DoubleIsoTau30er (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau30er_ << " / " << counter_cached_L1_DoubleIsoTau30er_ << std::endl;;
    std::cout << "L1_DoubleIsoTau30er2p1 (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau30er2p1_ << " / " << counter_cached_L1_DoubleIsoTau30er2p1_ << std::endl;;
    std::cout << "L1_DoubleIsoTau30er2p1_Mass_Max80 (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau30er2p1_Mass_Max80_ << " / " << counter_cached_L1_DoubleIsoTau30er2p1_Mass_Max80_ << std::endl;;
    std::cout << "L1_DoubleIsoTau30er2p1_Mass_Max90 (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau30er2p1_Mass_Max90_ << " / " << counter_cached_L1_DoubleIsoTau30er2p1_Mass_Max90_ << std::endl;;
    std::cout << "L1_DoubleIsoTau32er (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau32er_ << " / " << counter_cached_L1_DoubleIsoTau32er_ << std::endl;;
    std::cout << "L1_DoubleIsoTau32er2p1 (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau32er2p1_ << " / " << counter_cached_L1_DoubleIsoTau32er2p1_ << std::endl;;
    std::cout << "L1_DoubleIsoTau33er (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau33er_ << " / " << counter_cached_L1_DoubleIsoTau33er_ << std::endl;;
    std::cout << "L1_DoubleIsoTau33er2p1 (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau33er2p1_ << " / " << counter_cached_L1_DoubleIsoTau33er2p1_ << std::endl;;
    std::cout << "L1_DoubleIsoTau34er (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau34er_ << " / " << counter_cached_L1_DoubleIsoTau34er_ << std::endl;;
    std::cout << "L1_DoubleIsoTau34er2p1 (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau34er2p1_ << " / " << counter_cached_L1_DoubleIsoTau34er2p1_ << std::endl;;
    std::cout << "L1_DoubleIsoTau35er (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau35er_ << " / " << counter_cached_L1_DoubleIsoTau35er_ << std::endl;;
    std::cout << "L1_DoubleIsoTau35er2p1 (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau35er2p1_ << " / " << counter_cached_L1_DoubleIsoTau35er2p1_ << std::endl;;
    std::cout << "L1_DoubleIsoTau36er (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau36er_ << " / " << counter_cached_L1_DoubleIsoTau36er_ << std::endl;;
    std::cout << "L1_DoubleIsoTau36er2p1 (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau36er2p1_ << " / " << counter_cached_L1_DoubleIsoTau36er2p1_ << std::endl;;
    std::cout << "L1_DoubleIsoTau38er2p1 (uncached/cached calls): " << counter_uncached_L1_DoubleIsoTau38er2p1_ << " / " << counter_cached_L1_DoubleIsoTau38er2p1_ << std::endl;;
    std::cout << "L1_DoubleJet100er2p3_dEta_Max1p6 (uncached/cached calls): " << counter_uncached_L1_DoubleJet100er2p3_dEta_Max1p6_ << " / " << counter_cached_L1_DoubleJet100er2p3_dEta_Max1p6_ << std::endl;;
    std::cout << "L1_DoubleJet100er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleJet100er2p5_ << " / " << counter_cached_L1_DoubleJet100er2p5_ << std::endl;;
    std::cout << "L1_DoubleJet100er2p7 (uncached/cached calls): " << counter_uncached_L1_DoubleJet100er2p7_ << " / " << counter_cached_L1_DoubleJet100er2p7_ << std::endl;;
    std::cout << "L1_DoubleJet100er3p0 (uncached/cached calls): " << counter_uncached_L1_DoubleJet100er3p0_ << " / " << counter_cached_L1_DoubleJet100er3p0_ << std::endl;;
    std::cout << "L1_DoubleJet112er2p3_dEta_Max1p6 (uncached/cached calls): " << counter_uncached_L1_DoubleJet112er2p3_dEta_Max1p6_ << " / " << counter_cached_L1_DoubleJet112er2p3_dEta_Max1p6_ << std::endl;;
    std::cout << "L1_DoubleJet112er2p7 (uncached/cached calls): " << counter_uncached_L1_DoubleJet112er2p7_ << " / " << counter_cached_L1_DoubleJet112er2p7_ << std::endl;;
    std::cout << "L1_DoubleJet112er3p0 (uncached/cached calls): " << counter_uncached_L1_DoubleJet112er3p0_ << " / " << counter_cached_L1_DoubleJet112er3p0_ << std::endl;;
    std::cout << "L1_DoubleJet120er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleJet120er2p5_ << " / " << counter_cached_L1_DoubleJet120er2p5_ << std::endl;;
    std::cout << "L1_DoubleJet120er2p7 (uncached/cached calls): " << counter_uncached_L1_DoubleJet120er2p7_ << " / " << counter_cached_L1_DoubleJet120er2p7_ << std::endl;;
    std::cout << "L1_DoubleJet120er3p0 (uncached/cached calls): " << counter_uncached_L1_DoubleJet120er3p0_ << " / " << counter_cached_L1_DoubleJet120er3p0_ << std::endl;;
    std::cout << "L1_DoubleJet12_ForwardBackward (uncached/cached calls): " << counter_uncached_L1_DoubleJet12_ForwardBackward_ << " / " << counter_cached_L1_DoubleJet12_ForwardBackward_ << std::endl;;
    std::cout << "L1_DoubleJet150er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleJet150er2p5_ << " / " << counter_cached_L1_DoubleJet150er2p5_ << std::endl;;
    std::cout << "L1_DoubleJet150er2p7 (uncached/cached calls): " << counter_uncached_L1_DoubleJet150er2p7_ << " / " << counter_cached_L1_DoubleJet150er2p7_ << std::endl;;
    std::cout << "L1_DoubleJet150er3p0 (uncached/cached calls): " << counter_uncached_L1_DoubleJet150er3p0_ << " / " << counter_cached_L1_DoubleJet150er3p0_ << std::endl;;
    std::cout << "L1_DoubleJet16_ForwardBackward (uncached/cached calls): " << counter_uncached_L1_DoubleJet16_ForwardBackward_ << " / " << counter_cached_L1_DoubleJet16_ForwardBackward_ << std::endl;;
    std::cout << "L1_DoubleJet30_Mass_Min300_dEta_Max1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleJet30_Mass_Min300_dEta_Max1p5_ << " / " << counter_cached_L1_DoubleJet30_Mass_Min300_dEta_Max1p5_ << std::endl;;
    std::cout << "L1_DoubleJet30_Mass_Min320_dEta_Max1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleJet30_Mass_Min320_dEta_Max1p5_ << " / " << counter_cached_L1_DoubleJet30_Mass_Min320_dEta_Max1p5_ << std::endl;;
    std::cout << "L1_DoubleJet30_Mass_Min340_dEta_Max1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleJet30_Mass_Min340_dEta_Max1p5_ << " / " << counter_cached_L1_DoubleJet30_Mass_Min340_dEta_Max1p5_ << std::endl;;
    std::cout << "L1_DoubleJet30_Mass_Min360_dEta_Max1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleJet30_Mass_Min360_dEta_Max1p5_ << " / " << counter_cached_L1_DoubleJet30_Mass_Min360_dEta_Max1p5_ << std::endl;;
    std::cout << "L1_DoubleJet30_Mass_Min380_dEta_Max1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleJet30_Mass_Min380_dEta_Max1p5_ << " / " << counter_cached_L1_DoubleJet30_Mass_Min380_dEta_Max1p5_ << std::endl;;
    std::cout << "L1_DoubleJet30_Mass_Min400_Mu10 (uncached/cached calls): " << counter_uncached_L1_DoubleJet30_Mass_Min400_Mu10_ << " / " << counter_cached_L1_DoubleJet30_Mass_Min400_Mu10_ << std::endl;;
    std::cout << "L1_DoubleJet30_Mass_Min400_Mu6 (uncached/cached calls): " << counter_uncached_L1_DoubleJet30_Mass_Min400_Mu6_ << " / " << counter_cached_L1_DoubleJet30_Mass_Min400_Mu6_ << std::endl;;
    std::cout << "L1_DoubleJet30_Mass_Min400_dEta_Max1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleJet30_Mass_Min400_dEta_Max1p5_ << " / " << counter_cached_L1_DoubleJet30_Mass_Min400_dEta_Max1p5_ << std::endl;;
    std::cout << "L1_DoubleJet30_Mj30j30_400_Mu10 (uncached/cached calls): " << counter_uncached_L1_DoubleJet30_Mj30j30_400_Mu10_ << " / " << counter_cached_L1_DoubleJet30_Mj30j30_400_Mu10_ << std::endl;;
    std::cout << "L1_DoubleJet30_Mj30j30_400_Mu6 (uncached/cached calls): " << counter_uncached_L1_DoubleJet30_Mj30j30_400_Mu6_ << " / " << counter_cached_L1_DoubleJet30_Mj30j30_400_Mu6_ << std::endl;;
    std::cout << "L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5_ << " / " << counter_cached_L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5_ << std::endl;;
    std::cout << "L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5_ << " / " << counter_cached_L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5_ << std::endl;;
    std::cout << "L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5_ << " / " << counter_cached_L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5_ << std::endl;;
    std::cout << "L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5_ << " / " << counter_cached_L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5_ << std::endl;;
    std::cout << "L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5_ << " / " << counter_cached_L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5_ << std::endl;;
    std::cout << "L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5_ << " / " << counter_cached_L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5_ << std::endl;;
    std::cout << "L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp (uncached/cached calls): " << counter_uncached_L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp_ << " / " << counter_cached_L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp_ << std::endl;;
    std::cout << "L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5 (uncached/cached calls): " << counter_uncached_L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5_ << " / " << counter_cached_L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5_ << std::endl;;
    std::cout << "L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450 (uncached/cached calls): " << counter_uncached_L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450_ << " / " << counter_cached_L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450_ << std::endl;;
    std::cout << "L1_DoubleJet40er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleJet40er2p5_ << " / " << counter_cached_L1_DoubleJet40er2p5_ << std::endl;;
    std::cout << "L1_DoubleJet40er2p7 (uncached/cached calls): " << counter_uncached_L1_DoubleJet40er2p7_ << " / " << counter_cached_L1_DoubleJet40er2p7_ << std::endl;;
    std::cout << "L1_DoubleJet40er3p0 (uncached/cached calls): " << counter_uncached_L1_DoubleJet40er3p0_ << " / " << counter_cached_L1_DoubleJet40er3p0_ << std::endl;;
    std::cout << "L1_DoubleJet50er2p7 (uncached/cached calls): " << counter_uncached_L1_DoubleJet50er2p7_ << " / " << counter_cached_L1_DoubleJet50er2p7_ << std::endl;;
    std::cout << "L1_DoubleJet50er3p0 (uncached/cached calls): " << counter_uncached_L1_DoubleJet50er3p0_ << " / " << counter_cached_L1_DoubleJet50er3p0_ << std::endl;;
    std::cout << "L1_DoubleJet60er2p7 (uncached/cached calls): " << counter_uncached_L1_DoubleJet60er2p7_ << " / " << counter_cached_L1_DoubleJet60er2p7_ << std::endl;;
    std::cout << "L1_DoubleJet60er2p7_ETM100 (uncached/cached calls): " << counter_uncached_L1_DoubleJet60er2p7_ETM100_ << " / " << counter_cached_L1_DoubleJet60er2p7_ETM100_ << std::endl;;
    std::cout << "L1_DoubleJet60er2p7_ETM60 (uncached/cached calls): " << counter_uncached_L1_DoubleJet60er2p7_ETM60_ << " / " << counter_cached_L1_DoubleJet60er2p7_ETM60_ << std::endl;;
    std::cout << "L1_DoubleJet60er2p7_ETM70 (uncached/cached calls): " << counter_uncached_L1_DoubleJet60er2p7_ETM70_ << " / " << counter_cached_L1_DoubleJet60er2p7_ETM70_ << std::endl;;
    std::cout << "L1_DoubleJet60er2p7_ETM80 (uncached/cached calls): " << counter_uncached_L1_DoubleJet60er2p7_ETM80_ << " / " << counter_cached_L1_DoubleJet60er2p7_ETM80_ << std::endl;;
    std::cout << "L1_DoubleJet60er2p7_ETM90 (uncached/cached calls): " << counter_uncached_L1_DoubleJet60er2p7_ETM90_ << " / " << counter_cached_L1_DoubleJet60er2p7_ETM90_ << std::endl;;
    std::cout << "L1_DoubleJet60er3p0 (uncached/cached calls): " << counter_uncached_L1_DoubleJet60er3p0_ << " / " << counter_cached_L1_DoubleJet60er3p0_ << std::endl;;
    std::cout << "L1_DoubleJet60er3p0_ETM100 (uncached/cached calls): " << counter_uncached_L1_DoubleJet60er3p0_ETM100_ << " / " << counter_cached_L1_DoubleJet60er3p0_ETM100_ << std::endl;;
    std::cout << "L1_DoubleJet60er3p0_ETM60 (uncached/cached calls): " << counter_uncached_L1_DoubleJet60er3p0_ETM60_ << " / " << counter_cached_L1_DoubleJet60er3p0_ETM60_ << std::endl;;
    std::cout << "L1_DoubleJet60er3p0_ETM70 (uncached/cached calls): " << counter_uncached_L1_DoubleJet60er3p0_ETM70_ << " / " << counter_cached_L1_DoubleJet60er3p0_ETM70_ << std::endl;;
    std::cout << "L1_DoubleJet60er3p0_ETM80 (uncached/cached calls): " << counter_uncached_L1_DoubleJet60er3p0_ETM80_ << " / " << counter_cached_L1_DoubleJet60er3p0_ETM80_ << std::endl;;
    std::cout << "L1_DoubleJet60er3p0_ETM90 (uncached/cached calls): " << counter_uncached_L1_DoubleJet60er3p0_ETM90_ << " / " << counter_cached_L1_DoubleJet60er3p0_ETM90_ << std::endl;;
    std::cout << "L1_DoubleJet80er2p7 (uncached/cached calls): " << counter_uncached_L1_DoubleJet80er2p7_ << " / " << counter_cached_L1_DoubleJet80er2p7_ << std::endl;;
    std::cout << "L1_DoubleJet80er3p0 (uncached/cached calls): " << counter_uncached_L1_DoubleJet80er3p0_ << " / " << counter_cached_L1_DoubleJet80er3p0_ << std::endl;;
    std::cout << "L1_DoubleJet8_ForwardBackward (uncached/cached calls): " << counter_uncached_L1_DoubleJet8_ForwardBackward_ << " / " << counter_cached_L1_DoubleJet8_ForwardBackward_ << std::endl;;
    std::cout << "L1_DoubleJetC100 (uncached/cached calls): " << counter_uncached_L1_DoubleJetC100_ << " / " << counter_cached_L1_DoubleJetC100_ << std::endl;;
    std::cout << "L1_DoubleJetC112 (uncached/cached calls): " << counter_uncached_L1_DoubleJetC112_ << " / " << counter_cached_L1_DoubleJetC112_ << std::endl;;
    std::cout << "L1_DoubleJetC120 (uncached/cached calls): " << counter_uncached_L1_DoubleJetC120_ << " / " << counter_cached_L1_DoubleJetC120_ << std::endl;;
    std::cout << "L1_DoubleJetC40 (uncached/cached calls): " << counter_uncached_L1_DoubleJetC40_ << " / " << counter_cached_L1_DoubleJetC40_ << std::endl;;
    std::cout << "L1_DoubleJetC50 (uncached/cached calls): " << counter_uncached_L1_DoubleJetC50_ << " / " << counter_cached_L1_DoubleJetC50_ << std::endl;;
    std::cout << "L1_DoubleJetC60 (uncached/cached calls): " << counter_uncached_L1_DoubleJetC60_ << " / " << counter_cached_L1_DoubleJetC60_ << std::endl;;
    std::cout << "L1_DoubleJetC60_ETM60 (uncached/cached calls): " << counter_uncached_L1_DoubleJetC60_ETM60_ << " / " << counter_cached_L1_DoubleJetC60_ETM60_ << std::endl;;
    std::cout << "L1_DoubleJetC80 (uncached/cached calls): " << counter_uncached_L1_DoubleJetC80_ << " / " << counter_cached_L1_DoubleJetC80_ << std::endl;;
    std::cout << "L1_DoubleJet_100_30_DoubleJet30_Mass_Min620 (uncached/cached calls): " << counter_uncached_L1_DoubleJet_100_30_DoubleJet30_Mass_Min620_ << " / " << counter_cached_L1_DoubleJet_100_30_DoubleJet30_Mass_Min620_ << std::endl;;
    std::cout << "L1_DoubleJet_100_30_Mj30j30_620 (uncached/cached calls): " << counter_uncached_L1_DoubleJet_100_30_Mj30j30_620_ << " / " << counter_cached_L1_DoubleJet_100_30_Mj30j30_620_ << std::endl;;
    std::cout << "L1_DoubleJet_100_35_DoubleJet35_Mass_Min620 (uncached/cached calls): " << counter_uncached_L1_DoubleJet_100_35_DoubleJet35_Mass_Min620_ << " / " << counter_cached_L1_DoubleJet_100_35_DoubleJet35_Mass_Min620_ << std::endl;;
    std::cout << "L1_DoubleJet_110_35_DoubleJet35_Mass_Min620 (uncached/cached calls): " << counter_uncached_L1_DoubleJet_110_35_DoubleJet35_Mass_Min620_ << " / " << counter_cached_L1_DoubleJet_110_35_DoubleJet35_Mass_Min620_ << std::endl;;
    std::cout << "L1_DoubleJet_110_40_DoubleJet40_Mass_Min620 (uncached/cached calls): " << counter_uncached_L1_DoubleJet_110_40_DoubleJet40_Mass_Min620_ << " / " << counter_cached_L1_DoubleJet_110_40_DoubleJet40_Mass_Min620_ << std::endl;;
    std::cout << "L1_DoubleJet_115_35_DoubleJet35_Mass_Min620 (uncached/cached calls): " << counter_uncached_L1_DoubleJet_115_35_DoubleJet35_Mass_Min620_ << " / " << counter_cached_L1_DoubleJet_115_35_DoubleJet35_Mass_Min620_ << std::endl;;
    std::cout << "L1_DoubleJet_115_40_DoubleJet40_Mass_Min620 (uncached/cached calls): " << counter_uncached_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_ << " / " << counter_cached_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_ << std::endl;;
    std::cout << "L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28 (uncached/cached calls): " << counter_uncached_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28_ << " / " << counter_cached_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28_ << std::endl;;
    std::cout << "L1_DoubleJet_120_45_DoubleJet45_Mass_Min620 (uncached/cached calls): " << counter_uncached_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_ << " / " << counter_cached_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_ << std::endl;;
    std::cout << "L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28 (uncached/cached calls): " << counter_uncached_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28_ << " / " << counter_cached_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28_ << std::endl;;
    std::cout << "L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ (uncached/cached calls): " << counter_uncached_L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ_ << " / " << counter_cached_L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ_ << std::endl;;
    std::cout << "L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp (uncached/cached calls): " << counter_uncached_L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp_ << " / " << counter_cached_L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp_ << std::endl;;
    std::cout << "L1_DoubleJet_80_30_Mass_Min420_Mu8 (uncached/cached calls): " << counter_uncached_L1_DoubleJet_80_30_Mass_Min420_Mu8_ << " / " << counter_cached_L1_DoubleJet_80_30_Mass_Min420_Mu8_ << std::endl;;
    std::cout << "L1_DoubleJet_90_30_DoubleJet30_Mass_Min620 (uncached/cached calls): " << counter_uncached_L1_DoubleJet_90_30_DoubleJet30_Mass_Min620_ << " / " << counter_cached_L1_DoubleJet_90_30_DoubleJet30_Mass_Min620_ << std::endl;;
    std::cout << "L1_DoubleJet_90_30_Mj30j30_620 (uncached/cached calls): " << counter_uncached_L1_DoubleJet_90_30_Mj30j30_620_ << " / " << counter_cached_L1_DoubleJet_90_30_Mj30j30_620_ << std::endl;;
    std::cout << "L1_DoubleLLPJet40 (uncached/cached calls): " << counter_uncached_L1_DoubleLLPJet40_ << " / " << counter_cached_L1_DoubleLLPJet40_ << std::endl;;
    std::cout << "L1_DoubleLooseIsoEG22er2p1 (uncached/cached calls): " << counter_uncached_L1_DoubleLooseIsoEG22er2p1_ << " / " << counter_cached_L1_DoubleLooseIsoEG22er2p1_ << std::endl;;
    std::cout << "L1_DoubleLooseIsoEG24er2p1 (uncached/cached calls): " << counter_uncached_L1_DoubleLooseIsoEG24er2p1_ << " / " << counter_cached_L1_DoubleLooseIsoEG24er2p1_ << std::endl;;
    std::cout << "L1_DoubleMu0 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_ << " / " << counter_cached_L1_DoubleMu0_ << std::endl;;
    std::cout << "L1_DoubleMu0_ETM40 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_ETM40_ << " / " << counter_cached_L1_DoubleMu0_ETM40_ << std::endl;;
    std::cout << "L1_DoubleMu0_ETM55 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_ETM55_ << " / " << counter_cached_L1_DoubleMu0_ETM55_ << std::endl;;
    std::cout << "L1_DoubleMu0_ETM60 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_ETM60_ << " / " << counter_cached_L1_DoubleMu0_ETM60_ << std::endl;;
    std::cout << "L1_DoubleMu0_ETM65 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_ETM65_ << " / " << counter_cached_L1_DoubleMu0_ETM65_ << std::endl;;
    std::cout << "L1_DoubleMu0_ETM70 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_ETM70_ << " / " << counter_cached_L1_DoubleMu0_ETM70_ << std::endl;;
    std::cout << "L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_DoubleMu0_Mass_Min1 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_Mass_Min1_ << " / " << counter_cached_L1_DoubleMu0_Mass_Min1_ << std::endl;;
    std::cout << "L1_DoubleMu0_OQ (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_OQ_ << " / " << counter_cached_L1_DoubleMu0_OQ_ << std::endl;;
    std::cout << "L1_DoubleMu0_SQ (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_SQ_ << " / " << counter_cached_L1_DoubleMu0_SQ_ << std::endl;;
    std::cout << "L1_DoubleMu0_SQ_OS (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_SQ_OS_ << " / " << counter_cached_L1_DoubleMu0_SQ_OS_ << std::endl;;
    std::cout << "L1_DoubleMu0_Upt15_Upt7 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_Upt15_Upt7_ << " / " << counter_cached_L1_DoubleMu0_Upt15_Upt7_ << std::endl;;
    std::cout << "L1_DoubleMu0_Upt5_Upt5 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_Upt5_Upt5_ << " / " << counter_cached_L1_DoubleMu0_Upt5_Upt5_ << std::endl;;
    std::cout << "L1_DoubleMu0_Upt6_IP_Min1_Upt4 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_Upt6_IP_Min1_Upt4_ << " / " << counter_cached_L1_DoubleMu0_Upt6_IP_Min1_Upt4_ << std::endl;;
    std::cout << "L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8_ << " / " << counter_cached_L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8_ << std::endl;;
    std::cout << "L1_DoubleMu0er1p25_dEta_Max1p8_OS (uncached/cached calls): " << counter_uncached_L1_DoubleMu0er1p25_dEta_Max1p8_OS_ << " / " << counter_cached_L1_DoubleMu0er1p25_dEta_Max1p8_OS_ << std::endl;;
    std::cout << "L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6_ << " / " << counter_cached_L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6_ << std::endl;;
    std::cout << "L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4_ << " / " << counter_cached_L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4_ << std::endl;;
    std::cout << "L1_DoubleMu0er1p4_dEta_Max1p8_OS (uncached/cached calls): " << counter_uncached_L1_DoubleMu0er1p4_dEta_Max1p8_OS_ << " / " << counter_cached_L1_DoubleMu0er1p4_dEta_Max1p8_OS_ << std::endl;;
    std::cout << "L1_DoubleMu0er1p5_SQ (uncached/cached calls): " << counter_uncached_L1_DoubleMu0er1p5_SQ_ << " / " << counter_cached_L1_DoubleMu0er1p5_SQ_ << std::endl;;
    std::cout << "L1_DoubleMu0er1p5_SQ_OS (uncached/cached calls): " << counter_uncached_L1_DoubleMu0er1p5_SQ_OS_ << " / " << counter_cached_L1_DoubleMu0er1p5_SQ_OS_ << std::endl;;
    std::cout << "L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4_ << " / " << counter_cached_L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4_ << std::endl;;
    std::cout << "L1_DoubleMu0er1p5_SQ_dR_Max1p4 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0er1p5_SQ_dR_Max1p4_ << " / " << counter_cached_L1_DoubleMu0er1p5_SQ_dR_Max1p4_ << std::endl;;
    std::cout << "L1_DoubleMu0er1p6_dEta_Max1p8 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0er1p6_dEta_Max1p8_ << " / " << counter_cached_L1_DoubleMu0er1p6_dEta_Max1p8_ << std::endl;;
    std::cout << "L1_DoubleMu0er1p6_dEta_Max1p8_OS (uncached/cached calls): " << counter_uncached_L1_DoubleMu0er1p6_dEta_Max1p8_OS_ << " / " << counter_cached_L1_DoubleMu0er1p6_dEta_Max1p8_OS_ << std::endl;;
    std::cout << "L1_DoubleMu0er2_SQ_dR_Max1p4 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0er2_SQ_dR_Max1p4_ << " / " << counter_cached_L1_DoubleMu0er2_SQ_dR_Max1p4_ << std::endl;;
    std::cout << "L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5_ << " / " << counter_cached_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5_ << std::endl;;
    std::cout << "L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6_ << " / " << counter_cached_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6_ << std::endl;;
    std::cout << "L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4_ << " / " << counter_cached_L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4_ << std::endl;;
    std::cout << "L1_DoubleMu0er2p0_SQ_dEta_Max1p5 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0er2p0_SQ_dEta_Max1p5_ << " / " << counter_cached_L1_DoubleMu0er2p0_SQ_dEta_Max1p5_ << std::endl;;
    std::cout << "L1_DoubleMu0er2p0_SQ_dEta_Max1p6 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0er2p0_SQ_dEta_Max1p6_ << " / " << counter_cached_L1_DoubleMu0er2p0_SQ_dEta_Max1p6_ << std::endl;;
    std::cout << "L1_DoubleMu0er2p0_SQ_dR_Max1p4 (uncached/cached calls): " << counter_uncached_L1_DoubleMu0er2p0_SQ_dR_Max1p4_ << " / " << counter_cached_L1_DoubleMu0er2p0_SQ_dR_Max1p4_ << std::endl;;
    std::cout << "L1_DoubleMu10_SQ (uncached/cached calls): " << counter_uncached_L1_DoubleMu10_SQ_ << " / " << counter_cached_L1_DoubleMu10_SQ_ << std::endl;;
    std::cout << "L1_DoubleMu18er2p1 (uncached/cached calls): " << counter_uncached_L1_DoubleMu18er2p1_ << " / " << counter_cached_L1_DoubleMu18er2p1_ << std::endl;;
    std::cout << "L1_DoubleMu18er2p1_SQ (uncached/cached calls): " << counter_uncached_L1_DoubleMu18er2p1_SQ_ << " / " << counter_cached_L1_DoubleMu18er2p1_SQ_ << std::endl;;
    std::cout << "L1_DoubleMu22er2p1 (uncached/cached calls): " << counter_uncached_L1_DoubleMu22er2p1_ << " / " << counter_cached_L1_DoubleMu22er2p1_ << std::endl;;
    std::cout << "L1_DoubleMu3_OS_DoubleEG7p5Upsilon (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_OS_DoubleEG7p5Upsilon_ << " / " << counter_cached_L1_DoubleMu3_OS_DoubleEG7p5Upsilon_ << std::endl;;
    std::cout << "L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20 (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20_ << " / " << counter_cached_L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_ETMHF30_HTT60er (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_ETMHF30_HTT60er_ << " / " << counter_cached_L1_DoubleMu3_SQ_ETMHF30_HTT60er_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5_ << " / " << counter_cached_L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_ETMHF40_HTT60er (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_ETMHF40_HTT60er_ << " / " << counter_cached_L1_DoubleMu3_SQ_ETMHF40_HTT60er_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5_ << " / " << counter_cached_L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_ETMHF50_HTT60er (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_ETMHF50_HTT60er_ << " / " << counter_cached_L1_DoubleMu3_SQ_ETMHF50_HTT60er_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_ << " / " << counter_cached_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5_ << " / " << counter_cached_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5_ << " / " << counter_cached_L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_HTT100er (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_HTT100er_ << " / " << counter_cached_L1_DoubleMu3_SQ_HTT100er_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_HTT200er (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_HTT200er_ << " / " << counter_cached_L1_DoubleMu3_SQ_HTT200er_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_HTT220er (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_HTT220er_ << " / " << counter_cached_L1_DoubleMu3_SQ_HTT220er_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_HTT240er (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_HTT240er_ << " / " << counter_cached_L1_DoubleMu3_SQ_HTT240er_ << std::endl;;
    std::cout << "L1_DoubleMu3_SQ_HTT260er (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_SQ_HTT260er_ << " / " << counter_cached_L1_DoubleMu3_SQ_HTT260er_ << std::endl;;
    std::cout << "L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8 (uncached/cached calls): " << counter_uncached_L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8_ << " / " << counter_cached_L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8_ << std::endl;;
    std::cout << "L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4 (uncached/cached calls): " << counter_uncached_L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4_ << " / " << counter_cached_L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4_ << std::endl;;
    std::cout << "L1_DoubleMu4_OS_EG12 (uncached/cached calls): " << counter_uncached_L1_DoubleMu4_OS_EG12_ << " / " << counter_cached_L1_DoubleMu4_OS_EG12_ << std::endl;;
    std::cout << "L1_DoubleMu4_SQ_EG9er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleMu4_SQ_EG9er2p5_ << " / " << counter_cached_L1_DoubleMu4_SQ_EG9er2p5_ << std::endl;;
    std::cout << "L1_DoubleMu4_SQ_OS (uncached/cached calls): " << counter_uncached_L1_DoubleMu4_SQ_OS_ << " / " << counter_cached_L1_DoubleMu4_SQ_OS_ << std::endl;;
    std::cout << "L1_DoubleMu4_SQ_OS_dR_Max1p2 (uncached/cached calls): " << counter_uncached_L1_DoubleMu4_SQ_OS_dR_Max1p2_ << " / " << counter_cached_L1_DoubleMu4_SQ_OS_dR_Max1p2_ << std::endl;;
    std::cout << "L1_DoubleMu4p5_SQ (uncached/cached calls): " << counter_uncached_L1_DoubleMu4p5_SQ_ << " / " << counter_cached_L1_DoubleMu4p5_SQ_ << std::endl;;
    std::cout << "L1_DoubleMu4p5_SQ_OS (uncached/cached calls): " << counter_uncached_L1_DoubleMu4p5_SQ_OS_ << " / " << counter_cached_L1_DoubleMu4p5_SQ_OS_ << std::endl;;
    std::cout << "L1_DoubleMu4p5_SQ_OS_dR_Max1p2 (uncached/cached calls): " << counter_uncached_L1_DoubleMu4p5_SQ_OS_dR_Max1p2_ << " / " << counter_cached_L1_DoubleMu4p5_SQ_OS_dR_Max1p2_ << std::endl;;
    std::cout << "L1_DoubleMu4p5er2p0_SQ_OS (uncached/cached calls): " << counter_uncached_L1_DoubleMu4p5er2p0_SQ_OS_ << " / " << counter_cached_L1_DoubleMu4p5er2p0_SQ_OS_ << std::endl;;
    std::cout << "L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18 (uncached/cached calls): " << counter_uncached_L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18_ << " / " << counter_cached_L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18_ << std::endl;;
    std::cout << "L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18 (uncached/cached calls): " << counter_uncached_L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18_ << " / " << counter_cached_L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18_ << std::endl;;
    std::cout << "L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7 (uncached/cached calls): " << counter_uncached_L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7_ << " / " << counter_cached_L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7_ << std::endl;;
    std::cout << "L1_DoubleMu5Upsilon_OS_DoubleEG3 (uncached/cached calls): " << counter_uncached_L1_DoubleMu5Upsilon_OS_DoubleEG3_ << " / " << counter_cached_L1_DoubleMu5Upsilon_OS_DoubleEG3_ << std::endl;;
    std::cout << "L1_DoubleMu5_OS_EG12 (uncached/cached calls): " << counter_uncached_L1_DoubleMu5_OS_EG12_ << " / " << counter_cached_L1_DoubleMu5_OS_EG12_ << std::endl;;
    std::cout << "L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20 (uncached/cached calls): " << counter_uncached_L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20_ << " / " << counter_cached_L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20_ << std::endl;;
    std::cout << "L1_DoubleMu5_SQ_EG9er2p5 (uncached/cached calls): " << counter_uncached_L1_DoubleMu5_SQ_EG9er2p5_ << " / " << counter_cached_L1_DoubleMu5_SQ_EG9er2p5_ << std::endl;;
    std::cout << "L1_DoubleMu5_SQ_OS (uncached/cached calls): " << counter_uncached_L1_DoubleMu5_SQ_OS_ << " / " << counter_cached_L1_DoubleMu5_SQ_OS_ << std::endl;;
    std::cout << "L1_DoubleMu5_SQ_OS_Mass7to18 (uncached/cached calls): " << counter_uncached_L1_DoubleMu5_SQ_OS_Mass7to18_ << " / " << counter_cached_L1_DoubleMu5_SQ_OS_Mass7to18_ << std::endl;;
    std::cout << "L1_DoubleMu6_SQ_OS (uncached/cached calls): " << counter_uncached_L1_DoubleMu6_SQ_OS_ << " / " << counter_cached_L1_DoubleMu6_SQ_OS_ << std::endl;;
    std::cout << "L1_DoubleMu7_EG14 (uncached/cached calls): " << counter_uncached_L1_DoubleMu7_EG14_ << " / " << counter_cached_L1_DoubleMu7_EG14_ << std::endl;;
    std::cout << "L1_DoubleMu7_EG7 (uncached/cached calls): " << counter_uncached_L1_DoubleMu7_EG7_ << " / " << counter_cached_L1_DoubleMu7_EG7_ << std::endl;;
    std::cout << "L1_DoubleMu7_SQ_EG7 (uncached/cached calls): " << counter_uncached_L1_DoubleMu7_SQ_EG7_ << " / " << counter_cached_L1_DoubleMu7_SQ_EG7_ << std::endl;;
    std::cout << "L1_DoubleMu8_SQ (uncached/cached calls): " << counter_uncached_L1_DoubleMu8_SQ_ << " / " << counter_cached_L1_DoubleMu8_SQ_ << std::endl;;
    std::cout << "L1_DoubleMu9_SQ (uncached/cached calls): " << counter_uncached_L1_DoubleMu9_SQ_ << " / " << counter_cached_L1_DoubleMu9_SQ_ << std::endl;;
    std::cout << "L1_DoubleMuOpen (uncached/cached calls): " << counter_uncached_L1_DoubleMuOpen_ << " / " << counter_cached_L1_DoubleMuOpen_ << std::endl;;
    std::cout << "L1_DoubleMu_10_0_dEta_Max1p8 (uncached/cached calls): " << counter_uncached_L1_DoubleMu_10_0_dEta_Max1p8_ << " / " << counter_cached_L1_DoubleMu_10_0_dEta_Max1p8_ << std::endl;;
    std::cout << "L1_DoubleMu_10_3p5 (uncached/cached calls): " << counter_uncached_L1_DoubleMu_10_3p5_ << " / " << counter_cached_L1_DoubleMu_10_3p5_ << std::endl;;
    std::cout << "L1_DoubleMu_10_Open (uncached/cached calls): " << counter_uncached_L1_DoubleMu_10_Open_ << " / " << counter_cached_L1_DoubleMu_10_Open_ << std::endl;;
    std::cout << "L1_DoubleMu_11_4 (uncached/cached calls): " << counter_uncached_L1_DoubleMu_11_4_ << " / " << counter_cached_L1_DoubleMu_11_4_ << std::endl;;
    std::cout << "L1_DoubleMu_12_5 (uncached/cached calls): " << counter_uncached_L1_DoubleMu_12_5_ << " / " << counter_cached_L1_DoubleMu_12_5_ << std::endl;;
    std::cout << "L1_DoubleMu_12_8 (uncached/cached calls): " << counter_uncached_L1_DoubleMu_12_8_ << " / " << counter_cached_L1_DoubleMu_12_8_ << std::endl;;
    std::cout << "L1_DoubleMu_13_6 (uncached/cached calls): " << counter_uncached_L1_DoubleMu_13_6_ << " / " << counter_cached_L1_DoubleMu_13_6_ << std::endl;;
    std::cout << "L1_DoubleMu_15_5 (uncached/cached calls): " << counter_uncached_L1_DoubleMu_15_5_ << " / " << counter_cached_L1_DoubleMu_15_5_ << std::endl;;
    std::cout << "L1_DoubleMu_15_5_SQ (uncached/cached calls): " << counter_uncached_L1_DoubleMu_15_5_SQ_ << " / " << counter_cached_L1_DoubleMu_15_5_SQ_ << std::endl;;
    std::cout << "L1_DoubleMu_15_7 (uncached/cached calls): " << counter_uncached_L1_DoubleMu_15_7_ << " / " << counter_cached_L1_DoubleMu_15_7_ << std::endl;;
    std::cout << "L1_DoubleMu_15_7_Mass_Min1 (uncached/cached calls): " << counter_uncached_L1_DoubleMu_15_7_Mass_Min1_ << " / " << counter_cached_L1_DoubleMu_15_7_Mass_Min1_ << std::endl;;
    std::cout << "L1_DoubleMu_15_7_SQ (uncached/cached calls): " << counter_uncached_L1_DoubleMu_15_7_SQ_ << " / " << counter_cached_L1_DoubleMu_15_7_SQ_ << std::endl;;
    std::cout << "L1_DoubleMu_15_7_SQ_Mass_Min4 (uncached/cached calls): " << counter_uncached_L1_DoubleMu_15_7_SQ_Mass_Min4_ << " / " << counter_cached_L1_DoubleMu_15_7_SQ_Mass_Min4_ << std::endl;;
    std::cout << "L1_DoubleMu_20_2_SQ_Mass_Max20 (uncached/cached calls): " << counter_uncached_L1_DoubleMu_20_2_SQ_Mass_Max20_ << " / " << counter_cached_L1_DoubleMu_20_2_SQ_Mass_Max20_ << std::endl;;
    std::cout << "L1_DoubleTau50er (uncached/cached calls): " << counter_uncached_L1_DoubleTau50er_ << " / " << counter_cached_L1_DoubleTau50er_ << std::endl;;
    std::cout << "L1_DoubleTau50er2p1 (uncached/cached calls): " << counter_uncached_L1_DoubleTau50er2p1_ << " / " << counter_cached_L1_DoubleTau50er2p1_ << std::endl;;
    std::cout << "L1_DoubleTau70er (uncached/cached calls): " << counter_uncached_L1_DoubleTau70er_ << " / " << counter_cached_L1_DoubleTau70er_ << std::endl;;
    std::cout << "L1_DoubleTau70er2p1 (uncached/cached calls): " << counter_uncached_L1_DoubleTau70er2p1_ << " / " << counter_cached_L1_DoubleTau70er2p1_ << std::endl;;
    std::cout << "L1_EG25er2p1_HTT125er (uncached/cached calls): " << counter_uncached_L1_EG25er2p1_HTT125er_ << " / " << counter_cached_L1_EG25er2p1_HTT125er_ << std::endl;;
    std::cout << "L1_EG25er_HTT125 (uncached/cached calls): " << counter_uncached_L1_EG25er_HTT125_ << " / " << counter_cached_L1_EG25er_HTT125_ << std::endl;;
    std::cout << "L1_EG27er2p1_HTT200er (uncached/cached calls): " << counter_uncached_L1_EG27er2p1_HTT200er_ << " / " << counter_cached_L1_EG27er2p1_HTT200er_ << std::endl;;
    std::cout << "L1_EG27er_HTT200 (uncached/cached calls): " << counter_uncached_L1_EG27er_HTT200_ << " / " << counter_cached_L1_EG27er_HTT200_ << std::endl;;
    std::cout << "L1_EG40er2p1_Tau20er2p1_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_EG40er2p1_Tau20er2p1_dR_Min0p3_ << " / " << counter_cached_L1_EG40er2p1_Tau20er2p1_dR_Min0p3_ << std::endl;;
    std::cout << "L1_ETM100 (uncached/cached calls): " << counter_uncached_L1_ETM100_ << " / " << counter_cached_L1_ETM100_ << std::endl;;
    std::cout << "L1_ETM100_Jet60_dPhi_Min0p4 (uncached/cached calls): " << counter_uncached_L1_ETM100_Jet60_dPhi_Min0p4_ << " / " << counter_cached_L1_ETM100_Jet60_dPhi_Min0p4_ << std::endl;;
    std::cout << "L1_ETM105 (uncached/cached calls): " << counter_uncached_L1_ETM105_ << " / " << counter_cached_L1_ETM105_ << std::endl;;
    std::cout << "L1_ETM110 (uncached/cached calls): " << counter_uncached_L1_ETM110_ << " / " << counter_cached_L1_ETM110_ << std::endl;;
    std::cout << "L1_ETM110_Jet60_dPhi_Min0p4 (uncached/cached calls): " << counter_uncached_L1_ETM110_Jet60_dPhi_Min0p4_ << " / " << counter_cached_L1_ETM110_Jet60_dPhi_Min0p4_ << std::endl;;
    std::cout << "L1_ETM115 (uncached/cached calls): " << counter_uncached_L1_ETM115_ << " / " << counter_cached_L1_ETM115_ << std::endl;;
    std::cout << "L1_ETM120 (uncached/cached calls): " << counter_uncached_L1_ETM120_ << " / " << counter_cached_L1_ETM120_ << std::endl;;
    std::cout << "L1_ETM150 (uncached/cached calls): " << counter_uncached_L1_ETM150_ << " / " << counter_cached_L1_ETM150_ << std::endl;;
    std::cout << "L1_ETM30 (uncached/cached calls): " << counter_uncached_L1_ETM30_ << " / " << counter_cached_L1_ETM30_ << std::endl;;
    std::cout << "L1_ETM40 (uncached/cached calls): " << counter_uncached_L1_ETM40_ << " / " << counter_cached_L1_ETM40_ << std::endl;;
    std::cout << "L1_ETM50 (uncached/cached calls): " << counter_uncached_L1_ETM50_ << " / " << counter_cached_L1_ETM50_ << std::endl;;
    std::cout << "L1_ETM60 (uncached/cached calls): " << counter_uncached_L1_ETM60_ << " / " << counter_cached_L1_ETM60_ << std::endl;;
    std::cout << "L1_ETM60_Jet60_dPhi_Min0p4 (uncached/cached calls): " << counter_uncached_L1_ETM60_Jet60_dPhi_Min0p4_ << " / " << counter_cached_L1_ETM60_Jet60_dPhi_Min0p4_ << std::endl;;
    std::cout << "L1_ETM70 (uncached/cached calls): " << counter_uncached_L1_ETM70_ << " / " << counter_cached_L1_ETM70_ << std::endl;;
    std::cout << "L1_ETM70_Jet60_dPhi_Min0p4 (uncached/cached calls): " << counter_uncached_L1_ETM70_Jet60_dPhi_Min0p4_ << " / " << counter_cached_L1_ETM70_Jet60_dPhi_Min0p4_ << std::endl;;
    std::cout << "L1_ETM75 (uncached/cached calls): " << counter_uncached_L1_ETM75_ << " / " << counter_cached_L1_ETM75_ << std::endl;;
    std::cout << "L1_ETM75_Jet60_dPhi_Min0p4 (uncached/cached calls): " << counter_uncached_L1_ETM75_Jet60_dPhi_Min0p4_ << " / " << counter_cached_L1_ETM75_Jet60_dPhi_Min0p4_ << std::endl;;
    std::cout << "L1_ETM80 (uncached/cached calls): " << counter_uncached_L1_ETM80_ << " / " << counter_cached_L1_ETM80_ << std::endl;;
    std::cout << "L1_ETM80_Jet60_dPhi_Min0p4 (uncached/cached calls): " << counter_uncached_L1_ETM80_Jet60_dPhi_Min0p4_ << " / " << counter_cached_L1_ETM80_Jet60_dPhi_Min0p4_ << std::endl;;
    std::cout << "L1_ETM85 (uncached/cached calls): " << counter_uncached_L1_ETM85_ << " / " << counter_cached_L1_ETM85_ << std::endl;;
    std::cout << "L1_ETM90 (uncached/cached calls): " << counter_uncached_L1_ETM90_ << " / " << counter_cached_L1_ETM90_ << std::endl;;
    std::cout << "L1_ETM90_Jet60_dPhi_Min0p4 (uncached/cached calls): " << counter_uncached_L1_ETM90_Jet60_dPhi_Min0p4_ << " / " << counter_cached_L1_ETM90_Jet60_dPhi_Min0p4_ << std::endl;;
    std::cout << "L1_ETM95 (uncached/cached calls): " << counter_uncached_L1_ETM95_ << " / " << counter_cached_L1_ETM95_ << std::endl;;
    std::cout << "L1_ETMHF100 (uncached/cached calls): " << counter_uncached_L1_ETMHF100_ << " / " << counter_cached_L1_ETMHF100_ << std::endl;;
    std::cout << "L1_ETMHF100_HTT60 (uncached/cached calls): " << counter_uncached_L1_ETMHF100_HTT60_ << " / " << counter_cached_L1_ETMHF100_HTT60_ << std::endl;;
    std::cout << "L1_ETMHF100_HTT60er (uncached/cached calls): " << counter_uncached_L1_ETMHF100_HTT60er_ << " / " << counter_cached_L1_ETMHF100_HTT60er_ << std::endl;;
    std::cout << "L1_ETMHF100_Jet60_OR_DiJet30woTT28 (uncached/cached calls): " << counter_uncached_L1_ETMHF100_Jet60_OR_DiJet30woTT28_ << " / " << counter_cached_L1_ETMHF100_Jet60_OR_DiJet30woTT28_ << std::endl;;
    std::cout << "L1_ETMHF100_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_ETMHF100_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_ETMHF100_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30 (uncached/cached calls): " << counter_uncached_L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30_ << " / " << counter_cached_L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30_ << std::endl;;
    std::cout << "L1_ETMHF105_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_ETMHF105_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_ETMHF105_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_ETMHF110 (uncached/cached calls): " << counter_uncached_L1_ETMHF110_ << " / " << counter_cached_L1_ETMHF110_ << std::endl;;
    std::cout << "L1_ETMHF110_HTT60 (uncached/cached calls): " << counter_uncached_L1_ETMHF110_HTT60_ << " / " << counter_cached_L1_ETMHF110_HTT60_ << std::endl;;
    std::cout << "L1_ETMHF110_HTT60er (uncached/cached calls): " << counter_uncached_L1_ETMHF110_HTT60er_ << " / " << counter_cached_L1_ETMHF110_HTT60er_ << std::endl;;
    std::cout << "L1_ETMHF110_HTT60er_NotSecondBunchInTrain (uncached/cached calls): " << counter_uncached_L1_ETMHF110_HTT60er_NotSecondBunchInTrain_ << " / " << counter_cached_L1_ETMHF110_HTT60er_NotSecondBunchInTrain_ << std::endl;;
    std::cout << "L1_ETMHF110_Jet60_OR_DiJet30woTT28 (uncached/cached calls): " << counter_uncached_L1_ETMHF110_Jet60_OR_DiJet30woTT28_ << " / " << counter_cached_L1_ETMHF110_Jet60_OR_DiJet30woTT28_ << std::endl;;
    std::cout << "L1_ETMHF110_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_ETMHF110_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_ETMHF110_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30 (uncached/cached calls): " << counter_uncached_L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30_ << " / " << counter_cached_L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30_ << std::endl;;
    std::cout << "L1_ETMHF115_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_ETMHF115_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_ETMHF115_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_ETMHF120 (uncached/cached calls): " << counter_uncached_L1_ETMHF120_ << " / " << counter_cached_L1_ETMHF120_ << std::endl;;
    std::cout << "L1_ETMHF120_HTT60 (uncached/cached calls): " << counter_uncached_L1_ETMHF120_HTT60_ << " / " << counter_cached_L1_ETMHF120_HTT60_ << std::endl;;
    std::cout << "L1_ETMHF120_HTT60er (uncached/cached calls): " << counter_uncached_L1_ETMHF120_HTT60er_ << " / " << counter_cached_L1_ETMHF120_HTT60er_ << std::endl;;
    std::cout << "L1_ETMHF120_Jet60_OR_DiJet30woTT28 (uncached/cached calls): " << counter_uncached_L1_ETMHF120_Jet60_OR_DiJet30woTT28_ << " / " << counter_cached_L1_ETMHF120_Jet60_OR_DiJet30woTT28_ << std::endl;;
    std::cout << "L1_ETMHF120_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_ETMHF120_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_ETMHF120_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_ETMHF120_NotSecondBunchInTrain (uncached/cached calls): " << counter_uncached_L1_ETMHF120_NotSecondBunchInTrain_ << " / " << counter_cached_L1_ETMHF120_NotSecondBunchInTrain_ << std::endl;;
    std::cout << "L1_ETMHF130 (uncached/cached calls): " << counter_uncached_L1_ETMHF130_ << " / " << counter_cached_L1_ETMHF130_ << std::endl;;
    std::cout << "L1_ETMHF130_HTT60er (uncached/cached calls): " << counter_uncached_L1_ETMHF130_HTT60er_ << " / " << counter_cached_L1_ETMHF130_HTT60er_ << std::endl;;
    std::cout << "L1_ETMHF140 (uncached/cached calls): " << counter_uncached_L1_ETMHF140_ << " / " << counter_cached_L1_ETMHF140_ << std::endl;;
    std::cout << "L1_ETMHF150 (uncached/cached calls): " << counter_uncached_L1_ETMHF150_ << " / " << counter_cached_L1_ETMHF150_ << std::endl;;
    std::cout << "L1_ETMHF70 (uncached/cached calls): " << counter_uncached_L1_ETMHF70_ << " / " << counter_cached_L1_ETMHF70_ << std::endl;;
    std::cout << "L1_ETMHF70_HTT60er (uncached/cached calls): " << counter_uncached_L1_ETMHF70_HTT60er_ << " / " << counter_cached_L1_ETMHF70_HTT60er_ << std::endl;;
    std::cout << "L1_ETMHF70_Jet60_OR_DiJet30woTT28 (uncached/cached calls): " << counter_uncached_L1_ETMHF70_Jet60_OR_DiJet30woTT28_ << " / " << counter_cached_L1_ETMHF70_Jet60_OR_DiJet30woTT28_ << std::endl;;
    std::cout << "L1_ETMHF70_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_ETMHF70_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_ETMHF70_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30 (uncached/cached calls): " << counter_uncached_L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30_ << " / " << counter_cached_L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30_ << std::endl;;
    std::cout << "L1_ETMHF75_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_ETMHF75_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_ETMHF75_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_ETMHF80 (uncached/cached calls): " << counter_uncached_L1_ETMHF80_ << " / " << counter_cached_L1_ETMHF80_ << std::endl;;
    std::cout << "L1_ETMHF80_HTT60 (uncached/cached calls): " << counter_uncached_L1_ETMHF80_HTT60_ << " / " << counter_cached_L1_ETMHF80_HTT60_ << std::endl;;
    std::cout << "L1_ETMHF80_HTT60er (uncached/cached calls): " << counter_uncached_L1_ETMHF80_HTT60er_ << " / " << counter_cached_L1_ETMHF80_HTT60er_ << std::endl;;
    std::cout << "L1_ETMHF80_Jet60_OR_DiJet30woTT28 (uncached/cached calls): " << counter_uncached_L1_ETMHF80_Jet60_OR_DiJet30woTT28_ << " / " << counter_cached_L1_ETMHF80_Jet60_OR_DiJet30woTT28_ << std::endl;;
    std::cout << "L1_ETMHF80_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_ETMHF80_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_ETMHF80_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30 (uncached/cached calls): " << counter_uncached_L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30_ << " / " << counter_cached_L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30_ << std::endl;;
    std::cout << "L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1 (uncached/cached calls): " << counter_uncached_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1_ << " / " << counter_cached_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1_ << std::endl;;
    std::cout << "L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6 (uncached/cached calls): " << counter_uncached_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6_ << " / " << counter_cached_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6_ << std::endl;;
    std::cout << "L1_ETMHF85_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_ETMHF85_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_ETMHF85_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_ETMHF90 (uncached/cached calls): " << counter_uncached_L1_ETMHF90_ << " / " << counter_cached_L1_ETMHF90_ << std::endl;;
    std::cout << "L1_ETMHF90_HTT60 (uncached/cached calls): " << counter_uncached_L1_ETMHF90_HTT60_ << " / " << counter_cached_L1_ETMHF90_HTT60_ << std::endl;;
    std::cout << "L1_ETMHF90_HTT60er (uncached/cached calls): " << counter_uncached_L1_ETMHF90_HTT60er_ << " / " << counter_cached_L1_ETMHF90_HTT60er_ << std::endl;;
    std::cout << "L1_ETMHF90_Jet60_OR_DiJet30woTT28 (uncached/cached calls): " << counter_uncached_L1_ETMHF90_Jet60_OR_DiJet30woTT28_ << " / " << counter_cached_L1_ETMHF90_Jet60_OR_DiJet30woTT28_ << std::endl;;
    std::cout << "L1_ETMHF90_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_ETMHF90_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_ETMHF90_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30 (uncached/cached calls): " << counter_uncached_L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30_ << " / " << counter_cached_L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30_ << std::endl;;
    std::cout << "L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1 (uncached/cached calls): " << counter_uncached_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1_ << " / " << counter_cached_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1_ << std::endl;;
    std::cout << "L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6 (uncached/cached calls): " << counter_uncached_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6_ << " / " << counter_cached_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6_ << std::endl;;
    std::cout << "L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1 (uncached/cached calls): " << counter_uncached_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1_ << " / " << counter_cached_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1_ << std::endl;;
    std::cout << "L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6 (uncached/cached calls): " << counter_uncached_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6_ << " / " << counter_cached_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6_ << std::endl;;
    std::cout << "L1_ETMHF95_Jet60_OR_DoubleJet30 (uncached/cached calls): " << counter_uncached_L1_ETMHF95_Jet60_OR_DoubleJet30_ << " / " << counter_cached_L1_ETMHF95_Jet60_OR_DoubleJet30_ << std::endl;;
    std::cout << "L1_ETT100_BptxAND (uncached/cached calls): " << counter_uncached_L1_ETT100_BptxAND_ << " / " << counter_cached_L1_ETT100_BptxAND_ << std::endl;;
    std::cout << "L1_ETT110_BptxAND (uncached/cached calls): " << counter_uncached_L1_ETT110_BptxAND_ << " / " << counter_cached_L1_ETT110_BptxAND_ << std::endl;;
    std::cout << "L1_ETT1200 (uncached/cached calls): " << counter_uncached_L1_ETT1200_ << " / " << counter_cached_L1_ETT1200_ << std::endl;;
    std::cout << "L1_ETT15_BptxAND (uncached/cached calls): " << counter_uncached_L1_ETT15_BptxAND_ << " / " << counter_cached_L1_ETT15_BptxAND_ << std::endl;;
    std::cout << "L1_ETT1600 (uncached/cached calls): " << counter_uncached_L1_ETT1600_ << " / " << counter_cached_L1_ETT1600_ << std::endl;;
    std::cout << "L1_ETT2000 (uncached/cached calls): " << counter_uncached_L1_ETT2000_ << " / " << counter_cached_L1_ETT2000_ << std::endl;;
    std::cout << "L1_ETT25 (uncached/cached calls): " << counter_uncached_L1_ETT25_ << " / " << counter_cached_L1_ETT25_ << std::endl;;
    std::cout << "L1_ETT25_BptxAND (uncached/cached calls): " << counter_uncached_L1_ETT25_BptxAND_ << " / " << counter_cached_L1_ETT25_BptxAND_ << std::endl;;
    std::cout << "L1_ETT35_BptxAND (uncached/cached calls): " << counter_uncached_L1_ETT35_BptxAND_ << " / " << counter_cached_L1_ETT35_BptxAND_ << std::endl;;
    std::cout << "L1_ETT40 (uncached/cached calls): " << counter_uncached_L1_ETT40_ << " / " << counter_cached_L1_ETT40_ << std::endl;;
    std::cout << "L1_ETT40_BptxAND (uncached/cached calls): " << counter_uncached_L1_ETT40_BptxAND_ << " / " << counter_cached_L1_ETT40_BptxAND_ << std::endl;;
    std::cout << "L1_ETT50_BptxAND (uncached/cached calls): " << counter_uncached_L1_ETT50_BptxAND_ << " / " << counter_cached_L1_ETT50_BptxAND_ << std::endl;;
    std::cout << "L1_ETT55_BptxAND (uncached/cached calls): " << counter_uncached_L1_ETT55_BptxAND_ << " / " << counter_cached_L1_ETT55_BptxAND_ << std::endl;;
    std::cout << "L1_ETT60 (uncached/cached calls): " << counter_uncached_L1_ETT60_ << " / " << counter_cached_L1_ETT60_ << std::endl;;
    std::cout << "L1_ETT60_BptxAND (uncached/cached calls): " << counter_uncached_L1_ETT60_BptxAND_ << " / " << counter_cached_L1_ETT60_BptxAND_ << std::endl;;
    std::cout << "L1_ETT70_BptxAND (uncached/cached calls): " << counter_uncached_L1_ETT70_BptxAND_ << " / " << counter_cached_L1_ETT70_BptxAND_ << std::endl;;
    std::cout << "L1_ETT75_BptxAND (uncached/cached calls): " << counter_uncached_L1_ETT75_BptxAND_ << " / " << counter_cached_L1_ETT75_BptxAND_ << std::endl;;
    std::cout << "L1_ETT80_BptxAND (uncached/cached calls): " << counter_uncached_L1_ETT80_BptxAND_ << " / " << counter_cached_L1_ETT80_BptxAND_ << std::endl;;
    std::cout << "L1_ETT85_BptxAND (uncached/cached calls): " << counter_uncached_L1_ETT85_BptxAND_ << " / " << counter_cached_L1_ETT85_BptxAND_ << std::endl;;
    std::cout << "L1_ETT90_BptxAND (uncached/cached calls): " << counter_uncached_L1_ETT90_BptxAND_ << " / " << counter_cached_L1_ETT90_BptxAND_ << std::endl;;
    std::cout << "L1_ETT95_BptxAND (uncached/cached calls): " << counter_uncached_L1_ETT95_BptxAND_ << " / " << counter_cached_L1_ETT95_BptxAND_ << std::endl;;
    std::cout << "L1_FirstBunchAfterTrain (uncached/cached calls): " << counter_uncached_L1_FirstBunchAfterTrain_ << " / " << counter_cached_L1_FirstBunchAfterTrain_ << std::endl;;
    std::cout << "L1_FirstBunchBeforeTrain (uncached/cached calls): " << counter_uncached_L1_FirstBunchBeforeTrain_ << " / " << counter_cached_L1_FirstBunchBeforeTrain_ << std::endl;;
    std::cout << "L1_FirstBunchInTrain (uncached/cached calls): " << counter_uncached_L1_FirstBunchInTrain_ << " / " << counter_cached_L1_FirstBunchInTrain_ << std::endl;;
    std::cout << "L1_FirstCollisionInOrbit (uncached/cached calls): " << counter_uncached_L1_FirstCollisionInOrbit_ << " / " << counter_cached_L1_FirstCollisionInOrbit_ << std::endl;;
    std::cout << "L1_FirstCollisionInTrain (uncached/cached calls): " << counter_uncached_L1_FirstCollisionInTrain_ << " / " << counter_cached_L1_FirstCollisionInTrain_ << std::endl;;
    std::cout << "L1_HCAL_LaserMon_Trig (uncached/cached calls): " << counter_uncached_L1_HCAL_LaserMon_Trig_ << " / " << counter_cached_L1_HCAL_LaserMon_Trig_ << std::endl;;
    std::cout << "L1_HCAL_LaserMon_Veto (uncached/cached calls): " << counter_uncached_L1_HCAL_LaserMon_Veto_ << " / " << counter_cached_L1_HCAL_LaserMon_Veto_ << std::endl;;
    std::cout << "L1_HTM100 (uncached/cached calls): " << counter_uncached_L1_HTM100_ << " / " << counter_cached_L1_HTM100_ << std::endl;;
    std::cout << "L1_HTM120 (uncached/cached calls): " << counter_uncached_L1_HTM120_ << " / " << counter_cached_L1_HTM120_ << std::endl;;
    std::cout << "L1_HTM130 (uncached/cached calls): " << counter_uncached_L1_HTM130_ << " / " << counter_cached_L1_HTM130_ << std::endl;;
    std::cout << "L1_HTM140 (uncached/cached calls): " << counter_uncached_L1_HTM140_ << " / " << counter_cached_L1_HTM140_ << std::endl;;
    std::cout << "L1_HTM150 (uncached/cached calls): " << counter_uncached_L1_HTM150_ << " / " << counter_cached_L1_HTM150_ << std::endl;;
    std::cout << "L1_HTM50 (uncached/cached calls): " << counter_uncached_L1_HTM50_ << " / " << counter_cached_L1_HTM50_ << std::endl;;
    std::cout << "L1_HTM60_HTT260 (uncached/cached calls): " << counter_uncached_L1_HTM60_HTT260_ << " / " << counter_cached_L1_HTM60_HTT260_ << std::endl;;
    std::cout << "L1_HTM70 (uncached/cached calls): " << counter_uncached_L1_HTM70_ << " / " << counter_cached_L1_HTM70_ << std::endl;;
    std::cout << "L1_HTM80 (uncached/cached calls): " << counter_uncached_L1_HTM80_ << " / " << counter_cached_L1_HTM80_ << std::endl;;
    std::cout << "L1_HTM80_HTT220 (uncached/cached calls): " << counter_uncached_L1_HTM80_HTT220_ << " / " << counter_cached_L1_HTM80_HTT220_ << std::endl;;
    std::cout << "L1_HTT120 (uncached/cached calls): " << counter_uncached_L1_HTT120_ << " / " << counter_cached_L1_HTT120_ << std::endl;;
    std::cout << "L1_HTT120_SingleLLPJet40 (uncached/cached calls): " << counter_uncached_L1_HTT120_SingleLLPJet40_ << " / " << counter_cached_L1_HTT120_SingleLLPJet40_ << std::endl;;
    std::cout << "L1_HTT120er (uncached/cached calls): " << counter_uncached_L1_HTT120er_ << " / " << counter_cached_L1_HTT120er_ << std::endl;;
    std::cout << "L1_HTT160 (uncached/cached calls): " << counter_uncached_L1_HTT160_ << " / " << counter_cached_L1_HTT160_ << std::endl;;
    std::cout << "L1_HTT160_SingleLLPJet50 (uncached/cached calls): " << counter_uncached_L1_HTT160_SingleLLPJet50_ << " / " << counter_cached_L1_HTT160_SingleLLPJet50_ << std::endl;;
    std::cout << "L1_HTT160er (uncached/cached calls): " << counter_uncached_L1_HTT160er_ << " / " << counter_cached_L1_HTT160er_ << std::endl;;
    std::cout << "L1_HTT200 (uncached/cached calls): " << counter_uncached_L1_HTT200_ << " / " << counter_cached_L1_HTT200_ << std::endl;;
    std::cout << "L1_HTT200_SingleLLPJet60 (uncached/cached calls): " << counter_uncached_L1_HTT200_SingleLLPJet60_ << " / " << counter_cached_L1_HTT200_SingleLLPJet60_ << std::endl;;
    std::cout << "L1_HTT200er (uncached/cached calls): " << counter_uncached_L1_HTT200er_ << " / " << counter_cached_L1_HTT200er_ << std::endl;;
    std::cout << "L1_HTT220 (uncached/cached calls): " << counter_uncached_L1_HTT220_ << " / " << counter_cached_L1_HTT220_ << std::endl;;
    std::cout << "L1_HTT220er (uncached/cached calls): " << counter_uncached_L1_HTT220er_ << " / " << counter_cached_L1_HTT220er_ << std::endl;;
    std::cout << "L1_HTT240 (uncached/cached calls): " << counter_uncached_L1_HTT240_ << " / " << counter_cached_L1_HTT240_ << std::endl;;
    std::cout << "L1_HTT240_SingleLLPJet70 (uncached/cached calls): " << counter_uncached_L1_HTT240_SingleLLPJet70_ << " / " << counter_cached_L1_HTT240_SingleLLPJet70_ << std::endl;;
    std::cout << "L1_HTT240er (uncached/cached calls): " << counter_uncached_L1_HTT240er_ << " / " << counter_cached_L1_HTT240er_ << std::endl;;
    std::cout << "L1_HTT250er_QuadJet_70_55_40_35_er2p5 (uncached/cached calls): " << counter_uncached_L1_HTT250er_QuadJet_70_55_40_35_er2p5_ << " / " << counter_cached_L1_HTT250er_QuadJet_70_55_40_35_er2p5_ << std::endl;;
    std::cout << "L1_HTT255 (uncached/cached calls): " << counter_uncached_L1_HTT255_ << " / " << counter_cached_L1_HTT255_ << std::endl;;
    std::cout << "L1_HTT255er (uncached/cached calls): " << counter_uncached_L1_HTT255er_ << " / " << counter_cached_L1_HTT255er_ << std::endl;;
    std::cout << "L1_HTT270 (uncached/cached calls): " << counter_uncached_L1_HTT270_ << " / " << counter_cached_L1_HTT270_ << std::endl;;
    std::cout << "L1_HTT270er (uncached/cached calls): " << counter_uncached_L1_HTT270er_ << " / " << counter_cached_L1_HTT270er_ << std::endl;;
    std::cout << "L1_HTT280 (uncached/cached calls): " << counter_uncached_L1_HTT280_ << " / " << counter_cached_L1_HTT280_ << std::endl;;
    std::cout << "L1_HTT280er (uncached/cached calls): " << counter_uncached_L1_HTT280er_ << " / " << counter_cached_L1_HTT280er_ << std::endl;;
    std::cout << "L1_HTT280er_QuadJet_70_55_40_35_er2p4 (uncached/cached calls): " << counter_uncached_L1_HTT280er_QuadJet_70_55_40_35_er2p4_ << " / " << counter_cached_L1_HTT280er_QuadJet_70_55_40_35_er2p4_ << std::endl;;
    std::cout << "L1_HTT280er_QuadJet_70_55_40_35_er2p5 (uncached/cached calls): " << counter_uncached_L1_HTT280er_QuadJet_70_55_40_35_er2p5_ << " / " << counter_cached_L1_HTT280er_QuadJet_70_55_40_35_er2p5_ << std::endl;;
    std::cout << "L1_HTT300 (uncached/cached calls): " << counter_uncached_L1_HTT300_ << " / " << counter_cached_L1_HTT300_ << std::endl;;
    std::cout << "L1_HTT300er (uncached/cached calls): " << counter_uncached_L1_HTT300er_ << " / " << counter_cached_L1_HTT300er_ << std::endl;;
    std::cout << "L1_HTT300er_QuadJet_70_55_40_35_er2p5 (uncached/cached calls): " << counter_uncached_L1_HTT300er_QuadJet_70_55_40_35_er2p5_ << " / " << counter_cached_L1_HTT300er_QuadJet_70_55_40_35_er2p5_ << std::endl;;
    std::cout << "L1_HTT320 (uncached/cached calls): " << counter_uncached_L1_HTT320_ << " / " << counter_cached_L1_HTT320_ << std::endl;;
    std::cout << "L1_HTT320er (uncached/cached calls): " << counter_uncached_L1_HTT320er_ << " / " << counter_cached_L1_HTT320er_ << std::endl;;
    std::cout << "L1_HTT320er_QuadJet_70_55_40_40_er2p4 (uncached/cached calls): " << counter_uncached_L1_HTT320er_QuadJet_70_55_40_40_er2p4_ << " / " << counter_cached_L1_HTT320er_QuadJet_70_55_40_40_er2p4_ << std::endl;;
    std::cout << "L1_HTT320er_QuadJet_70_55_40_40_er2p5 (uncached/cached calls): " << counter_uncached_L1_HTT320er_QuadJet_70_55_40_40_er2p5_ << " / " << counter_cached_L1_HTT320er_QuadJet_70_55_40_40_er2p5_ << std::endl;;
    std::cout << "L1_HTT320er_QuadJet_70_55_45_45_er2p5 (uncached/cached calls): " << counter_uncached_L1_HTT320er_QuadJet_70_55_45_45_er2p5_ << " / " << counter_cached_L1_HTT320er_QuadJet_70_55_45_45_er2p5_ << std::endl;;
    std::cout << "L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3 (uncached/cached calls): " << counter_uncached_L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3_ << " / " << counter_cached_L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3_ << std::endl;;
    std::cout << "L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3 (uncached/cached calls): " << counter_uncached_L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3_ << " / " << counter_cached_L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3_ << std::endl;;
    std::cout << "L1_HTT340er (uncached/cached calls): " << counter_uncached_L1_HTT340er_ << " / " << counter_cached_L1_HTT340er_ << std::endl;;
    std::cout << "L1_HTT340er_QuadJet_70_55_40_40_er2p5 (uncached/cached calls): " << counter_uncached_L1_HTT340er_QuadJet_70_55_40_40_er2p5_ << " / " << counter_cached_L1_HTT340er_QuadJet_70_55_40_40_er2p5_ << std::endl;;
    std::cout << "L1_HTT340er_QuadJet_70_55_45_45_er2p5 (uncached/cached calls): " << counter_uncached_L1_HTT340er_QuadJet_70_55_45_45_er2p5_ << " / " << counter_cached_L1_HTT340er_QuadJet_70_55_45_45_er2p5_ << std::endl;;
    std::cout << "L1_HTT360er (uncached/cached calls): " << counter_uncached_L1_HTT360er_ << " / " << counter_cached_L1_HTT360er_ << std::endl;;
    std::cout << "L1_HTT380er (uncached/cached calls): " << counter_uncached_L1_HTT380er_ << " / " << counter_cached_L1_HTT380er_ << std::endl;;
    std::cout << "L1_HTT400er (uncached/cached calls): " << counter_uncached_L1_HTT400er_ << " / " << counter_cached_L1_HTT400er_ << std::endl;;
    std::cout << "L1_HTT450er (uncached/cached calls): " << counter_uncached_L1_HTT450er_ << " / " << counter_cached_L1_HTT450er_ << std::endl;;
    std::cout << "L1_HTT500er (uncached/cached calls): " << counter_uncached_L1_HTT500er_ << " / " << counter_cached_L1_HTT500er_ << std::endl;;
    std::cout << "L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2 (uncached/cached calls): " << counter_uncached_L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2_ << " / " << counter_cached_L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2_ << std::endl;;
    std::cout << "L1_IsoEG18er_IsoTau24er_dEta_Min0p2 (uncached/cached calls): " << counter_uncached_L1_IsoEG18er_IsoTau24er_dEta_Min0p2_ << " / " << counter_cached_L1_IsoEG18er_IsoTau24er_dEta_Min0p2_ << std::endl;;
    std::cout << "L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2 (uncached/cached calls): " << counter_uncached_L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2_ << " / " << counter_cached_L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2_ << std::endl;;
    std::cout << "L1_IsoEG20er_IsoTau25er_dEta_Min0p2 (uncached/cached calls): " << counter_uncached_L1_IsoEG20er_IsoTau25er_dEta_Min0p2_ << " / " << counter_cached_L1_IsoEG20er_IsoTau25er_dEta_Min0p2_ << std::endl;;
    std::cout << "L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2 (uncached/cached calls): " << counter_uncached_L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2_ << " / " << counter_cached_L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2_ << std::endl;;
    std::cout << "L1_IsoEG22er_IsoTau26er_dEta_Min0p2 (uncached/cached calls): " << counter_uncached_L1_IsoEG22er_IsoTau26er_dEta_Min0p2_ << " / " << counter_cached_L1_IsoEG22er_IsoTau26er_dEta_Min0p2_ << std::endl;;
    std::cout << "L1_IsoEG22er_Tau20er_dEta_Min0p2 (uncached/cached calls): " << counter_uncached_L1_IsoEG22er_Tau20er_dEta_Min0p2_ << " / " << counter_cached_L1_IsoEG22er_Tau20er_dEta_Min0p2_ << std::endl;;
    std::cout << "L1_IsoEG24er2p1_HTT100er (uncached/cached calls): " << counter_uncached_L1_IsoEG24er2p1_HTT100er_ << " / " << counter_cached_L1_IsoEG24er2p1_HTT100er_ << std::endl;;
    std::cout << "L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3_ << " / " << counter_cached_L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3_ << std::endl;;
    std::cout << "L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0 (uncached/cached calls): " << counter_uncached_L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_ << " / " << counter_cached_L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_ << std::endl;;
    std::cout << "L1_IsoEG26er2p1_HTT100er (uncached/cached calls): " << counter_uncached_L1_IsoEG26er2p1_HTT100er_ << " / " << counter_cached_L1_IsoEG26er2p1_HTT100er_ << std::endl;;
    std::cout << "L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3_ << " / " << counter_cached_L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3_ << std::endl;;
    std::cout << "L1_IsoEG28er2p1_HTT100er (uncached/cached calls): " << counter_uncached_L1_IsoEG28er2p1_HTT100er_ << " / " << counter_cached_L1_IsoEG28er2p1_HTT100er_ << std::endl;;
    std::cout << "L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3_ << " / " << counter_cached_L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3_ << std::endl;;
    std::cout << "L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3_ << " / " << counter_cached_L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3_ << std::endl;;
    std::cout << "L1_IsoEG32er2p5_Mt40 (uncached/cached calls): " << counter_uncached_L1_IsoEG32er2p5_Mt40_ << " / " << counter_cached_L1_IsoEG32er2p5_Mt40_ << std::endl;;
    std::cout << "L1_IsoEG32er2p5_Mt44 (uncached/cached calls): " << counter_uncached_L1_IsoEG32er2p5_Mt44_ << " / " << counter_cached_L1_IsoEG32er2p5_Mt44_ << std::endl;;
    std::cout << "L1_IsoEG32er2p5_Mt48 (uncached/cached calls): " << counter_uncached_L1_IsoEG32er2p5_Mt48_ << " / " << counter_cached_L1_IsoEG32er2p5_Mt48_ << std::endl;;
    std::cout << "L1_IsoEG33_Mt40 (uncached/cached calls): " << counter_uncached_L1_IsoEG33_Mt40_ << " / " << counter_cached_L1_IsoEG33_Mt40_ << std::endl;;
    std::cout << "L1_IsoEG33_Mt44 (uncached/cached calls): " << counter_uncached_L1_IsoEG33_Mt44_ << " / " << counter_cached_L1_IsoEG33_Mt44_ << std::endl;;
    std::cout << "L1_IsoEG33_Mt48 (uncached/cached calls): " << counter_uncached_L1_IsoEG33_Mt48_ << " / " << counter_cached_L1_IsoEG33_Mt48_ << std::endl;;
    std::cout << "L1_IsoTau40er2p1_ETMHF100 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er2p1_ETMHF100_ << " / " << counter_cached_L1_IsoTau40er2p1_ETMHF100_ << std::endl;;
    std::cout << "L1_IsoTau40er2p1_ETMHF110 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er2p1_ETMHF110_ << " / " << counter_cached_L1_IsoTau40er2p1_ETMHF110_ << std::endl;;
    std::cout << "L1_IsoTau40er2p1_ETMHF120 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er2p1_ETMHF120_ << " / " << counter_cached_L1_IsoTau40er2p1_ETMHF120_ << std::endl;;
    std::cout << "L1_IsoTau40er2p1_ETMHF80 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er2p1_ETMHF80_ << " / " << counter_cached_L1_IsoTau40er2p1_ETMHF80_ << std::endl;;
    std::cout << "L1_IsoTau40er2p1_ETMHF90 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er2p1_ETMHF90_ << " / " << counter_cached_L1_IsoTau40er2p1_ETMHF90_ << std::endl;;
    std::cout << "L1_IsoTau40er_ETM100 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er_ETM100_ << " / " << counter_cached_L1_IsoTau40er_ETM100_ << std::endl;;
    std::cout << "L1_IsoTau40er_ETM105 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er_ETM105_ << " / " << counter_cached_L1_IsoTau40er_ETM105_ << std::endl;;
    std::cout << "L1_IsoTau40er_ETM110 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er_ETM110_ << " / " << counter_cached_L1_IsoTau40er_ETM110_ << std::endl;;
    std::cout << "L1_IsoTau40er_ETM115 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er_ETM115_ << " / " << counter_cached_L1_IsoTau40er_ETM115_ << std::endl;;
    std::cout << "L1_IsoTau40er_ETM120 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er_ETM120_ << " / " << counter_cached_L1_IsoTau40er_ETM120_ << std::endl;;
    std::cout << "L1_IsoTau40er_ETM80 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er_ETM80_ << " / " << counter_cached_L1_IsoTau40er_ETM80_ << std::endl;;
    std::cout << "L1_IsoTau40er_ETM85 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er_ETM85_ << " / " << counter_cached_L1_IsoTau40er_ETM85_ << std::endl;;
    std::cout << "L1_IsoTau40er_ETM90 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er_ETM90_ << " / " << counter_cached_L1_IsoTau40er_ETM90_ << std::endl;;
    std::cout << "L1_IsoTau40er_ETM95 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er_ETM95_ << " / " << counter_cached_L1_IsoTau40er_ETM95_ << std::endl;;
    std::cout << "L1_IsoTau40er_ETMHF100 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er_ETMHF100_ << " / " << counter_cached_L1_IsoTau40er_ETMHF100_ << std::endl;;
    std::cout << "L1_IsoTau40er_ETMHF110 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er_ETMHF110_ << " / " << counter_cached_L1_IsoTau40er_ETMHF110_ << std::endl;;
    std::cout << "L1_IsoTau40er_ETMHF120 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er_ETMHF120_ << " / " << counter_cached_L1_IsoTau40er_ETMHF120_ << std::endl;;
    std::cout << "L1_IsoTau40er_ETMHF80 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er_ETMHF80_ << " / " << counter_cached_L1_IsoTau40er_ETMHF80_ << std::endl;;
    std::cout << "L1_IsoTau40er_ETMHF90 (uncached/cached calls): " << counter_uncached_L1_IsoTau40er_ETMHF90_ << " / " << counter_cached_L1_IsoTau40er_ETMHF90_ << std::endl;;
    std::cout << "L1_IsoTau52er2p1_QuadJet36er2p5 (uncached/cached calls): " << counter_uncached_L1_IsoTau52er2p1_QuadJet36er2p5_ << " / " << counter_cached_L1_IsoTau52er2p1_QuadJet36er2p5_ << std::endl;;
    std::cout << "L1_IsolatedBunch (uncached/cached calls): " << counter_uncached_L1_IsolatedBunch_ << " / " << counter_cached_L1_IsolatedBunch_ << std::endl;;
    std::cout << "L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0 (uncached/cached calls): " << counter_uncached_L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_ << " / " << counter_cached_L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_ << std::endl;;
    std::cout << "L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0 (uncached/cached calls): " << counter_uncached_L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_ << " / " << counter_cached_L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_ << std::endl;;
    std::cout << "L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0 (uncached/cached calls): " << counter_uncached_L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_ << " / " << counter_cached_L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_ << std::endl;;
    std::cout << "L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0 (uncached/cached calls): " << counter_uncached_L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_ << " / " << counter_cached_L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_ << std::endl;;
    std::cout << "L1_LastBunchInTrain (uncached/cached calls): " << counter_uncached_L1_LastBunchInTrain_ << " / " << counter_cached_L1_LastBunchInTrain_ << std::endl;;
    std::cout << "L1_LastCollisionInTrain (uncached/cached calls): " << counter_uncached_L1_LastCollisionInTrain_ << " / " << counter_cached_L1_LastCollisionInTrain_ << std::endl;;
    std::cout << "L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3_ << " / " << counter_cached_L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3_ << std::endl;;
    std::cout << "L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3_ << " / " << counter_cached_L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3_ << std::endl;;
    std::cout << "L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3_ << " / " << counter_cached_L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3_ << std::endl;;
    std::cout << "L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3_ << " / " << counter_cached_L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3_ << std::endl;;
    std::cout << "L1_LooseIsoEG24er2p1_HTT100er (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG24er2p1_HTT100er_ << " / " << counter_cached_L1_LooseIsoEG24er2p1_HTT100er_ << std::endl;;
    std::cout << "L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3_ << " / " << counter_cached_L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3_ << std::endl;;
    std::cout << "L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3_ << " / " << counter_cached_L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3_ << std::endl;;
    std::cout << "L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3_ << " / " << counter_cached_L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3_ << std::endl;;
    std::cout << "L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7_ << " / " << counter_cached_L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7_ << std::endl;;
    std::cout << "L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_ << " / " << counter_cached_L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_ << std::endl;;
    std::cout << "L1_LooseIsoEG26er2p1_HTT100er (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG26er2p1_HTT100er_ << " / " << counter_cached_L1_LooseIsoEG26er2p1_HTT100er_ << std::endl;;
    std::cout << "L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3_ << " / " << counter_cached_L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3_ << std::endl;;
    std::cout << "L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3_ << " / " << counter_cached_L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3_ << std::endl;;
    std::cout << "L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3_ << " / " << counter_cached_L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3_ << std::endl;;
    std::cout << "L1_LooseIsoEG28er2p1_HTT100er (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG28er2p1_HTT100er_ << " / " << counter_cached_L1_LooseIsoEG28er2p1_HTT100er_ << std::endl;;
    std::cout << "L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3_ << " / " << counter_cached_L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3_ << std::endl;;
    std::cout << "L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3_ << " / " << counter_cached_L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3_ << std::endl;;
    std::cout << "L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3_ << " / " << counter_cached_L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3_ << std::endl;;
    std::cout << "L1_LooseIsoEG30er2p1_HTT100er (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG30er2p1_HTT100er_ << " / " << counter_cached_L1_LooseIsoEG30er2p1_HTT100er_ << std::endl;;
    std::cout << "L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3_ << " / " << counter_cached_L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3_ << std::endl;;
    std::cout << "L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3_ << " / " << counter_cached_L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3_ << std::endl;;
    std::cout << "L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3 (uncached/cached calls): " << counter_uncached_L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3_ << " / " << counter_cached_L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3_ << std::endl;;
    std::cout << "L1_MU20_EG15 (uncached/cached calls): " << counter_uncached_L1_MU20_EG15_ << " / " << counter_cached_L1_MU20_EG15_ << std::endl;;
    std::cout << "L1_MinimumBiasHF0 (uncached/cached calls): " << counter_uncached_L1_MinimumBiasHF0_ << " / " << counter_cached_L1_MinimumBiasHF0_ << std::endl;;
    std::cout << "L1_MinimumBiasHF0_AND (uncached/cached calls): " << counter_uncached_L1_MinimumBiasHF0_AND_ << " / " << counter_cached_L1_MinimumBiasHF0_AND_ << std::endl;;
    std::cout << "L1_MinimumBiasHF0_AND_BptxAND (uncached/cached calls): " << counter_uncached_L1_MinimumBiasHF0_AND_BptxAND_ << " / " << counter_cached_L1_MinimumBiasHF0_AND_BptxAND_ << std::endl;;
    std::cout << "L1_MinimumBiasHF0_OR (uncached/cached calls): " << counter_uncached_L1_MinimumBiasHF0_OR_ << " / " << counter_cached_L1_MinimumBiasHF0_OR_ << std::endl;;
    std::cout << "L1_MinimumBiasHF0_OR_BptxAND (uncached/cached calls): " << counter_uncached_L1_MinimumBiasHF0_OR_BptxAND_ << " / " << counter_cached_L1_MinimumBiasHF0_OR_BptxAND_ << std::endl;;
    std::cout << "L1_MinimumBiasHF1_AND (uncached/cached calls): " << counter_uncached_L1_MinimumBiasHF1_AND_ << " / " << counter_cached_L1_MinimumBiasHF1_AND_ << std::endl;;
    std::cout << "L1_MinimumBiasHF1_AND_BptxAND (uncached/cached calls): " << counter_uncached_L1_MinimumBiasHF1_AND_BptxAND_ << " / " << counter_cached_L1_MinimumBiasHF1_AND_BptxAND_ << std::endl;;
    std::cout << "L1_MinimumBiasHF1_OR (uncached/cached calls): " << counter_uncached_L1_MinimumBiasHF1_OR_ << " / " << counter_cached_L1_MinimumBiasHF1_OR_ << std::endl;;
    std::cout << "L1_MinimumBiasHF1_OR_BptxAND (uncached/cached calls): " << counter_uncached_L1_MinimumBiasHF1_OR_BptxAND_ << " / " << counter_cached_L1_MinimumBiasHF1_OR_BptxAND_ << std::endl;;
    std::cout << "L1_Mu0er_ETM40 (uncached/cached calls): " << counter_uncached_L1_Mu0er_ETM40_ << " / " << counter_cached_L1_Mu0er_ETM40_ << std::endl;;
    std::cout << "L1_Mu0er_ETM55 (uncached/cached calls): " << counter_uncached_L1_Mu0er_ETM55_ << " / " << counter_cached_L1_Mu0er_ETM55_ << std::endl;;
    std::cout << "L1_Mu10er2p1_ETM30 (uncached/cached calls): " << counter_uncached_L1_Mu10er2p1_ETM30_ << " / " << counter_cached_L1_Mu10er2p1_ETM30_ << std::endl;;
    std::cout << "L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6 (uncached/cached calls): " << counter_uncached_L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6_ << " / " << counter_cached_L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6_ << std::endl;;
    std::cout << "L1_Mu10er_ETM30 (uncached/cached calls): " << counter_uncached_L1_Mu10er_ETM30_ << " / " << counter_cached_L1_Mu10er_ETM30_ << std::endl;;
    std::cout << "L1_Mu10er_ETM50 (uncached/cached calls): " << counter_uncached_L1_Mu10er_ETM50_ << " / " << counter_cached_L1_Mu10er_ETM50_ << std::endl;;
    std::cout << "L1_Mu12_EG10 (uncached/cached calls): " << counter_uncached_L1_Mu12_EG10_ << " / " << counter_cached_L1_Mu12_EG10_ << std::endl;;
    std::cout << "L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6 (uncached/cached calls): " << counter_uncached_L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6_ << " / " << counter_cached_L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6_ << std::endl;;
    std::cout << "L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6 (uncached/cached calls): " << counter_uncached_L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6_ << " / " << counter_cached_L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6_ << std::endl;;
    std::cout << "L1_Mu14er2p1_ETM30 (uncached/cached calls): " << counter_uncached_L1_Mu14er2p1_ETM30_ << " / " << counter_cached_L1_Mu14er2p1_ETM30_ << std::endl;;
    std::cout << "L1_Mu14er_ETM30 (uncached/cached calls): " << counter_uncached_L1_Mu14er_ETM30_ << " / " << counter_cached_L1_Mu14er_ETM30_ << std::endl;;
    std::cout << "L1_Mu15_HTT100er (uncached/cached calls): " << counter_uncached_L1_Mu15_HTT100er_ << " / " << counter_cached_L1_Mu15_HTT100er_ << std::endl;;
    std::cout << "L1_Mu16er2p1_Tau20er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu16er2p1_Tau20er2p1_ << " / " << counter_cached_L1_Mu16er2p1_Tau20er2p1_ << std::endl;;
    std::cout << "L1_Mu16er2p1_Tau24er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu16er2p1_Tau24er2p1_ << " / " << counter_cached_L1_Mu16er2p1_Tau24er2p1_ << std::endl;;
    std::cout << "L1_Mu16er_Tau20er (uncached/cached calls): " << counter_uncached_L1_Mu16er_Tau20er_ << " / " << counter_cached_L1_Mu16er_Tau20er_ << std::endl;;
    std::cout << "L1_Mu16er_Tau24er (uncached/cached calls): " << counter_uncached_L1_Mu16er_Tau24er_ << " / " << counter_cached_L1_Mu16er_Tau24er_ << std::endl;;
    std::cout << "L1_Mu18_HTT100er (uncached/cached calls): " << counter_uncached_L1_Mu18_HTT100er_ << " / " << counter_cached_L1_Mu18_HTT100er_ << std::endl;;
    std::cout << "L1_Mu18_Jet24er2p7 (uncached/cached calls): " << counter_uncached_L1_Mu18_Jet24er2p7_ << " / " << counter_cached_L1_Mu18_Jet24er2p7_ << std::endl;;
    std::cout << "L1_Mu18_Jet24er3p0 (uncached/cached calls): " << counter_uncached_L1_Mu18_Jet24er3p0_ << " / " << counter_cached_L1_Mu18_Jet24er3p0_ << std::endl;;
    std::cout << "L1_Mu18er2p1_IsoTau26er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu18er2p1_IsoTau26er2p1_ << " / " << counter_cached_L1_Mu18er2p1_IsoTau26er2p1_ << std::endl;;
    std::cout << "L1_Mu18er2p1_Tau20er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu18er2p1_Tau20er2p1_ << " / " << counter_cached_L1_Mu18er2p1_Tau20er2p1_ << std::endl;;
    std::cout << "L1_Mu18er2p1_Tau24er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu18er2p1_Tau24er2p1_ << " / " << counter_cached_L1_Mu18er2p1_Tau24er2p1_ << std::endl;;
    std::cout << "L1_Mu18er2p1_Tau26er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu18er2p1_Tau26er2p1_ << " / " << counter_cached_L1_Mu18er2p1_Tau26er2p1_ << std::endl;;
    std::cout << "L1_Mu18er2p1_Tau26er2p1_Jet55 (uncached/cached calls): " << counter_uncached_L1_Mu18er2p1_Tau26er2p1_Jet55_ << " / " << counter_cached_L1_Mu18er2p1_Tau26er2p1_Jet55_ << std::endl;;
    std::cout << "L1_Mu18er2p1_Tau26er2p1_Jet70 (uncached/cached calls): " << counter_uncached_L1_Mu18er2p1_Tau26er2p1_Jet70_ << " / " << counter_cached_L1_Mu18er2p1_Tau26er2p1_Jet70_ << std::endl;;
    std::cout << "L1_Mu18er_IsoTau26er (uncached/cached calls): " << counter_uncached_L1_Mu18er_IsoTau26er_ << " / " << counter_cached_L1_Mu18er_IsoTau26er_ << std::endl;;
    std::cout << "L1_Mu18er_Tau20er (uncached/cached calls): " << counter_uncached_L1_Mu18er_Tau20er_ << " / " << counter_cached_L1_Mu18er_Tau20er_ << std::endl;;
    std::cout << "L1_Mu18er_Tau24er (uncached/cached calls): " << counter_uncached_L1_Mu18er_Tau24er_ << " / " << counter_cached_L1_Mu18er_Tau24er_ << std::endl;;
    std::cout << "L1_Mu20_EG10 (uncached/cached calls): " << counter_uncached_L1_Mu20_EG10_ << " / " << counter_cached_L1_Mu20_EG10_ << std::endl;;
    std::cout << "L1_Mu20_EG10er2p5 (uncached/cached calls): " << counter_uncached_L1_Mu20_EG10er2p5_ << " / " << counter_cached_L1_Mu20_EG10er2p5_ << std::endl;;
    std::cout << "L1_Mu20_EG17 (uncached/cached calls): " << counter_uncached_L1_Mu20_EG17_ << " / " << counter_cached_L1_Mu20_EG17_ << std::endl;;
    std::cout << "L1_Mu20_IsoEG6 (uncached/cached calls): " << counter_uncached_L1_Mu20_IsoEG6_ << " / " << counter_cached_L1_Mu20_IsoEG6_ << std::endl;;
    std::cout << "L1_Mu20_LooseIsoEG6 (uncached/cached calls): " << counter_uncached_L1_Mu20_LooseIsoEG6_ << " / " << counter_cached_L1_Mu20_LooseIsoEG6_ << std::endl;;
    std::cout << "L1_Mu20er2p1_IsoTau26er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu20er2p1_IsoTau26er2p1_ << " / " << counter_cached_L1_Mu20er2p1_IsoTau26er2p1_ << std::endl;;
    std::cout << "L1_Mu20er2p1_IsoTau27er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu20er2p1_IsoTau27er2p1_ << " / " << counter_cached_L1_Mu20er2p1_IsoTau27er2p1_ << std::endl;;
    std::cout << "L1_Mu20er_IsoTau26er (uncached/cached calls): " << counter_uncached_L1_Mu20er_IsoTau26er_ << " / " << counter_cached_L1_Mu20er_IsoTau26er_ << std::endl;;
    std::cout << "L1_Mu22er2p1_IsoTau28er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu22er2p1_IsoTau28er2p1_ << " / " << counter_cached_L1_Mu22er2p1_IsoTau28er2p1_ << std::endl;;
    std::cout << "L1_Mu22er2p1_IsoTau30er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu22er2p1_IsoTau30er2p1_ << " / " << counter_cached_L1_Mu22er2p1_IsoTau30er2p1_ << std::endl;;
    std::cout << "L1_Mu22er2p1_IsoTau32er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu22er2p1_IsoTau32er2p1_ << " / " << counter_cached_L1_Mu22er2p1_IsoTau32er2p1_ << std::endl;;
    std::cout << "L1_Mu22er2p1_IsoTau33er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu22er2p1_IsoTau33er2p1_ << " / " << counter_cached_L1_Mu22er2p1_IsoTau33er2p1_ << std::endl;;
    std::cout << "L1_Mu22er2p1_IsoTau34er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu22er2p1_IsoTau34er2p1_ << " / " << counter_cached_L1_Mu22er2p1_IsoTau34er2p1_ << std::endl;;
    std::cout << "L1_Mu22er2p1_IsoTau35er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu22er2p1_IsoTau35er2p1_ << " / " << counter_cached_L1_Mu22er2p1_IsoTau35er2p1_ << std::endl;;
    std::cout << "L1_Mu22er2p1_IsoTau36er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu22er2p1_IsoTau36er2p1_ << " / " << counter_cached_L1_Mu22er2p1_IsoTau36er2p1_ << std::endl;;
    std::cout << "L1_Mu22er2p1_IsoTau38er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu22er2p1_IsoTau38er2p1_ << " / " << counter_cached_L1_Mu22er2p1_IsoTau38er2p1_ << std::endl;;
    std::cout << "L1_Mu22er2p1_IsoTau40er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu22er2p1_IsoTau40er2p1_ << " / " << counter_cached_L1_Mu22er2p1_IsoTau40er2p1_ << std::endl;;
    std::cout << "L1_Mu22er2p1_Tau50er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu22er2p1_Tau50er2p1_ << " / " << counter_cached_L1_Mu22er2p1_Tau50er2p1_ << std::endl;;
    std::cout << "L1_Mu22er2p1_Tau70er2p1 (uncached/cached calls): " << counter_uncached_L1_Mu22er2p1_Tau70er2p1_ << " / " << counter_cached_L1_Mu22er2p1_Tau70er2p1_ << std::endl;;
    std::cout << "L1_Mu22er_IsoTau26er (uncached/cached calls): " << counter_uncached_L1_Mu22er_IsoTau26er_ << " / " << counter_cached_L1_Mu22er_IsoTau26er_ << std::endl;;
    std::cout << "L1_Mu23_EG10 (uncached/cached calls): " << counter_uncached_L1_Mu23_EG10_ << " / " << counter_cached_L1_Mu23_EG10_ << std::endl;;
    std::cout << "L1_Mu23_IsoEG10 (uncached/cached calls): " << counter_uncached_L1_Mu23_IsoEG10_ << " / " << counter_cached_L1_Mu23_IsoEG10_ << std::endl;;
    std::cout << "L1_Mu23_LooseIsoEG10 (uncached/cached calls): " << counter_uncached_L1_Mu23_LooseIsoEG10_ << " / " << counter_cached_L1_Mu23_LooseIsoEG10_ << std::endl;;
    std::cout << "L1_Mu25er_IsoTau26er (uncached/cached calls): " << counter_uncached_L1_Mu25er_IsoTau26er_ << " / " << counter_cached_L1_Mu25er_IsoTau26er_ << std::endl;;
    std::cout << "L1_Mu3_Jet120er2p5_dR_Max0p4 (uncached/cached calls): " << counter_uncached_L1_Mu3_Jet120er2p5_dR_Max0p4_ << " / " << counter_cached_L1_Mu3_Jet120er2p5_dR_Max0p4_ << std::endl;;
    std::cout << "L1_Mu3_Jet120er2p5_dR_Max0p8 (uncached/cached calls): " << counter_uncached_L1_Mu3_Jet120er2p5_dR_Max0p8_ << " / " << counter_cached_L1_Mu3_Jet120er2p5_dR_Max0p8_ << std::endl;;
    std::cout << "L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4 (uncached/cached calls): " << counter_uncached_L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4_ << " / " << counter_cached_L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4_ << std::endl;;
    std::cout << "L1_Mu3_Jet16er2p5_dR_Max0p4 (uncached/cached calls): " << counter_uncached_L1_Mu3_Jet16er2p5_dR_Max0p4_ << " / " << counter_cached_L1_Mu3_Jet16er2p5_dR_Max0p4_ << std::endl;;
    std::cout << "L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4 (uncached/cached calls): " << counter_uncached_L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4_ << " / " << counter_cached_L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4_ << std::endl;;
    std::cout << "L1_Mu3_Jet30er2p5 (uncached/cached calls): " << counter_uncached_L1_Mu3_Jet30er2p5_ << " / " << counter_cached_L1_Mu3_Jet30er2p5_ << std::endl;;
    std::cout << "L1_Mu3_Jet35er2p5_dR_Max0p4 (uncached/cached calls): " << counter_uncached_L1_Mu3_Jet35er2p5_dR_Max0p4_ << " / " << counter_cached_L1_Mu3_Jet35er2p5_dR_Max0p4_ << std::endl;;
    std::cout << "L1_Mu3_Jet60er2p5_dR_Max0p4 (uncached/cached calls): " << counter_uncached_L1_Mu3_Jet60er2p5_dR_Max0p4_ << " / " << counter_cached_L1_Mu3_Jet60er2p5_dR_Max0p4_ << std::endl;;
    std::cout << "L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4 (uncached/cached calls): " << counter_uncached_L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4_ << " / " << counter_cached_L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4_ << std::endl;;
    std::cout << "L1_Mu3_Jet80er2p5_dR_Max0p4 (uncached/cached calls): " << counter_uncached_L1_Mu3_Jet80er2p5_dR_Max0p4_ << " / " << counter_cached_L1_Mu3_Jet80er2p5_dR_Max0p4_ << std::endl;;
    std::cout << "L1_Mu3_JetC120 (uncached/cached calls): " << counter_uncached_L1_Mu3_JetC120_ << " / " << counter_cached_L1_Mu3_JetC120_ << std::endl;;
    std::cout << "L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4 (uncached/cached calls): " << counter_uncached_L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4_ << " / " << counter_cached_L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4_ << std::endl;;
    std::cout << "L1_Mu3_JetC16 (uncached/cached calls): " << counter_uncached_L1_Mu3_JetC16_ << " / " << counter_cached_L1_Mu3_JetC16_ << std::endl;;
    std::cout << "L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4 (uncached/cached calls): " << counter_uncached_L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4_ << " / " << counter_cached_L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4_ << std::endl;;
    std::cout << "L1_Mu3_JetC60 (uncached/cached calls): " << counter_uncached_L1_Mu3_JetC60_ << " / " << counter_cached_L1_Mu3_JetC60_ << std::endl;;
    std::cout << "L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4 (uncached/cached calls): " << counter_uncached_L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4_ << " / " << counter_cached_L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4_ << std::endl;;
    std::cout << "L1_Mu3er1p5_Jet100er2p5_ETMHF30 (uncached/cached calls): " << counter_uncached_L1_Mu3er1p5_Jet100er2p5_ETMHF30_ << " / " << counter_cached_L1_Mu3er1p5_Jet100er2p5_ETMHF30_ << std::endl;;
    std::cout << "L1_Mu3er1p5_Jet100er2p5_ETMHF40 (uncached/cached calls): " << counter_uncached_L1_Mu3er1p5_Jet100er2p5_ETMHF40_ << " / " << counter_cached_L1_Mu3er1p5_Jet100er2p5_ETMHF40_ << std::endl;;
    std::cout << "L1_Mu3er1p5_Jet100er2p5_ETMHF50 (uncached/cached calls): " << counter_uncached_L1_Mu3er1p5_Jet100er2p5_ETMHF50_ << " / " << counter_cached_L1_Mu3er1p5_Jet100er2p5_ETMHF50_ << std::endl;;
    std::cout << "L1_Mu5_EG15 (uncached/cached calls): " << counter_uncached_L1_Mu5_EG15_ << " / " << counter_cached_L1_Mu5_EG15_ << std::endl;;
    std::cout << "L1_Mu5_EG20 (uncached/cached calls): " << counter_uncached_L1_Mu5_EG20_ << " / " << counter_cached_L1_Mu5_EG20_ << std::endl;;
    std::cout << "L1_Mu5_EG23 (uncached/cached calls): " << counter_uncached_L1_Mu5_EG23_ << " / " << counter_cached_L1_Mu5_EG23_ << std::endl;;
    std::cout << "L1_Mu5_EG23er2p5 (uncached/cached calls): " << counter_uncached_L1_Mu5_EG23er2p5_ << " / " << counter_cached_L1_Mu5_EG23er2p5_ << std::endl;;
    std::cout << "L1_Mu5_IsoEG18 (uncached/cached calls): " << counter_uncached_L1_Mu5_IsoEG18_ << " / " << counter_cached_L1_Mu5_IsoEG18_ << std::endl;;
    std::cout << "L1_Mu5_IsoEG20 (uncached/cached calls): " << counter_uncached_L1_Mu5_IsoEG20_ << " / " << counter_cached_L1_Mu5_IsoEG20_ << std::endl;;
    std::cout << "L1_Mu5_LooseIsoEG18 (uncached/cached calls): " << counter_uncached_L1_Mu5_LooseIsoEG18_ << " / " << counter_cached_L1_Mu5_LooseIsoEG18_ << std::endl;;
    std::cout << "L1_Mu5_LooseIsoEG20 (uncached/cached calls): " << counter_uncached_L1_Mu5_LooseIsoEG20_ << " / " << counter_cached_L1_Mu5_LooseIsoEG20_ << std::endl;;
    std::cout << "L1_Mu5_LooseIsoEG20er2p5 (uncached/cached calls): " << counter_uncached_L1_Mu5_LooseIsoEG20er2p5_ << " / " << counter_cached_L1_Mu5_LooseIsoEG20er2p5_ << std::endl;;
    std::cout << "L1_Mu6_DoubleEG10 (uncached/cached calls): " << counter_uncached_L1_Mu6_DoubleEG10_ << " / " << counter_cached_L1_Mu6_DoubleEG10_ << std::endl;;
    std::cout << "L1_Mu6_DoubleEG10er2p5 (uncached/cached calls): " << counter_uncached_L1_Mu6_DoubleEG10er2p5_ << " / " << counter_cached_L1_Mu6_DoubleEG10er2p5_ << std::endl;;
    std::cout << "L1_Mu6_DoubleEG12er2p5 (uncached/cached calls): " << counter_uncached_L1_Mu6_DoubleEG12er2p5_ << " / " << counter_cached_L1_Mu6_DoubleEG12er2p5_ << std::endl;;
    std::cout << "L1_Mu6_DoubleEG15er2p5 (uncached/cached calls): " << counter_uncached_L1_Mu6_DoubleEG15er2p5_ << " / " << counter_cached_L1_Mu6_DoubleEG15er2p5_ << std::endl;;
    std::cout << "L1_Mu6_DoubleEG17 (uncached/cached calls): " << counter_uncached_L1_Mu6_DoubleEG17_ << " / " << counter_cached_L1_Mu6_DoubleEG17_ << std::endl;;
    std::cout << "L1_Mu6_DoubleEG17er2p5 (uncached/cached calls): " << counter_uncached_L1_Mu6_DoubleEG17er2p5_ << " / " << counter_cached_L1_Mu6_DoubleEG17er2p5_ << std::endl;;
    std::cout << "L1_Mu6_HTT200 (uncached/cached calls): " << counter_uncached_L1_Mu6_HTT200_ << " / " << counter_cached_L1_Mu6_HTT200_ << std::endl;;
    std::cout << "L1_Mu6_HTT200er (uncached/cached calls): " << counter_uncached_L1_Mu6_HTT200er_ << " / " << counter_cached_L1_Mu6_HTT200er_ << std::endl;;
    std::cout << "L1_Mu6_HTT240er (uncached/cached calls): " << counter_uncached_L1_Mu6_HTT240er_ << " / " << counter_cached_L1_Mu6_HTT240er_ << std::endl;;
    std::cout << "L1_Mu6_HTT250er (uncached/cached calls): " << counter_uncached_L1_Mu6_HTT250er_ << " / " << counter_cached_L1_Mu6_HTT250er_ << std::endl;;
    std::cout << "L1_Mu7_EG20er2p5 (uncached/cached calls): " << counter_uncached_L1_Mu7_EG20er2p5_ << " / " << counter_cached_L1_Mu7_EG20er2p5_ << std::endl;;
    std::cout << "L1_Mu7_EG23 (uncached/cached calls): " << counter_uncached_L1_Mu7_EG23_ << " / " << counter_cached_L1_Mu7_EG23_ << std::endl;;
    std::cout << "L1_Mu7_EG23er2p5 (uncached/cached calls): " << counter_uncached_L1_Mu7_EG23er2p5_ << " / " << counter_cached_L1_Mu7_EG23er2p5_ << std::endl;;
    std::cout << "L1_Mu7_IsoEG20 (uncached/cached calls): " << counter_uncached_L1_Mu7_IsoEG20_ << " / " << counter_cached_L1_Mu7_IsoEG20_ << std::endl;;
    std::cout << "L1_Mu7_IsoEG23 (uncached/cached calls): " << counter_uncached_L1_Mu7_IsoEG23_ << " / " << counter_cached_L1_Mu7_IsoEG23_ << std::endl;;
    std::cout << "L1_Mu7_LooseIsoEG20 (uncached/cached calls): " << counter_uncached_L1_Mu7_LooseIsoEG20_ << " / " << counter_cached_L1_Mu7_LooseIsoEG20_ << std::endl;;
    std::cout << "L1_Mu7_LooseIsoEG20er2p5 (uncached/cached calls): " << counter_uncached_L1_Mu7_LooseIsoEG20er2p5_ << " / " << counter_cached_L1_Mu7_LooseIsoEG20er2p5_ << std::endl;;
    std::cout << "L1_Mu7_LooseIsoEG23 (uncached/cached calls): " << counter_uncached_L1_Mu7_LooseIsoEG23_ << " / " << counter_cached_L1_Mu7_LooseIsoEG23_ << std::endl;;
    std::cout << "L1_Mu7_LooseIsoEG23er2p5 (uncached/cached calls): " << counter_uncached_L1_Mu7_LooseIsoEG23er2p5_ << " / " << counter_cached_L1_Mu7_LooseIsoEG23er2p5_ << std::endl;;
    std::cout << "L1_Mu8_HTT150 (uncached/cached calls): " << counter_uncached_L1_Mu8_HTT150_ << " / " << counter_cached_L1_Mu8_HTT150_ << std::endl;;
    std::cout << "L1_Mu8_HTT150er (uncached/cached calls): " << counter_uncached_L1_Mu8_HTT150er_ << " / " << counter_cached_L1_Mu8_HTT150er_ << std::endl;;
    std::cout << "L1_NotBptxOR (uncached/cached calls): " << counter_uncached_L1_NotBptxOR_ << " / " << counter_cached_L1_NotBptxOR_ << std::endl;;
    std::cout << "L1_QuadJet36er2p5_IsoTau52er2p1 (uncached/cached calls): " << counter_uncached_L1_QuadJet36er2p5_IsoTau52er2p1_ << " / " << counter_cached_L1_QuadJet36er2p5_IsoTau52er2p1_ << std::endl;;
    std::cout << "L1_QuadJet36er2p7_IsoTau52er2p1 (uncached/cached calls): " << counter_uncached_L1_QuadJet36er2p7_IsoTau52er2p1_ << " / " << counter_cached_L1_QuadJet36er2p7_IsoTau52er2p1_ << std::endl;;
    std::cout << "L1_QuadJet36er2p7_Tau52 (uncached/cached calls): " << counter_uncached_L1_QuadJet36er2p7_Tau52_ << " / " << counter_cached_L1_QuadJet36er2p7_Tau52_ << std::endl;;
    std::cout << "L1_QuadJet36er3p0_IsoTau52er2p1 (uncached/cached calls): " << counter_uncached_L1_QuadJet36er3p0_IsoTau52er2p1_ << " / " << counter_cached_L1_QuadJet36er3p0_IsoTau52er2p1_ << std::endl;;
    std::cout << "L1_QuadJet36er3p0_Tau52 (uncached/cached calls): " << counter_uncached_L1_QuadJet36er3p0_Tau52_ << " / " << counter_cached_L1_QuadJet36er3p0_Tau52_ << std::endl;;
    std::cout << "L1_QuadJet40er2p7 (uncached/cached calls): " << counter_uncached_L1_QuadJet40er2p7_ << " / " << counter_cached_L1_QuadJet40er2p7_ << std::endl;;
    std::cout << "L1_QuadJet40er3p0 (uncached/cached calls): " << counter_uncached_L1_QuadJet40er3p0_ << " / " << counter_cached_L1_QuadJet40er3p0_ << std::endl;;
    std::cout << "L1_QuadJet50er2p7 (uncached/cached calls): " << counter_uncached_L1_QuadJet50er2p7_ << " / " << counter_cached_L1_QuadJet50er2p7_ << std::endl;;
    std::cout << "L1_QuadJet50er3p0 (uncached/cached calls): " << counter_uncached_L1_QuadJet50er3p0_ << " / " << counter_cached_L1_QuadJet50er3p0_ << std::endl;;
    std::cout << "L1_QuadJet60er2p5 (uncached/cached calls): " << counter_uncached_L1_QuadJet60er2p5_ << " / " << counter_cached_L1_QuadJet60er2p5_ << std::endl;;
    std::cout << "L1_QuadJet60er2p7 (uncached/cached calls): " << counter_uncached_L1_QuadJet60er2p7_ << " / " << counter_cached_L1_QuadJet60er2p7_ << std::endl;;
    std::cout << "L1_QuadJet60er3p0 (uncached/cached calls): " << counter_uncached_L1_QuadJet60er3p0_ << " / " << counter_cached_L1_QuadJet60er3p0_ << std::endl;;
    std::cout << "L1_QuadJetC36_Tau52 (uncached/cached calls): " << counter_uncached_L1_QuadJetC36_Tau52_ << " / " << counter_cached_L1_QuadJetC36_Tau52_ << std::endl;;
    std::cout << "L1_QuadJetC40 (uncached/cached calls): " << counter_uncached_L1_QuadJetC40_ << " / " << counter_cached_L1_QuadJetC40_ << std::endl;;
    std::cout << "L1_QuadJetC50 (uncached/cached calls): " << counter_uncached_L1_QuadJetC50_ << " / " << counter_cached_L1_QuadJetC50_ << std::endl;;
    std::cout << "L1_QuadJetC60 (uncached/cached calls): " << counter_uncached_L1_QuadJetC60_ << " / " << counter_cached_L1_QuadJetC60_ << std::endl;;
    std::cout << "L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0 (uncached/cached calls): " << counter_uncached_L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0_ << " / " << counter_cached_L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0_ << std::endl;;
    std::cout << "L1_QuadMu0 (uncached/cached calls): " << counter_uncached_L1_QuadMu0_ << " / " << counter_cached_L1_QuadMu0_ << std::endl;;
    std::cout << "L1_QuadMu0_OQ (uncached/cached calls): " << counter_uncached_L1_QuadMu0_OQ_ << " / " << counter_cached_L1_QuadMu0_OQ_ << std::endl;;
    std::cout << "L1_QuadMu0_SQ (uncached/cached calls): " << counter_uncached_L1_QuadMu0_SQ_ << " / " << counter_cached_L1_QuadMu0_SQ_ << std::endl;;
    std::cout << "L1_SecondBunchInTrain (uncached/cached calls): " << counter_uncached_L1_SecondBunchInTrain_ << " / " << counter_cached_L1_SecondBunchInTrain_ << std::endl;;
    std::cout << "L1_SecondLastBunchInTrain (uncached/cached calls): " << counter_uncached_L1_SecondLastBunchInTrain_ << " / " << counter_cached_L1_SecondLastBunchInTrain_ << std::endl;;
    std::cout << "L1_SingleEG10 (uncached/cached calls): " << counter_uncached_L1_SingleEG10_ << " / " << counter_cached_L1_SingleEG10_ << std::endl;;
    std::cout << "L1_SingleEG10er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleEG10er2p5_ << " / " << counter_cached_L1_SingleEG10er2p5_ << std::endl;;
    std::cout << "L1_SingleEG15 (uncached/cached calls): " << counter_uncached_L1_SingleEG15_ << " / " << counter_cached_L1_SingleEG15_ << std::endl;;
    std::cout << "L1_SingleEG15er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleEG15er2p5_ << " / " << counter_cached_L1_SingleEG15er2p5_ << std::endl;;
    std::cout << "L1_SingleEG18 (uncached/cached calls): " << counter_uncached_L1_SingleEG18_ << " / " << counter_cached_L1_SingleEG18_ << std::endl;;
    std::cout << "L1_SingleEG24 (uncached/cached calls): " << counter_uncached_L1_SingleEG24_ << " / " << counter_cached_L1_SingleEG24_ << std::endl;;
    std::cout << "L1_SingleEG26 (uncached/cached calls): " << counter_uncached_L1_SingleEG26_ << " / " << counter_cached_L1_SingleEG26_ << std::endl;;
    std::cout << "L1_SingleEG26er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleEG26er2p5_ << " / " << counter_cached_L1_SingleEG26er2p5_ << std::endl;;
    std::cout << "L1_SingleEG28 (uncached/cached calls): " << counter_uncached_L1_SingleEG28_ << " / " << counter_cached_L1_SingleEG28_ << std::endl;;
    std::cout << "L1_SingleEG28_FWD2p5 (uncached/cached calls): " << counter_uncached_L1_SingleEG28_FWD2p5_ << " / " << counter_cached_L1_SingleEG28_FWD2p5_ << std::endl;;
    std::cout << "L1_SingleEG28er1p5 (uncached/cached calls): " << counter_uncached_L1_SingleEG28er1p5_ << " / " << counter_cached_L1_SingleEG28er1p5_ << std::endl;;
    std::cout << "L1_SingleEG28er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleEG28er2p1_ << " / " << counter_cached_L1_SingleEG28er2p1_ << std::endl;;
    std::cout << "L1_SingleEG28er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleEG28er2p5_ << " / " << counter_cached_L1_SingleEG28er2p5_ << std::endl;;
    std::cout << "L1_SingleEG2_BptxAND (uncached/cached calls): " << counter_uncached_L1_SingleEG2_BptxAND_ << " / " << counter_cached_L1_SingleEG2_BptxAND_ << std::endl;;
    std::cout << "L1_SingleEG30 (uncached/cached calls): " << counter_uncached_L1_SingleEG30_ << " / " << counter_cached_L1_SingleEG30_ << std::endl;;
    std::cout << "L1_SingleEG32 (uncached/cached calls): " << counter_uncached_L1_SingleEG32_ << " / " << counter_cached_L1_SingleEG32_ << std::endl;;
    std::cout << "L1_SingleEG34 (uncached/cached calls): " << counter_uncached_L1_SingleEG34_ << " / " << counter_cached_L1_SingleEG34_ << std::endl;;
    std::cout << "L1_SingleEG34er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleEG34er2p1_ << " / " << counter_cached_L1_SingleEG34er2p1_ << std::endl;;
    std::cout << "L1_SingleEG34er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleEG34er2p5_ << " / " << counter_cached_L1_SingleEG34er2p5_ << std::endl;;
    std::cout << "L1_SingleEG36 (uncached/cached calls): " << counter_uncached_L1_SingleEG36_ << " / " << counter_cached_L1_SingleEG36_ << std::endl;;
    std::cout << "L1_SingleEG36er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleEG36er2p1_ << " / " << counter_cached_L1_SingleEG36er2p1_ << std::endl;;
    std::cout << "L1_SingleEG36er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleEG36er2p5_ << " / " << counter_cached_L1_SingleEG36er2p5_ << std::endl;;
    std::cout << "L1_SingleEG38 (uncached/cached calls): " << counter_uncached_L1_SingleEG38_ << " / " << counter_cached_L1_SingleEG38_ << std::endl;;
    std::cout << "L1_SingleEG38er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleEG38er2p1_ << " / " << counter_cached_L1_SingleEG38er2p1_ << std::endl;;
    std::cout << "L1_SingleEG38er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleEG38er2p5_ << " / " << counter_cached_L1_SingleEG38er2p5_ << std::endl;;
    std::cout << "L1_SingleEG40 (uncached/cached calls): " << counter_uncached_L1_SingleEG40_ << " / " << counter_cached_L1_SingleEG40_ << std::endl;;
    std::cout << "L1_SingleEG40er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleEG40er2p5_ << " / " << counter_cached_L1_SingleEG40er2p5_ << std::endl;;
    std::cout << "L1_SingleEG42 (uncached/cached calls): " << counter_uncached_L1_SingleEG42_ << " / " << counter_cached_L1_SingleEG42_ << std::endl;;
    std::cout << "L1_SingleEG42er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleEG42er2p5_ << " / " << counter_cached_L1_SingleEG42er2p5_ << std::endl;;
    std::cout << "L1_SingleEG45 (uncached/cached calls): " << counter_uncached_L1_SingleEG45_ << " / " << counter_cached_L1_SingleEG45_ << std::endl;;
    std::cout << "L1_SingleEG45er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleEG45er2p5_ << " / " << counter_cached_L1_SingleEG45er2p5_ << std::endl;;
    std::cout << "L1_SingleEG5 (uncached/cached calls): " << counter_uncached_L1_SingleEG5_ << " / " << counter_cached_L1_SingleEG5_ << std::endl;;
    std::cout << "L1_SingleEG50 (uncached/cached calls): " << counter_uncached_L1_SingleEG50_ << " / " << counter_cached_L1_SingleEG50_ << std::endl;;
    std::cout << "L1_SingleEG60 (uncached/cached calls): " << counter_uncached_L1_SingleEG60_ << " / " << counter_cached_L1_SingleEG60_ << std::endl;;
    std::cout << "L1_SingleEG8er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleEG8er2p5_ << " / " << counter_cached_L1_SingleEG8er2p5_ << std::endl;;
    std::cout << "L1_SingleIsoEG18 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG18_ << " / " << counter_cached_L1_SingleIsoEG18_ << std::endl;;
    std::cout << "L1_SingleIsoEG18er (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG18er_ << " / " << counter_cached_L1_SingleIsoEG18er_ << std::endl;;
    std::cout << "L1_SingleIsoEG18er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG18er2p1_ << " / " << counter_cached_L1_SingleIsoEG18er2p1_ << std::endl;;
    std::cout << "L1_SingleIsoEG20 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG20_ << " / " << counter_cached_L1_SingleIsoEG20_ << std::endl;;
    std::cout << "L1_SingleIsoEG20er (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG20er_ << " / " << counter_cached_L1_SingleIsoEG20er_ << std::endl;;
    std::cout << "L1_SingleIsoEG20er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG20er2p1_ << " / " << counter_cached_L1_SingleIsoEG20er2p1_ << std::endl;;
    std::cout << "L1_SingleIsoEG22 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG22_ << " / " << counter_cached_L1_SingleIsoEG22_ << std::endl;;
    std::cout << "L1_SingleIsoEG22er (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG22er_ << " / " << counter_cached_L1_SingleIsoEG22er_ << std::endl;;
    std::cout << "L1_SingleIsoEG22er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG22er2p1_ << " / " << counter_cached_L1_SingleIsoEG22er2p1_ << std::endl;;
    std::cout << "L1_SingleIsoEG24 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG24_ << " / " << counter_cached_L1_SingleIsoEG24_ << std::endl;;
    std::cout << "L1_SingleIsoEG24er (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG24er_ << " / " << counter_cached_L1_SingleIsoEG24er_ << std::endl;;
    std::cout << "L1_SingleIsoEG24er1p5 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG24er1p5_ << " / " << counter_cached_L1_SingleIsoEG24er1p5_ << std::endl;;
    std::cout << "L1_SingleIsoEG24er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG24er2p1_ << " / " << counter_cached_L1_SingleIsoEG24er2p1_ << std::endl;;
    std::cout << "L1_SingleIsoEG26 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG26_ << " / " << counter_cached_L1_SingleIsoEG26_ << std::endl;;
    std::cout << "L1_SingleIsoEG26er (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG26er_ << " / " << counter_cached_L1_SingleIsoEG26er_ << std::endl;;
    std::cout << "L1_SingleIsoEG26er1p5 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG26er1p5_ << " / " << counter_cached_L1_SingleIsoEG26er1p5_ << std::endl;;
    std::cout << "L1_SingleIsoEG26er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG26er2p1_ << " / " << counter_cached_L1_SingleIsoEG26er2p1_ << std::endl;;
    std::cout << "L1_SingleIsoEG26er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG26er2p5_ << " / " << counter_cached_L1_SingleIsoEG26er2p5_ << std::endl;;
    std::cout << "L1_SingleIsoEG28 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG28_ << " / " << counter_cached_L1_SingleIsoEG28_ << std::endl;;
    std::cout << "L1_SingleIsoEG28_FWD2p5 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG28_FWD2p5_ << " / " << counter_cached_L1_SingleIsoEG28_FWD2p5_ << std::endl;;
    std::cout << "L1_SingleIsoEG28er (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG28er_ << " / " << counter_cached_L1_SingleIsoEG28er_ << std::endl;;
    std::cout << "L1_SingleIsoEG28er1p5 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG28er1p5_ << " / " << counter_cached_L1_SingleIsoEG28er1p5_ << std::endl;;
    std::cout << "L1_SingleIsoEG28er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG28er2p1_ << " / " << counter_cached_L1_SingleIsoEG28er2p1_ << std::endl;;
    std::cout << "L1_SingleIsoEG28er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG28er2p5_ << " / " << counter_cached_L1_SingleIsoEG28er2p5_ << std::endl;;
    std::cout << "L1_SingleIsoEG30 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG30_ << " / " << counter_cached_L1_SingleIsoEG30_ << std::endl;;
    std::cout << "L1_SingleIsoEG30er (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG30er_ << " / " << counter_cached_L1_SingleIsoEG30er_ << std::endl;;
    std::cout << "L1_SingleIsoEG30er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG30er2p1_ << " / " << counter_cached_L1_SingleIsoEG30er2p1_ << std::endl;;
    std::cout << "L1_SingleIsoEG30er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG30er2p5_ << " / " << counter_cached_L1_SingleIsoEG30er2p5_ << std::endl;;
    std::cout << "L1_SingleIsoEG32 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG32_ << " / " << counter_cached_L1_SingleIsoEG32_ << std::endl;;
    std::cout << "L1_SingleIsoEG32er (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG32er_ << " / " << counter_cached_L1_SingleIsoEG32er_ << std::endl;;
    std::cout << "L1_SingleIsoEG32er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG32er2p1_ << " / " << counter_cached_L1_SingleIsoEG32er2p1_ << std::endl;;
    std::cout << "L1_SingleIsoEG32er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG32er2p5_ << " / " << counter_cached_L1_SingleIsoEG32er2p5_ << std::endl;;
    std::cout << "L1_SingleIsoEG33er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG33er2p1_ << " / " << counter_cached_L1_SingleIsoEG33er2p1_ << std::endl;;
    std::cout << "L1_SingleIsoEG34 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG34_ << " / " << counter_cached_L1_SingleIsoEG34_ << std::endl;;
    std::cout << "L1_SingleIsoEG34er (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG34er_ << " / " << counter_cached_L1_SingleIsoEG34er_ << std::endl;;
    std::cout << "L1_SingleIsoEG34er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG34er2p1_ << " / " << counter_cached_L1_SingleIsoEG34er2p1_ << std::endl;;
    std::cout << "L1_SingleIsoEG34er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG34er2p5_ << " / " << counter_cached_L1_SingleIsoEG34er2p5_ << std::endl;;
    std::cout << "L1_SingleIsoEG35 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG35_ << " / " << counter_cached_L1_SingleIsoEG35_ << std::endl;;
    std::cout << "L1_SingleIsoEG35er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG35er2p1_ << " / " << counter_cached_L1_SingleIsoEG35er2p1_ << std::endl;;
    std::cout << "L1_SingleIsoEG36 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG36_ << " / " << counter_cached_L1_SingleIsoEG36_ << std::endl;;
    std::cout << "L1_SingleIsoEG36er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG36er2p1_ << " / " << counter_cached_L1_SingleIsoEG36er2p1_ << std::endl;;
    std::cout << "L1_SingleIsoEG37 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG37_ << " / " << counter_cached_L1_SingleIsoEG37_ << std::endl;;
    std::cout << "L1_SingleIsoEG38 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG38_ << " / " << counter_cached_L1_SingleIsoEG38_ << std::endl;;
    std::cout << "L1_SingleIsoEG38er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG38er2p1_ << " / " << counter_cached_L1_SingleIsoEG38er2p1_ << std::endl;;
    std::cout << "L1_SingleIsoEG40 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG40_ << " / " << counter_cached_L1_SingleIsoEG40_ << std::endl;;
    std::cout << "L1_SingleIsoEG40er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleIsoEG40er2p1_ << " / " << counter_cached_L1_SingleIsoEG40er2p1_ << std::endl;;
    std::cout << "L1_SingleIsoTau32er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleIsoTau32er2p1_ << " / " << counter_cached_L1_SingleIsoTau32er2p1_ << std::endl;;
    std::cout << "L1_SingleJet10erHE (uncached/cached calls): " << counter_uncached_L1_SingleJet10erHE_ << " / " << counter_cached_L1_SingleJet10erHE_ << std::endl;;
    std::cout << "L1_SingleJet12 (uncached/cached calls): " << counter_uncached_L1_SingleJet12_ << " / " << counter_cached_L1_SingleJet12_ << std::endl;;
    std::cout << "L1_SingleJet120 (uncached/cached calls): " << counter_uncached_L1_SingleJet120_ << " / " << counter_cached_L1_SingleJet120_ << std::endl;;
    std::cout << "L1_SingleJet120_FWD (uncached/cached calls): " << counter_uncached_L1_SingleJet120_FWD_ << " / " << counter_cached_L1_SingleJet120_FWD_ << std::endl;;
    std::cout << "L1_SingleJet120_FWD3p0 (uncached/cached calls): " << counter_uncached_L1_SingleJet120_FWD3p0_ << " / " << counter_cached_L1_SingleJet120_FWD3p0_ << std::endl;;
    std::cout << "L1_SingleJet120er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleJet120er2p5_ << " / " << counter_cached_L1_SingleJet120er2p5_ << std::endl;;
    std::cout << "L1_SingleJet12_BptxAND (uncached/cached calls): " << counter_uncached_L1_SingleJet12_BptxAND_ << " / " << counter_cached_L1_SingleJet12_BptxAND_ << std::endl;;
    std::cout << "L1_SingleJet12erHE (uncached/cached calls): " << counter_uncached_L1_SingleJet12erHE_ << " / " << counter_cached_L1_SingleJet12erHE_ << std::endl;;
    std::cout << "L1_SingleJet140 (uncached/cached calls): " << counter_uncached_L1_SingleJet140_ << " / " << counter_cached_L1_SingleJet140_ << std::endl;;
    std::cout << "L1_SingleJet140er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleJet140er2p5_ << " / " << counter_cached_L1_SingleJet140er2p5_ << std::endl;;
    std::cout << "L1_SingleJet140er2p5_ETMHF70 (uncached/cached calls): " << counter_uncached_L1_SingleJet140er2p5_ETMHF70_ << " / " << counter_cached_L1_SingleJet140er2p5_ETMHF70_ << std::endl;;
    std::cout << "L1_SingleJet140er2p5_ETMHF80 (uncached/cached calls): " << counter_uncached_L1_SingleJet140er2p5_ETMHF80_ << " / " << counter_cached_L1_SingleJet140er2p5_ETMHF80_ << std::endl;;
    std::cout << "L1_SingleJet140er2p5_ETMHF90 (uncached/cached calls): " << counter_uncached_L1_SingleJet140er2p5_ETMHF90_ << " / " << counter_cached_L1_SingleJet140er2p5_ETMHF90_ << std::endl;;
    std::cout << "L1_SingleJet150 (uncached/cached calls): " << counter_uncached_L1_SingleJet150_ << " / " << counter_cached_L1_SingleJet150_ << std::endl;;
    std::cout << "L1_SingleJet16 (uncached/cached calls): " << counter_uncached_L1_SingleJet16_ << " / " << counter_cached_L1_SingleJet16_ << std::endl;;
    std::cout << "L1_SingleJet160 (uncached/cached calls): " << counter_uncached_L1_SingleJet160_ << " / " << counter_cached_L1_SingleJet160_ << std::endl;;
    std::cout << "L1_SingleJet160er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleJet160er2p5_ << " / " << counter_cached_L1_SingleJet160er2p5_ << std::endl;;
    std::cout << "L1_SingleJet170 (uncached/cached calls): " << counter_uncached_L1_SingleJet170_ << " / " << counter_cached_L1_SingleJet170_ << std::endl;;
    std::cout << "L1_SingleJet180 (uncached/cached calls): " << counter_uncached_L1_SingleJet180_ << " / " << counter_cached_L1_SingleJet180_ << std::endl;;
    std::cout << "L1_SingleJet180er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleJet180er2p5_ << " / " << counter_cached_L1_SingleJet180er2p5_ << std::endl;;
    std::cout << "L1_SingleJet20 (uncached/cached calls): " << counter_uncached_L1_SingleJet20_ << " / " << counter_cached_L1_SingleJet20_ << std::endl;;
    std::cout << "L1_SingleJet200 (uncached/cached calls): " << counter_uncached_L1_SingleJet200_ << " / " << counter_cached_L1_SingleJet200_ << std::endl;;
    std::cout << "L1_SingleJet20er2p5_NotBptxOR (uncached/cached calls): " << counter_uncached_L1_SingleJet20er2p5_NotBptxOR_ << " / " << counter_cached_L1_SingleJet20er2p5_NotBptxOR_ << std::endl;;
    std::cout << "L1_SingleJet20er2p5_NotBptxOR_3BX (uncached/cached calls): " << counter_uncached_L1_SingleJet20er2p5_NotBptxOR_3BX_ << " / " << counter_cached_L1_SingleJet20er2p5_NotBptxOR_3BX_ << std::endl;;
    std::cout << "L1_SingleJet20er2p7_NotBptxOR (uncached/cached calls): " << counter_uncached_L1_SingleJet20er2p7_NotBptxOR_ << " / " << counter_cached_L1_SingleJet20er2p7_NotBptxOR_ << std::endl;;
    std::cout << "L1_SingleJet20er2p7_NotBptxOR_3BX (uncached/cached calls): " << counter_uncached_L1_SingleJet20er2p7_NotBptxOR_3BX_ << " / " << counter_cached_L1_SingleJet20er2p7_NotBptxOR_3BX_ << std::endl;;
    std::cout << "L1_SingleJet20er3p0_NotBptxOR (uncached/cached calls): " << counter_uncached_L1_SingleJet20er3p0_NotBptxOR_ << " / " << counter_cached_L1_SingleJet20er3p0_NotBptxOR_ << std::endl;;
    std::cout << "L1_SingleJet20er3p0_NotBptxOR_3BX (uncached/cached calls): " << counter_uncached_L1_SingleJet20er3p0_NotBptxOR_3BX_ << " / " << counter_cached_L1_SingleJet20er3p0_NotBptxOR_3BX_ << std::endl;;
    std::cout << "L1_SingleJet35 (uncached/cached calls): " << counter_uncached_L1_SingleJet35_ << " / " << counter_cached_L1_SingleJet35_ << std::endl;;
    std::cout << "L1_SingleJet35_FWD (uncached/cached calls): " << counter_uncached_L1_SingleJet35_FWD_ << " / " << counter_cached_L1_SingleJet35_FWD_ << std::endl;;
    std::cout << "L1_SingleJet35_FWD3p0 (uncached/cached calls): " << counter_uncached_L1_SingleJet35_FWD3p0_ << " / " << counter_cached_L1_SingleJet35_FWD3p0_ << std::endl;;
    std::cout << "L1_SingleJet35_HFm (uncached/cached calls): " << counter_uncached_L1_SingleJet35_HFm_ << " / " << counter_cached_L1_SingleJet35_HFm_ << std::endl;;
    std::cout << "L1_SingleJet35_HFp (uncached/cached calls): " << counter_uncached_L1_SingleJet35_HFp_ << " / " << counter_cached_L1_SingleJet35_HFp_ << std::endl;;
    std::cout << "L1_SingleJet35er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleJet35er2p5_ << " / " << counter_cached_L1_SingleJet35er2p5_ << std::endl;;
    std::cout << "L1_SingleJet4 (uncached/cached calls): " << counter_uncached_L1_SingleJet4_ << " / " << counter_cached_L1_SingleJet4_ << std::endl;;
    std::cout << "L1_SingleJet43er2p5_NotBptxOR_3BX (uncached/cached calls): " << counter_uncached_L1_SingleJet43er2p5_NotBptxOR_3BX_ << " / " << counter_cached_L1_SingleJet43er2p5_NotBptxOR_3BX_ << std::endl;;
    std::cout << "L1_SingleJet43er2p7_NotBptxOR_3BX (uncached/cached calls): " << counter_uncached_L1_SingleJet43er2p7_NotBptxOR_3BX_ << " / " << counter_cached_L1_SingleJet43er2p7_NotBptxOR_3BX_ << std::endl;;
    std::cout << "L1_SingleJet43er3p0_NotBptxOR_3BX (uncached/cached calls): " << counter_uncached_L1_SingleJet43er3p0_NotBptxOR_3BX_ << " / " << counter_cached_L1_SingleJet43er3p0_NotBptxOR_3BX_ << std::endl;;
    std::cout << "L1_SingleJet46er2p5_NotBptxOR_3BX (uncached/cached calls): " << counter_uncached_L1_SingleJet46er2p5_NotBptxOR_3BX_ << " / " << counter_cached_L1_SingleJet46er2p5_NotBptxOR_3BX_ << std::endl;;
    std::cout << "L1_SingleJet46er2p7_NotBptxOR_3BX (uncached/cached calls): " << counter_uncached_L1_SingleJet46er2p7_NotBptxOR_3BX_ << " / " << counter_cached_L1_SingleJet46er2p7_NotBptxOR_3BX_ << std::endl;;
    std::cout << "L1_SingleJet46er3p0_NotBptxOR_3BX (uncached/cached calls): " << counter_uncached_L1_SingleJet46er3p0_NotBptxOR_3BX_ << " / " << counter_cached_L1_SingleJet46er3p0_NotBptxOR_3BX_ << std::endl;;
    std::cout << "L1_SingleJet60 (uncached/cached calls): " << counter_uncached_L1_SingleJet60_ << " / " << counter_cached_L1_SingleJet60_ << std::endl;;
    std::cout << "L1_SingleJet60_FWD (uncached/cached calls): " << counter_uncached_L1_SingleJet60_FWD_ << " / " << counter_cached_L1_SingleJet60_FWD_ << std::endl;;
    std::cout << "L1_SingleJet60_FWD3p0 (uncached/cached calls): " << counter_uncached_L1_SingleJet60_FWD3p0_ << " / " << counter_cached_L1_SingleJet60_FWD3p0_ << std::endl;;
    std::cout << "L1_SingleJet60_HFm (uncached/cached calls): " << counter_uncached_L1_SingleJet60_HFm_ << " / " << counter_cached_L1_SingleJet60_HFm_ << std::endl;;
    std::cout << "L1_SingleJet60_HFp (uncached/cached calls): " << counter_uncached_L1_SingleJet60_HFp_ << " / " << counter_cached_L1_SingleJet60_HFp_ << std::endl;;
    std::cout << "L1_SingleJet60er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleJet60er2p5_ << " / " << counter_cached_L1_SingleJet60er2p5_ << std::endl;;
    std::cout << "L1_SingleJet8 (uncached/cached calls): " << counter_uncached_L1_SingleJet8_ << " / " << counter_cached_L1_SingleJet8_ << std::endl;;
    std::cout << "L1_SingleJet8_BptxAND (uncached/cached calls): " << counter_uncached_L1_SingleJet8_BptxAND_ << " / " << counter_cached_L1_SingleJet8_BptxAND_ << std::endl;;
    std::cout << "L1_SingleJet8erHE (uncached/cached calls): " << counter_uncached_L1_SingleJet8erHE_ << " / " << counter_cached_L1_SingleJet8erHE_ << std::endl;;
    std::cout << "L1_SingleJet90 (uncached/cached calls): " << counter_uncached_L1_SingleJet90_ << " / " << counter_cached_L1_SingleJet90_ << std::endl;;
    std::cout << "L1_SingleJet90_FWD (uncached/cached calls): " << counter_uncached_L1_SingleJet90_FWD_ << " / " << counter_cached_L1_SingleJet90_FWD_ << std::endl;;
    std::cout << "L1_SingleJet90_FWD3p0 (uncached/cached calls): " << counter_uncached_L1_SingleJet90_FWD3p0_ << " / " << counter_cached_L1_SingleJet90_FWD3p0_ << std::endl;;
    std::cout << "L1_SingleJet90er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleJet90er2p5_ << " / " << counter_cached_L1_SingleJet90er2p5_ << std::endl;;
    std::cout << "L1_SingleJetC20_NotBptxOR (uncached/cached calls): " << counter_uncached_L1_SingleJetC20_NotBptxOR_ << " / " << counter_cached_L1_SingleJetC20_NotBptxOR_ << std::endl;;
    std::cout << "L1_SingleJetC20_NotBptxOR_3BX (uncached/cached calls): " << counter_uncached_L1_SingleJetC20_NotBptxOR_3BX_ << " / " << counter_cached_L1_SingleJetC20_NotBptxOR_3BX_ << std::endl;;
    std::cout << "L1_SingleJetC32_NotBptxOR (uncached/cached calls): " << counter_uncached_L1_SingleJetC32_NotBptxOR_ << " / " << counter_cached_L1_SingleJetC32_NotBptxOR_ << std::endl;;
    std::cout << "L1_SingleJetC32_NotBptxOR_3BX (uncached/cached calls): " << counter_uncached_L1_SingleJetC32_NotBptxOR_3BX_ << " / " << counter_cached_L1_SingleJetC32_NotBptxOR_3BX_ << std::endl;;
    std::cout << "L1_SingleJetC36_NotBptxOR_3BX (uncached/cached calls): " << counter_uncached_L1_SingleJetC36_NotBptxOR_3BX_ << " / " << counter_cached_L1_SingleJetC36_NotBptxOR_3BX_ << std::endl;;
    std::cout << "L1_SingleJetC40_NotBptxOR_3BX (uncached/cached calls): " << counter_uncached_L1_SingleJetC40_NotBptxOR_3BX_ << " / " << counter_cached_L1_SingleJetC40_NotBptxOR_3BX_ << std::endl;;
    std::cout << "L1_SingleJetC40_NotBptxOR_5BX (uncached/cached calls): " << counter_uncached_L1_SingleJetC40_NotBptxOR_5BX_ << " / " << counter_cached_L1_SingleJetC40_NotBptxOR_5BX_ << std::endl;;
    std::cout << "L1_SingleLooseIsoEG26er1p5 (uncached/cached calls): " << counter_uncached_L1_SingleLooseIsoEG26er1p5_ << " / " << counter_cached_L1_SingleLooseIsoEG26er1p5_ << std::endl;;
    std::cout << "L1_SingleLooseIsoEG26er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleLooseIsoEG26er2p5_ << " / " << counter_cached_L1_SingleLooseIsoEG26er2p5_ << std::endl;;
    std::cout << "L1_SingleLooseIsoEG28_FWD2p5 (uncached/cached calls): " << counter_uncached_L1_SingleLooseIsoEG28_FWD2p5_ << " / " << counter_cached_L1_SingleLooseIsoEG28_FWD2p5_ << std::endl;;
    std::cout << "L1_SingleLooseIsoEG28er1p5 (uncached/cached calls): " << counter_uncached_L1_SingleLooseIsoEG28er1p5_ << " / " << counter_cached_L1_SingleLooseIsoEG28er1p5_ << std::endl;;
    std::cout << "L1_SingleLooseIsoEG28er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleLooseIsoEG28er2p1_ << " / " << counter_cached_L1_SingleLooseIsoEG28er2p1_ << std::endl;;
    std::cout << "L1_SingleLooseIsoEG28er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleLooseIsoEG28er2p5_ << " / " << counter_cached_L1_SingleLooseIsoEG28er2p5_ << std::endl;;
    std::cout << "L1_SingleLooseIsoEG30er1p5 (uncached/cached calls): " << counter_uncached_L1_SingleLooseIsoEG30er1p5_ << " / " << counter_cached_L1_SingleLooseIsoEG30er1p5_ << std::endl;;
    std::cout << "L1_SingleLooseIsoEG30er2p5 (uncached/cached calls): " << counter_uncached_L1_SingleLooseIsoEG30er2p5_ << " / " << counter_cached_L1_SingleLooseIsoEG30er2p5_ << std::endl;;
    std::cout << "L1_SingleMu0_BMTF (uncached/cached calls): " << counter_uncached_L1_SingleMu0_BMTF_ << " / " << counter_cached_L1_SingleMu0_BMTF_ << std::endl;;
    std::cout << "L1_SingleMu0_DQ (uncached/cached calls): " << counter_uncached_L1_SingleMu0_DQ_ << " / " << counter_cached_L1_SingleMu0_DQ_ << std::endl;;
    std::cout << "L1_SingleMu0_EMTF (uncached/cached calls): " << counter_uncached_L1_SingleMu0_EMTF_ << " / " << counter_cached_L1_SingleMu0_EMTF_ << std::endl;;
    std::cout << "L1_SingleMu0_OMTF (uncached/cached calls): " << counter_uncached_L1_SingleMu0_OMTF_ << " / " << counter_cached_L1_SingleMu0_OMTF_ << std::endl;;
    std::cout << "L1_SingleMu10_LowQ (uncached/cached calls): " << counter_uncached_L1_SingleMu10_LowQ_ << " / " << counter_cached_L1_SingleMu10_LowQ_ << std::endl;;
    std::cout << "L1_SingleMu10er1p5 (uncached/cached calls): " << counter_uncached_L1_SingleMu10er1p5_ << " / " << counter_cached_L1_SingleMu10er1p5_ << std::endl;;
    std::cout << "L1_SingleMu11_LowQ (uncached/cached calls): " << counter_uncached_L1_SingleMu11_LowQ_ << " / " << counter_cached_L1_SingleMu11_LowQ_ << std::endl;;
    std::cout << "L1_SingleMu12 (uncached/cached calls): " << counter_uncached_L1_SingleMu12_ << " / " << counter_cached_L1_SingleMu12_ << std::endl;;
    std::cout << "L1_SingleMu12_DQ_BMTF (uncached/cached calls): " << counter_uncached_L1_SingleMu12_DQ_BMTF_ << " / " << counter_cached_L1_SingleMu12_DQ_BMTF_ << std::endl;;
    std::cout << "L1_SingleMu12_DQ_EMTF (uncached/cached calls): " << counter_uncached_L1_SingleMu12_DQ_EMTF_ << " / " << counter_cached_L1_SingleMu12_DQ_EMTF_ << std::endl;;
    std::cout << "L1_SingleMu12_DQ_OMTF (uncached/cached calls): " << counter_uncached_L1_SingleMu12_DQ_OMTF_ << " / " << counter_cached_L1_SingleMu12_DQ_OMTF_ << std::endl;;
    std::cout << "L1_SingleMu12_LowQ_BMTF (uncached/cached calls): " << counter_uncached_L1_SingleMu12_LowQ_BMTF_ << " / " << counter_cached_L1_SingleMu12_LowQ_BMTF_ << std::endl;;
    std::cout << "L1_SingleMu12_LowQ_EMTF (uncached/cached calls): " << counter_uncached_L1_SingleMu12_LowQ_EMTF_ << " / " << counter_cached_L1_SingleMu12_LowQ_EMTF_ << std::endl;;
    std::cout << "L1_SingleMu12_LowQ_OMTF (uncached/cached calls): " << counter_uncached_L1_SingleMu12_LowQ_OMTF_ << " / " << counter_cached_L1_SingleMu12_LowQ_OMTF_ << std::endl;;
    std::cout << "L1_SingleMu12er1p5 (uncached/cached calls): " << counter_uncached_L1_SingleMu12er1p5_ << " / " << counter_cached_L1_SingleMu12er1p5_ << std::endl;;
    std::cout << "L1_SingleMu14 (uncached/cached calls): " << counter_uncached_L1_SingleMu14_ << " / " << counter_cached_L1_SingleMu14_ << std::endl;;
    std::cout << "L1_SingleMu14er (uncached/cached calls): " << counter_uncached_L1_SingleMu14er_ << " / " << counter_cached_L1_SingleMu14er_ << std::endl;;
    std::cout << "L1_SingleMu14er1p5 (uncached/cached calls): " << counter_uncached_L1_SingleMu14er1p5_ << " / " << counter_cached_L1_SingleMu14er1p5_ << std::endl;;
    std::cout << "L1_SingleMu14er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleMu14er2p1_ << " / " << counter_cached_L1_SingleMu14er2p1_ << std::endl;;
    std::cout << "L1_SingleMu15_DQ (uncached/cached calls): " << counter_uncached_L1_SingleMu15_DQ_ << " / " << counter_cached_L1_SingleMu15_DQ_ << std::endl;;
    std::cout << "L1_SingleMu16 (uncached/cached calls): " << counter_uncached_L1_SingleMu16_ << " / " << counter_cached_L1_SingleMu16_ << std::endl;;
    std::cout << "L1_SingleMu16er (uncached/cached calls): " << counter_uncached_L1_SingleMu16er_ << " / " << counter_cached_L1_SingleMu16er_ << std::endl;;
    std::cout << "L1_SingleMu16er1p5 (uncached/cached calls): " << counter_uncached_L1_SingleMu16er1p5_ << " / " << counter_cached_L1_SingleMu16er1p5_ << std::endl;;
    std::cout << "L1_SingleMu16er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleMu16er2p1_ << " / " << counter_cached_L1_SingleMu16er2p1_ << std::endl;;
    std::cout << "L1_SingleMu18 (uncached/cached calls): " << counter_uncached_L1_SingleMu18_ << " / " << counter_cached_L1_SingleMu18_ << std::endl;;
    std::cout << "L1_SingleMu18er (uncached/cached calls): " << counter_uncached_L1_SingleMu18er_ << " / " << counter_cached_L1_SingleMu18er_ << std::endl;;
    std::cout << "L1_SingleMu18er1p5 (uncached/cached calls): " << counter_uncached_L1_SingleMu18er1p5_ << " / " << counter_cached_L1_SingleMu18er1p5_ << std::endl;;
    std::cout << "L1_SingleMu18er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleMu18er2p1_ << " / " << counter_cached_L1_SingleMu18er2p1_ << std::endl;;
    std::cout << "L1_SingleMu20 (uncached/cached calls): " << counter_uncached_L1_SingleMu20_ << " / " << counter_cached_L1_SingleMu20_ << std::endl;;
    std::cout << "L1_SingleMu20er (uncached/cached calls): " << counter_uncached_L1_SingleMu20er_ << " / " << counter_cached_L1_SingleMu20er_ << std::endl;;
    std::cout << "L1_SingleMu20er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleMu20er2p1_ << " / " << counter_cached_L1_SingleMu20er2p1_ << std::endl;;
    std::cout << "L1_SingleMu22 (uncached/cached calls): " << counter_uncached_L1_SingleMu22_ << " / " << counter_cached_L1_SingleMu22_ << std::endl;;
    std::cout << "L1_SingleMu22_BMTF (uncached/cached calls): " << counter_uncached_L1_SingleMu22_BMTF_ << " / " << counter_cached_L1_SingleMu22_BMTF_ << std::endl;;
    std::cout << "L1_SingleMu22_DQ (uncached/cached calls): " << counter_uncached_L1_SingleMu22_DQ_ << " / " << counter_cached_L1_SingleMu22_DQ_ << std::endl;;
    std::cout << "L1_SingleMu22_EMTF (uncached/cached calls): " << counter_uncached_L1_SingleMu22_EMTF_ << " / " << counter_cached_L1_SingleMu22_EMTF_ << std::endl;;
    std::cout << "L1_SingleMu22_OMTF (uncached/cached calls): " << counter_uncached_L1_SingleMu22_OMTF_ << " / " << counter_cached_L1_SingleMu22_OMTF_ << std::endl;;
    std::cout << "L1_SingleMu22_OQ (uncached/cached calls): " << counter_uncached_L1_SingleMu22_OQ_ << " / " << counter_cached_L1_SingleMu22_OQ_ << std::endl;;
    std::cout << "L1_SingleMu22er (uncached/cached calls): " << counter_uncached_L1_SingleMu22er_ << " / " << counter_cached_L1_SingleMu22er_ << std::endl;;
    std::cout << "L1_SingleMu22er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleMu22er2p1_ << " / " << counter_cached_L1_SingleMu22er2p1_ << std::endl;;
    std::cout << "L1_SingleMu25 (uncached/cached calls): " << counter_uncached_L1_SingleMu25_ << " / " << counter_cached_L1_SingleMu25_ << std::endl;;
    std::cout << "L1_SingleMu25er (uncached/cached calls): " << counter_uncached_L1_SingleMu25er_ << " / " << counter_cached_L1_SingleMu25er_ << std::endl;;
    std::cout << "L1_SingleMu3 (uncached/cached calls): " << counter_uncached_L1_SingleMu3_ << " / " << counter_cached_L1_SingleMu3_ << std::endl;;
    std::cout << "L1_SingleMu30 (uncached/cached calls): " << counter_uncached_L1_SingleMu30_ << " / " << counter_cached_L1_SingleMu30_ << std::endl;;
    std::cout << "L1_SingleMu30er (uncached/cached calls): " << counter_uncached_L1_SingleMu30er_ << " / " << counter_cached_L1_SingleMu30er_ << std::endl;;
    std::cout << "L1_SingleMu5 (uncached/cached calls): " << counter_uncached_L1_SingleMu5_ << " / " << counter_cached_L1_SingleMu5_ << std::endl;;
    std::cout << "L1_SingleMu6er1p5 (uncached/cached calls): " << counter_uncached_L1_SingleMu6er1p5_ << " / " << counter_cached_L1_SingleMu6er1p5_ << std::endl;;
    std::cout << "L1_SingleMu7 (uncached/cached calls): " << counter_uncached_L1_SingleMu7_ << " / " << counter_cached_L1_SingleMu7_ << std::endl;;
    std::cout << "L1_SingleMu7_DQ (uncached/cached calls): " << counter_uncached_L1_SingleMu7_DQ_ << " / " << counter_cached_L1_SingleMu7_DQ_ << std::endl;;
    std::cout << "L1_SingleMu7er1p5 (uncached/cached calls): " << counter_uncached_L1_SingleMu7er1p5_ << " / " << counter_cached_L1_SingleMu7er1p5_ << std::endl;;
    std::cout << "L1_SingleMu8er1p5 (uncached/cached calls): " << counter_uncached_L1_SingleMu8er1p5_ << " / " << counter_cached_L1_SingleMu8er1p5_ << std::endl;;
    std::cout << "L1_SingleMu9er1p5 (uncached/cached calls): " << counter_uncached_L1_SingleMu9er1p5_ << " / " << counter_cached_L1_SingleMu9er1p5_ << std::endl;;
    std::cout << "L1_SingleMuCosmics (uncached/cached calls): " << counter_uncached_L1_SingleMuCosmics_ << " / " << counter_cached_L1_SingleMuCosmics_ << std::endl;;
    std::cout << "L1_SingleMuCosmics_BMTF (uncached/cached calls): " << counter_uncached_L1_SingleMuCosmics_BMTF_ << " / " << counter_cached_L1_SingleMuCosmics_BMTF_ << std::endl;;
    std::cout << "L1_SingleMuCosmics_EMTF (uncached/cached calls): " << counter_uncached_L1_SingleMuCosmics_EMTF_ << " / " << counter_cached_L1_SingleMuCosmics_EMTF_ << std::endl;;
    std::cout << "L1_SingleMuCosmics_OMTF (uncached/cached calls): " << counter_uncached_L1_SingleMuCosmics_OMTF_ << " / " << counter_cached_L1_SingleMuCosmics_OMTF_ << std::endl;;
    std::cout << "L1_SingleMuOpen (uncached/cached calls): " << counter_uncached_L1_SingleMuOpen_ << " / " << counter_cached_L1_SingleMuOpen_ << std::endl;;
    std::cout << "L1_SingleMuOpen_NotBptxOR (uncached/cached calls): " << counter_uncached_L1_SingleMuOpen_NotBptxOR_ << " / " << counter_cached_L1_SingleMuOpen_NotBptxOR_ << std::endl;;
    std::cout << "L1_SingleMuOpen_NotBptxOR_3BX (uncached/cached calls): " << counter_uncached_L1_SingleMuOpen_NotBptxOR_3BX_ << " / " << counter_cached_L1_SingleMuOpen_NotBptxOR_3BX_ << std::endl;;
    std::cout << "L1_SingleMuOpen_er1p1_NotBptxOR_3BX (uncached/cached calls): " << counter_uncached_L1_SingleMuOpen_er1p1_NotBptxOR_3BX_ << " / " << counter_cached_L1_SingleMuOpen_er1p1_NotBptxOR_3BX_ << std::endl;;
    std::cout << "L1_SingleMuOpen_er1p4_NotBptxOR_3BX (uncached/cached calls): " << counter_uncached_L1_SingleMuOpen_er1p4_NotBptxOR_3BX_ << " / " << counter_cached_L1_SingleMuOpen_er1p4_NotBptxOR_3BX_ << std::endl;;
    std::cout << "L1_SingleMuShower_Nominal (uncached/cached calls): " << counter_uncached_L1_SingleMuShower_Nominal_ << " / " << counter_cached_L1_SingleMuShower_Nominal_ << std::endl;;
    std::cout << "L1_SingleMuShower_Tight (uncached/cached calls): " << counter_uncached_L1_SingleMuShower_Tight_ << " / " << counter_cached_L1_SingleMuShower_Tight_ << std::endl;;
    std::cout << "L1_SingleTau100er (uncached/cached calls): " << counter_uncached_L1_SingleTau100er_ << " / " << counter_cached_L1_SingleTau100er_ << std::endl;;
    std::cout << "L1_SingleTau100er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleTau100er2p1_ << " / " << counter_cached_L1_SingleTau100er2p1_ << std::endl;;
    std::cout << "L1_SingleTau120er (uncached/cached calls): " << counter_uncached_L1_SingleTau120er_ << " / " << counter_cached_L1_SingleTau120er_ << std::endl;;
    std::cout << "L1_SingleTau120er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleTau120er2p1_ << " / " << counter_cached_L1_SingleTau120er2p1_ << std::endl;;
    std::cout << "L1_SingleTau130er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleTau130er2p1_ << " / " << counter_cached_L1_SingleTau130er2p1_ << std::endl;;
    std::cout << "L1_SingleTau140er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleTau140er2p1_ << " / " << counter_cached_L1_SingleTau140er2p1_ << std::endl;;
    std::cout << "L1_SingleTau20 (uncached/cached calls): " << counter_uncached_L1_SingleTau20_ << " / " << counter_cached_L1_SingleTau20_ << std::endl;;
    std::cout << "L1_SingleTau70er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleTau70er2p1_ << " / " << counter_cached_L1_SingleTau70er2p1_ << std::endl;;
    std::cout << "L1_SingleTau80er (uncached/cached calls): " << counter_uncached_L1_SingleTau80er_ << " / " << counter_cached_L1_SingleTau80er_ << std::endl;;
    std::cout << "L1_SingleTau80er2p1 (uncached/cached calls): " << counter_uncached_L1_SingleTau80er2p1_ << " / " << counter_cached_L1_SingleTau80er2p1_ << std::endl;;
    std::cout << "L1_TOTEM_1 (uncached/cached calls): " << counter_uncached_L1_TOTEM_1_ << " / " << counter_cached_L1_TOTEM_1_ << std::endl;;
    std::cout << "L1_TOTEM_2 (uncached/cached calls): " << counter_uncached_L1_TOTEM_2_ << " / " << counter_cached_L1_TOTEM_2_ << std::endl;;
    std::cout << "L1_TOTEM_3 (uncached/cached calls): " << counter_uncached_L1_TOTEM_3_ << " / " << counter_cached_L1_TOTEM_3_ << std::endl;;
    std::cout << "L1_TOTEM_4 (uncached/cached calls): " << counter_uncached_L1_TOTEM_4_ << " / " << counter_cached_L1_TOTEM_4_ << std::endl;;
    std::cout << "L1_TripleEG16er2p5 (uncached/cached calls): " << counter_uncached_L1_TripleEG16er2p5_ << " / " << counter_cached_L1_TripleEG16er2p5_ << std::endl;;
    std::cout << "L1_TripleEG_14_10_8 (uncached/cached calls): " << counter_uncached_L1_TripleEG_14_10_8_ << " / " << counter_cached_L1_TripleEG_14_10_8_ << std::endl;;
    std::cout << "L1_TripleEG_16_12_8_er2p5 (uncached/cached calls): " << counter_uncached_L1_TripleEG_16_12_8_er2p5_ << " / " << counter_cached_L1_TripleEG_16_12_8_er2p5_ << std::endl;;
    std::cout << "L1_TripleEG_16_15_8_er2p5 (uncached/cached calls): " << counter_uncached_L1_TripleEG_16_15_8_er2p5_ << " / " << counter_cached_L1_TripleEG_16_15_8_er2p5_ << std::endl;;
    std::cout << "L1_TripleEG_18_17_8 (uncached/cached calls): " << counter_uncached_L1_TripleEG_18_17_8_ << " / " << counter_cached_L1_TripleEG_18_17_8_ << std::endl;;
    std::cout << "L1_TripleEG_18_17_8_er2p5 (uncached/cached calls): " << counter_uncached_L1_TripleEG_18_17_8_er2p5_ << " / " << counter_cached_L1_TripleEG_18_17_8_er2p5_ << std::endl;;
    std::cout << "L1_TripleEG_18_18_12_er2p5 (uncached/cached calls): " << counter_uncached_L1_TripleEG_18_18_12_er2p5_ << " / " << counter_cached_L1_TripleEG_18_18_12_er2p5_ << std::endl;;
    std::cout << "L1_TripleEG_Iso20_10_5 (uncached/cached calls): " << counter_uncached_L1_TripleEG_Iso20_10_5_ << " / " << counter_cached_L1_TripleEG_Iso20_10_5_ << std::endl;;
    std::cout << "L1_TripleEG_LooseIso20_10_5 (uncached/cached calls): " << counter_uncached_L1_TripleEG_LooseIso20_10_5_ << " / " << counter_cached_L1_TripleEG_LooseIso20_10_5_ << std::endl;;
    std::cout << "L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5 (uncached/cached calls): " << counter_uncached_L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5_ << " / " << counter_cached_L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5_ << std::endl;;
    std::cout << "L1_TripleJet_100_85_72_VBF (uncached/cached calls): " << counter_uncached_L1_TripleJet_100_85_72_VBF_ << " / " << counter_cached_L1_TripleJet_100_85_72_VBF_ << std::endl;;
    std::cout << "L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5 (uncached/cached calls): " << counter_uncached_L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5_ << " / " << counter_cached_L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5_ << std::endl;;
    std::cout << "L1_TripleJet_105_85_76_VBF (uncached/cached calls): " << counter_uncached_L1_TripleJet_105_85_76_VBF_ << " / " << counter_cached_L1_TripleJet_105_85_76_VBF_ << std::endl;;
    std::cout << "L1_TripleJet_84_68_48_VBF (uncached/cached calls): " << counter_uncached_L1_TripleJet_84_68_48_VBF_ << " / " << counter_cached_L1_TripleJet_84_68_48_VBF_ << std::endl;;
    std::cout << "L1_TripleJet_88_72_56_VBF (uncached/cached calls): " << counter_uncached_L1_TripleJet_88_72_56_VBF_ << " / " << counter_cached_L1_TripleJet_88_72_56_VBF_ << std::endl;;
    std::cout << "L1_TripleJet_92_76_64_VBF (uncached/cached calls): " << counter_uncached_L1_TripleJet_92_76_64_VBF_ << " / " << counter_cached_L1_TripleJet_92_76_64_VBF_ << std::endl;;
    std::cout << "L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5 (uncached/cached calls): " << counter_uncached_L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5_ << " / " << counter_cached_L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5_ << std::endl;;
    std::cout << "L1_TripleJet_98_83_71_VBF (uncached/cached calls): " << counter_uncached_L1_TripleJet_98_83_71_VBF_ << " / " << counter_cached_L1_TripleJet_98_83_71_VBF_ << std::endl;;
    std::cout << "L1_TripleMu0 (uncached/cached calls): " << counter_uncached_L1_TripleMu0_ << " / " << counter_cached_L1_TripleMu0_ << std::endl;;
    std::cout << "L1_TripleMu0_OQ (uncached/cached calls): " << counter_uncached_L1_TripleMu0_OQ_ << " / " << counter_cached_L1_TripleMu0_OQ_ << std::endl;;
    std::cout << "L1_TripleMu0_SQ (uncached/cached calls): " << counter_uncached_L1_TripleMu0_SQ_ << " / " << counter_cached_L1_TripleMu0_SQ_ << std::endl;;
    std::cout << "L1_TripleMu3 (uncached/cached calls): " << counter_uncached_L1_TripleMu3_ << " / " << counter_cached_L1_TripleMu3_ << std::endl;;
    std::cout << "L1_TripleMu3_SQ (uncached/cached calls): " << counter_uncached_L1_TripleMu3_SQ_ << " / " << counter_cached_L1_TripleMu3_SQ_ << std::endl;;
    std::cout << "L1_TripleMu_2SQ_1p5SQ_0OQ (uncached/cached calls): " << counter_uncached_L1_TripleMu_2SQ_1p5SQ_0OQ_ << " / " << counter_cached_L1_TripleMu_2SQ_1p5SQ_0OQ_ << std::endl;;
    std::cout << "L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12 (uncached/cached calls): " << counter_uncached_L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12_ << " / " << counter_cached_L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12_ << std::endl;;
    std::cout << "L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12 (uncached/cached calls): " << counter_uncached_L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12_ << " / " << counter_cached_L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12_ << std::endl;;
    std::cout << "L1_TripleMu_4_4_4 (uncached/cached calls): " << counter_uncached_L1_TripleMu_4_4_4_ << " / " << counter_cached_L1_TripleMu_4_4_4_ << std::endl;;
    std::cout << "L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17 (uncached/cached calls): " << counter_uncached_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_ << " / " << counter_cached_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_ << std::endl;;
    std::cout << "L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14 (uncached/cached calls): " << counter_uncached_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14_ << " / " << counter_cached_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14_ << std::endl;;
    std::cout << "L1_TripleMu_5SQ_3SQ_0OQ (uncached/cached calls): " << counter_uncached_L1_TripleMu_5SQ_3SQ_0OQ_ << " / " << counter_cached_L1_TripleMu_5SQ_3SQ_0OQ_ << std::endl;;
    std::cout << "L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9 (uncached/cached calls): " << counter_uncached_L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9_ << " / " << counter_cached_L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9_ << std::endl;;
    std::cout << "L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9 (uncached/cached calls): " << counter_uncached_L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9_ << " / " << counter_cached_L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9_ << std::endl;;
    std::cout << "L1_TripleMu_5_0_0 (uncached/cached calls): " << counter_uncached_L1_TripleMu_5_0_0_ << " / " << counter_cached_L1_TripleMu_5_0_0_ << std::endl;;
    std::cout << "L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17 (uncached/cached calls): " << counter_uncached_L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17_ << " / " << counter_cached_L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17_ << std::endl;;
    std::cout << "L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17 (uncached/cached calls): " << counter_uncached_L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17_ << " / " << counter_cached_L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17_ << std::endl;;
    std::cout << "L1_TripleMu_5_3_3 (uncached/cached calls): " << counter_uncached_L1_TripleMu_5_3_3_ << " / " << counter_cached_L1_TripleMu_5_3_3_ << std::endl;;
    std::cout << "L1_TripleMu_5_3_3_SQ (uncached/cached calls): " << counter_uncached_L1_TripleMu_5_3_3_SQ_ << " / " << counter_cached_L1_TripleMu_5_3_3_SQ_ << std::endl;;
    std::cout << "L1_TripleMu_5_3p5_2p5 (uncached/cached calls): " << counter_uncached_L1_TripleMu_5_3p5_2p5_ << " / " << counter_cached_L1_TripleMu_5_3p5_2p5_ << std::endl;;
    std::cout << "L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17 (uncached/cached calls): " << counter_uncached_L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17_ << " / " << counter_cached_L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17_ << std::endl;;
    std::cout << "L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17 (uncached/cached calls): " << counter_uncached_L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_ << " / " << counter_cached_L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_ << std::endl;;
    std::cout << "L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17 (uncached/cached calls): " << counter_uncached_L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17_ << " / " << counter_cached_L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17_ << std::endl;;
    std::cout << "L1_TripleMu_5_5_3 (uncached/cached calls): " << counter_uncached_L1_TripleMu_5_5_3_ << " / " << counter_cached_L1_TripleMu_5_5_3_ << std::endl;;
    std::cout << "L1_UnpairedBunchBptxMinus (uncached/cached calls): " << counter_uncached_L1_UnpairedBunchBptxMinus_ << " / " << counter_cached_L1_UnpairedBunchBptxMinus_ << std::endl;;
    std::cout << "L1_UnpairedBunchBptxPlus (uncached/cached calls): " << counter_uncached_L1_UnpairedBunchBptxPlus_ << " / " << counter_cached_L1_UnpairedBunchBptxPlus_ << std::endl;;
    std::cout << "L1_UnprefireableEvent (uncached/cached calls): " << counter_uncached_L1_UnprefireableEvent_ << " / " << counter_cached_L1_UnprefireableEvent_ << std::endl;;
    std::cout << "L1_ZeroBias (uncached/cached calls): " << counter_uncached_L1_ZeroBias_ << " / " << counter_cached_L1_ZeroBias_ << std::endl;;
    std::cout << "L1_ZeroBias_FirstCollidingBunch (uncached/cached calls): " << counter_uncached_L1_ZeroBias_FirstCollidingBunch_ << " / " << counter_cached_L1_ZeroBias_FirstCollidingBunch_ << std::endl;;
    std::cout << "L1_ZeroBias_copy (uncached/cached calls): " << counter_uncached_L1_ZeroBias_copy_ << " / " << counter_cached_L1_ZeroBias_copy_ << std::endl;;
    std::cout << "L1simulation_step (uncached/cached calls): " << counter_uncached_L1simulation_step_ << " / " << counter_cached_L1simulation_step_ << std::endl;;
    std::cout << "LHEPart_eta (uncached/cached calls): " << counter_uncached_LHEPart_eta_ << " / " << counter_cached_LHEPart_eta_ << std::endl;;
    std::cout << "LHEPart_incomingpz (uncached/cached calls): " << counter_uncached_LHEPart_incomingpz_ << " / " << counter_cached_LHEPart_incomingpz_ << std::endl;;
    std::cout << "LHEPart_mass (uncached/cached calls): " << counter_uncached_LHEPart_mass_ << " / " << counter_cached_LHEPart_mass_ << std::endl;;
    std::cout << "LHEPart_p4 (uncached/cached calls): " << counter_uncached_LHEPart_p4_ << " / " << counter_cached_LHEPart_p4_ << std::endl;;
    std::cout << "LHEPart_pdgId (uncached/cached calls): " << counter_uncached_LHEPart_pdgId_ << " / " << counter_cached_LHEPart_pdgId_ << std::endl;;
    std::cout << "LHEPart_phi (uncached/cached calls): " << counter_uncached_LHEPart_phi_ << " / " << counter_cached_LHEPart_phi_ << std::endl;;
    std::cout << "LHEPart_pt (uncached/cached calls): " << counter_uncached_LHEPart_pt_ << " / " << counter_cached_LHEPart_pt_ << std::endl;;
    std::cout << "LHEPart_spin (uncached/cached calls): " << counter_uncached_LHEPart_spin_ << " / " << counter_cached_LHEPart_spin_ << std::endl;;
    std::cout << "LHEPart_status (uncached/cached calls): " << counter_uncached_LHEPart_status_ << " / " << counter_cached_LHEPart_status_ << std::endl;;
    std::cout << "LHEPdfWeight (uncached/cached calls): " << counter_uncached_LHEPdfWeight_ << " / " << counter_cached_LHEPdfWeight_ << std::endl;;
    std::cout << "LHEReweightingWeight (uncached/cached calls): " << counter_uncached_LHEReweightingWeight_ << " / " << counter_cached_LHEReweightingWeight_ << std::endl;;
    std::cout << "LHEScaleWeight (uncached/cached calls): " << counter_uncached_LHEScaleWeight_ << " / " << counter_cached_LHEScaleWeight_ << std::endl;;
    std::cout << "LHEWeight_dummy (uncached/cached calls): " << counter_uncached_LHEWeight_dummy_ << " / " << counter_cached_LHEWeight_dummy_ << std::endl;;
    std::cout << "LHEWeight_originalXWGTUP (uncached/cached calls): " << counter_uncached_LHEWeight_originalXWGTUP_ << " / " << counter_cached_LHEWeight_originalXWGTUP_ << std::endl;;
    std::cout << "LHE_AlphaS (uncached/cached calls): " << counter_uncached_LHE_AlphaS_ << " / " << counter_cached_LHE_AlphaS_ << std::endl;;
    std::cout << "LHE_HT (uncached/cached calls): " << counter_uncached_LHE_HT_ << " / " << counter_cached_LHE_HT_ << std::endl;;
    std::cout << "LHE_HTIncoming (uncached/cached calls): " << counter_uncached_LHE_HTIncoming_ << " / " << counter_cached_LHE_HTIncoming_ << std::endl;;
    std::cout << "LHE_Nb (uncached/cached calls): " << counter_uncached_LHE_Nb_ << " / " << counter_cached_LHE_Nb_ << std::endl;;
    std::cout << "LHE_Nc (uncached/cached calls): " << counter_uncached_LHE_Nc_ << " / " << counter_cached_LHE_Nc_ << std::endl;;
    std::cout << "LHE_Nglu (uncached/cached calls): " << counter_uncached_LHE_Nglu_ << " / " << counter_cached_LHE_Nglu_ << std::endl;;
    std::cout << "LHE_Njets (uncached/cached calls): " << counter_uncached_LHE_Njets_ << " / " << counter_cached_LHE_Njets_ << std::endl;;
    std::cout << "LHE_NpLO (uncached/cached calls): " << counter_uncached_LHE_NpLO_ << " / " << counter_cached_LHE_NpLO_ << std::endl;;
    std::cout << "LHE_NpNLO (uncached/cached calls): " << counter_uncached_LHE_NpNLO_ << " / " << counter_cached_LHE_NpNLO_ << std::endl;;
    std::cout << "LHE_Nuds (uncached/cached calls): " << counter_uncached_LHE_Nuds_ << " / " << counter_cached_LHE_Nuds_ << std::endl;;
    std::cout << "LHE_Vpt (uncached/cached calls): " << counter_uncached_LHE_Vpt_ << " / " << counter_cached_LHE_Vpt_ << std::endl;;
    std::cout << "LowPtElectron_ID (uncached/cached calls): " << counter_uncached_LowPtElectron_ID_ << " / " << counter_cached_LowPtElectron_ID_ << std::endl;;
    std::cout << "LowPtElectron_charge (uncached/cached calls): " << counter_uncached_LowPtElectron_charge_ << " / " << counter_cached_LowPtElectron_charge_ << std::endl;;
    std::cout << "LowPtElectron_convVeto (uncached/cached calls): " << counter_uncached_LowPtElectron_convVeto_ << " / " << counter_cached_LowPtElectron_convVeto_ << std::endl;;
    std::cout << "LowPtElectron_convVtxRadius (uncached/cached calls): " << counter_uncached_LowPtElectron_convVtxRadius_ << " / " << counter_cached_LowPtElectron_convVtxRadius_ << std::endl;;
    std::cout << "LowPtElectron_convWP (uncached/cached calls): " << counter_uncached_LowPtElectron_convWP_ << " / " << counter_cached_LowPtElectron_convWP_ << std::endl;;
    std::cout << "LowPtElectron_deltaEtaSC (uncached/cached calls): " << counter_uncached_LowPtElectron_deltaEtaSC_ << " / " << counter_cached_LowPtElectron_deltaEtaSC_ << std::endl;;
    std::cout << "LowPtElectron_dxy (uncached/cached calls): " << counter_uncached_LowPtElectron_dxy_ << " / " << counter_cached_LowPtElectron_dxy_ << std::endl;;
    std::cout << "LowPtElectron_dxyErr (uncached/cached calls): " << counter_uncached_LowPtElectron_dxyErr_ << " / " << counter_cached_LowPtElectron_dxyErr_ << std::endl;;
    std::cout << "LowPtElectron_dz (uncached/cached calls): " << counter_uncached_LowPtElectron_dz_ << " / " << counter_cached_LowPtElectron_dz_ << std::endl;;
    std::cout << "LowPtElectron_dzErr (uncached/cached calls): " << counter_uncached_LowPtElectron_dzErr_ << " / " << counter_cached_LowPtElectron_dzErr_ << std::endl;;
    std::cout << "LowPtElectron_eInvMinusPInv (uncached/cached calls): " << counter_uncached_LowPtElectron_eInvMinusPInv_ << " / " << counter_cached_LowPtElectron_eInvMinusPInv_ << std::endl;;
    std::cout << "LowPtElectron_electronIdx (uncached/cached calls): " << counter_uncached_LowPtElectron_electronIdx_ << " / " << counter_cached_LowPtElectron_electronIdx_ << std::endl;;
    std::cout << "LowPtElectron_embeddedID (uncached/cached calls): " << counter_uncached_LowPtElectron_embeddedID_ << " / " << counter_cached_LowPtElectron_embeddedID_ << std::endl;;
    std::cout << "LowPtElectron_energyErr (uncached/cached calls): " << counter_uncached_LowPtElectron_energyErr_ << " / " << counter_cached_LowPtElectron_energyErr_ << std::endl;;
    std::cout << "LowPtElectron_eta (uncached/cached calls): " << counter_uncached_LowPtElectron_eta_ << " / " << counter_cached_LowPtElectron_eta_ << std::endl;;
    std::cout << "LowPtElectron_genPartFlav (uncached/cached calls): " << counter_uncached_LowPtElectron_genPartFlav_ << " / " << counter_cached_LowPtElectron_genPartFlav_ << std::endl;;
    std::cout << "LowPtElectron_genPartIdx (uncached/cached calls): " << counter_uncached_LowPtElectron_genPartIdx_ << " / " << counter_cached_LowPtElectron_genPartIdx_ << std::endl;;
    std::cout << "LowPtElectron_hoe (uncached/cached calls): " << counter_uncached_LowPtElectron_hoe_ << " / " << counter_cached_LowPtElectron_hoe_ << std::endl;;
    std::cout << "LowPtElectron_lostHits (uncached/cached calls): " << counter_uncached_LowPtElectron_lostHits_ << " / " << counter_cached_LowPtElectron_lostHits_ << std::endl;;
    std::cout << "LowPtElectron_mass (uncached/cached calls): " << counter_uncached_LowPtElectron_mass_ << " / " << counter_cached_LowPtElectron_mass_ << std::endl;;
    std::cout << "LowPtElectron_miniPFRelIso_all (uncached/cached calls): " << counter_uncached_LowPtElectron_miniPFRelIso_all_ << " / " << counter_cached_LowPtElectron_miniPFRelIso_all_ << std::endl;;
    std::cout << "LowPtElectron_miniPFRelIso_chg (uncached/cached calls): " << counter_uncached_LowPtElectron_miniPFRelIso_chg_ << " / " << counter_cached_LowPtElectron_miniPFRelIso_chg_ << std::endl;;
    std::cout << "LowPtElectron_p4 (uncached/cached calls): " << counter_uncached_LowPtElectron_p4_ << " / " << counter_cached_LowPtElectron_p4_ << std::endl;;
    std::cout << "LowPtElectron_pdgId (uncached/cached calls): " << counter_uncached_LowPtElectron_pdgId_ << " / " << counter_cached_LowPtElectron_pdgId_ << std::endl;;
    std::cout << "LowPtElectron_phi (uncached/cached calls): " << counter_uncached_LowPtElectron_phi_ << " / " << counter_cached_LowPtElectron_phi_ << std::endl;;
    std::cout << "LowPtElectron_photonIdx (uncached/cached calls): " << counter_uncached_LowPtElectron_photonIdx_ << " / " << counter_cached_LowPtElectron_photonIdx_ << std::endl;;
    std::cout << "LowPtElectron_pt (uncached/cached calls): " << counter_uncached_LowPtElectron_pt_ << " / " << counter_cached_LowPtElectron_pt_ << std::endl;;
    std::cout << "LowPtElectron_ptbiased (uncached/cached calls): " << counter_uncached_LowPtElectron_ptbiased_ << " / " << counter_cached_LowPtElectron_ptbiased_ << std::endl;;
    std::cout << "LowPtElectron_r9 (uncached/cached calls): " << counter_uncached_LowPtElectron_r9_ << " / " << counter_cached_LowPtElectron_r9_ << std::endl;;
    std::cout << "LowPtElectron_scEtOverPt (uncached/cached calls): " << counter_uncached_LowPtElectron_scEtOverPt_ << " / " << counter_cached_LowPtElectron_scEtOverPt_ << std::endl;;
    std::cout << "LowPtElectron_sieie (uncached/cached calls): " << counter_uncached_LowPtElectron_sieie_ << " / " << counter_cached_LowPtElectron_sieie_ << std::endl;;
    std::cout << "LowPtElectron_unbiased (uncached/cached calls): " << counter_uncached_LowPtElectron_unbiased_ << " / " << counter_cached_LowPtElectron_unbiased_ << std::endl;;
    std::cout << "MET_MetUnclustEnUpDeltaX (uncached/cached calls): " << counter_uncached_MET_MetUnclustEnUpDeltaX_ << " / " << counter_cached_MET_MetUnclustEnUpDeltaX_ << std::endl;;
    std::cout << "MET_MetUnclustEnUpDeltaY (uncached/cached calls): " << counter_uncached_MET_MetUnclustEnUpDeltaY_ << " / " << counter_cached_MET_MetUnclustEnUpDeltaY_ << std::endl;;
    std::cout << "MET_T1Smear_phi (uncached/cached calls): " << counter_uncached_MET_T1Smear_phi_ << " / " << counter_cached_MET_T1Smear_phi_ << std::endl;;
    std::cout << "MET_T1Smear_phi_jerDown (uncached/cached calls): " << counter_uncached_MET_T1Smear_phi_jerDown_ << " / " << counter_cached_MET_T1Smear_phi_jerDown_ << std::endl;;
    std::cout << "MET_T1Smear_phi_jerUp (uncached/cached calls): " << counter_uncached_MET_T1Smear_phi_jerUp_ << " / " << counter_cached_MET_T1Smear_phi_jerUp_ << std::endl;;
    std::cout << "MET_T1Smear_phi_jesHEMIssueDown (uncached/cached calls): " << counter_uncached_MET_T1Smear_phi_jesHEMIssueDown_ << " / " << counter_cached_MET_T1Smear_phi_jesHEMIssueDown_ << std::endl;;
    std::cout << "MET_T1Smear_phi_jesHEMIssueUp (uncached/cached calls): " << counter_uncached_MET_T1Smear_phi_jesHEMIssueUp_ << " / " << counter_cached_MET_T1Smear_phi_jesHEMIssueUp_ << std::endl;;
    std::cout << "MET_T1Smear_phi_jesTotalDown (uncached/cached calls): " << counter_uncached_MET_T1Smear_phi_jesTotalDown_ << " / " << counter_cached_MET_T1Smear_phi_jesTotalDown_ << std::endl;;
    std::cout << "MET_T1Smear_phi_jesTotalUp (uncached/cached calls): " << counter_uncached_MET_T1Smear_phi_jesTotalUp_ << " / " << counter_cached_MET_T1Smear_phi_jesTotalUp_ << std::endl;;
    std::cout << "MET_T1Smear_phi_unclustEnDown (uncached/cached calls): " << counter_uncached_MET_T1Smear_phi_unclustEnDown_ << " / " << counter_cached_MET_T1Smear_phi_unclustEnDown_ << std::endl;;
    std::cout << "MET_T1Smear_phi_unclustEnUp (uncached/cached calls): " << counter_uncached_MET_T1Smear_phi_unclustEnUp_ << " / " << counter_cached_MET_T1Smear_phi_unclustEnUp_ << std::endl;;
    std::cout << "MET_T1Smear_pt (uncached/cached calls): " << counter_uncached_MET_T1Smear_pt_ << " / " << counter_cached_MET_T1Smear_pt_ << std::endl;;
    std::cout << "MET_T1Smear_pt_jerDown (uncached/cached calls): " << counter_uncached_MET_T1Smear_pt_jerDown_ << " / " << counter_cached_MET_T1Smear_pt_jerDown_ << std::endl;;
    std::cout << "MET_T1Smear_pt_jerUp (uncached/cached calls): " << counter_uncached_MET_T1Smear_pt_jerUp_ << " / " << counter_cached_MET_T1Smear_pt_jerUp_ << std::endl;;
    std::cout << "MET_T1Smear_pt_jesHEMIssueDown (uncached/cached calls): " << counter_uncached_MET_T1Smear_pt_jesHEMIssueDown_ << " / " << counter_cached_MET_T1Smear_pt_jesHEMIssueDown_ << std::endl;;
    std::cout << "MET_T1Smear_pt_jesHEMIssueUp (uncached/cached calls): " << counter_uncached_MET_T1Smear_pt_jesHEMIssueUp_ << " / " << counter_cached_MET_T1Smear_pt_jesHEMIssueUp_ << std::endl;;
    std::cout << "MET_T1Smear_pt_jesTotalDown (uncached/cached calls): " << counter_uncached_MET_T1Smear_pt_jesTotalDown_ << " / " << counter_cached_MET_T1Smear_pt_jesTotalDown_ << std::endl;;
    std::cout << "MET_T1Smear_pt_jesTotalUp (uncached/cached calls): " << counter_uncached_MET_T1Smear_pt_jesTotalUp_ << " / " << counter_cached_MET_T1Smear_pt_jesTotalUp_ << std::endl;;
    std::cout << "MET_T1Smear_pt_unclustEnDown (uncached/cached calls): " << counter_uncached_MET_T1Smear_pt_unclustEnDown_ << " / " << counter_cached_MET_T1Smear_pt_unclustEnDown_ << std::endl;;
    std::cout << "MET_T1Smear_pt_unclustEnUp (uncached/cached calls): " << counter_uncached_MET_T1Smear_pt_unclustEnUp_ << " / " << counter_cached_MET_T1Smear_pt_unclustEnUp_ << std::endl;;
    std::cout << "MET_T1_phi (uncached/cached calls): " << counter_uncached_MET_T1_phi_ << " / " << counter_cached_MET_T1_phi_ << std::endl;;
    std::cout << "MET_T1_phi_jerDown (uncached/cached calls): " << counter_uncached_MET_T1_phi_jerDown_ << " / " << counter_cached_MET_T1_phi_jerDown_ << std::endl;;
    std::cout << "MET_T1_phi_jerUp (uncached/cached calls): " << counter_uncached_MET_T1_phi_jerUp_ << " / " << counter_cached_MET_T1_phi_jerUp_ << std::endl;;
    std::cout << "MET_T1_phi_jesHEMIssueDown (uncached/cached calls): " << counter_uncached_MET_T1_phi_jesHEMIssueDown_ << " / " << counter_cached_MET_T1_phi_jesHEMIssueDown_ << std::endl;;
    std::cout << "MET_T1_phi_jesHEMIssueUp (uncached/cached calls): " << counter_uncached_MET_T1_phi_jesHEMIssueUp_ << " / " << counter_cached_MET_T1_phi_jesHEMIssueUp_ << std::endl;;
    std::cout << "MET_T1_phi_jesTotalDown (uncached/cached calls): " << counter_uncached_MET_T1_phi_jesTotalDown_ << " / " << counter_cached_MET_T1_phi_jesTotalDown_ << std::endl;;
    std::cout << "MET_T1_phi_jesTotalUp (uncached/cached calls): " << counter_uncached_MET_T1_phi_jesTotalUp_ << " / " << counter_cached_MET_T1_phi_jesTotalUp_ << std::endl;;
    std::cout << "MET_T1_phi_unclustEnDown (uncached/cached calls): " << counter_uncached_MET_T1_phi_unclustEnDown_ << " / " << counter_cached_MET_T1_phi_unclustEnDown_ << std::endl;;
    std::cout << "MET_T1_phi_unclustEnUp (uncached/cached calls): " << counter_uncached_MET_T1_phi_unclustEnUp_ << " / " << counter_cached_MET_T1_phi_unclustEnUp_ << std::endl;;
    std::cout << "MET_T1_pt (uncached/cached calls): " << counter_uncached_MET_T1_pt_ << " / " << counter_cached_MET_T1_pt_ << std::endl;;
    std::cout << "MET_T1_pt_jerDown (uncached/cached calls): " << counter_uncached_MET_T1_pt_jerDown_ << " / " << counter_cached_MET_T1_pt_jerDown_ << std::endl;;
    std::cout << "MET_T1_pt_jerUp (uncached/cached calls): " << counter_uncached_MET_T1_pt_jerUp_ << " / " << counter_cached_MET_T1_pt_jerUp_ << std::endl;;
    std::cout << "MET_T1_pt_jesHEMIssueDown (uncached/cached calls): " << counter_uncached_MET_T1_pt_jesHEMIssueDown_ << " / " << counter_cached_MET_T1_pt_jesHEMIssueDown_ << std::endl;;
    std::cout << "MET_T1_pt_jesHEMIssueUp (uncached/cached calls): " << counter_uncached_MET_T1_pt_jesHEMIssueUp_ << " / " << counter_cached_MET_T1_pt_jesHEMIssueUp_ << std::endl;;
    std::cout << "MET_T1_pt_jesTotalDown (uncached/cached calls): " << counter_uncached_MET_T1_pt_jesTotalDown_ << " / " << counter_cached_MET_T1_pt_jesTotalDown_ << std::endl;;
    std::cout << "MET_T1_pt_jesTotalUp (uncached/cached calls): " << counter_uncached_MET_T1_pt_jesTotalUp_ << " / " << counter_cached_MET_T1_pt_jesTotalUp_ << std::endl;;
    std::cout << "MET_T1_pt_unclustEnDown (uncached/cached calls): " << counter_uncached_MET_T1_pt_unclustEnDown_ << " / " << counter_cached_MET_T1_pt_unclustEnDown_ << std::endl;;
    std::cout << "MET_T1_pt_unclustEnUp (uncached/cached calls): " << counter_uncached_MET_T1_pt_unclustEnUp_ << " / " << counter_cached_MET_T1_pt_unclustEnUp_ << std::endl;;
    std::cout << "MET_covXX (uncached/cached calls): " << counter_uncached_MET_covXX_ << " / " << counter_cached_MET_covXX_ << std::endl;;
    std::cout << "MET_covXY (uncached/cached calls): " << counter_uncached_MET_covXY_ << " / " << counter_cached_MET_covXY_ << std::endl;;
    std::cout << "MET_covYY (uncached/cached calls): " << counter_uncached_MET_covYY_ << " / " << counter_cached_MET_covYY_ << std::endl;;
    std::cout << "MET_fiducialGenPhi (uncached/cached calls): " << counter_uncached_MET_fiducialGenPhi_ << " / " << counter_cached_MET_fiducialGenPhi_ << std::endl;;
    std::cout << "MET_fiducialGenPt (uncached/cached calls): " << counter_uncached_MET_fiducialGenPt_ << " / " << counter_cached_MET_fiducialGenPt_ << std::endl;;
    std::cout << "MET_phi (uncached/cached calls): " << counter_uncached_MET_phi_ << " / " << counter_cached_MET_phi_ << std::endl;;
    std::cout << "MET_pt (uncached/cached calls): " << counter_uncached_MET_pt_ << " / " << counter_cached_MET_pt_ << std::endl;;
    std::cout << "MET_significance (uncached/cached calls): " << counter_uncached_MET_significance_ << " / " << counter_cached_MET_significance_ << std::endl;;
    std::cout << "MET_sumEt (uncached/cached calls): " << counter_uncached_MET_sumEt_ << " / " << counter_cached_MET_sumEt_ << std::endl;;
    std::cout << "MET_sumPtUnclustered (uncached/cached calls): " << counter_uncached_MET_sumPtUnclustered_ << " / " << counter_cached_MET_sumPtUnclustered_ << std::endl;;
    std::cout << "Muon_CutBased_HighPtID_SF (uncached/cached calls): " << counter_uncached_Muon_CutBased_HighPtID_SF_ << " / " << counter_cached_Muon_CutBased_HighPtID_SF_ << std::endl;;
    std::cout << "Muon_CutBased_HighPtID_SFerr (uncached/cached calls): " << counter_uncached_Muon_CutBased_HighPtID_SFerr_ << " / " << counter_cached_Muon_CutBased_HighPtID_SFerr_ << std::endl;;
    std::cout << "Muon_CutBased_LooseID_SF (uncached/cached calls): " << counter_uncached_Muon_CutBased_LooseID_SF_ << " / " << counter_cached_Muon_CutBased_LooseID_SF_ << std::endl;;
    std::cout << "Muon_CutBased_LooseID_SFerr (uncached/cached calls): " << counter_uncached_Muon_CutBased_LooseID_SFerr_ << " / " << counter_cached_Muon_CutBased_LooseID_SFerr_ << std::endl;;
    std::cout << "Muon_CutBased_MediumID_SF (uncached/cached calls): " << counter_uncached_Muon_CutBased_MediumID_SF_ << " / " << counter_cached_Muon_CutBased_MediumID_SF_ << std::endl;;
    std::cout << "Muon_CutBased_MediumID_SFerr (uncached/cached calls): " << counter_uncached_Muon_CutBased_MediumID_SFerr_ << " / " << counter_cached_Muon_CutBased_MediumID_SFerr_ << std::endl;;
    std::cout << "Muon_CutBased_MediumPromptID_SF (uncached/cached calls): " << counter_uncached_Muon_CutBased_MediumPromptID_SF_ << " / " << counter_cached_Muon_CutBased_MediumPromptID_SF_ << std::endl;;
    std::cout << "Muon_CutBased_MediumPromptID_SFerr (uncached/cached calls): " << counter_uncached_Muon_CutBased_MediumPromptID_SFerr_ << " / " << counter_cached_Muon_CutBased_MediumPromptID_SFerr_ << std::endl;;
    std::cout << "Muon_CutBased_SoftID_SF (uncached/cached calls): " << counter_uncached_Muon_CutBased_SoftID_SF_ << " / " << counter_cached_Muon_CutBased_SoftID_SF_ << std::endl;;
    std::cout << "Muon_CutBased_SoftID_SFerr (uncached/cached calls): " << counter_uncached_Muon_CutBased_SoftID_SFerr_ << " / " << counter_cached_Muon_CutBased_SoftID_SFerr_ << std::endl;;
    std::cout << "Muon_CutBased_TightID_SF (uncached/cached calls): " << counter_uncached_Muon_CutBased_TightID_SF_ << " / " << counter_cached_Muon_CutBased_TightID_SF_ << std::endl;;
    std::cout << "Muon_CutBased_TightID_SFerr (uncached/cached calls): " << counter_uncached_Muon_CutBased_TightID_SFerr_ << " / " << counter_cached_Muon_CutBased_TightID_SFerr_ << std::endl;;
    std::cout << "Muon_CutBased_TrkHighPtID_SF (uncached/cached calls): " << counter_uncached_Muon_CutBased_TrkHighPtID_SF_ << " / " << counter_cached_Muon_CutBased_TrkHighPtID_SF_ << std::endl;;
    std::cout << "Muon_CutBased_TrkHighPtID_SFerr (uncached/cached calls): " << counter_uncached_Muon_CutBased_TrkHighPtID_SFerr_ << " / " << counter_cached_Muon_CutBased_TrkHighPtID_SFerr_ << std::endl;;
    std::cout << "Muon_LooseRelIso_LooseID_SF (uncached/cached calls): " << counter_uncached_Muon_LooseRelIso_LooseID_SF_ << " / " << counter_cached_Muon_LooseRelIso_LooseID_SF_ << std::endl;;
    std::cout << "Muon_LooseRelIso_LooseID_SFerr (uncached/cached calls): " << counter_uncached_Muon_LooseRelIso_LooseID_SFerr_ << " / " << counter_cached_Muon_LooseRelIso_LooseID_SFerr_ << std::endl;;
    std::cout << "Muon_LooseRelIso_MediumID_SF (uncached/cached calls): " << counter_uncached_Muon_LooseRelIso_MediumID_SF_ << " / " << counter_cached_Muon_LooseRelIso_MediumID_SF_ << std::endl;;
    std::cout << "Muon_LooseRelIso_MediumID_SFerr (uncached/cached calls): " << counter_uncached_Muon_LooseRelIso_MediumID_SFerr_ << " / " << counter_cached_Muon_LooseRelIso_MediumID_SFerr_ << std::endl;;
    std::cout << "Muon_LooseRelIso_MediumPromptID_SF (uncached/cached calls): " << counter_uncached_Muon_LooseRelIso_MediumPromptID_SF_ << " / " << counter_cached_Muon_LooseRelIso_MediumPromptID_SF_ << std::endl;;
    std::cout << "Muon_LooseRelIso_MediumPromptID_SFerr (uncached/cached calls): " << counter_uncached_Muon_LooseRelIso_MediumPromptID_SFerr_ << " / " << counter_cached_Muon_LooseRelIso_MediumPromptID_SFerr_ << std::endl;;
    std::cout << "Muon_LooseRelIso_TightIDandIPCut_SF (uncached/cached calls): " << counter_uncached_Muon_LooseRelIso_TightIDandIPCut_SF_ << " / " << counter_cached_Muon_LooseRelIso_TightIDandIPCut_SF_ << std::endl;;
    std::cout << "Muon_LooseRelIso_TightIDandIPCut_SFerr (uncached/cached calls): " << counter_uncached_Muon_LooseRelIso_TightIDandIPCut_SFerr_ << " / " << counter_cached_Muon_LooseRelIso_TightIDandIPCut_SFerr_ << std::endl;;
    std::cout << "Muon_LooseRelTkIso_HighPtIDandIPCut_SF (uncached/cached calls): " << counter_uncached_Muon_LooseRelTkIso_HighPtIDandIPCut_SF_ << " / " << counter_cached_Muon_LooseRelTkIso_HighPtIDandIPCut_SF_ << std::endl;;
    std::cout << "Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr (uncached/cached calls): " << counter_uncached_Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_ << " / " << counter_cached_Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_ << std::endl;;
    std::cout << "Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF (uncached/cached calls): " << counter_uncached_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_ << " / " << counter_cached_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_ << std::endl;;
    std::cout << "Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr (uncached/cached calls): " << counter_uncached_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_ << " / " << counter_cached_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_ << std::endl;;
    std::cout << "Muon_TightRelIso_MediumID_SF (uncached/cached calls): " << counter_uncached_Muon_TightRelIso_MediumID_SF_ << " / " << counter_cached_Muon_TightRelIso_MediumID_SF_ << std::endl;;
    std::cout << "Muon_TightRelIso_MediumID_SFerr (uncached/cached calls): " << counter_uncached_Muon_TightRelIso_MediumID_SFerr_ << " / " << counter_cached_Muon_TightRelIso_MediumID_SFerr_ << std::endl;;
    std::cout << "Muon_TightRelIso_MediumPromptID_SF (uncached/cached calls): " << counter_uncached_Muon_TightRelIso_MediumPromptID_SF_ << " / " << counter_cached_Muon_TightRelIso_MediumPromptID_SF_ << std::endl;;
    std::cout << "Muon_TightRelIso_MediumPromptID_SFerr (uncached/cached calls): " << counter_uncached_Muon_TightRelIso_MediumPromptID_SFerr_ << " / " << counter_cached_Muon_TightRelIso_MediumPromptID_SFerr_ << std::endl;;
    std::cout << "Muon_TightRelIso_TightIDandIPCut_SF (uncached/cached calls): " << counter_uncached_Muon_TightRelIso_TightIDandIPCut_SF_ << " / " << counter_cached_Muon_TightRelIso_TightIDandIPCut_SF_ << std::endl;;
    std::cout << "Muon_TightRelIso_TightIDandIPCut_SFerr (uncached/cached calls): " << counter_uncached_Muon_TightRelIso_TightIDandIPCut_SFerr_ << " / " << counter_cached_Muon_TightRelIso_TightIDandIPCut_SFerr_ << std::endl;;
    std::cout << "Muon_TightRelTkIso_HighPtIDandIPCut_SF (uncached/cached calls): " << counter_uncached_Muon_TightRelTkIso_HighPtIDandIPCut_SF_ << " / " << counter_cached_Muon_TightRelTkIso_HighPtIDandIPCut_SF_ << std::endl;;
    std::cout << "Muon_TightRelTkIso_HighPtIDandIPCut_SFerr (uncached/cached calls): " << counter_uncached_Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_ << " / " << counter_cached_Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_ << std::endl;;
    std::cout << "Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF (uncached/cached calls): " << counter_uncached_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_ << " / " << counter_cached_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_ << std::endl;;
    std::cout << "Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr (uncached/cached calls): " << counter_uncached_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_ << " / " << counter_cached_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_ << std::endl;;
    std::cout << "Muon_charge (uncached/cached calls): " << counter_uncached_Muon_charge_ << " / " << counter_cached_Muon_charge_ << std::endl;;
    std::cout << "Muon_cleanmask (uncached/cached calls): " << counter_uncached_Muon_cleanmask_ << " / " << counter_cached_Muon_cleanmask_ << std::endl;;
    std::cout << "Muon_correctedDown_pt (uncached/cached calls): " << counter_uncached_Muon_correctedDown_pt_ << " / " << counter_cached_Muon_correctedDown_pt_ << std::endl;;
    std::cout << "Muon_correctedUp_pt (uncached/cached calls): " << counter_uncached_Muon_correctedUp_pt_ << " / " << counter_cached_Muon_correctedUp_pt_ << std::endl;;
    std::cout << "Muon_corrected_pt (uncached/cached calls): " << counter_uncached_Muon_corrected_pt_ << " / " << counter_cached_Muon_corrected_pt_ << std::endl;;
    std::cout << "Muon_dxy (uncached/cached calls): " << counter_uncached_Muon_dxy_ << " / " << counter_cached_Muon_dxy_ << std::endl;;
    std::cout << "Muon_dxyErr (uncached/cached calls): " << counter_uncached_Muon_dxyErr_ << " / " << counter_cached_Muon_dxyErr_ << std::endl;;
    std::cout << "Muon_dxybs (uncached/cached calls): " << counter_uncached_Muon_dxybs_ << " / " << counter_cached_Muon_dxybs_ << std::endl;;
    std::cout << "Muon_dz (uncached/cached calls): " << counter_uncached_Muon_dz_ << " / " << counter_cached_Muon_dz_ << std::endl;;
    std::cout << "Muon_dzErr (uncached/cached calls): " << counter_uncached_Muon_dzErr_ << " / " << counter_cached_Muon_dzErr_ << std::endl;;
    std::cout << "Muon_eta (uncached/cached calls): " << counter_uncached_Muon_eta_ << " / " << counter_cached_Muon_eta_ << std::endl;;
    std::cout << "Muon_fsrPhotonIdx (uncached/cached calls): " << counter_uncached_Muon_fsrPhotonIdx_ << " / " << counter_cached_Muon_fsrPhotonIdx_ << std::endl;;
    std::cout << "Muon_genPartFlav (uncached/cached calls): " << counter_uncached_Muon_genPartFlav_ << " / " << counter_cached_Muon_genPartFlav_ << std::endl;;
    std::cout << "Muon_genPartIdx (uncached/cached calls): " << counter_uncached_Muon_genPartIdx_ << " / " << counter_cached_Muon_genPartIdx_ << std::endl;;
    std::cout << "Muon_highPtId (uncached/cached calls): " << counter_uncached_Muon_highPtId_ << " / " << counter_cached_Muon_highPtId_ << std::endl;;
    std::cout << "Muon_highPurity (uncached/cached calls): " << counter_uncached_Muon_highPurity_ << " / " << counter_cached_Muon_highPurity_ << std::endl;;
    std::cout << "Muon_inTimeMuon (uncached/cached calls): " << counter_uncached_Muon_inTimeMuon_ << " / " << counter_cached_Muon_inTimeMuon_ << std::endl;;
    std::cout << "Muon_ip3d (uncached/cached calls): " << counter_uncached_Muon_ip3d_ << " / " << counter_cached_Muon_ip3d_ << std::endl;;
    std::cout << "Muon_isGlobal (uncached/cached calls): " << counter_uncached_Muon_isGlobal_ << " / " << counter_cached_Muon_isGlobal_ << std::endl;;
    std::cout << "Muon_isPFcand (uncached/cached calls): " << counter_uncached_Muon_isPFcand_ << " / " << counter_cached_Muon_isPFcand_ << std::endl;;
    std::cout << "Muon_isStandalone (uncached/cached calls): " << counter_uncached_Muon_isStandalone_ << " / " << counter_cached_Muon_isStandalone_ << std::endl;;
    std::cout << "Muon_isTracker (uncached/cached calls): " << counter_uncached_Muon_isTracker_ << " / " << counter_cached_Muon_isTracker_ << std::endl;;
    std::cout << "Muon_jetIdx (uncached/cached calls): " << counter_uncached_Muon_jetIdx_ << " / " << counter_cached_Muon_jetIdx_ << std::endl;;
    std::cout << "Muon_jetNDauCharged (uncached/cached calls): " << counter_uncached_Muon_jetNDauCharged_ << " / " << counter_cached_Muon_jetNDauCharged_ << std::endl;;
    std::cout << "Muon_jetPtRelv2 (uncached/cached calls): " << counter_uncached_Muon_jetPtRelv2_ << " / " << counter_cached_Muon_jetPtRelv2_ << std::endl;;
    std::cout << "Muon_jetRelIso (uncached/cached calls): " << counter_uncached_Muon_jetRelIso_ << " / " << counter_cached_Muon_jetRelIso_ << std::endl;;
    std::cout << "Muon_looseId (uncached/cached calls): " << counter_uncached_Muon_looseId_ << " / " << counter_cached_Muon_looseId_ << std::endl;;
    std::cout << "Muon_mass (uncached/cached calls): " << counter_uncached_Muon_mass_ << " / " << counter_cached_Muon_mass_ << std::endl;;
    std::cout << "Muon_mediumId (uncached/cached calls): " << counter_uncached_Muon_mediumId_ << " / " << counter_cached_Muon_mediumId_ << std::endl;;
    std::cout << "Muon_mediumPromptId (uncached/cached calls): " << counter_uncached_Muon_mediumPromptId_ << " / " << counter_cached_Muon_mediumPromptId_ << std::endl;;
    std::cout << "Muon_miniIsoId (uncached/cached calls): " << counter_uncached_Muon_miniIsoId_ << " / " << counter_cached_Muon_miniIsoId_ << std::endl;;
    std::cout << "Muon_miniPFRelIso_all (uncached/cached calls): " << counter_uncached_Muon_miniPFRelIso_all_ << " / " << counter_cached_Muon_miniPFRelIso_all_ << std::endl;;
    std::cout << "Muon_miniPFRelIso_chg (uncached/cached calls): " << counter_uncached_Muon_miniPFRelIso_chg_ << " / " << counter_cached_Muon_miniPFRelIso_chg_ << std::endl;;
    std::cout << "Muon_multiIsoId (uncached/cached calls): " << counter_uncached_Muon_multiIsoId_ << " / " << counter_cached_Muon_multiIsoId_ << std::endl;;
    std::cout << "Muon_mvaId (uncached/cached calls): " << counter_uncached_Muon_mvaId_ << " / " << counter_cached_Muon_mvaId_ << std::endl;;
    std::cout << "Muon_mvaLowPt (uncached/cached calls): " << counter_uncached_Muon_mvaLowPt_ << " / " << counter_cached_Muon_mvaLowPt_ << std::endl;;
    std::cout << "Muon_mvaLowPtId (uncached/cached calls): " << counter_uncached_Muon_mvaLowPtId_ << " / " << counter_cached_Muon_mvaLowPtId_ << std::endl;;
    std::cout << "Muon_mvaMuID (uncached/cached calls): " << counter_uncached_Muon_mvaMuID_ << " / " << counter_cached_Muon_mvaMuID_ << std::endl;;
    std::cout << "Muon_mvaMuID_WP (uncached/cached calls): " << counter_uncached_Muon_mvaMuID_WP_ << " / " << counter_cached_Muon_mvaMuID_WP_ << std::endl;;
    std::cout << "Muon_mvaTTH (uncached/cached calls): " << counter_uncached_Muon_mvaTTH_ << " / " << counter_cached_Muon_mvaTTH_ << std::endl;;
    // NOTE: this is a custom branch; temporarily added for convenience
    std::cout << "Muon_mvaTTHUL (uncached/cached calls): " << counter_uncached_Muon_mvaTTHUL_ << " / " << counter_cached_Muon_mvaTTHUL_ << std::endl;;
    //
    std::cout << "Muon_nStations (uncached/cached calls): " << counter_uncached_Muon_nStations_ << " / " << counter_cached_Muon_nStations_ << std::endl;;
    std::cout << "Muon_nTrackerLayers (uncached/cached calls): " << counter_uncached_Muon_nTrackerLayers_ << " / " << counter_cached_Muon_nTrackerLayers_ << std::endl;;
    std::cout << "Muon_p4 (uncached/cached calls): " << counter_uncached_Muon_p4_ << " / " << counter_cached_Muon_p4_ << std::endl;;
    std::cout << "Muon_pdgId (uncached/cached calls): " << counter_uncached_Muon_pdgId_ << " / " << counter_cached_Muon_pdgId_ << std::endl;;
    std::cout << "Muon_pfIsoId (uncached/cached calls): " << counter_uncached_Muon_pfIsoId_ << " / " << counter_cached_Muon_pfIsoId_ << std::endl;;
    std::cout << "Muon_pfRelIso03_all (uncached/cached calls): " << counter_uncached_Muon_pfRelIso03_all_ << " / " << counter_cached_Muon_pfRelIso03_all_ << std::endl;;
    std::cout << "Muon_pfRelIso03_chg (uncached/cached calls): " << counter_uncached_Muon_pfRelIso03_chg_ << " / " << counter_cached_Muon_pfRelIso03_chg_ << std::endl;;
    std::cout << "Muon_pfRelIso04_all (uncached/cached calls): " << counter_uncached_Muon_pfRelIso04_all_ << " / " << counter_cached_Muon_pfRelIso04_all_ << std::endl;;
    std::cout << "Muon_phi (uncached/cached calls): " << counter_uncached_Muon_phi_ << " / " << counter_cached_Muon_phi_ << std::endl;;
    std::cout << "Muon_pt (uncached/cached calls): " << counter_uncached_Muon_pt_ << " / " << counter_cached_Muon_pt_ << std::endl;;
    std::cout << "Muon_ptErr (uncached/cached calls): " << counter_uncached_Muon_ptErr_ << " / " << counter_cached_Muon_ptErr_ << std::endl;;
    std::cout << "Muon_puppiIsoId (uncached/cached calls): " << counter_uncached_Muon_puppiIsoId_ << " / " << counter_cached_Muon_puppiIsoId_ << std::endl;;
    std::cout << "Muon_segmentComp (uncached/cached calls): " << counter_uncached_Muon_segmentComp_ << " / " << counter_cached_Muon_segmentComp_ << std::endl;;
    std::cout << "Muon_sip3d (uncached/cached calls): " << counter_uncached_Muon_sip3d_ << " / " << counter_cached_Muon_sip3d_ << std::endl;;
    std::cout << "Muon_softId (uncached/cached calls): " << counter_uncached_Muon_softId_ << " / " << counter_cached_Muon_softId_ << std::endl;;
    std::cout << "Muon_softMva (uncached/cached calls): " << counter_uncached_Muon_softMva_ << " / " << counter_cached_Muon_softMva_ << std::endl;;
    std::cout << "Muon_softMvaId (uncached/cached calls): " << counter_uncached_Muon_softMvaId_ << " / " << counter_cached_Muon_softMvaId_ << std::endl;;
    std::cout << "Muon_svIdx (uncached/cached calls): " << counter_uncached_Muon_svIdx_ << " / " << counter_cached_Muon_svIdx_ << std::endl;;
    std::cout << "Muon_tightCharge (uncached/cached calls): " << counter_uncached_Muon_tightCharge_ << " / " << counter_cached_Muon_tightCharge_ << std::endl;;
    std::cout << "Muon_tightId (uncached/cached calls): " << counter_uncached_Muon_tightId_ << " / " << counter_cached_Muon_tightId_ << std::endl;;
    std::cout << "Muon_tkIsoId (uncached/cached calls): " << counter_uncached_Muon_tkIsoId_ << " / " << counter_cached_Muon_tkIsoId_ << std::endl;;
    std::cout << "Muon_tkRelIso (uncached/cached calls): " << counter_uncached_Muon_tkRelIso_ << " / " << counter_cached_Muon_tkRelIso_ << std::endl;;
    std::cout << "Muon_triggerIdLoose (uncached/cached calls): " << counter_uncached_Muon_triggerIdLoose_ << " / " << counter_cached_Muon_triggerIdLoose_ << std::endl;;
    std::cout << "Muon_tunepRelPt (uncached/cached calls): " << counter_uncached_Muon_tunepRelPt_ << " / " << counter_cached_Muon_tunepRelPt_ << std::endl;;
    std::cout << "OtherPV_score (uncached/cached calls): " << counter_uncached_OtherPV_score_ << " / " << counter_cached_OtherPV_score_ << std::endl;;
    std::cout << "OtherPV_z (uncached/cached calls): " << counter_uncached_OtherPV_z_ << " / " << counter_cached_OtherPV_z_ << std::endl;;
    std::cout << "PPSLocalTrack_decRPId (uncached/cached calls): " << counter_uncached_PPSLocalTrack_decRPId_ << " / " << counter_cached_PPSLocalTrack_decRPId_ << std::endl;;
    std::cout << "PPSLocalTrack_multiRPProtonIdx (uncached/cached calls): " << counter_uncached_PPSLocalTrack_multiRPProtonIdx_ << " / " << counter_cached_PPSLocalTrack_multiRPProtonIdx_ << std::endl;;
    std::cout << "PPSLocalTrack_rpType (uncached/cached calls): " << counter_uncached_PPSLocalTrack_rpType_ << " / " << counter_cached_PPSLocalTrack_rpType_ << std::endl;;
    std::cout << "PPSLocalTrack_singleRPProtonIdx (uncached/cached calls): " << counter_uncached_PPSLocalTrack_singleRPProtonIdx_ << " / " << counter_cached_PPSLocalTrack_singleRPProtonIdx_ << std::endl;;
    std::cout << "PPSLocalTrack_time (uncached/cached calls): " << counter_uncached_PPSLocalTrack_time_ << " / " << counter_cached_PPSLocalTrack_time_ << std::endl;;
    std::cout << "PPSLocalTrack_timeUnc (uncached/cached calls): " << counter_uncached_PPSLocalTrack_timeUnc_ << " / " << counter_cached_PPSLocalTrack_timeUnc_ << std::endl;;
    std::cout << "PPSLocalTrack_x (uncached/cached calls): " << counter_uncached_PPSLocalTrack_x_ << " / " << counter_cached_PPSLocalTrack_x_ << std::endl;;
    std::cout << "PPSLocalTrack_y (uncached/cached calls): " << counter_uncached_PPSLocalTrack_y_ << " / " << counter_cached_PPSLocalTrack_y_ << std::endl;;
    std::cout << "PSWeight (uncached/cached calls): " << counter_uncached_PSWeight_ << " / " << counter_cached_PSWeight_ << std::endl;;
    std::cout << "PV_chi2 (uncached/cached calls): " << counter_uncached_PV_chi2_ << " / " << counter_cached_PV_chi2_ << std::endl;;
    std::cout << "PV_ndof (uncached/cached calls): " << counter_uncached_PV_ndof_ << " / " << counter_cached_PV_ndof_ << std::endl;;
    std::cout << "PV_npvs (uncached/cached calls): " << counter_uncached_PV_npvs_ << " / " << counter_cached_PV_npvs_ << std::endl;;
    std::cout << "PV_npvsGood (uncached/cached calls): " << counter_uncached_PV_npvsGood_ << " / " << counter_cached_PV_npvsGood_ << std::endl;;
    std::cout << "PV_score (uncached/cached calls): " << counter_uncached_PV_score_ << " / " << counter_cached_PV_score_ << std::endl;;
    std::cout << "PV_x (uncached/cached calls): " << counter_uncached_PV_x_ << " / " << counter_cached_PV_x_ << std::endl;;
    std::cout << "PV_y (uncached/cached calls): " << counter_uncached_PV_y_ << " / " << counter_cached_PV_y_ << std::endl;;
    std::cout << "PV_z (uncached/cached calls): " << counter_uncached_PV_z_ << " / " << counter_cached_PV_z_ << std::endl;;
    std::cout << "Photon_charge (uncached/cached calls): " << counter_uncached_Photon_charge_ << " / " << counter_cached_Photon_charge_ << std::endl;;
    std::cout << "Photon_cleanmask (uncached/cached calls): " << counter_uncached_Photon_cleanmask_ << " / " << counter_cached_Photon_cleanmask_ << std::endl;;
    std::cout << "Photon_cutBased (uncached/cached calls): " << counter_uncached_Photon_cutBased_ << " / " << counter_cached_Photon_cutBased_ << std::endl;;
    std::cout << "Photon_cutBased17Bitmap (uncached/cached calls): " << counter_uncached_Photon_cutBased17Bitmap_ << " / " << counter_cached_Photon_cutBased17Bitmap_ << std::endl;;
    std::cout << "Photon_cutBasedBitmap (uncached/cached calls): " << counter_uncached_Photon_cutBasedBitmap_ << " / " << counter_cached_Photon_cutBasedBitmap_ << std::endl;;
    std::cout << "Photon_cutBased_Fall17V1Bitmap (uncached/cached calls): " << counter_uncached_Photon_cutBased_Fall17V1Bitmap_ << " / " << counter_cached_Photon_cutBased_Fall17V1Bitmap_ << std::endl;;
    std::cout << "Photon_cutBased_Fall17V2 (uncached/cached calls): " << counter_uncached_Photon_cutBased_Fall17V2_ << " / " << counter_cached_Photon_cutBased_Fall17V2_ << std::endl;;
    std::cout << "Photon_dEscaleDown (uncached/cached calls): " << counter_uncached_Photon_dEscaleDown_ << " / " << counter_cached_Photon_dEscaleDown_ << std::endl;;
    std::cout << "Photon_dEscaleUp (uncached/cached calls): " << counter_uncached_Photon_dEscaleUp_ << " / " << counter_cached_Photon_dEscaleUp_ << std::endl;;
    std::cout << "Photon_dEsigmaDown (uncached/cached calls): " << counter_uncached_Photon_dEsigmaDown_ << " / " << counter_cached_Photon_dEsigmaDown_ << std::endl;;
    std::cout << "Photon_dEsigmaUp (uncached/cached calls): " << counter_uncached_Photon_dEsigmaUp_ << " / " << counter_cached_Photon_dEsigmaUp_ << std::endl;;
    std::cout << "Photon_eCorr (uncached/cached calls): " << counter_uncached_Photon_eCorr_ << " / " << counter_cached_Photon_eCorr_ << std::endl;;
    std::cout << "Photon_electronIdx (uncached/cached calls): " << counter_uncached_Photon_electronIdx_ << " / " << counter_cached_Photon_electronIdx_ << std::endl;;
    std::cout << "Photon_electronVeto (uncached/cached calls): " << counter_uncached_Photon_electronVeto_ << " / " << counter_cached_Photon_electronVeto_ << std::endl;;
    std::cout << "Photon_energyErr (uncached/cached calls): " << counter_uncached_Photon_energyErr_ << " / " << counter_cached_Photon_energyErr_ << std::endl;;
    std::cout << "Photon_energyRaw (uncached/cached calls): " << counter_uncached_Photon_energyRaw_ << " / " << counter_cached_Photon_energyRaw_ << std::endl;;
    std::cout << "Photon_esEffSigmaRR (uncached/cached calls): " << counter_uncached_Photon_esEffSigmaRR_ << " / " << counter_cached_Photon_esEffSigmaRR_ << std::endl;;
    std::cout << "Photon_esEnergyOverRawE (uncached/cached calls): " << counter_uncached_Photon_esEnergyOverRawE_ << " / " << counter_cached_Photon_esEnergyOverRawE_ << std::endl;;
    std::cout << "Photon_eta (uncached/cached calls): " << counter_uncached_Photon_eta_ << " / " << counter_cached_Photon_eta_ << std::endl;;
    std::cout << "Photon_etaWidth (uncached/cached calls): " << counter_uncached_Photon_etaWidth_ << " / " << counter_cached_Photon_etaWidth_ << std::endl;;
    std::cout << "Photon_genPartFlav (uncached/cached calls): " << counter_uncached_Photon_genPartFlav_ << " / " << counter_cached_Photon_genPartFlav_ << std::endl;;
    std::cout << "Photon_genPartIdx (uncached/cached calls): " << counter_uncached_Photon_genPartIdx_ << " / " << counter_cached_Photon_genPartIdx_ << std::endl;;
    std::cout << "Photon_haloTaggerMVAVal (uncached/cached calls): " << counter_uncached_Photon_haloTaggerMVAVal_ << " / " << counter_cached_Photon_haloTaggerMVAVal_ << std::endl;;
    std::cout << "Photon_hoe (uncached/cached calls): " << counter_uncached_Photon_hoe_ << " / " << counter_cached_Photon_hoe_ << std::endl;;
    std::cout << "Photon_hoe_PUcorr (uncached/cached calls): " << counter_uncached_Photon_hoe_PUcorr_ << " / " << counter_cached_Photon_hoe_PUcorr_ << std::endl;;
    std::cout << "Photon_isScEtaEB (uncached/cached calls): " << counter_uncached_Photon_isScEtaEB_ << " / " << counter_cached_Photon_isScEtaEB_ << std::endl;;
    std::cout << "Photon_isScEtaEE (uncached/cached calls): " << counter_uncached_Photon_isScEtaEE_ << " / " << counter_cached_Photon_isScEtaEE_ << std::endl;;
    std::cout << "Photon_jetIdx (uncached/cached calls): " << counter_uncached_Photon_jetIdx_ << " / " << counter_cached_Photon_jetIdx_ << std::endl;;
    std::cout << "Photon_mass (uncached/cached calls): " << counter_uncached_Photon_mass_ << " / " << counter_cached_Photon_mass_ << std::endl;;
    std::cout << "Photon_mvaID (uncached/cached calls): " << counter_uncached_Photon_mvaID_ << " / " << counter_cached_Photon_mvaID_ << std::endl;;
    std::cout << "Photon_mvaID17 (uncached/cached calls): " << counter_uncached_Photon_mvaID17_ << " / " << counter_cached_Photon_mvaID17_ << std::endl;;
    std::cout << "Photon_mvaID17_WP80 (uncached/cached calls): " << counter_uncached_Photon_mvaID17_WP80_ << " / " << counter_cached_Photon_mvaID17_WP80_ << std::endl;;
    std::cout << "Photon_mvaID17_WP90 (uncached/cached calls): " << counter_uncached_Photon_mvaID17_WP90_ << " / " << counter_cached_Photon_mvaID17_WP90_ << std::endl;;
    std::cout << "Photon_mvaID_Fall17V1p1 (uncached/cached calls): " << counter_uncached_Photon_mvaID_Fall17V1p1_ << " / " << counter_cached_Photon_mvaID_Fall17V1p1_ << std::endl;;
    std::cout << "Photon_mvaID_Fall17V2 (uncached/cached calls): " << counter_uncached_Photon_mvaID_Fall17V2_ << " / " << counter_cached_Photon_mvaID_Fall17V2_ << std::endl;;
    std::cout << "Photon_mvaID_Fall17V2_WP80 (uncached/cached calls): " << counter_uncached_Photon_mvaID_Fall17V2_WP80_ << " / " << counter_cached_Photon_mvaID_Fall17V2_WP80_ << std::endl;;
    std::cout << "Photon_mvaID_Fall17V2_WP90 (uncached/cached calls): " << counter_uncached_Photon_mvaID_Fall17V2_WP90_ << " / " << counter_cached_Photon_mvaID_Fall17V2_WP90_ << std::endl;;
    std::cout << "Photon_mvaID_WP80 (uncached/cached calls): " << counter_uncached_Photon_mvaID_WP80_ << " / " << counter_cached_Photon_mvaID_WP80_ << std::endl;;
    std::cout << "Photon_mvaID_WP90 (uncached/cached calls): " << counter_uncached_Photon_mvaID_WP90_ << " / " << counter_cached_Photon_mvaID_WP90_ << std::endl;;
    std::cout << "Photon_p4 (uncached/cached calls): " << counter_uncached_Photon_p4_ << " / " << counter_cached_Photon_p4_ << std::endl;;
    std::cout << "Photon_pdgId (uncached/cached calls): " << counter_uncached_Photon_pdgId_ << " / " << counter_cached_Photon_pdgId_ << std::endl;;
    std::cout << "Photon_pfChargedIsoPFPV (uncached/cached calls): " << counter_uncached_Photon_pfChargedIsoPFPV_ << " / " << counter_cached_Photon_pfChargedIsoPFPV_ << std::endl;;
    std::cout << "Photon_pfChargedIsoWorstVtx (uncached/cached calls): " << counter_uncached_Photon_pfChargedIsoWorstVtx_ << " / " << counter_cached_Photon_pfChargedIsoWorstVtx_ << std::endl;;
    std::cout << "Photon_pfPhoIso03 (uncached/cached calls): " << counter_uncached_Photon_pfPhoIso03_ << " / " << counter_cached_Photon_pfPhoIso03_ << std::endl;;
    std::cout << "Photon_pfRelIso03_all (uncached/cached calls): " << counter_uncached_Photon_pfRelIso03_all_ << " / " << counter_cached_Photon_pfRelIso03_all_ << std::endl;;
    std::cout << "Photon_pfRelIso03_all_Fall17V2 (uncached/cached calls): " << counter_uncached_Photon_pfRelIso03_all_Fall17V2_ << " / " << counter_cached_Photon_pfRelIso03_all_Fall17V2_ << std::endl;;
    std::cout << "Photon_pfRelIso03_all_quadratic (uncached/cached calls): " << counter_uncached_Photon_pfRelIso03_all_quadratic_ << " / " << counter_cached_Photon_pfRelIso03_all_quadratic_ << std::endl;;
    std::cout << "Photon_pfRelIso03_chg (uncached/cached calls): " << counter_uncached_Photon_pfRelIso03_chg_ << " / " << counter_cached_Photon_pfRelIso03_chg_ << std::endl;;
    std::cout << "Photon_pfRelIso03_chg_Fall17V2 (uncached/cached calls): " << counter_uncached_Photon_pfRelIso03_chg_Fall17V2_ << " / " << counter_cached_Photon_pfRelIso03_chg_Fall17V2_ << std::endl;;
    std::cout << "Photon_pfRelIso03_chg_quadratic (uncached/cached calls): " << counter_uncached_Photon_pfRelIso03_chg_quadratic_ << " / " << counter_cached_Photon_pfRelIso03_chg_quadratic_ << std::endl;;
    std::cout << "Photon_phi (uncached/cached calls): " << counter_uncached_Photon_phi_ << " / " << counter_cached_Photon_phi_ << std::endl;;
    std::cout << "Photon_phiWidth (uncached/cached calls): " << counter_uncached_Photon_phiWidth_ << " / " << counter_cached_Photon_phiWidth_ << std::endl;;
    std::cout << "Photon_pixelSeed (uncached/cached calls): " << counter_uncached_Photon_pixelSeed_ << " / " << counter_cached_Photon_pixelSeed_ << std::endl;;
    std::cout << "Photon_pt (uncached/cached calls): " << counter_uncached_Photon_pt_ << " / " << counter_cached_Photon_pt_ << std::endl;;
    std::cout << "Photon_r9 (uncached/cached calls): " << counter_uncached_Photon_r9_ << " / " << counter_cached_Photon_r9_ << std::endl;;
    std::cout << "Photon_s4 (uncached/cached calls): " << counter_uncached_Photon_s4_ << " / " << counter_cached_Photon_s4_ << std::endl;;
    std::cout << "Photon_seedGain (uncached/cached calls): " << counter_uncached_Photon_seedGain_ << " / " << counter_cached_Photon_seedGain_ << std::endl;;
    std::cout << "Photon_seediEtaOriX (uncached/cached calls): " << counter_uncached_Photon_seediEtaOriX_ << " / " << counter_cached_Photon_seediEtaOriX_ << std::endl;;
    std::cout << "Photon_seediPhiOriY (uncached/cached calls): " << counter_uncached_Photon_seediPhiOriY_ << " / " << counter_cached_Photon_seediPhiOriY_ << std::endl;;
    std::cout << "Photon_sieie (uncached/cached calls): " << counter_uncached_Photon_sieie_ << " / " << counter_cached_Photon_sieie_ << std::endl;;
    std::cout << "Photon_sieip (uncached/cached calls): " << counter_uncached_Photon_sieip_ << " / " << counter_cached_Photon_sieip_ << std::endl;;
    std::cout << "Photon_sipip (uncached/cached calls): " << counter_uncached_Photon_sipip_ << " / " << counter_cached_Photon_sipip_ << std::endl;;
    std::cout << "Photon_vidNestedWPBitmap (uncached/cached calls): " << counter_uncached_Photon_vidNestedWPBitmap_ << " / " << counter_cached_Photon_vidNestedWPBitmap_ << std::endl;;
    std::cout << "Photon_vidNestedWPBitmap_Fall17V2 (uncached/cached calls): " << counter_uncached_Photon_vidNestedWPBitmap_Fall17V2_ << " / " << counter_cached_Photon_vidNestedWPBitmap_Fall17V2_ << std::endl;;
    std::cout << "Photon_x_calo (uncached/cached calls): " << counter_uncached_Photon_x_calo_ << " / " << counter_cached_Photon_x_calo_ << std::endl;;
    std::cout << "Photon_y_calo (uncached/cached calls): " << counter_uncached_Photon_y_calo_ << " / " << counter_cached_Photon_y_calo_ << std::endl;;
    std::cout << "Photon_z_calo (uncached/cached calls): " << counter_uncached_Photon_z_calo_ << " / " << counter_cached_Photon_z_calo_ << std::endl;;
    std::cout << "Pileup_gpudensity (uncached/cached calls): " << counter_uncached_Pileup_gpudensity_ << " / " << counter_cached_Pileup_gpudensity_ << std::endl;;
    std::cout << "Pileup_nPU (uncached/cached calls): " << counter_uncached_Pileup_nPU_ << " / " << counter_cached_Pileup_nPU_ << std::endl;;
    std::cout << "Pileup_nTrueInt (uncached/cached calls): " << counter_uncached_Pileup_nTrueInt_ << " / " << counter_cached_Pileup_nTrueInt_ << std::endl;;
    std::cout << "Pileup_pudensity (uncached/cached calls): " << counter_uncached_Pileup_pudensity_ << " / " << counter_cached_Pileup_pudensity_ << std::endl;;
    std::cout << "Pileup_sumEOOT (uncached/cached calls): " << counter_uncached_Pileup_sumEOOT_ << " / " << counter_cached_Pileup_sumEOOT_ << std::endl;;
    std::cout << "Pileup_sumLOOT (uncached/cached calls): " << counter_uncached_Pileup_sumLOOT_ << " / " << counter_cached_Pileup_sumLOOT_ << std::endl;;
    std::cout << "Proton_multiRP_arm (uncached/cached calls): " << counter_uncached_Proton_multiRP_arm_ << " / " << counter_cached_Proton_multiRP_arm_ << std::endl;;
    std::cout << "Proton_multiRP_t (uncached/cached calls): " << counter_uncached_Proton_multiRP_t_ << " / " << counter_cached_Proton_multiRP_t_ << std::endl;;
    std::cout << "Proton_multiRP_thetaX (uncached/cached calls): " << counter_uncached_Proton_multiRP_thetaX_ << " / " << counter_cached_Proton_multiRP_thetaX_ << std::endl;;
    std::cout << "Proton_multiRP_thetaY (uncached/cached calls): " << counter_uncached_Proton_multiRP_thetaY_ << " / " << counter_cached_Proton_multiRP_thetaY_ << std::endl;;
    std::cout << "Proton_multiRP_time (uncached/cached calls): " << counter_uncached_Proton_multiRP_time_ << " / " << counter_cached_Proton_multiRP_time_ << std::endl;;
    std::cout << "Proton_multiRP_timeUnc (uncached/cached calls): " << counter_uncached_Proton_multiRP_timeUnc_ << " / " << counter_cached_Proton_multiRP_timeUnc_ << std::endl;;
    std::cout << "Proton_multiRP_xi (uncached/cached calls): " << counter_uncached_Proton_multiRP_xi_ << " / " << counter_cached_Proton_multiRP_xi_ << std::endl;;
    std::cout << "Proton_singleRP_decRPId (uncached/cached calls): " << counter_uncached_Proton_singleRP_decRPId_ << " / " << counter_cached_Proton_singleRP_decRPId_ << std::endl;;
    std::cout << "Proton_singleRP_thetaY (uncached/cached calls): " << counter_uncached_Proton_singleRP_thetaY_ << " / " << counter_cached_Proton_singleRP_thetaY_ << std::endl;;
    std::cout << "Proton_singleRP_xi (uncached/cached calls): " << counter_uncached_Proton_singleRP_xi_ << " / " << counter_cached_Proton_singleRP_xi_ << std::endl;;
    std::cout << "PuppiMET_phi (uncached/cached calls): " << counter_uncached_PuppiMET_phi_ << " / " << counter_cached_PuppiMET_phi_ << std::endl;;
    std::cout << "PuppiMET_phiJERDown (uncached/cached calls): " << counter_uncached_PuppiMET_phiJERDown_ << " / " << counter_cached_PuppiMET_phiJERDown_ << std::endl;;
    std::cout << "PuppiMET_phiJERUp (uncached/cached calls): " << counter_uncached_PuppiMET_phiJERUp_ << " / " << counter_cached_PuppiMET_phiJERUp_ << std::endl;;
    std::cout << "PuppiMET_phiJESDown (uncached/cached calls): " << counter_uncached_PuppiMET_phiJESDown_ << " / " << counter_cached_PuppiMET_phiJESDown_ << std::endl;;
    std::cout << "PuppiMET_phiJESUp (uncached/cached calls): " << counter_uncached_PuppiMET_phiJESUp_ << " / " << counter_cached_PuppiMET_phiJESUp_ << std::endl;;
    std::cout << "PuppiMET_phiUnclusteredDown (uncached/cached calls): " << counter_uncached_PuppiMET_phiUnclusteredDown_ << " / " << counter_cached_PuppiMET_phiUnclusteredDown_ << std::endl;;
    std::cout << "PuppiMET_phiUnclusteredUp (uncached/cached calls): " << counter_uncached_PuppiMET_phiUnclusteredUp_ << " / " << counter_cached_PuppiMET_phiUnclusteredUp_ << std::endl;;
    std::cout << "PuppiMET_pt (uncached/cached calls): " << counter_uncached_PuppiMET_pt_ << " / " << counter_cached_PuppiMET_pt_ << std::endl;;
    std::cout << "PuppiMET_ptJERDown (uncached/cached calls): " << counter_uncached_PuppiMET_ptJERDown_ << " / " << counter_cached_PuppiMET_ptJERDown_ << std::endl;;
    std::cout << "PuppiMET_ptJERUp (uncached/cached calls): " << counter_uncached_PuppiMET_ptJERUp_ << " / " << counter_cached_PuppiMET_ptJERUp_ << std::endl;;
    std::cout << "PuppiMET_ptJESDown (uncached/cached calls): " << counter_uncached_PuppiMET_ptJESDown_ << " / " << counter_cached_PuppiMET_ptJESDown_ << std::endl;;
    std::cout << "PuppiMET_ptJESUp (uncached/cached calls): " << counter_uncached_PuppiMET_ptJESUp_ << " / " << counter_cached_PuppiMET_ptJESUp_ << std::endl;;
    std::cout << "PuppiMET_ptUnclusteredDown (uncached/cached calls): " << counter_uncached_PuppiMET_ptUnclusteredDown_ << " / " << counter_cached_PuppiMET_ptUnclusteredDown_ << std::endl;;
    std::cout << "PuppiMET_ptUnclusteredUp (uncached/cached calls): " << counter_uncached_PuppiMET_ptUnclusteredUp_ << " / " << counter_cached_PuppiMET_ptUnclusteredUp_ << std::endl;;
    std::cout << "PuppiMET_sumEt (uncached/cached calls): " << counter_uncached_PuppiMET_sumEt_ << " / " << counter_cached_PuppiMET_sumEt_ << std::endl;;
    std::cout << "RawMET_phi (uncached/cached calls): " << counter_uncached_RawMET_phi_ << " / " << counter_cached_RawMET_phi_ << std::endl;;
    std::cout << "RawMET_pt (uncached/cached calls): " << counter_uncached_RawMET_pt_ << " / " << counter_cached_RawMET_pt_ << std::endl;;
    std::cout << "RawMET_sumEt (uncached/cached calls): " << counter_uncached_RawMET_sumEt_ << " / " << counter_cached_RawMET_sumEt_ << std::endl;;
    std::cout << "RawPuppiMET_phi (uncached/cached calls): " << counter_uncached_RawPuppiMET_phi_ << " / " << counter_cached_RawPuppiMET_phi_ << std::endl;;
    std::cout << "RawPuppiMET_pt (uncached/cached calls): " << counter_uncached_RawPuppiMET_pt_ << " / " << counter_cached_RawPuppiMET_pt_ << std::endl;;
    std::cout << "RawPuppiMET_sumEt (uncached/cached calls): " << counter_uncached_RawPuppiMET_sumEt_ << " / " << counter_cached_RawPuppiMET_sumEt_ << std::endl;;
    std::cout << "Rho_fixedGridRhoAll (uncached/cached calls): " << counter_uncached_Rho_fixedGridRhoAll_ << " / " << counter_cached_Rho_fixedGridRhoAll_ << std::endl;;
    std::cout << "Rho_fixedGridRhoFastjetAll (uncached/cached calls): " << counter_uncached_Rho_fixedGridRhoFastjetAll_ << " / " << counter_cached_Rho_fixedGridRhoFastjetAll_ << std::endl;;
    std::cout << "Rho_fixedGridRhoFastjetCentral (uncached/cached calls): " << counter_uncached_Rho_fixedGridRhoFastjetCentral_ << " / " << counter_cached_Rho_fixedGridRhoFastjetCentral_ << std::endl;;
    std::cout << "Rho_fixedGridRhoFastjetCentralCalo (uncached/cached calls): " << counter_uncached_Rho_fixedGridRhoFastjetCentralCalo_ << " / " << counter_cached_Rho_fixedGridRhoFastjetCentralCalo_ << std::endl;;
    std::cout << "Rho_fixedGridRhoFastjetCentralChargedPileUp (uncached/cached calls): " << counter_uncached_Rho_fixedGridRhoFastjetCentralChargedPileUp_ << " / " << counter_cached_Rho_fixedGridRhoFastjetCentralChargedPileUp_ << std::endl;;
    std::cout << "Rho_fixedGridRhoFastjetCentralNeutral (uncached/cached calls): " << counter_uncached_Rho_fixedGridRhoFastjetCentralNeutral_ << " / " << counter_cached_Rho_fixedGridRhoFastjetCentralNeutral_ << std::endl;;
    std::cout << "SV_charge (uncached/cached calls): " << counter_uncached_SV_charge_ << " / " << counter_cached_SV_charge_ << std::endl;;
    std::cout << "SV_chi2 (uncached/cached calls): " << counter_uncached_SV_chi2_ << " / " << counter_cached_SV_chi2_ << std::endl;;
    std::cout << "SV_dlen (uncached/cached calls): " << counter_uncached_SV_dlen_ << " / " << counter_cached_SV_dlen_ << std::endl;;
    std::cout << "SV_dlenSig (uncached/cached calls): " << counter_uncached_SV_dlenSig_ << " / " << counter_cached_SV_dlenSig_ << std::endl;;
    std::cout << "SV_dxy (uncached/cached calls): " << counter_uncached_SV_dxy_ << " / " << counter_cached_SV_dxy_ << std::endl;;
    std::cout << "SV_dxySig (uncached/cached calls): " << counter_uncached_SV_dxySig_ << " / " << counter_cached_SV_dxySig_ << std::endl;;
    std::cout << "SV_eta (uncached/cached calls): " << counter_uncached_SV_eta_ << " / " << counter_cached_SV_eta_ << std::endl;;
    std::cout << "SV_mass (uncached/cached calls): " << counter_uncached_SV_mass_ << " / " << counter_cached_SV_mass_ << std::endl;;
    std::cout << "SV_ndof (uncached/cached calls): " << counter_uncached_SV_ndof_ << " / " << counter_cached_SV_ndof_ << std::endl;;
    std::cout << "SV_ntracks (uncached/cached calls): " << counter_uncached_SV_ntracks_ << " / " << counter_cached_SV_ntracks_ << std::endl;;
    std::cout << "SV_p4 (uncached/cached calls): " << counter_uncached_SV_p4_ << " / " << counter_cached_SV_p4_ << std::endl;;
    std::cout << "SV_pAngle (uncached/cached calls): " << counter_uncached_SV_pAngle_ << " / " << counter_cached_SV_pAngle_ << std::endl;;
    std::cout << "SV_phi (uncached/cached calls): " << counter_uncached_SV_phi_ << " / " << counter_cached_SV_phi_ << std::endl;;
    std::cout << "SV_pt (uncached/cached calls): " << counter_uncached_SV_pt_ << " / " << counter_cached_SV_pt_ << std::endl;;
    std::cout << "SV_x (uncached/cached calls): " << counter_uncached_SV_x_ << " / " << counter_cached_SV_x_ << std::endl;;
    std::cout << "SV_y (uncached/cached calls): " << counter_uncached_SV_y_ << " / " << counter_cached_SV_y_ << std::endl;;
    std::cout << "SV_z (uncached/cached calls): " << counter_uncached_SV_z_ << " / " << counter_cached_SV_z_ << std::endl;;
    std::cout << "SoftActivityJetHT (uncached/cached calls): " << counter_uncached_SoftActivityJetHT_ << " / " << counter_cached_SoftActivityJetHT_ << std::endl;;
    std::cout << "SoftActivityJetHT10 (uncached/cached calls): " << counter_uncached_SoftActivityJetHT10_ << " / " << counter_cached_SoftActivityJetHT10_ << std::endl;;
    std::cout << "SoftActivityJetHT2 (uncached/cached calls): " << counter_uncached_SoftActivityJetHT2_ << " / " << counter_cached_SoftActivityJetHT2_ << std::endl;;
    std::cout << "SoftActivityJetHT5 (uncached/cached calls): " << counter_uncached_SoftActivityJetHT5_ << " / " << counter_cached_SoftActivityJetHT5_ << std::endl;;
    std::cout << "SoftActivityJetNjets10 (uncached/cached calls): " << counter_uncached_SoftActivityJetNjets10_ << " / " << counter_cached_SoftActivityJetNjets10_ << std::endl;;
    std::cout << "SoftActivityJetNjets2 (uncached/cached calls): " << counter_uncached_SoftActivityJetNjets2_ << " / " << counter_cached_SoftActivityJetNjets2_ << std::endl;;
    std::cout << "SoftActivityJetNjets5 (uncached/cached calls): " << counter_uncached_SoftActivityJetNjets5_ << " / " << counter_cached_SoftActivityJetNjets5_ << std::endl;;
    std::cout << "SoftActivityJet_eta (uncached/cached calls): " << counter_uncached_SoftActivityJet_eta_ << " / " << counter_cached_SoftActivityJet_eta_ << std::endl;;
    std::cout << "SoftActivityJet_phi (uncached/cached calls): " << counter_uncached_SoftActivityJet_phi_ << " / " << counter_cached_SoftActivityJet_phi_ << std::endl;;
    std::cout << "SoftActivityJet_pt (uncached/cached calls): " << counter_uncached_SoftActivityJet_pt_ << " / " << counter_cached_SoftActivityJet_pt_ << std::endl;;
    std::cout << "SubGenJetAK8_eta (uncached/cached calls): " << counter_uncached_SubGenJetAK8_eta_ << " / " << counter_cached_SubGenJetAK8_eta_ << std::endl;;
    std::cout << "SubGenJetAK8_mass (uncached/cached calls): " << counter_uncached_SubGenJetAK8_mass_ << " / " << counter_cached_SubGenJetAK8_mass_ << std::endl;;
    std::cout << "SubGenJetAK8_p4 (uncached/cached calls): " << counter_uncached_SubGenJetAK8_p4_ << " / " << counter_cached_SubGenJetAK8_p4_ << std::endl;;
    std::cout << "SubGenJetAK8_phi (uncached/cached calls): " << counter_uncached_SubGenJetAK8_phi_ << " / " << counter_cached_SubGenJetAK8_phi_ << std::endl;;
    std::cout << "SubGenJetAK8_pt (uncached/cached calls): " << counter_uncached_SubGenJetAK8_pt_ << " / " << counter_cached_SubGenJetAK8_pt_ << std::endl;;
    std::cout << "SubJet_btagCMVA (uncached/cached calls): " << counter_uncached_SubJet_btagCMVA_ << " / " << counter_cached_SubJet_btagCMVA_ << std::endl;;
    std::cout << "SubJet_btagCSVV2 (uncached/cached calls): " << counter_uncached_SubJet_btagCSVV2_ << " / " << counter_cached_SubJet_btagCSVV2_ << std::endl;;
    std::cout << "SubJet_btagDeepB (uncached/cached calls): " << counter_uncached_SubJet_btagDeepB_ << " / " << counter_cached_SubJet_btagDeepB_ << std::endl;;
    std::cout << "SubJet_eta (uncached/cached calls): " << counter_uncached_SubJet_eta_ << " / " << counter_cached_SubJet_eta_ << std::endl;;
    std::cout << "SubJet_hadronFlavour (uncached/cached calls): " << counter_uncached_SubJet_hadronFlavour_ << " / " << counter_cached_SubJet_hadronFlavour_ << std::endl;;
    std::cout << "SubJet_mass (uncached/cached calls): " << counter_uncached_SubJet_mass_ << " / " << counter_cached_SubJet_mass_ << std::endl;;
    std::cout << "SubJet_n2b1 (uncached/cached calls): " << counter_uncached_SubJet_n2b1_ << " / " << counter_cached_SubJet_n2b1_ << std::endl;;
    std::cout << "SubJet_n3b1 (uncached/cached calls): " << counter_uncached_SubJet_n3b1_ << " / " << counter_cached_SubJet_n3b1_ << std::endl;;
    std::cout << "SubJet_nBHadrons (uncached/cached calls): " << counter_uncached_SubJet_nBHadrons_ << " / " << counter_cached_SubJet_nBHadrons_ << std::endl;;
    std::cout << "SubJet_nCHadrons (uncached/cached calls): " << counter_uncached_SubJet_nCHadrons_ << " / " << counter_cached_SubJet_nCHadrons_ << std::endl;;
    std::cout << "SubJet_p4 (uncached/cached calls): " << counter_uncached_SubJet_p4_ << " / " << counter_cached_SubJet_p4_ << std::endl;;
    std::cout << "SubJet_phi (uncached/cached calls): " << counter_uncached_SubJet_phi_ << " / " << counter_cached_SubJet_phi_ << std::endl;;
    std::cout << "SubJet_pt (uncached/cached calls): " << counter_uncached_SubJet_pt_ << " / " << counter_cached_SubJet_pt_ << std::endl;;
    std::cout << "SubJet_rawFactor (uncached/cached calls): " << counter_uncached_SubJet_rawFactor_ << " / " << counter_cached_SubJet_rawFactor_ << std::endl;;
    std::cout << "SubJet_tau1 (uncached/cached calls): " << counter_uncached_SubJet_tau1_ << " / " << counter_cached_SubJet_tau1_ << std::endl;;
    std::cout << "SubJet_tau2 (uncached/cached calls): " << counter_uncached_SubJet_tau2_ << " / " << counter_cached_SubJet_tau2_ << std::endl;;
    std::cout << "SubJet_tau3 (uncached/cached calls): " << counter_uncached_SubJet_tau3_ << " / " << counter_cached_SubJet_tau3_ << std::endl;;
    std::cout << "SubJet_tau4 (uncached/cached calls): " << counter_uncached_SubJet_tau4_ << " / " << counter_cached_SubJet_tau4_ << std::endl;;
    std::cout << "Tau_charge (uncached/cached calls): " << counter_uncached_Tau_charge_ << " / " << counter_cached_Tau_charge_ << std::endl;;
    std::cout << "Tau_chargedIso (uncached/cached calls): " << counter_uncached_Tau_chargedIso_ << " / " << counter_cached_Tau_chargedIso_ << std::endl;;
    std::cout << "Tau_cleanmask (uncached/cached calls): " << counter_uncached_Tau_cleanmask_ << " / " << counter_cached_Tau_cleanmask_ << std::endl;;
    std::cout << "Tau_decayMode (uncached/cached calls): " << counter_uncached_Tau_decayMode_ << " / " << counter_cached_Tau_decayMode_ << std::endl;;
    std::cout << "Tau_dxy (uncached/cached calls): " << counter_uncached_Tau_dxy_ << " / " << counter_cached_Tau_dxy_ << std::endl;;
    std::cout << "Tau_dz (uncached/cached calls): " << counter_uncached_Tau_dz_ << " / " << counter_cached_Tau_dz_ << std::endl;;
    std::cout << "Tau_eleIdx (uncached/cached calls): " << counter_uncached_Tau_eleIdx_ << " / " << counter_cached_Tau_eleIdx_ << std::endl;;
    std::cout << "Tau_eta (uncached/cached calls): " << counter_uncached_Tau_eta_ << " / " << counter_cached_Tau_eta_ << std::endl;;
    std::cout << "Tau_genPartFlav (uncached/cached calls): " << counter_uncached_Tau_genPartFlav_ << " / " << counter_cached_Tau_genPartFlav_ << std::endl;;
    std::cout << "Tau_genPartIdx (uncached/cached calls): " << counter_uncached_Tau_genPartIdx_ << " / " << counter_cached_Tau_genPartIdx_ << std::endl;;
    std::cout << "Tau_idAntiEle (uncached/cached calls): " << counter_uncached_Tau_idAntiEle_ << " / " << counter_cached_Tau_idAntiEle_ << std::endl;;
    std::cout << "Tau_idAntiEle2018 (uncached/cached calls): " << counter_uncached_Tau_idAntiEle2018_ << " / " << counter_cached_Tau_idAntiEle2018_ << std::endl;;
    std::cout << "Tau_idAntiEleDeadECal (uncached/cached calls): " << counter_uncached_Tau_idAntiEleDeadECal_ << " / " << counter_cached_Tau_idAntiEleDeadECal_ << std::endl;;
    std::cout << "Tau_idAntiMu (uncached/cached calls): " << counter_uncached_Tau_idAntiMu_ << " / " << counter_cached_Tau_idAntiMu_ << std::endl;;
    std::cout << "Tau_idDecayMode (uncached/cached calls): " << counter_uncached_Tau_idDecayMode_ << " / " << counter_cached_Tau_idDecayMode_ << std::endl;;
    std::cout << "Tau_idDecayModeNewDMs (uncached/cached calls): " << counter_uncached_Tau_idDecayModeNewDMs_ << " / " << counter_cached_Tau_idDecayModeNewDMs_ << std::endl;;
    std::cout << "Tau_idDecayModeOldDMs (uncached/cached calls): " << counter_uncached_Tau_idDecayModeOldDMs_ << " / " << counter_cached_Tau_idDecayModeOldDMs_ << std::endl;;
    std::cout << "Tau_idDeepTau2017v2p1VSe (uncached/cached calls): " << counter_uncached_Tau_idDeepTau2017v2p1VSe_ << " / " << counter_cached_Tau_idDeepTau2017v2p1VSe_ << std::endl;;
    std::cout << "Tau_idDeepTau2017v2p1VSjet (uncached/cached calls): " << counter_uncached_Tau_idDeepTau2017v2p1VSjet_ << " / " << counter_cached_Tau_idDeepTau2017v2p1VSjet_ << std::endl;;
    std::cout << "Tau_idDeepTau2017v2p1VSmu (uncached/cached calls): " << counter_uncached_Tau_idDeepTau2017v2p1VSmu_ << " / " << counter_cached_Tau_idDeepTau2017v2p1VSmu_ << std::endl;;
    std::cout << "Tau_idDeepTau2018v2p5VSe (uncached/cached calls): " << counter_uncached_Tau_idDeepTau2018v2p5VSe_ << " / " << counter_cached_Tau_idDeepTau2018v2p5VSe_ << std::endl;;
    std::cout << "Tau_idDeepTau2018v2p5VSjet (uncached/cached calls): " << counter_uncached_Tau_idDeepTau2018v2p5VSjet_ << " / " << counter_cached_Tau_idDeepTau2018v2p5VSjet_ << std::endl;;
    std::cout << "Tau_idDeepTau2018v2p5VSmu (uncached/cached calls): " << counter_uncached_Tau_idDeepTau2018v2p5VSmu_ << " / " << counter_cached_Tau_idDeepTau2018v2p5VSmu_ << std::endl;;
    std::cout << "Tau_idMVAnewDM2017v2 (uncached/cached calls): " << counter_uncached_Tau_idMVAnewDM2017v2_ << " / " << counter_cached_Tau_idMVAnewDM2017v2_ << std::endl;;
    std::cout << "Tau_idMVAoldDM (uncached/cached calls): " << counter_uncached_Tau_idMVAoldDM_ << " / " << counter_cached_Tau_idMVAoldDM_ << std::endl;;
    std::cout << "Tau_idMVAoldDM2017v1 (uncached/cached calls): " << counter_uncached_Tau_idMVAoldDM2017v1_ << " / " << counter_cached_Tau_idMVAoldDM2017v1_ << std::endl;;
    std::cout << "Tau_idMVAoldDM2017v2 (uncached/cached calls): " << counter_uncached_Tau_idMVAoldDM2017v2_ << " / " << counter_cached_Tau_idMVAoldDM2017v2_ << std::endl;;
    std::cout << "Tau_idMVAoldDMdR032017v2 (uncached/cached calls): " << counter_uncached_Tau_idMVAoldDMdR032017v2_ << " / " << counter_cached_Tau_idMVAoldDMdR032017v2_ << std::endl;;
    std::cout << "Tau_jetIdx (uncached/cached calls): " << counter_uncached_Tau_jetIdx_ << " / " << counter_cached_Tau_jetIdx_ << std::endl;;
    std::cout << "Tau_leadTkDeltaEta (uncached/cached calls): " << counter_uncached_Tau_leadTkDeltaEta_ << " / " << counter_cached_Tau_leadTkDeltaEta_ << std::endl;;
    std::cout << "Tau_leadTkDeltaPhi (uncached/cached calls): " << counter_uncached_Tau_leadTkDeltaPhi_ << " / " << counter_cached_Tau_leadTkDeltaPhi_ << std::endl;;
    std::cout << "Tau_leadTkPtOverTauPt (uncached/cached calls): " << counter_uncached_Tau_leadTkPtOverTauPt_ << " / " << counter_cached_Tau_leadTkPtOverTauPt_ << std::endl;;
    std::cout << "Tau_mass (uncached/cached calls): " << counter_uncached_Tau_mass_ << " / " << counter_cached_Tau_mass_ << std::endl;;
    std::cout << "Tau_muIdx (uncached/cached calls): " << counter_uncached_Tau_muIdx_ << " / " << counter_cached_Tau_muIdx_ << std::endl;;
    std::cout << "Tau_nSVs (uncached/cached calls): " << counter_uncached_Tau_nSVs_ << " / " << counter_cached_Tau_nSVs_ << std::endl;;
    std::cout << "Tau_neutralIso (uncached/cached calls): " << counter_uncached_Tau_neutralIso_ << " / " << counter_cached_Tau_neutralIso_ << std::endl;;
    std::cout << "Tau_p4 (uncached/cached calls): " << counter_uncached_Tau_p4_ << " / " << counter_cached_Tau_p4_ << std::endl;;
    std::cout << "Tau_phi (uncached/cached calls): " << counter_uncached_Tau_phi_ << " / " << counter_cached_Tau_phi_ << std::endl;;
    std::cout << "Tau_photonsOutsideSignalCone (uncached/cached calls): " << counter_uncached_Tau_photonsOutsideSignalCone_ << " / " << counter_cached_Tau_photonsOutsideSignalCone_ << std::endl;;
    std::cout << "Tau_pt (uncached/cached calls): " << counter_uncached_Tau_pt_ << " / " << counter_cached_Tau_pt_ << std::endl;;
    std::cout << "Tau_puCorr (uncached/cached calls): " << counter_uncached_Tau_puCorr_ << " / " << counter_cached_Tau_puCorr_ << std::endl;;
    std::cout << "Tau_rawAntiEle (uncached/cached calls): " << counter_uncached_Tau_rawAntiEle_ << " / " << counter_cached_Tau_rawAntiEle_ << std::endl;;
    std::cout << "Tau_rawAntiEle2018 (uncached/cached calls): " << counter_uncached_Tau_rawAntiEle2018_ << " / " << counter_cached_Tau_rawAntiEle2018_ << std::endl;;
    std::cout << "Tau_rawAntiEleCat (uncached/cached calls): " << counter_uncached_Tau_rawAntiEleCat_ << " / " << counter_cached_Tau_rawAntiEleCat_ << std::endl;;
    std::cout << "Tau_rawAntiEleCat2018 (uncached/cached calls): " << counter_uncached_Tau_rawAntiEleCat2018_ << " / " << counter_cached_Tau_rawAntiEleCat2018_ << std::endl;;
    std::cout << "Tau_rawDeepTau2017v2p1VSe (uncached/cached calls): " << counter_uncached_Tau_rawDeepTau2017v2p1VSe_ << " / " << counter_cached_Tau_rawDeepTau2017v2p1VSe_ << std::endl;;
    std::cout << "Tau_rawDeepTau2017v2p1VSjet (uncached/cached calls): " << counter_uncached_Tau_rawDeepTau2017v2p1VSjet_ << " / " << counter_cached_Tau_rawDeepTau2017v2p1VSjet_ << std::endl;;
    std::cout << "Tau_rawDeepTau2017v2p1VSmu (uncached/cached calls): " << counter_uncached_Tau_rawDeepTau2017v2p1VSmu_ << " / " << counter_cached_Tau_rawDeepTau2017v2p1VSmu_ << std::endl;;
    std::cout << "Tau_rawDeepTau2018v2p5VSe (uncached/cached calls): " << counter_uncached_Tau_rawDeepTau2018v2p5VSe_ << " / " << counter_cached_Tau_rawDeepTau2018v2p5VSe_ << std::endl;;
    std::cout << "Tau_rawDeepTau2018v2p5VSjet (uncached/cached calls): " << counter_uncached_Tau_rawDeepTau2018v2p5VSjet_ << " / " << counter_cached_Tau_rawDeepTau2018v2p5VSjet_ << std::endl;;
    std::cout << "Tau_rawDeepTau2018v2p5VSmu (uncached/cached calls): " << counter_uncached_Tau_rawDeepTau2018v2p5VSmu_ << " / " << counter_cached_Tau_rawDeepTau2018v2p5VSmu_ << std::endl;;
    std::cout << "Tau_rawIso (uncached/cached calls): " << counter_uncached_Tau_rawIso_ << " / " << counter_cached_Tau_rawIso_ << std::endl;;
    std::cout << "Tau_rawIsodR03 (uncached/cached calls): " << counter_uncached_Tau_rawIsodR03_ << " / " << counter_cached_Tau_rawIsodR03_ << std::endl;;
    std::cout << "Tau_rawMVAnewDM2017v2 (uncached/cached calls): " << counter_uncached_Tau_rawMVAnewDM2017v2_ << " / " << counter_cached_Tau_rawMVAnewDM2017v2_ << std::endl;;
    std::cout << "Tau_rawMVAoldDM (uncached/cached calls): " << counter_uncached_Tau_rawMVAoldDM_ << " / " << counter_cached_Tau_rawMVAoldDM_ << std::endl;;
    std::cout << "Tau_rawMVAoldDM2017v1 (uncached/cached calls): " << counter_uncached_Tau_rawMVAoldDM2017v1_ << " / " << counter_cached_Tau_rawMVAoldDM2017v1_ << std::endl;;
    std::cout << "Tau_rawMVAoldDM2017v2 (uncached/cached calls): " << counter_uncached_Tau_rawMVAoldDM2017v2_ << " / " << counter_cached_Tau_rawMVAoldDM2017v2_ << std::endl;;
    std::cout << "Tau_rawMVAoldDMdR032017v2 (uncached/cached calls): " << counter_uncached_Tau_rawMVAoldDMdR032017v2_ << " / " << counter_cached_Tau_rawMVAoldDMdR032017v2_ << std::endl;;
    std::cout << "Tau_svIdx1 (uncached/cached calls): " << counter_uncached_Tau_svIdx1_ << " / " << counter_cached_Tau_svIdx1_ << std::endl;;
    std::cout << "Tau_svIdx2 (uncached/cached calls): " << counter_uncached_Tau_svIdx2_ << " / " << counter_cached_Tau_svIdx2_ << std::endl;;
    std::cout << "TkMET_phi (uncached/cached calls): " << counter_uncached_TkMET_phi_ << " / " << counter_cached_TkMET_phi_ << std::endl;;
    std::cout << "TkMET_pt (uncached/cached calls): " << counter_uncached_TkMET_pt_ << " / " << counter_cached_TkMET_pt_ << std::endl;;
    std::cout << "TkMET_sumEt (uncached/cached calls): " << counter_uncached_TkMET_sumEt_ << " / " << counter_cached_TkMET_sumEt_ << std::endl;;
    std::cout << "TrigObj_eta (uncached/cached calls): " << counter_uncached_TrigObj_eta_ << " / " << counter_cached_TrigObj_eta_ << std::endl;;
    std::cout << "TrigObj_filterBits (uncached/cached calls): " << counter_uncached_TrigObj_filterBits_ << " / " << counter_cached_TrigObj_filterBits_ << std::endl;;
    std::cout << "TrigObj_id (uncached/cached calls): " << counter_uncached_TrigObj_id_ << " / " << counter_cached_TrigObj_id_ << std::endl;;
    std::cout << "TrigObj_l1charge (uncached/cached calls): " << counter_uncached_TrigObj_l1charge_ << " / " << counter_cached_TrigObj_l1charge_ << std::endl;;
    std::cout << "TrigObj_l1iso (uncached/cached calls): " << counter_uncached_TrigObj_l1iso_ << " / " << counter_cached_TrigObj_l1iso_ << std::endl;;
    std::cout << "TrigObj_l1pt (uncached/cached calls): " << counter_uncached_TrigObj_l1pt_ << " / " << counter_cached_TrigObj_l1pt_ << std::endl;;
    std::cout << "TrigObj_l1pt_2 (uncached/cached calls): " << counter_uncached_TrigObj_l1pt_2_ << " / " << counter_cached_TrigObj_l1pt_2_ << std::endl;;
    std::cout << "TrigObj_l2pt (uncached/cached calls): " << counter_uncached_TrigObj_l2pt_ << " / " << counter_cached_TrigObj_l2pt_ << std::endl;;
    std::cout << "TrigObj_phi (uncached/cached calls): " << counter_uncached_TrigObj_phi_ << " / " << counter_cached_TrigObj_phi_ << std::endl;;
    std::cout << "TrigObj_pt (uncached/cached calls): " << counter_uncached_TrigObj_pt_ << " / " << counter_cached_TrigObj_pt_ << std::endl;;
    std::cout << "WCnames (uncached/cached calls): " << counter_uncached_WCnames_ << " / " << counter_cached_WCnames_ << std::endl;;
    std::cout << "boostedTau_charge (uncached/cached calls): " << counter_uncached_boostedTau_charge_ << " / " << counter_cached_boostedTau_charge_ << std::endl;;
    std::cout << "boostedTau_chargedIso (uncached/cached calls): " << counter_uncached_boostedTau_chargedIso_ << " / " << counter_cached_boostedTau_chargedIso_ << std::endl;;
    std::cout << "boostedTau_decayMode (uncached/cached calls): " << counter_uncached_boostedTau_decayMode_ << " / " << counter_cached_boostedTau_decayMode_ << std::endl;;
    std::cout << "boostedTau_eta (uncached/cached calls): " << counter_uncached_boostedTau_eta_ << " / " << counter_cached_boostedTau_eta_ << std::endl;;
    std::cout << "boostedTau_genPartFlav (uncached/cached calls): " << counter_uncached_boostedTau_genPartFlav_ << " / " << counter_cached_boostedTau_genPartFlav_ << std::endl;;
    std::cout << "boostedTau_genPartIdx (uncached/cached calls): " << counter_uncached_boostedTau_genPartIdx_ << " / " << counter_cached_boostedTau_genPartIdx_ << std::endl;;
    std::cout << "boostedTau_idAntiEle2018 (uncached/cached calls): " << counter_uncached_boostedTau_idAntiEle2018_ << " / " << counter_cached_boostedTau_idAntiEle2018_ << std::endl;;
    std::cout << "boostedTau_idAntiMu (uncached/cached calls): " << counter_uncached_boostedTau_idAntiMu_ << " / " << counter_cached_boostedTau_idAntiMu_ << std::endl;;
    std::cout << "boostedTau_idMVAnewDM2017v2 (uncached/cached calls): " << counter_uncached_boostedTau_idMVAnewDM2017v2_ << " / " << counter_cached_boostedTau_idMVAnewDM2017v2_ << std::endl;;
    std::cout << "boostedTau_idMVAoldDM2017v2 (uncached/cached calls): " << counter_uncached_boostedTau_idMVAoldDM2017v2_ << " / " << counter_cached_boostedTau_idMVAoldDM2017v2_ << std::endl;;
    std::cout << "boostedTau_idMVAoldDMdR032017v2 (uncached/cached calls): " << counter_uncached_boostedTau_idMVAoldDMdR032017v2_ << " / " << counter_cached_boostedTau_idMVAoldDMdR032017v2_ << std::endl;;
    std::cout << "boostedTau_jetIdx (uncached/cached calls): " << counter_uncached_boostedTau_jetIdx_ << " / " << counter_cached_boostedTau_jetIdx_ << std::endl;;
    std::cout << "boostedTau_leadTkDeltaEta (uncached/cached calls): " << counter_uncached_boostedTau_leadTkDeltaEta_ << " / " << counter_cached_boostedTau_leadTkDeltaEta_ << std::endl;;
    std::cout << "boostedTau_leadTkDeltaPhi (uncached/cached calls): " << counter_uncached_boostedTau_leadTkDeltaPhi_ << " / " << counter_cached_boostedTau_leadTkDeltaPhi_ << std::endl;;
    std::cout << "boostedTau_leadTkPtOverTauPt (uncached/cached calls): " << counter_uncached_boostedTau_leadTkPtOverTauPt_ << " / " << counter_cached_boostedTau_leadTkPtOverTauPt_ << std::endl;;
    std::cout << "boostedTau_mass (uncached/cached calls): " << counter_uncached_boostedTau_mass_ << " / " << counter_cached_boostedTau_mass_ << std::endl;;
    std::cout << "boostedTau_neutralIso (uncached/cached calls): " << counter_uncached_boostedTau_neutralIso_ << " / " << counter_cached_boostedTau_neutralIso_ << std::endl;;
    std::cout << "boostedTau_p4 (uncached/cached calls): " << counter_uncached_boostedTau_p4_ << " / " << counter_cached_boostedTau_p4_ << std::endl;;
    std::cout << "boostedTau_phi (uncached/cached calls): " << counter_uncached_boostedTau_phi_ << " / " << counter_cached_boostedTau_phi_ << std::endl;;
    std::cout << "boostedTau_photonsOutsideSignalCone (uncached/cached calls): " << counter_uncached_boostedTau_photonsOutsideSignalCone_ << " / " << counter_cached_boostedTau_photonsOutsideSignalCone_ << std::endl;;
    std::cout << "boostedTau_pt (uncached/cached calls): " << counter_uncached_boostedTau_pt_ << " / " << counter_cached_boostedTau_pt_ << std::endl;;
    std::cout << "boostedTau_puCorr (uncached/cached calls): " << counter_uncached_boostedTau_puCorr_ << " / " << counter_cached_boostedTau_puCorr_ << std::endl;;
    std::cout << "boostedTau_rawAntiEle2018 (uncached/cached calls): " << counter_uncached_boostedTau_rawAntiEle2018_ << " / " << counter_cached_boostedTau_rawAntiEle2018_ << std::endl;;
    std::cout << "boostedTau_rawAntiEleCat2018 (uncached/cached calls): " << counter_uncached_boostedTau_rawAntiEleCat2018_ << " / " << counter_cached_boostedTau_rawAntiEleCat2018_ << std::endl;;
    std::cout << "boostedTau_rawIso (uncached/cached calls): " << counter_uncached_boostedTau_rawIso_ << " / " << counter_cached_boostedTau_rawIso_ << std::endl;;
    std::cout << "boostedTau_rawIsodR03 (uncached/cached calls): " << counter_uncached_boostedTau_rawIsodR03_ << " / " << counter_cached_boostedTau_rawIsodR03_ << std::endl;;
    std::cout << "boostedTau_rawMVAnewDM2017v2 (uncached/cached calls): " << counter_uncached_boostedTau_rawMVAnewDM2017v2_ << " / " << counter_cached_boostedTau_rawMVAnewDM2017v2_ << std::endl;;
    std::cout << "boostedTau_rawMVAoldDM2017v2 (uncached/cached calls): " << counter_uncached_boostedTau_rawMVAoldDM2017v2_ << " / " << counter_cached_boostedTau_rawMVAoldDM2017v2_ << std::endl;;
    std::cout << "boostedTau_rawMVAoldDMdR032017v2 (uncached/cached calls): " << counter_uncached_boostedTau_rawMVAoldDMdR032017v2_ << " / " << counter_cached_boostedTau_rawMVAoldDMdR032017v2_ << std::endl;;
    std::cout << "btagWeight_CSVV2 (uncached/cached calls): " << counter_uncached_btagWeight_CSVV2_ << " / " << counter_cached_btagWeight_CSVV2_ << std::endl;;
    std::cout << "btagWeight_DeepCSVB (uncached/cached calls): " << counter_uncached_btagWeight_DeepCSVB_ << " / " << counter_cached_btagWeight_DeepCSVB_ << std::endl;;
    std::cout << "bunchCrossing (uncached/cached calls): " << counter_uncached_bunchCrossing_ << " / " << counter_cached_bunchCrossing_ << std::endl;;
    std::cout << "event (uncached/cached calls): " << counter_uncached_event_ << " / " << counter_cached_event_ << std::endl;;
    std::cout << "fixedGridRhoFastjetAll (uncached/cached calls): " << counter_uncached_fixedGridRhoFastjetAll_ << " / " << counter_cached_fixedGridRhoFastjetAll_ << std::endl;;
    std::cout << "fixedGridRhoFastjetCentral (uncached/cached calls): " << counter_uncached_fixedGridRhoFastjetCentral_ << " / " << counter_cached_fixedGridRhoFastjetCentral_ << std::endl;;
    std::cout << "fixedGridRhoFastjetCentralCalo (uncached/cached calls): " << counter_uncached_fixedGridRhoFastjetCentralCalo_ << " / " << counter_cached_fixedGridRhoFastjetCentralCalo_ << std::endl;;
    std::cout << "fixedGridRhoFastjetCentralChargedPileUp (uncached/cached calls): " << counter_uncached_fixedGridRhoFastjetCentralChargedPileUp_ << " / " << counter_cached_fixedGridRhoFastjetCentralChargedPileUp_ << std::endl;;
    std::cout << "fixedGridRhoFastjetCentralNeutral (uncached/cached calls): " << counter_uncached_fixedGridRhoFastjetCentralNeutral_ << " / " << counter_cached_fixedGridRhoFastjetCentralNeutral_ << std::endl;;
    std::cout << "genTtbarId (uncached/cached calls): " << counter_uncached_genTtbarId_ << " / " << counter_cached_genTtbarId_ << std::endl;;
    std::cout << "genWeight (uncached/cached calls): " << counter_uncached_genWeight_ << " / " << counter_cached_genWeight_ << std::endl;;
    std::cout << "luminosityBlock (uncached/cached calls): " << counter_uncached_luminosityBlock_ << " / " << counter_cached_luminosityBlock_ << std::endl;;
    std::cout << "nCorrT1METJet (uncached/cached calls): " << counter_uncached_nCorrT1METJet_ << " / " << counter_cached_nCorrT1METJet_ << std::endl;;
    std::cout << "nEFTfitCoefficients (uncached/cached calls): " << counter_uncached_nEFTfitCoefficients_ << " / " << counter_cached_nEFTfitCoefficients_ << std::endl;;
    std::cout << "nElectron (uncached/cached calls): " << counter_uncached_nElectron_ << " / " << counter_cached_nElectron_ << std::endl;;
    std::cout << "nFatJet (uncached/cached calls): " << counter_uncached_nFatJet_ << " / " << counter_cached_nFatJet_ << std::endl;;
    std::cout << "nFsrPhoton (uncached/cached calls): " << counter_uncached_nFsrPhoton_ << " / " << counter_cached_nFsrPhoton_ << std::endl;;
    std::cout << "nGenDressedLepton (uncached/cached calls): " << counter_uncached_nGenDressedLepton_ << " / " << counter_cached_nGenDressedLepton_ << std::endl;;
    std::cout << "nGenIsolatedPhoton (uncached/cached calls): " << counter_uncached_nGenIsolatedPhoton_ << " / " << counter_cached_nGenIsolatedPhoton_ << std::endl;;
    std::cout << "nGenJet (uncached/cached calls): " << counter_uncached_nGenJet_ << " / " << counter_cached_nGenJet_ << std::endl;;
    std::cout << "nGenJetAK8 (uncached/cached calls): " << counter_uncached_nGenJetAK8_ << " / " << counter_cached_nGenJetAK8_ << std::endl;;
    std::cout << "nGenPart (uncached/cached calls): " << counter_uncached_nGenPart_ << " / " << counter_cached_nGenPart_ << std::endl;;
    std::cout << "nGenProton (uncached/cached calls): " << counter_uncached_nGenProton_ << " / " << counter_cached_nGenProton_ << std::endl;;
    std::cout << "nGenVisTau (uncached/cached calls): " << counter_uncached_nGenVisTau_ << " / " << counter_cached_nGenVisTau_ << std::endl;;
    std::cout << "nIsoTrack (uncached/cached calls): " << counter_uncached_nIsoTrack_ << " / " << counter_cached_nIsoTrack_ << std::endl;;
    std::cout << "nJet (uncached/cached calls): " << counter_uncached_nJet_ << " / " << counter_cached_nJet_ << std::endl;;
    std::cout << "nLHEPart (uncached/cached calls): " << counter_uncached_nLHEPart_ << " / " << counter_cached_nLHEPart_ << std::endl;;
    std::cout << "nLHEPdfWeight (uncached/cached calls): " << counter_uncached_nLHEPdfWeight_ << " / " << counter_cached_nLHEPdfWeight_ << std::endl;;
    std::cout << "nLHEReweightingWeight (uncached/cached calls): " << counter_uncached_nLHEReweightingWeight_ << " / " << counter_cached_nLHEReweightingWeight_ << std::endl;;
    std::cout << "nLHEScaleWeight (uncached/cached calls): " << counter_uncached_nLHEScaleWeight_ << " / " << counter_cached_nLHEScaleWeight_ << std::endl;;
    std::cout << "nLowPtElectron (uncached/cached calls): " << counter_uncached_nLowPtElectron_ << " / " << counter_cached_nLowPtElectron_ << std::endl;;
    std::cout << "nMuon (uncached/cached calls): " << counter_uncached_nMuon_ << " / " << counter_cached_nMuon_ << std::endl;;
    std::cout << "nOtherPV (uncached/cached calls): " << counter_uncached_nOtherPV_ << " / " << counter_cached_nOtherPV_ << std::endl;;
    std::cout << "nPPSLocalTrack (uncached/cached calls): " << counter_uncached_nPPSLocalTrack_ << " / " << counter_cached_nPPSLocalTrack_ << std::endl;;
    std::cout << "nPSWeight (uncached/cached calls): " << counter_uncached_nPSWeight_ << " / " << counter_cached_nPSWeight_ << std::endl;;
    std::cout << "nPhoton (uncached/cached calls): " << counter_uncached_nPhoton_ << " / " << counter_cached_nPhoton_ << std::endl;;
    std::cout << "nProton_multiRP (uncached/cached calls): " << counter_uncached_nProton_multiRP_ << " / " << counter_cached_nProton_multiRP_ << std::endl;;
    std::cout << "nProton_singleRP (uncached/cached calls): " << counter_uncached_nProton_singleRP_ << " / " << counter_cached_nProton_singleRP_ << std::endl;;
    std::cout << "nSV (uncached/cached calls): " << counter_uncached_nSV_ << " / " << counter_cached_nSV_ << std::endl;;
    std::cout << "nSoftActivityJet (uncached/cached calls): " << counter_uncached_nSoftActivityJet_ << " / " << counter_cached_nSoftActivityJet_ << std::endl;;
    std::cout << "nSubGenJetAK8 (uncached/cached calls): " << counter_uncached_nSubGenJetAK8_ << " / " << counter_cached_nSubGenJetAK8_ << std::endl;;
    std::cout << "nSubJet (uncached/cached calls): " << counter_uncached_nSubJet_ << " / " << counter_cached_nSubJet_ << std::endl;;
    std::cout << "nTau (uncached/cached calls): " << counter_uncached_nTau_ << " / " << counter_cached_nTau_ << std::endl;;
    std::cout << "nTrigObj (uncached/cached calls): " << counter_uncached_nTrigObj_ << " / " << counter_cached_nTrigObj_ << std::endl;;
    std::cout << "nWCnames (uncached/cached calls): " << counter_uncached_nWCnames_ << " / " << counter_cached_nWCnames_ << std::endl;;
    std::cout << "nboostedTau (uncached/cached calls): " << counter_uncached_nboostedTau_ << " / " << counter_cached_nboostedTau_ << std::endl;;
    std::cout << "puWeight (uncached/cached calls): " << counter_uncached_puWeight_ << " / " << counter_cached_puWeight_ << std::endl;;
    std::cout << "puWeightDown (uncached/cached calls): " << counter_uncached_puWeightDown_ << " / " << counter_cached_puWeightDown_ << std::endl;;
    std::cout << "puWeightUp (uncached/cached calls): " << counter_uncached_puWeightUp_ << " / " << counter_cached_puWeightUp_ << std::endl;;
    std::cout << "run (uncached/cached calls): " << counter_uncached_run_ << " / " << counter_cached_run_ << std::endl;;
}

void Nano::GetEntry(unsigned int idx) {
    index = idx;
    loaded_BeamSpot_sigmaZ_ = false;
    loaded_BeamSpot_sigmaZError_ = false;
    loaded_BeamSpot_type_ = false;
    loaded_BeamSpot_z_ = false;
    loaded_BeamSpot_zError_ = false;
    loaded_CaloMET_phi_ = false;
    loaded_CaloMET_pt_ = false;
    loaded_CaloMET_sumEt_ = false;
    loaded_ChsMET_phi_ = false;
    loaded_ChsMET_pt_ = false;
    loaded_ChsMET_sumEt_ = false;
    loaded_CorrT1METJet_area_ = false;
    loaded_CorrT1METJet_eta_ = false;
    loaded_CorrT1METJet_muonSubtrFactor_ = false;
    loaded_CorrT1METJet_phi_ = false;
    loaded_CorrT1METJet_rawPt_ = false;
    loaded_DeepMETResolutionTune_phi_ = false;
    loaded_DeepMETResolutionTune_pt_ = false;
    loaded_DeepMETResponseTune_phi_ = false;
    loaded_DeepMETResponseTune_pt_ = false;
    loaded_EFTfitCoefficients_ = false;
    loaded_Electron_CutBased_LooseID_SF_ = false;
    loaded_Electron_CutBased_LooseID_SFerr_ = false;
    loaded_Electron_CutBased_MediumID_SF_ = false;
    loaded_Electron_CutBased_MediumID_SFerr_ = false;
    loaded_Electron_CutBased_TightID_SF_ = false;
    loaded_Electron_CutBased_TightID_SFerr_ = false;
    loaded_Electron_CutBased_VetoID_SF_ = false;
    loaded_Electron_CutBased_VetoID_SFerr_ = false;
    loaded_Electron_MVAFall17V2Iso_WP80_SF_ = false;
    loaded_Electron_MVAFall17V2Iso_WP80_SFerr_ = false;
    loaded_Electron_MVAFall17V2Iso_WP90_SF_ = false;
    loaded_Electron_MVAFall17V2Iso_WP90_SFerr_ = false;
    loaded_Electron_MVAFall17V2noIso_WP80_SF_ = false;
    loaded_Electron_MVAFall17V2noIso_WP80_SFerr_ = false;
    loaded_Electron_MVAFall17V2noIso_WP90_SF_ = false;
    loaded_Electron_MVAFall17V2noIso_WP90_SFerr_ = false;
    loaded_Electron_RECO_SF_ = false;
    loaded_Electron_RECO_SFerr_ = false;
    loaded_Electron_charge_ = false;
    loaded_Electron_cleanmask_ = false;
    loaded_Electron_convVeto_ = false;
    loaded_Electron_cutBased_ = false;
    loaded_Electron_cutBased17_ = false;
    loaded_Electron_cutBased_Fall17V2_ = false;
    loaded_Electron_cutBased_Fall17_V1_ = false;
    loaded_Electron_cutBased_HEEP_ = false;
    loaded_Electron_cutBased_HLTPreSel_ = false;
    loaded_Electron_dEscaleDown_ = false;
    loaded_Electron_dEscaleUp_ = false;
    loaded_Electron_dEsigmaDown_ = false;
    loaded_Electron_dEsigmaUp_ = false;
    loaded_Electron_deltaEtaSC_ = false;
    loaded_Electron_dr03EcalRecHitSumEt_ = false;
    loaded_Electron_dr03HcalDepth1TowerSumEt_ = false;
    loaded_Electron_dr03TkSumPt_ = false;
    loaded_Electron_dr03TkSumPtHEEP_ = false;
    loaded_Electron_dxy_ = false;
    loaded_Electron_dxyErr_ = false;
    loaded_Electron_dz_ = false;
    loaded_Electron_dzErr_ = false;
    loaded_Electron_eCorr_ = false;
    loaded_Electron_eInvMinusPInv_ = false;
    loaded_Electron_energyErr_ = false;
    loaded_Electron_eta_ = false;
    loaded_Electron_fsrPhotonIdx_ = false;
    loaded_Electron_genPartFlav_ = false;
    loaded_Electron_genPartIdx_ = false;
    loaded_Electron_hoe_ = false;
    loaded_Electron_ip3d_ = false;
    loaded_Electron_isPFcand_ = false;
    loaded_Electron_jetIdx_ = false;
    loaded_Electron_jetNDauCharged_ = false;
    loaded_Electron_jetPtRelv2_ = false;
    loaded_Electron_jetRelIso_ = false;
    loaded_Electron_jetRelIso_Fall17V2_ = false;
    loaded_Electron_lostHits_ = false;
    loaded_Electron_mass_ = false;
    loaded_Electron_miniPFRelIso_all_ = false;
    loaded_Electron_miniPFRelIso_all_Fall17V2_ = false;
    loaded_Electron_miniPFRelIso_chg_ = false;
    loaded_Electron_miniPFRelIso_chg_Fall17V2_ = false;
    loaded_Electron_mvaFall17Iso_ = false;
    loaded_Electron_mvaFall17Iso_WP80_ = false;
    loaded_Electron_mvaFall17Iso_WP90_ = false;
    loaded_Electron_mvaFall17Iso_WPL_ = false;
    loaded_Electron_mvaFall17V1Iso_ = false;
    loaded_Electron_mvaFall17V1Iso_WP80_ = false;
    loaded_Electron_mvaFall17V1Iso_WP90_ = false;
    loaded_Electron_mvaFall17V1Iso_WPL_ = false;
    loaded_Electron_mvaFall17V1noIso_ = false;
    loaded_Electron_mvaFall17V1noIso_WP80_ = false;
    loaded_Electron_mvaFall17V1noIso_WP90_ = false;
    loaded_Electron_mvaFall17V1noIso_WPL_ = false;
    loaded_Electron_mvaFall17V2Iso_ = false;
    loaded_Electron_mvaFall17V2Iso_WP80_ = false;
    loaded_Electron_mvaFall17V2Iso_WP90_ = false;
    loaded_Electron_mvaFall17V2Iso_WPL_ = false;
    loaded_Electron_mvaFall17V2noIso_ = false;
    loaded_Electron_mvaFall17V2noIso_WP80_ = false;
    loaded_Electron_mvaFall17V2noIso_WP90_ = false;
    loaded_Electron_mvaFall17V2noIso_WPL_ = false;
    loaded_Electron_mvaFall17noIso_ = false;
    loaded_Electron_mvaFall17noIso_WP80_ = false;
    loaded_Electron_mvaFall17noIso_WP90_ = false;
    loaded_Electron_mvaFall17noIso_WPL_ = false;
    loaded_Electron_mvaHZZIso_ = false;
    loaded_Electron_mvaIso_ = false;
    loaded_Electron_mvaIso_Fall17V2_ = false;
    loaded_Electron_mvaIso_Fall17V2_WP80_ = false;
    loaded_Electron_mvaIso_Fall17V2_WP90_ = false;
    loaded_Electron_mvaIso_Fall17V2_WPL_ = false;
    loaded_Electron_mvaIso_WP80_ = false;
    loaded_Electron_mvaIso_WP90_ = false;
    loaded_Electron_mvaNoIso_ = false;
    loaded_Electron_mvaNoIso_Fall17V2_ = false;
    loaded_Electron_mvaNoIso_Fall17V2_WP80_ = false;
    loaded_Electron_mvaNoIso_Fall17V2_WP90_ = false;
    loaded_Electron_mvaNoIso_Fall17V2_WPL_ = false;
    loaded_Electron_mvaNoIso_WP80_ = false;
    loaded_Electron_mvaNoIso_WP90_ = false;
    loaded_Electron_mvaSpring16GP_ = false;
    loaded_Electron_mvaSpring16GP_WP80_ = false;
    loaded_Electron_mvaSpring16GP_WP90_ = false;
    loaded_Electron_mvaSpring16HZZ_ = false;
    loaded_Electron_mvaSpring16HZZ_WPL_ = false;
    loaded_Electron_mvaTTH_ = false;
    // NOTE: this is a custom branch; temporarily added for convenience
    loaded_Electron_mvaTTHUL_ = false;
    //
    loaded_Electron_p4_ = false;
    loaded_Electron_pdgId_ = false;
    loaded_Electron_pfRelIso03_all_ = false;
    loaded_Electron_pfRelIso03_all_Fall17V2_ = false;
    loaded_Electron_pfRelIso03_chg_ = false;
    loaded_Electron_pfRelIso03_chg_Fall17V2_ = false;
    loaded_Electron_phi_ = false;
    loaded_Electron_photonIdx_ = false;
    loaded_Electron_pt_ = false;
    loaded_Electron_r9_ = false;
    loaded_Electron_scEtOverPt_ = false;
    loaded_Electron_seedGain_ = false;
    loaded_Electron_seediEtaOriX_ = false;
    loaded_Electron_seediPhiOriY_ = false;
    loaded_Electron_sieie_ = false;
    loaded_Electron_sip3d_ = false;
    loaded_Electron_svIdx_ = false;
    loaded_Electron_tightCharge_ = false;
    loaded_Electron_vidNestedWPBitmap_ = false;
    loaded_Electron_vidNestedWPBitmapHEEP_ = false;
    loaded_Electron_vidNestedWPBitmap_Fall17V2_ = false;
    loaded_FatJet_area_ = false;
    loaded_FatJet_btagCMVA_ = false;
    loaded_FatJet_btagCSVV2_ = false;
    loaded_FatJet_btagDDBvL_ = false;
    loaded_FatJet_btagDDBvLV2_ = false;
    loaded_FatJet_btagDDBvL_noMD_ = false;
    loaded_FatJet_btagDDCvB_ = false;
    loaded_FatJet_btagDDCvBV2_ = false;
    loaded_FatJet_btagDDCvB_noMD_ = false;
    loaded_FatJet_btagDDCvL_ = false;
    loaded_FatJet_btagDDCvLV2_ = false;
    loaded_FatJet_btagDDCvL_noMD_ = false;
    loaded_FatJet_btagDeepB_ = false;
    loaded_FatJet_btagHbb_ = false;
    loaded_FatJet_corr_JEC_ = false;
    loaded_FatJet_corr_JER_ = false;
    loaded_FatJet_corr_JMR_ = false;
    loaded_FatJet_corr_JMS_ = false;
    loaded_FatJet_deepTagMD_H4qvsQCD_ = false;
    loaded_FatJet_deepTagMD_HbbvsQCD_ = false;
    loaded_FatJet_deepTagMD_TvsQCD_ = false;
    loaded_FatJet_deepTagMD_WvsQCD_ = false;
    loaded_FatJet_deepTagMD_ZHbbvsQCD_ = false;
    loaded_FatJet_deepTagMD_ZHccvsQCD_ = false;
    loaded_FatJet_deepTagMD_ZbbvsQCD_ = false;
    loaded_FatJet_deepTagMD_ZvsQCD_ = false;
    loaded_FatJet_deepTagMD_bbvsLight_ = false;
    loaded_FatJet_deepTagMD_ccvsLight_ = false;
    loaded_FatJet_deepTag_H_ = false;
    loaded_FatJet_deepTag_QCD_ = false;
    loaded_FatJet_deepTag_QCDothers_ = false;
    loaded_FatJet_deepTag_TvsQCD_ = false;
    loaded_FatJet_deepTag_WvsQCD_ = false;
    loaded_FatJet_deepTag_ZvsQCD_ = false;
    loaded_FatJet_electronIdx3SJ_ = false;
    loaded_FatJet_eta_ = false;
    loaded_FatJet_genJetAK8Idx_ = false;
    loaded_FatJet_hadronFlavour_ = false;
    loaded_FatJet_jetId_ = false;
    loaded_FatJet_lsf3_ = false;
    loaded_FatJet_mass_ = false;
    loaded_FatJet_mass_jerDown_ = false;
    loaded_FatJet_mass_jerUp_ = false;
    loaded_FatJet_mass_jesTotalDown_ = false;
    loaded_FatJet_mass_jesTotalUp_ = false;
    loaded_FatJet_mass_jmrDown_ = false;
    loaded_FatJet_mass_jmrUp_ = false;
    loaded_FatJet_mass_jmsDown_ = false;
    loaded_FatJet_mass_jmsUp_ = false;
    loaded_FatJet_mass_nom_ = false;
    loaded_FatJet_mass_raw_ = false;
    loaded_FatJet_msoftdrop_ = false;
    loaded_FatJet_msoftdrop_corr_JMR_ = false;
    loaded_FatJet_msoftdrop_corr_JMS_ = false;
    loaded_FatJet_msoftdrop_corr_PUPPI_ = false;
    loaded_FatJet_msoftdrop_jerDown_ = false;
    loaded_FatJet_msoftdrop_jerUp_ = false;
    loaded_FatJet_msoftdrop_jesTotalDown_ = false;
    loaded_FatJet_msoftdrop_jesTotalUp_ = false;
    loaded_FatJet_msoftdrop_jmrDown_ = false;
    loaded_FatJet_msoftdrop_jmrUp_ = false;
    loaded_FatJet_msoftdrop_jmsDown_ = false;
    loaded_FatJet_msoftdrop_jmsUp_ = false;
    loaded_FatJet_msoftdrop_nom_ = false;
    loaded_FatJet_msoftdrop_raw_ = false;
    loaded_FatJet_msoftdrop_tau21DDT_jerDown_ = false;
    loaded_FatJet_msoftdrop_tau21DDT_jerUp_ = false;
    loaded_FatJet_msoftdrop_tau21DDT_jmrDown_ = false;
    loaded_FatJet_msoftdrop_tau21DDT_jmrUp_ = false;
    loaded_FatJet_msoftdrop_tau21DDT_jmsDown_ = false;
    loaded_FatJet_msoftdrop_tau21DDT_jmsUp_ = false;
    loaded_FatJet_msoftdrop_tau21DDT_nom_ = false;
    loaded_FatJet_muonIdx3SJ_ = false;
    loaded_FatJet_n2b1_ = false;
    loaded_FatJet_n3b1_ = false;
    loaded_FatJet_nBHadrons_ = false;
    loaded_FatJet_nCHadrons_ = false;
    loaded_FatJet_nConstituents_ = false;
    loaded_FatJet_p4_ = false;
    loaded_FatJet_particleNetMD_QCD_ = false;
    loaded_FatJet_particleNetMD_Xbb_ = false;
    loaded_FatJet_particleNetMD_Xcc_ = false;
    loaded_FatJet_particleNetMD_Xqq_ = false;
    loaded_FatJet_particleNet_H4qvsQCD_ = false;
    loaded_FatJet_particleNet_HbbvsQCD_ = false;
    loaded_FatJet_particleNet_HccvsQCD_ = false;
    loaded_FatJet_particleNet_QCD_ = false;
    loaded_FatJet_particleNet_TvsQCD_ = false;
    loaded_FatJet_particleNet_WvsQCD_ = false;
    loaded_FatJet_particleNet_ZvsQCD_ = false;
    loaded_FatJet_particleNet_mass_ = false;
    loaded_FatJet_phi_ = false;
    loaded_FatJet_pt_ = false;
    loaded_FatJet_pt_jerDown_ = false;
    loaded_FatJet_pt_jerUp_ = false;
    loaded_FatJet_pt_jesTotalDown_ = false;
    loaded_FatJet_pt_jesTotalUp_ = false;
    loaded_FatJet_pt_nom_ = false;
    loaded_FatJet_pt_raw_ = false;
    loaded_FatJet_rawFactor_ = false;
    loaded_FatJet_subJetIdx1_ = false;
    loaded_FatJet_subJetIdx2_ = false;
    loaded_FatJet_tau1_ = false;
    loaded_FatJet_tau2_ = false;
    loaded_FatJet_tau3_ = false;
    loaded_FatJet_tau4_ = false;
    loaded_Flag_BadChargedCandidateFilter_ = false;
    loaded_Flag_BadChargedCandidateFilter_pRECO_ = false;
    loaded_Flag_BadChargedCandidateSummer16Filter_ = false;
    loaded_Flag_BadChargedCandidateSummer16Filter_pRECO_ = false;
    loaded_Flag_BadPFMuonDzFilter_ = false;
    loaded_Flag_BadPFMuonFilter_ = false;
    loaded_Flag_BadPFMuonFilter_pRECO_ = false;
    loaded_Flag_BadPFMuonSummer16Filter_ = false;
    loaded_Flag_BadPFMuonSummer16Filter_pRECO_ = false;
    loaded_Flag_CSCTightHalo2015Filter_ = false;
    loaded_Flag_CSCTightHalo2015Filter_pRECO_ = false;
    loaded_Flag_CSCTightHaloFilter_ = false;
    loaded_Flag_CSCTightHaloFilter_pRECO_ = false;
    loaded_Flag_CSCTightHaloTrkMuUnvetoFilter_ = false;
    loaded_Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO_ = false;
    loaded_Flag_EcalDeadCellBoundaryEnergyFilter_ = false;
    loaded_Flag_EcalDeadCellBoundaryEnergyFilter_pRECO_ = false;
    loaded_Flag_EcalDeadCellTriggerPrimitiveFilter_ = false;
    loaded_Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO_ = false;
    loaded_Flag_HBHENoiseFilter_ = false;
    loaded_Flag_HBHENoiseFilter_pRECO_ = false;
    loaded_Flag_HBHENoiseIsoFilter_ = false;
    loaded_Flag_HBHENoiseIsoFilter_pRECO_ = false;
    loaded_Flag_HcalStripHaloFilter_ = false;
    loaded_Flag_HcalStripHaloFilter_pRECO_ = false;
    loaded_Flag_METFilters_ = false;
    loaded_Flag_METFilters_pRECO_ = false;
    loaded_Flag_chargedHadronTrackResolutionFilter_ = false;
    loaded_Flag_chargedHadronTrackResolutionFilter_pRECO_ = false;
    loaded_Flag_ecalBadCalibFilter_ = false;
    loaded_Flag_ecalBadCalibFilter_pRECO_ = false;
    loaded_Flag_ecalLaserCorrFilter_ = false;
    loaded_Flag_ecalLaserCorrFilter_pRECO_ = false;
    loaded_Flag_eeBadScFilter_ = false;
    loaded_Flag_eeBadScFilter_pRECO_ = false;
    loaded_Flag_globalSuperTightHalo2016Filter_ = false;
    loaded_Flag_globalSuperTightHalo2016Filter_pRECO_ = false;
    loaded_Flag_globalTightHalo2016Filter_ = false;
    loaded_Flag_globalTightHalo2016Filter_pRECO_ = false;
    loaded_Flag_goodVertices_ = false;
    loaded_Flag_goodVertices_pRECO_ = false;
    loaded_Flag_hcalLaserEventFilter_ = false;
    loaded_Flag_hcalLaserEventFilter_pRECO_ = false;
    loaded_Flag_hfNoisyHitsFilter_ = false;
    loaded_Flag_muonBadTrackFilter_ = false;
    loaded_Flag_muonBadTrackFilter_pRECO_ = false;
    loaded_Flag_trkPOGFilters_ = false;
    loaded_Flag_trkPOGFilters_pRECO_ = false;
    loaded_Flag_trkPOG_logErrorTooManyClusters_ = false;
    loaded_Flag_trkPOG_logErrorTooManyClusters_pRECO_ = false;
    loaded_Flag_trkPOG_manystripclus53X_ = false;
    loaded_Flag_trkPOG_manystripclus53X_pRECO_ = false;
    loaded_Flag_trkPOG_toomanystripclus53X_ = false;
    loaded_Flag_trkPOG_toomanystripclus53X_pRECO_ = false;
    loaded_FsrPhoton_dROverEt2_ = false;
    loaded_FsrPhoton_electronIdx_ = false;
    loaded_FsrPhoton_eta_ = false;
    loaded_FsrPhoton_muonIdx_ = false;
    loaded_FsrPhoton_phi_ = false;
    loaded_FsrPhoton_pt_ = false;
    loaded_FsrPhoton_relIso03_ = false;
    loaded_GenDressedLepton_eta_ = false;
    loaded_GenDressedLepton_hasTauAnc_ = false;
    loaded_GenDressedLepton_mass_ = false;
    loaded_GenDressedLepton_p4_ = false;
    loaded_GenDressedLepton_pdgId_ = false;
    loaded_GenDressedLepton_phi_ = false;
    loaded_GenDressedLepton_pt_ = false;
    loaded_GenIsolatedPhoton_eta_ = false;
    loaded_GenIsolatedPhoton_mass_ = false;
    loaded_GenIsolatedPhoton_p4_ = false;
    loaded_GenIsolatedPhoton_phi_ = false;
    loaded_GenIsolatedPhoton_pt_ = false;
    loaded_GenJetAK8_eta_ = false;
    loaded_GenJetAK8_hadronFlavour_ = false;
    loaded_GenJetAK8_mass_ = false;
    loaded_GenJetAK8_p4_ = false;
    loaded_GenJetAK8_partonFlavour_ = false;
    loaded_GenJetAK8_phi_ = false;
    loaded_GenJetAK8_pt_ = false;
    loaded_GenJet_eta_ = false;
    loaded_GenJet_hadronFlavour_ = false;
    loaded_GenJet_mass_ = false;
    loaded_GenJet_p4_ = false;
    loaded_GenJet_partonFlavour_ = false;
    loaded_GenJet_phi_ = false;
    loaded_GenJet_pt_ = false;
    loaded_GenMET_phi_ = false;
    loaded_GenMET_pt_ = false;
    loaded_GenPart_eta_ = false;
    loaded_GenPart_genPartIdxMother_ = false;
    loaded_GenPart_mass_ = false;
    loaded_GenPart_p4_ = false;
    loaded_GenPart_pdgId_ = false;
    loaded_GenPart_phi_ = false;
    loaded_GenPart_pt_ = false;
    loaded_GenPart_status_ = false;
    loaded_GenPart_statusFlags_ = false;
    loaded_GenProton_isPU_ = false;
    loaded_GenProton_px_ = false;
    loaded_GenProton_py_ = false;
    loaded_GenProton_pz_ = false;
    loaded_GenProton_vz_ = false;
    loaded_GenVisTau_charge_ = false;
    loaded_GenVisTau_eta_ = false;
    loaded_GenVisTau_genPartIdxMother_ = false;
    loaded_GenVisTau_mass_ = false;
    loaded_GenVisTau_p4_ = false;
    loaded_GenVisTau_phi_ = false;
    loaded_GenVisTau_pt_ = false;
    loaded_GenVisTau_status_ = false;
    loaded_GenVtx_t0_ = false;
    loaded_GenVtx_x_ = false;
    loaded_GenVtx_y_ = false;
    loaded_GenVtx_z_ = false;
    loaded_Generator_binvar_ = false;
    loaded_Generator_id1_ = false;
    loaded_Generator_id2_ = false;
    loaded_Generator_scalePDF_ = false;
    loaded_Generator_weight_ = false;
    loaded_Generator_x1_ = false;
    loaded_Generator_x2_ = false;
    loaded_Generator_xpdf1_ = false;
    loaded_Generator_xpdf2_ = false;
    loaded_HLT_AK4CaloJet100_ = false;
    loaded_HLT_AK4CaloJet120_ = false;
    loaded_HLT_AK4CaloJet30_ = false;
    loaded_HLT_AK4CaloJet40_ = false;
    loaded_HLT_AK4CaloJet50_ = false;
    loaded_HLT_AK4CaloJet80_ = false;
    loaded_HLT_AK4PFJet100_ = false;
    loaded_HLT_AK4PFJet120_ = false;
    loaded_HLT_AK4PFJet30_ = false;
    loaded_HLT_AK4PFJet50_ = false;
    loaded_HLT_AK4PFJet80_ = false;
    loaded_HLT_AK8DiPFJet250_200_TrimMass30_ = false;
    loaded_HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20_ = false;
    loaded_HLT_AK8DiPFJet250_250_MassSD30_ = false;
    loaded_HLT_AK8DiPFJet250_250_MassSD50_ = false;
    loaded_HLT_AK8DiPFJet260_260_MassSD30_ = false;
    loaded_HLT_AK8DiPFJet270_270_MassSD30_ = false;
    loaded_HLT_AK8DiPFJet280_200_TrimMass30_ = false;
    loaded_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087_ = false;
    loaded_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20_ = false;
    loaded_HLT_AK8DiPFJet300_200_TrimMass30_ = false;
    loaded_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087_ = false;
    loaded_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20_ = false;
    loaded_HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20_ = false;
    loaded_HLT_AK8PFHT650_TrimR0p1PT0p03Mass50_ = false;
    loaded_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_ = false;
    loaded_HLT_AK8PFHT750_TrimMass50_ = false;
    loaded_HLT_AK8PFHT800_TrimMass50_ = false;
    loaded_HLT_AK8PFHT850_TrimMass50_ = false;
    loaded_HLT_AK8PFHT900_TrimMass50_ = false;
    loaded_HLT_AK8PFJet140_ = false;
    loaded_HLT_AK8PFJet15_ = false;
    loaded_HLT_AK8PFJet200_ = false;
    loaded_HLT_AK8PFJet230_SoftDropMass40_ = false;
    loaded_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_ = false;
    loaded_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_ = false;
    loaded_HLT_AK8PFJet25_ = false;
    loaded_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_ = false;
    loaded_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_ = false;
    loaded_HLT_AK8PFJet260_ = false;
    loaded_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_ = false;
    loaded_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_ = false;
    loaded_HLT_AK8PFJet320_ = false;
    loaded_HLT_AK8PFJet330_PFAK8BTagCSV_p1_ = false;
    loaded_HLT_AK8PFJet330_PFAK8BTagCSV_p17_ = false;
    loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1_ = false;
    loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17_ = false;
    loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_ = false;
    loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_ = false;
    loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_ = false;
    loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_ = false;
    loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_ = false;
    loaded_HLT_AK8PFJet360_TrimMass30_ = false;
    loaded_HLT_AK8PFJet380_TrimMass30_ = false;
    loaded_HLT_AK8PFJet40_ = false;
    loaded_HLT_AK8PFJet400_ = false;
    loaded_HLT_AK8PFJet400_MassSD30_ = false;
    loaded_HLT_AK8PFJet400_SoftDropMass40_ = false;
    loaded_HLT_AK8PFJet400_TrimMass30_ = false;
    loaded_HLT_AK8PFJet420_MassSD30_ = false;
    loaded_HLT_AK8PFJet420_TrimMass30_ = false;
    loaded_HLT_AK8PFJet425_SoftDropMass40_ = false;
    loaded_HLT_AK8PFJet450_ = false;
    loaded_HLT_AK8PFJet450_MassSD30_ = false;
    loaded_HLT_AK8PFJet450_SoftDropMass40_ = false;
    loaded_HLT_AK8PFJet500_ = false;
    loaded_HLT_AK8PFJet550_ = false;
    loaded_HLT_AK8PFJet60_ = false;
    loaded_HLT_AK8PFJet80_ = false;
    loaded_HLT_AK8PFJetFwd140_ = false;
    loaded_HLT_AK8PFJetFwd15_ = false;
    loaded_HLT_AK8PFJetFwd200_ = false;
    loaded_HLT_AK8PFJetFwd25_ = false;
    loaded_HLT_AK8PFJetFwd260_ = false;
    loaded_HLT_AK8PFJetFwd320_ = false;
    loaded_HLT_AK8PFJetFwd40_ = false;
    loaded_HLT_AK8PFJetFwd400_ = false;
    loaded_HLT_AK8PFJetFwd450_ = false;
    loaded_HLT_AK8PFJetFwd500_ = false;
    loaded_HLT_AK8PFJetFwd60_ = false;
    loaded_HLT_AK8PFJetFwd80_ = false;
    loaded_HLT_BTagMu_AK4DiJet110_Mu5_ = false;
    loaded_HLT_BTagMu_AK4DiJet110_Mu5_noalgo_ = false;
    loaded_HLT_BTagMu_AK4DiJet170_Mu5_ = false;
    loaded_HLT_BTagMu_AK4DiJet170_Mu5_noalgo_ = false;
    loaded_HLT_BTagMu_AK4DiJet20_Mu5_ = false;
    loaded_HLT_BTagMu_AK4DiJet20_Mu5_noalgo_ = false;
    loaded_HLT_BTagMu_AK4DiJet40_Mu5_ = false;
    loaded_HLT_BTagMu_AK4DiJet40_Mu5_noalgo_ = false;
    loaded_HLT_BTagMu_AK4DiJet70_Mu5_ = false;
    loaded_HLT_BTagMu_AK4DiJet70_Mu5_noalgo_ = false;
    loaded_HLT_BTagMu_AK4Jet300_Mu5_ = false;
    loaded_HLT_BTagMu_AK4Jet300_Mu5_noalgo_ = false;
    loaded_HLT_BTagMu_AK8DiJet170_Mu5_ = false;
    loaded_HLT_BTagMu_AK8DiJet170_Mu5_noalgo_ = false;
    loaded_HLT_BTagMu_AK8Jet170_DoubleMu5_ = false;
    loaded_HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_ = false;
    loaded_HLT_BTagMu_AK8Jet300_Mu5_ = false;
    loaded_HLT_BTagMu_AK8Jet300_Mu5_noalgo_ = false;
    loaded_HLT_BTagMu_DiJet110_Mu5_ = false;
    loaded_HLT_BTagMu_DiJet170_Mu5_ = false;
    loaded_HLT_BTagMu_DiJet20_Mu5_ = false;
    loaded_HLT_BTagMu_DiJet40_Mu5_ = false;
    loaded_HLT_BTagMu_DiJet70_Mu5_ = false;
    loaded_HLT_BTagMu_Jet300_Mu5_ = false;
    loaded_HLT_CDC_L2cosmic_10_er1p0_ = false;
    loaded_HLT_CDC_L2cosmic_5_er1p0_ = false;
    loaded_HLT_CDC_L2cosmic_5p5_er1p0_ = false;
    loaded_HLT_CaloJet260_ = false;
    loaded_HLT_CaloJet500_NoJetID_ = false;
    loaded_HLT_CaloJet550_NoJetID_ = false;
    loaded_HLT_CaloMET100_HBHECleaned_ = false;
    loaded_HLT_CaloMET100_NotCleaned_ = false;
    loaded_HLT_CaloMET110_NotCleaned_ = false;
    loaded_HLT_CaloMET250_HBHECleaned_ = false;
    loaded_HLT_CaloMET250_NotCleaned_ = false;
    loaded_HLT_CaloMET300_HBHECleaned_ = false;
    loaded_HLT_CaloMET350_HBHECleaned_ = false;
    loaded_HLT_CaloMET350_NotCleaned_ = false;
    loaded_HLT_CaloMET60_DTCluster50_ = false;
    loaded_HLT_CaloMET60_DTClusterNoMB1S50_ = false;
    loaded_HLT_CaloMET70_HBHECleaned_ = false;
    loaded_HLT_CaloMET80_HBHECleaned_ = false;
    loaded_HLT_CaloMET80_NotCleaned_ = false;
    loaded_HLT_CaloMET90_HBHECleaned_ = false;
    loaded_HLT_CaloMET90_NotCleaned_ = false;
    loaded_HLT_CaloMHT90_ = false;
    loaded_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_ = false;
    loaded_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067_ = false;
    loaded_HLT_CascadeMu100_ = false;
    loaded_HLT_CscCluster_Loose_ = false;
    loaded_HLT_CscCluster_Medium_ = false;
    loaded_HLT_CscCluster_Tight_ = false;
    loaded_HLT_DiCentralPFJet170_ = false;
    loaded_HLT_DiCentralPFJet170_CFMax0p1_ = false;
    loaded_HLT_DiCentralPFJet220_CFMax0p3_ = false;
    loaded_HLT_DiCentralPFJet330_CFMax0p5_ = false;
    loaded_HLT_DiCentralPFJet430_ = false;
    loaded_HLT_DiCentralPFJet55_PFMET110_ = false;
    loaded_HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_ = false;
    loaded_HLT_DiJet110_35_Mjj650_PFMET110_ = false;
    loaded_HLT_DiJet110_35_Mjj650_PFMET120_ = false;
    loaded_HLT_DiJet110_35_Mjj650_PFMET130_ = false;
    loaded_HLT_DiJetVBFMu_PassThrough_ = false;
    loaded_HLT_DiJetVBF_PassThrough_ = false;
    loaded_HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_ = false;
    loaded_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_ = false;
    loaded_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_ = false;
    loaded_HLT_DiPFJet15_FBEta3_NoCaloMatched_ = false;
    loaded_HLT_DiPFJet15_NoCaloMatched_ = false;
    loaded_HLT_DiPFJet25_FBEta3_NoCaloMatched_ = false;
    loaded_HLT_DiPFJet25_NoCaloMatched_ = false;
    loaded_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140_ = false;
    loaded_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80_ = false;
    loaded_HLT_DiPFJetAve100_HFJEC_ = false;
    loaded_HLT_DiPFJetAve140_ = false;
    loaded_HLT_DiPFJetAve15_HFJEC_ = false;
    loaded_HLT_DiPFJetAve160_HFJEC_ = false;
    loaded_HLT_DiPFJetAve200_ = false;
    loaded_HLT_DiPFJetAve220_HFJEC_ = false;
    loaded_HLT_DiPFJetAve25_HFJEC_ = false;
    loaded_HLT_DiPFJetAve260_ = false;
    loaded_HLT_DiPFJetAve260_HFJEC_ = false;
    loaded_HLT_DiPFJetAve300_HFJEC_ = false;
    loaded_HLT_DiPFJetAve320_ = false;
    loaded_HLT_DiPFJetAve35_HFJEC_ = false;
    loaded_HLT_DiPFJetAve40_ = false;
    loaded_HLT_DiPFJetAve400_ = false;
    loaded_HLT_DiPFJetAve500_ = false;
    loaded_HLT_DiPFJetAve60_ = false;
    loaded_HLT_DiPFJetAve60_HFJEC_ = false;
    loaded_HLT_DiPFJetAve80_ = false;
    loaded_HLT_DiPFJetAve80_HFJEC_ = false;
    loaded_HLT_DiPhoton10Time1ns_ = false;
    loaded_HLT_DiPhoton10Time1p2ns_ = false;
    loaded_HLT_DiPhoton10Time1p4ns_ = false;
    loaded_HLT_DiPhoton10Time1p6ns_ = false;
    loaded_HLT_DiPhoton10Time1p8ns_ = false;
    loaded_HLT_DiPhoton10Time2ns_ = false;
    loaded_HLT_DiPhoton10_CaloIdL_ = false;
    loaded_HLT_DiPhoton10sminlt0p1_ = false;
    loaded_HLT_DiPhoton10sminlt0p12_ = false;
    loaded_HLT_DiSC30_18_EIso_AND_HE_Mass70_ = false;
    loaded_HLT_Dimuon0_Jpsi_ = false;
    loaded_HLT_Dimuon0_Jpsi3p5_Muon2_ = false;
    loaded_HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_ = false;
    loaded_HLT_Dimuon0_Jpsi_L1_NoOS_ = false;
    loaded_HLT_Dimuon0_Jpsi_Muon_ = false;
    loaded_HLT_Dimuon0_Jpsi_NoVertexing_ = false;
    loaded_HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_ = false;
    loaded_HLT_Dimuon0_Jpsi_NoVertexing_NoOS_ = false;
    loaded_HLT_Dimuon0_LowMass_ = false;
    loaded_HLT_Dimuon0_LowMass_L1_0er1p5_ = false;
    loaded_HLT_Dimuon0_LowMass_L1_0er1p5R_ = false;
    loaded_HLT_Dimuon0_LowMass_L1_4_ = false;
    loaded_HLT_Dimuon0_LowMass_L1_4R_ = false;
    loaded_HLT_Dimuon0_LowMass_L1_TM530_ = false;
    loaded_HLT_Dimuon0_Phi_Barrel_ = false;
    loaded_HLT_Dimuon0_Upsilon_L1_4p5_ = false;
    loaded_HLT_Dimuon0_Upsilon_L1_4p5NoOS_ = false;
    loaded_HLT_Dimuon0_Upsilon_L1_4p5er2p0_ = false;
    loaded_HLT_Dimuon0_Upsilon_L1_4p5er2p0M_ = false;
    loaded_HLT_Dimuon0_Upsilon_L1_5_ = false;
    loaded_HLT_Dimuon0_Upsilon_L1_5M_ = false;
    loaded_HLT_Dimuon0_Upsilon_Muon_ = false;
    loaded_HLT_Dimuon0_Upsilon_Muon_L1_TM0_ = false;
    loaded_HLT_Dimuon0_Upsilon_Muon_NoL1Mass_ = false;
    loaded_HLT_Dimuon0_Upsilon_NoVertexing_ = false;
    loaded_HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing_ = false;
    loaded_HLT_Dimuon0er16_Jpsi_NoVertexing_ = false;
    loaded_HLT_Dimuon10_Jpsi_Barrel_ = false;
    loaded_HLT_Dimuon10_PsiPrime_Barrel_Seagulls_ = false;
    loaded_HLT_Dimuon10_Upsilon_Barrel_Seagulls_ = false;
    loaded_HLT_Dimuon10_Upsilon_y1p4_ = false;
    loaded_HLT_Dimuon12_Upsilon_eta1p5_ = false;
    loaded_HLT_Dimuon12_Upsilon_y1p4_ = false;
    loaded_HLT_Dimuon13_PsiPrime_ = false;
    loaded_HLT_Dimuon13_Upsilon_ = false;
    loaded_HLT_Dimuon14_Phi_Barrel_Seagulls_ = false;
    loaded_HLT_Dimuon14_PsiPrime_ = false;
    loaded_HLT_Dimuon14_PsiPrime_noCorrL1_ = false;
    loaded_HLT_Dimuon16_Jpsi_ = false;
    loaded_HLT_Dimuon18_PsiPrime_ = false;
    loaded_HLT_Dimuon18_PsiPrime_noCorrL1_ = false;
    loaded_HLT_Dimuon20_Jpsi_ = false;
    loaded_HLT_Dimuon20_Jpsi_Barrel_Seagulls_ = false;
    loaded_HLT_Dimuon24_Phi_noCorrL1_ = false;
    loaded_HLT_Dimuon24_Upsilon_noCorrL1_ = false;
    loaded_HLT_Dimuon25_Jpsi_ = false;
    loaded_HLT_Dimuon25_Jpsi_noCorrL1_ = false;
    loaded_HLT_Dimuon6_Jpsi_NoVertexing_ = false;
    loaded_HLT_Dimuon8_PsiPrime_Barrel_ = false;
    loaded_HLT_Dimuon8_Upsilon_Barrel_ = false;
    loaded_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_ = false;
    loaded_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_ = false;
    loaded_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_ = false;
    loaded_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_ = false;
    loaded_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_ = false;
    loaded_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_ = false;
    loaded_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_ = false;
    loaded_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_ = false;
    loaded_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_ = false;
    loaded_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_ = false;
    loaded_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_ = false;
    loaded_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_ = false;
    loaded_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_ = false;
    loaded_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_ = false;
    loaded_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_ = false;
    loaded_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_ = false;
    loaded_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70_ = false;
    loaded_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_ = false;
    loaded_HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55_ = false;
    loaded_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_ = false;
    loaded_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_ = false;
    loaded_HLT_DoubleEle10_eta1p22_mMax6_ = false;
    loaded_HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf_ = false;
    loaded_HLT_DoubleEle24_eta2p1_WPTight_Gsf_ = false;
    loaded_HLT_DoubleEle25_CaloIdL_GsfTrkIdVL_ = false;
    loaded_HLT_DoubleEle25_CaloIdL_MW_ = false;
    loaded_HLT_DoubleEle27_CaloIdL_MW_ = false;
    loaded_HLT_DoubleEle33_CaloIdL_ = false;
    loaded_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_ = false;
    loaded_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW_ = false;
    loaded_HLT_DoubleEle33_CaloIdL_MW_ = false;
    loaded_HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL_ = false;
    loaded_HLT_DoubleEle4_eta1p22_mMax6_ = false;
    loaded_HLT_DoubleEle4p5_eta1p22_mMax6_ = false;
    loaded_HLT_DoubleEle5_eta1p22_mMax6_ = false;
    loaded_HLT_DoubleEle5p5_eta1p22_mMax6_ = false;
    loaded_HLT_DoubleEle6_eta1p22_mMax6_ = false;
    loaded_HLT_DoubleEle6p5_eta1p22_mMax6_ = false;
    loaded_HLT_DoubleEle7_eta1p22_mMax6_ = false;
    loaded_HLT_DoubleEle7p5_eta1p22_mMax6_ = false;
    loaded_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_ = false;
    loaded_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250_ = false;
    loaded_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300_ = false;
    loaded_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_ = false;
    loaded_HLT_DoubleEle8_eta1p22_mMax6_ = false;
    loaded_HLT_DoubleEle8p5_eta1p22_mMax6_ = false;
    loaded_HLT_DoubleEle9_eta1p22_mMax6_ = false;
    loaded_HLT_DoubleEle9p5_eta1p22_mMax6_ = false;
    loaded_HLT_DoubleIsoMu17_eta2p1_ = false;
    loaded_HLT_DoubleIsoMu17_eta2p1_noDzCut_ = false;
    loaded_HLT_DoubleIsoMu20_eta2p1_ = false;
    loaded_HLT_DoubleIsoMu24_eta2p1_ = false;
    loaded_HLT_DoubleJet90_Double30_DoubleBTagCSV_p087_ = false;
    loaded_HLT_DoubleJet90_Double30_TripleBTagCSV_p087_ = false;
    loaded_HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6_ = false;
    loaded_HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160_ = false;
    loaded_HLT_DoubleJetsC100_SingleBTagCSV_p014_ = false;
    loaded_HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350_ = false;
    loaded_HLT_DoubleJetsC100_SingleBTagCSV_p026_ = false;
    loaded_HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350_ = false;
    loaded_HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6_ = false;
    loaded_HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172_ = false;
    loaded_HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_ = false;
    loaded_HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ = false;
    loaded_HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_ = false;
    loaded_HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ = false;
    loaded_HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ = false;
    loaded_HLT_DoubleL2Mu23NoVtx_2Cha_ = false;
    loaded_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_ = false;
    loaded_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_ = false;
    loaded_HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_ = false;
    loaded_HLT_DoubleL2Mu25NoVtx_2Cha_ = false;
    loaded_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_ = false;
    loaded_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_ = false;
    loaded_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_ = false;
    loaded_HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_ = false;
    loaded_HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_ = false;
    loaded_HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_ = false;
    loaded_HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_ = false;
    loaded_HLT_DoubleL2Mu50_ = false;
    loaded_HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_ = false;
    loaded_HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_ = false;
    loaded_HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_ = false;
    loaded_HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_ = false;
    loaded_HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_ = false;
    loaded_HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_ = false;
    loaded_HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_ = false;
    loaded_HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_ = false;
    loaded_HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_ = false;
    loaded_HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_ = false;
    loaded_HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_ = false;
    loaded_HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_ = false;
    loaded_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_ = false;
    loaded_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_ = false;
    loaded_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_ = false;
    loaded_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_ = false;
    loaded_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_ = false;
    loaded_HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_ = false;
    loaded_HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_ = false;
    loaded_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleMu0_ = false;
    loaded_HLT_DoubleMu18NoFiltersNoVtx_ = false;
    loaded_HLT_DoubleMu20_7_Mass0to30_L1_DM4_ = false;
    loaded_HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_ = false;
    loaded_HLT_DoubleMu20_7_Mass0to30_Photon23_ = false;
    loaded_HLT_DoubleMu23NoFiltersNoVtxDisplaced_ = false;
    loaded_HLT_DoubleMu28NoFiltersNoVtxDisplaced_ = false;
    loaded_HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_ = false;
    loaded_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi_ = false;
    loaded_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_ = false;
    loaded_HLT_DoubleMu33NoFiltersNoVtx_ = false;
    loaded_HLT_DoubleMu33NoFiltersNoVtxDisplaced_ = false;
    loaded_HLT_DoubleMu38NoFiltersNoVtx_ = false;
    loaded_HLT_DoubleMu3_DCA_PFMET50_PFMHT60_ = false;
    loaded_HLT_DoubleMu3_DZ_PFMET50_PFMHT60_ = false;
    loaded_HLT_DoubleMu3_DZ_PFMET70_PFMHT70_ = false;
    loaded_HLT_DoubleMu3_DZ_PFMET90_PFMHT90_ = false;
    loaded_HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_ = false;
    loaded_HLT_DoubleMu3_PFMET50_ = false;
    loaded_HLT_DoubleMu3_TkMu_DsTau3Mu_ = false;
    loaded_HLT_DoubleMu3_Trk_Tau3mu_ = false;
    loaded_HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_ = false;
    loaded_HLT_DoubleMu40NoFiltersNoVtxDisplaced_ = false;
    loaded_HLT_DoubleMu43NoFiltersNoVtx_ = false;
    loaded_HLT_DoubleMu48NoFiltersNoVtx_ = false;
    loaded_HLT_DoubleMu4_3_Bs_ = false;
    loaded_HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_ = false;
    loaded_HLT_DoubleMu4_3_Jpsi_ = false;
    loaded_HLT_DoubleMu4_3_Jpsi_Displaced_ = false;
    loaded_HLT_DoubleMu4_3_LowMass_ = false;
    loaded_HLT_DoubleMu4_3_Photon4_BsToMMG_ = false;
    loaded_HLT_DoubleMu4_JpsiTrkTrk_Displaced_ = false;
    loaded_HLT_DoubleMu4_JpsiTrk_Bc_ = false;
    loaded_HLT_DoubleMu4_JpsiTrk_Displaced_ = false;
    loaded_HLT_DoubleMu4_Jpsi_Displaced_ = false;
    loaded_HLT_DoubleMu4_Jpsi_NoVertexing_ = false;
    loaded_HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_ = false;
    loaded_HLT_DoubleMu4_LowMass_Displaced_ = false;
    loaded_HLT_DoubleMu4_Mass3p8_DZ_PFHT350_ = false;
    loaded_HLT_DoubleMu4_Mass8_DZ_PFHT350_ = false;
    loaded_HLT_DoubleMu4_MuMuTrk_Displaced_ = false;
    loaded_HLT_DoubleMu4_PsiPrimeTrk_Displaced_ = false;
    loaded_HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_ = false;
    loaded_HLT_DoubleMu8_Mass8_PFHT250_ = false;
    loaded_HLT_DoubleMu8_Mass8_PFHT300_ = false;
    loaded_HLT_DoubleMu8_Mass8_PFHT350_ = false;
    loaded_HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33_ = false;
    loaded_HLT_DoublePFJets100_CaloBTagCSV_p33_ = false;
    loaded_HLT_DoublePFJets100_CaloBTagCSV_p79_ = false;
    loaded_HLT_DoublePFJets100_CaloBTagDeepCSV_p71_ = false;
    loaded_HLT_DoublePFJets100_PFBTagDeepCSV_p71_ = false;
    loaded_HLT_DoublePFJets100_PFBTagDeepJet_p71_ = false;
    loaded_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33_ = false;
    loaded_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79_ = false;
    loaded_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ = false;
    loaded_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_ = false;
    loaded_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_ = false;
    loaded_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33_ = false;
    loaded_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79_ = false;
    loaded_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ = false;
    loaded_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_ = false;
    loaded_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_ = false;
    loaded_HLT_DoublePFJets200_CaloBTagCSV_p33_ = false;
    loaded_HLT_DoublePFJets200_CaloBTagCSV_p79_ = false;
    loaded_HLT_DoublePFJets200_CaloBTagDeepCSV_p71_ = false;
    loaded_HLT_DoublePFJets200_PFBTagDeepCSV_p71_ = false;
    loaded_HLT_DoublePFJets200_PFBTagDeepJet_p71_ = false;
    loaded_HLT_DoublePFJets350_CaloBTagCSV_p33_ = false;
    loaded_HLT_DoublePFJets350_CaloBTagCSV_p79_ = false;
    loaded_HLT_DoublePFJets350_CaloBTagDeepCSV_p71_ = false;
    loaded_HLT_DoublePFJets350_PFBTagDeepCSV_p71_ = false;
    loaded_HLT_DoublePFJets350_PFBTagDeepJet_p71_ = false;
    loaded_HLT_DoublePFJets40_CaloBTagCSV_p33_ = false;
    loaded_HLT_DoublePFJets40_CaloBTagCSV_p79_ = false;
    loaded_HLT_DoublePFJets40_CaloBTagDeepCSV_p71_ = false;
    loaded_HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_ = false;
    loaded_HLT_DoublePFJets40_PFBTagDeepCSV_p71_ = false;
    loaded_HLT_DoublePFJets40_PFBTagDeepJet_p71_ = false;
    loaded_HLT_DoublePhoton33_CaloIdL_ = false;
    loaded_HLT_DoublePhoton60_ = false;
    loaded_HLT_DoublePhoton70_ = false;
    loaded_HLT_DoublePhoton85_ = false;
    loaded_HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_ = false;
    loaded_HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_ = false;
    loaded_HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_ = false;
    loaded_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_ = false;
    loaded_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_ = false;
    loaded_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_ = false;
    loaded_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_DoubleTrkMu_16_6_NoFiltersNoVtx_ = false;
    loaded_HLT_ECALHT800_ = false;
    loaded_HLT_EcalCalibration_ = false;
    loaded_HLT_Ele105_CaloIdVT_GsfTrkIdT_ = false;
    loaded_HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13_ = false;
    loaded_HLT_Ele115_CaloIdVT_GsfTrkIdT_ = false;
    loaded_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_ = false;
    loaded_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_ = false;
    loaded_HLT_Ele12_CaloIdM_TrackIdM_PFJet30_ = false;
    loaded_HLT_Ele135_CaloIdVT_GsfTrkIdT_ = false;
    loaded_HLT_Ele145_CaloIdVT_GsfTrkIdT_ = false;
    loaded_HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_ = false;
    loaded_HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_ = false;
    loaded_HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400_ = false;
    loaded_HLT_Ele15_IsoVVVL_PFHT350_ = false;
    loaded_HLT_Ele15_IsoVVVL_PFHT350_PFMET50_ = false;
    loaded_HLT_Ele15_IsoVVVL_PFHT400_ = false;
    loaded_HLT_Ele15_IsoVVVL_PFHT400_PFMET50_ = false;
    loaded_HLT_Ele15_IsoVVVL_PFHT450_ = false;
    loaded_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_ = false;
    loaded_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_ = false;
    loaded_HLT_Ele15_IsoVVVL_PFHT450_PFMET50_ = false;
    loaded_HLT_Ele15_IsoVVVL_PFHT600_ = false;
    loaded_HLT_Ele15_WPLoose_Gsf_ = false;
    loaded_HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_ = false;
    loaded_HLT_Ele17_CaloIdL_GsfTrkIdVL_ = false;
    loaded_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_ = false;
    loaded_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_ = false;
    loaded_HLT_Ele17_CaloIdM_TrackIdM_PFJet30_ = false;
    loaded_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_ = false;
    loaded_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_ = false;
    loaded_HLT_Ele17_Ele8_Gsf_ = false;
    loaded_HLT_Ele17_WPLoose_Gsf_ = false;
    loaded_HLT_Ele200_CaloIdVT_GsfTrkIdT_ = false;
    loaded_HLT_Ele20_WPLoose_Gsf_ = false;
    loaded_HLT_Ele20_WPTight_Gsf_ = false;
    loaded_HLT_Ele20_eta2p1_WPLoose_Gsf_ = false;
    loaded_HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28_ = false;
    loaded_HLT_Ele22_eta2p1_WPLoose_Gsf_ = false;
    loaded_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ = false;
    loaded_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29_ = false;
    loaded_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_ = false;
    loaded_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_ = false;
    loaded_HLT_Ele23_CaloIdM_TrackIdM_PFJet30_ = false;
    loaded_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_ = false;
    loaded_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_ = false;
    loaded_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded_ = false;
    loaded_HLT_Ele23_WPLoose_Gsf_ = false;
    loaded_HLT_Ele23_WPLoose_Gsf_WHbbBoost_ = false;
    loaded_HLT_Ele24_eta2p1_WPLoose_Gsf_ = false;
    loaded_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_ = false;
    loaded_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ = false;
    loaded_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30_ = false;
    loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1_ = false;
    loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1_ = false;
    loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_ = false;
    loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_ = false;
    loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_ = false;
    loaded_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1_ = false;
    loaded_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1_ = false;
    loaded_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_ = false;
    loaded_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_ = false;
    loaded_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1_ = false;
    loaded_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1_ = false;
    loaded_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_ = false;
    loaded_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_ = false;
    loaded_HLT_Ele250_CaloIdVT_GsfTrkIdT_ = false;
    loaded_HLT_Ele25_WPTight_Gsf_ = false;
    loaded_HLT_Ele25_eta2p1_WPLoose_Gsf_ = false;
    loaded_HLT_Ele25_eta2p1_WPTight_Gsf_ = false;
    loaded_HLT_Ele27_Ele37_CaloIdL_MW_ = false;
    loaded_HLT_Ele27_HighEta_Ele20_Mass55_ = false;
    loaded_HLT_Ele27_WPLoose_Gsf_ = false;
    loaded_HLT_Ele27_WPLoose_Gsf_WHbbBoost_ = false;
    loaded_HLT_Ele27_WPTight_Gsf_ = false;
    loaded_HLT_Ele27_WPTight_Gsf_L1JetTauSeeded_ = false;
    loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_ = false;
    loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_HT200_ = false;
    loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ = false;
    loaded_HLT_Ele27_eta2p1_WPTight_Gsf_ = false;
    loaded_HLT_Ele28_HighEta_SC20_Mass55_ = false;
    loaded_HLT_Ele28_WPTight_Gsf_ = false;
    loaded_HLT_Ele28_eta2p1_WPTight_Gsf_HT150_ = false;
    loaded_HLT_Ele300_CaloIdVT_GsfTrkIdT_ = false;
    loaded_HLT_Ele30WP60_Ele8_Mass55_ = false;
    loaded_HLT_Ele30WP60_SC4_Mass55_ = false;
    loaded_HLT_Ele30_WPTight_Gsf_ = false;
    loaded_HLT_Ele30_eta2p1_WPLoose_Gsf_ = false;
    loaded_HLT_Ele30_eta2p1_WPTight_Gsf_ = false;
    loaded_HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_ = false;
    loaded_HLT_Ele32_WPTight_Gsf_ = false;
    loaded_HLT_Ele32_WPTight_Gsf_L1DoubleEG_ = false;
    loaded_HLT_Ele32_eta2p1_WPLoose_Gsf_ = false;
    loaded_HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ = false;
    loaded_HLT_Ele32_eta2p1_WPTight_Gsf_ = false;
    loaded_HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50_ = false;
    loaded_HLT_Ele35_WPLoose_Gsf_ = false;
    loaded_HLT_Ele35_WPTight_Gsf_ = false;
    loaded_HLT_Ele35_WPTight_Gsf_L1EGMT_ = false;
    loaded_HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ = false;
    loaded_HLT_Ele38_WPTight_Gsf_ = false;
    loaded_HLT_Ele40_WPTight_Gsf_ = false;
    loaded_HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50_ = false;
    loaded_HLT_Ele45_WPLoose_Gsf_ = false;
    loaded_HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded_ = false;
    loaded_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_ = false;
    loaded_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_ = false;
    loaded_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140_ = false;
    loaded_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_ = false;
    loaded_HLT_Ele50_IsoVVVL_PFHT400_ = false;
    loaded_HLT_Ele50_IsoVVVL_PFHT450_ = false;
    loaded_HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_ = false;
    loaded_HLT_Ele8_CaloIdM_TrackIdM_PFJet30_ = false;
    loaded_HLT_EphemeralPhysics_ = false;
    loaded_HLT_EphemeralZeroBias_ = false;
    loaded_HLT_ExpressMuons_ = false;
    loaded_HLT_FullTrack_Multiplicity100_ = false;
    loaded_HLT_FullTrack_Multiplicity105_ = false;
    loaded_HLT_FullTrack_Multiplicity130_ = false;
    loaded_HLT_FullTrack_Multiplicity135_ = false;
    loaded_HLT_FullTrack_Multiplicity155_ = false;
    loaded_HLT_FullTrack_Multiplicity85_ = false;
    loaded_HLT_FullTracks_Multiplicity100_ = false;
    loaded_HLT_FullTracks_Multiplicity130_ = false;
    loaded_HLT_FullTracks_Multiplicity150_ = false;
    loaded_HLT_FullTracks_Multiplicity80_ = false;
    loaded_HLT_GlobalRunHPDNoise_ = false;
    loaded_HLT_HISinglePhoton10_ = false;
    loaded_HLT_HISinglePhoton10_Eta3p1ForPPRef_ = false;
    loaded_HLT_HISinglePhoton15_ = false;
    loaded_HLT_HISinglePhoton20_ = false;
    loaded_HLT_HISinglePhoton20_Eta3p1ForPPRef_ = false;
    loaded_HLT_HISinglePhoton30_Eta3p1ForPPRef_ = false;
    loaded_HLT_HISinglePhoton40_ = false;
    loaded_HLT_HISinglePhoton40_Eta3p1ForPPRef_ = false;
    loaded_HLT_HISinglePhoton50_Eta3p1ForPPRef_ = false;
    loaded_HLT_HISinglePhoton60_ = false;
    loaded_HLT_HISinglePhoton60_Eta3p1ForPPRef_ = false;
    loaded_HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_ = false;
    loaded_HLT_HT200_ = false;
    loaded_HLT_HT2000_ = false;
    loaded_HLT_HT200_DisplacedDijet40_DisplacedTrack_ = false;
    loaded_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_ = false;
    loaded_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_ = false;
    loaded_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_ = false;
    loaded_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_ = false;
    loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5_ = false;
    loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_ = false;
    loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_ = false;
    loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_ = false;
    loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_ = false;
    loaded_HLT_HT2500_ = false;
    loaded_HLT_HT250_CaloMET70_ = false;
    loaded_HLT_HT250_DisplacedDijet40_DisplacedTrack_ = false;
    loaded_HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_ = false;
    loaded_HLT_HT275_ = false;
    loaded_HLT_HT300PT30_QuadJet_75_60_45_40_ = false;
    loaded_HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07_ = false;
    loaded_HLT_HT300_Beamspot_ = false;
    loaded_HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_ = false;
    loaded_HLT_HT325_ = false;
    loaded_HLT_HT350_DisplacedDijet40_DisplacedTrack_ = false;
    loaded_HLT_HT350_DisplacedDijet40_Inclusive_ = false;
    loaded_HLT_HT350_DisplacedDijet80_DisplacedTrack_ = false;
    loaded_HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack_ = false;
    loaded_HLT_HT400_DisplacedDijet40_DisplacedTrack_ = false;
    loaded_HLT_HT400_DisplacedDijet40_Inclusive_ = false;
    loaded_HLT_HT410to430_ = false;
    loaded_HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_ = false;
    loaded_HLT_HT425_ = false;
    loaded_HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_ = false;
    loaded_HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_ = false;
    loaded_HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_ = false;
    loaded_HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_ = false;
    loaded_HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_ = false;
    loaded_HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_ = false;
    loaded_HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_ = false;
    loaded_HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_ = false;
    loaded_HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_ = false;
    loaded_HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5_ = false;
    loaded_HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5_ = false;
    loaded_HLT_HT430_DisplacedDijet40_DisplacedTrack_ = false;
    loaded_HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_ = false;
    loaded_HLT_HT430_DisplacedDijet60_DisplacedTrack_ = false;
    loaded_HLT_HT430_DisplacedDijet80_DisplacedTrack_ = false;
    loaded_HLT_HT430to450_ = false;
    loaded_HLT_HT450_Beamspot_ = false;
    loaded_HLT_HT450to470_ = false;
    loaded_HLT_HT470to500_ = false;
    loaded_HLT_HT500_DisplacedDijet40_DisplacedTrack_ = false;
    loaded_HLT_HT500_DisplacedDijet40_Inclusive_ = false;
    loaded_HLT_HT500to550_ = false;
    loaded_HLT_HT550_DisplacedDijet40_Inclusive_ = false;
    loaded_HLT_HT550_DisplacedDijet60_Inclusive_ = false;
    loaded_HLT_HT550_DisplacedDijet80_Inclusive_ = false;
    loaded_HLT_HT550to650_ = false;
    loaded_HLT_HT575_ = false;
    loaded_HLT_HT650_ = false;
    loaded_HLT_HT650_DisplacedDijet60_Inclusive_ = false;
    loaded_HLT_HT650_DisplacedDijet80_Inclusive_ = false;
    loaded_HLT_HT750_DisplacedDijet80_Inclusive_ = false;
    loaded_HLT_HcalCalibration_ = false;
    loaded_HLT_HcalIsolatedbunch_ = false;
    loaded_HLT_HcalNZS_ = false;
    loaded_HLT_HcalPhiSym_ = false;
    loaded_HLT_HighPtTkMu100_ = false;
    loaded_HLT_IsoMu16_eta2p1_MET30_ = false;
    loaded_HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1_ = false;
    loaded_HLT_IsoMu17_eta2p1_ = false;
    loaded_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_ = false;
    loaded_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1_ = false;
    loaded_HLT_IsoMu18_ = false;
    loaded_HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20_ = false;
    loaded_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_ = false;
    loaded_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1_ = false;
    loaded_HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_IsoMu20_ = false;
    loaded_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1_ = false;
    loaded_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1_ = false;
    loaded_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_ = false;
    loaded_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_ = false;
    loaded_HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_ = false;
    loaded_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1_ = false;
    loaded_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1_ = false;
    loaded_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_ = false;
    loaded_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_ = false;
    loaded_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1_ = false;
    loaded_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1_ = false;
    loaded_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_ = false;
    loaded_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_ = false;
    loaded_HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1_ = false;
    loaded_HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1_ = false;
    loaded_HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_IsoMu22_ = false;
    loaded_HLT_IsoMu22_eta2p1_ = false;
    loaded_HLT_IsoMu24_ = false;
    loaded_HLT_IsoMu24_TwoProngs35_ = false;
    loaded_HLT_IsoMu24_eta2p1_ = false;
    loaded_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_ = false;
    loaded_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_ = false;
    loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_ = false;
    loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_ = false;
    loaded_HLT_IsoMu27_ = false;
    loaded_HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1_ = false;
    loaded_HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1_ = false;
    loaded_HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_ = false;
    loaded_HLT_IsoMu27_MET90_ = false;
    loaded_HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1_ = false;
    loaded_HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1_ = false;
    loaded_HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_ = false;
    loaded_HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_ = false;
    loaded_HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1_ = false;
    loaded_HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1_ = false;
    loaded_HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_ = false;
    loaded_HLT_IsoMu30_ = false;
    loaded_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_ = false;
    loaded_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_ = false;
    loaded_HLT_IsoTkMu18_ = false;
    loaded_HLT_IsoTkMu20_ = false;
    loaded_HLT_IsoTkMu22_ = false;
    loaded_HLT_IsoTkMu22_eta2p1_ = false;
    loaded_HLT_IsoTkMu24_ = false;
    loaded_HLT_IsoTkMu24_eta2p1_ = false;
    loaded_HLT_IsoTkMu27_ = false;
    loaded_HLT_IsoTrackHB_ = false;
    loaded_HLT_IsoTrackHE_ = false;
    loaded_HLT_JetE30_NoBPTX_ = false;
    loaded_HLT_JetE30_NoBPTX3BX_ = false;
    loaded_HLT_JetE50_NoBPTX3BX_ = false;
    loaded_HLT_JetE70_NoBPTX3BX_ = false;
    loaded_HLT_L1BeamGasMinus_ = false;
    loaded_HLT_L1BeamGasPlus_ = false;
    loaded_HLT_L1BptxMinus_ = false;
    loaded_HLT_L1BptxPlus_ = false;
    loaded_HLT_L1BptxXOR_ = false;
    loaded_HLT_L1CSCShower_DTCluster50_ = false;
    loaded_HLT_L1CSCShower_DTCluster75_ = false;
    loaded_HLT_L1ETMHadSeeds_ = false;
    loaded_HLT_L1FatEvents_ = false;
    loaded_HLT_L1FatEvents_part0_ = false;
    loaded_HLT_L1FatEvents_part1_ = false;
    loaded_HLT_L1FatEvents_part2_ = false;
    loaded_HLT_L1FatEvents_part3_ = false;
    loaded_HLT_L1MET_DTCluster50_ = false;
    loaded_HLT_L1MET_DTClusterNoMB1S50_ = false;
    loaded_HLT_L1MinimumBiasHF0OR_ = false;
    loaded_HLT_L1MinimumBiasHF_AND_ = false;
    loaded_HLT_L1MinimumBiasHF_OR_ = false;
    loaded_HLT_L1MinimumBiasHF_OR_part0_ = false;
    loaded_HLT_L1MinimumBiasHF_OR_part1_ = false;
    loaded_HLT_L1MinimumBiasHF_OR_part2_ = false;
    loaded_HLT_L1MinimumBiasHF_OR_part3_ = false;
    loaded_HLT_L1MinimumBiasHF_OR_part4_ = false;
    loaded_HLT_L1MinimumBiasHF_OR_part5_ = false;
    loaded_HLT_L1MinimumBiasHF_OR_part6_ = false;
    loaded_HLT_L1MinimumBiasHF_OR_part7_ = false;
    loaded_HLT_L1MinimumBiasHF_OR_part8_ = false;
    loaded_HLT_L1MinimumBiasHF_OR_part9_ = false;
    loaded_HLT_L1Mu6HT240_ = false;
    loaded_HLT_L1NotBptxOR_ = false;
    loaded_HLT_L1SingleMu16_ = false;
    loaded_HLT_L1SingleMu18_ = false;
    loaded_HLT_L1SingleMu25_ = false;
    loaded_HLT_L1SingleMuCosmics_ = false;
    loaded_HLT_L1SingleMuOpen_ = false;
    loaded_HLT_L1SingleMuOpen_DT_ = false;
    loaded_HLT_L1UnpairedBunchBptxMinus_ = false;
    loaded_HLT_L1UnpairedBunchBptxPlus_ = false;
    loaded_HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_ = false;
    loaded_HLT_L1_DoubleJet30_Mass_Min400_Mu10_ = false;
    loaded_HLT_L1_TripleJet_VBF_ = false;
    loaded_HLT_L2DoubleMu23_NoVertex_ = false;
    loaded_HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10_ = false;
    loaded_HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10_ = false;
    loaded_HLT_L2Mu10_ = false;
    loaded_HLT_L2Mu10NoVtx_2Cha_ = false;
    loaded_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_ = false;
    loaded_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_ = false;
    loaded_HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ = false;
    loaded_HLT_L2Mu10_NoVertex_NoBPTX_ = false;
    loaded_HLT_L2Mu10_NoVertex_NoBPTX3BX_ = false;
    loaded_HLT_L2Mu23NoVtx_2Cha_ = false;
    loaded_HLT_L2Mu23NoVtx_2Cha_CosmicSeed_ = false;
    loaded_HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX_ = false;
    loaded_HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_ = false;
    loaded_HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_ = false;
    loaded_HLT_L2Mu50_ = false;
    loaded_HLT_L3Mu10NoVtx_ = false;
    loaded_HLT_L3Mu10NoVtx_DxyMin0p01cm_ = false;
    loaded_HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_ = false;
    loaded_HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_ = false;
    loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_ = false;
    loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110_ = false;
    loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120_ = false;
    loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80_ = false;
    loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90_ = false;
    loaded_HLT_MET100_ = false;
    loaded_HLT_MET105_IsoTrk50_ = false;
    loaded_HLT_MET120_IsoTrk50_ = false;
    loaded_HLT_MET150_ = false;
    loaded_HLT_MET200_ = false;
    loaded_HLT_MET250_ = false;
    loaded_HLT_MET300_ = false;
    loaded_HLT_MET600_ = false;
    loaded_HLT_MET60_IsoTrk35_Loose_ = false;
    loaded_HLT_MET700_ = false;
    loaded_HLT_MET75_IsoTrk50_ = false;
    loaded_HLT_MET90_IsoTrk50_ = false;
    loaded_HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr_ = false;
    loaded_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_ = false;
    loaded_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_ = false;
    loaded_HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_ = false;
    loaded_HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_ = false;
    loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_ = false;
    loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_ = false;
    loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_ = false;
    loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_ = false;
    loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_ = false;
    loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_ = false;
    loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_ = false;
    loaded_HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight_ = false;
    loaded_HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_ = false;
    loaded_HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_ = false;
    loaded_HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_ = false;
    loaded_HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_ = false;
    loaded_HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight_ = false;
    loaded_HLT_Mu0_L1DoubleMu_ = false;
    loaded_HLT_Mu10_CentralPFJet30_BTagCSV_p13_ = false;
    loaded_HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_ = false;
    loaded_HLT_Mu10p5_IP3p5_part0_ = false;
    loaded_HLT_Mu10p5_IP3p5_part1_ = false;
    loaded_HLT_Mu10p5_IP3p5_part2_ = false;
    loaded_HLT_Mu10p5_IP3p5_part3_ = false;
    loaded_HLT_Mu10p5_IP3p5_part4_ = false;
    loaded_HLT_Mu10p5_IP3p5_part5_ = false;
    loaded_HLT_Mu12_ = false;
    loaded_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33_ = false;
    loaded_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79_ = false;
    loaded_HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33_ = false;
    loaded_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79_ = false;
    loaded_HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33_ = false;
    loaded_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79_ = false;
    loaded_HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33_ = false;
    loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79_ = false;
    loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33_ = false;
    loaded_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79_ = false;
    loaded_HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33_ = false;
    loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79_ = false;
    loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_ = false;
    loaded_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33_ = false;
    loaded_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79_ = false;
    loaded_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ = false;
    loaded_HLT_Mu12_DoublePhoton20_ = false;
    loaded_HLT_Mu12_IP6_ = false;
    loaded_HLT_Mu12_IP6_ToCSCS_ = false;
    loaded_HLT_Mu12_IP6_part0_ = false;
    loaded_HLT_Mu12_IP6_part1_ = false;
    loaded_HLT_Mu12_IP6_part2_ = false;
    loaded_HLT_Mu12_IP6_part3_ = false;
    loaded_HLT_Mu12_IP6_part4_ = false;
    loaded_HLT_Mu12_Photon25_CaloIdL_ = false;
    loaded_HLT_Mu12_Photon25_CaloIdL_L1ISO_ = false;
    loaded_HLT_Mu12_Photon25_CaloIdL_L1OR_ = false;
    loaded_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_ = false;
    loaded_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_ = false;
    loaded_HLT_Mu12eta2p3_ = false;
    loaded_HLT_Mu12eta2p3_PFJet40_ = false;
    loaded_HLT_Mu14er_PFMET100_ = false;
    loaded_HLT_Mu15_ = false;
    loaded_HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400_ = false;
    loaded_HLT_Mu15_IsoVVVL_PFHT350_ = false;
    loaded_HLT_Mu15_IsoVVVL_PFHT350_PFMET50_ = false;
    loaded_HLT_Mu15_IsoVVVL_PFHT400_ = false;
    loaded_HLT_Mu15_IsoVVVL_PFHT400_PFMET50_ = false;
    loaded_HLT_Mu15_IsoVVVL_PFHT450_ = false;
    loaded_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_ = false;
    loaded_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_ = false;
    loaded_HLT_Mu15_IsoVVVL_PFHT450_PFMET50_ = false;
    loaded_HLT_Mu15_IsoVVVL_PFHT600_ = false;
    loaded_HLT_Mu16_TkMu0_dEta18_Onia_ = false;
    loaded_HLT_Mu16_TkMu0_dEta18_Phi_ = false;
    loaded_HLT_Mu16_eta2p1_MET30_ = false;
    loaded_HLT_Mu17_ = false;
    loaded_HLT_Mu17_Mu8_ = false;
    loaded_HLT_Mu17_Mu8_DZ_ = false;
    loaded_HLT_Mu17_Mu8_SameSign_ = false;
    loaded_HLT_Mu17_Mu8_SameSign_DZ_ = false;
    loaded_HLT_Mu17_Photon22_CaloIdL_L1ISO_ = false;
    loaded_HLT_Mu17_Photon30_CaloIdL_L1ISO_ = false;
    loaded_HLT_Mu17_Photon30_IsoCaloId_ = false;
    loaded_HLT_Mu17_Photon35_CaloIdL_L1ISO_ = false;
    loaded_HLT_Mu17_TkMu8_DZ_ = false;
    loaded_HLT_Mu17_TrkIsoVVL_ = false;
    loaded_HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_ = false;
    loaded_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_ = false;
    loaded_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_ = false;
    loaded_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_ = false;
    loaded_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_ = false;
    loaded_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_ = false;
    loaded_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_ = false;
    loaded_HLT_Mu18_Mu9_ = false;
    loaded_HLT_Mu18_Mu9_DZ_ = false;
    loaded_HLT_Mu18_Mu9_SameSign_ = false;
    loaded_HLT_Mu18_Mu9_SameSign_DZ_ = false;
    loaded_HLT_Mu19_ = false;
    loaded_HLT_Mu19_TrkIsoVVL_ = false;
    loaded_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_ = false;
    loaded_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_ = false;
    loaded_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_ = false;
    loaded_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_ = false;
    loaded_HLT_Mu20_ = false;
    loaded_HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_ = false;
    loaded_HLT_Mu20_Mu10_ = false;
    loaded_HLT_Mu20_Mu10_DZ_ = false;
    loaded_HLT_Mu20_Mu10_SameSign_ = false;
    loaded_HLT_Mu20_Mu10_SameSign_DZ_ = false;
    loaded_HLT_Mu20_TkMu0_Phi_ = false;
    loaded_HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL_ = false;
    loaded_HLT_Mu23_Mu12_ = false;
    loaded_HLT_Mu23_Mu12_DZ_ = false;
    loaded_HLT_Mu23_Mu12_SameSign_ = false;
    loaded_HLT_Mu23_Mu12_SameSign_DZ_ = false;
    loaded_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_ = false;
    loaded_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_ = false;
    loaded_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_ = false;
    loaded_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_ = false;
    loaded_HLT_Mu24_eta2p1_ = false;
    loaded_HLT_Mu25_TkMu0_Onia_ = false;
    loaded_HLT_Mu25_TkMu0_Phi_ = false;
    loaded_HLT_Mu25_TkMu0_dEta18_Onia_ = false;
    loaded_HLT_Mu27_ = false;
    loaded_HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL_ = false;
    loaded_HLT_Mu27_Ele37_CaloIdL_MW_ = false;
    loaded_HLT_Mu27_TkMu8_ = false;
    loaded_HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL_ = false;
    loaded_HLT_Mu28NoFiltersNoVtx_CentralCaloJet40_ = false;
    loaded_HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose_ = false;
    loaded_HLT_Mu300_ = false;
    loaded_HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL_ = false;
    loaded_HLT_Mu30_TkMu0_Onia_ = false;
    loaded_HLT_Mu30_TkMu0_Psi_ = false;
    loaded_HLT_Mu30_TkMu0_Upsilon_ = false;
    loaded_HLT_Mu30_TkMu11_ = false;
    loaded_HLT_Mu30_eta2p1_PFJet150_PFJet50_ = false;
    loaded_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose_ = false;
    loaded_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight_ = false;
    loaded_HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL_ = false;
    loaded_HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL_ = false;
    loaded_HLT_Mu350_ = false;
    loaded_HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL_ = false;
    loaded_HLT_Mu37_Ele27_CaloIdL_MW_ = false;
    loaded_HLT_Mu37_TkMu27_ = false;
    loaded_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose_ = false;
    loaded_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight_ = false;
    loaded_HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_ = false;
    loaded_HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose_ = false;
    loaded_HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL_ = false;
    loaded_HLT_Mu3_L1SingleMu5orSingleMu7_ = false;
    loaded_HLT_Mu3_PFJet40_ = false;
    loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_ = false;
    loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_ = false;
    loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_ = false;
    loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_ = false;
    loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_ = false;
    loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_ = false;
    loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_ = false;
    loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_ = false;
    loaded_HLT_Mu3er_PFHT140_PFMET125_ = false;
    loaded_HLT_Mu40_TkMu11_ = false;
    loaded_HLT_Mu40_eta2p1_PFJet200_PFJet50_ = false;
    loaded_HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL_ = false;
    loaded_HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_ = false;
    loaded_HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_ = false;
    loaded_HLT_Mu45_eta2p1_ = false;
    loaded_HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_ = false;
    loaded_HLT_Mu4_L1DoubleMu_ = false;
    loaded_HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_ = false;
    loaded_HLT_Mu50_ = false;
    loaded_HLT_Mu50_IsoVVVL_PFHT400_ = false;
    loaded_HLT_Mu50_IsoVVVL_PFHT450_ = false;
    loaded_HLT_Mu50_L1SingleMuShower_ = false;
    loaded_HLT_Mu55_ = false;
    loaded_HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5_ = false;
    loaded_HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_ = false;
    loaded_HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_ = false;
    loaded_HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_ = false;
    loaded_HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_ = false;
    loaded_HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_ = false;
    loaded_HLT_Mu6_PFHT200_PFMET100_ = false;
    loaded_HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067_ = false;
    loaded_HLT_Mu7_IP4_ToCSCS_ = false;
    loaded_HLT_Mu7_IP4_part0_ = false;
    loaded_HLT_Mu7_IP4_part1_ = false;
    loaded_HLT_Mu7_IP4_part2_ = false;
    loaded_HLT_Mu7_IP4_part3_ = false;
    loaded_HLT_Mu7_IP4_part4_ = false;
    loaded_HLT_Mu7p5_L2Mu2_Jpsi_ = false;
    loaded_HLT_Mu7p5_L2Mu2_Upsilon_ = false;
    loaded_HLT_Mu7p5_Track2_Jpsi_ = false;
    loaded_HLT_Mu7p5_Track2_Upsilon_ = false;
    loaded_HLT_Mu7p5_Track3p5_Jpsi_ = false;
    loaded_HLT_Mu7p5_Track3p5_Upsilon_ = false;
    loaded_HLT_Mu7p5_Track7_Jpsi_ = false;
    loaded_HLT_Mu7p5_Track7_Upsilon_ = false;
    loaded_HLT_Mu8_ = false;
    loaded_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_ = false;
    loaded_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_ = false;
    loaded_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250_ = false;
    loaded_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300_ = false;
    loaded_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_ = false;
    loaded_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_ = false;
    loaded_HLT_Mu8_IP3_ToCSCS_ = false;
    loaded_HLT_Mu8_IP3_part0_ = false;
    loaded_HLT_Mu8_IP3_part1_ = false;
    loaded_HLT_Mu8_IP3_part2_ = false;
    loaded_HLT_Mu8_IP3_part3_ = false;
    loaded_HLT_Mu8_IP3_part4_ = false;
    loaded_HLT_Mu8_IP3_part5_ = false;
    loaded_HLT_Mu8_IP5_ToCSCS_ = false;
    loaded_HLT_Mu8_IP5_part0_ = false;
    loaded_HLT_Mu8_IP5_part1_ = false;
    loaded_HLT_Mu8_IP5_part2_ = false;
    loaded_HLT_Mu8_IP5_part3_ = false;
    loaded_HLT_Mu8_IP5_part4_ = false;
    loaded_HLT_Mu8_IP6_ToCSCS_ = false;
    loaded_HLT_Mu8_IP6_part0_ = false;
    loaded_HLT_Mu8_IP6_part1_ = false;
    loaded_HLT_Mu8_IP6_part2_ = false;
    loaded_HLT_Mu8_IP6_part3_ = false;
    loaded_HLT_Mu8_IP6_part4_ = false;
    loaded_HLT_Mu8_TrkIsoVVL_ = false;
    loaded_HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_ = false;
    loaded_HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL_ = false;
    loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_ = false;
    loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_ = false;
    loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_ = false;
    loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_ = false;
    loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_ = false;
    loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_ = false;
    loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_ = false;
    loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_ = false;
    loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_ = false;
    loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_ = false;
    loaded_HLT_Mu8p5_IP3p5_part0_ = false;
    loaded_HLT_Mu8p5_IP3p5_part1_ = false;
    loaded_HLT_Mu8p5_IP3p5_part2_ = false;
    loaded_HLT_Mu8p5_IP3p5_part3_ = false;
    loaded_HLT_Mu8p5_IP3p5_part4_ = false;
    loaded_HLT_Mu8p5_IP3p5_part5_ = false;
    loaded_HLT_Mu9_IP0_part0_ = false;
    loaded_HLT_Mu9_IP3_part0_ = false;
    loaded_HLT_Mu9_IP4_ToCSCS_ = false;
    loaded_HLT_Mu9_IP4_part0_ = false;
    loaded_HLT_Mu9_IP4_part1_ = false;
    loaded_HLT_Mu9_IP4_part2_ = false;
    loaded_HLT_Mu9_IP4_part3_ = false;
    loaded_HLT_Mu9_IP4_part4_ = false;
    loaded_HLT_Mu9_IP5_ToCSCS_ = false;
    loaded_HLT_Mu9_IP5_part0_ = false;
    loaded_HLT_Mu9_IP5_part1_ = false;
    loaded_HLT_Mu9_IP5_part2_ = false;
    loaded_HLT_Mu9_IP5_part3_ = false;
    loaded_HLT_Mu9_IP5_part4_ = false;
    loaded_HLT_Mu9_IP6_ToCSCS_ = false;
    loaded_HLT_Mu9_IP6_part0_ = false;
    loaded_HLT_Mu9_IP6_part1_ = false;
    loaded_HLT_Mu9_IP6_part2_ = false;
    loaded_HLT_Mu9_IP6_part3_ = false;
    loaded_HLT_Mu9_IP6_part4_ = false;
    loaded_HLT_Mu9_IP6_part5_ = false;
    loaded_HLT_OldMu100_ = false;
    loaded_HLT_OnlineMonitorGroup_ = false;
    loaded_HLT_PFHT1050_ = false;
    loaded_HLT_PFHT125_ = false;
    loaded_HLT_PFHT180_ = false;
    loaded_HLT_PFHT200_ = false;
    loaded_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57_ = false;
    loaded_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63_ = false;
    loaded_HLT_PFHT200_PFAlphaT0p51_ = false;
    loaded_HLT_PFHT250_ = false;
    loaded_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55_ = false;
    loaded_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58_ = false;
    loaded_HLT_PFHT300_ = false;
    loaded_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_ = false;
    loaded_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0_ = false;
    loaded_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53_ = false;
    loaded_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54_ = false;
    loaded_HLT_PFHT300_PFMET100_ = false;
    loaded_HLT_PFHT300_PFMET110_ = false;
    loaded_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_ = false;
    loaded_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_ = false;
    loaded_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_ = false;
    loaded_HLT_PFHT350_ = false;
    loaded_HLT_PFHT350MinPFJet15_ = false;
    loaded_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52_ = false;
    loaded_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53_ = false;
    loaded_HLT_PFHT370_ = false;
    loaded_HLT_PFHT380_SixJet32_DoubleBTagCSV_p075_ = false;
    loaded_HLT_PFHT380_SixPFJet32_ = false;
    loaded_HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2_ = false;
    loaded_HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2_ = false;
    loaded_HLT_PFHT400_ = false;
    loaded_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51_ = false;
    loaded_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52_ = false;
    loaded_HLT_PFHT400_FivePFJet_100_100_60_30_30_ = false;
    loaded_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_ = false;
    loaded_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_ = false;
    loaded_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_ = false;
    loaded_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_ = false;
    loaded_HLT_PFHT400_SixJet30_ = false;
    loaded_HLT_PFHT400_SixJet30_DoubleBTagCSV_p056_ = false;
    loaded_HLT_PFHT400_SixPFJet32_ = false;
    loaded_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_ = false;
    loaded_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_ = false;
    loaded_HLT_PFHT430_ = false;
    loaded_HLT_PFHT430_SixJet40_BTagCSV_p080_ = false;
    loaded_HLT_PFHT430_SixPFJet40_ = false;
    loaded_HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5_ = false;
    loaded_HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5_ = false;
    loaded_HLT_PFHT450_SixJet40_ = false;
    loaded_HLT_PFHT450_SixJet40_BTagCSV_p056_ = false;
    loaded_HLT_PFHT450_SixPFJet36_ = false;
    loaded_HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_ = false;
    loaded_HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_ = false;
    loaded_HLT_PFHT475_ = false;
    loaded_HLT_PFHT500_PFMET100_PFMHT100_IDTight_ = false;
    loaded_HLT_PFHT500_PFMET110_PFMHT110_IDTight_ = false;
    loaded_HLT_PFHT510_ = false;
    loaded_HLT_PFHT550_4JetPt50_ = false;
    loaded_HLT_PFHT590_ = false;
    loaded_HLT_PFHT600_ = false;
    loaded_HLT_PFHT650_ = false;
    loaded_HLT_PFHT650_4JetPt50_ = false;
    loaded_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_ = false;
    loaded_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_ = false;
    loaded_HLT_PFHT680_ = false;
    loaded_HLT_PFHT700_PFMET85_PFMHT85_IDTight_ = false;
    loaded_HLT_PFHT700_PFMET95_PFMHT95_IDTight_ = false;
    loaded_HLT_PFHT750_4JetPt50_ = false;
    loaded_HLT_PFHT750_4JetPt70_ = false;
    loaded_HLT_PFHT750_4JetPt80_ = false;
    loaded_HLT_PFHT780_ = false;
    loaded_HLT_PFHT800_ = false;
    loaded_HLT_PFHT800_4JetPt50_ = false;
    loaded_HLT_PFHT800_PFMET75_PFMHT75_IDTight_ = false;
    loaded_HLT_PFHT800_PFMET85_PFMHT85_IDTight_ = false;
    loaded_HLT_PFHT850_4JetPt50_ = false;
    loaded_HLT_PFHT890_ = false;
    loaded_HLT_PFHT900_ = false;
    loaded_HLT_PFJet110_ = false;
    loaded_HLT_PFJet140_ = false;
    loaded_HLT_PFJet15_ = false;
    loaded_HLT_PFJet15_NoCaloMatched_ = false;
    loaded_HLT_PFJet200_ = false;
    loaded_HLT_PFJet25_ = false;
    loaded_HLT_PFJet25_NoCaloMatched_ = false;
    loaded_HLT_PFJet260_ = false;
    loaded_HLT_PFJet320_ = false;
    loaded_HLT_PFJet40_ = false;
    loaded_HLT_PFJet400_ = false;
    loaded_HLT_PFJet40_GPUvsCPU_ = false;
    loaded_HLT_PFJet450_ = false;
    loaded_HLT_PFJet500_ = false;
    loaded_HLT_PFJet550_ = false;
    loaded_HLT_PFJet60_ = false;
    loaded_HLT_PFJet80_ = false;
    loaded_HLT_PFJetFwd140_ = false;
    loaded_HLT_PFJetFwd15_ = false;
    loaded_HLT_PFJetFwd200_ = false;
    loaded_HLT_PFJetFwd25_ = false;
    loaded_HLT_PFJetFwd260_ = false;
    loaded_HLT_PFJetFwd320_ = false;
    loaded_HLT_PFJetFwd40_ = false;
    loaded_HLT_PFJetFwd400_ = false;
    loaded_HLT_PFJetFwd450_ = false;
    loaded_HLT_PFJetFwd500_ = false;
    loaded_HLT_PFJetFwd60_ = false;
    loaded_HLT_PFJetFwd80_ = false;
    loaded_HLT_PFMET100_PFMHT100_IDTight_ = false;
    loaded_HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned_ = false;
    loaded_HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1_ = false;
    loaded_HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_ = false;
    loaded_HLT_PFMET100_PFMHT100_IDTight_PFHT60_ = false;
    loaded_HLT_PFMET105_IsoTrk50_ = false;
    loaded_HLT_PFMET110_PFJet100_ = false;
    loaded_HLT_PFMET110_PFMHT110_IDTight_ = false;
    loaded_HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1_ = false;
    loaded_HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_ = false;
    loaded_HLT_PFMET120_BTagCSV_p067_ = false;
    loaded_HLT_PFMET120_Mu5_ = false;
    loaded_HLT_PFMET120_PFMHT120_IDTight_ = false;
    loaded_HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1_ = false;
    loaded_HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_ = false;
    loaded_HLT_PFMET120_PFMHT120_IDTight_HFCleaned_ = false;
    loaded_HLT_PFMET120_PFMHT120_IDTight_PFHT60_ = false;
    loaded_HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned_ = false;
    loaded_HLT_PFMET130_PFMHT130_IDTight_ = false;
    loaded_HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1_ = false;
    loaded_HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_ = false;
    loaded_HLT_PFMET140_PFMHT140_IDTight_ = false;
    loaded_HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1_ = false;
    loaded_HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_ = false;
    loaded_HLT_PFMET170_BeamHaloCleaned_ = false;
    loaded_HLT_PFMET170_HBHECleaned_ = false;
    loaded_HLT_PFMET170_HBHE_BeamHaloCleaned_ = false;
    loaded_HLT_PFMET170_JetIdCleaned_ = false;
    loaded_HLT_PFMET170_NoiseCleaned_ = false;
    loaded_HLT_PFMET170_NotCleaned_ = false;
    loaded_HLT_PFMET200_BeamHaloCleaned_ = false;
    loaded_HLT_PFMET200_HBHECleaned_ = false;
    loaded_HLT_PFMET200_HBHE_BeamHaloCleaned_ = false;
    loaded_HLT_PFMET200_NotCleaned_ = false;
    loaded_HLT_PFMET250_HBHECleaned_ = false;
    loaded_HLT_PFMET250_NotCleaned_ = false;
    loaded_HLT_PFMET300_ = false;
    loaded_HLT_PFMET300_HBHECleaned_ = false;
    loaded_HLT_PFMET300_NotCleaned_ = false;
    loaded_HLT_PFMET400_ = false;
    loaded_HLT_PFMET500_ = false;
    loaded_HLT_PFMET600_ = false;
    loaded_HLT_PFMET90_PFMHT90_IDTight_ = false;
    loaded_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_ = false;
    loaded_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_ = false;
    loaded_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_ = false;
    loaded_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_ = false;
    loaded_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_ = false;
    loaded_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_ = false;
    loaded_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned_ = false;
    loaded_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_ = false;
    loaded_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_ = false;
    loaded_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_ = false;
    loaded_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_ = false;
    loaded_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_ = false;
    loaded_HLT_PFMETNoMu90_PFMHTNoMu90_IDTight_ = false;
    loaded_HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_ = false;
    loaded_HLT_PFMETTypeOne110_PFMHT110_IDTight_ = false;
    loaded_HLT_PFMETTypeOne120_PFMHT120_IDTight_ = false;
    loaded_HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned_ = false;
    loaded_HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_ = false;
    loaded_HLT_PFMETTypeOne130_PFMHT130_IDTight_ = false;
    loaded_HLT_PFMETTypeOne140_PFMHT140_IDTight_ = false;
    loaded_HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned_ = false;
    loaded_HLT_PFMETTypeOne200_BeamHaloCleaned_ = false;
    loaded_HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_ = false;
    loaded_HLT_PFTau120_eta2p1_ = false;
    loaded_HLT_PFTau140_eta2p1_ = false;
    loaded_HLT_PPSMaxTracksPerArm1_ = false;
    loaded_HLT_PPSMaxTracksPerRP4_ = false;
    loaded_HLT_Photon100EBHE10_ = false;
    loaded_HLT_Photon100EB_TightID_TightIso_ = false;
    loaded_HLT_Photon100EEHE10_ = false;
    loaded_HLT_Photon100EE_TightID_TightIso_ = false;
    loaded_HLT_Photon110EB_TightID_TightIso_ = false;
    loaded_HLT_Photon120_ = false;
    loaded_HLT_Photon120EB_TightID_TightIso_ = false;
    loaded_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = false;
    loaded_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF_ = false;
    loaded_HLT_Photon120_R9Id90_HE10_IsoM_ = false;
    loaded_HLT_Photon125_ = false;
    loaded_HLT_Photon135_PFMET100_ = false;
    loaded_HLT_Photon150_ = false;
    loaded_HLT_Photon165_HE10_ = false;
    loaded_HLT_Photon165_R9Id90_HE10_IsoM_ = false;
    loaded_HLT_Photon175_ = false;
    loaded_HLT_Photon20_ = false;
    loaded_HLT_Photon200_ = false;
    loaded_HLT_Photon20_CaloIdVL_IsoL_ = false;
    loaded_HLT_Photon20_HoverELoose_ = false;
    loaded_HLT_Photon22_ = false;
    loaded_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = false;
    loaded_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF_ = false;
    loaded_HLT_Photon22_R9Id90_HE10_IsoM_ = false;
    loaded_HLT_Photon25_ = false;
    loaded_HLT_Photon250_NoHE_ = false;
    loaded_HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60_ = false;
    loaded_HLT_Photon30_ = false;
    loaded_HLT_Photon300_NoHE_ = false;
    loaded_HLT_Photon30EB_TightID_TightIso_ = false;
    loaded_HLT_Photon30_HoverELoose_ = false;
    loaded_HLT_Photon30_R9Id90_HE10_IsoM_ = false;
    loaded_HLT_Photon33_ = false;
    loaded_HLT_Photon35_TwoProngs35_ = false;
    loaded_HLT_Photon36_ = false;
    loaded_HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15_ = false;
    loaded_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = false;
    loaded_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF_ = false;
    loaded_HLT_Photon36_R9Id90_HE10_IsoM_ = false;
    loaded_HLT_Photon40_HoverELoose_ = false;
    loaded_HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15_ = false;
    loaded_HLT_Photon50_ = false;
    loaded_HLT_Photon500_ = false;
    loaded_HLT_Photon50_HoverELoose_ = false;
    loaded_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = false;
    loaded_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF_ = false;
    loaded_HLT_Photon50_R9Id90_HE10_IsoM_ = false;
    loaded_HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_ = false;
    loaded_HLT_Photon600_ = false;
    loaded_HLT_Photon60_HoverELoose_ = false;
    loaded_HLT_Photon60_R9Id90_CaloIdL_IsoL_ = false;
    loaded_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_ = false;
    loaded_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_ = false;
    loaded_HLT_Photon75_ = false;
    loaded_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = false;
    loaded_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF_ = false;
    loaded_HLT_Photon75_R9Id90_HE10_IsoM_ = false;
    loaded_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_ = false;
    loaded_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_ = false;
    loaded_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_ = false;
    loaded_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_ = false;
    loaded_HLT_Photon90_ = false;
    loaded_HLT_Photon90_CaloIdL_HT300_ = false;
    loaded_HLT_Photon90_CaloIdL_PFHT500_ = false;
    loaded_HLT_Photon90_CaloIdL_PFHT600_ = false;
    loaded_HLT_Photon90_CaloIdL_PFHT700_ = false;
    loaded_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = false;
    loaded_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF_ = false;
    loaded_HLT_Photon90_R9Id90_HE10_IsoM_ = false;
    loaded_HLT_Physics_ = false;
    loaded_HLT_Physics_part0_ = false;
    loaded_HLT_Physics_part1_ = false;
    loaded_HLT_Physics_part2_ = false;
    loaded_HLT_Physics_part3_ = false;
    loaded_HLT_Physics_part4_ = false;
    loaded_HLT_Physics_part5_ = false;
    loaded_HLT_Physics_part6_ = false;
    loaded_HLT_Physics_part7_ = false;
    loaded_HLT_PixelTracks_Multiplicity110ForEndOfFill_ = false;
    loaded_HLT_PixelTracks_Multiplicity135ForEndOfFill_ = false;
    loaded_HLT_PixelTracks_Multiplicity160ForEndOfFill_ = false;
    loaded_HLT_PixelTracks_Multiplicity60ForEndOfFill_ = false;
    loaded_HLT_PixelTracks_Multiplicity85ForEndOfFill_ = false;
    loaded_HLT_QuadJet45_DoubleBTagCSV_p087_ = false;
    loaded_HLT_QuadJet45_TripleBTagCSV_p087_ = false;
    loaded_HLT_QuadMuon0_Dimuon0_Jpsi_ = false;
    loaded_HLT_QuadMuon0_Dimuon0_Upsilon_ = false;
    loaded_HLT_QuadPFJet103_88_75_15_ = false;
    loaded_HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2_ = false;
    loaded_HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1_ = false;
    loaded_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ = false;
    loaded_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_ = false;
    loaded_HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_ = false;
    loaded_HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_ = false;
    loaded_HLT_QuadPFJet105_88_76_15_ = false;
    loaded_HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2_ = false;
    loaded_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ = false;
    loaded_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_ = false;
    loaded_HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_ = false;
    loaded_HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_ = false;
    loaded_HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1_ = false;
    loaded_HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ = false;
    loaded_HLT_QuadPFJet111_90_80_15_ = false;
    loaded_HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2_ = false;
    loaded_HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1_ = false;
    loaded_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ = false;
    loaded_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_ = false;
    loaded_HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_ = false;
    loaded_HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_ = false;
    loaded_HLT_QuadPFJet70_50_40_30_ = false;
    loaded_HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_ = false;
    loaded_HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_ = false;
    loaded_HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_ = false;
    loaded_HLT_QuadPFJet98_83_71_15_ = false;
    loaded_HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2_ = false;
    loaded_HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1_ = false;
    loaded_HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ = false;
    loaded_HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_ = false;
    loaded_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460_ = false;
    loaded_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500_ = false;
    loaded_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200_ = false;
    loaded_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240_ = false;
    loaded_HLT_QuadPFJet_VBF_ = false;
    loaded_HLT_Random_ = false;
    loaded_HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200_ = false;
    loaded_HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ = false;
    loaded_HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ = false;
    loaded_HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ = false;
    loaded_HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ = false;
    loaded_HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ = false;
    loaded_HLT_Rsq0p25_ = false;
    loaded_HLT_Rsq0p25_Calo_ = false;
    loaded_HLT_Rsq0p30_ = false;
    loaded_HLT_Rsq0p35_ = false;
    loaded_HLT_Rsq0p40_ = false;
    loaded_HLT_RsqMR240_Rsq0p09_MR200_ = false;
    loaded_HLT_RsqMR240_Rsq0p09_MR200_4jet_ = false;
    loaded_HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo_ = false;
    loaded_HLT_RsqMR240_Rsq0p09_MR200_Calo_ = false;
    loaded_HLT_RsqMR270_Rsq0p09_MR200_ = false;
    loaded_HLT_RsqMR270_Rsq0p09_MR200_4jet_ = false;
    loaded_HLT_RsqMR300_Rsq0p09_MR200_ = false;
    loaded_HLT_RsqMR300_Rsq0p09_MR200_4jet_ = false;
    loaded_HLT_RsqMR320_Rsq0p09_MR200_ = false;
    loaded_HLT_RsqMR320_Rsq0p09_MR200_4jet_ = false;
    loaded_HLT_SingleCentralPFJet170_CFMax0p1_ = false;
    loaded_HLT_SingleJet30_Mu12_SinglePFJet40_ = false;
    loaded_HLT_SinglePhoton10_Eta3p1ForPPRef_ = false;
    loaded_HLT_SinglePhoton20_Eta3p1ForPPRef_ = false;
    loaded_HLT_SinglePhoton30_Eta3p1ForPPRef_ = false;
    loaded_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_ = false;
    loaded_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1_ = false;
    loaded_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_ = false;
    loaded_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1_ = false;
    loaded_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_ = false;
    loaded_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_ = false;
    loaded_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_ = false;
    loaded_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_ = false;
    loaded_HLT_TkMu100_ = false;
    loaded_HLT_TkMu17_ = false;
    loaded_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_ = false;
    loaded_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_ = false;
    loaded_HLT_TkMu20_ = false;
    loaded_HLT_TkMu24_eta2p1_ = false;
    loaded_HLT_TkMu27_ = false;
    loaded_HLT_TkMu50_ = false;
    loaded_HLT_Trimuon2_Upsilon5_Muon_ = false;
    loaded_HLT_Trimuon5_3p5_2_Upsilon_Muon_ = false;
    loaded_HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_ = false;
    loaded_HLT_TripleJet110_35_35_Mjj650_PFMET110_ = false;
    loaded_HLT_TripleJet110_35_35_Mjj650_PFMET120_ = false;
    loaded_HLT_TripleJet110_35_35_Mjj650_PFMET130_ = false;
    loaded_HLT_TripleMu_10_5_5_DZ_ = false;
    loaded_HLT_TripleMu_12_10_5_ = false;
    loaded_HLT_TripleMu_5_3_3_ = false;
    loaded_HLT_TripleMu_5_3_3_DZ_Mass3p8_ = false;
    loaded_HLT_TripleMu_5_3_3_Mass3p8_DCA_ = false;
    loaded_HLT_TripleMu_5_3_3_Mass3p8_DZ_ = false;
    loaded_HLT_TripleMu_5_3_3_Mass3p8to60_DCA_ = false;
    loaded_HLT_TripleMu_5_3_3_Mass3p8to60_DZ_ = false;
    loaded_HLT_TriplePhoton_20_20_20_CaloIdLV2_ = false;
    loaded_HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_ = false;
    loaded_HLT_TriplePhoton_30_30_10_CaloIdLV2_ = false;
    loaded_HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_ = false;
    loaded_HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_ = false;
    loaded_HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_ = false;
    loaded_HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx_ = false;
    loaded_HLT_TrkMu16NoFiltersNoVtx_ = false;
    loaded_HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_ = false;
    loaded_HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_ = false;
    loaded_HLT_TrkMu6NoFiltersNoVtx_ = false;
    loaded_HLT_UncorrectedJetE30_NoBPTX_ = false;
    loaded_HLT_UncorrectedJetE30_NoBPTX3BX_ = false;
    loaded_HLT_UncorrectedJetE60_NoBPTX3BX_ = false;
    loaded_HLT_UncorrectedJetE70_NoBPTX3BX_ = false;
    loaded_HLT_VBF_DisplacedJet40_DisplacedTrack_ = false;
    loaded_HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5_ = false;
    loaded_HLT_VBF_DisplacedJet40_Hadronic_ = false;
    loaded_HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack_ = false;
    loaded_HLT_VBF_DisplacedJet40_TightID_DisplacedTrack_ = false;
    loaded_HLT_VBF_DisplacedJet40_TightID_Hadronic_ = false;
    loaded_HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack_ = false;
    loaded_HLT_VBF_DisplacedJet40_VTightID_Hadronic_ = false;
    loaded_HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack_ = false;
    loaded_HLT_VBF_DisplacedJet40_VVTightID_Hadronic_ = false;
    loaded_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_ = false;
    loaded_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_ = false;
    loaded_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_ = false;
    loaded_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_ = false;
    loaded_HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_ = false;
    loaded_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_ = false;
    loaded_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg_ = false;
    loaded_HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_ = false;
    loaded_HLT_VLooseIsoPFTau120_Trk50_eta2p1_ = false;
    loaded_HLT_VLooseIsoPFTau140_Trk50_eta2p1_ = false;
    loaded_HLT_ZeroBias_ = false;
    loaded_HLT_ZeroBias_Alignment_ = false;
    loaded_HLT_ZeroBias_Beamspot_ = false;
    loaded_HLT_ZeroBias_FirstBXAfterTrain_ = false;
    loaded_HLT_ZeroBias_FirstCollisionAfterAbortGap_ = false;
    loaded_HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS_ = false;
    loaded_HLT_ZeroBias_FirstCollisionAfterAbortGap_copy_ = false;
    loaded_HLT_ZeroBias_FirstCollisionInTrain_ = false;
    loaded_HLT_ZeroBias_IsolatedBunches_ = false;
    loaded_HLT_ZeroBias_LastCollisionInTrain_ = false;
    loaded_HLT_ZeroBias_part0_ = false;
    loaded_HLT_ZeroBias_part1_ = false;
    loaded_HLT_ZeroBias_part2_ = false;
    loaded_HLT_ZeroBias_part3_ = false;
    loaded_HLT_ZeroBias_part4_ = false;
    loaded_HLT_ZeroBias_part5_ = false;
    loaded_HLT_ZeroBias_part6_ = false;
    loaded_HLT_ZeroBias_part7_ = false;
    loaded_HLT_ZeroBias_part8_ = false;
    loaded_HLT_ZeroBias_part9_ = false;
    loaded_HLTriggerFinalPath_ = false;
    loaded_HLTriggerFirstPath_ = false;
    loaded_HTXS_Higgs_pt_ = false;
    loaded_HTXS_Higgs_y_ = false;
    loaded_HTXS_njets25_ = false;
    loaded_HTXS_njets30_ = false;
    loaded_HTXS_stage1_1_cat_pTjet25GeV_ = false;
    loaded_HTXS_stage1_1_cat_pTjet30GeV_ = false;
    loaded_HTXS_stage1_1_fine_cat_pTjet25GeV_ = false;
    loaded_HTXS_stage1_1_fine_cat_pTjet30GeV_ = false;
    loaded_HTXS_stage1_2_cat_pTjet25GeV_ = false;
    loaded_HTXS_stage1_2_cat_pTjet30GeV_ = false;
    loaded_HTXS_stage1_2_fine_cat_pTjet25GeV_ = false;
    loaded_HTXS_stage1_2_fine_cat_pTjet30GeV_ = false;
    loaded_HTXS_stage_0_ = false;
    loaded_HTXS_stage_1_pTjet25_ = false;
    loaded_HTXS_stage_1_pTjet30_ = false;
    loaded_IsoTrack_charge_ = false;
    loaded_IsoTrack_dxy_ = false;
    loaded_IsoTrack_dz_ = false;
    loaded_IsoTrack_eta_ = false;
    loaded_IsoTrack_fromPV_ = false;
    loaded_IsoTrack_isFromLostTrack_ = false;
    loaded_IsoTrack_isHighPurityTrack_ = false;
    loaded_IsoTrack_isPFcand_ = false;
    loaded_IsoTrack_miniPFRelIso_all_ = false;
    loaded_IsoTrack_miniPFRelIso_chg_ = false;
    loaded_IsoTrack_pdgId_ = false;
    loaded_IsoTrack_pfRelIso03_all_ = false;
    loaded_IsoTrack_pfRelIso03_chg_ = false;
    loaded_IsoTrack_phi_ = false;
    loaded_IsoTrack_pt_ = false;
    loaded_Jet_area_ = false;
    loaded_Jet_bReg_ = false;
    loaded_Jet_bRegCorr_ = false;
    loaded_Jet_bRegRes_ = false;
    loaded_Jet_btagCMVA_ = false;
    loaded_Jet_btagCSVV2_ = false;
    loaded_Jet_btagDeepB_ = false;
    loaded_Jet_btagDeepC_ = false;
    loaded_Jet_btagDeepCvB_ = false;
    loaded_Jet_btagDeepCvL_ = false;
    loaded_Jet_btagDeepFlavB_ = false;
    loaded_Jet_btagDeepFlavC_ = false;
    loaded_Jet_btagDeepFlavCvB_ = false;
    loaded_Jet_btagDeepFlavCvL_ = false;
    loaded_Jet_btagDeepFlavQG_ = false;
    loaded_Jet_cRegCorr_ = false;
    loaded_Jet_cRegRes_ = false;
    loaded_Jet_chEmEF_ = false;
    loaded_Jet_chFPV0EF_ = false;
    loaded_Jet_chFPV1EF_ = false;
    loaded_Jet_chFPV2EF_ = false;
    loaded_Jet_chFPV3EF_ = false;
    loaded_Jet_chHEF_ = false;
    loaded_Jet_cleanmask_ = false;
    loaded_Jet_corr_JEC_ = false;
    loaded_Jet_corr_JER_ = false;
    loaded_Jet_electronIdx1_ = false;
    loaded_Jet_electronIdx2_ = false;
    loaded_Jet_eta_ = false;
    loaded_Jet_genJetIdx_ = false;
    loaded_Jet_hadronFlavour_ = false;
    loaded_Jet_hfadjacentEtaStripsSize_ = false;
    loaded_Jet_hfcentralEtaStripSize_ = false;
    loaded_Jet_hfsigmaEtaEta_ = false;
    loaded_Jet_hfsigmaPhiPhi_ = false;
    loaded_Jet_jetId_ = false;
    loaded_Jet_mass_ = false;
    loaded_Jet_mass_jerDown_ = false;
    loaded_Jet_mass_jerUp_ = false;
    loaded_Jet_mass_jesHEMIssueDown_ = false;
    loaded_Jet_mass_jesHEMIssueUp_ = false;
    loaded_Jet_mass_jesTotalDown_ = false;
    loaded_Jet_mass_jesTotalUp_ = false;
    loaded_Jet_mass_nom_ = false;
    loaded_Jet_mass_raw_ = false;
    loaded_Jet_muEF_ = false;
    loaded_Jet_muonIdx1_ = false;
    loaded_Jet_muonIdx2_ = false;
    loaded_Jet_muonSubtrFactor_ = false;
    loaded_Jet_nConstituents_ = false;
    loaded_Jet_nElectrons_ = false;
    loaded_Jet_nMuons_ = false;
    loaded_Jet_nSVs_ = false;
    loaded_Jet_neEmEF_ = false;
    loaded_Jet_neHEF_ = false;
    loaded_Jet_p4_ = false;
    loaded_Jet_partonFlavour_ = false;
    loaded_Jet_phi_ = false;
    loaded_Jet_pt_ = false;
    loaded_Jet_pt_jerDown_ = false;
    loaded_Jet_pt_jerUp_ = false;
    loaded_Jet_pt_jesHEMIssueDown_ = false;
    loaded_Jet_pt_jesHEMIssueUp_ = false;
    loaded_Jet_pt_jesTotalDown_ = false;
    loaded_Jet_pt_jesTotalUp_ = false;
    loaded_Jet_pt_nom_ = false;
    loaded_Jet_pt_raw_ = false;
    loaded_Jet_puId_ = false;
    loaded_Jet_puIdDisc_ = false;
    loaded_Jet_qgl_ = false;
    loaded_Jet_rawFactor_ = false;
    loaded_Jet_svIdx1_ = false;
    loaded_Jet_svIdx2_ = false;
    loaded_L1PreFiringWeight_Dn_ = false;
    loaded_L1PreFiringWeight_ECAL_Dn_ = false;
    loaded_L1PreFiringWeight_ECAL_Nom_ = false;
    loaded_L1PreFiringWeight_ECAL_Up_ = false;
    loaded_L1PreFiringWeight_Muon_Nom_ = false;
    loaded_L1PreFiringWeight_Muon_StatDn_ = false;
    loaded_L1PreFiringWeight_Muon_StatUp_ = false;
    loaded_L1PreFiringWeight_Muon_SystDn_ = false;
    loaded_L1PreFiringWeight_Muon_SystUp_ = false;
    loaded_L1PreFiringWeight_Nom_ = false;
    loaded_L1PreFiringWeight_Up_ = false;
    loaded_L1Reco_step_ = false;
    loaded_L1_AlwaysTrue_ = false;
    loaded_L1_BPTX_AND_NIM_ = false;
    loaded_L1_BPTX_AND_Ref1_VME_ = false;
    loaded_L1_BPTX_AND_Ref2_NIM_ = false;
    loaded_L1_BPTX_AND_Ref3_VME_ = false;
    loaded_L1_BPTX_AND_Ref4_VME_ = false;
    loaded_L1_BPTX_B1NotB2_NIM_ = false;
    loaded_L1_BPTX_B1NotB2_VME_ = false;
    loaded_L1_BPTX_B1_NIM_ = false;
    loaded_L1_BPTX_B2NotB1_NIM_ = false;
    loaded_L1_BPTX_B2NotB1_VME_ = false;
    loaded_L1_BPTX_B2_NIM_ = false;
    loaded_L1_BPTX_BeamGas_B1_VME_ = false;
    loaded_L1_BPTX_BeamGas_B2_VME_ = false;
    loaded_L1_BPTX_BeamGas_Ref1_VME_ = false;
    loaded_L1_BPTX_BeamGas_Ref2_VME_ = false;
    loaded_L1_BPTX_LUT1_AND_ = false;
    loaded_L1_BPTX_LUT1_B1_ = false;
    loaded_L1_BPTX_LUT1_B2_ = false;
    loaded_L1_BPTX_LUT1_OR_ = false;
    loaded_L1_BPTX_LUT2_AND_ = false;
    loaded_L1_BPTX_LUT2_B1NotB2_ = false;
    loaded_L1_BPTX_LUT2_B2NotB1_ = false;
    loaded_L1_BPTX_LUT2_NotOR_ = false;
    loaded_L1_BPTX_NotOR_NIM_ = false;
    loaded_L1_BPTX_NotOR_VME_ = false;
    loaded_L1_BPTX_OR_NIM_ = false;
    loaded_L1_BPTX_OR_Ref3_VME_ = false;
    loaded_L1_BPTX_OR_Ref4_VME_ = false;
    loaded_L1_BPTX_RefAND_VME_ = false;
    loaded_L1_BPTX_TRIG2_AND_ = false;
    loaded_L1_BPTX_TRIG2_B1NotB2_ = false;
    loaded_L1_BPTX_TRIG2_B2NotB1_ = false;
    loaded_L1_BPTX_TRIG2_NotOR_ = false;
    loaded_L1_BRIL_TRIG0_AND_ = false;
    loaded_L1_BRIL_TRIG0_FstBunchInTrain_ = false;
    loaded_L1_BRIL_TRIG0_OR_ = false;
    loaded_L1_BRIL_TRIG0_delayedAND_ = false;
    loaded_L1_BRIL_TRIG3_AND_ = false;
    loaded_L1_BRIL_TRIG3_delayedAND_ = false;
    loaded_L1_BRIL_TRIG3_ref_ = false;
    loaded_L1_BeamGasB1_ = false;
    loaded_L1_BeamGasB2_ = false;
    loaded_L1_BeamGasMinus_ = false;
    loaded_L1_BeamGasPlus_ = false;
    loaded_L1_BptxMinus_ = false;
    loaded_L1_BptxOR_ = false;
    loaded_L1_BptxPlus_ = false;
    loaded_L1_BptxXOR_ = false;
    loaded_L1_CDC_3_TOP120_DPHI1p570_3p142_ = false;
    loaded_L1_CDC_3_TOP120_DPHI2p094_3p142_ = false;
    loaded_L1_CDC_3_TOP120_DPHI2p618_3p142_ = false;
    loaded_L1_CDC_3_TOP_DPHI2p618_3p142_ = false;
    loaded_L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142_ = false;
    loaded_L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142_ = false;
    loaded_L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142_ = false;
    loaded_L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142_ = false;
    loaded_L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142_ = false;
    loaded_L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142_ = false;
    loaded_L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142_ = false;
    loaded_L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142_ = false;
    loaded_L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142_ = false;
    loaded_L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142_ = false;
    loaded_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_ = false;
    loaded_L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142_ = false;
    loaded_L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142_ = false;
    loaded_L1_CDCp1_3_TOP120_DPHI2p618_3p142_ = false;
    loaded_L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142_ = false;
    loaded_L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142_ = false;
    loaded_L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142_ = false;
    loaded_L1_CastorGap_BptxAND_ = false;
    loaded_L1_CastorHaloMuon_ = false;
    loaded_L1_CastorHaloMuon_BptxAND_ = false;
    loaded_L1_CastorHighJet_BptxAND_ = false;
    loaded_L1_CastorMediumJet_BptxAND_ = false;
    loaded_L1_DoubleEG10_er1p2_dR_Max0p6_ = false;
    loaded_L1_DoubleEG10p5_er1p2_dR_Max0p6_ = false;
    loaded_L1_DoubleEG11_er1p2_dR_Max0p6_ = false;
    loaded_L1_DoubleEG4_er1p2_dR_Max0p9_ = false;
    loaded_L1_DoubleEG4p5_er1p2_dR_Max0p9_ = false;
    loaded_L1_DoubleEG5_er1p2_dR_Max0p9_ = false;
    loaded_L1_DoubleEG5p5_er1p2_dR_Max0p8_ = false;
    loaded_L1_DoubleEG6_HTT240er_ = false;
    loaded_L1_DoubleEG6_HTT250er_ = false;
    loaded_L1_DoubleEG6_HTT255_ = false;
    loaded_L1_DoubleEG6_HTT255er_ = false;
    loaded_L1_DoubleEG6_HTT270er_ = false;
    loaded_L1_DoubleEG6_HTT300er_ = false;
    loaded_L1_DoubleEG6_er1p2_dR_Max0p8_ = false;
    loaded_L1_DoubleEG6p5_er1p2_dR_Max0p8_ = false;
    loaded_L1_DoubleEG7_er1p2_dR_Max0p8_ = false;
    loaded_L1_DoubleEG7p5_er1p2_dR_Max0p7_ = false;
    loaded_L1_DoubleEG8_er1p2_dR_Max0p7_ = false;
    loaded_L1_DoubleEG8er2p5_HTT260er_ = false;
    loaded_L1_DoubleEG8er2p5_HTT280er_ = false;
    loaded_L1_DoubleEG8er2p5_HTT300er_ = false;
    loaded_L1_DoubleEG8er2p5_HTT320er_ = false;
    loaded_L1_DoubleEG8er2p5_HTT340er_ = false;
    loaded_L1_DoubleEG8er2p6_HTT255er_ = false;
    loaded_L1_DoubleEG8er2p6_HTT270er_ = false;
    loaded_L1_DoubleEG8er2p6_HTT300er_ = false;
    loaded_L1_DoubleEG8p5_er1p2_dR_Max0p7_ = false;
    loaded_L1_DoubleEG9_er1p2_dR_Max0p7_ = false;
    loaded_L1_DoubleEG9p5_er1p2_dR_Max0p6_ = false;
    loaded_L1_DoubleEG_15_10_ = false;
    loaded_L1_DoubleEG_15_10_er2p5_ = false;
    loaded_L1_DoubleEG_18_17_ = false;
    loaded_L1_DoubleEG_20_10_er2p5_ = false;
    loaded_L1_DoubleEG_20_18_ = false;
    loaded_L1_DoubleEG_22_10_ = false;
    loaded_L1_DoubleEG_22_10_er2p5_ = false;
    loaded_L1_DoubleEG_22_12_ = false;
    loaded_L1_DoubleEG_22_15_ = false;
    loaded_L1_DoubleEG_23_10_ = false;
    loaded_L1_DoubleEG_24_17_ = false;
    loaded_L1_DoubleEG_25_12_ = false;
    loaded_L1_DoubleEG_25_12_er2p5_ = false;
    loaded_L1_DoubleEG_25_13_ = false;
    loaded_L1_DoubleEG_25_14_ = false;
    loaded_L1_DoubleEG_25_14_er2p5_ = false;
    loaded_L1_DoubleEG_27_14_er2p5_ = false;
    loaded_L1_DoubleEG_Iso23_10_ = false;
    loaded_L1_DoubleEG_Iso24_10_ = false;
    loaded_L1_DoubleEG_LooseIso16_LooseIso12_er1p5_ = false;
    loaded_L1_DoubleEG_LooseIso18_LooseIso12_er1p5_ = false;
    loaded_L1_DoubleEG_LooseIso20_10_er2p5_ = false;
    loaded_L1_DoubleEG_LooseIso20_LooseIso12_er1p5_ = false;
    loaded_L1_DoubleEG_LooseIso22_10_er2p5_ = false;
    loaded_L1_DoubleEG_LooseIso22_12_er2p5_ = false;
    loaded_L1_DoubleEG_LooseIso22_LooseIso12_er1p5_ = false;
    loaded_L1_DoubleEG_LooseIso23_10_ = false;
    loaded_L1_DoubleEG_LooseIso24_10_ = false;
    loaded_L1_DoubleEG_LooseIso25_12_er2p5_ = false;
    loaded_L1_DoubleEG_LooseIso25_LooseIso12_er1p5_ = false;
    loaded_L1_DoubleIsoTau26er_ = false;
    loaded_L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5_ = false;
    loaded_L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5_ = false;
    loaded_L1_DoubleIsoTau27er_ = false;
    loaded_L1_DoubleIsoTau28er_ = false;
    loaded_L1_DoubleIsoTau28er2p1_ = false;
    loaded_L1_DoubleIsoTau28er2p1_Mass_Max80_ = false;
    loaded_L1_DoubleIsoTau28er2p1_Mass_Max90_ = false;
    loaded_L1_DoubleIsoTau29er_ = false;
    loaded_L1_DoubleIsoTau30er_ = false;
    loaded_L1_DoubleIsoTau30er2p1_ = false;
    loaded_L1_DoubleIsoTau30er2p1_Mass_Max80_ = false;
    loaded_L1_DoubleIsoTau30er2p1_Mass_Max90_ = false;
    loaded_L1_DoubleIsoTau32er_ = false;
    loaded_L1_DoubleIsoTau32er2p1_ = false;
    loaded_L1_DoubleIsoTau33er_ = false;
    loaded_L1_DoubleIsoTau33er2p1_ = false;
    loaded_L1_DoubleIsoTau34er_ = false;
    loaded_L1_DoubleIsoTau34er2p1_ = false;
    loaded_L1_DoubleIsoTau35er_ = false;
    loaded_L1_DoubleIsoTau35er2p1_ = false;
    loaded_L1_DoubleIsoTau36er_ = false;
    loaded_L1_DoubleIsoTau36er2p1_ = false;
    loaded_L1_DoubleIsoTau38er2p1_ = false;
    loaded_L1_DoubleJet100er2p3_dEta_Max1p6_ = false;
    loaded_L1_DoubleJet100er2p5_ = false;
    loaded_L1_DoubleJet100er2p7_ = false;
    loaded_L1_DoubleJet100er3p0_ = false;
    loaded_L1_DoubleJet112er2p3_dEta_Max1p6_ = false;
    loaded_L1_DoubleJet112er2p7_ = false;
    loaded_L1_DoubleJet112er3p0_ = false;
    loaded_L1_DoubleJet120er2p5_ = false;
    loaded_L1_DoubleJet120er2p7_ = false;
    loaded_L1_DoubleJet120er3p0_ = false;
    loaded_L1_DoubleJet12_ForwardBackward_ = false;
    loaded_L1_DoubleJet150er2p5_ = false;
    loaded_L1_DoubleJet150er2p7_ = false;
    loaded_L1_DoubleJet150er3p0_ = false;
    loaded_L1_DoubleJet16_ForwardBackward_ = false;
    loaded_L1_DoubleJet30_Mass_Min300_dEta_Max1p5_ = false;
    loaded_L1_DoubleJet30_Mass_Min320_dEta_Max1p5_ = false;
    loaded_L1_DoubleJet30_Mass_Min340_dEta_Max1p5_ = false;
    loaded_L1_DoubleJet30_Mass_Min360_dEta_Max1p5_ = false;
    loaded_L1_DoubleJet30_Mass_Min380_dEta_Max1p5_ = false;
    loaded_L1_DoubleJet30_Mass_Min400_Mu10_ = false;
    loaded_L1_DoubleJet30_Mass_Min400_Mu6_ = false;
    loaded_L1_DoubleJet30_Mass_Min400_dEta_Max1p5_ = false;
    loaded_L1_DoubleJet30_Mj30j30_400_Mu10_ = false;
    loaded_L1_DoubleJet30_Mj30j30_400_Mu6_ = false;
    loaded_L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5_ = false;
    loaded_L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5_ = false;
    loaded_L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5_ = false;
    loaded_L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5_ = false;
    loaded_L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5_ = false;
    loaded_L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5_ = false;
    loaded_L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp_ = false;
    loaded_L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5_ = false;
    loaded_L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450_ = false;
    loaded_L1_DoubleJet40er2p5_ = false;
    loaded_L1_DoubleJet40er2p7_ = false;
    loaded_L1_DoubleJet40er3p0_ = false;
    loaded_L1_DoubleJet50er2p7_ = false;
    loaded_L1_DoubleJet50er3p0_ = false;
    loaded_L1_DoubleJet60er2p7_ = false;
    loaded_L1_DoubleJet60er2p7_ETM100_ = false;
    loaded_L1_DoubleJet60er2p7_ETM60_ = false;
    loaded_L1_DoubleJet60er2p7_ETM70_ = false;
    loaded_L1_DoubleJet60er2p7_ETM80_ = false;
    loaded_L1_DoubleJet60er2p7_ETM90_ = false;
    loaded_L1_DoubleJet60er3p0_ = false;
    loaded_L1_DoubleJet60er3p0_ETM100_ = false;
    loaded_L1_DoubleJet60er3p0_ETM60_ = false;
    loaded_L1_DoubleJet60er3p0_ETM70_ = false;
    loaded_L1_DoubleJet60er3p0_ETM80_ = false;
    loaded_L1_DoubleJet60er3p0_ETM90_ = false;
    loaded_L1_DoubleJet80er2p7_ = false;
    loaded_L1_DoubleJet80er3p0_ = false;
    loaded_L1_DoubleJet8_ForwardBackward_ = false;
    loaded_L1_DoubleJetC100_ = false;
    loaded_L1_DoubleJetC112_ = false;
    loaded_L1_DoubleJetC120_ = false;
    loaded_L1_DoubleJetC40_ = false;
    loaded_L1_DoubleJetC50_ = false;
    loaded_L1_DoubleJetC60_ = false;
    loaded_L1_DoubleJetC60_ETM60_ = false;
    loaded_L1_DoubleJetC80_ = false;
    loaded_L1_DoubleJet_100_30_DoubleJet30_Mass_Min620_ = false;
    loaded_L1_DoubleJet_100_30_Mj30j30_620_ = false;
    loaded_L1_DoubleJet_100_35_DoubleJet35_Mass_Min620_ = false;
    loaded_L1_DoubleJet_110_35_DoubleJet35_Mass_Min620_ = false;
    loaded_L1_DoubleJet_110_40_DoubleJet40_Mass_Min620_ = false;
    loaded_L1_DoubleJet_115_35_DoubleJet35_Mass_Min620_ = false;
    loaded_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_ = false;
    loaded_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28_ = false;
    loaded_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_ = false;
    loaded_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28_ = false;
    loaded_L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ_ = false;
    loaded_L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp_ = false;
    loaded_L1_DoubleJet_80_30_Mass_Min420_Mu8_ = false;
    loaded_L1_DoubleJet_90_30_DoubleJet30_Mass_Min620_ = false;
    loaded_L1_DoubleJet_90_30_Mj30j30_620_ = false;
    loaded_L1_DoubleLLPJet40_ = false;
    loaded_L1_DoubleLooseIsoEG22er2p1_ = false;
    loaded_L1_DoubleLooseIsoEG24er2p1_ = false;
    loaded_L1_DoubleMu0_ = false;
    loaded_L1_DoubleMu0_ETM40_ = false;
    loaded_L1_DoubleMu0_ETM55_ = false;
    loaded_L1_DoubleMu0_ETM60_ = false;
    loaded_L1_DoubleMu0_ETM65_ = false;
    loaded_L1_DoubleMu0_ETM70_ = false;
    loaded_L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_DoubleMu0_Mass_Min1_ = false;
    loaded_L1_DoubleMu0_OQ_ = false;
    loaded_L1_DoubleMu0_SQ_ = false;
    loaded_L1_DoubleMu0_SQ_OS_ = false;
    loaded_L1_DoubleMu0_Upt15_Upt7_ = false;
    loaded_L1_DoubleMu0_Upt5_Upt5_ = false;
    loaded_L1_DoubleMu0_Upt6_IP_Min1_Upt4_ = false;
    loaded_L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8_ = false;
    loaded_L1_DoubleMu0er1p25_dEta_Max1p8_OS_ = false;
    loaded_L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6_ = false;
    loaded_L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4_ = false;
    loaded_L1_DoubleMu0er1p4_dEta_Max1p8_OS_ = false;
    loaded_L1_DoubleMu0er1p5_SQ_ = false;
    loaded_L1_DoubleMu0er1p5_SQ_OS_ = false;
    loaded_L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4_ = false;
    loaded_L1_DoubleMu0er1p5_SQ_dR_Max1p4_ = false;
    loaded_L1_DoubleMu0er1p6_dEta_Max1p8_ = false;
    loaded_L1_DoubleMu0er1p6_dEta_Max1p8_OS_ = false;
    loaded_L1_DoubleMu0er2_SQ_dR_Max1p4_ = false;
    loaded_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5_ = false;
    loaded_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6_ = false;
    loaded_L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4_ = false;
    loaded_L1_DoubleMu0er2p0_SQ_dEta_Max1p5_ = false;
    loaded_L1_DoubleMu0er2p0_SQ_dEta_Max1p6_ = false;
    loaded_L1_DoubleMu0er2p0_SQ_dR_Max1p4_ = false;
    loaded_L1_DoubleMu10_SQ_ = false;
    loaded_L1_DoubleMu18er2p1_ = false;
    loaded_L1_DoubleMu18er2p1_SQ_ = false;
    loaded_L1_DoubleMu22er2p1_ = false;
    loaded_L1_DoubleMu3_OS_DoubleEG7p5Upsilon_ = false;
    loaded_L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20_ = false;
    loaded_L1_DoubleMu3_SQ_ETMHF30_HTT60er_ = false;
    loaded_L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5_ = false;
    loaded_L1_DoubleMu3_SQ_ETMHF40_HTT60er_ = false;
    loaded_L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5_ = false;
    loaded_L1_DoubleMu3_SQ_ETMHF50_HTT60er_ = false;
    loaded_L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_ = false;
    loaded_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5_ = false;
    loaded_L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5_ = false;
    loaded_L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_DoubleMu3_SQ_HTT100er_ = false;
    loaded_L1_DoubleMu3_SQ_HTT200er_ = false;
    loaded_L1_DoubleMu3_SQ_HTT220er_ = false;
    loaded_L1_DoubleMu3_SQ_HTT240er_ = false;
    loaded_L1_DoubleMu3_SQ_HTT260er_ = false;
    loaded_L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8_ = false;
    loaded_L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4_ = false;
    loaded_L1_DoubleMu4_OS_EG12_ = false;
    loaded_L1_DoubleMu4_SQ_EG9er2p5_ = false;
    loaded_L1_DoubleMu4_SQ_OS_ = false;
    loaded_L1_DoubleMu4_SQ_OS_dR_Max1p2_ = false;
    loaded_L1_DoubleMu4p5_SQ_ = false;
    loaded_L1_DoubleMu4p5_SQ_OS_ = false;
    loaded_L1_DoubleMu4p5_SQ_OS_dR_Max1p2_ = false;
    loaded_L1_DoubleMu4p5er2p0_SQ_OS_ = false;
    loaded_L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18_ = false;
    loaded_L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18_ = false;
    loaded_L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7_ = false;
    loaded_L1_DoubleMu5Upsilon_OS_DoubleEG3_ = false;
    loaded_L1_DoubleMu5_OS_EG12_ = false;
    loaded_L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20_ = false;
    loaded_L1_DoubleMu5_SQ_EG9er2p5_ = false;
    loaded_L1_DoubleMu5_SQ_OS_ = false;
    loaded_L1_DoubleMu5_SQ_OS_Mass7to18_ = false;
    loaded_L1_DoubleMu6_SQ_OS_ = false;
    loaded_L1_DoubleMu7_EG14_ = false;
    loaded_L1_DoubleMu7_EG7_ = false;
    loaded_L1_DoubleMu7_SQ_EG7_ = false;
    loaded_L1_DoubleMu8_SQ_ = false;
    loaded_L1_DoubleMu9_SQ_ = false;
    loaded_L1_DoubleMuOpen_ = false;
    loaded_L1_DoubleMu_10_0_dEta_Max1p8_ = false;
    loaded_L1_DoubleMu_10_3p5_ = false;
    loaded_L1_DoubleMu_10_Open_ = false;
    loaded_L1_DoubleMu_11_4_ = false;
    loaded_L1_DoubleMu_12_5_ = false;
    loaded_L1_DoubleMu_12_8_ = false;
    loaded_L1_DoubleMu_13_6_ = false;
    loaded_L1_DoubleMu_15_5_ = false;
    loaded_L1_DoubleMu_15_5_SQ_ = false;
    loaded_L1_DoubleMu_15_7_ = false;
    loaded_L1_DoubleMu_15_7_Mass_Min1_ = false;
    loaded_L1_DoubleMu_15_7_SQ_ = false;
    loaded_L1_DoubleMu_15_7_SQ_Mass_Min4_ = false;
    loaded_L1_DoubleMu_20_2_SQ_Mass_Max20_ = false;
    loaded_L1_DoubleTau50er_ = false;
    loaded_L1_DoubleTau50er2p1_ = false;
    loaded_L1_DoubleTau70er_ = false;
    loaded_L1_DoubleTau70er2p1_ = false;
    loaded_L1_EG25er2p1_HTT125er_ = false;
    loaded_L1_EG25er_HTT125_ = false;
    loaded_L1_EG27er2p1_HTT200er_ = false;
    loaded_L1_EG27er_HTT200_ = false;
    loaded_L1_EG40er2p1_Tau20er2p1_dR_Min0p3_ = false;
    loaded_L1_ETM100_ = false;
    loaded_L1_ETM100_Jet60_dPhi_Min0p4_ = false;
    loaded_L1_ETM105_ = false;
    loaded_L1_ETM110_ = false;
    loaded_L1_ETM110_Jet60_dPhi_Min0p4_ = false;
    loaded_L1_ETM115_ = false;
    loaded_L1_ETM120_ = false;
    loaded_L1_ETM150_ = false;
    loaded_L1_ETM30_ = false;
    loaded_L1_ETM40_ = false;
    loaded_L1_ETM50_ = false;
    loaded_L1_ETM60_ = false;
    loaded_L1_ETM60_Jet60_dPhi_Min0p4_ = false;
    loaded_L1_ETM70_ = false;
    loaded_L1_ETM70_Jet60_dPhi_Min0p4_ = false;
    loaded_L1_ETM75_ = false;
    loaded_L1_ETM75_Jet60_dPhi_Min0p4_ = false;
    loaded_L1_ETM80_ = false;
    loaded_L1_ETM80_Jet60_dPhi_Min0p4_ = false;
    loaded_L1_ETM85_ = false;
    loaded_L1_ETM90_ = false;
    loaded_L1_ETM90_Jet60_dPhi_Min0p4_ = false;
    loaded_L1_ETM95_ = false;
    loaded_L1_ETMHF100_ = false;
    loaded_L1_ETMHF100_HTT60_ = false;
    loaded_L1_ETMHF100_HTT60er_ = false;
    loaded_L1_ETMHF100_Jet60_OR_DiJet30woTT28_ = false;
    loaded_L1_ETMHF100_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30_ = false;
    loaded_L1_ETMHF105_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_ETMHF110_ = false;
    loaded_L1_ETMHF110_HTT60_ = false;
    loaded_L1_ETMHF110_HTT60er_ = false;
    loaded_L1_ETMHF110_HTT60er_NotSecondBunchInTrain_ = false;
    loaded_L1_ETMHF110_Jet60_OR_DiJet30woTT28_ = false;
    loaded_L1_ETMHF110_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30_ = false;
    loaded_L1_ETMHF115_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_ETMHF120_ = false;
    loaded_L1_ETMHF120_HTT60_ = false;
    loaded_L1_ETMHF120_HTT60er_ = false;
    loaded_L1_ETMHF120_Jet60_OR_DiJet30woTT28_ = false;
    loaded_L1_ETMHF120_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_ETMHF120_NotSecondBunchInTrain_ = false;
    loaded_L1_ETMHF130_ = false;
    loaded_L1_ETMHF130_HTT60er_ = false;
    loaded_L1_ETMHF140_ = false;
    loaded_L1_ETMHF150_ = false;
    loaded_L1_ETMHF70_ = false;
    loaded_L1_ETMHF70_HTT60er_ = false;
    loaded_L1_ETMHF70_Jet60_OR_DiJet30woTT28_ = false;
    loaded_L1_ETMHF70_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30_ = false;
    loaded_L1_ETMHF75_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_ETMHF80_ = false;
    loaded_L1_ETMHF80_HTT60_ = false;
    loaded_L1_ETMHF80_HTT60er_ = false;
    loaded_L1_ETMHF80_Jet60_OR_DiJet30woTT28_ = false;
    loaded_L1_ETMHF80_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30_ = false;
    loaded_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1_ = false;
    loaded_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6_ = false;
    loaded_L1_ETMHF85_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_ETMHF90_ = false;
    loaded_L1_ETMHF90_HTT60_ = false;
    loaded_L1_ETMHF90_HTT60er_ = false;
    loaded_L1_ETMHF90_Jet60_OR_DiJet30woTT28_ = false;
    loaded_L1_ETMHF90_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30_ = false;
    loaded_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1_ = false;
    loaded_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6_ = false;
    loaded_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1_ = false;
    loaded_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6_ = false;
    loaded_L1_ETMHF95_Jet60_OR_DoubleJet30_ = false;
    loaded_L1_ETT100_BptxAND_ = false;
    loaded_L1_ETT110_BptxAND_ = false;
    loaded_L1_ETT1200_ = false;
    loaded_L1_ETT15_BptxAND_ = false;
    loaded_L1_ETT1600_ = false;
    loaded_L1_ETT2000_ = false;
    loaded_L1_ETT25_ = false;
    loaded_L1_ETT25_BptxAND_ = false;
    loaded_L1_ETT35_BptxAND_ = false;
    loaded_L1_ETT40_ = false;
    loaded_L1_ETT40_BptxAND_ = false;
    loaded_L1_ETT50_BptxAND_ = false;
    loaded_L1_ETT55_BptxAND_ = false;
    loaded_L1_ETT60_ = false;
    loaded_L1_ETT60_BptxAND_ = false;
    loaded_L1_ETT70_BptxAND_ = false;
    loaded_L1_ETT75_BptxAND_ = false;
    loaded_L1_ETT80_BptxAND_ = false;
    loaded_L1_ETT85_BptxAND_ = false;
    loaded_L1_ETT90_BptxAND_ = false;
    loaded_L1_ETT95_BptxAND_ = false;
    loaded_L1_FirstBunchAfterTrain_ = false;
    loaded_L1_FirstBunchBeforeTrain_ = false;
    loaded_L1_FirstBunchInTrain_ = false;
    loaded_L1_FirstCollisionInOrbit_ = false;
    loaded_L1_FirstCollisionInTrain_ = false;
    loaded_L1_HCAL_LaserMon_Trig_ = false;
    loaded_L1_HCAL_LaserMon_Veto_ = false;
    loaded_L1_HTM100_ = false;
    loaded_L1_HTM120_ = false;
    loaded_L1_HTM130_ = false;
    loaded_L1_HTM140_ = false;
    loaded_L1_HTM150_ = false;
    loaded_L1_HTM50_ = false;
    loaded_L1_HTM60_HTT260_ = false;
    loaded_L1_HTM70_ = false;
    loaded_L1_HTM80_ = false;
    loaded_L1_HTM80_HTT220_ = false;
    loaded_L1_HTT120_ = false;
    loaded_L1_HTT120_SingleLLPJet40_ = false;
    loaded_L1_HTT120er_ = false;
    loaded_L1_HTT160_ = false;
    loaded_L1_HTT160_SingleLLPJet50_ = false;
    loaded_L1_HTT160er_ = false;
    loaded_L1_HTT200_ = false;
    loaded_L1_HTT200_SingleLLPJet60_ = false;
    loaded_L1_HTT200er_ = false;
    loaded_L1_HTT220_ = false;
    loaded_L1_HTT220er_ = false;
    loaded_L1_HTT240_ = false;
    loaded_L1_HTT240_SingleLLPJet70_ = false;
    loaded_L1_HTT240er_ = false;
    loaded_L1_HTT250er_QuadJet_70_55_40_35_er2p5_ = false;
    loaded_L1_HTT255_ = false;
    loaded_L1_HTT255er_ = false;
    loaded_L1_HTT270_ = false;
    loaded_L1_HTT270er_ = false;
    loaded_L1_HTT280_ = false;
    loaded_L1_HTT280er_ = false;
    loaded_L1_HTT280er_QuadJet_70_55_40_35_er2p4_ = false;
    loaded_L1_HTT280er_QuadJet_70_55_40_35_er2p5_ = false;
    loaded_L1_HTT300_ = false;
    loaded_L1_HTT300er_ = false;
    loaded_L1_HTT300er_QuadJet_70_55_40_35_er2p5_ = false;
    loaded_L1_HTT320_ = false;
    loaded_L1_HTT320er_ = false;
    loaded_L1_HTT320er_QuadJet_70_55_40_40_er2p4_ = false;
    loaded_L1_HTT320er_QuadJet_70_55_40_40_er2p5_ = false;
    loaded_L1_HTT320er_QuadJet_70_55_45_45_er2p5_ = false;
    loaded_L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3_ = false;
    loaded_L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3_ = false;
    loaded_L1_HTT340er_ = false;
    loaded_L1_HTT340er_QuadJet_70_55_40_40_er2p5_ = false;
    loaded_L1_HTT340er_QuadJet_70_55_45_45_er2p5_ = false;
    loaded_L1_HTT360er_ = false;
    loaded_L1_HTT380er_ = false;
    loaded_L1_HTT400er_ = false;
    loaded_L1_HTT450er_ = false;
    loaded_L1_HTT500er_ = false;
    loaded_L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2_ = false;
    loaded_L1_IsoEG18er_IsoTau24er_dEta_Min0p2_ = false;
    loaded_L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2_ = false;
    loaded_L1_IsoEG20er_IsoTau25er_dEta_Min0p2_ = false;
    loaded_L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2_ = false;
    loaded_L1_IsoEG22er_IsoTau26er_dEta_Min0p2_ = false;
    loaded_L1_IsoEG22er_Tau20er_dEta_Min0p2_ = false;
    loaded_L1_IsoEG24er2p1_HTT100er_ = false;
    loaded_L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3_ = false;
    loaded_L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_ = false;
    loaded_L1_IsoEG26er2p1_HTT100er_ = false;
    loaded_L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3_ = false;
    loaded_L1_IsoEG28er2p1_HTT100er_ = false;
    loaded_L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3_ = false;
    loaded_L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3_ = false;
    loaded_L1_IsoEG32er2p5_Mt40_ = false;
    loaded_L1_IsoEG32er2p5_Mt44_ = false;
    loaded_L1_IsoEG32er2p5_Mt48_ = false;
    loaded_L1_IsoEG33_Mt40_ = false;
    loaded_L1_IsoEG33_Mt44_ = false;
    loaded_L1_IsoEG33_Mt48_ = false;
    loaded_L1_IsoTau40er2p1_ETMHF100_ = false;
    loaded_L1_IsoTau40er2p1_ETMHF110_ = false;
    loaded_L1_IsoTau40er2p1_ETMHF120_ = false;
    loaded_L1_IsoTau40er2p1_ETMHF80_ = false;
    loaded_L1_IsoTau40er2p1_ETMHF90_ = false;
    loaded_L1_IsoTau40er_ETM100_ = false;
    loaded_L1_IsoTau40er_ETM105_ = false;
    loaded_L1_IsoTau40er_ETM110_ = false;
    loaded_L1_IsoTau40er_ETM115_ = false;
    loaded_L1_IsoTau40er_ETM120_ = false;
    loaded_L1_IsoTau40er_ETM80_ = false;
    loaded_L1_IsoTau40er_ETM85_ = false;
    loaded_L1_IsoTau40er_ETM90_ = false;
    loaded_L1_IsoTau40er_ETM95_ = false;
    loaded_L1_IsoTau40er_ETMHF100_ = false;
    loaded_L1_IsoTau40er_ETMHF110_ = false;
    loaded_L1_IsoTau40er_ETMHF120_ = false;
    loaded_L1_IsoTau40er_ETMHF80_ = false;
    loaded_L1_IsoTau40er_ETMHF90_ = false;
    loaded_L1_IsoTau52er2p1_QuadJet36er2p5_ = false;
    loaded_L1_IsolatedBunch_ = false;
    loaded_L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_ = false;
    loaded_L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_ = false;
    loaded_L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_ = false;
    loaded_L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_ = false;
    loaded_L1_LastBunchInTrain_ = false;
    loaded_L1_LastCollisionInTrain_ = false;
    loaded_L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3_ = false;
    loaded_L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3_ = false;
    loaded_L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3_ = false;
    loaded_L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3_ = false;
    loaded_L1_LooseIsoEG24er2p1_HTT100er_ = false;
    loaded_L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3_ = false;
    loaded_L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3_ = false;
    loaded_L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3_ = false;
    loaded_L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7_ = false;
    loaded_L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_ = false;
    loaded_L1_LooseIsoEG26er2p1_HTT100er_ = false;
    loaded_L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3_ = false;
    loaded_L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3_ = false;
    loaded_L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3_ = false;
    loaded_L1_LooseIsoEG28er2p1_HTT100er_ = false;
    loaded_L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3_ = false;
    loaded_L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3_ = false;
    loaded_L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3_ = false;
    loaded_L1_LooseIsoEG30er2p1_HTT100er_ = false;
    loaded_L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3_ = false;
    loaded_L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3_ = false;
    loaded_L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3_ = false;
    loaded_L1_MU20_EG15_ = false;
    loaded_L1_MinimumBiasHF0_ = false;
    loaded_L1_MinimumBiasHF0_AND_ = false;
    loaded_L1_MinimumBiasHF0_AND_BptxAND_ = false;
    loaded_L1_MinimumBiasHF0_OR_ = false;
    loaded_L1_MinimumBiasHF0_OR_BptxAND_ = false;
    loaded_L1_MinimumBiasHF1_AND_ = false;
    loaded_L1_MinimumBiasHF1_AND_BptxAND_ = false;
    loaded_L1_MinimumBiasHF1_OR_ = false;
    loaded_L1_MinimumBiasHF1_OR_BptxAND_ = false;
    loaded_L1_Mu0er_ETM40_ = false;
    loaded_L1_Mu0er_ETM55_ = false;
    loaded_L1_Mu10er2p1_ETM30_ = false;
    loaded_L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6_ = false;
    loaded_L1_Mu10er_ETM30_ = false;
    loaded_L1_Mu10er_ETM50_ = false;
    loaded_L1_Mu12_EG10_ = false;
    loaded_L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6_ = false;
    loaded_L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6_ = false;
    loaded_L1_Mu14er2p1_ETM30_ = false;
    loaded_L1_Mu14er_ETM30_ = false;
    loaded_L1_Mu15_HTT100er_ = false;
    loaded_L1_Mu16er2p1_Tau20er2p1_ = false;
    loaded_L1_Mu16er2p1_Tau24er2p1_ = false;
    loaded_L1_Mu16er_Tau20er_ = false;
    loaded_L1_Mu16er_Tau24er_ = false;
    loaded_L1_Mu18_HTT100er_ = false;
    loaded_L1_Mu18_Jet24er2p7_ = false;
    loaded_L1_Mu18_Jet24er3p0_ = false;
    loaded_L1_Mu18er2p1_IsoTau26er2p1_ = false;
    loaded_L1_Mu18er2p1_Tau20er2p1_ = false;
    loaded_L1_Mu18er2p1_Tau24er2p1_ = false;
    loaded_L1_Mu18er2p1_Tau26er2p1_ = false;
    loaded_L1_Mu18er2p1_Tau26er2p1_Jet55_ = false;
    loaded_L1_Mu18er2p1_Tau26er2p1_Jet70_ = false;
    loaded_L1_Mu18er_IsoTau26er_ = false;
    loaded_L1_Mu18er_Tau20er_ = false;
    loaded_L1_Mu18er_Tau24er_ = false;
    loaded_L1_Mu20_EG10_ = false;
    loaded_L1_Mu20_EG10er2p5_ = false;
    loaded_L1_Mu20_EG17_ = false;
    loaded_L1_Mu20_IsoEG6_ = false;
    loaded_L1_Mu20_LooseIsoEG6_ = false;
    loaded_L1_Mu20er2p1_IsoTau26er2p1_ = false;
    loaded_L1_Mu20er2p1_IsoTau27er2p1_ = false;
    loaded_L1_Mu20er_IsoTau26er_ = false;
    loaded_L1_Mu22er2p1_IsoTau28er2p1_ = false;
    loaded_L1_Mu22er2p1_IsoTau30er2p1_ = false;
    loaded_L1_Mu22er2p1_IsoTau32er2p1_ = false;
    loaded_L1_Mu22er2p1_IsoTau33er2p1_ = false;
    loaded_L1_Mu22er2p1_IsoTau34er2p1_ = false;
    loaded_L1_Mu22er2p1_IsoTau35er2p1_ = false;
    loaded_L1_Mu22er2p1_IsoTau36er2p1_ = false;
    loaded_L1_Mu22er2p1_IsoTau38er2p1_ = false;
    loaded_L1_Mu22er2p1_IsoTau40er2p1_ = false;
    loaded_L1_Mu22er2p1_Tau50er2p1_ = false;
    loaded_L1_Mu22er2p1_Tau70er2p1_ = false;
    loaded_L1_Mu22er_IsoTau26er_ = false;
    loaded_L1_Mu23_EG10_ = false;
    loaded_L1_Mu23_IsoEG10_ = false;
    loaded_L1_Mu23_LooseIsoEG10_ = false;
    loaded_L1_Mu25er_IsoTau26er_ = false;
    loaded_L1_Mu3_Jet120er2p5_dR_Max0p4_ = false;
    loaded_L1_Mu3_Jet120er2p5_dR_Max0p8_ = false;
    loaded_L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4_ = false;
    loaded_L1_Mu3_Jet16er2p5_dR_Max0p4_ = false;
    loaded_L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4_ = false;
    loaded_L1_Mu3_Jet30er2p5_ = false;
    loaded_L1_Mu3_Jet35er2p5_dR_Max0p4_ = false;
    loaded_L1_Mu3_Jet60er2p5_dR_Max0p4_ = false;
    loaded_L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4_ = false;
    loaded_L1_Mu3_Jet80er2p5_dR_Max0p4_ = false;
    loaded_L1_Mu3_JetC120_ = false;
    loaded_L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4_ = false;
    loaded_L1_Mu3_JetC16_ = false;
    loaded_L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4_ = false;
    loaded_L1_Mu3_JetC60_ = false;
    loaded_L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4_ = false;
    loaded_L1_Mu3er1p5_Jet100er2p5_ETMHF30_ = false;
    loaded_L1_Mu3er1p5_Jet100er2p5_ETMHF40_ = false;
    loaded_L1_Mu3er1p5_Jet100er2p5_ETMHF50_ = false;
    loaded_L1_Mu5_EG15_ = false;
    loaded_L1_Mu5_EG20_ = false;
    loaded_L1_Mu5_EG23_ = false;
    loaded_L1_Mu5_EG23er2p5_ = false;
    loaded_L1_Mu5_IsoEG18_ = false;
    loaded_L1_Mu5_IsoEG20_ = false;
    loaded_L1_Mu5_LooseIsoEG18_ = false;
    loaded_L1_Mu5_LooseIsoEG20_ = false;
    loaded_L1_Mu5_LooseIsoEG20er2p5_ = false;
    loaded_L1_Mu6_DoubleEG10_ = false;
    loaded_L1_Mu6_DoubleEG10er2p5_ = false;
    loaded_L1_Mu6_DoubleEG12er2p5_ = false;
    loaded_L1_Mu6_DoubleEG15er2p5_ = false;
    loaded_L1_Mu6_DoubleEG17_ = false;
    loaded_L1_Mu6_DoubleEG17er2p5_ = false;
    loaded_L1_Mu6_HTT200_ = false;
    loaded_L1_Mu6_HTT200er_ = false;
    loaded_L1_Mu6_HTT240er_ = false;
    loaded_L1_Mu6_HTT250er_ = false;
    loaded_L1_Mu7_EG20er2p5_ = false;
    loaded_L1_Mu7_EG23_ = false;
    loaded_L1_Mu7_EG23er2p5_ = false;
    loaded_L1_Mu7_IsoEG20_ = false;
    loaded_L1_Mu7_IsoEG23_ = false;
    loaded_L1_Mu7_LooseIsoEG20_ = false;
    loaded_L1_Mu7_LooseIsoEG20er2p5_ = false;
    loaded_L1_Mu7_LooseIsoEG23_ = false;
    loaded_L1_Mu7_LooseIsoEG23er2p5_ = false;
    loaded_L1_Mu8_HTT150_ = false;
    loaded_L1_Mu8_HTT150er_ = false;
    loaded_L1_NotBptxOR_ = false;
    loaded_L1_QuadJet36er2p5_IsoTau52er2p1_ = false;
    loaded_L1_QuadJet36er2p7_IsoTau52er2p1_ = false;
    loaded_L1_QuadJet36er2p7_Tau52_ = false;
    loaded_L1_QuadJet36er3p0_IsoTau52er2p1_ = false;
    loaded_L1_QuadJet36er3p0_Tau52_ = false;
    loaded_L1_QuadJet40er2p7_ = false;
    loaded_L1_QuadJet40er3p0_ = false;
    loaded_L1_QuadJet50er2p7_ = false;
    loaded_L1_QuadJet50er3p0_ = false;
    loaded_L1_QuadJet60er2p5_ = false;
    loaded_L1_QuadJet60er2p7_ = false;
    loaded_L1_QuadJet60er3p0_ = false;
    loaded_L1_QuadJetC36_Tau52_ = false;
    loaded_L1_QuadJetC40_ = false;
    loaded_L1_QuadJetC50_ = false;
    loaded_L1_QuadJetC60_ = false;
    loaded_L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0_ = false;
    loaded_L1_QuadMu0_ = false;
    loaded_L1_QuadMu0_OQ_ = false;
    loaded_L1_QuadMu0_SQ_ = false;
    loaded_L1_SecondBunchInTrain_ = false;
    loaded_L1_SecondLastBunchInTrain_ = false;
    loaded_L1_SingleEG10_ = false;
    loaded_L1_SingleEG10er2p5_ = false;
    loaded_L1_SingleEG15_ = false;
    loaded_L1_SingleEG15er2p5_ = false;
    loaded_L1_SingleEG18_ = false;
    loaded_L1_SingleEG24_ = false;
    loaded_L1_SingleEG26_ = false;
    loaded_L1_SingleEG26er2p5_ = false;
    loaded_L1_SingleEG28_ = false;
    loaded_L1_SingleEG28_FWD2p5_ = false;
    loaded_L1_SingleEG28er1p5_ = false;
    loaded_L1_SingleEG28er2p1_ = false;
    loaded_L1_SingleEG28er2p5_ = false;
    loaded_L1_SingleEG2_BptxAND_ = false;
    loaded_L1_SingleEG30_ = false;
    loaded_L1_SingleEG32_ = false;
    loaded_L1_SingleEG34_ = false;
    loaded_L1_SingleEG34er2p1_ = false;
    loaded_L1_SingleEG34er2p5_ = false;
    loaded_L1_SingleEG36_ = false;
    loaded_L1_SingleEG36er2p1_ = false;
    loaded_L1_SingleEG36er2p5_ = false;
    loaded_L1_SingleEG38_ = false;
    loaded_L1_SingleEG38er2p1_ = false;
    loaded_L1_SingleEG38er2p5_ = false;
    loaded_L1_SingleEG40_ = false;
    loaded_L1_SingleEG40er2p5_ = false;
    loaded_L1_SingleEG42_ = false;
    loaded_L1_SingleEG42er2p5_ = false;
    loaded_L1_SingleEG45_ = false;
    loaded_L1_SingleEG45er2p5_ = false;
    loaded_L1_SingleEG5_ = false;
    loaded_L1_SingleEG50_ = false;
    loaded_L1_SingleEG60_ = false;
    loaded_L1_SingleEG8er2p5_ = false;
    loaded_L1_SingleIsoEG18_ = false;
    loaded_L1_SingleIsoEG18er_ = false;
    loaded_L1_SingleIsoEG18er2p1_ = false;
    loaded_L1_SingleIsoEG20_ = false;
    loaded_L1_SingleIsoEG20er_ = false;
    loaded_L1_SingleIsoEG20er2p1_ = false;
    loaded_L1_SingleIsoEG22_ = false;
    loaded_L1_SingleIsoEG22er_ = false;
    loaded_L1_SingleIsoEG22er2p1_ = false;
    loaded_L1_SingleIsoEG24_ = false;
    loaded_L1_SingleIsoEG24er_ = false;
    loaded_L1_SingleIsoEG24er1p5_ = false;
    loaded_L1_SingleIsoEG24er2p1_ = false;
    loaded_L1_SingleIsoEG26_ = false;
    loaded_L1_SingleIsoEG26er_ = false;
    loaded_L1_SingleIsoEG26er1p5_ = false;
    loaded_L1_SingleIsoEG26er2p1_ = false;
    loaded_L1_SingleIsoEG26er2p5_ = false;
    loaded_L1_SingleIsoEG28_ = false;
    loaded_L1_SingleIsoEG28_FWD2p5_ = false;
    loaded_L1_SingleIsoEG28er_ = false;
    loaded_L1_SingleIsoEG28er1p5_ = false;
    loaded_L1_SingleIsoEG28er2p1_ = false;
    loaded_L1_SingleIsoEG28er2p5_ = false;
    loaded_L1_SingleIsoEG30_ = false;
    loaded_L1_SingleIsoEG30er_ = false;
    loaded_L1_SingleIsoEG30er2p1_ = false;
    loaded_L1_SingleIsoEG30er2p5_ = false;
    loaded_L1_SingleIsoEG32_ = false;
    loaded_L1_SingleIsoEG32er_ = false;
    loaded_L1_SingleIsoEG32er2p1_ = false;
    loaded_L1_SingleIsoEG32er2p5_ = false;
    loaded_L1_SingleIsoEG33er2p1_ = false;
    loaded_L1_SingleIsoEG34_ = false;
    loaded_L1_SingleIsoEG34er_ = false;
    loaded_L1_SingleIsoEG34er2p1_ = false;
    loaded_L1_SingleIsoEG34er2p5_ = false;
    loaded_L1_SingleIsoEG35_ = false;
    loaded_L1_SingleIsoEG35er2p1_ = false;
    loaded_L1_SingleIsoEG36_ = false;
    loaded_L1_SingleIsoEG36er2p1_ = false;
    loaded_L1_SingleIsoEG37_ = false;
    loaded_L1_SingleIsoEG38_ = false;
    loaded_L1_SingleIsoEG38er2p1_ = false;
    loaded_L1_SingleIsoEG40_ = false;
    loaded_L1_SingleIsoEG40er2p1_ = false;
    loaded_L1_SingleIsoTau32er2p1_ = false;
    loaded_L1_SingleJet10erHE_ = false;
    loaded_L1_SingleJet12_ = false;
    loaded_L1_SingleJet120_ = false;
    loaded_L1_SingleJet120_FWD_ = false;
    loaded_L1_SingleJet120_FWD3p0_ = false;
    loaded_L1_SingleJet120er2p5_ = false;
    loaded_L1_SingleJet12_BptxAND_ = false;
    loaded_L1_SingleJet12erHE_ = false;
    loaded_L1_SingleJet140_ = false;
    loaded_L1_SingleJet140er2p5_ = false;
    loaded_L1_SingleJet140er2p5_ETMHF70_ = false;
    loaded_L1_SingleJet140er2p5_ETMHF80_ = false;
    loaded_L1_SingleJet140er2p5_ETMHF90_ = false;
    loaded_L1_SingleJet150_ = false;
    loaded_L1_SingleJet16_ = false;
    loaded_L1_SingleJet160_ = false;
    loaded_L1_SingleJet160er2p5_ = false;
    loaded_L1_SingleJet170_ = false;
    loaded_L1_SingleJet180_ = false;
    loaded_L1_SingleJet180er2p5_ = false;
    loaded_L1_SingleJet20_ = false;
    loaded_L1_SingleJet200_ = false;
    loaded_L1_SingleJet20er2p5_NotBptxOR_ = false;
    loaded_L1_SingleJet20er2p5_NotBptxOR_3BX_ = false;
    loaded_L1_SingleJet20er2p7_NotBptxOR_ = false;
    loaded_L1_SingleJet20er2p7_NotBptxOR_3BX_ = false;
    loaded_L1_SingleJet20er3p0_NotBptxOR_ = false;
    loaded_L1_SingleJet20er3p0_NotBptxOR_3BX_ = false;
    loaded_L1_SingleJet35_ = false;
    loaded_L1_SingleJet35_FWD_ = false;
    loaded_L1_SingleJet35_FWD3p0_ = false;
    loaded_L1_SingleJet35_HFm_ = false;
    loaded_L1_SingleJet35_HFp_ = false;
    loaded_L1_SingleJet35er2p5_ = false;
    loaded_L1_SingleJet4_ = false;
    loaded_L1_SingleJet43er2p5_NotBptxOR_3BX_ = false;
    loaded_L1_SingleJet43er2p7_NotBptxOR_3BX_ = false;
    loaded_L1_SingleJet43er3p0_NotBptxOR_3BX_ = false;
    loaded_L1_SingleJet46er2p5_NotBptxOR_3BX_ = false;
    loaded_L1_SingleJet46er2p7_NotBptxOR_3BX_ = false;
    loaded_L1_SingleJet46er3p0_NotBptxOR_3BX_ = false;
    loaded_L1_SingleJet60_ = false;
    loaded_L1_SingleJet60_FWD_ = false;
    loaded_L1_SingleJet60_FWD3p0_ = false;
    loaded_L1_SingleJet60_HFm_ = false;
    loaded_L1_SingleJet60_HFp_ = false;
    loaded_L1_SingleJet60er2p5_ = false;
    loaded_L1_SingleJet8_ = false;
    loaded_L1_SingleJet8_BptxAND_ = false;
    loaded_L1_SingleJet8erHE_ = false;
    loaded_L1_SingleJet90_ = false;
    loaded_L1_SingleJet90_FWD_ = false;
    loaded_L1_SingleJet90_FWD3p0_ = false;
    loaded_L1_SingleJet90er2p5_ = false;
    loaded_L1_SingleJetC20_NotBptxOR_ = false;
    loaded_L1_SingleJetC20_NotBptxOR_3BX_ = false;
    loaded_L1_SingleJetC32_NotBptxOR_ = false;
    loaded_L1_SingleJetC32_NotBptxOR_3BX_ = false;
    loaded_L1_SingleJetC36_NotBptxOR_3BX_ = false;
    loaded_L1_SingleJetC40_NotBptxOR_3BX_ = false;
    loaded_L1_SingleJetC40_NotBptxOR_5BX_ = false;
    loaded_L1_SingleLooseIsoEG26er1p5_ = false;
    loaded_L1_SingleLooseIsoEG26er2p5_ = false;
    loaded_L1_SingleLooseIsoEG28_FWD2p5_ = false;
    loaded_L1_SingleLooseIsoEG28er1p5_ = false;
    loaded_L1_SingleLooseIsoEG28er2p1_ = false;
    loaded_L1_SingleLooseIsoEG28er2p5_ = false;
    loaded_L1_SingleLooseIsoEG30er1p5_ = false;
    loaded_L1_SingleLooseIsoEG30er2p5_ = false;
    loaded_L1_SingleMu0_BMTF_ = false;
    loaded_L1_SingleMu0_DQ_ = false;
    loaded_L1_SingleMu0_EMTF_ = false;
    loaded_L1_SingleMu0_OMTF_ = false;
    loaded_L1_SingleMu10_LowQ_ = false;
    loaded_L1_SingleMu10er1p5_ = false;
    loaded_L1_SingleMu11_LowQ_ = false;
    loaded_L1_SingleMu12_ = false;
    loaded_L1_SingleMu12_DQ_BMTF_ = false;
    loaded_L1_SingleMu12_DQ_EMTF_ = false;
    loaded_L1_SingleMu12_DQ_OMTF_ = false;
    loaded_L1_SingleMu12_LowQ_BMTF_ = false;
    loaded_L1_SingleMu12_LowQ_EMTF_ = false;
    loaded_L1_SingleMu12_LowQ_OMTF_ = false;
    loaded_L1_SingleMu12er1p5_ = false;
    loaded_L1_SingleMu14_ = false;
    loaded_L1_SingleMu14er_ = false;
    loaded_L1_SingleMu14er1p5_ = false;
    loaded_L1_SingleMu14er2p1_ = false;
    loaded_L1_SingleMu15_DQ_ = false;
    loaded_L1_SingleMu16_ = false;
    loaded_L1_SingleMu16er_ = false;
    loaded_L1_SingleMu16er1p5_ = false;
    loaded_L1_SingleMu16er2p1_ = false;
    loaded_L1_SingleMu18_ = false;
    loaded_L1_SingleMu18er_ = false;
    loaded_L1_SingleMu18er1p5_ = false;
    loaded_L1_SingleMu18er2p1_ = false;
    loaded_L1_SingleMu20_ = false;
    loaded_L1_SingleMu20er_ = false;
    loaded_L1_SingleMu20er2p1_ = false;
    loaded_L1_SingleMu22_ = false;
    loaded_L1_SingleMu22_BMTF_ = false;
    loaded_L1_SingleMu22_DQ_ = false;
    loaded_L1_SingleMu22_EMTF_ = false;
    loaded_L1_SingleMu22_OMTF_ = false;
    loaded_L1_SingleMu22_OQ_ = false;
    loaded_L1_SingleMu22er_ = false;
    loaded_L1_SingleMu22er2p1_ = false;
    loaded_L1_SingleMu25_ = false;
    loaded_L1_SingleMu25er_ = false;
    loaded_L1_SingleMu3_ = false;
    loaded_L1_SingleMu30_ = false;
    loaded_L1_SingleMu30er_ = false;
    loaded_L1_SingleMu5_ = false;
    loaded_L1_SingleMu6er1p5_ = false;
    loaded_L1_SingleMu7_ = false;
    loaded_L1_SingleMu7_DQ_ = false;
    loaded_L1_SingleMu7er1p5_ = false;
    loaded_L1_SingleMu8er1p5_ = false;
    loaded_L1_SingleMu9er1p5_ = false;
    loaded_L1_SingleMuCosmics_ = false;
    loaded_L1_SingleMuCosmics_BMTF_ = false;
    loaded_L1_SingleMuCosmics_EMTF_ = false;
    loaded_L1_SingleMuCosmics_OMTF_ = false;
    loaded_L1_SingleMuOpen_ = false;
    loaded_L1_SingleMuOpen_NotBptxOR_ = false;
    loaded_L1_SingleMuOpen_NotBptxOR_3BX_ = false;
    loaded_L1_SingleMuOpen_er1p1_NotBptxOR_3BX_ = false;
    loaded_L1_SingleMuOpen_er1p4_NotBptxOR_3BX_ = false;
    loaded_L1_SingleMuShower_Nominal_ = false;
    loaded_L1_SingleMuShower_Tight_ = false;
    loaded_L1_SingleTau100er_ = false;
    loaded_L1_SingleTau100er2p1_ = false;
    loaded_L1_SingleTau120er_ = false;
    loaded_L1_SingleTau120er2p1_ = false;
    loaded_L1_SingleTau130er2p1_ = false;
    loaded_L1_SingleTau140er2p1_ = false;
    loaded_L1_SingleTau20_ = false;
    loaded_L1_SingleTau70er2p1_ = false;
    loaded_L1_SingleTau80er_ = false;
    loaded_L1_SingleTau80er2p1_ = false;
    loaded_L1_TOTEM_1_ = false;
    loaded_L1_TOTEM_2_ = false;
    loaded_L1_TOTEM_3_ = false;
    loaded_L1_TOTEM_4_ = false;
    loaded_L1_TripleEG16er2p5_ = false;
    loaded_L1_TripleEG_14_10_8_ = false;
    loaded_L1_TripleEG_16_12_8_er2p5_ = false;
    loaded_L1_TripleEG_16_15_8_er2p5_ = false;
    loaded_L1_TripleEG_18_17_8_ = false;
    loaded_L1_TripleEG_18_17_8_er2p5_ = false;
    loaded_L1_TripleEG_18_18_12_er2p5_ = false;
    loaded_L1_TripleEG_Iso20_10_5_ = false;
    loaded_L1_TripleEG_LooseIso20_10_5_ = false;
    loaded_L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5_ = false;
    loaded_L1_TripleJet_100_85_72_VBF_ = false;
    loaded_L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5_ = false;
    loaded_L1_TripleJet_105_85_76_VBF_ = false;
    loaded_L1_TripleJet_84_68_48_VBF_ = false;
    loaded_L1_TripleJet_88_72_56_VBF_ = false;
    loaded_L1_TripleJet_92_76_64_VBF_ = false;
    loaded_L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5_ = false;
    loaded_L1_TripleJet_98_83_71_VBF_ = false;
    loaded_L1_TripleMu0_ = false;
    loaded_L1_TripleMu0_OQ_ = false;
    loaded_L1_TripleMu0_SQ_ = false;
    loaded_L1_TripleMu3_ = false;
    loaded_L1_TripleMu3_SQ_ = false;
    loaded_L1_TripleMu_2SQ_1p5SQ_0OQ_ = false;
    loaded_L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12_ = false;
    loaded_L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12_ = false;
    loaded_L1_TripleMu_4_4_4_ = false;
    loaded_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_ = false;
    loaded_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14_ = false;
    loaded_L1_TripleMu_5SQ_3SQ_0OQ_ = false;
    loaded_L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9_ = false;
    loaded_L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9_ = false;
    loaded_L1_TripleMu_5_0_0_ = false;
    loaded_L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17_ = false;
    loaded_L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17_ = false;
    loaded_L1_TripleMu_5_3_3_ = false;
    loaded_L1_TripleMu_5_3_3_SQ_ = false;
    loaded_L1_TripleMu_5_3p5_2p5_ = false;
    loaded_L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17_ = false;
    loaded_L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_ = false;
    loaded_L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17_ = false;
    loaded_L1_TripleMu_5_5_3_ = false;
    loaded_L1_UnpairedBunchBptxMinus_ = false;
    loaded_L1_UnpairedBunchBptxPlus_ = false;
    loaded_L1_UnprefireableEvent_ = false;
    loaded_L1_ZeroBias_ = false;
    loaded_L1_ZeroBias_FirstCollidingBunch_ = false;
    loaded_L1_ZeroBias_copy_ = false;
    loaded_L1simulation_step_ = false;
    loaded_LHEPart_eta_ = false;
    loaded_LHEPart_incomingpz_ = false;
    loaded_LHEPart_mass_ = false;
    loaded_LHEPart_p4_ = false;
    loaded_LHEPart_pdgId_ = false;
    loaded_LHEPart_phi_ = false;
    loaded_LHEPart_pt_ = false;
    loaded_LHEPart_spin_ = false;
    loaded_LHEPart_status_ = false;
    loaded_LHEPdfWeight_ = false;
    loaded_LHEReweightingWeight_ = false;
    loaded_LHEScaleWeight_ = false;
    loaded_LHEWeight_dummy_ = false;
    loaded_LHEWeight_originalXWGTUP_ = false;
    loaded_LHE_AlphaS_ = false;
    loaded_LHE_HT_ = false;
    loaded_LHE_HTIncoming_ = false;
    loaded_LHE_Nb_ = false;
    loaded_LHE_Nc_ = false;
    loaded_LHE_Nglu_ = false;
    loaded_LHE_Njets_ = false;
    loaded_LHE_NpLO_ = false;
    loaded_LHE_NpNLO_ = false;
    loaded_LHE_Nuds_ = false;
    loaded_LHE_Vpt_ = false;
    loaded_LowPtElectron_ID_ = false;
    loaded_LowPtElectron_charge_ = false;
    loaded_LowPtElectron_convVeto_ = false;
    loaded_LowPtElectron_convVtxRadius_ = false;
    loaded_LowPtElectron_convWP_ = false;
    loaded_LowPtElectron_deltaEtaSC_ = false;
    loaded_LowPtElectron_dxy_ = false;
    loaded_LowPtElectron_dxyErr_ = false;
    loaded_LowPtElectron_dz_ = false;
    loaded_LowPtElectron_dzErr_ = false;
    loaded_LowPtElectron_eInvMinusPInv_ = false;
    loaded_LowPtElectron_electronIdx_ = false;
    loaded_LowPtElectron_embeddedID_ = false;
    loaded_LowPtElectron_energyErr_ = false;
    loaded_LowPtElectron_eta_ = false;
    loaded_LowPtElectron_genPartFlav_ = false;
    loaded_LowPtElectron_genPartIdx_ = false;
    loaded_LowPtElectron_hoe_ = false;
    loaded_LowPtElectron_lostHits_ = false;
    loaded_LowPtElectron_mass_ = false;
    loaded_LowPtElectron_miniPFRelIso_all_ = false;
    loaded_LowPtElectron_miniPFRelIso_chg_ = false;
    loaded_LowPtElectron_p4_ = false;
    loaded_LowPtElectron_pdgId_ = false;
    loaded_LowPtElectron_phi_ = false;
    loaded_LowPtElectron_photonIdx_ = false;
    loaded_LowPtElectron_pt_ = false;
    loaded_LowPtElectron_ptbiased_ = false;
    loaded_LowPtElectron_r9_ = false;
    loaded_LowPtElectron_scEtOverPt_ = false;
    loaded_LowPtElectron_sieie_ = false;
    loaded_LowPtElectron_unbiased_ = false;
    loaded_MET_MetUnclustEnUpDeltaX_ = false;
    loaded_MET_MetUnclustEnUpDeltaY_ = false;
    loaded_MET_T1Smear_phi_ = false;
    loaded_MET_T1Smear_phi_jerDown_ = false;
    loaded_MET_T1Smear_phi_jerUp_ = false;
    loaded_MET_T1Smear_phi_jesHEMIssueDown_ = false;
    loaded_MET_T1Smear_phi_jesHEMIssueUp_ = false;
    loaded_MET_T1Smear_phi_jesTotalDown_ = false;
    loaded_MET_T1Smear_phi_jesTotalUp_ = false;
    loaded_MET_T1Smear_phi_unclustEnDown_ = false;
    loaded_MET_T1Smear_phi_unclustEnUp_ = false;
    loaded_MET_T1Smear_pt_ = false;
    loaded_MET_T1Smear_pt_jerDown_ = false;
    loaded_MET_T1Smear_pt_jerUp_ = false;
    loaded_MET_T1Smear_pt_jesHEMIssueDown_ = false;
    loaded_MET_T1Smear_pt_jesHEMIssueUp_ = false;
    loaded_MET_T1Smear_pt_jesTotalDown_ = false;
    loaded_MET_T1Smear_pt_jesTotalUp_ = false;
    loaded_MET_T1Smear_pt_unclustEnDown_ = false;
    loaded_MET_T1Smear_pt_unclustEnUp_ = false;
    loaded_MET_T1_phi_ = false;
    loaded_MET_T1_phi_jerDown_ = false;
    loaded_MET_T1_phi_jerUp_ = false;
    loaded_MET_T1_phi_jesHEMIssueDown_ = false;
    loaded_MET_T1_phi_jesHEMIssueUp_ = false;
    loaded_MET_T1_phi_jesTotalDown_ = false;
    loaded_MET_T1_phi_jesTotalUp_ = false;
    loaded_MET_T1_phi_unclustEnDown_ = false;
    loaded_MET_T1_phi_unclustEnUp_ = false;
    loaded_MET_T1_pt_ = false;
    loaded_MET_T1_pt_jerDown_ = false;
    loaded_MET_T1_pt_jerUp_ = false;
    loaded_MET_T1_pt_jesHEMIssueDown_ = false;
    loaded_MET_T1_pt_jesHEMIssueUp_ = false;
    loaded_MET_T1_pt_jesTotalDown_ = false;
    loaded_MET_T1_pt_jesTotalUp_ = false;
    loaded_MET_T1_pt_unclustEnDown_ = false;
    loaded_MET_T1_pt_unclustEnUp_ = false;
    loaded_MET_covXX_ = false;
    loaded_MET_covXY_ = false;
    loaded_MET_covYY_ = false;
    loaded_MET_fiducialGenPhi_ = false;
    loaded_MET_fiducialGenPt_ = false;
    loaded_MET_phi_ = false;
    loaded_MET_pt_ = false;
    loaded_MET_significance_ = false;
    loaded_MET_sumEt_ = false;
    loaded_MET_sumPtUnclustered_ = false;
    loaded_Muon_CutBased_HighPtID_SF_ = false;
    loaded_Muon_CutBased_HighPtID_SFerr_ = false;
    loaded_Muon_CutBased_LooseID_SF_ = false;
    loaded_Muon_CutBased_LooseID_SFerr_ = false;
    loaded_Muon_CutBased_MediumID_SF_ = false;
    loaded_Muon_CutBased_MediumID_SFerr_ = false;
    loaded_Muon_CutBased_MediumPromptID_SF_ = false;
    loaded_Muon_CutBased_MediumPromptID_SFerr_ = false;
    loaded_Muon_CutBased_SoftID_SF_ = false;
    loaded_Muon_CutBased_SoftID_SFerr_ = false;
    loaded_Muon_CutBased_TightID_SF_ = false;
    loaded_Muon_CutBased_TightID_SFerr_ = false;
    loaded_Muon_CutBased_TrkHighPtID_SF_ = false;
    loaded_Muon_CutBased_TrkHighPtID_SFerr_ = false;
    loaded_Muon_LooseRelIso_LooseID_SF_ = false;
    loaded_Muon_LooseRelIso_LooseID_SFerr_ = false;
    loaded_Muon_LooseRelIso_MediumID_SF_ = false;
    loaded_Muon_LooseRelIso_MediumID_SFerr_ = false;
    loaded_Muon_LooseRelIso_MediumPromptID_SF_ = false;
    loaded_Muon_LooseRelIso_MediumPromptID_SFerr_ = false;
    loaded_Muon_LooseRelIso_TightIDandIPCut_SF_ = false;
    loaded_Muon_LooseRelIso_TightIDandIPCut_SFerr_ = false;
    loaded_Muon_LooseRelTkIso_HighPtIDandIPCut_SF_ = false;
    loaded_Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_ = false;
    loaded_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_ = false;
    loaded_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_ = false;
    loaded_Muon_TightRelIso_MediumID_SF_ = false;
    loaded_Muon_TightRelIso_MediumID_SFerr_ = false;
    loaded_Muon_TightRelIso_MediumPromptID_SF_ = false;
    loaded_Muon_TightRelIso_MediumPromptID_SFerr_ = false;
    loaded_Muon_TightRelIso_TightIDandIPCut_SF_ = false;
    loaded_Muon_TightRelIso_TightIDandIPCut_SFerr_ = false;
    loaded_Muon_TightRelTkIso_HighPtIDandIPCut_SF_ = false;
    loaded_Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_ = false;
    loaded_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_ = false;
    loaded_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_ = false;
    loaded_Muon_charge_ = false;
    loaded_Muon_cleanmask_ = false;
    loaded_Muon_correctedDown_pt_ = false;
    loaded_Muon_correctedUp_pt_ = false;
    loaded_Muon_corrected_pt_ = false;
    loaded_Muon_dxy_ = false;
    loaded_Muon_dxyErr_ = false;
    loaded_Muon_dxybs_ = false;
    loaded_Muon_dz_ = false;
    loaded_Muon_dzErr_ = false;
    loaded_Muon_eta_ = false;
    loaded_Muon_fsrPhotonIdx_ = false;
    loaded_Muon_genPartFlav_ = false;
    loaded_Muon_genPartIdx_ = false;
    loaded_Muon_highPtId_ = false;
    loaded_Muon_highPurity_ = false;
    loaded_Muon_inTimeMuon_ = false;
    loaded_Muon_ip3d_ = false;
    loaded_Muon_isGlobal_ = false;
    loaded_Muon_isPFcand_ = false;
    loaded_Muon_isStandalone_ = false;
    loaded_Muon_isTracker_ = false;
    loaded_Muon_jetIdx_ = false;
    loaded_Muon_jetNDauCharged_ = false;
    loaded_Muon_jetPtRelv2_ = false;
    loaded_Muon_jetRelIso_ = false;
    loaded_Muon_looseId_ = false;
    loaded_Muon_mass_ = false;
    loaded_Muon_mediumId_ = false;
    loaded_Muon_mediumPromptId_ = false;
    loaded_Muon_miniIsoId_ = false;
    loaded_Muon_miniPFRelIso_all_ = false;
    loaded_Muon_miniPFRelIso_chg_ = false;
    loaded_Muon_multiIsoId_ = false;
    loaded_Muon_mvaId_ = false;
    loaded_Muon_mvaLowPt_ = false;
    loaded_Muon_mvaLowPtId_ = false;
    loaded_Muon_mvaMuID_ = false;
    loaded_Muon_mvaMuID_WP_ = false;
    loaded_Muon_mvaTTH_ = false;
    // NOTE: this is a custom branch; temporarily added for convenience
    loaded_Muon_mvaTTHUL_ = false;
    //
    loaded_Muon_nStations_ = false;
    loaded_Muon_nTrackerLayers_ = false;
    loaded_Muon_p4_ = false;
    loaded_Muon_pdgId_ = false;
    loaded_Muon_pfIsoId_ = false;
    loaded_Muon_pfRelIso03_all_ = false;
    loaded_Muon_pfRelIso03_chg_ = false;
    loaded_Muon_pfRelIso04_all_ = false;
    loaded_Muon_phi_ = false;
    loaded_Muon_pt_ = false;
    loaded_Muon_ptErr_ = false;
    loaded_Muon_puppiIsoId_ = false;
    loaded_Muon_segmentComp_ = false;
    loaded_Muon_sip3d_ = false;
    loaded_Muon_softId_ = false;
    loaded_Muon_softMva_ = false;
    loaded_Muon_softMvaId_ = false;
    loaded_Muon_svIdx_ = false;
    loaded_Muon_tightCharge_ = false;
    loaded_Muon_tightId_ = false;
    loaded_Muon_tkIsoId_ = false;
    loaded_Muon_tkRelIso_ = false;
    loaded_Muon_triggerIdLoose_ = false;
    loaded_Muon_tunepRelPt_ = false;
    loaded_OtherPV_score_ = false;
    loaded_OtherPV_z_ = false;
    loaded_PPSLocalTrack_decRPId_ = false;
    loaded_PPSLocalTrack_multiRPProtonIdx_ = false;
    loaded_PPSLocalTrack_rpType_ = false;
    loaded_PPSLocalTrack_singleRPProtonIdx_ = false;
    loaded_PPSLocalTrack_time_ = false;
    loaded_PPSLocalTrack_timeUnc_ = false;
    loaded_PPSLocalTrack_x_ = false;
    loaded_PPSLocalTrack_y_ = false;
    loaded_PSWeight_ = false;
    loaded_PV_chi2_ = false;
    loaded_PV_ndof_ = false;
    loaded_PV_npvs_ = false;
    loaded_PV_npvsGood_ = false;
    loaded_PV_score_ = false;
    loaded_PV_x_ = false;
    loaded_PV_y_ = false;
    loaded_PV_z_ = false;
    loaded_Photon_charge_ = false;
    loaded_Photon_cleanmask_ = false;
    loaded_Photon_cutBased_ = false;
    loaded_Photon_cutBased17Bitmap_ = false;
    loaded_Photon_cutBasedBitmap_ = false;
    loaded_Photon_cutBased_Fall17V1Bitmap_ = false;
    loaded_Photon_cutBased_Fall17V2_ = false;
    loaded_Photon_dEscaleDown_ = false;
    loaded_Photon_dEscaleUp_ = false;
    loaded_Photon_dEsigmaDown_ = false;
    loaded_Photon_dEsigmaUp_ = false;
    loaded_Photon_eCorr_ = false;
    loaded_Photon_electronIdx_ = false;
    loaded_Photon_electronVeto_ = false;
    loaded_Photon_energyErr_ = false;
    loaded_Photon_energyRaw_ = false;
    loaded_Photon_esEffSigmaRR_ = false;
    loaded_Photon_esEnergyOverRawE_ = false;
    loaded_Photon_eta_ = false;
    loaded_Photon_etaWidth_ = false;
    loaded_Photon_genPartFlav_ = false;
    loaded_Photon_genPartIdx_ = false;
    loaded_Photon_haloTaggerMVAVal_ = false;
    loaded_Photon_hoe_ = false;
    loaded_Photon_hoe_PUcorr_ = false;
    loaded_Photon_isScEtaEB_ = false;
    loaded_Photon_isScEtaEE_ = false;
    loaded_Photon_jetIdx_ = false;
    loaded_Photon_mass_ = false;
    loaded_Photon_mvaID_ = false;
    loaded_Photon_mvaID17_ = false;
    loaded_Photon_mvaID17_WP80_ = false;
    loaded_Photon_mvaID17_WP90_ = false;
    loaded_Photon_mvaID_Fall17V1p1_ = false;
    loaded_Photon_mvaID_Fall17V2_ = false;
    loaded_Photon_mvaID_Fall17V2_WP80_ = false;
    loaded_Photon_mvaID_Fall17V2_WP90_ = false;
    loaded_Photon_mvaID_WP80_ = false;
    loaded_Photon_mvaID_WP90_ = false;
    loaded_Photon_p4_ = false;
    loaded_Photon_pdgId_ = false;
    loaded_Photon_pfChargedIsoPFPV_ = false;
    loaded_Photon_pfChargedIsoWorstVtx_ = false;
    loaded_Photon_pfPhoIso03_ = false;
    loaded_Photon_pfRelIso03_all_ = false;
    loaded_Photon_pfRelIso03_all_Fall17V2_ = false;
    loaded_Photon_pfRelIso03_all_quadratic_ = false;
    loaded_Photon_pfRelIso03_chg_ = false;
    loaded_Photon_pfRelIso03_chg_Fall17V2_ = false;
    loaded_Photon_pfRelIso03_chg_quadratic_ = false;
    loaded_Photon_phi_ = false;
    loaded_Photon_phiWidth_ = false;
    loaded_Photon_pixelSeed_ = false;
    loaded_Photon_pt_ = false;
    loaded_Photon_r9_ = false;
    loaded_Photon_s4_ = false;
    loaded_Photon_seedGain_ = false;
    loaded_Photon_seediEtaOriX_ = false;
    loaded_Photon_seediPhiOriY_ = false;
    loaded_Photon_sieie_ = false;
    loaded_Photon_sieip_ = false;
    loaded_Photon_sipip_ = false;
    loaded_Photon_vidNestedWPBitmap_ = false;
    loaded_Photon_vidNestedWPBitmap_Fall17V2_ = false;
    loaded_Photon_x_calo_ = false;
    loaded_Photon_y_calo_ = false;
    loaded_Photon_z_calo_ = false;
    loaded_Pileup_gpudensity_ = false;
    loaded_Pileup_nPU_ = false;
    loaded_Pileup_nTrueInt_ = false;
    loaded_Pileup_pudensity_ = false;
    loaded_Pileup_sumEOOT_ = false;
    loaded_Pileup_sumLOOT_ = false;
    loaded_Proton_multiRP_arm_ = false;
    loaded_Proton_multiRP_t_ = false;
    loaded_Proton_multiRP_thetaX_ = false;
    loaded_Proton_multiRP_thetaY_ = false;
    loaded_Proton_multiRP_time_ = false;
    loaded_Proton_multiRP_timeUnc_ = false;
    loaded_Proton_multiRP_xi_ = false;
    loaded_Proton_singleRP_decRPId_ = false;
    loaded_Proton_singleRP_thetaY_ = false;
    loaded_Proton_singleRP_xi_ = false;
    loaded_PuppiMET_phi_ = false;
    loaded_PuppiMET_phiJERDown_ = false;
    loaded_PuppiMET_phiJERUp_ = false;
    loaded_PuppiMET_phiJESDown_ = false;
    loaded_PuppiMET_phiJESUp_ = false;
    loaded_PuppiMET_phiUnclusteredDown_ = false;
    loaded_PuppiMET_phiUnclusteredUp_ = false;
    loaded_PuppiMET_pt_ = false;
    loaded_PuppiMET_ptJERDown_ = false;
    loaded_PuppiMET_ptJERUp_ = false;
    loaded_PuppiMET_ptJESDown_ = false;
    loaded_PuppiMET_ptJESUp_ = false;
    loaded_PuppiMET_ptUnclusteredDown_ = false;
    loaded_PuppiMET_ptUnclusteredUp_ = false;
    loaded_PuppiMET_sumEt_ = false;
    loaded_RawMET_phi_ = false;
    loaded_RawMET_pt_ = false;
    loaded_RawMET_sumEt_ = false;
    loaded_RawPuppiMET_phi_ = false;
    loaded_RawPuppiMET_pt_ = false;
    loaded_RawPuppiMET_sumEt_ = false;
    loaded_Rho_fixedGridRhoAll_ = false;
    loaded_Rho_fixedGridRhoFastjetAll_ = false;
    loaded_Rho_fixedGridRhoFastjetCentral_ = false;
    loaded_Rho_fixedGridRhoFastjetCentralCalo_ = false;
    loaded_Rho_fixedGridRhoFastjetCentralChargedPileUp_ = false;
    loaded_Rho_fixedGridRhoFastjetCentralNeutral_ = false;
    loaded_SV_charge_ = false;
    loaded_SV_chi2_ = false;
    loaded_SV_dlen_ = false;
    loaded_SV_dlenSig_ = false;
    loaded_SV_dxy_ = false;
    loaded_SV_dxySig_ = false;
    loaded_SV_eta_ = false;
    loaded_SV_mass_ = false;
    loaded_SV_ndof_ = false;
    loaded_SV_ntracks_ = false;
    loaded_SV_p4_ = false;
    loaded_SV_pAngle_ = false;
    loaded_SV_phi_ = false;
    loaded_SV_pt_ = false;
    loaded_SV_x_ = false;
    loaded_SV_y_ = false;
    loaded_SV_z_ = false;
    loaded_SoftActivityJetHT_ = false;
    loaded_SoftActivityJetHT10_ = false;
    loaded_SoftActivityJetHT2_ = false;
    loaded_SoftActivityJetHT5_ = false;
    loaded_SoftActivityJetNjets10_ = false;
    loaded_SoftActivityJetNjets2_ = false;
    loaded_SoftActivityJetNjets5_ = false;
    loaded_SoftActivityJet_eta_ = false;
    loaded_SoftActivityJet_phi_ = false;
    loaded_SoftActivityJet_pt_ = false;
    loaded_SubGenJetAK8_eta_ = false;
    loaded_SubGenJetAK8_mass_ = false;
    loaded_SubGenJetAK8_p4_ = false;
    loaded_SubGenJetAK8_phi_ = false;
    loaded_SubGenJetAK8_pt_ = false;
    loaded_SubJet_btagCMVA_ = false;
    loaded_SubJet_btagCSVV2_ = false;
    loaded_SubJet_btagDeepB_ = false;
    loaded_SubJet_eta_ = false;
    loaded_SubJet_hadronFlavour_ = false;
    loaded_SubJet_mass_ = false;
    loaded_SubJet_n2b1_ = false;
    loaded_SubJet_n3b1_ = false;
    loaded_SubJet_nBHadrons_ = false;
    loaded_SubJet_nCHadrons_ = false;
    loaded_SubJet_p4_ = false;
    loaded_SubJet_phi_ = false;
    loaded_SubJet_pt_ = false;
    loaded_SubJet_rawFactor_ = false;
    loaded_SubJet_tau1_ = false;
    loaded_SubJet_tau2_ = false;
    loaded_SubJet_tau3_ = false;
    loaded_SubJet_tau4_ = false;
    loaded_Tau_charge_ = false;
    loaded_Tau_chargedIso_ = false;
    loaded_Tau_cleanmask_ = false;
    loaded_Tau_decayMode_ = false;
    loaded_Tau_dxy_ = false;
    loaded_Tau_dz_ = false;
    loaded_Tau_eleIdx_ = false;
    loaded_Tau_eta_ = false;
    loaded_Tau_genPartFlav_ = false;
    loaded_Tau_genPartIdx_ = false;
    loaded_Tau_idAntiEle_ = false;
    loaded_Tau_idAntiEle2018_ = false;
    loaded_Tau_idAntiEleDeadECal_ = false;
    loaded_Tau_idAntiMu_ = false;
    loaded_Tau_idDecayMode_ = false;
    loaded_Tau_idDecayModeNewDMs_ = false;
    loaded_Tau_idDecayModeOldDMs_ = false;
    loaded_Tau_idDeepTau2017v2p1VSe_ = false;
    loaded_Tau_idDeepTau2017v2p1VSjet_ = false;
    loaded_Tau_idDeepTau2017v2p1VSmu_ = false;
    loaded_Tau_idDeepTau2018v2p5VSe_ = false;
    loaded_Tau_idDeepTau2018v2p5VSjet_ = false;
    loaded_Tau_idDeepTau2018v2p5VSmu_ = false;
    loaded_Tau_idMVAnewDM2017v2_ = false;
    loaded_Tau_idMVAoldDM_ = false;
    loaded_Tau_idMVAoldDM2017v1_ = false;
    loaded_Tau_idMVAoldDM2017v2_ = false;
    loaded_Tau_idMVAoldDMdR032017v2_ = false;
    loaded_Tau_jetIdx_ = false;
    loaded_Tau_leadTkDeltaEta_ = false;
    loaded_Tau_leadTkDeltaPhi_ = false;
    loaded_Tau_leadTkPtOverTauPt_ = false;
    loaded_Tau_mass_ = false;
    loaded_Tau_muIdx_ = false;
    loaded_Tau_nSVs_ = false;
    loaded_Tau_neutralIso_ = false;
    loaded_Tau_p4_ = false;
    loaded_Tau_phi_ = false;
    loaded_Tau_photonsOutsideSignalCone_ = false;
    loaded_Tau_pt_ = false;
    loaded_Tau_puCorr_ = false;
    loaded_Tau_rawAntiEle_ = false;
    loaded_Tau_rawAntiEle2018_ = false;
    loaded_Tau_rawAntiEleCat_ = false;
    loaded_Tau_rawAntiEleCat2018_ = false;
    loaded_Tau_rawDeepTau2017v2p1VSe_ = false;
    loaded_Tau_rawDeepTau2017v2p1VSjet_ = false;
    loaded_Tau_rawDeepTau2017v2p1VSmu_ = false;
    loaded_Tau_rawDeepTau2018v2p5VSe_ = false;
    loaded_Tau_rawDeepTau2018v2p5VSjet_ = false;
    loaded_Tau_rawDeepTau2018v2p5VSmu_ = false;
    loaded_Tau_rawIso_ = false;
    loaded_Tau_rawIsodR03_ = false;
    loaded_Tau_rawMVAnewDM2017v2_ = false;
    loaded_Tau_rawMVAoldDM_ = false;
    loaded_Tau_rawMVAoldDM2017v1_ = false;
    loaded_Tau_rawMVAoldDM2017v2_ = false;
    loaded_Tau_rawMVAoldDMdR032017v2_ = false;
    loaded_Tau_svIdx1_ = false;
    loaded_Tau_svIdx2_ = false;
    loaded_TkMET_phi_ = false;
    loaded_TkMET_pt_ = false;
    loaded_TkMET_sumEt_ = false;
    loaded_TrigObj_eta_ = false;
    loaded_TrigObj_filterBits_ = false;
    loaded_TrigObj_id_ = false;
    loaded_TrigObj_l1charge_ = false;
    loaded_TrigObj_l1iso_ = false;
    loaded_TrigObj_l1pt_ = false;
    loaded_TrigObj_l1pt_2_ = false;
    loaded_TrigObj_l2pt_ = false;
    loaded_TrigObj_phi_ = false;
    loaded_TrigObj_pt_ = false;
    loaded_WCnames_ = false;
    loaded_boostedTau_charge_ = false;
    loaded_boostedTau_chargedIso_ = false;
    loaded_boostedTau_decayMode_ = false;
    loaded_boostedTau_eta_ = false;
    loaded_boostedTau_genPartFlav_ = false;
    loaded_boostedTau_genPartIdx_ = false;
    loaded_boostedTau_idAntiEle2018_ = false;
    loaded_boostedTau_idAntiMu_ = false;
    loaded_boostedTau_idMVAnewDM2017v2_ = false;
    loaded_boostedTau_idMVAoldDM2017v2_ = false;
    loaded_boostedTau_idMVAoldDMdR032017v2_ = false;
    loaded_boostedTau_jetIdx_ = false;
    loaded_boostedTau_leadTkDeltaEta_ = false;
    loaded_boostedTau_leadTkDeltaPhi_ = false;
    loaded_boostedTau_leadTkPtOverTauPt_ = false;
    loaded_boostedTau_mass_ = false;
    loaded_boostedTau_neutralIso_ = false;
    loaded_boostedTau_p4_ = false;
    loaded_boostedTau_phi_ = false;
    loaded_boostedTau_photonsOutsideSignalCone_ = false;
    loaded_boostedTau_pt_ = false;
    loaded_boostedTau_puCorr_ = false;
    loaded_boostedTau_rawAntiEle2018_ = false;
    loaded_boostedTau_rawAntiEleCat2018_ = false;
    loaded_boostedTau_rawIso_ = false;
    loaded_boostedTau_rawIsodR03_ = false;
    loaded_boostedTau_rawMVAnewDM2017v2_ = false;
    loaded_boostedTau_rawMVAoldDM2017v2_ = false;
    loaded_boostedTau_rawMVAoldDMdR032017v2_ = false;
    loaded_btagWeight_CSVV2_ = false;
    loaded_btagWeight_DeepCSVB_ = false;
    loaded_bunchCrossing_ = false;
    loaded_event_ = false;
    loaded_fixedGridRhoFastjetAll_ = false;
    loaded_fixedGridRhoFastjetCentral_ = false;
    loaded_fixedGridRhoFastjetCentralCalo_ = false;
    loaded_fixedGridRhoFastjetCentralChargedPileUp_ = false;
    loaded_fixedGridRhoFastjetCentralNeutral_ = false;
    loaded_genTtbarId_ = false;
    loaded_genWeight_ = false;
    loaded_luminosityBlock_ = false;
    loaded_nCorrT1METJet_ = false;
    loaded_nEFTfitCoefficients_ = false;
    loaded_nElectron_ = false;
    loaded_nFatJet_ = false;
    loaded_nFsrPhoton_ = false;
    loaded_nGenDressedLepton_ = false;
    loaded_nGenIsolatedPhoton_ = false;
    loaded_nGenJet_ = false;
    loaded_nGenJetAK8_ = false;
    loaded_nGenPart_ = false;
    loaded_nGenProton_ = false;
    loaded_nGenVisTau_ = false;
    loaded_nIsoTrack_ = false;
    loaded_nJet_ = false;
    loaded_nLHEPart_ = false;
    loaded_nLHEPdfWeight_ = false;
    loaded_nLHEReweightingWeight_ = false;
    loaded_nLHEScaleWeight_ = false;
    loaded_nLowPtElectron_ = false;
    loaded_nMuon_ = false;
    loaded_nOtherPV_ = false;
    loaded_nPPSLocalTrack_ = false;
    loaded_nPSWeight_ = false;
    loaded_nPhoton_ = false;
    loaded_nProton_multiRP_ = false;
    loaded_nProton_singleRP_ = false;
    loaded_nSV_ = false;
    loaded_nSoftActivityJet_ = false;
    loaded_nSubGenJetAK8_ = false;
    loaded_nSubJet_ = false;
    loaded_nTau_ = false;
    loaded_nTrigObj_ = false;
    loaded_nWCnames_ = false;
    loaded_nboostedTau_ = false;
    loaded_puWeight_ = false;
    loaded_puWeightDown_ = false;
    loaded_puWeightUp_ = false;
    loaded_run_ = false;
}

const float &Nano::BeamSpot_sigmaZ() {
    if (!loaded_BeamSpot_sigmaZ_) counter_uncached_BeamSpot_sigmaZ_++;
    else counter_cached_BeamSpot_sigmaZ_++;
    if (!loaded_BeamSpot_sigmaZ_) {
        if (!b_BeamSpot_sigmaZ_) throw std::runtime_error("BeamSpot_sigmaZ branch doesn't exist");
        b_BeamSpot_sigmaZ_->GetEntry(index);
        loaded_BeamSpot_sigmaZ_ = true;
    }
    return BeamSpot_sigmaZ_;
}
const float &Nano::BeamSpot_sigmaZError() {
    if (!loaded_BeamSpot_sigmaZError_) counter_uncached_BeamSpot_sigmaZError_++;
    else counter_cached_BeamSpot_sigmaZError_++;
    if (!loaded_BeamSpot_sigmaZError_) {
        if (!b_BeamSpot_sigmaZError_) throw std::runtime_error("BeamSpot_sigmaZError branch doesn't exist");
        b_BeamSpot_sigmaZError_->GetEntry(index);
        loaded_BeamSpot_sigmaZError_ = true;
    }
    return BeamSpot_sigmaZError_;
}
const Char_t &Nano::BeamSpot_type() {
    if (!loaded_BeamSpot_type_) counter_uncached_BeamSpot_type_++;
    else counter_cached_BeamSpot_type_++;
    if (!loaded_BeamSpot_type_) {
        if (!b_BeamSpot_type_) throw std::runtime_error("BeamSpot_type branch doesn't exist");
        b_BeamSpot_type_->GetEntry(index);
        loaded_BeamSpot_type_ = true;
    }
    return BeamSpot_type_;
}
const float &Nano::BeamSpot_z() {
    if (!loaded_BeamSpot_z_) counter_uncached_BeamSpot_z_++;
    else counter_cached_BeamSpot_z_++;
    if (!loaded_BeamSpot_z_) {
        if (!b_BeamSpot_z_) throw std::runtime_error("BeamSpot_z branch doesn't exist");
        b_BeamSpot_z_->GetEntry(index);
        loaded_BeamSpot_z_ = true;
    }
    return BeamSpot_z_;
}
const float &Nano::BeamSpot_zError() {
    if (!loaded_BeamSpot_zError_) counter_uncached_BeamSpot_zError_++;
    else counter_cached_BeamSpot_zError_++;
    if (!loaded_BeamSpot_zError_) {
        if (!b_BeamSpot_zError_) throw std::runtime_error("BeamSpot_zError branch doesn't exist");
        b_BeamSpot_zError_->GetEntry(index);
        loaded_BeamSpot_zError_ = true;
    }
    return BeamSpot_zError_;
}
const float &Nano::CaloMET_phi() {
    if (!loaded_CaloMET_phi_) counter_uncached_CaloMET_phi_++;
    else counter_cached_CaloMET_phi_++;
    if (!loaded_CaloMET_phi_) {
        if (!b_CaloMET_phi_) throw std::runtime_error("CaloMET_phi branch doesn't exist");
        b_CaloMET_phi_->GetEntry(index);
        loaded_CaloMET_phi_ = true;
    }
    return CaloMET_phi_;
}
const float &Nano::CaloMET_pt() {
    if (!loaded_CaloMET_pt_) counter_uncached_CaloMET_pt_++;
    else counter_cached_CaloMET_pt_++;
    if (!loaded_CaloMET_pt_) {
        if (!b_CaloMET_pt_) throw std::runtime_error("CaloMET_pt branch doesn't exist");
        b_CaloMET_pt_->GetEntry(index);
        loaded_CaloMET_pt_ = true;
    }
    return CaloMET_pt_;
}
const float &Nano::CaloMET_sumEt() {
    if (!loaded_CaloMET_sumEt_) counter_uncached_CaloMET_sumEt_++;
    else counter_cached_CaloMET_sumEt_++;
    if (!loaded_CaloMET_sumEt_) {
        if (!b_CaloMET_sumEt_) throw std::runtime_error("CaloMET_sumEt branch doesn't exist");
        b_CaloMET_sumEt_->GetEntry(index);
        loaded_CaloMET_sumEt_ = true;
    }
    return CaloMET_sumEt_;
}
const float &Nano::ChsMET_phi() {
    if (!loaded_ChsMET_phi_) counter_uncached_ChsMET_phi_++;
    else counter_cached_ChsMET_phi_++;
    if (!loaded_ChsMET_phi_) {
        if (!b_ChsMET_phi_) throw std::runtime_error("ChsMET_phi branch doesn't exist");
        b_ChsMET_phi_->GetEntry(index);
        loaded_ChsMET_phi_ = true;
    }
    return ChsMET_phi_;
}
const float &Nano::ChsMET_pt() {
    if (!loaded_ChsMET_pt_) counter_uncached_ChsMET_pt_++;
    else counter_cached_ChsMET_pt_++;
    if (!loaded_ChsMET_pt_) {
        if (!b_ChsMET_pt_) throw std::runtime_error("ChsMET_pt branch doesn't exist");
        b_ChsMET_pt_->GetEntry(index);
        loaded_ChsMET_pt_ = true;
    }
    return ChsMET_pt_;
}
const float &Nano::ChsMET_sumEt() {
    if (!loaded_ChsMET_sumEt_) counter_uncached_ChsMET_sumEt_++;
    else counter_cached_ChsMET_sumEt_++;
    if (!loaded_ChsMET_sumEt_) {
        if (!b_ChsMET_sumEt_) throw std::runtime_error("ChsMET_sumEt branch doesn't exist");
        b_ChsMET_sumEt_->GetEntry(index);
        loaded_ChsMET_sumEt_ = true;
    }
    return ChsMET_sumEt_;
}
const vector<float> &Nano::CorrT1METJet_area() {
    if (!loaded_CorrT1METJet_area_) counter_uncached_CorrT1METJet_area_++;
    else counter_cached_CorrT1METJet_area_++;
    if (!loaded_CorrT1METJet_area_) {
        if (!b_CorrT1METJet_area_) throw std::runtime_error("CorrT1METJet_area branch doesn't exist");
        int bytes = b_CorrT1METJet_area_->GetEntry(index);
        v_CorrT1METJet_area_ = vector<float>(CorrT1METJet_area_,CorrT1METJet_area_+bytes/sizeof(CorrT1METJet_area_[0]));
        loaded_CorrT1METJet_area_ = true;
    }
    return v_CorrT1METJet_area_;
}
const vector<float> &Nano::CorrT1METJet_eta() {
    if (!loaded_CorrT1METJet_eta_) counter_uncached_CorrT1METJet_eta_++;
    else counter_cached_CorrT1METJet_eta_++;
    if (!loaded_CorrT1METJet_eta_) {
        if (!b_CorrT1METJet_eta_) throw std::runtime_error("CorrT1METJet_eta branch doesn't exist");
        int bytes = b_CorrT1METJet_eta_->GetEntry(index);
        v_CorrT1METJet_eta_ = vector<float>(CorrT1METJet_eta_,CorrT1METJet_eta_+bytes/sizeof(CorrT1METJet_eta_[0]));
        loaded_CorrT1METJet_eta_ = true;
    }
    return v_CorrT1METJet_eta_;
}
const vector<float> &Nano::CorrT1METJet_muonSubtrFactor() {
    if (!loaded_CorrT1METJet_muonSubtrFactor_) counter_uncached_CorrT1METJet_muonSubtrFactor_++;
    else counter_cached_CorrT1METJet_muonSubtrFactor_++;
    if (!loaded_CorrT1METJet_muonSubtrFactor_) {
        if (!b_CorrT1METJet_muonSubtrFactor_) throw std::runtime_error("CorrT1METJet_muonSubtrFactor branch doesn't exist");
        int bytes = b_CorrT1METJet_muonSubtrFactor_->GetEntry(index);
        v_CorrT1METJet_muonSubtrFactor_ = vector<float>(CorrT1METJet_muonSubtrFactor_,CorrT1METJet_muonSubtrFactor_+bytes/sizeof(CorrT1METJet_muonSubtrFactor_[0]));
        loaded_CorrT1METJet_muonSubtrFactor_ = true;
    }
    return v_CorrT1METJet_muonSubtrFactor_;
}
const vector<float> &Nano::CorrT1METJet_phi() {
    if (!loaded_CorrT1METJet_phi_) counter_uncached_CorrT1METJet_phi_++;
    else counter_cached_CorrT1METJet_phi_++;
    if (!loaded_CorrT1METJet_phi_) {
        if (!b_CorrT1METJet_phi_) throw std::runtime_error("CorrT1METJet_phi branch doesn't exist");
        int bytes = b_CorrT1METJet_phi_->GetEntry(index);
        v_CorrT1METJet_phi_ = vector<float>(CorrT1METJet_phi_,CorrT1METJet_phi_+bytes/sizeof(CorrT1METJet_phi_[0]));
        loaded_CorrT1METJet_phi_ = true;
    }
    return v_CorrT1METJet_phi_;
}
const vector<float> &Nano::CorrT1METJet_rawPt() {
    if (!loaded_CorrT1METJet_rawPt_) counter_uncached_CorrT1METJet_rawPt_++;
    else counter_cached_CorrT1METJet_rawPt_++;
    if (!loaded_CorrT1METJet_rawPt_) {
        if (!b_CorrT1METJet_rawPt_) throw std::runtime_error("CorrT1METJet_rawPt branch doesn't exist");
        int bytes = b_CorrT1METJet_rawPt_->GetEntry(index);
        v_CorrT1METJet_rawPt_ = vector<float>(CorrT1METJet_rawPt_,CorrT1METJet_rawPt_+bytes/sizeof(CorrT1METJet_rawPt_[0]));
        loaded_CorrT1METJet_rawPt_ = true;
    }
    return v_CorrT1METJet_rawPt_;
}
const float &Nano::DeepMETResolutionTune_phi() {
    if (!loaded_DeepMETResolutionTune_phi_) counter_uncached_DeepMETResolutionTune_phi_++;
    else counter_cached_DeepMETResolutionTune_phi_++;
    if (!loaded_DeepMETResolutionTune_phi_) {
        if (!b_DeepMETResolutionTune_phi_) throw std::runtime_error("DeepMETResolutionTune_phi branch doesn't exist");
        b_DeepMETResolutionTune_phi_->GetEntry(index);
        loaded_DeepMETResolutionTune_phi_ = true;
    }
    return DeepMETResolutionTune_phi_;
}
const float &Nano::DeepMETResolutionTune_pt() {
    if (!loaded_DeepMETResolutionTune_pt_) counter_uncached_DeepMETResolutionTune_pt_++;
    else counter_cached_DeepMETResolutionTune_pt_++;
    if (!loaded_DeepMETResolutionTune_pt_) {
        if (!b_DeepMETResolutionTune_pt_) throw std::runtime_error("DeepMETResolutionTune_pt branch doesn't exist");
        b_DeepMETResolutionTune_pt_->GetEntry(index);
        loaded_DeepMETResolutionTune_pt_ = true;
    }
    return DeepMETResolutionTune_pt_;
}
const float &Nano::DeepMETResponseTune_phi() {
    if (!loaded_DeepMETResponseTune_phi_) counter_uncached_DeepMETResponseTune_phi_++;
    else counter_cached_DeepMETResponseTune_phi_++;
    if (!loaded_DeepMETResponseTune_phi_) {
        if (!b_DeepMETResponseTune_phi_) throw std::runtime_error("DeepMETResponseTune_phi branch doesn't exist");
        b_DeepMETResponseTune_phi_->GetEntry(index);
        loaded_DeepMETResponseTune_phi_ = true;
    }
    return DeepMETResponseTune_phi_;
}
const float &Nano::DeepMETResponseTune_pt() {
    if (!loaded_DeepMETResponseTune_pt_) counter_uncached_DeepMETResponseTune_pt_++;
    else counter_cached_DeepMETResponseTune_pt_++;
    if (!loaded_DeepMETResponseTune_pt_) {
        if (!b_DeepMETResponseTune_pt_) throw std::runtime_error("DeepMETResponseTune_pt branch doesn't exist");
        b_DeepMETResponseTune_pt_->GetEntry(index);
        loaded_DeepMETResponseTune_pt_ = true;
    }
    return DeepMETResponseTune_pt_;
}
const vector<float> &Nano::EFTfitCoefficients() {
    if (!loaded_EFTfitCoefficients_) counter_uncached_EFTfitCoefficients_++;
    else counter_cached_EFTfitCoefficients_++;
    if (!loaded_EFTfitCoefficients_) {
        if (!b_EFTfitCoefficients_) throw std::runtime_error("EFTfitCoefficients branch doesn't exist");
        int bytes = b_EFTfitCoefficients_->GetEntry(index);
        v_EFTfitCoefficients_ = vector<float>(EFTfitCoefficients_,EFTfitCoefficients_+bytes/sizeof(EFTfitCoefficients_[0]));
        loaded_EFTfitCoefficients_ = true;
    }
    return v_EFTfitCoefficients_;
}
const vector<float> &Nano::Electron_CutBased_LooseID_SF() {
    if (!loaded_Electron_CutBased_LooseID_SF_) counter_uncached_Electron_CutBased_LooseID_SF_++;
    else counter_cached_Electron_CutBased_LooseID_SF_++;
    if (!loaded_Electron_CutBased_LooseID_SF_) {
        if (!b_Electron_CutBased_LooseID_SF_) throw std::runtime_error("Electron_CutBased_LooseID_SF branch doesn't exist");
        int bytes = b_Electron_CutBased_LooseID_SF_->GetEntry(index);
        v_Electron_CutBased_LooseID_SF_ = vector<float>(Electron_CutBased_LooseID_SF_,Electron_CutBased_LooseID_SF_+bytes/sizeof(Electron_CutBased_LooseID_SF_[0]));
        loaded_Electron_CutBased_LooseID_SF_ = true;
    }
    return v_Electron_CutBased_LooseID_SF_;
}
const vector<float> &Nano::Electron_CutBased_LooseID_SFerr() {
    if (!loaded_Electron_CutBased_LooseID_SFerr_) counter_uncached_Electron_CutBased_LooseID_SFerr_++;
    else counter_cached_Electron_CutBased_LooseID_SFerr_++;
    if (!loaded_Electron_CutBased_LooseID_SFerr_) {
        if (!b_Electron_CutBased_LooseID_SFerr_) throw std::runtime_error("Electron_CutBased_LooseID_SFerr branch doesn't exist");
        int bytes = b_Electron_CutBased_LooseID_SFerr_->GetEntry(index);
        v_Electron_CutBased_LooseID_SFerr_ = vector<float>(Electron_CutBased_LooseID_SFerr_,Electron_CutBased_LooseID_SFerr_+bytes/sizeof(Electron_CutBased_LooseID_SFerr_[0]));
        loaded_Electron_CutBased_LooseID_SFerr_ = true;
    }
    return v_Electron_CutBased_LooseID_SFerr_;
}
const vector<float> &Nano::Electron_CutBased_MediumID_SF() {
    if (!loaded_Electron_CutBased_MediumID_SF_) counter_uncached_Electron_CutBased_MediumID_SF_++;
    else counter_cached_Electron_CutBased_MediumID_SF_++;
    if (!loaded_Electron_CutBased_MediumID_SF_) {
        if (!b_Electron_CutBased_MediumID_SF_) throw std::runtime_error("Electron_CutBased_MediumID_SF branch doesn't exist");
        int bytes = b_Electron_CutBased_MediumID_SF_->GetEntry(index);
        v_Electron_CutBased_MediumID_SF_ = vector<float>(Electron_CutBased_MediumID_SF_,Electron_CutBased_MediumID_SF_+bytes/sizeof(Electron_CutBased_MediumID_SF_[0]));
        loaded_Electron_CutBased_MediumID_SF_ = true;
    }
    return v_Electron_CutBased_MediumID_SF_;
}
const vector<float> &Nano::Electron_CutBased_MediumID_SFerr() {
    if (!loaded_Electron_CutBased_MediumID_SFerr_) counter_uncached_Electron_CutBased_MediumID_SFerr_++;
    else counter_cached_Electron_CutBased_MediumID_SFerr_++;
    if (!loaded_Electron_CutBased_MediumID_SFerr_) {
        if (!b_Electron_CutBased_MediumID_SFerr_) throw std::runtime_error("Electron_CutBased_MediumID_SFerr branch doesn't exist");
        int bytes = b_Electron_CutBased_MediumID_SFerr_->GetEntry(index);
        v_Electron_CutBased_MediumID_SFerr_ = vector<float>(Electron_CutBased_MediumID_SFerr_,Electron_CutBased_MediumID_SFerr_+bytes/sizeof(Electron_CutBased_MediumID_SFerr_[0]));
        loaded_Electron_CutBased_MediumID_SFerr_ = true;
    }
    return v_Electron_CutBased_MediumID_SFerr_;
}
const vector<float> &Nano::Electron_CutBased_TightID_SF() {
    if (!loaded_Electron_CutBased_TightID_SF_) counter_uncached_Electron_CutBased_TightID_SF_++;
    else counter_cached_Electron_CutBased_TightID_SF_++;
    if (!loaded_Electron_CutBased_TightID_SF_) {
        if (!b_Electron_CutBased_TightID_SF_) throw std::runtime_error("Electron_CutBased_TightID_SF branch doesn't exist");
        int bytes = b_Electron_CutBased_TightID_SF_->GetEntry(index);
        v_Electron_CutBased_TightID_SF_ = vector<float>(Electron_CutBased_TightID_SF_,Electron_CutBased_TightID_SF_+bytes/sizeof(Electron_CutBased_TightID_SF_[0]));
        loaded_Electron_CutBased_TightID_SF_ = true;
    }
    return v_Electron_CutBased_TightID_SF_;
}
const vector<float> &Nano::Electron_CutBased_TightID_SFerr() {
    if (!loaded_Electron_CutBased_TightID_SFerr_) counter_uncached_Electron_CutBased_TightID_SFerr_++;
    else counter_cached_Electron_CutBased_TightID_SFerr_++;
    if (!loaded_Electron_CutBased_TightID_SFerr_) {
        if (!b_Electron_CutBased_TightID_SFerr_) throw std::runtime_error("Electron_CutBased_TightID_SFerr branch doesn't exist");
        int bytes = b_Electron_CutBased_TightID_SFerr_->GetEntry(index);
        v_Electron_CutBased_TightID_SFerr_ = vector<float>(Electron_CutBased_TightID_SFerr_,Electron_CutBased_TightID_SFerr_+bytes/sizeof(Electron_CutBased_TightID_SFerr_[0]));
        loaded_Electron_CutBased_TightID_SFerr_ = true;
    }
    return v_Electron_CutBased_TightID_SFerr_;
}
const vector<float> &Nano::Electron_CutBased_VetoID_SF() {
    if (!loaded_Electron_CutBased_VetoID_SF_) counter_uncached_Electron_CutBased_VetoID_SF_++;
    else counter_cached_Electron_CutBased_VetoID_SF_++;
    if (!loaded_Electron_CutBased_VetoID_SF_) {
        if (!b_Electron_CutBased_VetoID_SF_) throw std::runtime_error("Electron_CutBased_VetoID_SF branch doesn't exist");
        int bytes = b_Electron_CutBased_VetoID_SF_->GetEntry(index);
        v_Electron_CutBased_VetoID_SF_ = vector<float>(Electron_CutBased_VetoID_SF_,Electron_CutBased_VetoID_SF_+bytes/sizeof(Electron_CutBased_VetoID_SF_[0]));
        loaded_Electron_CutBased_VetoID_SF_ = true;
    }
    return v_Electron_CutBased_VetoID_SF_;
}
const vector<float> &Nano::Electron_CutBased_VetoID_SFerr() {
    if (!loaded_Electron_CutBased_VetoID_SFerr_) counter_uncached_Electron_CutBased_VetoID_SFerr_++;
    else counter_cached_Electron_CutBased_VetoID_SFerr_++;
    if (!loaded_Electron_CutBased_VetoID_SFerr_) {
        if (!b_Electron_CutBased_VetoID_SFerr_) throw std::runtime_error("Electron_CutBased_VetoID_SFerr branch doesn't exist");
        int bytes = b_Electron_CutBased_VetoID_SFerr_->GetEntry(index);
        v_Electron_CutBased_VetoID_SFerr_ = vector<float>(Electron_CutBased_VetoID_SFerr_,Electron_CutBased_VetoID_SFerr_+bytes/sizeof(Electron_CutBased_VetoID_SFerr_[0]));
        loaded_Electron_CutBased_VetoID_SFerr_ = true;
    }
    return v_Electron_CutBased_VetoID_SFerr_;
}
const vector<float> &Nano::Electron_MVAFall17V2Iso_WP80_SF() {
    if (!loaded_Electron_MVAFall17V2Iso_WP80_SF_) counter_uncached_Electron_MVAFall17V2Iso_WP80_SF_++;
    else counter_cached_Electron_MVAFall17V2Iso_WP80_SF_++;
    if (!loaded_Electron_MVAFall17V2Iso_WP80_SF_) {
        if (!b_Electron_MVAFall17V2Iso_WP80_SF_) throw std::runtime_error("Electron_MVAFall17V2Iso_WP80_SF branch doesn't exist");
        int bytes = b_Electron_MVAFall17V2Iso_WP80_SF_->GetEntry(index);
        v_Electron_MVAFall17V2Iso_WP80_SF_ = vector<float>(Electron_MVAFall17V2Iso_WP80_SF_,Electron_MVAFall17V2Iso_WP80_SF_+bytes/sizeof(Electron_MVAFall17V2Iso_WP80_SF_[0]));
        loaded_Electron_MVAFall17V2Iso_WP80_SF_ = true;
    }
    return v_Electron_MVAFall17V2Iso_WP80_SF_;
}
const vector<float> &Nano::Electron_MVAFall17V2Iso_WP80_SFerr() {
    if (!loaded_Electron_MVAFall17V2Iso_WP80_SFerr_) counter_uncached_Electron_MVAFall17V2Iso_WP80_SFerr_++;
    else counter_cached_Electron_MVAFall17V2Iso_WP80_SFerr_++;
    if (!loaded_Electron_MVAFall17V2Iso_WP80_SFerr_) {
        if (!b_Electron_MVAFall17V2Iso_WP80_SFerr_) throw std::runtime_error("Electron_MVAFall17V2Iso_WP80_SFerr branch doesn't exist");
        int bytes = b_Electron_MVAFall17V2Iso_WP80_SFerr_->GetEntry(index);
        v_Electron_MVAFall17V2Iso_WP80_SFerr_ = vector<float>(Electron_MVAFall17V2Iso_WP80_SFerr_,Electron_MVAFall17V2Iso_WP80_SFerr_+bytes/sizeof(Electron_MVAFall17V2Iso_WP80_SFerr_[0]));
        loaded_Electron_MVAFall17V2Iso_WP80_SFerr_ = true;
    }
    return v_Electron_MVAFall17V2Iso_WP80_SFerr_;
}
const vector<float> &Nano::Electron_MVAFall17V2Iso_WP90_SF() {
    if (!loaded_Electron_MVAFall17V2Iso_WP90_SF_) counter_uncached_Electron_MVAFall17V2Iso_WP90_SF_++;
    else counter_cached_Electron_MVAFall17V2Iso_WP90_SF_++;
    if (!loaded_Electron_MVAFall17V2Iso_WP90_SF_) {
        if (!b_Electron_MVAFall17V2Iso_WP90_SF_) throw std::runtime_error("Electron_MVAFall17V2Iso_WP90_SF branch doesn't exist");
        int bytes = b_Electron_MVAFall17V2Iso_WP90_SF_->GetEntry(index);
        v_Electron_MVAFall17V2Iso_WP90_SF_ = vector<float>(Electron_MVAFall17V2Iso_WP90_SF_,Electron_MVAFall17V2Iso_WP90_SF_+bytes/sizeof(Electron_MVAFall17V2Iso_WP90_SF_[0]));
        loaded_Electron_MVAFall17V2Iso_WP90_SF_ = true;
    }
    return v_Electron_MVAFall17V2Iso_WP90_SF_;
}
const vector<float> &Nano::Electron_MVAFall17V2Iso_WP90_SFerr() {
    if (!loaded_Electron_MVAFall17V2Iso_WP90_SFerr_) counter_uncached_Electron_MVAFall17V2Iso_WP90_SFerr_++;
    else counter_cached_Electron_MVAFall17V2Iso_WP90_SFerr_++;
    if (!loaded_Electron_MVAFall17V2Iso_WP90_SFerr_) {
        if (!b_Electron_MVAFall17V2Iso_WP90_SFerr_) throw std::runtime_error("Electron_MVAFall17V2Iso_WP90_SFerr branch doesn't exist");
        int bytes = b_Electron_MVAFall17V2Iso_WP90_SFerr_->GetEntry(index);
        v_Electron_MVAFall17V2Iso_WP90_SFerr_ = vector<float>(Electron_MVAFall17V2Iso_WP90_SFerr_,Electron_MVAFall17V2Iso_WP90_SFerr_+bytes/sizeof(Electron_MVAFall17V2Iso_WP90_SFerr_[0]));
        loaded_Electron_MVAFall17V2Iso_WP90_SFerr_ = true;
    }
    return v_Electron_MVAFall17V2Iso_WP90_SFerr_;
}
const vector<float> &Nano::Electron_MVAFall17V2noIso_WP80_SF() {
    if (!loaded_Electron_MVAFall17V2noIso_WP80_SF_) counter_uncached_Electron_MVAFall17V2noIso_WP80_SF_++;
    else counter_cached_Electron_MVAFall17V2noIso_WP80_SF_++;
    if (!loaded_Electron_MVAFall17V2noIso_WP80_SF_) {
        if (!b_Electron_MVAFall17V2noIso_WP80_SF_) throw std::runtime_error("Electron_MVAFall17V2noIso_WP80_SF branch doesn't exist");
        int bytes = b_Electron_MVAFall17V2noIso_WP80_SF_->GetEntry(index);
        v_Electron_MVAFall17V2noIso_WP80_SF_ = vector<float>(Electron_MVAFall17V2noIso_WP80_SF_,Electron_MVAFall17V2noIso_WP80_SF_+bytes/sizeof(Electron_MVAFall17V2noIso_WP80_SF_[0]));
        loaded_Electron_MVAFall17V2noIso_WP80_SF_ = true;
    }
    return v_Electron_MVAFall17V2noIso_WP80_SF_;
}
const vector<float> &Nano::Electron_MVAFall17V2noIso_WP80_SFerr() {
    if (!loaded_Electron_MVAFall17V2noIso_WP80_SFerr_) counter_uncached_Electron_MVAFall17V2noIso_WP80_SFerr_++;
    else counter_cached_Electron_MVAFall17V2noIso_WP80_SFerr_++;
    if (!loaded_Electron_MVAFall17V2noIso_WP80_SFerr_) {
        if (!b_Electron_MVAFall17V2noIso_WP80_SFerr_) throw std::runtime_error("Electron_MVAFall17V2noIso_WP80_SFerr branch doesn't exist");
        int bytes = b_Electron_MVAFall17V2noIso_WP80_SFerr_->GetEntry(index);
        v_Electron_MVAFall17V2noIso_WP80_SFerr_ = vector<float>(Electron_MVAFall17V2noIso_WP80_SFerr_,Electron_MVAFall17V2noIso_WP80_SFerr_+bytes/sizeof(Electron_MVAFall17V2noIso_WP80_SFerr_[0]));
        loaded_Electron_MVAFall17V2noIso_WP80_SFerr_ = true;
    }
    return v_Electron_MVAFall17V2noIso_WP80_SFerr_;
}
const vector<float> &Nano::Electron_MVAFall17V2noIso_WP90_SF() {
    if (!loaded_Electron_MVAFall17V2noIso_WP90_SF_) counter_uncached_Electron_MVAFall17V2noIso_WP90_SF_++;
    else counter_cached_Electron_MVAFall17V2noIso_WP90_SF_++;
    if (!loaded_Electron_MVAFall17V2noIso_WP90_SF_) {
        if (!b_Electron_MVAFall17V2noIso_WP90_SF_) throw std::runtime_error("Electron_MVAFall17V2noIso_WP90_SF branch doesn't exist");
        int bytes = b_Electron_MVAFall17V2noIso_WP90_SF_->GetEntry(index);
        v_Electron_MVAFall17V2noIso_WP90_SF_ = vector<float>(Electron_MVAFall17V2noIso_WP90_SF_,Electron_MVAFall17V2noIso_WP90_SF_+bytes/sizeof(Electron_MVAFall17V2noIso_WP90_SF_[0]));
        loaded_Electron_MVAFall17V2noIso_WP90_SF_ = true;
    }
    return v_Electron_MVAFall17V2noIso_WP90_SF_;
}
const vector<float> &Nano::Electron_MVAFall17V2noIso_WP90_SFerr() {
    if (!loaded_Electron_MVAFall17V2noIso_WP90_SFerr_) counter_uncached_Electron_MVAFall17V2noIso_WP90_SFerr_++;
    else counter_cached_Electron_MVAFall17V2noIso_WP90_SFerr_++;
    if (!loaded_Electron_MVAFall17V2noIso_WP90_SFerr_) {
        if (!b_Electron_MVAFall17V2noIso_WP90_SFerr_) throw std::runtime_error("Electron_MVAFall17V2noIso_WP90_SFerr branch doesn't exist");
        int bytes = b_Electron_MVAFall17V2noIso_WP90_SFerr_->GetEntry(index);
        v_Electron_MVAFall17V2noIso_WP90_SFerr_ = vector<float>(Electron_MVAFall17V2noIso_WP90_SFerr_,Electron_MVAFall17V2noIso_WP90_SFerr_+bytes/sizeof(Electron_MVAFall17V2noIso_WP90_SFerr_[0]));
        loaded_Electron_MVAFall17V2noIso_WP90_SFerr_ = true;
    }
    return v_Electron_MVAFall17V2noIso_WP90_SFerr_;
}
const vector<float> &Nano::Electron_RECO_SF() {
    if (!loaded_Electron_RECO_SF_) counter_uncached_Electron_RECO_SF_++;
    else counter_cached_Electron_RECO_SF_++;
    if (!loaded_Electron_RECO_SF_) {
        if (!b_Electron_RECO_SF_) throw std::runtime_error("Electron_RECO_SF branch doesn't exist");
        int bytes = b_Electron_RECO_SF_->GetEntry(index);
        v_Electron_RECO_SF_ = vector<float>(Electron_RECO_SF_,Electron_RECO_SF_+bytes/sizeof(Electron_RECO_SF_[0]));
        loaded_Electron_RECO_SF_ = true;
    }
    return v_Electron_RECO_SF_;
}
const vector<float> &Nano::Electron_RECO_SFerr() {
    if (!loaded_Electron_RECO_SFerr_) counter_uncached_Electron_RECO_SFerr_++;
    else counter_cached_Electron_RECO_SFerr_++;
    if (!loaded_Electron_RECO_SFerr_) {
        if (!b_Electron_RECO_SFerr_) throw std::runtime_error("Electron_RECO_SFerr branch doesn't exist");
        int bytes = b_Electron_RECO_SFerr_->GetEntry(index);
        v_Electron_RECO_SFerr_ = vector<float>(Electron_RECO_SFerr_,Electron_RECO_SFerr_+bytes/sizeof(Electron_RECO_SFerr_[0]));
        loaded_Electron_RECO_SFerr_ = true;
    }
    return v_Electron_RECO_SFerr_;
}
const vector<int> &Nano::Electron_charge() {
    if (!loaded_Electron_charge_) counter_uncached_Electron_charge_++;
    else counter_cached_Electron_charge_++;
    if (!loaded_Electron_charge_) {
        if (!b_Electron_charge_) throw std::runtime_error("Electron_charge branch doesn't exist");
        int bytes = b_Electron_charge_->GetEntry(index);
        v_Electron_charge_ = vector<int>(Electron_charge_,Electron_charge_+bytes/sizeof(Electron_charge_[0]));
        loaded_Electron_charge_ = true;
    }
    return v_Electron_charge_;
}
const vector<UChar_t> &Nano::Electron_cleanmask() {
    if (!loaded_Electron_cleanmask_) counter_uncached_Electron_cleanmask_++;
    else counter_cached_Electron_cleanmask_++;
    if (!loaded_Electron_cleanmask_) {
        if (!b_Electron_cleanmask_) throw std::runtime_error("Electron_cleanmask branch doesn't exist");
        int bytes = b_Electron_cleanmask_->GetEntry(index);
        v_Electron_cleanmask_ = vector<UChar_t>(Electron_cleanmask_,Electron_cleanmask_+bytes/sizeof(Electron_cleanmask_[0]));
        loaded_Electron_cleanmask_ = true;
    }
    return v_Electron_cleanmask_;
}
const vector<bool> &Nano::Electron_convVeto() {
    if (!loaded_Electron_convVeto_) counter_uncached_Electron_convVeto_++;
    else counter_cached_Electron_convVeto_++;
    if (!loaded_Electron_convVeto_) {
        if (!b_Electron_convVeto_) throw std::runtime_error("Electron_convVeto branch doesn't exist");
        int bytes = b_Electron_convVeto_->GetEntry(index);
        v_Electron_convVeto_ = vector<bool>(Electron_convVeto_,Electron_convVeto_+bytes/sizeof(Electron_convVeto_[0]));
        loaded_Electron_convVeto_ = true;
    }
    return v_Electron_convVeto_;
}
const vector<int> &Nano::Electron_cutBased() {
    if (!loaded_Electron_cutBased_) counter_uncached_Electron_cutBased_++;
    else counter_cached_Electron_cutBased_++;
    if (!loaded_Electron_cutBased_) {
        if (!b_Electron_cutBased_) throw std::runtime_error("Electron_cutBased branch doesn't exist");
        int bytes = b_Electron_cutBased_->GetEntry(index);
        v_Electron_cutBased_ = vector<int>(Electron_cutBased_,Electron_cutBased_+bytes/sizeof(Electron_cutBased_[0]));
        loaded_Electron_cutBased_ = true;
    }
    return v_Electron_cutBased_;
}
const vector<int> &Nano::Electron_cutBased17() {
    if (!loaded_Electron_cutBased17_) counter_uncached_Electron_cutBased17_++;
    else counter_cached_Electron_cutBased17_++;
    if (!loaded_Electron_cutBased17_) {
        if (!b_Electron_cutBased17_) throw std::runtime_error("Electron_cutBased17 branch doesn't exist");
        int bytes = b_Electron_cutBased17_->GetEntry(index);
        v_Electron_cutBased17_ = vector<int>(Electron_cutBased17_,Electron_cutBased17_+bytes/sizeof(Electron_cutBased17_[0]));
        loaded_Electron_cutBased17_ = true;
    }
    return v_Electron_cutBased17_;
}
const vector<int> &Nano::Electron_cutBased_Fall17V2() {
    if (!loaded_Electron_cutBased_Fall17V2_) counter_uncached_Electron_cutBased_Fall17V2_++;
    else counter_cached_Electron_cutBased_Fall17V2_++;
    if (!loaded_Electron_cutBased_Fall17V2_) {
        if (!b_Electron_cutBased_Fall17V2_) throw std::runtime_error("Electron_cutBased_Fall17V2 branch doesn't exist");
        int bytes = b_Electron_cutBased_Fall17V2_->GetEntry(index);
        v_Electron_cutBased_Fall17V2_ = vector<int>(Electron_cutBased_Fall17V2_,Electron_cutBased_Fall17V2_+bytes/sizeof(Electron_cutBased_Fall17V2_[0]));
        loaded_Electron_cutBased_Fall17V2_ = true;
    }
    return v_Electron_cutBased_Fall17V2_;
}
const vector<int> &Nano::Electron_cutBased_Fall17_V1() {
    if (!loaded_Electron_cutBased_Fall17_V1_) counter_uncached_Electron_cutBased_Fall17_V1_++;
    else counter_cached_Electron_cutBased_Fall17_V1_++;
    if (!loaded_Electron_cutBased_Fall17_V1_) {
        if (!b_Electron_cutBased_Fall17_V1_) throw std::runtime_error("Electron_cutBased_Fall17_V1 branch doesn't exist");
        int bytes = b_Electron_cutBased_Fall17_V1_->GetEntry(index);
        v_Electron_cutBased_Fall17_V1_ = vector<int>(Electron_cutBased_Fall17_V1_,Electron_cutBased_Fall17_V1_+bytes/sizeof(Electron_cutBased_Fall17_V1_[0]));
        loaded_Electron_cutBased_Fall17_V1_ = true;
    }
    return v_Electron_cutBased_Fall17_V1_;
}
const vector<bool> &Nano::Electron_cutBased_HEEP() {
    if (!loaded_Electron_cutBased_HEEP_) counter_uncached_Electron_cutBased_HEEP_++;
    else counter_cached_Electron_cutBased_HEEP_++;
    if (!loaded_Electron_cutBased_HEEP_) {
        if (!b_Electron_cutBased_HEEP_) throw std::runtime_error("Electron_cutBased_HEEP branch doesn't exist");
        int bytes = b_Electron_cutBased_HEEP_->GetEntry(index);
        v_Electron_cutBased_HEEP_ = vector<bool>(Electron_cutBased_HEEP_,Electron_cutBased_HEEP_+bytes/sizeof(Electron_cutBased_HEEP_[0]));
        loaded_Electron_cutBased_HEEP_ = true;
    }
    return v_Electron_cutBased_HEEP_;
}
const vector<int> &Nano::Electron_cutBased_HLTPreSel() {
    if (!loaded_Electron_cutBased_HLTPreSel_) counter_uncached_Electron_cutBased_HLTPreSel_++;
    else counter_cached_Electron_cutBased_HLTPreSel_++;
    if (!loaded_Electron_cutBased_HLTPreSel_) {
        if (!b_Electron_cutBased_HLTPreSel_) throw std::runtime_error("Electron_cutBased_HLTPreSel branch doesn't exist");
        int bytes = b_Electron_cutBased_HLTPreSel_->GetEntry(index);
        v_Electron_cutBased_HLTPreSel_ = vector<int>(Electron_cutBased_HLTPreSel_,Electron_cutBased_HLTPreSel_+bytes/sizeof(Electron_cutBased_HLTPreSel_[0]));
        loaded_Electron_cutBased_HLTPreSel_ = true;
    }
    return v_Electron_cutBased_HLTPreSel_;
}
const vector<float> &Nano::Electron_dEscaleDown() {
    if (!loaded_Electron_dEscaleDown_) counter_uncached_Electron_dEscaleDown_++;
    else counter_cached_Electron_dEscaleDown_++;
    if (!loaded_Electron_dEscaleDown_) {
        if (!b_Electron_dEscaleDown_) throw std::runtime_error("Electron_dEscaleDown branch doesn't exist");
        int bytes = b_Electron_dEscaleDown_->GetEntry(index);
        v_Electron_dEscaleDown_ = vector<float>(Electron_dEscaleDown_,Electron_dEscaleDown_+bytes/sizeof(Electron_dEscaleDown_[0]));
        loaded_Electron_dEscaleDown_ = true;
    }
    return v_Electron_dEscaleDown_;
}
const vector<float> &Nano::Electron_dEscaleUp() {
    if (!loaded_Electron_dEscaleUp_) counter_uncached_Electron_dEscaleUp_++;
    else counter_cached_Electron_dEscaleUp_++;
    if (!loaded_Electron_dEscaleUp_) {
        if (!b_Electron_dEscaleUp_) throw std::runtime_error("Electron_dEscaleUp branch doesn't exist");
        int bytes = b_Electron_dEscaleUp_->GetEntry(index);
        v_Electron_dEscaleUp_ = vector<float>(Electron_dEscaleUp_,Electron_dEscaleUp_+bytes/sizeof(Electron_dEscaleUp_[0]));
        loaded_Electron_dEscaleUp_ = true;
    }
    return v_Electron_dEscaleUp_;
}
const vector<float> &Nano::Electron_dEsigmaDown() {
    if (!loaded_Electron_dEsigmaDown_) counter_uncached_Electron_dEsigmaDown_++;
    else counter_cached_Electron_dEsigmaDown_++;
    if (!loaded_Electron_dEsigmaDown_) {
        if (!b_Electron_dEsigmaDown_) throw std::runtime_error("Electron_dEsigmaDown branch doesn't exist");
        int bytes = b_Electron_dEsigmaDown_->GetEntry(index);
        v_Electron_dEsigmaDown_ = vector<float>(Electron_dEsigmaDown_,Electron_dEsigmaDown_+bytes/sizeof(Electron_dEsigmaDown_[0]));
        loaded_Electron_dEsigmaDown_ = true;
    }
    return v_Electron_dEsigmaDown_;
}
const vector<float> &Nano::Electron_dEsigmaUp() {
    if (!loaded_Electron_dEsigmaUp_) counter_uncached_Electron_dEsigmaUp_++;
    else counter_cached_Electron_dEsigmaUp_++;
    if (!loaded_Electron_dEsigmaUp_) {
        if (!b_Electron_dEsigmaUp_) throw std::runtime_error("Electron_dEsigmaUp branch doesn't exist");
        int bytes = b_Electron_dEsigmaUp_->GetEntry(index);
        v_Electron_dEsigmaUp_ = vector<float>(Electron_dEsigmaUp_,Electron_dEsigmaUp_+bytes/sizeof(Electron_dEsigmaUp_[0]));
        loaded_Electron_dEsigmaUp_ = true;
    }
    return v_Electron_dEsigmaUp_;
}
const vector<float> &Nano::Electron_deltaEtaSC() {
    if (!loaded_Electron_deltaEtaSC_) counter_uncached_Electron_deltaEtaSC_++;
    else counter_cached_Electron_deltaEtaSC_++;
    if (!loaded_Electron_deltaEtaSC_) {
        if (!b_Electron_deltaEtaSC_) throw std::runtime_error("Electron_deltaEtaSC branch doesn't exist");
        int bytes = b_Electron_deltaEtaSC_->GetEntry(index);
        v_Electron_deltaEtaSC_ = vector<float>(Electron_deltaEtaSC_,Electron_deltaEtaSC_+bytes/sizeof(Electron_deltaEtaSC_[0]));
        loaded_Electron_deltaEtaSC_ = true;
    }
    return v_Electron_deltaEtaSC_;
}
const vector<float> &Nano::Electron_dr03EcalRecHitSumEt() {
    if (!loaded_Electron_dr03EcalRecHitSumEt_) counter_uncached_Electron_dr03EcalRecHitSumEt_++;
    else counter_cached_Electron_dr03EcalRecHitSumEt_++;
    if (!loaded_Electron_dr03EcalRecHitSumEt_) {
        if (!b_Electron_dr03EcalRecHitSumEt_) throw std::runtime_error("Electron_dr03EcalRecHitSumEt branch doesn't exist");
        int bytes = b_Electron_dr03EcalRecHitSumEt_->GetEntry(index);
        v_Electron_dr03EcalRecHitSumEt_ = vector<float>(Electron_dr03EcalRecHitSumEt_,Electron_dr03EcalRecHitSumEt_+bytes/sizeof(Electron_dr03EcalRecHitSumEt_[0]));
        loaded_Electron_dr03EcalRecHitSumEt_ = true;
    }
    return v_Electron_dr03EcalRecHitSumEt_;
}
const vector<float> &Nano::Electron_dr03HcalDepth1TowerSumEt() {
    if (!loaded_Electron_dr03HcalDepth1TowerSumEt_) counter_uncached_Electron_dr03HcalDepth1TowerSumEt_++;
    else counter_cached_Electron_dr03HcalDepth1TowerSumEt_++;
    if (!loaded_Electron_dr03HcalDepth1TowerSumEt_) {
        if (!b_Electron_dr03HcalDepth1TowerSumEt_) throw std::runtime_error("Electron_dr03HcalDepth1TowerSumEt branch doesn't exist");
        int bytes = b_Electron_dr03HcalDepth1TowerSumEt_->GetEntry(index);
        v_Electron_dr03HcalDepth1TowerSumEt_ = vector<float>(Electron_dr03HcalDepth1TowerSumEt_,Electron_dr03HcalDepth1TowerSumEt_+bytes/sizeof(Electron_dr03HcalDepth1TowerSumEt_[0]));
        loaded_Electron_dr03HcalDepth1TowerSumEt_ = true;
    }
    return v_Electron_dr03HcalDepth1TowerSumEt_;
}
const vector<float> &Nano::Electron_dr03TkSumPt() {
    if (!loaded_Electron_dr03TkSumPt_) counter_uncached_Electron_dr03TkSumPt_++;
    else counter_cached_Electron_dr03TkSumPt_++;
    if (!loaded_Electron_dr03TkSumPt_) {
        if (!b_Electron_dr03TkSumPt_) throw std::runtime_error("Electron_dr03TkSumPt branch doesn't exist");
        int bytes = b_Electron_dr03TkSumPt_->GetEntry(index);
        v_Electron_dr03TkSumPt_ = vector<float>(Electron_dr03TkSumPt_,Electron_dr03TkSumPt_+bytes/sizeof(Electron_dr03TkSumPt_[0]));
        loaded_Electron_dr03TkSumPt_ = true;
    }
    return v_Electron_dr03TkSumPt_;
}
const vector<float> &Nano::Electron_dr03TkSumPtHEEP() {
    if (!loaded_Electron_dr03TkSumPtHEEP_) counter_uncached_Electron_dr03TkSumPtHEEP_++;
    else counter_cached_Electron_dr03TkSumPtHEEP_++;
    if (!loaded_Electron_dr03TkSumPtHEEP_) {
        if (!b_Electron_dr03TkSumPtHEEP_) throw std::runtime_error("Electron_dr03TkSumPtHEEP branch doesn't exist");
        int bytes = b_Electron_dr03TkSumPtHEEP_->GetEntry(index);
        v_Electron_dr03TkSumPtHEEP_ = vector<float>(Electron_dr03TkSumPtHEEP_,Electron_dr03TkSumPtHEEP_+bytes/sizeof(Electron_dr03TkSumPtHEEP_[0]));
        loaded_Electron_dr03TkSumPtHEEP_ = true;
    }
    return v_Electron_dr03TkSumPtHEEP_;
}
const vector<float> &Nano::Electron_dxy() {
    if (!loaded_Electron_dxy_) counter_uncached_Electron_dxy_++;
    else counter_cached_Electron_dxy_++;
    if (!loaded_Electron_dxy_) {
        if (!b_Electron_dxy_) throw std::runtime_error("Electron_dxy branch doesn't exist");
        int bytes = b_Electron_dxy_->GetEntry(index);
        v_Electron_dxy_ = vector<float>(Electron_dxy_,Electron_dxy_+bytes/sizeof(Electron_dxy_[0]));
        loaded_Electron_dxy_ = true;
    }
    return v_Electron_dxy_;
}
const vector<float> &Nano::Electron_dxyErr() {
    if (!loaded_Electron_dxyErr_) counter_uncached_Electron_dxyErr_++;
    else counter_cached_Electron_dxyErr_++;
    if (!loaded_Electron_dxyErr_) {
        if (!b_Electron_dxyErr_) throw std::runtime_error("Electron_dxyErr branch doesn't exist");
        int bytes = b_Electron_dxyErr_->GetEntry(index);
        v_Electron_dxyErr_ = vector<float>(Electron_dxyErr_,Electron_dxyErr_+bytes/sizeof(Electron_dxyErr_[0]));
        loaded_Electron_dxyErr_ = true;
    }
    return v_Electron_dxyErr_;
}
const vector<float> &Nano::Electron_dz() {
    if (!loaded_Electron_dz_) counter_uncached_Electron_dz_++;
    else counter_cached_Electron_dz_++;
    if (!loaded_Electron_dz_) {
        if (!b_Electron_dz_) throw std::runtime_error("Electron_dz branch doesn't exist");
        int bytes = b_Electron_dz_->GetEntry(index);
        v_Electron_dz_ = vector<float>(Electron_dz_,Electron_dz_+bytes/sizeof(Electron_dz_[0]));
        loaded_Electron_dz_ = true;
    }
    return v_Electron_dz_;
}
const vector<float> &Nano::Electron_dzErr() {
    if (!loaded_Electron_dzErr_) counter_uncached_Electron_dzErr_++;
    else counter_cached_Electron_dzErr_++;
    if (!loaded_Electron_dzErr_) {
        if (!b_Electron_dzErr_) throw std::runtime_error("Electron_dzErr branch doesn't exist");
        int bytes = b_Electron_dzErr_->GetEntry(index);
        v_Electron_dzErr_ = vector<float>(Electron_dzErr_,Electron_dzErr_+bytes/sizeof(Electron_dzErr_[0]));
        loaded_Electron_dzErr_ = true;
    }
    return v_Electron_dzErr_;
}
const vector<float> &Nano::Electron_eCorr() {
    if (!loaded_Electron_eCorr_) counter_uncached_Electron_eCorr_++;
    else counter_cached_Electron_eCorr_++;
    if (!loaded_Electron_eCorr_) {
        if (!b_Electron_eCorr_) throw std::runtime_error("Electron_eCorr branch doesn't exist");
        int bytes = b_Electron_eCorr_->GetEntry(index);
        v_Electron_eCorr_ = vector<float>(Electron_eCorr_,Electron_eCorr_+bytes/sizeof(Electron_eCorr_[0]));
        loaded_Electron_eCorr_ = true;
    }
    return v_Electron_eCorr_;
}
const vector<float> &Nano::Electron_eInvMinusPInv() {
    if (!loaded_Electron_eInvMinusPInv_) counter_uncached_Electron_eInvMinusPInv_++;
    else counter_cached_Electron_eInvMinusPInv_++;
    if (!loaded_Electron_eInvMinusPInv_) {
        if (!b_Electron_eInvMinusPInv_) throw std::runtime_error("Electron_eInvMinusPInv branch doesn't exist");
        int bytes = b_Electron_eInvMinusPInv_->GetEntry(index);
        v_Electron_eInvMinusPInv_ = vector<float>(Electron_eInvMinusPInv_,Electron_eInvMinusPInv_+bytes/sizeof(Electron_eInvMinusPInv_[0]));
        loaded_Electron_eInvMinusPInv_ = true;
    }
    return v_Electron_eInvMinusPInv_;
}
const vector<float> &Nano::Electron_energyErr() {
    if (!loaded_Electron_energyErr_) counter_uncached_Electron_energyErr_++;
    else counter_cached_Electron_energyErr_++;
    if (!loaded_Electron_energyErr_) {
        if (!b_Electron_energyErr_) throw std::runtime_error("Electron_energyErr branch doesn't exist");
        int bytes = b_Electron_energyErr_->GetEntry(index);
        v_Electron_energyErr_ = vector<float>(Electron_energyErr_,Electron_energyErr_+bytes/sizeof(Electron_energyErr_[0]));
        loaded_Electron_energyErr_ = true;
    }
    return v_Electron_energyErr_;
}
const vector<float> &Nano::Electron_eta() {
    if (!loaded_Electron_eta_) counter_uncached_Electron_eta_++;
    else counter_cached_Electron_eta_++;
    if (!loaded_Electron_eta_) {
        if (!b_Electron_eta_) throw std::runtime_error("Electron_eta branch doesn't exist");
        int bytes = b_Electron_eta_->GetEntry(index);
        v_Electron_eta_ = vector<float>(Electron_eta_,Electron_eta_+bytes/sizeof(Electron_eta_[0]));
        loaded_Electron_eta_ = true;
    }
    return v_Electron_eta_;
}
const vector<int> &Nano::Electron_fsrPhotonIdx() {
    if (!loaded_Electron_fsrPhotonIdx_) counter_uncached_Electron_fsrPhotonIdx_++;
    else counter_cached_Electron_fsrPhotonIdx_++;
    if (!loaded_Electron_fsrPhotonIdx_) {
        if (!b_Electron_fsrPhotonIdx_) throw std::runtime_error("Electron_fsrPhotonIdx branch doesn't exist");
        int bytes = b_Electron_fsrPhotonIdx_->GetEntry(index);
        v_Electron_fsrPhotonIdx_ = vector<int>(Electron_fsrPhotonIdx_,Electron_fsrPhotonIdx_+bytes/sizeof(Electron_fsrPhotonIdx_[0]));
        loaded_Electron_fsrPhotonIdx_ = true;
    }
    return v_Electron_fsrPhotonIdx_;
}
const vector<UChar_t> &Nano::Electron_genPartFlav() {
    if (!loaded_Electron_genPartFlav_) counter_uncached_Electron_genPartFlav_++;
    else counter_cached_Electron_genPartFlav_++;
    if (!loaded_Electron_genPartFlav_) {
        if (!b_Electron_genPartFlav_) throw std::runtime_error("Electron_genPartFlav branch doesn't exist");
        int bytes = b_Electron_genPartFlav_->GetEntry(index);
        v_Electron_genPartFlav_ = vector<UChar_t>(Electron_genPartFlav_,Electron_genPartFlav_+bytes/sizeof(Electron_genPartFlav_[0]));
        loaded_Electron_genPartFlav_ = true;
    }
    return v_Electron_genPartFlav_;
}
const vector<int> &Nano::Electron_genPartIdx() {
    if (!loaded_Electron_genPartIdx_) counter_uncached_Electron_genPartIdx_++;
    else counter_cached_Electron_genPartIdx_++;
    if (!loaded_Electron_genPartIdx_) {
        if (!b_Electron_genPartIdx_) throw std::runtime_error("Electron_genPartIdx branch doesn't exist");
        int bytes = b_Electron_genPartIdx_->GetEntry(index);
        v_Electron_genPartIdx_ = vector<int>(Electron_genPartIdx_,Electron_genPartIdx_+bytes/sizeof(Electron_genPartIdx_[0]));
        loaded_Electron_genPartIdx_ = true;
    }
    return v_Electron_genPartIdx_;
}
const vector<float> &Nano::Electron_hoe() {
    if (!loaded_Electron_hoe_) counter_uncached_Electron_hoe_++;
    else counter_cached_Electron_hoe_++;
    if (!loaded_Electron_hoe_) {
        if (!b_Electron_hoe_) throw std::runtime_error("Electron_hoe branch doesn't exist");
        int bytes = b_Electron_hoe_->GetEntry(index);
        v_Electron_hoe_ = vector<float>(Electron_hoe_,Electron_hoe_+bytes/sizeof(Electron_hoe_[0]));
        loaded_Electron_hoe_ = true;
    }
    return v_Electron_hoe_;
}
const vector<float> &Nano::Electron_ip3d() {
    if (!loaded_Electron_ip3d_) counter_uncached_Electron_ip3d_++;
    else counter_cached_Electron_ip3d_++;
    if (!loaded_Electron_ip3d_) {
        if (!b_Electron_ip3d_) throw std::runtime_error("Electron_ip3d branch doesn't exist");
        int bytes = b_Electron_ip3d_->GetEntry(index);
        v_Electron_ip3d_ = vector<float>(Electron_ip3d_,Electron_ip3d_+bytes/sizeof(Electron_ip3d_[0]));
        loaded_Electron_ip3d_ = true;
    }
    return v_Electron_ip3d_;
}
const vector<bool> &Nano::Electron_isPFcand() {
    if (!loaded_Electron_isPFcand_) counter_uncached_Electron_isPFcand_++;
    else counter_cached_Electron_isPFcand_++;
    if (!loaded_Electron_isPFcand_) {
        if (!b_Electron_isPFcand_) throw std::runtime_error("Electron_isPFcand branch doesn't exist");
        int bytes = b_Electron_isPFcand_->GetEntry(index);
        v_Electron_isPFcand_ = vector<bool>(Electron_isPFcand_,Electron_isPFcand_+bytes/sizeof(Electron_isPFcand_[0]));
        loaded_Electron_isPFcand_ = true;
    }
    return v_Electron_isPFcand_;
}
const vector<int> &Nano::Electron_jetIdx() {
    if (!loaded_Electron_jetIdx_) counter_uncached_Electron_jetIdx_++;
    else counter_cached_Electron_jetIdx_++;
    if (!loaded_Electron_jetIdx_) {
        if (!b_Electron_jetIdx_) throw std::runtime_error("Electron_jetIdx branch doesn't exist");
        int bytes = b_Electron_jetIdx_->GetEntry(index);
        v_Electron_jetIdx_ = vector<int>(Electron_jetIdx_,Electron_jetIdx_+bytes/sizeof(Electron_jetIdx_[0]));
        loaded_Electron_jetIdx_ = true;
    }
    return v_Electron_jetIdx_;
}
const vector<UChar_t> &Nano::Electron_jetNDauCharged() {
    if (!loaded_Electron_jetNDauCharged_) counter_uncached_Electron_jetNDauCharged_++;
    else counter_cached_Electron_jetNDauCharged_++;
    if (!loaded_Electron_jetNDauCharged_) {
        if (!b_Electron_jetNDauCharged_) throw std::runtime_error("Electron_jetNDauCharged branch doesn't exist");
        int bytes = b_Electron_jetNDauCharged_->GetEntry(index);
        v_Electron_jetNDauCharged_ = vector<UChar_t>(Electron_jetNDauCharged_,Electron_jetNDauCharged_+bytes/sizeof(Electron_jetNDauCharged_[0]));
        loaded_Electron_jetNDauCharged_ = true;
    }
    return v_Electron_jetNDauCharged_;
}
const vector<float> &Nano::Electron_jetPtRelv2() {
    if (!loaded_Electron_jetPtRelv2_) counter_uncached_Electron_jetPtRelv2_++;
    else counter_cached_Electron_jetPtRelv2_++;
    if (!loaded_Electron_jetPtRelv2_) {
        if (!b_Electron_jetPtRelv2_) throw std::runtime_error("Electron_jetPtRelv2 branch doesn't exist");
        int bytes = b_Electron_jetPtRelv2_->GetEntry(index);
        v_Electron_jetPtRelv2_ = vector<float>(Electron_jetPtRelv2_,Electron_jetPtRelv2_+bytes/sizeof(Electron_jetPtRelv2_[0]));
        loaded_Electron_jetPtRelv2_ = true;
    }
    return v_Electron_jetPtRelv2_;
}
const vector<float> &Nano::Electron_jetRelIso() {
    if (!loaded_Electron_jetRelIso_) counter_uncached_Electron_jetRelIso_++;
    else counter_cached_Electron_jetRelIso_++;
    if (!loaded_Electron_jetRelIso_) {
        if (!b_Electron_jetRelIso_) throw std::runtime_error("Electron_jetRelIso branch doesn't exist");
        int bytes = b_Electron_jetRelIso_->GetEntry(index);
        v_Electron_jetRelIso_ = vector<float>(Electron_jetRelIso_,Electron_jetRelIso_+bytes/sizeof(Electron_jetRelIso_[0]));
        loaded_Electron_jetRelIso_ = true;
    }
    return v_Electron_jetRelIso_;
}
const vector<float> &Nano::Electron_jetRelIso_Fall17V2() {
    if (!loaded_Electron_jetRelIso_Fall17V2_) counter_uncached_Electron_jetRelIso_Fall17V2_++;
    else counter_cached_Electron_jetRelIso_Fall17V2_++;
    if (!loaded_Electron_jetRelIso_Fall17V2_) {
        if (!b_Electron_jetRelIso_Fall17V2_) throw std::runtime_error("Electron_jetRelIso_Fall17V2 branch doesn't exist");
        int bytes = b_Electron_jetRelIso_Fall17V2_->GetEntry(index);
        v_Electron_jetRelIso_Fall17V2_ = vector<float>(Electron_jetRelIso_Fall17V2_,Electron_jetRelIso_Fall17V2_+bytes/sizeof(Electron_jetRelIso_Fall17V2_[0]));
        loaded_Electron_jetRelIso_Fall17V2_ = true;
    }
    return v_Electron_jetRelIso_Fall17V2_;
}
const vector<UChar_t> &Nano::Electron_lostHits() {
    if (!loaded_Electron_lostHits_) counter_uncached_Electron_lostHits_++;
    else counter_cached_Electron_lostHits_++;
    if (!loaded_Electron_lostHits_) {
        if (!b_Electron_lostHits_) throw std::runtime_error("Electron_lostHits branch doesn't exist");
        int bytes = b_Electron_lostHits_->GetEntry(index);
        v_Electron_lostHits_ = vector<UChar_t>(Electron_lostHits_,Electron_lostHits_+bytes/sizeof(Electron_lostHits_[0]));
        loaded_Electron_lostHits_ = true;
    }
    return v_Electron_lostHits_;
}
const vector<float> &Nano::Electron_mass() {
    if (!loaded_Electron_mass_) counter_uncached_Electron_mass_++;
    else counter_cached_Electron_mass_++;
    if (!loaded_Electron_mass_) {
        if (!b_Electron_mass_) throw std::runtime_error("Electron_mass branch doesn't exist");
        int bytes = b_Electron_mass_->GetEntry(index);
        v_Electron_mass_ = vector<float>(Electron_mass_,Electron_mass_+bytes/sizeof(Electron_mass_[0]));
        loaded_Electron_mass_ = true;
    }
    return v_Electron_mass_;
}
const vector<float> &Nano::Electron_miniPFRelIso_all() {
    if (!loaded_Electron_miniPFRelIso_all_) counter_uncached_Electron_miniPFRelIso_all_++;
    else counter_cached_Electron_miniPFRelIso_all_++;
    if (!loaded_Electron_miniPFRelIso_all_) {
        if (!b_Electron_miniPFRelIso_all_) throw std::runtime_error("Electron_miniPFRelIso_all branch doesn't exist");
        int bytes = b_Electron_miniPFRelIso_all_->GetEntry(index);
        v_Electron_miniPFRelIso_all_ = vector<float>(Electron_miniPFRelIso_all_,Electron_miniPFRelIso_all_+bytes/sizeof(Electron_miniPFRelIso_all_[0]));
        loaded_Electron_miniPFRelIso_all_ = true;
    }
    return v_Electron_miniPFRelIso_all_;
}
const vector<float> &Nano::Electron_miniPFRelIso_all_Fall17V2() {
    if (!loaded_Electron_miniPFRelIso_all_Fall17V2_) counter_uncached_Electron_miniPFRelIso_all_Fall17V2_++;
    else counter_cached_Electron_miniPFRelIso_all_Fall17V2_++;
    if (!loaded_Electron_miniPFRelIso_all_Fall17V2_) {
        if (!b_Electron_miniPFRelIso_all_Fall17V2_) throw std::runtime_error("Electron_miniPFRelIso_all_Fall17V2 branch doesn't exist");
        int bytes = b_Electron_miniPFRelIso_all_Fall17V2_->GetEntry(index);
        v_Electron_miniPFRelIso_all_Fall17V2_ = vector<float>(Electron_miniPFRelIso_all_Fall17V2_,Electron_miniPFRelIso_all_Fall17V2_+bytes/sizeof(Electron_miniPFRelIso_all_Fall17V2_[0]));
        loaded_Electron_miniPFRelIso_all_Fall17V2_ = true;
    }
    return v_Electron_miniPFRelIso_all_Fall17V2_;
}
const vector<float> &Nano::Electron_miniPFRelIso_chg() {
    if (!loaded_Electron_miniPFRelIso_chg_) counter_uncached_Electron_miniPFRelIso_chg_++;
    else counter_cached_Electron_miniPFRelIso_chg_++;
    if (!loaded_Electron_miniPFRelIso_chg_) {
        if (!b_Electron_miniPFRelIso_chg_) throw std::runtime_error("Electron_miniPFRelIso_chg branch doesn't exist");
        int bytes = b_Electron_miniPFRelIso_chg_->GetEntry(index);
        v_Electron_miniPFRelIso_chg_ = vector<float>(Electron_miniPFRelIso_chg_,Electron_miniPFRelIso_chg_+bytes/sizeof(Electron_miniPFRelIso_chg_[0]));
        loaded_Electron_miniPFRelIso_chg_ = true;
    }
    return v_Electron_miniPFRelIso_chg_;
}
const vector<float> &Nano::Electron_miniPFRelIso_chg_Fall17V2() {
    if (!loaded_Electron_miniPFRelIso_chg_Fall17V2_) counter_uncached_Electron_miniPFRelIso_chg_Fall17V2_++;
    else counter_cached_Electron_miniPFRelIso_chg_Fall17V2_++;
    if (!loaded_Electron_miniPFRelIso_chg_Fall17V2_) {
        if (!b_Electron_miniPFRelIso_chg_Fall17V2_) throw std::runtime_error("Electron_miniPFRelIso_chg_Fall17V2 branch doesn't exist");
        int bytes = b_Electron_miniPFRelIso_chg_Fall17V2_->GetEntry(index);
        v_Electron_miniPFRelIso_chg_Fall17V2_ = vector<float>(Electron_miniPFRelIso_chg_Fall17V2_,Electron_miniPFRelIso_chg_Fall17V2_+bytes/sizeof(Electron_miniPFRelIso_chg_Fall17V2_[0]));
        loaded_Electron_miniPFRelIso_chg_Fall17V2_ = true;
    }
    return v_Electron_miniPFRelIso_chg_Fall17V2_;
}
const vector<float> &Nano::Electron_mvaFall17Iso() {
    if (!loaded_Electron_mvaFall17Iso_) counter_uncached_Electron_mvaFall17Iso_++;
    else counter_cached_Electron_mvaFall17Iso_++;
    if (!loaded_Electron_mvaFall17Iso_) {
        if (!b_Electron_mvaFall17Iso_) throw std::runtime_error("Electron_mvaFall17Iso branch doesn't exist");
        int bytes = b_Electron_mvaFall17Iso_->GetEntry(index);
        v_Electron_mvaFall17Iso_ = vector<float>(Electron_mvaFall17Iso_,Electron_mvaFall17Iso_+bytes/sizeof(Electron_mvaFall17Iso_[0]));
        loaded_Electron_mvaFall17Iso_ = true;
    }
    return v_Electron_mvaFall17Iso_;
}
const vector<bool> &Nano::Electron_mvaFall17Iso_WP80() {
    if (!loaded_Electron_mvaFall17Iso_WP80_) counter_uncached_Electron_mvaFall17Iso_WP80_++;
    else counter_cached_Electron_mvaFall17Iso_WP80_++;
    if (!loaded_Electron_mvaFall17Iso_WP80_) {
        if (!b_Electron_mvaFall17Iso_WP80_) throw std::runtime_error("Electron_mvaFall17Iso_WP80 branch doesn't exist");
        int bytes = b_Electron_mvaFall17Iso_WP80_->GetEntry(index);
        v_Electron_mvaFall17Iso_WP80_ = vector<bool>(Electron_mvaFall17Iso_WP80_,Electron_mvaFall17Iso_WP80_+bytes/sizeof(Electron_mvaFall17Iso_WP80_[0]));
        loaded_Electron_mvaFall17Iso_WP80_ = true;
    }
    return v_Electron_mvaFall17Iso_WP80_;
}
const vector<bool> &Nano::Electron_mvaFall17Iso_WP90() {
    if (!loaded_Electron_mvaFall17Iso_WP90_) counter_uncached_Electron_mvaFall17Iso_WP90_++;
    else counter_cached_Electron_mvaFall17Iso_WP90_++;
    if (!loaded_Electron_mvaFall17Iso_WP90_) {
        if (!b_Electron_mvaFall17Iso_WP90_) throw std::runtime_error("Electron_mvaFall17Iso_WP90 branch doesn't exist");
        int bytes = b_Electron_mvaFall17Iso_WP90_->GetEntry(index);
        v_Electron_mvaFall17Iso_WP90_ = vector<bool>(Electron_mvaFall17Iso_WP90_,Electron_mvaFall17Iso_WP90_+bytes/sizeof(Electron_mvaFall17Iso_WP90_[0]));
        loaded_Electron_mvaFall17Iso_WP90_ = true;
    }
    return v_Electron_mvaFall17Iso_WP90_;
}
const vector<bool> &Nano::Electron_mvaFall17Iso_WPL() {
    if (!loaded_Electron_mvaFall17Iso_WPL_) counter_uncached_Electron_mvaFall17Iso_WPL_++;
    else counter_cached_Electron_mvaFall17Iso_WPL_++;
    if (!loaded_Electron_mvaFall17Iso_WPL_) {
        if (!b_Electron_mvaFall17Iso_WPL_) throw std::runtime_error("Electron_mvaFall17Iso_WPL branch doesn't exist");
        int bytes = b_Electron_mvaFall17Iso_WPL_->GetEntry(index);
        v_Electron_mvaFall17Iso_WPL_ = vector<bool>(Electron_mvaFall17Iso_WPL_,Electron_mvaFall17Iso_WPL_+bytes/sizeof(Electron_mvaFall17Iso_WPL_[0]));
        loaded_Electron_mvaFall17Iso_WPL_ = true;
    }
    return v_Electron_mvaFall17Iso_WPL_;
}
const vector<float> &Nano::Electron_mvaFall17V1Iso() {
    if (!loaded_Electron_mvaFall17V1Iso_) counter_uncached_Electron_mvaFall17V1Iso_++;
    else counter_cached_Electron_mvaFall17V1Iso_++;
    if (!loaded_Electron_mvaFall17V1Iso_) {
        if (!b_Electron_mvaFall17V1Iso_) throw std::runtime_error("Electron_mvaFall17V1Iso branch doesn't exist");
        int bytes = b_Electron_mvaFall17V1Iso_->GetEntry(index);
        v_Electron_mvaFall17V1Iso_ = vector<float>(Electron_mvaFall17V1Iso_,Electron_mvaFall17V1Iso_+bytes/sizeof(Electron_mvaFall17V1Iso_[0]));
        loaded_Electron_mvaFall17V1Iso_ = true;
    }
    return v_Electron_mvaFall17V1Iso_;
}
const vector<bool> &Nano::Electron_mvaFall17V1Iso_WP80() {
    if (!loaded_Electron_mvaFall17V1Iso_WP80_) counter_uncached_Electron_mvaFall17V1Iso_WP80_++;
    else counter_cached_Electron_mvaFall17V1Iso_WP80_++;
    if (!loaded_Electron_mvaFall17V1Iso_WP80_) {
        if (!b_Electron_mvaFall17V1Iso_WP80_) throw std::runtime_error("Electron_mvaFall17V1Iso_WP80 branch doesn't exist");
        int bytes = b_Electron_mvaFall17V1Iso_WP80_->GetEntry(index);
        v_Electron_mvaFall17V1Iso_WP80_ = vector<bool>(Electron_mvaFall17V1Iso_WP80_,Electron_mvaFall17V1Iso_WP80_+bytes/sizeof(Electron_mvaFall17V1Iso_WP80_[0]));
        loaded_Electron_mvaFall17V1Iso_WP80_ = true;
    }
    return v_Electron_mvaFall17V1Iso_WP80_;
}
const vector<bool> &Nano::Electron_mvaFall17V1Iso_WP90() {
    if (!loaded_Electron_mvaFall17V1Iso_WP90_) counter_uncached_Electron_mvaFall17V1Iso_WP90_++;
    else counter_cached_Electron_mvaFall17V1Iso_WP90_++;
    if (!loaded_Electron_mvaFall17V1Iso_WP90_) {
        if (!b_Electron_mvaFall17V1Iso_WP90_) throw std::runtime_error("Electron_mvaFall17V1Iso_WP90 branch doesn't exist");
        int bytes = b_Electron_mvaFall17V1Iso_WP90_->GetEntry(index);
        v_Electron_mvaFall17V1Iso_WP90_ = vector<bool>(Electron_mvaFall17V1Iso_WP90_,Electron_mvaFall17V1Iso_WP90_+bytes/sizeof(Electron_mvaFall17V1Iso_WP90_[0]));
        loaded_Electron_mvaFall17V1Iso_WP90_ = true;
    }
    return v_Electron_mvaFall17V1Iso_WP90_;
}
const vector<bool> &Nano::Electron_mvaFall17V1Iso_WPL() {
    if (!loaded_Electron_mvaFall17V1Iso_WPL_) counter_uncached_Electron_mvaFall17V1Iso_WPL_++;
    else counter_cached_Electron_mvaFall17V1Iso_WPL_++;
    if (!loaded_Electron_mvaFall17V1Iso_WPL_) {
        if (!b_Electron_mvaFall17V1Iso_WPL_) throw std::runtime_error("Electron_mvaFall17V1Iso_WPL branch doesn't exist");
        int bytes = b_Electron_mvaFall17V1Iso_WPL_->GetEntry(index);
        v_Electron_mvaFall17V1Iso_WPL_ = vector<bool>(Electron_mvaFall17V1Iso_WPL_,Electron_mvaFall17V1Iso_WPL_+bytes/sizeof(Electron_mvaFall17V1Iso_WPL_[0]));
        loaded_Electron_mvaFall17V1Iso_WPL_ = true;
    }
    return v_Electron_mvaFall17V1Iso_WPL_;
}
const vector<float> &Nano::Electron_mvaFall17V1noIso() {
    if (!loaded_Electron_mvaFall17V1noIso_) counter_uncached_Electron_mvaFall17V1noIso_++;
    else counter_cached_Electron_mvaFall17V1noIso_++;
    if (!loaded_Electron_mvaFall17V1noIso_) {
        if (!b_Electron_mvaFall17V1noIso_) throw std::runtime_error("Electron_mvaFall17V1noIso branch doesn't exist");
        int bytes = b_Electron_mvaFall17V1noIso_->GetEntry(index);
        v_Electron_mvaFall17V1noIso_ = vector<float>(Electron_mvaFall17V1noIso_,Electron_mvaFall17V1noIso_+bytes/sizeof(Electron_mvaFall17V1noIso_[0]));
        loaded_Electron_mvaFall17V1noIso_ = true;
    }
    return v_Electron_mvaFall17V1noIso_;
}
const vector<bool> &Nano::Electron_mvaFall17V1noIso_WP80() {
    if (!loaded_Electron_mvaFall17V1noIso_WP80_) counter_uncached_Electron_mvaFall17V1noIso_WP80_++;
    else counter_cached_Electron_mvaFall17V1noIso_WP80_++;
    if (!loaded_Electron_mvaFall17V1noIso_WP80_) {
        if (!b_Electron_mvaFall17V1noIso_WP80_) throw std::runtime_error("Electron_mvaFall17V1noIso_WP80 branch doesn't exist");
        int bytes = b_Electron_mvaFall17V1noIso_WP80_->GetEntry(index);
        v_Electron_mvaFall17V1noIso_WP80_ = vector<bool>(Electron_mvaFall17V1noIso_WP80_,Electron_mvaFall17V1noIso_WP80_+bytes/sizeof(Electron_mvaFall17V1noIso_WP80_[0]));
        loaded_Electron_mvaFall17V1noIso_WP80_ = true;
    }
    return v_Electron_mvaFall17V1noIso_WP80_;
}
const vector<bool> &Nano::Electron_mvaFall17V1noIso_WP90() {
    if (!loaded_Electron_mvaFall17V1noIso_WP90_) counter_uncached_Electron_mvaFall17V1noIso_WP90_++;
    else counter_cached_Electron_mvaFall17V1noIso_WP90_++;
    if (!loaded_Electron_mvaFall17V1noIso_WP90_) {
        if (!b_Electron_mvaFall17V1noIso_WP90_) throw std::runtime_error("Electron_mvaFall17V1noIso_WP90 branch doesn't exist");
        int bytes = b_Electron_mvaFall17V1noIso_WP90_->GetEntry(index);
        v_Electron_mvaFall17V1noIso_WP90_ = vector<bool>(Electron_mvaFall17V1noIso_WP90_,Electron_mvaFall17V1noIso_WP90_+bytes/sizeof(Electron_mvaFall17V1noIso_WP90_[0]));
        loaded_Electron_mvaFall17V1noIso_WP90_ = true;
    }
    return v_Electron_mvaFall17V1noIso_WP90_;
}
const vector<bool> &Nano::Electron_mvaFall17V1noIso_WPL() {
    if (!loaded_Electron_mvaFall17V1noIso_WPL_) counter_uncached_Electron_mvaFall17V1noIso_WPL_++;
    else counter_cached_Electron_mvaFall17V1noIso_WPL_++;
    if (!loaded_Electron_mvaFall17V1noIso_WPL_) {
        if (!b_Electron_mvaFall17V1noIso_WPL_) throw std::runtime_error("Electron_mvaFall17V1noIso_WPL branch doesn't exist");
        int bytes = b_Electron_mvaFall17V1noIso_WPL_->GetEntry(index);
        v_Electron_mvaFall17V1noIso_WPL_ = vector<bool>(Electron_mvaFall17V1noIso_WPL_,Electron_mvaFall17V1noIso_WPL_+bytes/sizeof(Electron_mvaFall17V1noIso_WPL_[0]));
        loaded_Electron_mvaFall17V1noIso_WPL_ = true;
    }
    return v_Electron_mvaFall17V1noIso_WPL_;
}
const vector<float> &Nano::Electron_mvaFall17V2Iso() {
    if (!loaded_Electron_mvaFall17V2Iso_) counter_uncached_Electron_mvaFall17V2Iso_++;
    else counter_cached_Electron_mvaFall17V2Iso_++;
    if (!loaded_Electron_mvaFall17V2Iso_) {
        if (!b_Electron_mvaFall17V2Iso_) throw std::runtime_error("Electron_mvaFall17V2Iso branch doesn't exist");
        int bytes = b_Electron_mvaFall17V2Iso_->GetEntry(index);
        v_Electron_mvaFall17V2Iso_ = vector<float>(Electron_mvaFall17V2Iso_,Electron_mvaFall17V2Iso_+bytes/sizeof(Electron_mvaFall17V2Iso_[0]));
        loaded_Electron_mvaFall17V2Iso_ = true;
    }
    return v_Electron_mvaFall17V2Iso_;
}
const vector<bool> &Nano::Electron_mvaFall17V2Iso_WP80() {
    if (!loaded_Electron_mvaFall17V2Iso_WP80_) counter_uncached_Electron_mvaFall17V2Iso_WP80_++;
    else counter_cached_Electron_mvaFall17V2Iso_WP80_++;
    if (!loaded_Electron_mvaFall17V2Iso_WP80_) {
        if (!b_Electron_mvaFall17V2Iso_WP80_) throw std::runtime_error("Electron_mvaFall17V2Iso_WP80 branch doesn't exist");
        int bytes = b_Electron_mvaFall17V2Iso_WP80_->GetEntry(index);
        v_Electron_mvaFall17V2Iso_WP80_ = vector<bool>(Electron_mvaFall17V2Iso_WP80_,Electron_mvaFall17V2Iso_WP80_+bytes/sizeof(Electron_mvaFall17V2Iso_WP80_[0]));
        loaded_Electron_mvaFall17V2Iso_WP80_ = true;
    }
    return v_Electron_mvaFall17V2Iso_WP80_;
}
const vector<bool> &Nano::Electron_mvaFall17V2Iso_WP90() {
    if (!loaded_Electron_mvaFall17V2Iso_WP90_) counter_uncached_Electron_mvaFall17V2Iso_WP90_++;
    else counter_cached_Electron_mvaFall17V2Iso_WP90_++;
    if (!loaded_Electron_mvaFall17V2Iso_WP90_) {
        if (!b_Electron_mvaFall17V2Iso_WP90_) throw std::runtime_error("Electron_mvaFall17V2Iso_WP90 branch doesn't exist");
        int bytes = b_Electron_mvaFall17V2Iso_WP90_->GetEntry(index);
        v_Electron_mvaFall17V2Iso_WP90_ = vector<bool>(Electron_mvaFall17V2Iso_WP90_,Electron_mvaFall17V2Iso_WP90_+bytes/sizeof(Electron_mvaFall17V2Iso_WP90_[0]));
        loaded_Electron_mvaFall17V2Iso_WP90_ = true;
    }
    return v_Electron_mvaFall17V2Iso_WP90_;
}
const vector<bool> &Nano::Electron_mvaFall17V2Iso_WPL() {
    if (!loaded_Electron_mvaFall17V2Iso_WPL_) counter_uncached_Electron_mvaFall17V2Iso_WPL_++;
    else counter_cached_Electron_mvaFall17V2Iso_WPL_++;
    if (!loaded_Electron_mvaFall17V2Iso_WPL_) {
        if (!b_Electron_mvaFall17V2Iso_WPL_) throw std::runtime_error("Electron_mvaFall17V2Iso_WPL branch doesn't exist");
        int bytes = b_Electron_mvaFall17V2Iso_WPL_->GetEntry(index);
        v_Electron_mvaFall17V2Iso_WPL_ = vector<bool>(Electron_mvaFall17V2Iso_WPL_,Electron_mvaFall17V2Iso_WPL_+bytes/sizeof(Electron_mvaFall17V2Iso_WPL_[0]));
        loaded_Electron_mvaFall17V2Iso_WPL_ = true;
    }
    return v_Electron_mvaFall17V2Iso_WPL_;
}
const vector<float> &Nano::Electron_mvaFall17V2noIso() {
    if (!loaded_Electron_mvaFall17V2noIso_) counter_uncached_Electron_mvaFall17V2noIso_++;
    else counter_cached_Electron_mvaFall17V2noIso_++;
    if (!loaded_Electron_mvaFall17V2noIso_) {
        if (!b_Electron_mvaFall17V2noIso_) throw std::runtime_error("Electron_mvaFall17V2noIso branch doesn't exist");
        int bytes = b_Electron_mvaFall17V2noIso_->GetEntry(index);
        v_Electron_mvaFall17V2noIso_ = vector<float>(Electron_mvaFall17V2noIso_,Electron_mvaFall17V2noIso_+bytes/sizeof(Electron_mvaFall17V2noIso_[0]));
        loaded_Electron_mvaFall17V2noIso_ = true;
    }
    return v_Electron_mvaFall17V2noIso_;
}
const vector<bool> &Nano::Electron_mvaFall17V2noIso_WP80() {
    if (!loaded_Electron_mvaFall17V2noIso_WP80_) counter_uncached_Electron_mvaFall17V2noIso_WP80_++;
    else counter_cached_Electron_mvaFall17V2noIso_WP80_++;
    if (!loaded_Electron_mvaFall17V2noIso_WP80_) {
        if (!b_Electron_mvaFall17V2noIso_WP80_) throw std::runtime_error("Electron_mvaFall17V2noIso_WP80 branch doesn't exist");
        int bytes = b_Electron_mvaFall17V2noIso_WP80_->GetEntry(index);
        v_Electron_mvaFall17V2noIso_WP80_ = vector<bool>(Electron_mvaFall17V2noIso_WP80_,Electron_mvaFall17V2noIso_WP80_+bytes/sizeof(Electron_mvaFall17V2noIso_WP80_[0]));
        loaded_Electron_mvaFall17V2noIso_WP80_ = true;
    }
    return v_Electron_mvaFall17V2noIso_WP80_;
}
const vector<bool> &Nano::Electron_mvaFall17V2noIso_WP90() {
    if (!loaded_Electron_mvaFall17V2noIso_WP90_) counter_uncached_Electron_mvaFall17V2noIso_WP90_++;
    else counter_cached_Electron_mvaFall17V2noIso_WP90_++;
    if (!loaded_Electron_mvaFall17V2noIso_WP90_) {
        if (!b_Electron_mvaFall17V2noIso_WP90_) throw std::runtime_error("Electron_mvaFall17V2noIso_WP90 branch doesn't exist");
        int bytes = b_Electron_mvaFall17V2noIso_WP90_->GetEntry(index);
        v_Electron_mvaFall17V2noIso_WP90_ = vector<bool>(Electron_mvaFall17V2noIso_WP90_,Electron_mvaFall17V2noIso_WP90_+bytes/sizeof(Electron_mvaFall17V2noIso_WP90_[0]));
        loaded_Electron_mvaFall17V2noIso_WP90_ = true;
    }
    return v_Electron_mvaFall17V2noIso_WP90_;
}
const vector<bool> &Nano::Electron_mvaFall17V2noIso_WPL() {
    if (!loaded_Electron_mvaFall17V2noIso_WPL_) counter_uncached_Electron_mvaFall17V2noIso_WPL_++;
    else counter_cached_Electron_mvaFall17V2noIso_WPL_++;
    if (!loaded_Electron_mvaFall17V2noIso_WPL_) {
        if (!b_Electron_mvaFall17V2noIso_WPL_) throw std::runtime_error("Electron_mvaFall17V2noIso_WPL branch doesn't exist");
        int bytes = b_Electron_mvaFall17V2noIso_WPL_->GetEntry(index);
        v_Electron_mvaFall17V2noIso_WPL_ = vector<bool>(Electron_mvaFall17V2noIso_WPL_,Electron_mvaFall17V2noIso_WPL_+bytes/sizeof(Electron_mvaFall17V2noIso_WPL_[0]));
        loaded_Electron_mvaFall17V2noIso_WPL_ = true;
    }
    return v_Electron_mvaFall17V2noIso_WPL_;
}
const vector<float> &Nano::Electron_mvaFall17noIso() {
    if (!loaded_Electron_mvaFall17noIso_) counter_uncached_Electron_mvaFall17noIso_++;
    else counter_cached_Electron_mvaFall17noIso_++;
    if (!loaded_Electron_mvaFall17noIso_) {
        if (!b_Electron_mvaFall17noIso_) throw std::runtime_error("Electron_mvaFall17noIso branch doesn't exist");
        int bytes = b_Electron_mvaFall17noIso_->GetEntry(index);
        v_Electron_mvaFall17noIso_ = vector<float>(Electron_mvaFall17noIso_,Electron_mvaFall17noIso_+bytes/sizeof(Electron_mvaFall17noIso_[0]));
        loaded_Electron_mvaFall17noIso_ = true;
    }
    return v_Electron_mvaFall17noIso_;
}
const vector<bool> &Nano::Electron_mvaFall17noIso_WP80() {
    if (!loaded_Electron_mvaFall17noIso_WP80_) counter_uncached_Electron_mvaFall17noIso_WP80_++;
    else counter_cached_Electron_mvaFall17noIso_WP80_++;
    if (!loaded_Electron_mvaFall17noIso_WP80_) {
        if (!b_Electron_mvaFall17noIso_WP80_) throw std::runtime_error("Electron_mvaFall17noIso_WP80 branch doesn't exist");
        int bytes = b_Electron_mvaFall17noIso_WP80_->GetEntry(index);
        v_Electron_mvaFall17noIso_WP80_ = vector<bool>(Electron_mvaFall17noIso_WP80_,Electron_mvaFall17noIso_WP80_+bytes/sizeof(Electron_mvaFall17noIso_WP80_[0]));
        loaded_Electron_mvaFall17noIso_WP80_ = true;
    }
    return v_Electron_mvaFall17noIso_WP80_;
}
const vector<bool> &Nano::Electron_mvaFall17noIso_WP90() {
    if (!loaded_Electron_mvaFall17noIso_WP90_) counter_uncached_Electron_mvaFall17noIso_WP90_++;
    else counter_cached_Electron_mvaFall17noIso_WP90_++;
    if (!loaded_Electron_mvaFall17noIso_WP90_) {
        if (!b_Electron_mvaFall17noIso_WP90_) throw std::runtime_error("Electron_mvaFall17noIso_WP90 branch doesn't exist");
        int bytes = b_Electron_mvaFall17noIso_WP90_->GetEntry(index);
        v_Electron_mvaFall17noIso_WP90_ = vector<bool>(Electron_mvaFall17noIso_WP90_,Electron_mvaFall17noIso_WP90_+bytes/sizeof(Electron_mvaFall17noIso_WP90_[0]));
        loaded_Electron_mvaFall17noIso_WP90_ = true;
    }
    return v_Electron_mvaFall17noIso_WP90_;
}
const vector<bool> &Nano::Electron_mvaFall17noIso_WPL() {
    if (!loaded_Electron_mvaFall17noIso_WPL_) counter_uncached_Electron_mvaFall17noIso_WPL_++;
    else counter_cached_Electron_mvaFall17noIso_WPL_++;
    if (!loaded_Electron_mvaFall17noIso_WPL_) {
        if (!b_Electron_mvaFall17noIso_WPL_) throw std::runtime_error("Electron_mvaFall17noIso_WPL branch doesn't exist");
        int bytes = b_Electron_mvaFall17noIso_WPL_->GetEntry(index);
        v_Electron_mvaFall17noIso_WPL_ = vector<bool>(Electron_mvaFall17noIso_WPL_,Electron_mvaFall17noIso_WPL_+bytes/sizeof(Electron_mvaFall17noIso_WPL_[0]));
        loaded_Electron_mvaFall17noIso_WPL_ = true;
    }
    return v_Electron_mvaFall17noIso_WPL_;
}
const vector<float> &Nano::Electron_mvaHZZIso() {
    if (!loaded_Electron_mvaHZZIso_) counter_uncached_Electron_mvaHZZIso_++;
    else counter_cached_Electron_mvaHZZIso_++;
    if (!loaded_Electron_mvaHZZIso_) {
        if (!b_Electron_mvaHZZIso_) throw std::runtime_error("Electron_mvaHZZIso branch doesn't exist");
        int bytes = b_Electron_mvaHZZIso_->GetEntry(index);
        v_Electron_mvaHZZIso_ = vector<float>(Electron_mvaHZZIso_,Electron_mvaHZZIso_+bytes/sizeof(Electron_mvaHZZIso_[0]));
        loaded_Electron_mvaHZZIso_ = true;
    }
    return v_Electron_mvaHZZIso_;
}
const vector<float> &Nano::Electron_mvaIso() {
    if (!loaded_Electron_mvaIso_) counter_uncached_Electron_mvaIso_++;
    else counter_cached_Electron_mvaIso_++;
    if (!loaded_Electron_mvaIso_) {
        if (!b_Electron_mvaIso_) throw std::runtime_error("Electron_mvaIso branch doesn't exist");
        int bytes = b_Electron_mvaIso_->GetEntry(index);
        v_Electron_mvaIso_ = vector<float>(Electron_mvaIso_,Electron_mvaIso_+bytes/sizeof(Electron_mvaIso_[0]));
        loaded_Electron_mvaIso_ = true;
    }
    return v_Electron_mvaIso_;
}
const vector<float> &Nano::Electron_mvaIso_Fall17V2() {
    if (!loaded_Electron_mvaIso_Fall17V2_) counter_uncached_Electron_mvaIso_Fall17V2_++;
    else counter_cached_Electron_mvaIso_Fall17V2_++;
    if (!loaded_Electron_mvaIso_Fall17V2_) {
        if (!b_Electron_mvaIso_Fall17V2_) throw std::runtime_error("Electron_mvaIso_Fall17V2 branch doesn't exist");
        int bytes = b_Electron_mvaIso_Fall17V2_->GetEntry(index);
        v_Electron_mvaIso_Fall17V2_ = vector<float>(Electron_mvaIso_Fall17V2_,Electron_mvaIso_Fall17V2_+bytes/sizeof(Electron_mvaIso_Fall17V2_[0]));
        loaded_Electron_mvaIso_Fall17V2_ = true;
    }
    return v_Electron_mvaIso_Fall17V2_;
}
const vector<bool> &Nano::Electron_mvaIso_Fall17V2_WP80() {
    if (!loaded_Electron_mvaIso_Fall17V2_WP80_) counter_uncached_Electron_mvaIso_Fall17V2_WP80_++;
    else counter_cached_Electron_mvaIso_Fall17V2_WP80_++;
    if (!loaded_Electron_mvaIso_Fall17V2_WP80_) {
        if (!b_Electron_mvaIso_Fall17V2_WP80_) throw std::runtime_error("Electron_mvaIso_Fall17V2_WP80 branch doesn't exist");
        int bytes = b_Electron_mvaIso_Fall17V2_WP80_->GetEntry(index);
        v_Electron_mvaIso_Fall17V2_WP80_ = vector<bool>(Electron_mvaIso_Fall17V2_WP80_,Electron_mvaIso_Fall17V2_WP80_+bytes/sizeof(Electron_mvaIso_Fall17V2_WP80_[0]));
        loaded_Electron_mvaIso_Fall17V2_WP80_ = true;
    }
    return v_Electron_mvaIso_Fall17V2_WP80_;
}
const vector<bool> &Nano::Electron_mvaIso_Fall17V2_WP90() {
    if (!loaded_Electron_mvaIso_Fall17V2_WP90_) counter_uncached_Electron_mvaIso_Fall17V2_WP90_++;
    else counter_cached_Electron_mvaIso_Fall17V2_WP90_++;
    if (!loaded_Electron_mvaIso_Fall17V2_WP90_) {
        if (!b_Electron_mvaIso_Fall17V2_WP90_) throw std::runtime_error("Electron_mvaIso_Fall17V2_WP90 branch doesn't exist");
        int bytes = b_Electron_mvaIso_Fall17V2_WP90_->GetEntry(index);
        v_Electron_mvaIso_Fall17V2_WP90_ = vector<bool>(Electron_mvaIso_Fall17V2_WP90_,Electron_mvaIso_Fall17V2_WP90_+bytes/sizeof(Electron_mvaIso_Fall17V2_WP90_[0]));
        loaded_Electron_mvaIso_Fall17V2_WP90_ = true;
    }
    return v_Electron_mvaIso_Fall17V2_WP90_;
}
const vector<bool> &Nano::Electron_mvaIso_Fall17V2_WPL() {
    if (!loaded_Electron_mvaIso_Fall17V2_WPL_) counter_uncached_Electron_mvaIso_Fall17V2_WPL_++;
    else counter_cached_Electron_mvaIso_Fall17V2_WPL_++;
    if (!loaded_Electron_mvaIso_Fall17V2_WPL_) {
        if (!b_Electron_mvaIso_Fall17V2_WPL_) throw std::runtime_error("Electron_mvaIso_Fall17V2_WPL branch doesn't exist");
        int bytes = b_Electron_mvaIso_Fall17V2_WPL_->GetEntry(index);
        v_Electron_mvaIso_Fall17V2_WPL_ = vector<bool>(Electron_mvaIso_Fall17V2_WPL_,Electron_mvaIso_Fall17V2_WPL_+bytes/sizeof(Electron_mvaIso_Fall17V2_WPL_[0]));
        loaded_Electron_mvaIso_Fall17V2_WPL_ = true;
    }
    return v_Electron_mvaIso_Fall17V2_WPL_;
}
const vector<bool> &Nano::Electron_mvaIso_WP80() {
    if (!loaded_Electron_mvaIso_WP80_) counter_uncached_Electron_mvaIso_WP80_++;
    else counter_cached_Electron_mvaIso_WP80_++;
    if (!loaded_Electron_mvaIso_WP80_) {
        if (!b_Electron_mvaIso_WP80_) throw std::runtime_error("Electron_mvaIso_WP80 branch doesn't exist");
        int bytes = b_Electron_mvaIso_WP80_->GetEntry(index);
        v_Electron_mvaIso_WP80_ = vector<bool>(Electron_mvaIso_WP80_,Electron_mvaIso_WP80_+bytes/sizeof(Electron_mvaIso_WP80_[0]));
        loaded_Electron_mvaIso_WP80_ = true;
    }
    return v_Electron_mvaIso_WP80_;
}
const vector<bool> &Nano::Electron_mvaIso_WP90() {
    if (!loaded_Electron_mvaIso_WP90_) counter_uncached_Electron_mvaIso_WP90_++;
    else counter_cached_Electron_mvaIso_WP90_++;
    if (!loaded_Electron_mvaIso_WP90_) {
        if (!b_Electron_mvaIso_WP90_) throw std::runtime_error("Electron_mvaIso_WP90 branch doesn't exist");
        int bytes = b_Electron_mvaIso_WP90_->GetEntry(index);
        v_Electron_mvaIso_WP90_ = vector<bool>(Electron_mvaIso_WP90_,Electron_mvaIso_WP90_+bytes/sizeof(Electron_mvaIso_WP90_[0]));
        loaded_Electron_mvaIso_WP90_ = true;
    }
    return v_Electron_mvaIso_WP90_;
}
const vector<float> &Nano::Electron_mvaNoIso() {
    if (!loaded_Electron_mvaNoIso_) counter_uncached_Electron_mvaNoIso_++;
    else counter_cached_Electron_mvaNoIso_++;
    if (!loaded_Electron_mvaNoIso_) {
        if (!b_Electron_mvaNoIso_) throw std::runtime_error("Electron_mvaNoIso branch doesn't exist");
        int bytes = b_Electron_mvaNoIso_->GetEntry(index);
        v_Electron_mvaNoIso_ = vector<float>(Electron_mvaNoIso_,Electron_mvaNoIso_+bytes/sizeof(Electron_mvaNoIso_[0]));
        loaded_Electron_mvaNoIso_ = true;
    }
    return v_Electron_mvaNoIso_;
}
const vector<float> &Nano::Electron_mvaNoIso_Fall17V2() {
    if (!loaded_Electron_mvaNoIso_Fall17V2_) counter_uncached_Electron_mvaNoIso_Fall17V2_++;
    else counter_cached_Electron_mvaNoIso_Fall17V2_++;
    if (!loaded_Electron_mvaNoIso_Fall17V2_) {
        if (!b_Electron_mvaNoIso_Fall17V2_) throw std::runtime_error("Electron_mvaNoIso_Fall17V2 branch doesn't exist");
        int bytes = b_Electron_mvaNoIso_Fall17V2_->GetEntry(index);
        v_Electron_mvaNoIso_Fall17V2_ = vector<float>(Electron_mvaNoIso_Fall17V2_,Electron_mvaNoIso_Fall17V2_+bytes/sizeof(Electron_mvaNoIso_Fall17V2_[0]));
        loaded_Electron_mvaNoIso_Fall17V2_ = true;
    }
    return v_Electron_mvaNoIso_Fall17V2_;
}
const vector<bool> &Nano::Electron_mvaNoIso_Fall17V2_WP80() {
    if (!loaded_Electron_mvaNoIso_Fall17V2_WP80_) counter_uncached_Electron_mvaNoIso_Fall17V2_WP80_++;
    else counter_cached_Electron_mvaNoIso_Fall17V2_WP80_++;
    if (!loaded_Electron_mvaNoIso_Fall17V2_WP80_) {
        if (!b_Electron_mvaNoIso_Fall17V2_WP80_) throw std::runtime_error("Electron_mvaNoIso_Fall17V2_WP80 branch doesn't exist");
        int bytes = b_Electron_mvaNoIso_Fall17V2_WP80_->GetEntry(index);
        v_Electron_mvaNoIso_Fall17V2_WP80_ = vector<bool>(Electron_mvaNoIso_Fall17V2_WP80_,Electron_mvaNoIso_Fall17V2_WP80_+bytes/sizeof(Electron_mvaNoIso_Fall17V2_WP80_[0]));
        loaded_Electron_mvaNoIso_Fall17V2_WP80_ = true;
    }
    return v_Electron_mvaNoIso_Fall17V2_WP80_;
}
const vector<bool> &Nano::Electron_mvaNoIso_Fall17V2_WP90() {
    if (!loaded_Electron_mvaNoIso_Fall17V2_WP90_) counter_uncached_Electron_mvaNoIso_Fall17V2_WP90_++;
    else counter_cached_Electron_mvaNoIso_Fall17V2_WP90_++;
    if (!loaded_Electron_mvaNoIso_Fall17V2_WP90_) {
        if (!b_Electron_mvaNoIso_Fall17V2_WP90_) throw std::runtime_error("Electron_mvaNoIso_Fall17V2_WP90 branch doesn't exist");
        int bytes = b_Electron_mvaNoIso_Fall17V2_WP90_->GetEntry(index);
        v_Electron_mvaNoIso_Fall17V2_WP90_ = vector<bool>(Electron_mvaNoIso_Fall17V2_WP90_,Electron_mvaNoIso_Fall17V2_WP90_+bytes/sizeof(Electron_mvaNoIso_Fall17V2_WP90_[0]));
        loaded_Electron_mvaNoIso_Fall17V2_WP90_ = true;
    }
    return v_Electron_mvaNoIso_Fall17V2_WP90_;
}
const vector<bool> &Nano::Electron_mvaNoIso_Fall17V2_WPL() {
    if (!loaded_Electron_mvaNoIso_Fall17V2_WPL_) counter_uncached_Electron_mvaNoIso_Fall17V2_WPL_++;
    else counter_cached_Electron_mvaNoIso_Fall17V2_WPL_++;
    if (!loaded_Electron_mvaNoIso_Fall17V2_WPL_) {
        if (!b_Electron_mvaNoIso_Fall17V2_WPL_) throw std::runtime_error("Electron_mvaNoIso_Fall17V2_WPL branch doesn't exist");
        int bytes = b_Electron_mvaNoIso_Fall17V2_WPL_->GetEntry(index);
        v_Electron_mvaNoIso_Fall17V2_WPL_ = vector<bool>(Electron_mvaNoIso_Fall17V2_WPL_,Electron_mvaNoIso_Fall17V2_WPL_+bytes/sizeof(Electron_mvaNoIso_Fall17V2_WPL_[0]));
        loaded_Electron_mvaNoIso_Fall17V2_WPL_ = true;
    }
    return v_Electron_mvaNoIso_Fall17V2_WPL_;
}
const vector<bool> &Nano::Electron_mvaNoIso_WP80() {
    if (!loaded_Electron_mvaNoIso_WP80_) counter_uncached_Electron_mvaNoIso_WP80_++;
    else counter_cached_Electron_mvaNoIso_WP80_++;
    if (!loaded_Electron_mvaNoIso_WP80_) {
        if (!b_Electron_mvaNoIso_WP80_) throw std::runtime_error("Electron_mvaNoIso_WP80 branch doesn't exist");
        int bytes = b_Electron_mvaNoIso_WP80_->GetEntry(index);
        v_Electron_mvaNoIso_WP80_ = vector<bool>(Electron_mvaNoIso_WP80_,Electron_mvaNoIso_WP80_+bytes/sizeof(Electron_mvaNoIso_WP80_[0]));
        loaded_Electron_mvaNoIso_WP80_ = true;
    }
    return v_Electron_mvaNoIso_WP80_;
}
const vector<bool> &Nano::Electron_mvaNoIso_WP90() {
    if (!loaded_Electron_mvaNoIso_WP90_) counter_uncached_Electron_mvaNoIso_WP90_++;
    else counter_cached_Electron_mvaNoIso_WP90_++;
    if (!loaded_Electron_mvaNoIso_WP90_) {
        if (!b_Electron_mvaNoIso_WP90_) throw std::runtime_error("Electron_mvaNoIso_WP90 branch doesn't exist");
        int bytes = b_Electron_mvaNoIso_WP90_->GetEntry(index);
        v_Electron_mvaNoIso_WP90_ = vector<bool>(Electron_mvaNoIso_WP90_,Electron_mvaNoIso_WP90_+bytes/sizeof(Electron_mvaNoIso_WP90_[0]));
        loaded_Electron_mvaNoIso_WP90_ = true;
    }
    return v_Electron_mvaNoIso_WP90_;
}
const vector<float> &Nano::Electron_mvaSpring16GP() {
    if (!loaded_Electron_mvaSpring16GP_) counter_uncached_Electron_mvaSpring16GP_++;
    else counter_cached_Electron_mvaSpring16GP_++;
    if (!loaded_Electron_mvaSpring16GP_) {
        if (!b_Electron_mvaSpring16GP_) throw std::runtime_error("Electron_mvaSpring16GP branch doesn't exist");
        int bytes = b_Electron_mvaSpring16GP_->GetEntry(index);
        v_Electron_mvaSpring16GP_ = vector<float>(Electron_mvaSpring16GP_,Electron_mvaSpring16GP_+bytes/sizeof(Electron_mvaSpring16GP_[0]));
        loaded_Electron_mvaSpring16GP_ = true;
    }
    return v_Electron_mvaSpring16GP_;
}
const vector<bool> &Nano::Electron_mvaSpring16GP_WP80() {
    if (!loaded_Electron_mvaSpring16GP_WP80_) counter_uncached_Electron_mvaSpring16GP_WP80_++;
    else counter_cached_Electron_mvaSpring16GP_WP80_++;
    if (!loaded_Electron_mvaSpring16GP_WP80_) {
        if (!b_Electron_mvaSpring16GP_WP80_) throw std::runtime_error("Electron_mvaSpring16GP_WP80 branch doesn't exist");
        int bytes = b_Electron_mvaSpring16GP_WP80_->GetEntry(index);
        v_Electron_mvaSpring16GP_WP80_ = vector<bool>(Electron_mvaSpring16GP_WP80_,Electron_mvaSpring16GP_WP80_+bytes/sizeof(Electron_mvaSpring16GP_WP80_[0]));
        loaded_Electron_mvaSpring16GP_WP80_ = true;
    }
    return v_Electron_mvaSpring16GP_WP80_;
}
const vector<bool> &Nano::Electron_mvaSpring16GP_WP90() {
    if (!loaded_Electron_mvaSpring16GP_WP90_) counter_uncached_Electron_mvaSpring16GP_WP90_++;
    else counter_cached_Electron_mvaSpring16GP_WP90_++;
    if (!loaded_Electron_mvaSpring16GP_WP90_) {
        if (!b_Electron_mvaSpring16GP_WP90_) throw std::runtime_error("Electron_mvaSpring16GP_WP90 branch doesn't exist");
        int bytes = b_Electron_mvaSpring16GP_WP90_->GetEntry(index);
        v_Electron_mvaSpring16GP_WP90_ = vector<bool>(Electron_mvaSpring16GP_WP90_,Electron_mvaSpring16GP_WP90_+bytes/sizeof(Electron_mvaSpring16GP_WP90_[0]));
        loaded_Electron_mvaSpring16GP_WP90_ = true;
    }
    return v_Electron_mvaSpring16GP_WP90_;
}
const vector<float> &Nano::Electron_mvaSpring16HZZ() {
    if (!loaded_Electron_mvaSpring16HZZ_) counter_uncached_Electron_mvaSpring16HZZ_++;
    else counter_cached_Electron_mvaSpring16HZZ_++;
    if (!loaded_Electron_mvaSpring16HZZ_) {
        if (!b_Electron_mvaSpring16HZZ_) throw std::runtime_error("Electron_mvaSpring16HZZ branch doesn't exist");
        int bytes = b_Electron_mvaSpring16HZZ_->GetEntry(index);
        v_Electron_mvaSpring16HZZ_ = vector<float>(Electron_mvaSpring16HZZ_,Electron_mvaSpring16HZZ_+bytes/sizeof(Electron_mvaSpring16HZZ_[0]));
        loaded_Electron_mvaSpring16HZZ_ = true;
    }
    return v_Electron_mvaSpring16HZZ_;
}
const vector<bool> &Nano::Electron_mvaSpring16HZZ_WPL() {
    if (!loaded_Electron_mvaSpring16HZZ_WPL_) counter_uncached_Electron_mvaSpring16HZZ_WPL_++;
    else counter_cached_Electron_mvaSpring16HZZ_WPL_++;
    if (!loaded_Electron_mvaSpring16HZZ_WPL_) {
        if (!b_Electron_mvaSpring16HZZ_WPL_) throw std::runtime_error("Electron_mvaSpring16HZZ_WPL branch doesn't exist");
        int bytes = b_Electron_mvaSpring16HZZ_WPL_->GetEntry(index);
        v_Electron_mvaSpring16HZZ_WPL_ = vector<bool>(Electron_mvaSpring16HZZ_WPL_,Electron_mvaSpring16HZZ_WPL_+bytes/sizeof(Electron_mvaSpring16HZZ_WPL_[0]));
        loaded_Electron_mvaSpring16HZZ_WPL_ = true;
    }
    return v_Electron_mvaSpring16HZZ_WPL_;
}
const vector<float> &Nano::Electron_mvaTTH() {
    if (!loaded_Electron_mvaTTH_) counter_uncached_Electron_mvaTTH_++;
    else counter_cached_Electron_mvaTTH_++;
    if (!loaded_Electron_mvaTTH_) {
        if (!b_Electron_mvaTTH_) throw std::runtime_error("Electron_mvaTTH branch doesn't exist");
        int bytes = b_Electron_mvaTTH_->GetEntry(index);
        v_Electron_mvaTTH_ = vector<float>(Electron_mvaTTH_,Electron_mvaTTH_+bytes/sizeof(Electron_mvaTTH_[0]));
        loaded_Electron_mvaTTH_ = true;
    }
    return v_Electron_mvaTTH_;
}
// NOTE: this is a custom branch; temporarily added for convenience
const vector<float> &Nano::Electron_mvaTTHUL() {
    if (!loaded_Electron_mvaTTHUL_) counter_uncached_Electron_mvaTTHUL_++;
    else counter_cached_Electron_mvaTTHUL_++;
    if (!loaded_Electron_mvaTTHUL_) {
        if (!b_Electron_mvaTTHUL_) throw std::runtime_error("Electron_mvaTTHUL branch doesn't exist");
        int bytes = b_Electron_mvaTTHUL_->GetEntry(index);
        v_Electron_mvaTTHUL_ = vector<float>(Electron_mvaTTHUL_,Electron_mvaTTHUL_+bytes/sizeof(Electron_mvaTTHUL_[0]));
        loaded_Electron_mvaTTHUL_ = true;
    }
    return v_Electron_mvaTTHUL_;
}
//
const vector<LorentzVector> &Nano::Electron_p4() {
    if (!loaded_Electron_p4_) counter_uncached_Electron_p4_++;
    else counter_cached_Electron_p4_++;
    if (!loaded_Electron_p4_) {
        v_Electron_p4_.clear();
        vector<float> pts = Nano::Electron_pt();
        vector<float> etas = Nano::Electron_eta();
        vector<float> phis = Nano::Electron_phi();
        vector<float> masses = Nano::Electron_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_Electron_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_Electron_p4_ = true;
    }
    return v_Electron_p4_;
}
const vector<int> &Nano::Electron_pdgId() {
    if (!loaded_Electron_pdgId_) counter_uncached_Electron_pdgId_++;
    else counter_cached_Electron_pdgId_++;
    if (!loaded_Electron_pdgId_) {
        if (!b_Electron_pdgId_) throw std::runtime_error("Electron_pdgId branch doesn't exist");
        int bytes = b_Electron_pdgId_->GetEntry(index);
        v_Electron_pdgId_ = vector<int>(Electron_pdgId_,Electron_pdgId_+bytes/sizeof(Electron_pdgId_[0]));
        loaded_Electron_pdgId_ = true;
    }
    return v_Electron_pdgId_;
}
const vector<float> &Nano::Electron_pfRelIso03_all() {
    if (!loaded_Electron_pfRelIso03_all_) counter_uncached_Electron_pfRelIso03_all_++;
    else counter_cached_Electron_pfRelIso03_all_++;
    if (!loaded_Electron_pfRelIso03_all_) {
        if (!b_Electron_pfRelIso03_all_) throw std::runtime_error("Electron_pfRelIso03_all branch doesn't exist");
        int bytes = b_Electron_pfRelIso03_all_->GetEntry(index);
        v_Electron_pfRelIso03_all_ = vector<float>(Electron_pfRelIso03_all_,Electron_pfRelIso03_all_+bytes/sizeof(Electron_pfRelIso03_all_[0]));
        loaded_Electron_pfRelIso03_all_ = true;
    }
    return v_Electron_pfRelIso03_all_;
}
const vector<float> &Nano::Electron_pfRelIso03_all_Fall17V2() {
    if (!loaded_Electron_pfRelIso03_all_Fall17V2_) counter_uncached_Electron_pfRelIso03_all_Fall17V2_++;
    else counter_cached_Electron_pfRelIso03_all_Fall17V2_++;
    if (!loaded_Electron_pfRelIso03_all_Fall17V2_) {
        if (!b_Electron_pfRelIso03_all_Fall17V2_) throw std::runtime_error("Electron_pfRelIso03_all_Fall17V2 branch doesn't exist");
        int bytes = b_Electron_pfRelIso03_all_Fall17V2_->GetEntry(index);
        v_Electron_pfRelIso03_all_Fall17V2_ = vector<float>(Electron_pfRelIso03_all_Fall17V2_,Electron_pfRelIso03_all_Fall17V2_+bytes/sizeof(Electron_pfRelIso03_all_Fall17V2_[0]));
        loaded_Electron_pfRelIso03_all_Fall17V2_ = true;
    }
    return v_Electron_pfRelIso03_all_Fall17V2_;
}
const vector<float> &Nano::Electron_pfRelIso03_chg() {
    if (!loaded_Electron_pfRelIso03_chg_) counter_uncached_Electron_pfRelIso03_chg_++;
    else counter_cached_Electron_pfRelIso03_chg_++;
    if (!loaded_Electron_pfRelIso03_chg_) {
        if (!b_Electron_pfRelIso03_chg_) throw std::runtime_error("Electron_pfRelIso03_chg branch doesn't exist");
        int bytes = b_Electron_pfRelIso03_chg_->GetEntry(index);
        v_Electron_pfRelIso03_chg_ = vector<float>(Electron_pfRelIso03_chg_,Electron_pfRelIso03_chg_+bytes/sizeof(Electron_pfRelIso03_chg_[0]));
        loaded_Electron_pfRelIso03_chg_ = true;
    }
    return v_Electron_pfRelIso03_chg_;
}
const vector<float> &Nano::Electron_pfRelIso03_chg_Fall17V2() {
    if (!loaded_Electron_pfRelIso03_chg_Fall17V2_) counter_uncached_Electron_pfRelIso03_chg_Fall17V2_++;
    else counter_cached_Electron_pfRelIso03_chg_Fall17V2_++;
    if (!loaded_Electron_pfRelIso03_chg_Fall17V2_) {
        if (!b_Electron_pfRelIso03_chg_Fall17V2_) throw std::runtime_error("Electron_pfRelIso03_chg_Fall17V2 branch doesn't exist");
        int bytes = b_Electron_pfRelIso03_chg_Fall17V2_->GetEntry(index);
        v_Electron_pfRelIso03_chg_Fall17V2_ = vector<float>(Electron_pfRelIso03_chg_Fall17V2_,Electron_pfRelIso03_chg_Fall17V2_+bytes/sizeof(Electron_pfRelIso03_chg_Fall17V2_[0]));
        loaded_Electron_pfRelIso03_chg_Fall17V2_ = true;
    }
    return v_Electron_pfRelIso03_chg_Fall17V2_;
}
const vector<float> &Nano::Electron_phi() {
    if (!loaded_Electron_phi_) counter_uncached_Electron_phi_++;
    else counter_cached_Electron_phi_++;
    if (!loaded_Electron_phi_) {
        if (!b_Electron_phi_) throw std::runtime_error("Electron_phi branch doesn't exist");
        int bytes = b_Electron_phi_->GetEntry(index);
        v_Electron_phi_ = vector<float>(Electron_phi_,Electron_phi_+bytes/sizeof(Electron_phi_[0]));
        loaded_Electron_phi_ = true;
    }
    return v_Electron_phi_;
}
const vector<int> &Nano::Electron_photonIdx() {
    if (!loaded_Electron_photonIdx_) counter_uncached_Electron_photonIdx_++;
    else counter_cached_Electron_photonIdx_++;
    if (!loaded_Electron_photonIdx_) {
        if (!b_Electron_photonIdx_) throw std::runtime_error("Electron_photonIdx branch doesn't exist");
        int bytes = b_Electron_photonIdx_->GetEntry(index);
        v_Electron_photonIdx_ = vector<int>(Electron_photonIdx_,Electron_photonIdx_+bytes/sizeof(Electron_photonIdx_[0]));
        loaded_Electron_photonIdx_ = true;
    }
    return v_Electron_photonIdx_;
}
const vector<float> &Nano::Electron_pt() {
    if (!loaded_Electron_pt_) counter_uncached_Electron_pt_++;
    else counter_cached_Electron_pt_++;
    if (!loaded_Electron_pt_) {
        if (!b_Electron_pt_) throw std::runtime_error("Electron_pt branch doesn't exist");
        int bytes = b_Electron_pt_->GetEntry(index);
        v_Electron_pt_ = vector<float>(Electron_pt_,Electron_pt_+bytes/sizeof(Electron_pt_[0]));
        loaded_Electron_pt_ = true;
    }
    return v_Electron_pt_;
}
const vector<float> &Nano::Electron_r9() {
    if (!loaded_Electron_r9_) counter_uncached_Electron_r9_++;
    else counter_cached_Electron_r9_++;
    if (!loaded_Electron_r9_) {
        if (!b_Electron_r9_) throw std::runtime_error("Electron_r9 branch doesn't exist");
        int bytes = b_Electron_r9_->GetEntry(index);
        v_Electron_r9_ = vector<float>(Electron_r9_,Electron_r9_+bytes/sizeof(Electron_r9_[0]));
        loaded_Electron_r9_ = true;
    }
    return v_Electron_r9_;
}
const vector<float> &Nano::Electron_scEtOverPt() {
    if (!loaded_Electron_scEtOverPt_) counter_uncached_Electron_scEtOverPt_++;
    else counter_cached_Electron_scEtOverPt_++;
    if (!loaded_Electron_scEtOverPt_) {
        if (!b_Electron_scEtOverPt_) throw std::runtime_error("Electron_scEtOverPt branch doesn't exist");
        int bytes = b_Electron_scEtOverPt_->GetEntry(index);
        v_Electron_scEtOverPt_ = vector<float>(Electron_scEtOverPt_,Electron_scEtOverPt_+bytes/sizeof(Electron_scEtOverPt_[0]));
        loaded_Electron_scEtOverPt_ = true;
    }
    return v_Electron_scEtOverPt_;
}
const vector<UChar_t> &Nano::Electron_seedGain() {
    if (!loaded_Electron_seedGain_) counter_uncached_Electron_seedGain_++;
    else counter_cached_Electron_seedGain_++;
    if (!loaded_Electron_seedGain_) {
        if (!b_Electron_seedGain_) throw std::runtime_error("Electron_seedGain branch doesn't exist");
        int bytes = b_Electron_seedGain_->GetEntry(index);
        v_Electron_seedGain_ = vector<UChar_t>(Electron_seedGain_,Electron_seedGain_+bytes/sizeof(Electron_seedGain_[0]));
        loaded_Electron_seedGain_ = true;
    }
    return v_Electron_seedGain_;
}
const vector<Char_t> &Nano::Electron_seediEtaOriX() {
    if (!loaded_Electron_seediEtaOriX_) counter_uncached_Electron_seediEtaOriX_++;
    else counter_cached_Electron_seediEtaOriX_++;
    if (!loaded_Electron_seediEtaOriX_) {
        if (!b_Electron_seediEtaOriX_) throw std::runtime_error("Electron_seediEtaOriX branch doesn't exist");
        int bytes = b_Electron_seediEtaOriX_->GetEntry(index);
        v_Electron_seediEtaOriX_ = vector<Char_t>(Electron_seediEtaOriX_,Electron_seediEtaOriX_+bytes/sizeof(Electron_seediEtaOriX_[0]));
        loaded_Electron_seediEtaOriX_ = true;
    }
    return v_Electron_seediEtaOriX_;
}
const vector<int> &Nano::Electron_seediPhiOriY() {
    if (!loaded_Electron_seediPhiOriY_) counter_uncached_Electron_seediPhiOriY_++;
    else counter_cached_Electron_seediPhiOriY_++;
    if (!loaded_Electron_seediPhiOriY_) {
        if (!b_Electron_seediPhiOriY_) throw std::runtime_error("Electron_seediPhiOriY branch doesn't exist");
        int bytes = b_Electron_seediPhiOriY_->GetEntry(index);
        v_Electron_seediPhiOriY_ = vector<int>(Electron_seediPhiOriY_,Electron_seediPhiOriY_+bytes/sizeof(Electron_seediPhiOriY_[0]));
        loaded_Electron_seediPhiOriY_ = true;
    }
    return v_Electron_seediPhiOriY_;
}
const vector<float> &Nano::Electron_sieie() {
    if (!loaded_Electron_sieie_) counter_uncached_Electron_sieie_++;
    else counter_cached_Electron_sieie_++;
    if (!loaded_Electron_sieie_) {
        if (!b_Electron_sieie_) throw std::runtime_error("Electron_sieie branch doesn't exist");
        int bytes = b_Electron_sieie_->GetEntry(index);
        v_Electron_sieie_ = vector<float>(Electron_sieie_,Electron_sieie_+bytes/sizeof(Electron_sieie_[0]));
        loaded_Electron_sieie_ = true;
    }
    return v_Electron_sieie_;
}
const vector<float> &Nano::Electron_sip3d() {
    if (!loaded_Electron_sip3d_) counter_uncached_Electron_sip3d_++;
    else counter_cached_Electron_sip3d_++;
    if (!loaded_Electron_sip3d_) {
        if (!b_Electron_sip3d_) throw std::runtime_error("Electron_sip3d branch doesn't exist");
        int bytes = b_Electron_sip3d_->GetEntry(index);
        v_Electron_sip3d_ = vector<float>(Electron_sip3d_,Electron_sip3d_+bytes/sizeof(Electron_sip3d_[0]));
        loaded_Electron_sip3d_ = true;
    }
    return v_Electron_sip3d_;
}
const vector<int> &Nano::Electron_svIdx() {
    if (!loaded_Electron_svIdx_) counter_uncached_Electron_svIdx_++;
    else counter_cached_Electron_svIdx_++;
    if (!loaded_Electron_svIdx_) {
        if (!b_Electron_svIdx_) throw std::runtime_error("Electron_svIdx branch doesn't exist");
        int bytes = b_Electron_svIdx_->GetEntry(index);
        v_Electron_svIdx_ = vector<int>(Electron_svIdx_,Electron_svIdx_+bytes/sizeof(Electron_svIdx_[0]));
        loaded_Electron_svIdx_ = true;
    }
    return v_Electron_svIdx_;
}
const vector<int> &Nano::Electron_tightCharge() {
    if (!loaded_Electron_tightCharge_) counter_uncached_Electron_tightCharge_++;
    else counter_cached_Electron_tightCharge_++;
    if (!loaded_Electron_tightCharge_) {
        if (!b_Electron_tightCharge_) throw std::runtime_error("Electron_tightCharge branch doesn't exist");
        int bytes = b_Electron_tightCharge_->GetEntry(index);
        v_Electron_tightCharge_ = vector<int>(Electron_tightCharge_,Electron_tightCharge_+bytes/sizeof(Electron_tightCharge_[0]));
        loaded_Electron_tightCharge_ = true;
    }
    return v_Electron_tightCharge_;
}
const vector<int> &Nano::Electron_vidNestedWPBitmap() {
    if (!loaded_Electron_vidNestedWPBitmap_) counter_uncached_Electron_vidNestedWPBitmap_++;
    else counter_cached_Electron_vidNestedWPBitmap_++;
    if (!loaded_Electron_vidNestedWPBitmap_) {
        if (!b_Electron_vidNestedWPBitmap_) throw std::runtime_error("Electron_vidNestedWPBitmap branch doesn't exist");
        int bytes = b_Electron_vidNestedWPBitmap_->GetEntry(index);
        v_Electron_vidNestedWPBitmap_ = vector<int>(Electron_vidNestedWPBitmap_,Electron_vidNestedWPBitmap_+bytes/sizeof(Electron_vidNestedWPBitmap_[0]));
        loaded_Electron_vidNestedWPBitmap_ = true;
    }
    return v_Electron_vidNestedWPBitmap_;
}
const vector<int> &Nano::Electron_vidNestedWPBitmapHEEP() {
    if (!loaded_Electron_vidNestedWPBitmapHEEP_) counter_uncached_Electron_vidNestedWPBitmapHEEP_++;
    else counter_cached_Electron_vidNestedWPBitmapHEEP_++;
    if (!loaded_Electron_vidNestedWPBitmapHEEP_) {
        if (!b_Electron_vidNestedWPBitmapHEEP_) throw std::runtime_error("Electron_vidNestedWPBitmapHEEP branch doesn't exist");
        int bytes = b_Electron_vidNestedWPBitmapHEEP_->GetEntry(index);
        v_Electron_vidNestedWPBitmapHEEP_ = vector<int>(Electron_vidNestedWPBitmapHEEP_,Electron_vidNestedWPBitmapHEEP_+bytes/sizeof(Electron_vidNestedWPBitmapHEEP_[0]));
        loaded_Electron_vidNestedWPBitmapHEEP_ = true;
    }
    return v_Electron_vidNestedWPBitmapHEEP_;
}
const vector<int> &Nano::Electron_vidNestedWPBitmap_Fall17V2() {
    if (!loaded_Electron_vidNestedWPBitmap_Fall17V2_) counter_uncached_Electron_vidNestedWPBitmap_Fall17V2_++;
    else counter_cached_Electron_vidNestedWPBitmap_Fall17V2_++;
    if (!loaded_Electron_vidNestedWPBitmap_Fall17V2_) {
        if (!b_Electron_vidNestedWPBitmap_Fall17V2_) throw std::runtime_error("Electron_vidNestedWPBitmap_Fall17V2 branch doesn't exist");
        int bytes = b_Electron_vidNestedWPBitmap_Fall17V2_->GetEntry(index);
        v_Electron_vidNestedWPBitmap_Fall17V2_ = vector<int>(Electron_vidNestedWPBitmap_Fall17V2_,Electron_vidNestedWPBitmap_Fall17V2_+bytes/sizeof(Electron_vidNestedWPBitmap_Fall17V2_[0]));
        loaded_Electron_vidNestedWPBitmap_Fall17V2_ = true;
    }
    return v_Electron_vidNestedWPBitmap_Fall17V2_;
}
const vector<float> &Nano::FatJet_area() {
    if (!loaded_FatJet_area_) counter_uncached_FatJet_area_++;
    else counter_cached_FatJet_area_++;
    if (!loaded_FatJet_area_) {
        if (!b_FatJet_area_) throw std::runtime_error("FatJet_area branch doesn't exist");
        int bytes = b_FatJet_area_->GetEntry(index);
        v_FatJet_area_ = vector<float>(FatJet_area_,FatJet_area_+bytes/sizeof(FatJet_area_[0]));
        loaded_FatJet_area_ = true;
    }
    return v_FatJet_area_;
}
const vector<float> &Nano::FatJet_btagCMVA() {
    if (!loaded_FatJet_btagCMVA_) counter_uncached_FatJet_btagCMVA_++;
    else counter_cached_FatJet_btagCMVA_++;
    if (!loaded_FatJet_btagCMVA_) {
        if (!b_FatJet_btagCMVA_) throw std::runtime_error("FatJet_btagCMVA branch doesn't exist");
        int bytes = b_FatJet_btagCMVA_->GetEntry(index);
        v_FatJet_btagCMVA_ = vector<float>(FatJet_btagCMVA_,FatJet_btagCMVA_+bytes/sizeof(FatJet_btagCMVA_[0]));
        loaded_FatJet_btagCMVA_ = true;
    }
    return v_FatJet_btagCMVA_;
}
const vector<float> &Nano::FatJet_btagCSVV2() {
    if (!loaded_FatJet_btagCSVV2_) counter_uncached_FatJet_btagCSVV2_++;
    else counter_cached_FatJet_btagCSVV2_++;
    if (!loaded_FatJet_btagCSVV2_) {
        if (!b_FatJet_btagCSVV2_) throw std::runtime_error("FatJet_btagCSVV2 branch doesn't exist");
        int bytes = b_FatJet_btagCSVV2_->GetEntry(index);
        v_FatJet_btagCSVV2_ = vector<float>(FatJet_btagCSVV2_,FatJet_btagCSVV2_+bytes/sizeof(FatJet_btagCSVV2_[0]));
        loaded_FatJet_btagCSVV2_ = true;
    }
    return v_FatJet_btagCSVV2_;
}
const vector<float> &Nano::FatJet_btagDDBvL() {
    if (!loaded_FatJet_btagDDBvL_) counter_uncached_FatJet_btagDDBvL_++;
    else counter_cached_FatJet_btagDDBvL_++;
    if (!loaded_FatJet_btagDDBvL_) {
        if (!b_FatJet_btagDDBvL_) throw std::runtime_error("FatJet_btagDDBvL branch doesn't exist");
        int bytes = b_FatJet_btagDDBvL_->GetEntry(index);
        v_FatJet_btagDDBvL_ = vector<float>(FatJet_btagDDBvL_,FatJet_btagDDBvL_+bytes/sizeof(FatJet_btagDDBvL_[0]));
        loaded_FatJet_btagDDBvL_ = true;
    }
    return v_FatJet_btagDDBvL_;
}
const vector<float> &Nano::FatJet_btagDDBvLV2() {
    if (!loaded_FatJet_btagDDBvLV2_) counter_uncached_FatJet_btagDDBvLV2_++;
    else counter_cached_FatJet_btagDDBvLV2_++;
    if (!loaded_FatJet_btagDDBvLV2_) {
        if (!b_FatJet_btagDDBvLV2_) throw std::runtime_error("FatJet_btagDDBvLV2 branch doesn't exist");
        int bytes = b_FatJet_btagDDBvLV2_->GetEntry(index);
        v_FatJet_btagDDBvLV2_ = vector<float>(FatJet_btagDDBvLV2_,FatJet_btagDDBvLV2_+bytes/sizeof(FatJet_btagDDBvLV2_[0]));
        loaded_FatJet_btagDDBvLV2_ = true;
    }
    return v_FatJet_btagDDBvLV2_;
}
const vector<float> &Nano::FatJet_btagDDBvL_noMD() {
    if (!loaded_FatJet_btagDDBvL_noMD_) counter_uncached_FatJet_btagDDBvL_noMD_++;
    else counter_cached_FatJet_btagDDBvL_noMD_++;
    if (!loaded_FatJet_btagDDBvL_noMD_) {
        if (!b_FatJet_btagDDBvL_noMD_) throw std::runtime_error("FatJet_btagDDBvL_noMD branch doesn't exist");
        int bytes = b_FatJet_btagDDBvL_noMD_->GetEntry(index);
        v_FatJet_btagDDBvL_noMD_ = vector<float>(FatJet_btagDDBvL_noMD_,FatJet_btagDDBvL_noMD_+bytes/sizeof(FatJet_btagDDBvL_noMD_[0]));
        loaded_FatJet_btagDDBvL_noMD_ = true;
    }
    return v_FatJet_btagDDBvL_noMD_;
}
const vector<float> &Nano::FatJet_btagDDCvB() {
    if (!loaded_FatJet_btagDDCvB_) counter_uncached_FatJet_btagDDCvB_++;
    else counter_cached_FatJet_btagDDCvB_++;
    if (!loaded_FatJet_btagDDCvB_) {
        if (!b_FatJet_btagDDCvB_) throw std::runtime_error("FatJet_btagDDCvB branch doesn't exist");
        int bytes = b_FatJet_btagDDCvB_->GetEntry(index);
        v_FatJet_btagDDCvB_ = vector<float>(FatJet_btagDDCvB_,FatJet_btagDDCvB_+bytes/sizeof(FatJet_btagDDCvB_[0]));
        loaded_FatJet_btagDDCvB_ = true;
    }
    return v_FatJet_btagDDCvB_;
}
const vector<float> &Nano::FatJet_btagDDCvBV2() {
    if (!loaded_FatJet_btagDDCvBV2_) counter_uncached_FatJet_btagDDCvBV2_++;
    else counter_cached_FatJet_btagDDCvBV2_++;
    if (!loaded_FatJet_btagDDCvBV2_) {
        if (!b_FatJet_btagDDCvBV2_) throw std::runtime_error("FatJet_btagDDCvBV2 branch doesn't exist");
        int bytes = b_FatJet_btagDDCvBV2_->GetEntry(index);
        v_FatJet_btagDDCvBV2_ = vector<float>(FatJet_btagDDCvBV2_,FatJet_btagDDCvBV2_+bytes/sizeof(FatJet_btagDDCvBV2_[0]));
        loaded_FatJet_btagDDCvBV2_ = true;
    }
    return v_FatJet_btagDDCvBV2_;
}
const vector<float> &Nano::FatJet_btagDDCvB_noMD() {
    if (!loaded_FatJet_btagDDCvB_noMD_) counter_uncached_FatJet_btagDDCvB_noMD_++;
    else counter_cached_FatJet_btagDDCvB_noMD_++;
    if (!loaded_FatJet_btagDDCvB_noMD_) {
        if (!b_FatJet_btagDDCvB_noMD_) throw std::runtime_error("FatJet_btagDDCvB_noMD branch doesn't exist");
        int bytes = b_FatJet_btagDDCvB_noMD_->GetEntry(index);
        v_FatJet_btagDDCvB_noMD_ = vector<float>(FatJet_btagDDCvB_noMD_,FatJet_btagDDCvB_noMD_+bytes/sizeof(FatJet_btagDDCvB_noMD_[0]));
        loaded_FatJet_btagDDCvB_noMD_ = true;
    }
    return v_FatJet_btagDDCvB_noMD_;
}
const vector<float> &Nano::FatJet_btagDDCvL() {
    if (!loaded_FatJet_btagDDCvL_) counter_uncached_FatJet_btagDDCvL_++;
    else counter_cached_FatJet_btagDDCvL_++;
    if (!loaded_FatJet_btagDDCvL_) {
        if (!b_FatJet_btagDDCvL_) throw std::runtime_error("FatJet_btagDDCvL branch doesn't exist");
        int bytes = b_FatJet_btagDDCvL_->GetEntry(index);
        v_FatJet_btagDDCvL_ = vector<float>(FatJet_btagDDCvL_,FatJet_btagDDCvL_+bytes/sizeof(FatJet_btagDDCvL_[0]));
        loaded_FatJet_btagDDCvL_ = true;
    }
    return v_FatJet_btagDDCvL_;
}
const vector<float> &Nano::FatJet_btagDDCvLV2() {
    if (!loaded_FatJet_btagDDCvLV2_) counter_uncached_FatJet_btagDDCvLV2_++;
    else counter_cached_FatJet_btagDDCvLV2_++;
    if (!loaded_FatJet_btagDDCvLV2_) {
        if (!b_FatJet_btagDDCvLV2_) throw std::runtime_error("FatJet_btagDDCvLV2 branch doesn't exist");
        int bytes = b_FatJet_btagDDCvLV2_->GetEntry(index);
        v_FatJet_btagDDCvLV2_ = vector<float>(FatJet_btagDDCvLV2_,FatJet_btagDDCvLV2_+bytes/sizeof(FatJet_btagDDCvLV2_[0]));
        loaded_FatJet_btagDDCvLV2_ = true;
    }
    return v_FatJet_btagDDCvLV2_;
}
const vector<float> &Nano::FatJet_btagDDCvL_noMD() {
    if (!loaded_FatJet_btagDDCvL_noMD_) counter_uncached_FatJet_btagDDCvL_noMD_++;
    else counter_cached_FatJet_btagDDCvL_noMD_++;
    if (!loaded_FatJet_btagDDCvL_noMD_) {
        if (!b_FatJet_btagDDCvL_noMD_) throw std::runtime_error("FatJet_btagDDCvL_noMD branch doesn't exist");
        int bytes = b_FatJet_btagDDCvL_noMD_->GetEntry(index);
        v_FatJet_btagDDCvL_noMD_ = vector<float>(FatJet_btagDDCvL_noMD_,FatJet_btagDDCvL_noMD_+bytes/sizeof(FatJet_btagDDCvL_noMD_[0]));
        loaded_FatJet_btagDDCvL_noMD_ = true;
    }
    return v_FatJet_btagDDCvL_noMD_;
}
const vector<float> &Nano::FatJet_btagDeepB() {
    if (!loaded_FatJet_btagDeepB_) counter_uncached_FatJet_btagDeepB_++;
    else counter_cached_FatJet_btagDeepB_++;
    if (!loaded_FatJet_btagDeepB_) {
        if (!b_FatJet_btagDeepB_) throw std::runtime_error("FatJet_btagDeepB branch doesn't exist");
        int bytes = b_FatJet_btagDeepB_->GetEntry(index);
        v_FatJet_btagDeepB_ = vector<float>(FatJet_btagDeepB_,FatJet_btagDeepB_+bytes/sizeof(FatJet_btagDeepB_[0]));
        loaded_FatJet_btagDeepB_ = true;
    }
    return v_FatJet_btagDeepB_;
}
const vector<float> &Nano::FatJet_btagHbb() {
    if (!loaded_FatJet_btagHbb_) counter_uncached_FatJet_btagHbb_++;
    else counter_cached_FatJet_btagHbb_++;
    if (!loaded_FatJet_btagHbb_) {
        if (!b_FatJet_btagHbb_) throw std::runtime_error("FatJet_btagHbb branch doesn't exist");
        int bytes = b_FatJet_btagHbb_->GetEntry(index);
        v_FatJet_btagHbb_ = vector<float>(FatJet_btagHbb_,FatJet_btagHbb_+bytes/sizeof(FatJet_btagHbb_[0]));
        loaded_FatJet_btagHbb_ = true;
    }
    return v_FatJet_btagHbb_;
}
const vector<float> &Nano::FatJet_corr_JEC() {
    if (!loaded_FatJet_corr_JEC_) counter_uncached_FatJet_corr_JEC_++;
    else counter_cached_FatJet_corr_JEC_++;
    if (!loaded_FatJet_corr_JEC_) {
        if (!b_FatJet_corr_JEC_) throw std::runtime_error("FatJet_corr_JEC branch doesn't exist");
        int bytes = b_FatJet_corr_JEC_->GetEntry(index);
        v_FatJet_corr_JEC_ = vector<float>(FatJet_corr_JEC_,FatJet_corr_JEC_+bytes/sizeof(FatJet_corr_JEC_[0]));
        loaded_FatJet_corr_JEC_ = true;
    }
    return v_FatJet_corr_JEC_;
}
const vector<float> &Nano::FatJet_corr_JER() {
    if (!loaded_FatJet_corr_JER_) counter_uncached_FatJet_corr_JER_++;
    else counter_cached_FatJet_corr_JER_++;
    if (!loaded_FatJet_corr_JER_) {
        if (!b_FatJet_corr_JER_) throw std::runtime_error("FatJet_corr_JER branch doesn't exist");
        int bytes = b_FatJet_corr_JER_->GetEntry(index);
        v_FatJet_corr_JER_ = vector<float>(FatJet_corr_JER_,FatJet_corr_JER_+bytes/sizeof(FatJet_corr_JER_[0]));
        loaded_FatJet_corr_JER_ = true;
    }
    return v_FatJet_corr_JER_;
}
const vector<float> &Nano::FatJet_corr_JMR() {
    if (!loaded_FatJet_corr_JMR_) counter_uncached_FatJet_corr_JMR_++;
    else counter_cached_FatJet_corr_JMR_++;
    if (!loaded_FatJet_corr_JMR_) {
        if (!b_FatJet_corr_JMR_) throw std::runtime_error("FatJet_corr_JMR branch doesn't exist");
        int bytes = b_FatJet_corr_JMR_->GetEntry(index);
        v_FatJet_corr_JMR_ = vector<float>(FatJet_corr_JMR_,FatJet_corr_JMR_+bytes/sizeof(FatJet_corr_JMR_[0]));
        loaded_FatJet_corr_JMR_ = true;
    }
    return v_FatJet_corr_JMR_;
}
const vector<float> &Nano::FatJet_corr_JMS() {
    if (!loaded_FatJet_corr_JMS_) counter_uncached_FatJet_corr_JMS_++;
    else counter_cached_FatJet_corr_JMS_++;
    if (!loaded_FatJet_corr_JMS_) {
        if (!b_FatJet_corr_JMS_) throw std::runtime_error("FatJet_corr_JMS branch doesn't exist");
        int bytes = b_FatJet_corr_JMS_->GetEntry(index);
        v_FatJet_corr_JMS_ = vector<float>(FatJet_corr_JMS_,FatJet_corr_JMS_+bytes/sizeof(FatJet_corr_JMS_[0]));
        loaded_FatJet_corr_JMS_ = true;
    }
    return v_FatJet_corr_JMS_;
}
const vector<float> &Nano::FatJet_deepTagMD_H4qvsQCD() {
    if (!loaded_FatJet_deepTagMD_H4qvsQCD_) counter_uncached_FatJet_deepTagMD_H4qvsQCD_++;
    else counter_cached_FatJet_deepTagMD_H4qvsQCD_++;
    if (!loaded_FatJet_deepTagMD_H4qvsQCD_) {
        if (!b_FatJet_deepTagMD_H4qvsQCD_) throw std::runtime_error("FatJet_deepTagMD_H4qvsQCD branch doesn't exist");
        int bytes = b_FatJet_deepTagMD_H4qvsQCD_->GetEntry(index);
        v_FatJet_deepTagMD_H4qvsQCD_ = vector<float>(FatJet_deepTagMD_H4qvsQCD_,FatJet_deepTagMD_H4qvsQCD_+bytes/sizeof(FatJet_deepTagMD_H4qvsQCD_[0]));
        loaded_FatJet_deepTagMD_H4qvsQCD_ = true;
    }
    return v_FatJet_deepTagMD_H4qvsQCD_;
}
const vector<float> &Nano::FatJet_deepTagMD_HbbvsQCD() {
    if (!loaded_FatJet_deepTagMD_HbbvsQCD_) counter_uncached_FatJet_deepTagMD_HbbvsQCD_++;
    else counter_cached_FatJet_deepTagMD_HbbvsQCD_++;
    if (!loaded_FatJet_deepTagMD_HbbvsQCD_) {
        if (!b_FatJet_deepTagMD_HbbvsQCD_) throw std::runtime_error("FatJet_deepTagMD_HbbvsQCD branch doesn't exist");
        int bytes = b_FatJet_deepTagMD_HbbvsQCD_->GetEntry(index);
        v_FatJet_deepTagMD_HbbvsQCD_ = vector<float>(FatJet_deepTagMD_HbbvsQCD_,FatJet_deepTagMD_HbbvsQCD_+bytes/sizeof(FatJet_deepTagMD_HbbvsQCD_[0]));
        loaded_FatJet_deepTagMD_HbbvsQCD_ = true;
    }
    return v_FatJet_deepTagMD_HbbvsQCD_;
}
const vector<float> &Nano::FatJet_deepTagMD_TvsQCD() {
    if (!loaded_FatJet_deepTagMD_TvsQCD_) counter_uncached_FatJet_deepTagMD_TvsQCD_++;
    else counter_cached_FatJet_deepTagMD_TvsQCD_++;
    if (!loaded_FatJet_deepTagMD_TvsQCD_) {
        if (!b_FatJet_deepTagMD_TvsQCD_) throw std::runtime_error("FatJet_deepTagMD_TvsQCD branch doesn't exist");
        int bytes = b_FatJet_deepTagMD_TvsQCD_->GetEntry(index);
        v_FatJet_deepTagMD_TvsQCD_ = vector<float>(FatJet_deepTagMD_TvsQCD_,FatJet_deepTagMD_TvsQCD_+bytes/sizeof(FatJet_deepTagMD_TvsQCD_[0]));
        loaded_FatJet_deepTagMD_TvsQCD_ = true;
    }
    return v_FatJet_deepTagMD_TvsQCD_;
}
const vector<float> &Nano::FatJet_deepTagMD_WvsQCD() {
    if (!loaded_FatJet_deepTagMD_WvsQCD_) counter_uncached_FatJet_deepTagMD_WvsQCD_++;
    else counter_cached_FatJet_deepTagMD_WvsQCD_++;
    if (!loaded_FatJet_deepTagMD_WvsQCD_) {
        if (!b_FatJet_deepTagMD_WvsQCD_) throw std::runtime_error("FatJet_deepTagMD_WvsQCD branch doesn't exist");
        int bytes = b_FatJet_deepTagMD_WvsQCD_->GetEntry(index);
        v_FatJet_deepTagMD_WvsQCD_ = vector<float>(FatJet_deepTagMD_WvsQCD_,FatJet_deepTagMD_WvsQCD_+bytes/sizeof(FatJet_deepTagMD_WvsQCD_[0]));
        loaded_FatJet_deepTagMD_WvsQCD_ = true;
    }
    return v_FatJet_deepTagMD_WvsQCD_;
}
const vector<float> &Nano::FatJet_deepTagMD_ZHbbvsQCD() {
    if (!loaded_FatJet_deepTagMD_ZHbbvsQCD_) counter_uncached_FatJet_deepTagMD_ZHbbvsQCD_++;
    else counter_cached_FatJet_deepTagMD_ZHbbvsQCD_++;
    if (!loaded_FatJet_deepTagMD_ZHbbvsQCD_) {
        if (!b_FatJet_deepTagMD_ZHbbvsQCD_) throw std::runtime_error("FatJet_deepTagMD_ZHbbvsQCD branch doesn't exist");
        int bytes = b_FatJet_deepTagMD_ZHbbvsQCD_->GetEntry(index);
        v_FatJet_deepTagMD_ZHbbvsQCD_ = vector<float>(FatJet_deepTagMD_ZHbbvsQCD_,FatJet_deepTagMD_ZHbbvsQCD_+bytes/sizeof(FatJet_deepTagMD_ZHbbvsQCD_[0]));
        loaded_FatJet_deepTagMD_ZHbbvsQCD_ = true;
    }
    return v_FatJet_deepTagMD_ZHbbvsQCD_;
}
const vector<float> &Nano::FatJet_deepTagMD_ZHccvsQCD() {
    if (!loaded_FatJet_deepTagMD_ZHccvsQCD_) counter_uncached_FatJet_deepTagMD_ZHccvsQCD_++;
    else counter_cached_FatJet_deepTagMD_ZHccvsQCD_++;
    if (!loaded_FatJet_deepTagMD_ZHccvsQCD_) {
        if (!b_FatJet_deepTagMD_ZHccvsQCD_) throw std::runtime_error("FatJet_deepTagMD_ZHccvsQCD branch doesn't exist");
        int bytes = b_FatJet_deepTagMD_ZHccvsQCD_->GetEntry(index);
        v_FatJet_deepTagMD_ZHccvsQCD_ = vector<float>(FatJet_deepTagMD_ZHccvsQCD_,FatJet_deepTagMD_ZHccvsQCD_+bytes/sizeof(FatJet_deepTagMD_ZHccvsQCD_[0]));
        loaded_FatJet_deepTagMD_ZHccvsQCD_ = true;
    }
    return v_FatJet_deepTagMD_ZHccvsQCD_;
}
const vector<float> &Nano::FatJet_deepTagMD_ZbbvsQCD() {
    if (!loaded_FatJet_deepTagMD_ZbbvsQCD_) counter_uncached_FatJet_deepTagMD_ZbbvsQCD_++;
    else counter_cached_FatJet_deepTagMD_ZbbvsQCD_++;
    if (!loaded_FatJet_deepTagMD_ZbbvsQCD_) {
        if (!b_FatJet_deepTagMD_ZbbvsQCD_) throw std::runtime_error("FatJet_deepTagMD_ZbbvsQCD branch doesn't exist");
        int bytes = b_FatJet_deepTagMD_ZbbvsQCD_->GetEntry(index);
        v_FatJet_deepTagMD_ZbbvsQCD_ = vector<float>(FatJet_deepTagMD_ZbbvsQCD_,FatJet_deepTagMD_ZbbvsQCD_+bytes/sizeof(FatJet_deepTagMD_ZbbvsQCD_[0]));
        loaded_FatJet_deepTagMD_ZbbvsQCD_ = true;
    }
    return v_FatJet_deepTagMD_ZbbvsQCD_;
}
const vector<float> &Nano::FatJet_deepTagMD_ZvsQCD() {
    if (!loaded_FatJet_deepTagMD_ZvsQCD_) counter_uncached_FatJet_deepTagMD_ZvsQCD_++;
    else counter_cached_FatJet_deepTagMD_ZvsQCD_++;
    if (!loaded_FatJet_deepTagMD_ZvsQCD_) {
        if (!b_FatJet_deepTagMD_ZvsQCD_) throw std::runtime_error("FatJet_deepTagMD_ZvsQCD branch doesn't exist");
        int bytes = b_FatJet_deepTagMD_ZvsQCD_->GetEntry(index);
        v_FatJet_deepTagMD_ZvsQCD_ = vector<float>(FatJet_deepTagMD_ZvsQCD_,FatJet_deepTagMD_ZvsQCD_+bytes/sizeof(FatJet_deepTagMD_ZvsQCD_[0]));
        loaded_FatJet_deepTagMD_ZvsQCD_ = true;
    }
    return v_FatJet_deepTagMD_ZvsQCD_;
}
const vector<float> &Nano::FatJet_deepTagMD_bbvsLight() {
    if (!loaded_FatJet_deepTagMD_bbvsLight_) counter_uncached_FatJet_deepTagMD_bbvsLight_++;
    else counter_cached_FatJet_deepTagMD_bbvsLight_++;
    if (!loaded_FatJet_deepTagMD_bbvsLight_) {
        if (!b_FatJet_deepTagMD_bbvsLight_) throw std::runtime_error("FatJet_deepTagMD_bbvsLight branch doesn't exist");
        int bytes = b_FatJet_deepTagMD_bbvsLight_->GetEntry(index);
        v_FatJet_deepTagMD_bbvsLight_ = vector<float>(FatJet_deepTagMD_bbvsLight_,FatJet_deepTagMD_bbvsLight_+bytes/sizeof(FatJet_deepTagMD_bbvsLight_[0]));
        loaded_FatJet_deepTagMD_bbvsLight_ = true;
    }
    return v_FatJet_deepTagMD_bbvsLight_;
}
const vector<float> &Nano::FatJet_deepTagMD_ccvsLight() {
    if (!loaded_FatJet_deepTagMD_ccvsLight_) counter_uncached_FatJet_deepTagMD_ccvsLight_++;
    else counter_cached_FatJet_deepTagMD_ccvsLight_++;
    if (!loaded_FatJet_deepTagMD_ccvsLight_) {
        if (!b_FatJet_deepTagMD_ccvsLight_) throw std::runtime_error("FatJet_deepTagMD_ccvsLight branch doesn't exist");
        int bytes = b_FatJet_deepTagMD_ccvsLight_->GetEntry(index);
        v_FatJet_deepTagMD_ccvsLight_ = vector<float>(FatJet_deepTagMD_ccvsLight_,FatJet_deepTagMD_ccvsLight_+bytes/sizeof(FatJet_deepTagMD_ccvsLight_[0]));
        loaded_FatJet_deepTagMD_ccvsLight_ = true;
    }
    return v_FatJet_deepTagMD_ccvsLight_;
}
const vector<float> &Nano::FatJet_deepTag_H() {
    if (!loaded_FatJet_deepTag_H_) counter_uncached_FatJet_deepTag_H_++;
    else counter_cached_FatJet_deepTag_H_++;
    if (!loaded_FatJet_deepTag_H_) {
        if (!b_FatJet_deepTag_H_) throw std::runtime_error("FatJet_deepTag_H branch doesn't exist");
        int bytes = b_FatJet_deepTag_H_->GetEntry(index);
        v_FatJet_deepTag_H_ = vector<float>(FatJet_deepTag_H_,FatJet_deepTag_H_+bytes/sizeof(FatJet_deepTag_H_[0]));
        loaded_FatJet_deepTag_H_ = true;
    }
    return v_FatJet_deepTag_H_;
}
const vector<float> &Nano::FatJet_deepTag_QCD() {
    if (!loaded_FatJet_deepTag_QCD_) counter_uncached_FatJet_deepTag_QCD_++;
    else counter_cached_FatJet_deepTag_QCD_++;
    if (!loaded_FatJet_deepTag_QCD_) {
        if (!b_FatJet_deepTag_QCD_) throw std::runtime_error("FatJet_deepTag_QCD branch doesn't exist");
        int bytes = b_FatJet_deepTag_QCD_->GetEntry(index);
        v_FatJet_deepTag_QCD_ = vector<float>(FatJet_deepTag_QCD_,FatJet_deepTag_QCD_+bytes/sizeof(FatJet_deepTag_QCD_[0]));
        loaded_FatJet_deepTag_QCD_ = true;
    }
    return v_FatJet_deepTag_QCD_;
}
const vector<float> &Nano::FatJet_deepTag_QCDothers() {
    if (!loaded_FatJet_deepTag_QCDothers_) counter_uncached_FatJet_deepTag_QCDothers_++;
    else counter_cached_FatJet_deepTag_QCDothers_++;
    if (!loaded_FatJet_deepTag_QCDothers_) {
        if (!b_FatJet_deepTag_QCDothers_) throw std::runtime_error("FatJet_deepTag_QCDothers branch doesn't exist");
        int bytes = b_FatJet_deepTag_QCDothers_->GetEntry(index);
        v_FatJet_deepTag_QCDothers_ = vector<float>(FatJet_deepTag_QCDothers_,FatJet_deepTag_QCDothers_+bytes/sizeof(FatJet_deepTag_QCDothers_[0]));
        loaded_FatJet_deepTag_QCDothers_ = true;
    }
    return v_FatJet_deepTag_QCDothers_;
}
const vector<float> &Nano::FatJet_deepTag_TvsQCD() {
    if (!loaded_FatJet_deepTag_TvsQCD_) counter_uncached_FatJet_deepTag_TvsQCD_++;
    else counter_cached_FatJet_deepTag_TvsQCD_++;
    if (!loaded_FatJet_deepTag_TvsQCD_) {
        if (!b_FatJet_deepTag_TvsQCD_) throw std::runtime_error("FatJet_deepTag_TvsQCD branch doesn't exist");
        int bytes = b_FatJet_deepTag_TvsQCD_->GetEntry(index);
        v_FatJet_deepTag_TvsQCD_ = vector<float>(FatJet_deepTag_TvsQCD_,FatJet_deepTag_TvsQCD_+bytes/sizeof(FatJet_deepTag_TvsQCD_[0]));
        loaded_FatJet_deepTag_TvsQCD_ = true;
    }
    return v_FatJet_deepTag_TvsQCD_;
}
const vector<float> &Nano::FatJet_deepTag_WvsQCD() {
    if (!loaded_FatJet_deepTag_WvsQCD_) counter_uncached_FatJet_deepTag_WvsQCD_++;
    else counter_cached_FatJet_deepTag_WvsQCD_++;
    if (!loaded_FatJet_deepTag_WvsQCD_) {
        if (!b_FatJet_deepTag_WvsQCD_) throw std::runtime_error("FatJet_deepTag_WvsQCD branch doesn't exist");
        int bytes = b_FatJet_deepTag_WvsQCD_->GetEntry(index);
        v_FatJet_deepTag_WvsQCD_ = vector<float>(FatJet_deepTag_WvsQCD_,FatJet_deepTag_WvsQCD_+bytes/sizeof(FatJet_deepTag_WvsQCD_[0]));
        loaded_FatJet_deepTag_WvsQCD_ = true;
    }
    return v_FatJet_deepTag_WvsQCD_;
}
const vector<float> &Nano::FatJet_deepTag_ZvsQCD() {
    if (!loaded_FatJet_deepTag_ZvsQCD_) counter_uncached_FatJet_deepTag_ZvsQCD_++;
    else counter_cached_FatJet_deepTag_ZvsQCD_++;
    if (!loaded_FatJet_deepTag_ZvsQCD_) {
        if (!b_FatJet_deepTag_ZvsQCD_) throw std::runtime_error("FatJet_deepTag_ZvsQCD branch doesn't exist");
        int bytes = b_FatJet_deepTag_ZvsQCD_->GetEntry(index);
        v_FatJet_deepTag_ZvsQCD_ = vector<float>(FatJet_deepTag_ZvsQCD_,FatJet_deepTag_ZvsQCD_+bytes/sizeof(FatJet_deepTag_ZvsQCD_[0]));
        loaded_FatJet_deepTag_ZvsQCD_ = true;
    }
    return v_FatJet_deepTag_ZvsQCD_;
}
const vector<int> &Nano::FatJet_electronIdx3SJ() {
    if (!loaded_FatJet_electronIdx3SJ_) counter_uncached_FatJet_electronIdx3SJ_++;
    else counter_cached_FatJet_electronIdx3SJ_++;
    if (!loaded_FatJet_electronIdx3SJ_) {
        if (!b_FatJet_electronIdx3SJ_) throw std::runtime_error("FatJet_electronIdx3SJ branch doesn't exist");
        int bytes = b_FatJet_electronIdx3SJ_->GetEntry(index);
        v_FatJet_electronIdx3SJ_ = vector<int>(FatJet_electronIdx3SJ_,FatJet_electronIdx3SJ_+bytes/sizeof(FatJet_electronIdx3SJ_[0]));
        loaded_FatJet_electronIdx3SJ_ = true;
    }
    return v_FatJet_electronIdx3SJ_;
}
const vector<float> &Nano::FatJet_eta() {
    if (!loaded_FatJet_eta_) counter_uncached_FatJet_eta_++;
    else counter_cached_FatJet_eta_++;
    if (!loaded_FatJet_eta_) {
        if (!b_FatJet_eta_) throw std::runtime_error("FatJet_eta branch doesn't exist");
        int bytes = b_FatJet_eta_->GetEntry(index);
        v_FatJet_eta_ = vector<float>(FatJet_eta_,FatJet_eta_+bytes/sizeof(FatJet_eta_[0]));
        loaded_FatJet_eta_ = true;
    }
    return v_FatJet_eta_;
}
const vector<int> &Nano::FatJet_genJetAK8Idx() {
    if (!loaded_FatJet_genJetAK8Idx_) counter_uncached_FatJet_genJetAK8Idx_++;
    else counter_cached_FatJet_genJetAK8Idx_++;
    if (!loaded_FatJet_genJetAK8Idx_) {
        if (!b_FatJet_genJetAK8Idx_) throw std::runtime_error("FatJet_genJetAK8Idx branch doesn't exist");
        int bytes = b_FatJet_genJetAK8Idx_->GetEntry(index);
        v_FatJet_genJetAK8Idx_ = vector<int>(FatJet_genJetAK8Idx_,FatJet_genJetAK8Idx_+bytes/sizeof(FatJet_genJetAK8Idx_[0]));
        loaded_FatJet_genJetAK8Idx_ = true;
    }
    return v_FatJet_genJetAK8Idx_;
}
const vector<int> &Nano::FatJet_hadronFlavour() {
    if (!loaded_FatJet_hadronFlavour_) counter_uncached_FatJet_hadronFlavour_++;
    else counter_cached_FatJet_hadronFlavour_++;
    if (!loaded_FatJet_hadronFlavour_) {
        if (!b_FatJet_hadronFlavour_) throw std::runtime_error("FatJet_hadronFlavour branch doesn't exist");
        int bytes = b_FatJet_hadronFlavour_->GetEntry(index);
        v_FatJet_hadronFlavour_ = vector<int>(FatJet_hadronFlavour_,FatJet_hadronFlavour_+bytes/sizeof(FatJet_hadronFlavour_[0]));
        loaded_FatJet_hadronFlavour_ = true;
    }
    return v_FatJet_hadronFlavour_;
}
const vector<int> &Nano::FatJet_jetId() {
    if (!loaded_FatJet_jetId_) counter_uncached_FatJet_jetId_++;
    else counter_cached_FatJet_jetId_++;
    if (!loaded_FatJet_jetId_) {
        if (!b_FatJet_jetId_) throw std::runtime_error("FatJet_jetId branch doesn't exist");
        int bytes = b_FatJet_jetId_->GetEntry(index);
        v_FatJet_jetId_ = vector<int>(FatJet_jetId_,FatJet_jetId_+bytes/sizeof(FatJet_jetId_[0]));
        loaded_FatJet_jetId_ = true;
    }
    return v_FatJet_jetId_;
}
const vector<float> &Nano::FatJet_lsf3() {
    if (!loaded_FatJet_lsf3_) counter_uncached_FatJet_lsf3_++;
    else counter_cached_FatJet_lsf3_++;
    if (!loaded_FatJet_lsf3_) {
        if (!b_FatJet_lsf3_) throw std::runtime_error("FatJet_lsf3 branch doesn't exist");
        int bytes = b_FatJet_lsf3_->GetEntry(index);
        v_FatJet_lsf3_ = vector<float>(FatJet_lsf3_,FatJet_lsf3_+bytes/sizeof(FatJet_lsf3_[0]));
        loaded_FatJet_lsf3_ = true;
    }
    return v_FatJet_lsf3_;
}
const vector<float> &Nano::FatJet_mass() {
    if (!loaded_FatJet_mass_) counter_uncached_FatJet_mass_++;
    else counter_cached_FatJet_mass_++;
    if (!loaded_FatJet_mass_) {
        if (!b_FatJet_mass_) throw std::runtime_error("FatJet_mass branch doesn't exist");
        int bytes = b_FatJet_mass_->GetEntry(index);
        v_FatJet_mass_ = vector<float>(FatJet_mass_,FatJet_mass_+bytes/sizeof(FatJet_mass_[0]));
        loaded_FatJet_mass_ = true;
    }
    return v_FatJet_mass_;
}
const vector<float> &Nano::FatJet_mass_jerDown() {
    if (!loaded_FatJet_mass_jerDown_) counter_uncached_FatJet_mass_jerDown_++;
    else counter_cached_FatJet_mass_jerDown_++;
    if (!loaded_FatJet_mass_jerDown_) {
        if (!b_FatJet_mass_jerDown_) throw std::runtime_error("FatJet_mass_jerDown branch doesn't exist");
        int bytes = b_FatJet_mass_jerDown_->GetEntry(index);
        v_FatJet_mass_jerDown_ = vector<float>(FatJet_mass_jerDown_,FatJet_mass_jerDown_+bytes/sizeof(FatJet_mass_jerDown_[0]));
        loaded_FatJet_mass_jerDown_ = true;
    }
    return v_FatJet_mass_jerDown_;
}
const vector<float> &Nano::FatJet_mass_jerUp() {
    if (!loaded_FatJet_mass_jerUp_) counter_uncached_FatJet_mass_jerUp_++;
    else counter_cached_FatJet_mass_jerUp_++;
    if (!loaded_FatJet_mass_jerUp_) {
        if (!b_FatJet_mass_jerUp_) throw std::runtime_error("FatJet_mass_jerUp branch doesn't exist");
        int bytes = b_FatJet_mass_jerUp_->GetEntry(index);
        v_FatJet_mass_jerUp_ = vector<float>(FatJet_mass_jerUp_,FatJet_mass_jerUp_+bytes/sizeof(FatJet_mass_jerUp_[0]));
        loaded_FatJet_mass_jerUp_ = true;
    }
    return v_FatJet_mass_jerUp_;
}
const vector<float> &Nano::FatJet_mass_jesTotalDown() {
    if (!loaded_FatJet_mass_jesTotalDown_) counter_uncached_FatJet_mass_jesTotalDown_++;
    else counter_cached_FatJet_mass_jesTotalDown_++;
    if (!loaded_FatJet_mass_jesTotalDown_) {
        if (!b_FatJet_mass_jesTotalDown_) throw std::runtime_error("FatJet_mass_jesTotalDown branch doesn't exist");
        int bytes = b_FatJet_mass_jesTotalDown_->GetEntry(index);
        v_FatJet_mass_jesTotalDown_ = vector<float>(FatJet_mass_jesTotalDown_,FatJet_mass_jesTotalDown_+bytes/sizeof(FatJet_mass_jesTotalDown_[0]));
        loaded_FatJet_mass_jesTotalDown_ = true;
    }
    return v_FatJet_mass_jesTotalDown_;
}
const vector<float> &Nano::FatJet_mass_jesTotalUp() {
    if (!loaded_FatJet_mass_jesTotalUp_) counter_uncached_FatJet_mass_jesTotalUp_++;
    else counter_cached_FatJet_mass_jesTotalUp_++;
    if (!loaded_FatJet_mass_jesTotalUp_) {
        if (!b_FatJet_mass_jesTotalUp_) throw std::runtime_error("FatJet_mass_jesTotalUp branch doesn't exist");
        int bytes = b_FatJet_mass_jesTotalUp_->GetEntry(index);
        v_FatJet_mass_jesTotalUp_ = vector<float>(FatJet_mass_jesTotalUp_,FatJet_mass_jesTotalUp_+bytes/sizeof(FatJet_mass_jesTotalUp_[0]));
        loaded_FatJet_mass_jesTotalUp_ = true;
    }
    return v_FatJet_mass_jesTotalUp_;
}
const vector<float> &Nano::FatJet_mass_jmrDown() {
    if (!loaded_FatJet_mass_jmrDown_) counter_uncached_FatJet_mass_jmrDown_++;
    else counter_cached_FatJet_mass_jmrDown_++;
    if (!loaded_FatJet_mass_jmrDown_) {
        if (!b_FatJet_mass_jmrDown_) throw std::runtime_error("FatJet_mass_jmrDown branch doesn't exist");
        int bytes = b_FatJet_mass_jmrDown_->GetEntry(index);
        v_FatJet_mass_jmrDown_ = vector<float>(FatJet_mass_jmrDown_,FatJet_mass_jmrDown_+bytes/sizeof(FatJet_mass_jmrDown_[0]));
        loaded_FatJet_mass_jmrDown_ = true;
    }
    return v_FatJet_mass_jmrDown_;
}
const vector<float> &Nano::FatJet_mass_jmrUp() {
    if (!loaded_FatJet_mass_jmrUp_) counter_uncached_FatJet_mass_jmrUp_++;
    else counter_cached_FatJet_mass_jmrUp_++;
    if (!loaded_FatJet_mass_jmrUp_) {
        if (!b_FatJet_mass_jmrUp_) throw std::runtime_error("FatJet_mass_jmrUp branch doesn't exist");
        int bytes = b_FatJet_mass_jmrUp_->GetEntry(index);
        v_FatJet_mass_jmrUp_ = vector<float>(FatJet_mass_jmrUp_,FatJet_mass_jmrUp_+bytes/sizeof(FatJet_mass_jmrUp_[0]));
        loaded_FatJet_mass_jmrUp_ = true;
    }
    return v_FatJet_mass_jmrUp_;
}
const vector<float> &Nano::FatJet_mass_jmsDown() {
    if (!loaded_FatJet_mass_jmsDown_) counter_uncached_FatJet_mass_jmsDown_++;
    else counter_cached_FatJet_mass_jmsDown_++;
    if (!loaded_FatJet_mass_jmsDown_) {
        if (!b_FatJet_mass_jmsDown_) throw std::runtime_error("FatJet_mass_jmsDown branch doesn't exist");
        int bytes = b_FatJet_mass_jmsDown_->GetEntry(index);
        v_FatJet_mass_jmsDown_ = vector<float>(FatJet_mass_jmsDown_,FatJet_mass_jmsDown_+bytes/sizeof(FatJet_mass_jmsDown_[0]));
        loaded_FatJet_mass_jmsDown_ = true;
    }
    return v_FatJet_mass_jmsDown_;
}
const vector<float> &Nano::FatJet_mass_jmsUp() {
    if (!loaded_FatJet_mass_jmsUp_) counter_uncached_FatJet_mass_jmsUp_++;
    else counter_cached_FatJet_mass_jmsUp_++;
    if (!loaded_FatJet_mass_jmsUp_) {
        if (!b_FatJet_mass_jmsUp_) throw std::runtime_error("FatJet_mass_jmsUp branch doesn't exist");
        int bytes = b_FatJet_mass_jmsUp_->GetEntry(index);
        v_FatJet_mass_jmsUp_ = vector<float>(FatJet_mass_jmsUp_,FatJet_mass_jmsUp_+bytes/sizeof(FatJet_mass_jmsUp_[0]));
        loaded_FatJet_mass_jmsUp_ = true;
    }
    return v_FatJet_mass_jmsUp_;
}
const vector<float> &Nano::FatJet_mass_nom() {
    if (!loaded_FatJet_mass_nom_) counter_uncached_FatJet_mass_nom_++;
    else counter_cached_FatJet_mass_nom_++;
    if (!loaded_FatJet_mass_nom_) {
        if (!b_FatJet_mass_nom_) throw std::runtime_error("FatJet_mass_nom branch doesn't exist");
        int bytes = b_FatJet_mass_nom_->GetEntry(index);
        v_FatJet_mass_nom_ = vector<float>(FatJet_mass_nom_,FatJet_mass_nom_+bytes/sizeof(FatJet_mass_nom_[0]));
        loaded_FatJet_mass_nom_ = true;
    }
    return v_FatJet_mass_nom_;
}
const vector<float> &Nano::FatJet_mass_raw() {
    if (!loaded_FatJet_mass_raw_) counter_uncached_FatJet_mass_raw_++;
    else counter_cached_FatJet_mass_raw_++;
    if (!loaded_FatJet_mass_raw_) {
        if (!b_FatJet_mass_raw_) throw std::runtime_error("FatJet_mass_raw branch doesn't exist");
        int bytes = b_FatJet_mass_raw_->GetEntry(index);
        v_FatJet_mass_raw_ = vector<float>(FatJet_mass_raw_,FatJet_mass_raw_+bytes/sizeof(FatJet_mass_raw_[0]));
        loaded_FatJet_mass_raw_ = true;
    }
    return v_FatJet_mass_raw_;
}
const vector<float> &Nano::FatJet_msoftdrop() {
    if (!loaded_FatJet_msoftdrop_) counter_uncached_FatJet_msoftdrop_++;
    else counter_cached_FatJet_msoftdrop_++;
    if (!loaded_FatJet_msoftdrop_) {
        if (!b_FatJet_msoftdrop_) throw std::runtime_error("FatJet_msoftdrop branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_->GetEntry(index);
        v_FatJet_msoftdrop_ = vector<float>(FatJet_msoftdrop_,FatJet_msoftdrop_+bytes/sizeof(FatJet_msoftdrop_[0]));
        loaded_FatJet_msoftdrop_ = true;
    }
    return v_FatJet_msoftdrop_;
}
const vector<float> &Nano::FatJet_msoftdrop_corr_JMR() {
    if (!loaded_FatJet_msoftdrop_corr_JMR_) counter_uncached_FatJet_msoftdrop_corr_JMR_++;
    else counter_cached_FatJet_msoftdrop_corr_JMR_++;
    if (!loaded_FatJet_msoftdrop_corr_JMR_) {
        if (!b_FatJet_msoftdrop_corr_JMR_) throw std::runtime_error("FatJet_msoftdrop_corr_JMR branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_corr_JMR_->GetEntry(index);
        v_FatJet_msoftdrop_corr_JMR_ = vector<float>(FatJet_msoftdrop_corr_JMR_,FatJet_msoftdrop_corr_JMR_+bytes/sizeof(FatJet_msoftdrop_corr_JMR_[0]));
        loaded_FatJet_msoftdrop_corr_JMR_ = true;
    }
    return v_FatJet_msoftdrop_corr_JMR_;
}
const vector<float> &Nano::FatJet_msoftdrop_corr_JMS() {
    if (!loaded_FatJet_msoftdrop_corr_JMS_) counter_uncached_FatJet_msoftdrop_corr_JMS_++;
    else counter_cached_FatJet_msoftdrop_corr_JMS_++;
    if (!loaded_FatJet_msoftdrop_corr_JMS_) {
        if (!b_FatJet_msoftdrop_corr_JMS_) throw std::runtime_error("FatJet_msoftdrop_corr_JMS branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_corr_JMS_->GetEntry(index);
        v_FatJet_msoftdrop_corr_JMS_ = vector<float>(FatJet_msoftdrop_corr_JMS_,FatJet_msoftdrop_corr_JMS_+bytes/sizeof(FatJet_msoftdrop_corr_JMS_[0]));
        loaded_FatJet_msoftdrop_corr_JMS_ = true;
    }
    return v_FatJet_msoftdrop_corr_JMS_;
}
const vector<float> &Nano::FatJet_msoftdrop_corr_PUPPI() {
    if (!loaded_FatJet_msoftdrop_corr_PUPPI_) counter_uncached_FatJet_msoftdrop_corr_PUPPI_++;
    else counter_cached_FatJet_msoftdrop_corr_PUPPI_++;
    if (!loaded_FatJet_msoftdrop_corr_PUPPI_) {
        if (!b_FatJet_msoftdrop_corr_PUPPI_) throw std::runtime_error("FatJet_msoftdrop_corr_PUPPI branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_corr_PUPPI_->GetEntry(index);
        v_FatJet_msoftdrop_corr_PUPPI_ = vector<float>(FatJet_msoftdrop_corr_PUPPI_,FatJet_msoftdrop_corr_PUPPI_+bytes/sizeof(FatJet_msoftdrop_corr_PUPPI_[0]));
        loaded_FatJet_msoftdrop_corr_PUPPI_ = true;
    }
    return v_FatJet_msoftdrop_corr_PUPPI_;
}
const vector<float> &Nano::FatJet_msoftdrop_jerDown() {
    if (!loaded_FatJet_msoftdrop_jerDown_) counter_uncached_FatJet_msoftdrop_jerDown_++;
    else counter_cached_FatJet_msoftdrop_jerDown_++;
    if (!loaded_FatJet_msoftdrop_jerDown_) {
        if (!b_FatJet_msoftdrop_jerDown_) throw std::runtime_error("FatJet_msoftdrop_jerDown branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_jerDown_->GetEntry(index);
        v_FatJet_msoftdrop_jerDown_ = vector<float>(FatJet_msoftdrop_jerDown_,FatJet_msoftdrop_jerDown_+bytes/sizeof(FatJet_msoftdrop_jerDown_[0]));
        loaded_FatJet_msoftdrop_jerDown_ = true;
    }
    return v_FatJet_msoftdrop_jerDown_;
}
const vector<float> &Nano::FatJet_msoftdrop_jerUp() {
    if (!loaded_FatJet_msoftdrop_jerUp_) counter_uncached_FatJet_msoftdrop_jerUp_++;
    else counter_cached_FatJet_msoftdrop_jerUp_++;
    if (!loaded_FatJet_msoftdrop_jerUp_) {
        if (!b_FatJet_msoftdrop_jerUp_) throw std::runtime_error("FatJet_msoftdrop_jerUp branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_jerUp_->GetEntry(index);
        v_FatJet_msoftdrop_jerUp_ = vector<float>(FatJet_msoftdrop_jerUp_,FatJet_msoftdrop_jerUp_+bytes/sizeof(FatJet_msoftdrop_jerUp_[0]));
        loaded_FatJet_msoftdrop_jerUp_ = true;
    }
    return v_FatJet_msoftdrop_jerUp_;
}
const vector<float> &Nano::FatJet_msoftdrop_jesTotalDown() {
    if (!loaded_FatJet_msoftdrop_jesTotalDown_) counter_uncached_FatJet_msoftdrop_jesTotalDown_++;
    else counter_cached_FatJet_msoftdrop_jesTotalDown_++;
    if (!loaded_FatJet_msoftdrop_jesTotalDown_) {
        if (!b_FatJet_msoftdrop_jesTotalDown_) throw std::runtime_error("FatJet_msoftdrop_jesTotalDown branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_jesTotalDown_->GetEntry(index);
        v_FatJet_msoftdrop_jesTotalDown_ = vector<float>(FatJet_msoftdrop_jesTotalDown_,FatJet_msoftdrop_jesTotalDown_+bytes/sizeof(FatJet_msoftdrop_jesTotalDown_[0]));
        loaded_FatJet_msoftdrop_jesTotalDown_ = true;
    }
    return v_FatJet_msoftdrop_jesTotalDown_;
}
const vector<float> &Nano::FatJet_msoftdrop_jesTotalUp() {
    if (!loaded_FatJet_msoftdrop_jesTotalUp_) counter_uncached_FatJet_msoftdrop_jesTotalUp_++;
    else counter_cached_FatJet_msoftdrop_jesTotalUp_++;
    if (!loaded_FatJet_msoftdrop_jesTotalUp_) {
        if (!b_FatJet_msoftdrop_jesTotalUp_) throw std::runtime_error("FatJet_msoftdrop_jesTotalUp branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_jesTotalUp_->GetEntry(index);
        v_FatJet_msoftdrop_jesTotalUp_ = vector<float>(FatJet_msoftdrop_jesTotalUp_,FatJet_msoftdrop_jesTotalUp_+bytes/sizeof(FatJet_msoftdrop_jesTotalUp_[0]));
        loaded_FatJet_msoftdrop_jesTotalUp_ = true;
    }
    return v_FatJet_msoftdrop_jesTotalUp_;
}
const vector<float> &Nano::FatJet_msoftdrop_jmrDown() {
    if (!loaded_FatJet_msoftdrop_jmrDown_) counter_uncached_FatJet_msoftdrop_jmrDown_++;
    else counter_cached_FatJet_msoftdrop_jmrDown_++;
    if (!loaded_FatJet_msoftdrop_jmrDown_) {
        if (!b_FatJet_msoftdrop_jmrDown_) throw std::runtime_error("FatJet_msoftdrop_jmrDown branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_jmrDown_->GetEntry(index);
        v_FatJet_msoftdrop_jmrDown_ = vector<float>(FatJet_msoftdrop_jmrDown_,FatJet_msoftdrop_jmrDown_+bytes/sizeof(FatJet_msoftdrop_jmrDown_[0]));
        loaded_FatJet_msoftdrop_jmrDown_ = true;
    }
    return v_FatJet_msoftdrop_jmrDown_;
}
const vector<float> &Nano::FatJet_msoftdrop_jmrUp() {
    if (!loaded_FatJet_msoftdrop_jmrUp_) counter_uncached_FatJet_msoftdrop_jmrUp_++;
    else counter_cached_FatJet_msoftdrop_jmrUp_++;
    if (!loaded_FatJet_msoftdrop_jmrUp_) {
        if (!b_FatJet_msoftdrop_jmrUp_) throw std::runtime_error("FatJet_msoftdrop_jmrUp branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_jmrUp_->GetEntry(index);
        v_FatJet_msoftdrop_jmrUp_ = vector<float>(FatJet_msoftdrop_jmrUp_,FatJet_msoftdrop_jmrUp_+bytes/sizeof(FatJet_msoftdrop_jmrUp_[0]));
        loaded_FatJet_msoftdrop_jmrUp_ = true;
    }
    return v_FatJet_msoftdrop_jmrUp_;
}
const vector<float> &Nano::FatJet_msoftdrop_jmsDown() {
    if (!loaded_FatJet_msoftdrop_jmsDown_) counter_uncached_FatJet_msoftdrop_jmsDown_++;
    else counter_cached_FatJet_msoftdrop_jmsDown_++;
    if (!loaded_FatJet_msoftdrop_jmsDown_) {
        if (!b_FatJet_msoftdrop_jmsDown_) throw std::runtime_error("FatJet_msoftdrop_jmsDown branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_jmsDown_->GetEntry(index);
        v_FatJet_msoftdrop_jmsDown_ = vector<float>(FatJet_msoftdrop_jmsDown_,FatJet_msoftdrop_jmsDown_+bytes/sizeof(FatJet_msoftdrop_jmsDown_[0]));
        loaded_FatJet_msoftdrop_jmsDown_ = true;
    }
    return v_FatJet_msoftdrop_jmsDown_;
}
const vector<float> &Nano::FatJet_msoftdrop_jmsUp() {
    if (!loaded_FatJet_msoftdrop_jmsUp_) counter_uncached_FatJet_msoftdrop_jmsUp_++;
    else counter_cached_FatJet_msoftdrop_jmsUp_++;
    if (!loaded_FatJet_msoftdrop_jmsUp_) {
        if (!b_FatJet_msoftdrop_jmsUp_) throw std::runtime_error("FatJet_msoftdrop_jmsUp branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_jmsUp_->GetEntry(index);
        v_FatJet_msoftdrop_jmsUp_ = vector<float>(FatJet_msoftdrop_jmsUp_,FatJet_msoftdrop_jmsUp_+bytes/sizeof(FatJet_msoftdrop_jmsUp_[0]));
        loaded_FatJet_msoftdrop_jmsUp_ = true;
    }
    return v_FatJet_msoftdrop_jmsUp_;
}
const vector<float> &Nano::FatJet_msoftdrop_nom() {
    if (!loaded_FatJet_msoftdrop_nom_) counter_uncached_FatJet_msoftdrop_nom_++;
    else counter_cached_FatJet_msoftdrop_nom_++;
    if (!loaded_FatJet_msoftdrop_nom_) {
        if (!b_FatJet_msoftdrop_nom_) throw std::runtime_error("FatJet_msoftdrop_nom branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_nom_->GetEntry(index);
        v_FatJet_msoftdrop_nom_ = vector<float>(FatJet_msoftdrop_nom_,FatJet_msoftdrop_nom_+bytes/sizeof(FatJet_msoftdrop_nom_[0]));
        loaded_FatJet_msoftdrop_nom_ = true;
    }
    return v_FatJet_msoftdrop_nom_;
}
const vector<float> &Nano::FatJet_msoftdrop_raw() {
    if (!loaded_FatJet_msoftdrop_raw_) counter_uncached_FatJet_msoftdrop_raw_++;
    else counter_cached_FatJet_msoftdrop_raw_++;
    if (!loaded_FatJet_msoftdrop_raw_) {
        if (!b_FatJet_msoftdrop_raw_) throw std::runtime_error("FatJet_msoftdrop_raw branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_raw_->GetEntry(index);
        v_FatJet_msoftdrop_raw_ = vector<float>(FatJet_msoftdrop_raw_,FatJet_msoftdrop_raw_+bytes/sizeof(FatJet_msoftdrop_raw_[0]));
        loaded_FatJet_msoftdrop_raw_ = true;
    }
    return v_FatJet_msoftdrop_raw_;
}
const vector<float> &Nano::FatJet_msoftdrop_tau21DDT_jerDown() {
    if (!loaded_FatJet_msoftdrop_tau21DDT_jerDown_) counter_uncached_FatJet_msoftdrop_tau21DDT_jerDown_++;
    else counter_cached_FatJet_msoftdrop_tau21DDT_jerDown_++;
    if (!loaded_FatJet_msoftdrop_tau21DDT_jerDown_) {
        if (!b_FatJet_msoftdrop_tau21DDT_jerDown_) throw std::runtime_error("FatJet_msoftdrop_tau21DDT_jerDown branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_tau21DDT_jerDown_->GetEntry(index);
        v_FatJet_msoftdrop_tau21DDT_jerDown_ = vector<float>(FatJet_msoftdrop_tau21DDT_jerDown_,FatJet_msoftdrop_tau21DDT_jerDown_+bytes/sizeof(FatJet_msoftdrop_tau21DDT_jerDown_[0]));
        loaded_FatJet_msoftdrop_tau21DDT_jerDown_ = true;
    }
    return v_FatJet_msoftdrop_tau21DDT_jerDown_;
}
const vector<float> &Nano::FatJet_msoftdrop_tau21DDT_jerUp() {
    if (!loaded_FatJet_msoftdrop_tau21DDT_jerUp_) counter_uncached_FatJet_msoftdrop_tau21DDT_jerUp_++;
    else counter_cached_FatJet_msoftdrop_tau21DDT_jerUp_++;
    if (!loaded_FatJet_msoftdrop_tau21DDT_jerUp_) {
        if (!b_FatJet_msoftdrop_tau21DDT_jerUp_) throw std::runtime_error("FatJet_msoftdrop_tau21DDT_jerUp branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_tau21DDT_jerUp_->GetEntry(index);
        v_FatJet_msoftdrop_tau21DDT_jerUp_ = vector<float>(FatJet_msoftdrop_tau21DDT_jerUp_,FatJet_msoftdrop_tau21DDT_jerUp_+bytes/sizeof(FatJet_msoftdrop_tau21DDT_jerUp_[0]));
        loaded_FatJet_msoftdrop_tau21DDT_jerUp_ = true;
    }
    return v_FatJet_msoftdrop_tau21DDT_jerUp_;
}
const vector<float> &Nano::FatJet_msoftdrop_tau21DDT_jmrDown() {
    if (!loaded_FatJet_msoftdrop_tau21DDT_jmrDown_) counter_uncached_FatJet_msoftdrop_tau21DDT_jmrDown_++;
    else counter_cached_FatJet_msoftdrop_tau21DDT_jmrDown_++;
    if (!loaded_FatJet_msoftdrop_tau21DDT_jmrDown_) {
        if (!b_FatJet_msoftdrop_tau21DDT_jmrDown_) throw std::runtime_error("FatJet_msoftdrop_tau21DDT_jmrDown branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_tau21DDT_jmrDown_->GetEntry(index);
        v_FatJet_msoftdrop_tau21DDT_jmrDown_ = vector<float>(FatJet_msoftdrop_tau21DDT_jmrDown_,FatJet_msoftdrop_tau21DDT_jmrDown_+bytes/sizeof(FatJet_msoftdrop_tau21DDT_jmrDown_[0]));
        loaded_FatJet_msoftdrop_tau21DDT_jmrDown_ = true;
    }
    return v_FatJet_msoftdrop_tau21DDT_jmrDown_;
}
const vector<float> &Nano::FatJet_msoftdrop_tau21DDT_jmrUp() {
    if (!loaded_FatJet_msoftdrop_tau21DDT_jmrUp_) counter_uncached_FatJet_msoftdrop_tau21DDT_jmrUp_++;
    else counter_cached_FatJet_msoftdrop_tau21DDT_jmrUp_++;
    if (!loaded_FatJet_msoftdrop_tau21DDT_jmrUp_) {
        if (!b_FatJet_msoftdrop_tau21DDT_jmrUp_) throw std::runtime_error("FatJet_msoftdrop_tau21DDT_jmrUp branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_tau21DDT_jmrUp_->GetEntry(index);
        v_FatJet_msoftdrop_tau21DDT_jmrUp_ = vector<float>(FatJet_msoftdrop_tau21DDT_jmrUp_,FatJet_msoftdrop_tau21DDT_jmrUp_+bytes/sizeof(FatJet_msoftdrop_tau21DDT_jmrUp_[0]));
        loaded_FatJet_msoftdrop_tau21DDT_jmrUp_ = true;
    }
    return v_FatJet_msoftdrop_tau21DDT_jmrUp_;
}
const vector<float> &Nano::FatJet_msoftdrop_tau21DDT_jmsDown() {
    if (!loaded_FatJet_msoftdrop_tau21DDT_jmsDown_) counter_uncached_FatJet_msoftdrop_tau21DDT_jmsDown_++;
    else counter_cached_FatJet_msoftdrop_tau21DDT_jmsDown_++;
    if (!loaded_FatJet_msoftdrop_tau21DDT_jmsDown_) {
        if (!b_FatJet_msoftdrop_tau21DDT_jmsDown_) throw std::runtime_error("FatJet_msoftdrop_tau21DDT_jmsDown branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_tau21DDT_jmsDown_->GetEntry(index);
        v_FatJet_msoftdrop_tau21DDT_jmsDown_ = vector<float>(FatJet_msoftdrop_tau21DDT_jmsDown_,FatJet_msoftdrop_tau21DDT_jmsDown_+bytes/sizeof(FatJet_msoftdrop_tau21DDT_jmsDown_[0]));
        loaded_FatJet_msoftdrop_tau21DDT_jmsDown_ = true;
    }
    return v_FatJet_msoftdrop_tau21DDT_jmsDown_;
}
const vector<float> &Nano::FatJet_msoftdrop_tau21DDT_jmsUp() {
    if (!loaded_FatJet_msoftdrop_tau21DDT_jmsUp_) counter_uncached_FatJet_msoftdrop_tau21DDT_jmsUp_++;
    else counter_cached_FatJet_msoftdrop_tau21DDT_jmsUp_++;
    if (!loaded_FatJet_msoftdrop_tau21DDT_jmsUp_) {
        if (!b_FatJet_msoftdrop_tau21DDT_jmsUp_) throw std::runtime_error("FatJet_msoftdrop_tau21DDT_jmsUp branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_tau21DDT_jmsUp_->GetEntry(index);
        v_FatJet_msoftdrop_tau21DDT_jmsUp_ = vector<float>(FatJet_msoftdrop_tau21DDT_jmsUp_,FatJet_msoftdrop_tau21DDT_jmsUp_+bytes/sizeof(FatJet_msoftdrop_tau21DDT_jmsUp_[0]));
        loaded_FatJet_msoftdrop_tau21DDT_jmsUp_ = true;
    }
    return v_FatJet_msoftdrop_tau21DDT_jmsUp_;
}
const vector<float> &Nano::FatJet_msoftdrop_tau21DDT_nom() {
    if (!loaded_FatJet_msoftdrop_tau21DDT_nom_) counter_uncached_FatJet_msoftdrop_tau21DDT_nom_++;
    else counter_cached_FatJet_msoftdrop_tau21DDT_nom_++;
    if (!loaded_FatJet_msoftdrop_tau21DDT_nom_) {
        if (!b_FatJet_msoftdrop_tau21DDT_nom_) throw std::runtime_error("FatJet_msoftdrop_tau21DDT_nom branch doesn't exist");
        int bytes = b_FatJet_msoftdrop_tau21DDT_nom_->GetEntry(index);
        v_FatJet_msoftdrop_tau21DDT_nom_ = vector<float>(FatJet_msoftdrop_tau21DDT_nom_,FatJet_msoftdrop_tau21DDT_nom_+bytes/sizeof(FatJet_msoftdrop_tau21DDT_nom_[0]));
        loaded_FatJet_msoftdrop_tau21DDT_nom_ = true;
    }
    return v_FatJet_msoftdrop_tau21DDT_nom_;
}
const vector<int> &Nano::FatJet_muonIdx3SJ() {
    if (!loaded_FatJet_muonIdx3SJ_) counter_uncached_FatJet_muonIdx3SJ_++;
    else counter_cached_FatJet_muonIdx3SJ_++;
    if (!loaded_FatJet_muonIdx3SJ_) {
        if (!b_FatJet_muonIdx3SJ_) throw std::runtime_error("FatJet_muonIdx3SJ branch doesn't exist");
        int bytes = b_FatJet_muonIdx3SJ_->GetEntry(index);
        v_FatJet_muonIdx3SJ_ = vector<int>(FatJet_muonIdx3SJ_,FatJet_muonIdx3SJ_+bytes/sizeof(FatJet_muonIdx3SJ_[0]));
        loaded_FatJet_muonIdx3SJ_ = true;
    }
    return v_FatJet_muonIdx3SJ_;
}
const vector<float> &Nano::FatJet_n2b1() {
    if (!loaded_FatJet_n2b1_) counter_uncached_FatJet_n2b1_++;
    else counter_cached_FatJet_n2b1_++;
    if (!loaded_FatJet_n2b1_) {
        if (!b_FatJet_n2b1_) throw std::runtime_error("FatJet_n2b1 branch doesn't exist");
        int bytes = b_FatJet_n2b1_->GetEntry(index);
        v_FatJet_n2b1_ = vector<float>(FatJet_n2b1_,FatJet_n2b1_+bytes/sizeof(FatJet_n2b1_[0]));
        loaded_FatJet_n2b1_ = true;
    }
    return v_FatJet_n2b1_;
}
const vector<float> &Nano::FatJet_n3b1() {
    if (!loaded_FatJet_n3b1_) counter_uncached_FatJet_n3b1_++;
    else counter_cached_FatJet_n3b1_++;
    if (!loaded_FatJet_n3b1_) {
        if (!b_FatJet_n3b1_) throw std::runtime_error("FatJet_n3b1 branch doesn't exist");
        int bytes = b_FatJet_n3b1_->GetEntry(index);
        v_FatJet_n3b1_ = vector<float>(FatJet_n3b1_,FatJet_n3b1_+bytes/sizeof(FatJet_n3b1_[0]));
        loaded_FatJet_n3b1_ = true;
    }
    return v_FatJet_n3b1_;
}
const vector<UChar_t> &Nano::FatJet_nBHadrons() {
    if (!loaded_FatJet_nBHadrons_) counter_uncached_FatJet_nBHadrons_++;
    else counter_cached_FatJet_nBHadrons_++;
    if (!loaded_FatJet_nBHadrons_) {
        if (!b_FatJet_nBHadrons_) throw std::runtime_error("FatJet_nBHadrons branch doesn't exist");
        int bytes = b_FatJet_nBHadrons_->GetEntry(index);
        v_FatJet_nBHadrons_ = vector<UChar_t>(FatJet_nBHadrons_,FatJet_nBHadrons_+bytes/sizeof(FatJet_nBHadrons_[0]));
        loaded_FatJet_nBHadrons_ = true;
    }
    return v_FatJet_nBHadrons_;
}
const vector<UChar_t> &Nano::FatJet_nCHadrons() {
    if (!loaded_FatJet_nCHadrons_) counter_uncached_FatJet_nCHadrons_++;
    else counter_cached_FatJet_nCHadrons_++;
    if (!loaded_FatJet_nCHadrons_) {
        if (!b_FatJet_nCHadrons_) throw std::runtime_error("FatJet_nCHadrons branch doesn't exist");
        int bytes = b_FatJet_nCHadrons_->GetEntry(index);
        v_FatJet_nCHadrons_ = vector<UChar_t>(FatJet_nCHadrons_,FatJet_nCHadrons_+bytes/sizeof(FatJet_nCHadrons_[0]));
        loaded_FatJet_nCHadrons_ = true;
    }
    return v_FatJet_nCHadrons_;
}
const vector<UChar_t> &Nano::FatJet_nConstituents() {
    if (!loaded_FatJet_nConstituents_) counter_uncached_FatJet_nConstituents_++;
    else counter_cached_FatJet_nConstituents_++;
    if (!loaded_FatJet_nConstituents_) {
        if (!b_FatJet_nConstituents_) throw std::runtime_error("FatJet_nConstituents branch doesn't exist");
        int bytes = b_FatJet_nConstituents_->GetEntry(index);
        v_FatJet_nConstituents_ = vector<UChar_t>(FatJet_nConstituents_,FatJet_nConstituents_+bytes/sizeof(FatJet_nConstituents_[0]));
        loaded_FatJet_nConstituents_ = true;
    }
    return v_FatJet_nConstituents_;
}
const vector<LorentzVector> &Nano::FatJet_p4() {
    if (!loaded_FatJet_p4_) counter_uncached_FatJet_p4_++;
    else counter_cached_FatJet_p4_++;
    if (!loaded_FatJet_p4_) {
        v_FatJet_p4_.clear();
        vector<float> pts = Nano::FatJet_pt();
        vector<float> etas = Nano::FatJet_eta();
        vector<float> phis = Nano::FatJet_phi();
        vector<float> masses = Nano::FatJet_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_FatJet_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_FatJet_p4_ = true;
    }
    return v_FatJet_p4_;
}
const vector<float> &Nano::FatJet_particleNetMD_QCD() {
    if (!loaded_FatJet_particleNetMD_QCD_) counter_uncached_FatJet_particleNetMD_QCD_++;
    else counter_cached_FatJet_particleNetMD_QCD_++;
    if (!loaded_FatJet_particleNetMD_QCD_) {
        if (!b_FatJet_particleNetMD_QCD_) throw std::runtime_error("FatJet_particleNetMD_QCD branch doesn't exist");
        int bytes = b_FatJet_particleNetMD_QCD_->GetEntry(index);
        v_FatJet_particleNetMD_QCD_ = vector<float>(FatJet_particleNetMD_QCD_,FatJet_particleNetMD_QCD_+bytes/sizeof(FatJet_particleNetMD_QCD_[0]));
        loaded_FatJet_particleNetMD_QCD_ = true;
    }
    return v_FatJet_particleNetMD_QCD_;
}
const vector<float> &Nano::FatJet_particleNetMD_Xbb() {
    if (!loaded_FatJet_particleNetMD_Xbb_) counter_uncached_FatJet_particleNetMD_Xbb_++;
    else counter_cached_FatJet_particleNetMD_Xbb_++;
    if (!loaded_FatJet_particleNetMD_Xbb_) {
        if (!b_FatJet_particleNetMD_Xbb_) throw std::runtime_error("FatJet_particleNetMD_Xbb branch doesn't exist");
        int bytes = b_FatJet_particleNetMD_Xbb_->GetEntry(index);
        v_FatJet_particleNetMD_Xbb_ = vector<float>(FatJet_particleNetMD_Xbb_,FatJet_particleNetMD_Xbb_+bytes/sizeof(FatJet_particleNetMD_Xbb_[0]));
        loaded_FatJet_particleNetMD_Xbb_ = true;
    }
    return v_FatJet_particleNetMD_Xbb_;
}
const vector<float> &Nano::FatJet_particleNetMD_Xcc() {
    if (!loaded_FatJet_particleNetMD_Xcc_) counter_uncached_FatJet_particleNetMD_Xcc_++;
    else counter_cached_FatJet_particleNetMD_Xcc_++;
    if (!loaded_FatJet_particleNetMD_Xcc_) {
        if (!b_FatJet_particleNetMD_Xcc_) throw std::runtime_error("FatJet_particleNetMD_Xcc branch doesn't exist");
        int bytes = b_FatJet_particleNetMD_Xcc_->GetEntry(index);
        v_FatJet_particleNetMD_Xcc_ = vector<float>(FatJet_particleNetMD_Xcc_,FatJet_particleNetMD_Xcc_+bytes/sizeof(FatJet_particleNetMD_Xcc_[0]));
        loaded_FatJet_particleNetMD_Xcc_ = true;
    }
    return v_FatJet_particleNetMD_Xcc_;
}
const vector<float> &Nano::FatJet_particleNetMD_Xqq() {
    if (!loaded_FatJet_particleNetMD_Xqq_) counter_uncached_FatJet_particleNetMD_Xqq_++;
    else counter_cached_FatJet_particleNetMD_Xqq_++;
    if (!loaded_FatJet_particleNetMD_Xqq_) {
        if (!b_FatJet_particleNetMD_Xqq_) throw std::runtime_error("FatJet_particleNetMD_Xqq branch doesn't exist");
        int bytes = b_FatJet_particleNetMD_Xqq_->GetEntry(index);
        v_FatJet_particleNetMD_Xqq_ = vector<float>(FatJet_particleNetMD_Xqq_,FatJet_particleNetMD_Xqq_+bytes/sizeof(FatJet_particleNetMD_Xqq_[0]));
        loaded_FatJet_particleNetMD_Xqq_ = true;
    }
    return v_FatJet_particleNetMD_Xqq_;
}
const vector<float> &Nano::FatJet_particleNet_H4qvsQCD() {
    if (!loaded_FatJet_particleNet_H4qvsQCD_) counter_uncached_FatJet_particleNet_H4qvsQCD_++;
    else counter_cached_FatJet_particleNet_H4qvsQCD_++;
    if (!loaded_FatJet_particleNet_H4qvsQCD_) {
        if (!b_FatJet_particleNet_H4qvsQCD_) throw std::runtime_error("FatJet_particleNet_H4qvsQCD branch doesn't exist");
        int bytes = b_FatJet_particleNet_H4qvsQCD_->GetEntry(index);
        v_FatJet_particleNet_H4qvsQCD_ = vector<float>(FatJet_particleNet_H4qvsQCD_,FatJet_particleNet_H4qvsQCD_+bytes/sizeof(FatJet_particleNet_H4qvsQCD_[0]));
        loaded_FatJet_particleNet_H4qvsQCD_ = true;
    }
    return v_FatJet_particleNet_H4qvsQCD_;
}
const vector<float> &Nano::FatJet_particleNet_HbbvsQCD() {
    if (!loaded_FatJet_particleNet_HbbvsQCD_) counter_uncached_FatJet_particleNet_HbbvsQCD_++;
    else counter_cached_FatJet_particleNet_HbbvsQCD_++;
    if (!loaded_FatJet_particleNet_HbbvsQCD_) {
        if (!b_FatJet_particleNet_HbbvsQCD_) throw std::runtime_error("FatJet_particleNet_HbbvsQCD branch doesn't exist");
        int bytes = b_FatJet_particleNet_HbbvsQCD_->GetEntry(index);
        v_FatJet_particleNet_HbbvsQCD_ = vector<float>(FatJet_particleNet_HbbvsQCD_,FatJet_particleNet_HbbvsQCD_+bytes/sizeof(FatJet_particleNet_HbbvsQCD_[0]));
        loaded_FatJet_particleNet_HbbvsQCD_ = true;
    }
    return v_FatJet_particleNet_HbbvsQCD_;
}
const vector<float> &Nano::FatJet_particleNet_HccvsQCD() {
    if (!loaded_FatJet_particleNet_HccvsQCD_) counter_uncached_FatJet_particleNet_HccvsQCD_++;
    else counter_cached_FatJet_particleNet_HccvsQCD_++;
    if (!loaded_FatJet_particleNet_HccvsQCD_) {
        if (!b_FatJet_particleNet_HccvsQCD_) throw std::runtime_error("FatJet_particleNet_HccvsQCD branch doesn't exist");
        int bytes = b_FatJet_particleNet_HccvsQCD_->GetEntry(index);
        v_FatJet_particleNet_HccvsQCD_ = vector<float>(FatJet_particleNet_HccvsQCD_,FatJet_particleNet_HccvsQCD_+bytes/sizeof(FatJet_particleNet_HccvsQCD_[0]));
        loaded_FatJet_particleNet_HccvsQCD_ = true;
    }
    return v_FatJet_particleNet_HccvsQCD_;
}
const vector<float> &Nano::FatJet_particleNet_QCD() {
    if (!loaded_FatJet_particleNet_QCD_) counter_uncached_FatJet_particleNet_QCD_++;
    else counter_cached_FatJet_particleNet_QCD_++;
    if (!loaded_FatJet_particleNet_QCD_) {
        if (!b_FatJet_particleNet_QCD_) throw std::runtime_error("FatJet_particleNet_QCD branch doesn't exist");
        int bytes = b_FatJet_particleNet_QCD_->GetEntry(index);
        v_FatJet_particleNet_QCD_ = vector<float>(FatJet_particleNet_QCD_,FatJet_particleNet_QCD_+bytes/sizeof(FatJet_particleNet_QCD_[0]));
        loaded_FatJet_particleNet_QCD_ = true;
    }
    return v_FatJet_particleNet_QCD_;
}
const vector<float> &Nano::FatJet_particleNet_TvsQCD() {
    if (!loaded_FatJet_particleNet_TvsQCD_) counter_uncached_FatJet_particleNet_TvsQCD_++;
    else counter_cached_FatJet_particleNet_TvsQCD_++;
    if (!loaded_FatJet_particleNet_TvsQCD_) {
        if (!b_FatJet_particleNet_TvsQCD_) throw std::runtime_error("FatJet_particleNet_TvsQCD branch doesn't exist");
        int bytes = b_FatJet_particleNet_TvsQCD_->GetEntry(index);
        v_FatJet_particleNet_TvsQCD_ = vector<float>(FatJet_particleNet_TvsQCD_,FatJet_particleNet_TvsQCD_+bytes/sizeof(FatJet_particleNet_TvsQCD_[0]));
        loaded_FatJet_particleNet_TvsQCD_ = true;
    }
    return v_FatJet_particleNet_TvsQCD_;
}
const vector<float> &Nano::FatJet_particleNet_WvsQCD() {
    if (!loaded_FatJet_particleNet_WvsQCD_) counter_uncached_FatJet_particleNet_WvsQCD_++;
    else counter_cached_FatJet_particleNet_WvsQCD_++;
    if (!loaded_FatJet_particleNet_WvsQCD_) {
        if (!b_FatJet_particleNet_WvsQCD_) throw std::runtime_error("FatJet_particleNet_WvsQCD branch doesn't exist");
        int bytes = b_FatJet_particleNet_WvsQCD_->GetEntry(index);
        v_FatJet_particleNet_WvsQCD_ = vector<float>(FatJet_particleNet_WvsQCD_,FatJet_particleNet_WvsQCD_+bytes/sizeof(FatJet_particleNet_WvsQCD_[0]));
        loaded_FatJet_particleNet_WvsQCD_ = true;
    }
    return v_FatJet_particleNet_WvsQCD_;
}
const vector<float> &Nano::FatJet_particleNet_ZvsQCD() {
    if (!loaded_FatJet_particleNet_ZvsQCD_) counter_uncached_FatJet_particleNet_ZvsQCD_++;
    else counter_cached_FatJet_particleNet_ZvsQCD_++;
    if (!loaded_FatJet_particleNet_ZvsQCD_) {
        if (!b_FatJet_particleNet_ZvsQCD_) throw std::runtime_error("FatJet_particleNet_ZvsQCD branch doesn't exist");
        int bytes = b_FatJet_particleNet_ZvsQCD_->GetEntry(index);
        v_FatJet_particleNet_ZvsQCD_ = vector<float>(FatJet_particleNet_ZvsQCD_,FatJet_particleNet_ZvsQCD_+bytes/sizeof(FatJet_particleNet_ZvsQCD_[0]));
        loaded_FatJet_particleNet_ZvsQCD_ = true;
    }
    return v_FatJet_particleNet_ZvsQCD_;
}
const vector<float> &Nano::FatJet_particleNet_mass() {
    if (!loaded_FatJet_particleNet_mass_) counter_uncached_FatJet_particleNet_mass_++;
    else counter_cached_FatJet_particleNet_mass_++;
    if (!loaded_FatJet_particleNet_mass_) {
        if (!b_FatJet_particleNet_mass_) throw std::runtime_error("FatJet_particleNet_mass branch doesn't exist");
        int bytes = b_FatJet_particleNet_mass_->GetEntry(index);
        v_FatJet_particleNet_mass_ = vector<float>(FatJet_particleNet_mass_,FatJet_particleNet_mass_+bytes/sizeof(FatJet_particleNet_mass_[0]));
        loaded_FatJet_particleNet_mass_ = true;
    }
    return v_FatJet_particleNet_mass_;
}
const vector<float> &Nano::FatJet_phi() {
    if (!loaded_FatJet_phi_) counter_uncached_FatJet_phi_++;
    else counter_cached_FatJet_phi_++;
    if (!loaded_FatJet_phi_) {
        if (!b_FatJet_phi_) throw std::runtime_error("FatJet_phi branch doesn't exist");
        int bytes = b_FatJet_phi_->GetEntry(index);
        v_FatJet_phi_ = vector<float>(FatJet_phi_,FatJet_phi_+bytes/sizeof(FatJet_phi_[0]));
        loaded_FatJet_phi_ = true;
    }
    return v_FatJet_phi_;
}
const vector<float> &Nano::FatJet_pt() {
    if (!loaded_FatJet_pt_) counter_uncached_FatJet_pt_++;
    else counter_cached_FatJet_pt_++;
    if (!loaded_FatJet_pt_) {
        if (!b_FatJet_pt_) throw std::runtime_error("FatJet_pt branch doesn't exist");
        int bytes = b_FatJet_pt_->GetEntry(index);
        v_FatJet_pt_ = vector<float>(FatJet_pt_,FatJet_pt_+bytes/sizeof(FatJet_pt_[0]));
        loaded_FatJet_pt_ = true;
    }
    return v_FatJet_pt_;
}
const vector<float> &Nano::FatJet_pt_jerDown() {
    if (!loaded_FatJet_pt_jerDown_) counter_uncached_FatJet_pt_jerDown_++;
    else counter_cached_FatJet_pt_jerDown_++;
    if (!loaded_FatJet_pt_jerDown_) {
        if (!b_FatJet_pt_jerDown_) throw std::runtime_error("FatJet_pt_jerDown branch doesn't exist");
        int bytes = b_FatJet_pt_jerDown_->GetEntry(index);
        v_FatJet_pt_jerDown_ = vector<float>(FatJet_pt_jerDown_,FatJet_pt_jerDown_+bytes/sizeof(FatJet_pt_jerDown_[0]));
        loaded_FatJet_pt_jerDown_ = true;
    }
    return v_FatJet_pt_jerDown_;
}
const vector<float> &Nano::FatJet_pt_jerUp() {
    if (!loaded_FatJet_pt_jerUp_) counter_uncached_FatJet_pt_jerUp_++;
    else counter_cached_FatJet_pt_jerUp_++;
    if (!loaded_FatJet_pt_jerUp_) {
        if (!b_FatJet_pt_jerUp_) throw std::runtime_error("FatJet_pt_jerUp branch doesn't exist");
        int bytes = b_FatJet_pt_jerUp_->GetEntry(index);
        v_FatJet_pt_jerUp_ = vector<float>(FatJet_pt_jerUp_,FatJet_pt_jerUp_+bytes/sizeof(FatJet_pt_jerUp_[0]));
        loaded_FatJet_pt_jerUp_ = true;
    }
    return v_FatJet_pt_jerUp_;
}
const vector<float> &Nano::FatJet_pt_jesTotalDown() {
    if (!loaded_FatJet_pt_jesTotalDown_) counter_uncached_FatJet_pt_jesTotalDown_++;
    else counter_cached_FatJet_pt_jesTotalDown_++;
    if (!loaded_FatJet_pt_jesTotalDown_) {
        if (!b_FatJet_pt_jesTotalDown_) throw std::runtime_error("FatJet_pt_jesTotalDown branch doesn't exist");
        int bytes = b_FatJet_pt_jesTotalDown_->GetEntry(index);
        v_FatJet_pt_jesTotalDown_ = vector<float>(FatJet_pt_jesTotalDown_,FatJet_pt_jesTotalDown_+bytes/sizeof(FatJet_pt_jesTotalDown_[0]));
        loaded_FatJet_pt_jesTotalDown_ = true;
    }
    return v_FatJet_pt_jesTotalDown_;
}
const vector<float> &Nano::FatJet_pt_jesTotalUp() {
    if (!loaded_FatJet_pt_jesTotalUp_) counter_uncached_FatJet_pt_jesTotalUp_++;
    else counter_cached_FatJet_pt_jesTotalUp_++;
    if (!loaded_FatJet_pt_jesTotalUp_) {
        if (!b_FatJet_pt_jesTotalUp_) throw std::runtime_error("FatJet_pt_jesTotalUp branch doesn't exist");
        int bytes = b_FatJet_pt_jesTotalUp_->GetEntry(index);
        v_FatJet_pt_jesTotalUp_ = vector<float>(FatJet_pt_jesTotalUp_,FatJet_pt_jesTotalUp_+bytes/sizeof(FatJet_pt_jesTotalUp_[0]));
        loaded_FatJet_pt_jesTotalUp_ = true;
    }
    return v_FatJet_pt_jesTotalUp_;
}
const vector<float> &Nano::FatJet_pt_nom() {
    if (!loaded_FatJet_pt_nom_) counter_uncached_FatJet_pt_nom_++;
    else counter_cached_FatJet_pt_nom_++;
    if (!loaded_FatJet_pt_nom_) {
        if (!b_FatJet_pt_nom_) throw std::runtime_error("FatJet_pt_nom branch doesn't exist");
        int bytes = b_FatJet_pt_nom_->GetEntry(index);
        v_FatJet_pt_nom_ = vector<float>(FatJet_pt_nom_,FatJet_pt_nom_+bytes/sizeof(FatJet_pt_nom_[0]));
        loaded_FatJet_pt_nom_ = true;
    }
    return v_FatJet_pt_nom_;
}
const vector<float> &Nano::FatJet_pt_raw() {
    if (!loaded_FatJet_pt_raw_) counter_uncached_FatJet_pt_raw_++;
    else counter_cached_FatJet_pt_raw_++;
    if (!loaded_FatJet_pt_raw_) {
        if (!b_FatJet_pt_raw_) throw std::runtime_error("FatJet_pt_raw branch doesn't exist");
        int bytes = b_FatJet_pt_raw_->GetEntry(index);
        v_FatJet_pt_raw_ = vector<float>(FatJet_pt_raw_,FatJet_pt_raw_+bytes/sizeof(FatJet_pt_raw_[0]));
        loaded_FatJet_pt_raw_ = true;
    }
    return v_FatJet_pt_raw_;
}
const vector<float> &Nano::FatJet_rawFactor() {
    if (!loaded_FatJet_rawFactor_) counter_uncached_FatJet_rawFactor_++;
    else counter_cached_FatJet_rawFactor_++;
    if (!loaded_FatJet_rawFactor_) {
        if (!b_FatJet_rawFactor_) throw std::runtime_error("FatJet_rawFactor branch doesn't exist");
        int bytes = b_FatJet_rawFactor_->GetEntry(index);
        v_FatJet_rawFactor_ = vector<float>(FatJet_rawFactor_,FatJet_rawFactor_+bytes/sizeof(FatJet_rawFactor_[0]));
        loaded_FatJet_rawFactor_ = true;
    }
    return v_FatJet_rawFactor_;
}
const vector<int> &Nano::FatJet_subJetIdx1() {
    if (!loaded_FatJet_subJetIdx1_) counter_uncached_FatJet_subJetIdx1_++;
    else counter_cached_FatJet_subJetIdx1_++;
    if (!loaded_FatJet_subJetIdx1_) {
        if (!b_FatJet_subJetIdx1_) throw std::runtime_error("FatJet_subJetIdx1 branch doesn't exist");
        int bytes = b_FatJet_subJetIdx1_->GetEntry(index);
        v_FatJet_subJetIdx1_ = vector<int>(FatJet_subJetIdx1_,FatJet_subJetIdx1_+bytes/sizeof(FatJet_subJetIdx1_[0]));
        loaded_FatJet_subJetIdx1_ = true;
    }
    return v_FatJet_subJetIdx1_;
}
const vector<int> &Nano::FatJet_subJetIdx2() {
    if (!loaded_FatJet_subJetIdx2_) counter_uncached_FatJet_subJetIdx2_++;
    else counter_cached_FatJet_subJetIdx2_++;
    if (!loaded_FatJet_subJetIdx2_) {
        if (!b_FatJet_subJetIdx2_) throw std::runtime_error("FatJet_subJetIdx2 branch doesn't exist");
        int bytes = b_FatJet_subJetIdx2_->GetEntry(index);
        v_FatJet_subJetIdx2_ = vector<int>(FatJet_subJetIdx2_,FatJet_subJetIdx2_+bytes/sizeof(FatJet_subJetIdx2_[0]));
        loaded_FatJet_subJetIdx2_ = true;
    }
    return v_FatJet_subJetIdx2_;
}
const vector<float> &Nano::FatJet_tau1() {
    if (!loaded_FatJet_tau1_) counter_uncached_FatJet_tau1_++;
    else counter_cached_FatJet_tau1_++;
    if (!loaded_FatJet_tau1_) {
        if (!b_FatJet_tau1_) throw std::runtime_error("FatJet_tau1 branch doesn't exist");
        int bytes = b_FatJet_tau1_->GetEntry(index);
        v_FatJet_tau1_ = vector<float>(FatJet_tau1_,FatJet_tau1_+bytes/sizeof(FatJet_tau1_[0]));
        loaded_FatJet_tau1_ = true;
    }
    return v_FatJet_tau1_;
}
const vector<float> &Nano::FatJet_tau2() {
    if (!loaded_FatJet_tau2_) counter_uncached_FatJet_tau2_++;
    else counter_cached_FatJet_tau2_++;
    if (!loaded_FatJet_tau2_) {
        if (!b_FatJet_tau2_) throw std::runtime_error("FatJet_tau2 branch doesn't exist");
        int bytes = b_FatJet_tau2_->GetEntry(index);
        v_FatJet_tau2_ = vector<float>(FatJet_tau2_,FatJet_tau2_+bytes/sizeof(FatJet_tau2_[0]));
        loaded_FatJet_tau2_ = true;
    }
    return v_FatJet_tau2_;
}
const vector<float> &Nano::FatJet_tau3() {
    if (!loaded_FatJet_tau3_) counter_uncached_FatJet_tau3_++;
    else counter_cached_FatJet_tau3_++;
    if (!loaded_FatJet_tau3_) {
        if (!b_FatJet_tau3_) throw std::runtime_error("FatJet_tau3 branch doesn't exist");
        int bytes = b_FatJet_tau3_->GetEntry(index);
        v_FatJet_tau3_ = vector<float>(FatJet_tau3_,FatJet_tau3_+bytes/sizeof(FatJet_tau3_[0]));
        loaded_FatJet_tau3_ = true;
    }
    return v_FatJet_tau3_;
}
const vector<float> &Nano::FatJet_tau4() {
    if (!loaded_FatJet_tau4_) counter_uncached_FatJet_tau4_++;
    else counter_cached_FatJet_tau4_++;
    if (!loaded_FatJet_tau4_) {
        if (!b_FatJet_tau4_) throw std::runtime_error("FatJet_tau4 branch doesn't exist");
        int bytes = b_FatJet_tau4_->GetEntry(index);
        v_FatJet_tau4_ = vector<float>(FatJet_tau4_,FatJet_tau4_+bytes/sizeof(FatJet_tau4_[0]));
        loaded_FatJet_tau4_ = true;
    }
    return v_FatJet_tau4_;
}
const bool &Nano::Flag_BadChargedCandidateFilter() {
    if (!loaded_Flag_BadChargedCandidateFilter_) counter_uncached_Flag_BadChargedCandidateFilter_++;
    else counter_cached_Flag_BadChargedCandidateFilter_++;
    if (!loaded_Flag_BadChargedCandidateFilter_) {
        if (!b_Flag_BadChargedCandidateFilter_) throw std::runtime_error("Flag_BadChargedCandidateFilter branch doesn't exist");
        b_Flag_BadChargedCandidateFilter_->GetEntry(index);
        loaded_Flag_BadChargedCandidateFilter_ = true;
    }
    return Flag_BadChargedCandidateFilter_;
}
const bool &Nano::Flag_BadChargedCandidateFilter_pRECO() {
    if (!loaded_Flag_BadChargedCandidateFilter_pRECO_) counter_uncached_Flag_BadChargedCandidateFilter_pRECO_++;
    else counter_cached_Flag_BadChargedCandidateFilter_pRECO_++;
    if (!loaded_Flag_BadChargedCandidateFilter_pRECO_) {
        if (!b_Flag_BadChargedCandidateFilter_pRECO_) throw std::runtime_error("Flag_BadChargedCandidateFilter_pRECO branch doesn't exist");
        b_Flag_BadChargedCandidateFilter_pRECO_->GetEntry(index);
        loaded_Flag_BadChargedCandidateFilter_pRECO_ = true;
    }
    return Flag_BadChargedCandidateFilter_pRECO_;
}
const bool &Nano::Flag_BadChargedCandidateSummer16Filter() {
    if (!loaded_Flag_BadChargedCandidateSummer16Filter_) counter_uncached_Flag_BadChargedCandidateSummer16Filter_++;
    else counter_cached_Flag_BadChargedCandidateSummer16Filter_++;
    if (!loaded_Flag_BadChargedCandidateSummer16Filter_) {
        if (!b_Flag_BadChargedCandidateSummer16Filter_) throw std::runtime_error("Flag_BadChargedCandidateSummer16Filter branch doesn't exist");
        b_Flag_BadChargedCandidateSummer16Filter_->GetEntry(index);
        loaded_Flag_BadChargedCandidateSummer16Filter_ = true;
    }
    return Flag_BadChargedCandidateSummer16Filter_;
}
const bool &Nano::Flag_BadChargedCandidateSummer16Filter_pRECO() {
    if (!loaded_Flag_BadChargedCandidateSummer16Filter_pRECO_) counter_uncached_Flag_BadChargedCandidateSummer16Filter_pRECO_++;
    else counter_cached_Flag_BadChargedCandidateSummer16Filter_pRECO_++;
    if (!loaded_Flag_BadChargedCandidateSummer16Filter_pRECO_) {
        if (!b_Flag_BadChargedCandidateSummer16Filter_pRECO_) throw std::runtime_error("Flag_BadChargedCandidateSummer16Filter_pRECO branch doesn't exist");
        b_Flag_BadChargedCandidateSummer16Filter_pRECO_->GetEntry(index);
        loaded_Flag_BadChargedCandidateSummer16Filter_pRECO_ = true;
    }
    return Flag_BadChargedCandidateSummer16Filter_pRECO_;
}
const bool &Nano::Flag_BadPFMuonDzFilter() {
    if (!loaded_Flag_BadPFMuonDzFilter_) counter_uncached_Flag_BadPFMuonDzFilter_++;
    else counter_cached_Flag_BadPFMuonDzFilter_++;
    if (!loaded_Flag_BadPFMuonDzFilter_) {
        if (!b_Flag_BadPFMuonDzFilter_) throw std::runtime_error("Flag_BadPFMuonDzFilter branch doesn't exist");
        b_Flag_BadPFMuonDzFilter_->GetEntry(index);
        loaded_Flag_BadPFMuonDzFilter_ = true;
    }
    return Flag_BadPFMuonDzFilter_;
}
const bool &Nano::Flag_BadPFMuonFilter() {
    if (!loaded_Flag_BadPFMuonFilter_) counter_uncached_Flag_BadPFMuonFilter_++;
    else counter_cached_Flag_BadPFMuonFilter_++;
    if (!loaded_Flag_BadPFMuonFilter_) {
        if (!b_Flag_BadPFMuonFilter_) throw std::runtime_error("Flag_BadPFMuonFilter branch doesn't exist");
        b_Flag_BadPFMuonFilter_->GetEntry(index);
        loaded_Flag_BadPFMuonFilter_ = true;
    }
    return Flag_BadPFMuonFilter_;
}
const bool &Nano::Flag_BadPFMuonFilter_pRECO() {
    if (!loaded_Flag_BadPFMuonFilter_pRECO_) counter_uncached_Flag_BadPFMuonFilter_pRECO_++;
    else counter_cached_Flag_BadPFMuonFilter_pRECO_++;
    if (!loaded_Flag_BadPFMuonFilter_pRECO_) {
        if (!b_Flag_BadPFMuonFilter_pRECO_) throw std::runtime_error("Flag_BadPFMuonFilter_pRECO branch doesn't exist");
        b_Flag_BadPFMuonFilter_pRECO_->GetEntry(index);
        loaded_Flag_BadPFMuonFilter_pRECO_ = true;
    }
    return Flag_BadPFMuonFilter_pRECO_;
}
const bool &Nano::Flag_BadPFMuonSummer16Filter() {
    if (!loaded_Flag_BadPFMuonSummer16Filter_) counter_uncached_Flag_BadPFMuonSummer16Filter_++;
    else counter_cached_Flag_BadPFMuonSummer16Filter_++;
    if (!loaded_Flag_BadPFMuonSummer16Filter_) {
        if (!b_Flag_BadPFMuonSummer16Filter_) throw std::runtime_error("Flag_BadPFMuonSummer16Filter branch doesn't exist");
        b_Flag_BadPFMuonSummer16Filter_->GetEntry(index);
        loaded_Flag_BadPFMuonSummer16Filter_ = true;
    }
    return Flag_BadPFMuonSummer16Filter_;
}
const bool &Nano::Flag_BadPFMuonSummer16Filter_pRECO() {
    if (!loaded_Flag_BadPFMuonSummer16Filter_pRECO_) counter_uncached_Flag_BadPFMuonSummer16Filter_pRECO_++;
    else counter_cached_Flag_BadPFMuonSummer16Filter_pRECO_++;
    if (!loaded_Flag_BadPFMuonSummer16Filter_pRECO_) {
        if (!b_Flag_BadPFMuonSummer16Filter_pRECO_) throw std::runtime_error("Flag_BadPFMuonSummer16Filter_pRECO branch doesn't exist");
        b_Flag_BadPFMuonSummer16Filter_pRECO_->GetEntry(index);
        loaded_Flag_BadPFMuonSummer16Filter_pRECO_ = true;
    }
    return Flag_BadPFMuonSummer16Filter_pRECO_;
}
const bool &Nano::Flag_CSCTightHalo2015Filter() {
    if (!loaded_Flag_CSCTightHalo2015Filter_) counter_uncached_Flag_CSCTightHalo2015Filter_++;
    else counter_cached_Flag_CSCTightHalo2015Filter_++;
    if (!loaded_Flag_CSCTightHalo2015Filter_) {
        if (!b_Flag_CSCTightHalo2015Filter_) throw std::runtime_error("Flag_CSCTightHalo2015Filter branch doesn't exist");
        b_Flag_CSCTightHalo2015Filter_->GetEntry(index);
        loaded_Flag_CSCTightHalo2015Filter_ = true;
    }
    return Flag_CSCTightHalo2015Filter_;
}
const bool &Nano::Flag_CSCTightHalo2015Filter_pRECO() {
    if (!loaded_Flag_CSCTightHalo2015Filter_pRECO_) counter_uncached_Flag_CSCTightHalo2015Filter_pRECO_++;
    else counter_cached_Flag_CSCTightHalo2015Filter_pRECO_++;
    if (!loaded_Flag_CSCTightHalo2015Filter_pRECO_) {
        if (!b_Flag_CSCTightHalo2015Filter_pRECO_) throw std::runtime_error("Flag_CSCTightHalo2015Filter_pRECO branch doesn't exist");
        b_Flag_CSCTightHalo2015Filter_pRECO_->GetEntry(index);
        loaded_Flag_CSCTightHalo2015Filter_pRECO_ = true;
    }
    return Flag_CSCTightHalo2015Filter_pRECO_;
}
const bool &Nano::Flag_CSCTightHaloFilter() {
    if (!loaded_Flag_CSCTightHaloFilter_) counter_uncached_Flag_CSCTightHaloFilter_++;
    else counter_cached_Flag_CSCTightHaloFilter_++;
    if (!loaded_Flag_CSCTightHaloFilter_) {
        if (!b_Flag_CSCTightHaloFilter_) throw std::runtime_error("Flag_CSCTightHaloFilter branch doesn't exist");
        b_Flag_CSCTightHaloFilter_->GetEntry(index);
        loaded_Flag_CSCTightHaloFilter_ = true;
    }
    return Flag_CSCTightHaloFilter_;
}
const bool &Nano::Flag_CSCTightHaloFilter_pRECO() {
    if (!loaded_Flag_CSCTightHaloFilter_pRECO_) counter_uncached_Flag_CSCTightHaloFilter_pRECO_++;
    else counter_cached_Flag_CSCTightHaloFilter_pRECO_++;
    if (!loaded_Flag_CSCTightHaloFilter_pRECO_) {
        if (!b_Flag_CSCTightHaloFilter_pRECO_) throw std::runtime_error("Flag_CSCTightHaloFilter_pRECO branch doesn't exist");
        b_Flag_CSCTightHaloFilter_pRECO_->GetEntry(index);
        loaded_Flag_CSCTightHaloFilter_pRECO_ = true;
    }
    return Flag_CSCTightHaloFilter_pRECO_;
}
const bool &Nano::Flag_CSCTightHaloTrkMuUnvetoFilter() {
    if (!loaded_Flag_CSCTightHaloTrkMuUnvetoFilter_) counter_uncached_Flag_CSCTightHaloTrkMuUnvetoFilter_++;
    else counter_cached_Flag_CSCTightHaloTrkMuUnvetoFilter_++;
    if (!loaded_Flag_CSCTightHaloTrkMuUnvetoFilter_) {
        if (!b_Flag_CSCTightHaloTrkMuUnvetoFilter_) throw std::runtime_error("Flag_CSCTightHaloTrkMuUnvetoFilter branch doesn't exist");
        b_Flag_CSCTightHaloTrkMuUnvetoFilter_->GetEntry(index);
        loaded_Flag_CSCTightHaloTrkMuUnvetoFilter_ = true;
    }
    return Flag_CSCTightHaloTrkMuUnvetoFilter_;
}
const bool &Nano::Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO() {
    if (!loaded_Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO_) counter_uncached_Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO_++;
    else counter_cached_Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO_++;
    if (!loaded_Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO_) {
        if (!b_Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO_) throw std::runtime_error("Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO branch doesn't exist");
        b_Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO_->GetEntry(index);
        loaded_Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO_ = true;
    }
    return Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO_;
}
const bool &Nano::Flag_EcalDeadCellBoundaryEnergyFilter() {
    if (!loaded_Flag_EcalDeadCellBoundaryEnergyFilter_) counter_uncached_Flag_EcalDeadCellBoundaryEnergyFilter_++;
    else counter_cached_Flag_EcalDeadCellBoundaryEnergyFilter_++;
    if (!loaded_Flag_EcalDeadCellBoundaryEnergyFilter_) {
        if (!b_Flag_EcalDeadCellBoundaryEnergyFilter_) throw std::runtime_error("Flag_EcalDeadCellBoundaryEnergyFilter branch doesn't exist");
        b_Flag_EcalDeadCellBoundaryEnergyFilter_->GetEntry(index);
        loaded_Flag_EcalDeadCellBoundaryEnergyFilter_ = true;
    }
    return Flag_EcalDeadCellBoundaryEnergyFilter_;
}
const bool &Nano::Flag_EcalDeadCellBoundaryEnergyFilter_pRECO() {
    if (!loaded_Flag_EcalDeadCellBoundaryEnergyFilter_pRECO_) counter_uncached_Flag_EcalDeadCellBoundaryEnergyFilter_pRECO_++;
    else counter_cached_Flag_EcalDeadCellBoundaryEnergyFilter_pRECO_++;
    if (!loaded_Flag_EcalDeadCellBoundaryEnergyFilter_pRECO_) {
        if (!b_Flag_EcalDeadCellBoundaryEnergyFilter_pRECO_) throw std::runtime_error("Flag_EcalDeadCellBoundaryEnergyFilter_pRECO branch doesn't exist");
        b_Flag_EcalDeadCellBoundaryEnergyFilter_pRECO_->GetEntry(index);
        loaded_Flag_EcalDeadCellBoundaryEnergyFilter_pRECO_ = true;
    }
    return Flag_EcalDeadCellBoundaryEnergyFilter_pRECO_;
}
const bool &Nano::Flag_EcalDeadCellTriggerPrimitiveFilter() {
    if (!loaded_Flag_EcalDeadCellTriggerPrimitiveFilter_) counter_uncached_Flag_EcalDeadCellTriggerPrimitiveFilter_++;
    else counter_cached_Flag_EcalDeadCellTriggerPrimitiveFilter_++;
    if (!loaded_Flag_EcalDeadCellTriggerPrimitiveFilter_) {
        if (!b_Flag_EcalDeadCellTriggerPrimitiveFilter_) throw std::runtime_error("Flag_EcalDeadCellTriggerPrimitiveFilter branch doesn't exist");
        b_Flag_EcalDeadCellTriggerPrimitiveFilter_->GetEntry(index);
        loaded_Flag_EcalDeadCellTriggerPrimitiveFilter_ = true;
    }
    return Flag_EcalDeadCellTriggerPrimitiveFilter_;
}
const bool &Nano::Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO() {
    if (!loaded_Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO_) counter_uncached_Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO_++;
    else counter_cached_Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO_++;
    if (!loaded_Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO_) {
        if (!b_Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO_) throw std::runtime_error("Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO branch doesn't exist");
        b_Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO_->GetEntry(index);
        loaded_Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO_ = true;
    }
    return Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO_;
}
const bool &Nano::Flag_HBHENoiseFilter() {
    if (!loaded_Flag_HBHENoiseFilter_) counter_uncached_Flag_HBHENoiseFilter_++;
    else counter_cached_Flag_HBHENoiseFilter_++;
    if (!loaded_Flag_HBHENoiseFilter_) {
        if (!b_Flag_HBHENoiseFilter_) throw std::runtime_error("Flag_HBHENoiseFilter branch doesn't exist");
        b_Flag_HBHENoiseFilter_->GetEntry(index);
        loaded_Flag_HBHENoiseFilter_ = true;
    }
    return Flag_HBHENoiseFilter_;
}
const bool &Nano::Flag_HBHENoiseFilter_pRECO() {
    if (!loaded_Flag_HBHENoiseFilter_pRECO_) counter_uncached_Flag_HBHENoiseFilter_pRECO_++;
    else counter_cached_Flag_HBHENoiseFilter_pRECO_++;
    if (!loaded_Flag_HBHENoiseFilter_pRECO_) {
        if (!b_Flag_HBHENoiseFilter_pRECO_) throw std::runtime_error("Flag_HBHENoiseFilter_pRECO branch doesn't exist");
        b_Flag_HBHENoiseFilter_pRECO_->GetEntry(index);
        loaded_Flag_HBHENoiseFilter_pRECO_ = true;
    }
    return Flag_HBHENoiseFilter_pRECO_;
}
const bool &Nano::Flag_HBHENoiseIsoFilter() {
    if (!loaded_Flag_HBHENoiseIsoFilter_) counter_uncached_Flag_HBHENoiseIsoFilter_++;
    else counter_cached_Flag_HBHENoiseIsoFilter_++;
    if (!loaded_Flag_HBHENoiseIsoFilter_) {
        if (!b_Flag_HBHENoiseIsoFilter_) throw std::runtime_error("Flag_HBHENoiseIsoFilter branch doesn't exist");
        b_Flag_HBHENoiseIsoFilter_->GetEntry(index);
        loaded_Flag_HBHENoiseIsoFilter_ = true;
    }
    return Flag_HBHENoiseIsoFilter_;
}
const bool &Nano::Flag_HBHENoiseIsoFilter_pRECO() {
    if (!loaded_Flag_HBHENoiseIsoFilter_pRECO_) counter_uncached_Flag_HBHENoiseIsoFilter_pRECO_++;
    else counter_cached_Flag_HBHENoiseIsoFilter_pRECO_++;
    if (!loaded_Flag_HBHENoiseIsoFilter_pRECO_) {
        if (!b_Flag_HBHENoiseIsoFilter_pRECO_) throw std::runtime_error("Flag_HBHENoiseIsoFilter_pRECO branch doesn't exist");
        b_Flag_HBHENoiseIsoFilter_pRECO_->GetEntry(index);
        loaded_Flag_HBHENoiseIsoFilter_pRECO_ = true;
    }
    return Flag_HBHENoiseIsoFilter_pRECO_;
}
const bool &Nano::Flag_HcalStripHaloFilter() {
    if (!loaded_Flag_HcalStripHaloFilter_) counter_uncached_Flag_HcalStripHaloFilter_++;
    else counter_cached_Flag_HcalStripHaloFilter_++;
    if (!loaded_Flag_HcalStripHaloFilter_) {
        if (!b_Flag_HcalStripHaloFilter_) throw std::runtime_error("Flag_HcalStripHaloFilter branch doesn't exist");
        b_Flag_HcalStripHaloFilter_->GetEntry(index);
        loaded_Flag_HcalStripHaloFilter_ = true;
    }
    return Flag_HcalStripHaloFilter_;
}
const bool &Nano::Flag_HcalStripHaloFilter_pRECO() {
    if (!loaded_Flag_HcalStripHaloFilter_pRECO_) counter_uncached_Flag_HcalStripHaloFilter_pRECO_++;
    else counter_cached_Flag_HcalStripHaloFilter_pRECO_++;
    if (!loaded_Flag_HcalStripHaloFilter_pRECO_) {
        if (!b_Flag_HcalStripHaloFilter_pRECO_) throw std::runtime_error("Flag_HcalStripHaloFilter_pRECO branch doesn't exist");
        b_Flag_HcalStripHaloFilter_pRECO_->GetEntry(index);
        loaded_Flag_HcalStripHaloFilter_pRECO_ = true;
    }
    return Flag_HcalStripHaloFilter_pRECO_;
}
const bool &Nano::Flag_METFilters() {
    if (!loaded_Flag_METFilters_) counter_uncached_Flag_METFilters_++;
    else counter_cached_Flag_METFilters_++;
    if (!loaded_Flag_METFilters_) {
        if (!b_Flag_METFilters_) throw std::runtime_error("Flag_METFilters branch doesn't exist");
        b_Flag_METFilters_->GetEntry(index);
        loaded_Flag_METFilters_ = true;
    }
    return Flag_METFilters_;
}
const bool &Nano::Flag_METFilters_pRECO() {
    if (!loaded_Flag_METFilters_pRECO_) counter_uncached_Flag_METFilters_pRECO_++;
    else counter_cached_Flag_METFilters_pRECO_++;
    if (!loaded_Flag_METFilters_pRECO_) {
        if (!b_Flag_METFilters_pRECO_) throw std::runtime_error("Flag_METFilters_pRECO branch doesn't exist");
        b_Flag_METFilters_pRECO_->GetEntry(index);
        loaded_Flag_METFilters_pRECO_ = true;
    }
    return Flag_METFilters_pRECO_;
}
const bool &Nano::Flag_chargedHadronTrackResolutionFilter() {
    if (!loaded_Flag_chargedHadronTrackResolutionFilter_) counter_uncached_Flag_chargedHadronTrackResolutionFilter_++;
    else counter_cached_Flag_chargedHadronTrackResolutionFilter_++;
    if (!loaded_Flag_chargedHadronTrackResolutionFilter_) {
        if (!b_Flag_chargedHadronTrackResolutionFilter_) throw std::runtime_error("Flag_chargedHadronTrackResolutionFilter branch doesn't exist");
        b_Flag_chargedHadronTrackResolutionFilter_->GetEntry(index);
        loaded_Flag_chargedHadronTrackResolutionFilter_ = true;
    }
    return Flag_chargedHadronTrackResolutionFilter_;
}
const bool &Nano::Flag_chargedHadronTrackResolutionFilter_pRECO() {
    if (!loaded_Flag_chargedHadronTrackResolutionFilter_pRECO_) counter_uncached_Flag_chargedHadronTrackResolutionFilter_pRECO_++;
    else counter_cached_Flag_chargedHadronTrackResolutionFilter_pRECO_++;
    if (!loaded_Flag_chargedHadronTrackResolutionFilter_pRECO_) {
        if (!b_Flag_chargedHadronTrackResolutionFilter_pRECO_) throw std::runtime_error("Flag_chargedHadronTrackResolutionFilter_pRECO branch doesn't exist");
        b_Flag_chargedHadronTrackResolutionFilter_pRECO_->GetEntry(index);
        loaded_Flag_chargedHadronTrackResolutionFilter_pRECO_ = true;
    }
    return Flag_chargedHadronTrackResolutionFilter_pRECO_;
}
const bool &Nano::Flag_ecalBadCalibFilter() {
    if (!loaded_Flag_ecalBadCalibFilter_) counter_uncached_Flag_ecalBadCalibFilter_++;
    else counter_cached_Flag_ecalBadCalibFilter_++;
    if (!loaded_Flag_ecalBadCalibFilter_) {
        if (!b_Flag_ecalBadCalibFilter_) throw std::runtime_error("Flag_ecalBadCalibFilter branch doesn't exist");
        b_Flag_ecalBadCalibFilter_->GetEntry(index);
        loaded_Flag_ecalBadCalibFilter_ = true;
    }
    return Flag_ecalBadCalibFilter_;
}
const bool &Nano::Flag_ecalBadCalibFilter_pRECO() {
    if (!loaded_Flag_ecalBadCalibFilter_pRECO_) counter_uncached_Flag_ecalBadCalibFilter_pRECO_++;
    else counter_cached_Flag_ecalBadCalibFilter_pRECO_++;
    if (!loaded_Flag_ecalBadCalibFilter_pRECO_) {
        if (!b_Flag_ecalBadCalibFilter_pRECO_) throw std::runtime_error("Flag_ecalBadCalibFilter_pRECO branch doesn't exist");
        b_Flag_ecalBadCalibFilter_pRECO_->GetEntry(index);
        loaded_Flag_ecalBadCalibFilter_pRECO_ = true;
    }
    return Flag_ecalBadCalibFilter_pRECO_;
}
const bool &Nano::Flag_ecalLaserCorrFilter() {
    if (!loaded_Flag_ecalLaserCorrFilter_) counter_uncached_Flag_ecalLaserCorrFilter_++;
    else counter_cached_Flag_ecalLaserCorrFilter_++;
    if (!loaded_Flag_ecalLaserCorrFilter_) {
        if (!b_Flag_ecalLaserCorrFilter_) throw std::runtime_error("Flag_ecalLaserCorrFilter branch doesn't exist");
        b_Flag_ecalLaserCorrFilter_->GetEntry(index);
        loaded_Flag_ecalLaserCorrFilter_ = true;
    }
    return Flag_ecalLaserCorrFilter_;
}
const bool &Nano::Flag_ecalLaserCorrFilter_pRECO() {
    if (!loaded_Flag_ecalLaserCorrFilter_pRECO_) counter_uncached_Flag_ecalLaserCorrFilter_pRECO_++;
    else counter_cached_Flag_ecalLaserCorrFilter_pRECO_++;
    if (!loaded_Flag_ecalLaserCorrFilter_pRECO_) {
        if (!b_Flag_ecalLaserCorrFilter_pRECO_) throw std::runtime_error("Flag_ecalLaserCorrFilter_pRECO branch doesn't exist");
        b_Flag_ecalLaserCorrFilter_pRECO_->GetEntry(index);
        loaded_Flag_ecalLaserCorrFilter_pRECO_ = true;
    }
    return Flag_ecalLaserCorrFilter_pRECO_;
}
const bool &Nano::Flag_eeBadScFilter() {
    if (!loaded_Flag_eeBadScFilter_) counter_uncached_Flag_eeBadScFilter_++;
    else counter_cached_Flag_eeBadScFilter_++;
    if (!loaded_Flag_eeBadScFilter_) {
        if (!b_Flag_eeBadScFilter_) throw std::runtime_error("Flag_eeBadScFilter branch doesn't exist");
        b_Flag_eeBadScFilter_->GetEntry(index);
        loaded_Flag_eeBadScFilter_ = true;
    }
    return Flag_eeBadScFilter_;
}
const bool &Nano::Flag_eeBadScFilter_pRECO() {
    if (!loaded_Flag_eeBadScFilter_pRECO_) counter_uncached_Flag_eeBadScFilter_pRECO_++;
    else counter_cached_Flag_eeBadScFilter_pRECO_++;
    if (!loaded_Flag_eeBadScFilter_pRECO_) {
        if (!b_Flag_eeBadScFilter_pRECO_) throw std::runtime_error("Flag_eeBadScFilter_pRECO branch doesn't exist");
        b_Flag_eeBadScFilter_pRECO_->GetEntry(index);
        loaded_Flag_eeBadScFilter_pRECO_ = true;
    }
    return Flag_eeBadScFilter_pRECO_;
}
const bool &Nano::Flag_globalSuperTightHalo2016Filter() {
    if (!loaded_Flag_globalSuperTightHalo2016Filter_) counter_uncached_Flag_globalSuperTightHalo2016Filter_++;
    else counter_cached_Flag_globalSuperTightHalo2016Filter_++;
    if (!loaded_Flag_globalSuperTightHalo2016Filter_) {
        if (!b_Flag_globalSuperTightHalo2016Filter_) throw std::runtime_error("Flag_globalSuperTightHalo2016Filter branch doesn't exist");
        b_Flag_globalSuperTightHalo2016Filter_->GetEntry(index);
        loaded_Flag_globalSuperTightHalo2016Filter_ = true;
    }
    return Flag_globalSuperTightHalo2016Filter_;
}
const bool &Nano::Flag_globalSuperTightHalo2016Filter_pRECO() {
    if (!loaded_Flag_globalSuperTightHalo2016Filter_pRECO_) counter_uncached_Flag_globalSuperTightHalo2016Filter_pRECO_++;
    else counter_cached_Flag_globalSuperTightHalo2016Filter_pRECO_++;
    if (!loaded_Flag_globalSuperTightHalo2016Filter_pRECO_) {
        if (!b_Flag_globalSuperTightHalo2016Filter_pRECO_) throw std::runtime_error("Flag_globalSuperTightHalo2016Filter_pRECO branch doesn't exist");
        b_Flag_globalSuperTightHalo2016Filter_pRECO_->GetEntry(index);
        loaded_Flag_globalSuperTightHalo2016Filter_pRECO_ = true;
    }
    return Flag_globalSuperTightHalo2016Filter_pRECO_;
}
const bool &Nano::Flag_globalTightHalo2016Filter() {
    if (!loaded_Flag_globalTightHalo2016Filter_) counter_uncached_Flag_globalTightHalo2016Filter_++;
    else counter_cached_Flag_globalTightHalo2016Filter_++;
    if (!loaded_Flag_globalTightHalo2016Filter_) {
        if (!b_Flag_globalTightHalo2016Filter_) throw std::runtime_error("Flag_globalTightHalo2016Filter branch doesn't exist");
        b_Flag_globalTightHalo2016Filter_->GetEntry(index);
        loaded_Flag_globalTightHalo2016Filter_ = true;
    }
    return Flag_globalTightHalo2016Filter_;
}
const bool &Nano::Flag_globalTightHalo2016Filter_pRECO() {
    if (!loaded_Flag_globalTightHalo2016Filter_pRECO_) counter_uncached_Flag_globalTightHalo2016Filter_pRECO_++;
    else counter_cached_Flag_globalTightHalo2016Filter_pRECO_++;
    if (!loaded_Flag_globalTightHalo2016Filter_pRECO_) {
        if (!b_Flag_globalTightHalo2016Filter_pRECO_) throw std::runtime_error("Flag_globalTightHalo2016Filter_pRECO branch doesn't exist");
        b_Flag_globalTightHalo2016Filter_pRECO_->GetEntry(index);
        loaded_Flag_globalTightHalo2016Filter_pRECO_ = true;
    }
    return Flag_globalTightHalo2016Filter_pRECO_;
}
const bool &Nano::Flag_goodVertices() {
    if (!loaded_Flag_goodVertices_) counter_uncached_Flag_goodVertices_++;
    else counter_cached_Flag_goodVertices_++;
    if (!loaded_Flag_goodVertices_) {
        if (!b_Flag_goodVertices_) throw std::runtime_error("Flag_goodVertices branch doesn't exist");
        b_Flag_goodVertices_->GetEntry(index);
        loaded_Flag_goodVertices_ = true;
    }
    return Flag_goodVertices_;
}
const bool &Nano::Flag_goodVertices_pRECO() {
    if (!loaded_Flag_goodVertices_pRECO_) counter_uncached_Flag_goodVertices_pRECO_++;
    else counter_cached_Flag_goodVertices_pRECO_++;
    if (!loaded_Flag_goodVertices_pRECO_) {
        if (!b_Flag_goodVertices_pRECO_) throw std::runtime_error("Flag_goodVertices_pRECO branch doesn't exist");
        b_Flag_goodVertices_pRECO_->GetEntry(index);
        loaded_Flag_goodVertices_pRECO_ = true;
    }
    return Flag_goodVertices_pRECO_;
}
const bool &Nano::Flag_hcalLaserEventFilter() {
    if (!loaded_Flag_hcalLaserEventFilter_) counter_uncached_Flag_hcalLaserEventFilter_++;
    else counter_cached_Flag_hcalLaserEventFilter_++;
    if (!loaded_Flag_hcalLaserEventFilter_) {
        if (!b_Flag_hcalLaserEventFilter_) throw std::runtime_error("Flag_hcalLaserEventFilter branch doesn't exist");
        b_Flag_hcalLaserEventFilter_->GetEntry(index);
        loaded_Flag_hcalLaserEventFilter_ = true;
    }
    return Flag_hcalLaserEventFilter_;
}
const bool &Nano::Flag_hcalLaserEventFilter_pRECO() {
    if (!loaded_Flag_hcalLaserEventFilter_pRECO_) counter_uncached_Flag_hcalLaserEventFilter_pRECO_++;
    else counter_cached_Flag_hcalLaserEventFilter_pRECO_++;
    if (!loaded_Flag_hcalLaserEventFilter_pRECO_) {
        if (!b_Flag_hcalLaserEventFilter_pRECO_) throw std::runtime_error("Flag_hcalLaserEventFilter_pRECO branch doesn't exist");
        b_Flag_hcalLaserEventFilter_pRECO_->GetEntry(index);
        loaded_Flag_hcalLaserEventFilter_pRECO_ = true;
    }
    return Flag_hcalLaserEventFilter_pRECO_;
}
const bool &Nano::Flag_hfNoisyHitsFilter() {
    if (!loaded_Flag_hfNoisyHitsFilter_) counter_uncached_Flag_hfNoisyHitsFilter_++;
    else counter_cached_Flag_hfNoisyHitsFilter_++;
    if (!loaded_Flag_hfNoisyHitsFilter_) {
        if (!b_Flag_hfNoisyHitsFilter_) throw std::runtime_error("Flag_hfNoisyHitsFilter branch doesn't exist");
        b_Flag_hfNoisyHitsFilter_->GetEntry(index);
        loaded_Flag_hfNoisyHitsFilter_ = true;
    }
    return Flag_hfNoisyHitsFilter_;
}
const bool &Nano::Flag_muonBadTrackFilter() {
    if (!loaded_Flag_muonBadTrackFilter_) counter_uncached_Flag_muonBadTrackFilter_++;
    else counter_cached_Flag_muonBadTrackFilter_++;
    if (!loaded_Flag_muonBadTrackFilter_) {
        if (!b_Flag_muonBadTrackFilter_) throw std::runtime_error("Flag_muonBadTrackFilter branch doesn't exist");
        b_Flag_muonBadTrackFilter_->GetEntry(index);
        loaded_Flag_muonBadTrackFilter_ = true;
    }
    return Flag_muonBadTrackFilter_;
}
const bool &Nano::Flag_muonBadTrackFilter_pRECO() {
    if (!loaded_Flag_muonBadTrackFilter_pRECO_) counter_uncached_Flag_muonBadTrackFilter_pRECO_++;
    else counter_cached_Flag_muonBadTrackFilter_pRECO_++;
    if (!loaded_Flag_muonBadTrackFilter_pRECO_) {
        if (!b_Flag_muonBadTrackFilter_pRECO_) throw std::runtime_error("Flag_muonBadTrackFilter_pRECO branch doesn't exist");
        b_Flag_muonBadTrackFilter_pRECO_->GetEntry(index);
        loaded_Flag_muonBadTrackFilter_pRECO_ = true;
    }
    return Flag_muonBadTrackFilter_pRECO_;
}
const bool &Nano::Flag_trkPOGFilters() {
    if (!loaded_Flag_trkPOGFilters_) counter_uncached_Flag_trkPOGFilters_++;
    else counter_cached_Flag_trkPOGFilters_++;
    if (!loaded_Flag_trkPOGFilters_) {
        if (!b_Flag_trkPOGFilters_) throw std::runtime_error("Flag_trkPOGFilters branch doesn't exist");
        b_Flag_trkPOGFilters_->GetEntry(index);
        loaded_Flag_trkPOGFilters_ = true;
    }
    return Flag_trkPOGFilters_;
}
const bool &Nano::Flag_trkPOGFilters_pRECO() {
    if (!loaded_Flag_trkPOGFilters_pRECO_) counter_uncached_Flag_trkPOGFilters_pRECO_++;
    else counter_cached_Flag_trkPOGFilters_pRECO_++;
    if (!loaded_Flag_trkPOGFilters_pRECO_) {
        if (!b_Flag_trkPOGFilters_pRECO_) throw std::runtime_error("Flag_trkPOGFilters_pRECO branch doesn't exist");
        b_Flag_trkPOGFilters_pRECO_->GetEntry(index);
        loaded_Flag_trkPOGFilters_pRECO_ = true;
    }
    return Flag_trkPOGFilters_pRECO_;
}
const bool &Nano::Flag_trkPOG_logErrorTooManyClusters() {
    if (!loaded_Flag_trkPOG_logErrorTooManyClusters_) counter_uncached_Flag_trkPOG_logErrorTooManyClusters_++;
    else counter_cached_Flag_trkPOG_logErrorTooManyClusters_++;
    if (!loaded_Flag_trkPOG_logErrorTooManyClusters_) {
        if (!b_Flag_trkPOG_logErrorTooManyClusters_) throw std::runtime_error("Flag_trkPOG_logErrorTooManyClusters branch doesn't exist");
        b_Flag_trkPOG_logErrorTooManyClusters_->GetEntry(index);
        loaded_Flag_trkPOG_logErrorTooManyClusters_ = true;
    }
    return Flag_trkPOG_logErrorTooManyClusters_;
}
const bool &Nano::Flag_trkPOG_logErrorTooManyClusters_pRECO() {
    if (!loaded_Flag_trkPOG_logErrorTooManyClusters_pRECO_) counter_uncached_Flag_trkPOG_logErrorTooManyClusters_pRECO_++;
    else counter_cached_Flag_trkPOG_logErrorTooManyClusters_pRECO_++;
    if (!loaded_Flag_trkPOG_logErrorTooManyClusters_pRECO_) {
        if (!b_Flag_trkPOG_logErrorTooManyClusters_pRECO_) throw std::runtime_error("Flag_trkPOG_logErrorTooManyClusters_pRECO branch doesn't exist");
        b_Flag_trkPOG_logErrorTooManyClusters_pRECO_->GetEntry(index);
        loaded_Flag_trkPOG_logErrorTooManyClusters_pRECO_ = true;
    }
    return Flag_trkPOG_logErrorTooManyClusters_pRECO_;
}
const bool &Nano::Flag_trkPOG_manystripclus53X() {
    if (!loaded_Flag_trkPOG_manystripclus53X_) counter_uncached_Flag_trkPOG_manystripclus53X_++;
    else counter_cached_Flag_trkPOG_manystripclus53X_++;
    if (!loaded_Flag_trkPOG_manystripclus53X_) {
        if (!b_Flag_trkPOG_manystripclus53X_) throw std::runtime_error("Flag_trkPOG_manystripclus53X branch doesn't exist");
        b_Flag_trkPOG_manystripclus53X_->GetEntry(index);
        loaded_Flag_trkPOG_manystripclus53X_ = true;
    }
    return Flag_trkPOG_manystripclus53X_;
}
const bool &Nano::Flag_trkPOG_manystripclus53X_pRECO() {
    if (!loaded_Flag_trkPOG_manystripclus53X_pRECO_) counter_uncached_Flag_trkPOG_manystripclus53X_pRECO_++;
    else counter_cached_Flag_trkPOG_manystripclus53X_pRECO_++;
    if (!loaded_Flag_trkPOG_manystripclus53X_pRECO_) {
        if (!b_Flag_trkPOG_manystripclus53X_pRECO_) throw std::runtime_error("Flag_trkPOG_manystripclus53X_pRECO branch doesn't exist");
        b_Flag_trkPOG_manystripclus53X_pRECO_->GetEntry(index);
        loaded_Flag_trkPOG_manystripclus53X_pRECO_ = true;
    }
    return Flag_trkPOG_manystripclus53X_pRECO_;
}
const bool &Nano::Flag_trkPOG_toomanystripclus53X() {
    if (!loaded_Flag_trkPOG_toomanystripclus53X_) counter_uncached_Flag_trkPOG_toomanystripclus53X_++;
    else counter_cached_Flag_trkPOG_toomanystripclus53X_++;
    if (!loaded_Flag_trkPOG_toomanystripclus53X_) {
        if (!b_Flag_trkPOG_toomanystripclus53X_) throw std::runtime_error("Flag_trkPOG_toomanystripclus53X branch doesn't exist");
        b_Flag_trkPOG_toomanystripclus53X_->GetEntry(index);
        loaded_Flag_trkPOG_toomanystripclus53X_ = true;
    }
    return Flag_trkPOG_toomanystripclus53X_;
}
const bool &Nano::Flag_trkPOG_toomanystripclus53X_pRECO() {
    if (!loaded_Flag_trkPOG_toomanystripclus53X_pRECO_) counter_uncached_Flag_trkPOG_toomanystripclus53X_pRECO_++;
    else counter_cached_Flag_trkPOG_toomanystripclus53X_pRECO_++;
    if (!loaded_Flag_trkPOG_toomanystripclus53X_pRECO_) {
        if (!b_Flag_trkPOG_toomanystripclus53X_pRECO_) throw std::runtime_error("Flag_trkPOG_toomanystripclus53X_pRECO branch doesn't exist");
        b_Flag_trkPOG_toomanystripclus53X_pRECO_->GetEntry(index);
        loaded_Flag_trkPOG_toomanystripclus53X_pRECO_ = true;
    }
    return Flag_trkPOG_toomanystripclus53X_pRECO_;
}
const vector<float> &Nano::FsrPhoton_dROverEt2() {
    if (!loaded_FsrPhoton_dROverEt2_) counter_uncached_FsrPhoton_dROverEt2_++;
    else counter_cached_FsrPhoton_dROverEt2_++;
    if (!loaded_FsrPhoton_dROverEt2_) {
        if (!b_FsrPhoton_dROverEt2_) throw std::runtime_error("FsrPhoton_dROverEt2 branch doesn't exist");
        int bytes = b_FsrPhoton_dROverEt2_->GetEntry(index);
        v_FsrPhoton_dROverEt2_ = vector<float>(FsrPhoton_dROverEt2_,FsrPhoton_dROverEt2_+bytes/sizeof(FsrPhoton_dROverEt2_[0]));
        loaded_FsrPhoton_dROverEt2_ = true;
    }
    return v_FsrPhoton_dROverEt2_;
}
const vector<int> &Nano::FsrPhoton_electronIdx() {
    if (!loaded_FsrPhoton_electronIdx_) counter_uncached_FsrPhoton_electronIdx_++;
    else counter_cached_FsrPhoton_electronIdx_++;
    if (!loaded_FsrPhoton_electronIdx_) {
        if (!b_FsrPhoton_electronIdx_) throw std::runtime_error("FsrPhoton_electronIdx branch doesn't exist");
        int bytes = b_FsrPhoton_electronIdx_->GetEntry(index);
        v_FsrPhoton_electronIdx_ = vector<int>(FsrPhoton_electronIdx_,FsrPhoton_electronIdx_+bytes/sizeof(FsrPhoton_electronIdx_[0]));
        loaded_FsrPhoton_electronIdx_ = true;
    }
    return v_FsrPhoton_electronIdx_;
}
const vector<float> &Nano::FsrPhoton_eta() {
    if (!loaded_FsrPhoton_eta_) counter_uncached_FsrPhoton_eta_++;
    else counter_cached_FsrPhoton_eta_++;
    if (!loaded_FsrPhoton_eta_) {
        if (!b_FsrPhoton_eta_) throw std::runtime_error("FsrPhoton_eta branch doesn't exist");
        int bytes = b_FsrPhoton_eta_->GetEntry(index);
        v_FsrPhoton_eta_ = vector<float>(FsrPhoton_eta_,FsrPhoton_eta_+bytes/sizeof(FsrPhoton_eta_[0]));
        loaded_FsrPhoton_eta_ = true;
    }
    return v_FsrPhoton_eta_;
}
const vector<int> &Nano::FsrPhoton_muonIdx() {
    if (!loaded_FsrPhoton_muonIdx_) counter_uncached_FsrPhoton_muonIdx_++;
    else counter_cached_FsrPhoton_muonIdx_++;
    if (!loaded_FsrPhoton_muonIdx_) {
        if (!b_FsrPhoton_muonIdx_) throw std::runtime_error("FsrPhoton_muonIdx branch doesn't exist");
        int bytes = b_FsrPhoton_muonIdx_->GetEntry(index);
        v_FsrPhoton_muonIdx_ = vector<int>(FsrPhoton_muonIdx_,FsrPhoton_muonIdx_+bytes/sizeof(FsrPhoton_muonIdx_[0]));
        loaded_FsrPhoton_muonIdx_ = true;
    }
    return v_FsrPhoton_muonIdx_;
}
const vector<float> &Nano::FsrPhoton_phi() {
    if (!loaded_FsrPhoton_phi_) counter_uncached_FsrPhoton_phi_++;
    else counter_cached_FsrPhoton_phi_++;
    if (!loaded_FsrPhoton_phi_) {
        if (!b_FsrPhoton_phi_) throw std::runtime_error("FsrPhoton_phi branch doesn't exist");
        int bytes = b_FsrPhoton_phi_->GetEntry(index);
        v_FsrPhoton_phi_ = vector<float>(FsrPhoton_phi_,FsrPhoton_phi_+bytes/sizeof(FsrPhoton_phi_[0]));
        loaded_FsrPhoton_phi_ = true;
    }
    return v_FsrPhoton_phi_;
}
const vector<float> &Nano::FsrPhoton_pt() {
    if (!loaded_FsrPhoton_pt_) counter_uncached_FsrPhoton_pt_++;
    else counter_cached_FsrPhoton_pt_++;
    if (!loaded_FsrPhoton_pt_) {
        if (!b_FsrPhoton_pt_) throw std::runtime_error("FsrPhoton_pt branch doesn't exist");
        int bytes = b_FsrPhoton_pt_->GetEntry(index);
        v_FsrPhoton_pt_ = vector<float>(FsrPhoton_pt_,FsrPhoton_pt_+bytes/sizeof(FsrPhoton_pt_[0]));
        loaded_FsrPhoton_pt_ = true;
    }
    return v_FsrPhoton_pt_;
}
const vector<float> &Nano::FsrPhoton_relIso03() {
    if (!loaded_FsrPhoton_relIso03_) counter_uncached_FsrPhoton_relIso03_++;
    else counter_cached_FsrPhoton_relIso03_++;
    if (!loaded_FsrPhoton_relIso03_) {
        if (!b_FsrPhoton_relIso03_) throw std::runtime_error("FsrPhoton_relIso03 branch doesn't exist");
        int bytes = b_FsrPhoton_relIso03_->GetEntry(index);
        v_FsrPhoton_relIso03_ = vector<float>(FsrPhoton_relIso03_,FsrPhoton_relIso03_+bytes/sizeof(FsrPhoton_relIso03_[0]));
        loaded_FsrPhoton_relIso03_ = true;
    }
    return v_FsrPhoton_relIso03_;
}
const vector<float> &Nano::GenDressedLepton_eta() {
    if (!loaded_GenDressedLepton_eta_) counter_uncached_GenDressedLepton_eta_++;
    else counter_cached_GenDressedLepton_eta_++;
    if (!loaded_GenDressedLepton_eta_) {
        if (!b_GenDressedLepton_eta_) throw std::runtime_error("GenDressedLepton_eta branch doesn't exist");
        int bytes = b_GenDressedLepton_eta_->GetEntry(index);
        v_GenDressedLepton_eta_ = vector<float>(GenDressedLepton_eta_,GenDressedLepton_eta_+bytes/sizeof(GenDressedLepton_eta_[0]));
        loaded_GenDressedLepton_eta_ = true;
    }
    return v_GenDressedLepton_eta_;
}
const vector<bool> &Nano::GenDressedLepton_hasTauAnc() {
    if (!loaded_GenDressedLepton_hasTauAnc_) counter_uncached_GenDressedLepton_hasTauAnc_++;
    else counter_cached_GenDressedLepton_hasTauAnc_++;
    if (!loaded_GenDressedLepton_hasTauAnc_) {
        if (!b_GenDressedLepton_hasTauAnc_) throw std::runtime_error("GenDressedLepton_hasTauAnc branch doesn't exist");
        int bytes = b_GenDressedLepton_hasTauAnc_->GetEntry(index);
        v_GenDressedLepton_hasTauAnc_ = vector<bool>(GenDressedLepton_hasTauAnc_,GenDressedLepton_hasTauAnc_+bytes/sizeof(GenDressedLepton_hasTauAnc_[0]));
        loaded_GenDressedLepton_hasTauAnc_ = true;
    }
    return v_GenDressedLepton_hasTauAnc_;
}
const vector<float> &Nano::GenDressedLepton_mass() {
    if (!loaded_GenDressedLepton_mass_) counter_uncached_GenDressedLepton_mass_++;
    else counter_cached_GenDressedLepton_mass_++;
    if (!loaded_GenDressedLepton_mass_) {
        if (!b_GenDressedLepton_mass_) throw std::runtime_error("GenDressedLepton_mass branch doesn't exist");
        int bytes = b_GenDressedLepton_mass_->GetEntry(index);
        v_GenDressedLepton_mass_ = vector<float>(GenDressedLepton_mass_,GenDressedLepton_mass_+bytes/sizeof(GenDressedLepton_mass_[0]));
        loaded_GenDressedLepton_mass_ = true;
    }
    return v_GenDressedLepton_mass_;
}
const vector<LorentzVector> &Nano::GenDressedLepton_p4() {
    if (!loaded_GenDressedLepton_p4_) counter_uncached_GenDressedLepton_p4_++;
    else counter_cached_GenDressedLepton_p4_++;
    if (!loaded_GenDressedLepton_p4_) {
        v_GenDressedLepton_p4_.clear();
        vector<float> pts = Nano::GenDressedLepton_pt();
        vector<float> etas = Nano::GenDressedLepton_eta();
        vector<float> phis = Nano::GenDressedLepton_phi();
        vector<float> masses = Nano::GenDressedLepton_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_GenDressedLepton_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_GenDressedLepton_p4_ = true;
    }
    return v_GenDressedLepton_p4_;
}
const vector<int> &Nano::GenDressedLepton_pdgId() {
    if (!loaded_GenDressedLepton_pdgId_) counter_uncached_GenDressedLepton_pdgId_++;
    else counter_cached_GenDressedLepton_pdgId_++;
    if (!loaded_GenDressedLepton_pdgId_) {
        if (!b_GenDressedLepton_pdgId_) throw std::runtime_error("GenDressedLepton_pdgId branch doesn't exist");
        int bytes = b_GenDressedLepton_pdgId_->GetEntry(index);
        v_GenDressedLepton_pdgId_ = vector<int>(GenDressedLepton_pdgId_,GenDressedLepton_pdgId_+bytes/sizeof(GenDressedLepton_pdgId_[0]));
        loaded_GenDressedLepton_pdgId_ = true;
    }
    return v_GenDressedLepton_pdgId_;
}
const vector<float> &Nano::GenDressedLepton_phi() {
    if (!loaded_GenDressedLepton_phi_) counter_uncached_GenDressedLepton_phi_++;
    else counter_cached_GenDressedLepton_phi_++;
    if (!loaded_GenDressedLepton_phi_) {
        if (!b_GenDressedLepton_phi_) throw std::runtime_error("GenDressedLepton_phi branch doesn't exist");
        int bytes = b_GenDressedLepton_phi_->GetEntry(index);
        v_GenDressedLepton_phi_ = vector<float>(GenDressedLepton_phi_,GenDressedLepton_phi_+bytes/sizeof(GenDressedLepton_phi_[0]));
        loaded_GenDressedLepton_phi_ = true;
    }
    return v_GenDressedLepton_phi_;
}
const vector<float> &Nano::GenDressedLepton_pt() {
    if (!loaded_GenDressedLepton_pt_) counter_uncached_GenDressedLepton_pt_++;
    else counter_cached_GenDressedLepton_pt_++;
    if (!loaded_GenDressedLepton_pt_) {
        if (!b_GenDressedLepton_pt_) throw std::runtime_error("GenDressedLepton_pt branch doesn't exist");
        int bytes = b_GenDressedLepton_pt_->GetEntry(index);
        v_GenDressedLepton_pt_ = vector<float>(GenDressedLepton_pt_,GenDressedLepton_pt_+bytes/sizeof(GenDressedLepton_pt_[0]));
        loaded_GenDressedLepton_pt_ = true;
    }
    return v_GenDressedLepton_pt_;
}
const vector<float> &Nano::GenIsolatedPhoton_eta() {
    if (!loaded_GenIsolatedPhoton_eta_) counter_uncached_GenIsolatedPhoton_eta_++;
    else counter_cached_GenIsolatedPhoton_eta_++;
    if (!loaded_GenIsolatedPhoton_eta_) {
        if (!b_GenIsolatedPhoton_eta_) throw std::runtime_error("GenIsolatedPhoton_eta branch doesn't exist");
        int bytes = b_GenIsolatedPhoton_eta_->GetEntry(index);
        v_GenIsolatedPhoton_eta_ = vector<float>(GenIsolatedPhoton_eta_,GenIsolatedPhoton_eta_+bytes/sizeof(GenIsolatedPhoton_eta_[0]));
        loaded_GenIsolatedPhoton_eta_ = true;
    }
    return v_GenIsolatedPhoton_eta_;
}
const vector<float> &Nano::GenIsolatedPhoton_mass() {
    if (!loaded_GenIsolatedPhoton_mass_) counter_uncached_GenIsolatedPhoton_mass_++;
    else counter_cached_GenIsolatedPhoton_mass_++;
    if (!loaded_GenIsolatedPhoton_mass_) {
        if (!b_GenIsolatedPhoton_mass_) throw std::runtime_error("GenIsolatedPhoton_mass branch doesn't exist");
        int bytes = b_GenIsolatedPhoton_mass_->GetEntry(index);
        v_GenIsolatedPhoton_mass_ = vector<float>(GenIsolatedPhoton_mass_,GenIsolatedPhoton_mass_+bytes/sizeof(GenIsolatedPhoton_mass_[0]));
        loaded_GenIsolatedPhoton_mass_ = true;
    }
    return v_GenIsolatedPhoton_mass_;
}
const vector<LorentzVector> &Nano::GenIsolatedPhoton_p4() {
    if (!loaded_GenIsolatedPhoton_p4_) counter_uncached_GenIsolatedPhoton_p4_++;
    else counter_cached_GenIsolatedPhoton_p4_++;
    if (!loaded_GenIsolatedPhoton_p4_) {
        v_GenIsolatedPhoton_p4_.clear();
        vector<float> pts = Nano::GenIsolatedPhoton_pt();
        vector<float> etas = Nano::GenIsolatedPhoton_eta();
        vector<float> phis = Nano::GenIsolatedPhoton_phi();
        vector<float> masses = Nano::GenIsolatedPhoton_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_GenIsolatedPhoton_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_GenIsolatedPhoton_p4_ = true;
    }
    return v_GenIsolatedPhoton_p4_;
}
const vector<float> &Nano::GenIsolatedPhoton_phi() {
    if (!loaded_GenIsolatedPhoton_phi_) counter_uncached_GenIsolatedPhoton_phi_++;
    else counter_cached_GenIsolatedPhoton_phi_++;
    if (!loaded_GenIsolatedPhoton_phi_) {
        if (!b_GenIsolatedPhoton_phi_) throw std::runtime_error("GenIsolatedPhoton_phi branch doesn't exist");
        int bytes = b_GenIsolatedPhoton_phi_->GetEntry(index);
        v_GenIsolatedPhoton_phi_ = vector<float>(GenIsolatedPhoton_phi_,GenIsolatedPhoton_phi_+bytes/sizeof(GenIsolatedPhoton_phi_[0]));
        loaded_GenIsolatedPhoton_phi_ = true;
    }
    return v_GenIsolatedPhoton_phi_;
}
const vector<float> &Nano::GenIsolatedPhoton_pt() {
    if (!loaded_GenIsolatedPhoton_pt_) counter_uncached_GenIsolatedPhoton_pt_++;
    else counter_cached_GenIsolatedPhoton_pt_++;
    if (!loaded_GenIsolatedPhoton_pt_) {
        if (!b_GenIsolatedPhoton_pt_) throw std::runtime_error("GenIsolatedPhoton_pt branch doesn't exist");
        int bytes = b_GenIsolatedPhoton_pt_->GetEntry(index);
        v_GenIsolatedPhoton_pt_ = vector<float>(GenIsolatedPhoton_pt_,GenIsolatedPhoton_pt_+bytes/sizeof(GenIsolatedPhoton_pt_[0]));
        loaded_GenIsolatedPhoton_pt_ = true;
    }
    return v_GenIsolatedPhoton_pt_;
}
const vector<float> &Nano::GenJetAK8_eta() {
    if (!loaded_GenJetAK8_eta_) counter_uncached_GenJetAK8_eta_++;
    else counter_cached_GenJetAK8_eta_++;
    if (!loaded_GenJetAK8_eta_) {
        if (!b_GenJetAK8_eta_) throw std::runtime_error("GenJetAK8_eta branch doesn't exist");
        int bytes = b_GenJetAK8_eta_->GetEntry(index);
        v_GenJetAK8_eta_ = vector<float>(GenJetAK8_eta_,GenJetAK8_eta_+bytes/sizeof(GenJetAK8_eta_[0]));
        loaded_GenJetAK8_eta_ = true;
    }
    return v_GenJetAK8_eta_;
}
const vector<UChar_t> &Nano::GenJetAK8_hadronFlavour() {
    if (!loaded_GenJetAK8_hadronFlavour_) counter_uncached_GenJetAK8_hadronFlavour_++;
    else counter_cached_GenJetAK8_hadronFlavour_++;
    if (!loaded_GenJetAK8_hadronFlavour_) {
        if (!b_GenJetAK8_hadronFlavour_) throw std::runtime_error("GenJetAK8_hadronFlavour branch doesn't exist");
        int bytes = b_GenJetAK8_hadronFlavour_->GetEntry(index);
        v_GenJetAK8_hadronFlavour_ = vector<UChar_t>(GenJetAK8_hadronFlavour_,GenJetAK8_hadronFlavour_+bytes/sizeof(GenJetAK8_hadronFlavour_[0]));
        loaded_GenJetAK8_hadronFlavour_ = true;
    }
    return v_GenJetAK8_hadronFlavour_;
}
const vector<float> &Nano::GenJetAK8_mass() {
    if (!loaded_GenJetAK8_mass_) counter_uncached_GenJetAK8_mass_++;
    else counter_cached_GenJetAK8_mass_++;
    if (!loaded_GenJetAK8_mass_) {
        if (!b_GenJetAK8_mass_) throw std::runtime_error("GenJetAK8_mass branch doesn't exist");
        int bytes = b_GenJetAK8_mass_->GetEntry(index);
        v_GenJetAK8_mass_ = vector<float>(GenJetAK8_mass_,GenJetAK8_mass_+bytes/sizeof(GenJetAK8_mass_[0]));
        loaded_GenJetAK8_mass_ = true;
    }
    return v_GenJetAK8_mass_;
}
const vector<LorentzVector> &Nano::GenJetAK8_p4() {
    if (!loaded_GenJetAK8_p4_) counter_uncached_GenJetAK8_p4_++;
    else counter_cached_GenJetAK8_p4_++;
    if (!loaded_GenJetAK8_p4_) {
        v_GenJetAK8_p4_.clear();
        vector<float> pts = Nano::GenJetAK8_pt();
        vector<float> etas = Nano::GenJetAK8_eta();
        vector<float> phis = Nano::GenJetAK8_phi();
        vector<float> masses = Nano::GenJetAK8_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_GenJetAK8_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_GenJetAK8_p4_ = true;
    }
    return v_GenJetAK8_p4_;
}
const vector<int> &Nano::GenJetAK8_partonFlavour() {
    if (!loaded_GenJetAK8_partonFlavour_) counter_uncached_GenJetAK8_partonFlavour_++;
    else counter_cached_GenJetAK8_partonFlavour_++;
    if (!loaded_GenJetAK8_partonFlavour_) {
        if (!b_GenJetAK8_partonFlavour_) throw std::runtime_error("GenJetAK8_partonFlavour branch doesn't exist");
        int bytes = b_GenJetAK8_partonFlavour_->GetEntry(index);
        v_GenJetAK8_partonFlavour_ = vector<int>(GenJetAK8_partonFlavour_,GenJetAK8_partonFlavour_+bytes/sizeof(GenJetAK8_partonFlavour_[0]));
        loaded_GenJetAK8_partonFlavour_ = true;
    }
    return v_GenJetAK8_partonFlavour_;
}
const vector<float> &Nano::GenJetAK8_phi() {
    if (!loaded_GenJetAK8_phi_) counter_uncached_GenJetAK8_phi_++;
    else counter_cached_GenJetAK8_phi_++;
    if (!loaded_GenJetAK8_phi_) {
        if (!b_GenJetAK8_phi_) throw std::runtime_error("GenJetAK8_phi branch doesn't exist");
        int bytes = b_GenJetAK8_phi_->GetEntry(index);
        v_GenJetAK8_phi_ = vector<float>(GenJetAK8_phi_,GenJetAK8_phi_+bytes/sizeof(GenJetAK8_phi_[0]));
        loaded_GenJetAK8_phi_ = true;
    }
    return v_GenJetAK8_phi_;
}
const vector<float> &Nano::GenJetAK8_pt() {
    if (!loaded_GenJetAK8_pt_) counter_uncached_GenJetAK8_pt_++;
    else counter_cached_GenJetAK8_pt_++;
    if (!loaded_GenJetAK8_pt_) {
        if (!b_GenJetAK8_pt_) throw std::runtime_error("GenJetAK8_pt branch doesn't exist");
        int bytes = b_GenJetAK8_pt_->GetEntry(index);
        v_GenJetAK8_pt_ = vector<float>(GenJetAK8_pt_,GenJetAK8_pt_+bytes/sizeof(GenJetAK8_pt_[0]));
        loaded_GenJetAK8_pt_ = true;
    }
    return v_GenJetAK8_pt_;
}
const vector<float> &Nano::GenJet_eta() {
    if (!loaded_GenJet_eta_) counter_uncached_GenJet_eta_++;
    else counter_cached_GenJet_eta_++;
    if (!loaded_GenJet_eta_) {
        if (!b_GenJet_eta_) throw std::runtime_error("GenJet_eta branch doesn't exist");
        int bytes = b_GenJet_eta_->GetEntry(index);
        v_GenJet_eta_ = vector<float>(GenJet_eta_,GenJet_eta_+bytes/sizeof(GenJet_eta_[0]));
        loaded_GenJet_eta_ = true;
    }
    return v_GenJet_eta_;
}
const vector<UChar_t> &Nano::GenJet_hadronFlavour() {
    if (!loaded_GenJet_hadronFlavour_) counter_uncached_GenJet_hadronFlavour_++;
    else counter_cached_GenJet_hadronFlavour_++;
    if (!loaded_GenJet_hadronFlavour_) {
        if (!b_GenJet_hadronFlavour_) throw std::runtime_error("GenJet_hadronFlavour branch doesn't exist");
        int bytes = b_GenJet_hadronFlavour_->GetEntry(index);
        v_GenJet_hadronFlavour_ = vector<UChar_t>(GenJet_hadronFlavour_,GenJet_hadronFlavour_+bytes/sizeof(GenJet_hadronFlavour_[0]));
        loaded_GenJet_hadronFlavour_ = true;
    }
    return v_GenJet_hadronFlavour_;
}
const vector<float> &Nano::GenJet_mass() {
    if (!loaded_GenJet_mass_) counter_uncached_GenJet_mass_++;
    else counter_cached_GenJet_mass_++;
    if (!loaded_GenJet_mass_) {
        if (!b_GenJet_mass_) throw std::runtime_error("GenJet_mass branch doesn't exist");
        int bytes = b_GenJet_mass_->GetEntry(index);
        v_GenJet_mass_ = vector<float>(GenJet_mass_,GenJet_mass_+bytes/sizeof(GenJet_mass_[0]));
        loaded_GenJet_mass_ = true;
    }
    return v_GenJet_mass_;
}
const vector<LorentzVector> &Nano::GenJet_p4() {
    if (!loaded_GenJet_p4_) counter_uncached_GenJet_p4_++;
    else counter_cached_GenJet_p4_++;
    if (!loaded_GenJet_p4_) {
        v_GenJet_p4_.clear();
        vector<float> pts = Nano::GenJet_pt();
        vector<float> etas = Nano::GenJet_eta();
        vector<float> phis = Nano::GenJet_phi();
        vector<float> masses = Nano::GenJet_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_GenJet_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_GenJet_p4_ = true;
    }
    return v_GenJet_p4_;
}
const vector<int> &Nano::GenJet_partonFlavour() {
    if (!loaded_GenJet_partonFlavour_) counter_uncached_GenJet_partonFlavour_++;
    else counter_cached_GenJet_partonFlavour_++;
    if (!loaded_GenJet_partonFlavour_) {
        if (!b_GenJet_partonFlavour_) throw std::runtime_error("GenJet_partonFlavour branch doesn't exist");
        int bytes = b_GenJet_partonFlavour_->GetEntry(index);
        v_GenJet_partonFlavour_ = vector<int>(GenJet_partonFlavour_,GenJet_partonFlavour_+bytes/sizeof(GenJet_partonFlavour_[0]));
        loaded_GenJet_partonFlavour_ = true;
    }
    return v_GenJet_partonFlavour_;
}
const vector<float> &Nano::GenJet_phi() {
    if (!loaded_GenJet_phi_) counter_uncached_GenJet_phi_++;
    else counter_cached_GenJet_phi_++;
    if (!loaded_GenJet_phi_) {
        if (!b_GenJet_phi_) throw std::runtime_error("GenJet_phi branch doesn't exist");
        int bytes = b_GenJet_phi_->GetEntry(index);
        v_GenJet_phi_ = vector<float>(GenJet_phi_,GenJet_phi_+bytes/sizeof(GenJet_phi_[0]));
        loaded_GenJet_phi_ = true;
    }
    return v_GenJet_phi_;
}
const vector<float> &Nano::GenJet_pt() {
    if (!loaded_GenJet_pt_) counter_uncached_GenJet_pt_++;
    else counter_cached_GenJet_pt_++;
    if (!loaded_GenJet_pt_) {
        if (!b_GenJet_pt_) throw std::runtime_error("GenJet_pt branch doesn't exist");
        int bytes = b_GenJet_pt_->GetEntry(index);
        v_GenJet_pt_ = vector<float>(GenJet_pt_,GenJet_pt_+bytes/sizeof(GenJet_pt_[0]));
        loaded_GenJet_pt_ = true;
    }
    return v_GenJet_pt_;
}
const float &Nano::GenMET_phi() {
    if (!loaded_GenMET_phi_) counter_uncached_GenMET_phi_++;
    else counter_cached_GenMET_phi_++;
    if (!loaded_GenMET_phi_) {
        if (!b_GenMET_phi_) throw std::runtime_error("GenMET_phi branch doesn't exist");
        b_GenMET_phi_->GetEntry(index);
        loaded_GenMET_phi_ = true;
    }
    return GenMET_phi_;
}
const float &Nano::GenMET_pt() {
    if (!loaded_GenMET_pt_) counter_uncached_GenMET_pt_++;
    else counter_cached_GenMET_pt_++;
    if (!loaded_GenMET_pt_) {
        if (!b_GenMET_pt_) throw std::runtime_error("GenMET_pt branch doesn't exist");
        b_GenMET_pt_->GetEntry(index);
        loaded_GenMET_pt_ = true;
    }
    return GenMET_pt_;
}
const vector<float> &Nano::GenPart_eta() {
    if (!loaded_GenPart_eta_) counter_uncached_GenPart_eta_++;
    else counter_cached_GenPart_eta_++;
    if (!loaded_GenPart_eta_) {
        if (!b_GenPart_eta_) throw std::runtime_error("GenPart_eta branch doesn't exist");
        int bytes = b_GenPart_eta_->GetEntry(index);
        v_GenPart_eta_ = vector<float>(GenPart_eta_,GenPart_eta_+bytes/sizeof(GenPart_eta_[0]));
        loaded_GenPart_eta_ = true;
    }
    return v_GenPart_eta_;
}
const vector<int> &Nano::GenPart_genPartIdxMother() {
    if (!loaded_GenPart_genPartIdxMother_) counter_uncached_GenPart_genPartIdxMother_++;
    else counter_cached_GenPart_genPartIdxMother_++;
    if (!loaded_GenPart_genPartIdxMother_) {
        if (!b_GenPart_genPartIdxMother_) throw std::runtime_error("GenPart_genPartIdxMother branch doesn't exist");
        int bytes = b_GenPart_genPartIdxMother_->GetEntry(index);
        v_GenPart_genPartIdxMother_ = vector<int>(GenPart_genPartIdxMother_,GenPart_genPartIdxMother_+bytes/sizeof(GenPart_genPartIdxMother_[0]));
        loaded_GenPart_genPartIdxMother_ = true;
    }
    return v_GenPart_genPartIdxMother_;
}
const vector<float> &Nano::GenPart_mass() {
    if (!loaded_GenPart_mass_) counter_uncached_GenPart_mass_++;
    else counter_cached_GenPart_mass_++;
    if (!loaded_GenPart_mass_) {
        if (!b_GenPart_mass_) throw std::runtime_error("GenPart_mass branch doesn't exist");
        int bytes = b_GenPart_mass_->GetEntry(index);
        v_GenPart_mass_ = vector<float>(GenPart_mass_,GenPart_mass_+bytes/sizeof(GenPart_mass_[0]));
        loaded_GenPart_mass_ = true;
    }
    return v_GenPart_mass_;
}
const vector<LorentzVector> &Nano::GenPart_p4() {
    if (!loaded_GenPart_p4_) counter_uncached_GenPart_p4_++;
    else counter_cached_GenPart_p4_++;
    if (!loaded_GenPart_p4_) {
        v_GenPart_p4_.clear();
        vector<float> pts = Nano::GenPart_pt();
        vector<float> etas = Nano::GenPart_eta();
        vector<float> phis = Nano::GenPart_phi();
        vector<float> masses = Nano::GenPart_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_GenPart_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_GenPart_p4_ = true;
    }
    return v_GenPart_p4_;
}
const vector<int> &Nano::GenPart_pdgId() {
    if (!loaded_GenPart_pdgId_) counter_uncached_GenPart_pdgId_++;
    else counter_cached_GenPart_pdgId_++;
    if (!loaded_GenPart_pdgId_) {
        if (!b_GenPart_pdgId_) throw std::runtime_error("GenPart_pdgId branch doesn't exist");
        int bytes = b_GenPart_pdgId_->GetEntry(index);
        v_GenPart_pdgId_ = vector<int>(GenPart_pdgId_,GenPart_pdgId_+bytes/sizeof(GenPart_pdgId_[0]));
        loaded_GenPart_pdgId_ = true;
    }
    return v_GenPart_pdgId_;
}
const vector<float> &Nano::GenPart_phi() {
    if (!loaded_GenPart_phi_) counter_uncached_GenPart_phi_++;
    else counter_cached_GenPart_phi_++;
    if (!loaded_GenPart_phi_) {
        if (!b_GenPart_phi_) throw std::runtime_error("GenPart_phi branch doesn't exist");
        int bytes = b_GenPart_phi_->GetEntry(index);
        v_GenPart_phi_ = vector<float>(GenPart_phi_,GenPart_phi_+bytes/sizeof(GenPart_phi_[0]));
        loaded_GenPart_phi_ = true;
    }
    return v_GenPart_phi_;
}
const vector<float> &Nano::GenPart_pt() {
    if (!loaded_GenPart_pt_) counter_uncached_GenPart_pt_++;
    else counter_cached_GenPart_pt_++;
    if (!loaded_GenPart_pt_) {
        if (!b_GenPart_pt_) throw std::runtime_error("GenPart_pt branch doesn't exist");
        int bytes = b_GenPart_pt_->GetEntry(index);
        v_GenPart_pt_ = vector<float>(GenPart_pt_,GenPart_pt_+bytes/sizeof(GenPart_pt_[0]));
        loaded_GenPart_pt_ = true;
    }
    return v_GenPart_pt_;
}
const vector<int> &Nano::GenPart_status() {
    if (!loaded_GenPart_status_) counter_uncached_GenPart_status_++;
    else counter_cached_GenPart_status_++;
    if (!loaded_GenPart_status_) {
        if (!b_GenPart_status_) throw std::runtime_error("GenPart_status branch doesn't exist");
        int bytes = b_GenPart_status_->GetEntry(index);
        v_GenPart_status_ = vector<int>(GenPart_status_,GenPart_status_+bytes/sizeof(GenPart_status_[0]));
        loaded_GenPart_status_ = true;
    }
    return v_GenPart_status_;
}
const vector<int> &Nano::GenPart_statusFlags() {
    if (!loaded_GenPart_statusFlags_) counter_uncached_GenPart_statusFlags_++;
    else counter_cached_GenPart_statusFlags_++;
    if (!loaded_GenPart_statusFlags_) {
        if (!b_GenPart_statusFlags_) throw std::runtime_error("GenPart_statusFlags branch doesn't exist");
        int bytes = b_GenPart_statusFlags_->GetEntry(index);
        v_GenPart_statusFlags_ = vector<int>(GenPart_statusFlags_,GenPart_statusFlags_+bytes/sizeof(GenPart_statusFlags_[0]));
        loaded_GenPart_statusFlags_ = true;
    }
    return v_GenPart_statusFlags_;
}
const vector<bool> &Nano::GenProton_isPU() {
    if (!loaded_GenProton_isPU_) counter_uncached_GenProton_isPU_++;
    else counter_cached_GenProton_isPU_++;
    if (!loaded_GenProton_isPU_) {
        if (!b_GenProton_isPU_) throw std::runtime_error("GenProton_isPU branch doesn't exist");
        int bytes = b_GenProton_isPU_->GetEntry(index);
        v_GenProton_isPU_ = vector<bool>(GenProton_isPU_,GenProton_isPU_+bytes/sizeof(GenProton_isPU_[0]));
        loaded_GenProton_isPU_ = true;
    }
    return v_GenProton_isPU_;
}
const vector<float> &Nano::GenProton_px() {
    if (!loaded_GenProton_px_) counter_uncached_GenProton_px_++;
    else counter_cached_GenProton_px_++;
    if (!loaded_GenProton_px_) {
        if (!b_GenProton_px_) throw std::runtime_error("GenProton_px branch doesn't exist");
        int bytes = b_GenProton_px_->GetEntry(index);
        v_GenProton_px_ = vector<float>(GenProton_px_,GenProton_px_+bytes/sizeof(GenProton_px_[0]));
        loaded_GenProton_px_ = true;
    }
    return v_GenProton_px_;
}
const vector<float> &Nano::GenProton_py() {
    if (!loaded_GenProton_py_) counter_uncached_GenProton_py_++;
    else counter_cached_GenProton_py_++;
    if (!loaded_GenProton_py_) {
        if (!b_GenProton_py_) throw std::runtime_error("GenProton_py branch doesn't exist");
        int bytes = b_GenProton_py_->GetEntry(index);
        v_GenProton_py_ = vector<float>(GenProton_py_,GenProton_py_+bytes/sizeof(GenProton_py_[0]));
        loaded_GenProton_py_ = true;
    }
    return v_GenProton_py_;
}
const vector<float> &Nano::GenProton_pz() {
    if (!loaded_GenProton_pz_) counter_uncached_GenProton_pz_++;
    else counter_cached_GenProton_pz_++;
    if (!loaded_GenProton_pz_) {
        if (!b_GenProton_pz_) throw std::runtime_error("GenProton_pz branch doesn't exist");
        int bytes = b_GenProton_pz_->GetEntry(index);
        v_GenProton_pz_ = vector<float>(GenProton_pz_,GenProton_pz_+bytes/sizeof(GenProton_pz_[0]));
        loaded_GenProton_pz_ = true;
    }
    return v_GenProton_pz_;
}
const vector<float> &Nano::GenProton_vz() {
    if (!loaded_GenProton_vz_) counter_uncached_GenProton_vz_++;
    else counter_cached_GenProton_vz_++;
    if (!loaded_GenProton_vz_) {
        if (!b_GenProton_vz_) throw std::runtime_error("GenProton_vz branch doesn't exist");
        int bytes = b_GenProton_vz_->GetEntry(index);
        v_GenProton_vz_ = vector<float>(GenProton_vz_,GenProton_vz_+bytes/sizeof(GenProton_vz_[0]));
        loaded_GenProton_vz_ = true;
    }
    return v_GenProton_vz_;
}
const vector<int> &Nano::GenVisTau_charge() {
    if (!loaded_GenVisTau_charge_) counter_uncached_GenVisTau_charge_++;
    else counter_cached_GenVisTau_charge_++;
    if (!loaded_GenVisTau_charge_) {
        if (!b_GenVisTau_charge_) throw std::runtime_error("GenVisTau_charge branch doesn't exist");
        int bytes = b_GenVisTau_charge_->GetEntry(index);
        v_GenVisTau_charge_ = vector<int>(GenVisTau_charge_,GenVisTau_charge_+bytes/sizeof(GenVisTau_charge_[0]));
        loaded_GenVisTau_charge_ = true;
    }
    return v_GenVisTau_charge_;
}
const vector<float> &Nano::GenVisTau_eta() {
    if (!loaded_GenVisTau_eta_) counter_uncached_GenVisTau_eta_++;
    else counter_cached_GenVisTau_eta_++;
    if (!loaded_GenVisTau_eta_) {
        if (!b_GenVisTau_eta_) throw std::runtime_error("GenVisTau_eta branch doesn't exist");
        int bytes = b_GenVisTau_eta_->GetEntry(index);
        v_GenVisTau_eta_ = vector<float>(GenVisTau_eta_,GenVisTau_eta_+bytes/sizeof(GenVisTau_eta_[0]));
        loaded_GenVisTau_eta_ = true;
    }
    return v_GenVisTau_eta_;
}
const vector<int> &Nano::GenVisTau_genPartIdxMother() {
    if (!loaded_GenVisTau_genPartIdxMother_) counter_uncached_GenVisTau_genPartIdxMother_++;
    else counter_cached_GenVisTau_genPartIdxMother_++;
    if (!loaded_GenVisTau_genPartIdxMother_) {
        if (!b_GenVisTau_genPartIdxMother_) throw std::runtime_error("GenVisTau_genPartIdxMother branch doesn't exist");
        int bytes = b_GenVisTau_genPartIdxMother_->GetEntry(index);
        v_GenVisTau_genPartIdxMother_ = vector<int>(GenVisTau_genPartIdxMother_,GenVisTau_genPartIdxMother_+bytes/sizeof(GenVisTau_genPartIdxMother_[0]));
        loaded_GenVisTau_genPartIdxMother_ = true;
    }
    return v_GenVisTau_genPartIdxMother_;
}
const vector<float> &Nano::GenVisTau_mass() {
    if (!loaded_GenVisTau_mass_) counter_uncached_GenVisTau_mass_++;
    else counter_cached_GenVisTau_mass_++;
    if (!loaded_GenVisTau_mass_) {
        if (!b_GenVisTau_mass_) throw std::runtime_error("GenVisTau_mass branch doesn't exist");
        int bytes = b_GenVisTau_mass_->GetEntry(index);
        v_GenVisTau_mass_ = vector<float>(GenVisTau_mass_,GenVisTau_mass_+bytes/sizeof(GenVisTau_mass_[0]));
        loaded_GenVisTau_mass_ = true;
    }
    return v_GenVisTau_mass_;
}
const vector<LorentzVector> &Nano::GenVisTau_p4() {
    if (!loaded_GenVisTau_p4_) counter_uncached_GenVisTau_p4_++;
    else counter_cached_GenVisTau_p4_++;
    if (!loaded_GenVisTau_p4_) {
        v_GenVisTau_p4_.clear();
        vector<float> pts = Nano::GenVisTau_pt();
        vector<float> etas = Nano::GenVisTau_eta();
        vector<float> phis = Nano::GenVisTau_phi();
        vector<float> masses = Nano::GenVisTau_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_GenVisTau_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_GenVisTau_p4_ = true;
    }
    return v_GenVisTau_p4_;
}
const vector<float> &Nano::GenVisTau_phi() {
    if (!loaded_GenVisTau_phi_) counter_uncached_GenVisTau_phi_++;
    else counter_cached_GenVisTau_phi_++;
    if (!loaded_GenVisTau_phi_) {
        if (!b_GenVisTau_phi_) throw std::runtime_error("GenVisTau_phi branch doesn't exist");
        int bytes = b_GenVisTau_phi_->GetEntry(index);
        v_GenVisTau_phi_ = vector<float>(GenVisTau_phi_,GenVisTau_phi_+bytes/sizeof(GenVisTau_phi_[0]));
        loaded_GenVisTau_phi_ = true;
    }
    return v_GenVisTau_phi_;
}
const vector<float> &Nano::GenVisTau_pt() {
    if (!loaded_GenVisTau_pt_) counter_uncached_GenVisTau_pt_++;
    else counter_cached_GenVisTau_pt_++;
    if (!loaded_GenVisTau_pt_) {
        if (!b_GenVisTau_pt_) throw std::runtime_error("GenVisTau_pt branch doesn't exist");
        int bytes = b_GenVisTau_pt_->GetEntry(index);
        v_GenVisTau_pt_ = vector<float>(GenVisTau_pt_,GenVisTau_pt_+bytes/sizeof(GenVisTau_pt_[0]));
        loaded_GenVisTau_pt_ = true;
    }
    return v_GenVisTau_pt_;
}
const vector<int> &Nano::GenVisTau_status() {
    if (!loaded_GenVisTau_status_) counter_uncached_GenVisTau_status_++;
    else counter_cached_GenVisTau_status_++;
    if (!loaded_GenVisTau_status_) {
        if (!b_GenVisTau_status_) throw std::runtime_error("GenVisTau_status branch doesn't exist");
        int bytes = b_GenVisTau_status_->GetEntry(index);
        v_GenVisTau_status_ = vector<int>(GenVisTau_status_,GenVisTau_status_+bytes/sizeof(GenVisTau_status_[0]));
        loaded_GenVisTau_status_ = true;
    }
    return v_GenVisTau_status_;
}
const float &Nano::GenVtx_t0() {
    if (!loaded_GenVtx_t0_) counter_uncached_GenVtx_t0_++;
    else counter_cached_GenVtx_t0_++;
    if (!loaded_GenVtx_t0_) {
        if (!b_GenVtx_t0_) throw std::runtime_error("GenVtx_t0 branch doesn't exist");
        b_GenVtx_t0_->GetEntry(index);
        loaded_GenVtx_t0_ = true;
    }
    return GenVtx_t0_;
}
const float &Nano::GenVtx_x() {
    if (!loaded_GenVtx_x_) counter_uncached_GenVtx_x_++;
    else counter_cached_GenVtx_x_++;
    if (!loaded_GenVtx_x_) {
        if (!b_GenVtx_x_) throw std::runtime_error("GenVtx_x branch doesn't exist");
        b_GenVtx_x_->GetEntry(index);
        loaded_GenVtx_x_ = true;
    }
    return GenVtx_x_;
}
const float &Nano::GenVtx_y() {
    if (!loaded_GenVtx_y_) counter_uncached_GenVtx_y_++;
    else counter_cached_GenVtx_y_++;
    if (!loaded_GenVtx_y_) {
        if (!b_GenVtx_y_) throw std::runtime_error("GenVtx_y branch doesn't exist");
        b_GenVtx_y_->GetEntry(index);
        loaded_GenVtx_y_ = true;
    }
    return GenVtx_y_;
}
const float &Nano::GenVtx_z() {
    if (!loaded_GenVtx_z_) counter_uncached_GenVtx_z_++;
    else counter_cached_GenVtx_z_++;
    if (!loaded_GenVtx_z_) {
        if (!b_GenVtx_z_) throw std::runtime_error("GenVtx_z branch doesn't exist");
        b_GenVtx_z_->GetEntry(index);
        loaded_GenVtx_z_ = true;
    }
    return GenVtx_z_;
}
const float &Nano::Generator_binvar() {
    if (!loaded_Generator_binvar_) counter_uncached_Generator_binvar_++;
    else counter_cached_Generator_binvar_++;
    if (!loaded_Generator_binvar_) {
        if (!b_Generator_binvar_) throw std::runtime_error("Generator_binvar branch doesn't exist");
        b_Generator_binvar_->GetEntry(index);
        loaded_Generator_binvar_ = true;
    }
    return Generator_binvar_;
}
const int &Nano::Generator_id1() {
    if (!loaded_Generator_id1_) counter_uncached_Generator_id1_++;
    else counter_cached_Generator_id1_++;
    if (!loaded_Generator_id1_) {
        if (!b_Generator_id1_) throw std::runtime_error("Generator_id1 branch doesn't exist");
        b_Generator_id1_->GetEntry(index);
        loaded_Generator_id1_ = true;
    }
    return Generator_id1_;
}
const int &Nano::Generator_id2() {
    if (!loaded_Generator_id2_) counter_uncached_Generator_id2_++;
    else counter_cached_Generator_id2_++;
    if (!loaded_Generator_id2_) {
        if (!b_Generator_id2_) throw std::runtime_error("Generator_id2 branch doesn't exist");
        b_Generator_id2_->GetEntry(index);
        loaded_Generator_id2_ = true;
    }
    return Generator_id2_;
}
const float &Nano::Generator_scalePDF() {
    if (!loaded_Generator_scalePDF_) counter_uncached_Generator_scalePDF_++;
    else counter_cached_Generator_scalePDF_++;
    if (!loaded_Generator_scalePDF_) {
        if (!b_Generator_scalePDF_) throw std::runtime_error("Generator_scalePDF branch doesn't exist");
        b_Generator_scalePDF_->GetEntry(index);
        loaded_Generator_scalePDF_ = true;
    }
    return Generator_scalePDF_;
}
const float &Nano::Generator_weight() {
    if (!loaded_Generator_weight_) counter_uncached_Generator_weight_++;
    else counter_cached_Generator_weight_++;
    if (!loaded_Generator_weight_) {
        if (!b_Generator_weight_) throw std::runtime_error("Generator_weight branch doesn't exist");
        b_Generator_weight_->GetEntry(index);
        loaded_Generator_weight_ = true;
    }
    return Generator_weight_;
}
const float &Nano::Generator_x1() {
    if (!loaded_Generator_x1_) counter_uncached_Generator_x1_++;
    else counter_cached_Generator_x1_++;
    if (!loaded_Generator_x1_) {
        if (!b_Generator_x1_) throw std::runtime_error("Generator_x1 branch doesn't exist");
        b_Generator_x1_->GetEntry(index);
        loaded_Generator_x1_ = true;
    }
    return Generator_x1_;
}
const float &Nano::Generator_x2() {
    if (!loaded_Generator_x2_) counter_uncached_Generator_x2_++;
    else counter_cached_Generator_x2_++;
    if (!loaded_Generator_x2_) {
        if (!b_Generator_x2_) throw std::runtime_error("Generator_x2 branch doesn't exist");
        b_Generator_x2_->GetEntry(index);
        loaded_Generator_x2_ = true;
    }
    return Generator_x2_;
}
const float &Nano::Generator_xpdf1() {
    if (!loaded_Generator_xpdf1_) counter_uncached_Generator_xpdf1_++;
    else counter_cached_Generator_xpdf1_++;
    if (!loaded_Generator_xpdf1_) {
        if (!b_Generator_xpdf1_) throw std::runtime_error("Generator_xpdf1 branch doesn't exist");
        b_Generator_xpdf1_->GetEntry(index);
        loaded_Generator_xpdf1_ = true;
    }
    return Generator_xpdf1_;
}
const float &Nano::Generator_xpdf2() {
    if (!loaded_Generator_xpdf2_) counter_uncached_Generator_xpdf2_++;
    else counter_cached_Generator_xpdf2_++;
    if (!loaded_Generator_xpdf2_) {
        if (!b_Generator_xpdf2_) throw std::runtime_error("Generator_xpdf2 branch doesn't exist");
        b_Generator_xpdf2_->GetEntry(index);
        loaded_Generator_xpdf2_ = true;
    }
    return Generator_xpdf2_;
}
const bool &Nano::HLT_AK4CaloJet100() {
    if (!loaded_HLT_AK4CaloJet100_) counter_uncached_HLT_AK4CaloJet100_++;
    else counter_cached_HLT_AK4CaloJet100_++;
    if (!loaded_HLT_AK4CaloJet100_) {
        if (!b_HLT_AK4CaloJet100_) throw std::runtime_error("HLT_AK4CaloJet100 branch doesn't exist");
        b_HLT_AK4CaloJet100_->GetEntry(index);
        loaded_HLT_AK4CaloJet100_ = true;
    }
    return HLT_AK4CaloJet100_;
}
const bool &Nano::HLT_AK4CaloJet120() {
    if (!loaded_HLT_AK4CaloJet120_) counter_uncached_HLT_AK4CaloJet120_++;
    else counter_cached_HLT_AK4CaloJet120_++;
    if (!loaded_HLT_AK4CaloJet120_) {
        if (!b_HLT_AK4CaloJet120_) throw std::runtime_error("HLT_AK4CaloJet120 branch doesn't exist");
        b_HLT_AK4CaloJet120_->GetEntry(index);
        loaded_HLT_AK4CaloJet120_ = true;
    }
    return HLT_AK4CaloJet120_;
}
const bool &Nano::HLT_AK4CaloJet30() {
    if (!loaded_HLT_AK4CaloJet30_) counter_uncached_HLT_AK4CaloJet30_++;
    else counter_cached_HLT_AK4CaloJet30_++;
    if (!loaded_HLT_AK4CaloJet30_) {
        if (!b_HLT_AK4CaloJet30_) throw std::runtime_error("HLT_AK4CaloJet30 branch doesn't exist");
        b_HLT_AK4CaloJet30_->GetEntry(index);
        loaded_HLT_AK4CaloJet30_ = true;
    }
    return HLT_AK4CaloJet30_;
}
const bool &Nano::HLT_AK4CaloJet40() {
    if (!loaded_HLT_AK4CaloJet40_) counter_uncached_HLT_AK4CaloJet40_++;
    else counter_cached_HLT_AK4CaloJet40_++;
    if (!loaded_HLT_AK4CaloJet40_) {
        if (!b_HLT_AK4CaloJet40_) throw std::runtime_error("HLT_AK4CaloJet40 branch doesn't exist");
        b_HLT_AK4CaloJet40_->GetEntry(index);
        loaded_HLT_AK4CaloJet40_ = true;
    }
    return HLT_AK4CaloJet40_;
}
const bool &Nano::HLT_AK4CaloJet50() {
    if (!loaded_HLT_AK4CaloJet50_) counter_uncached_HLT_AK4CaloJet50_++;
    else counter_cached_HLT_AK4CaloJet50_++;
    if (!loaded_HLT_AK4CaloJet50_) {
        if (!b_HLT_AK4CaloJet50_) throw std::runtime_error("HLT_AK4CaloJet50 branch doesn't exist");
        b_HLT_AK4CaloJet50_->GetEntry(index);
        loaded_HLT_AK4CaloJet50_ = true;
    }
    return HLT_AK4CaloJet50_;
}
const bool &Nano::HLT_AK4CaloJet80() {
    if (!loaded_HLT_AK4CaloJet80_) counter_uncached_HLT_AK4CaloJet80_++;
    else counter_cached_HLT_AK4CaloJet80_++;
    if (!loaded_HLT_AK4CaloJet80_) {
        if (!b_HLT_AK4CaloJet80_) throw std::runtime_error("HLT_AK4CaloJet80 branch doesn't exist");
        b_HLT_AK4CaloJet80_->GetEntry(index);
        loaded_HLT_AK4CaloJet80_ = true;
    }
    return HLT_AK4CaloJet80_;
}
const bool &Nano::HLT_AK4PFJet100() {
    if (!loaded_HLT_AK4PFJet100_) counter_uncached_HLT_AK4PFJet100_++;
    else counter_cached_HLT_AK4PFJet100_++;
    if (!loaded_HLT_AK4PFJet100_) {
        if (!b_HLT_AK4PFJet100_) throw std::runtime_error("HLT_AK4PFJet100 branch doesn't exist");
        b_HLT_AK4PFJet100_->GetEntry(index);
        loaded_HLT_AK4PFJet100_ = true;
    }
    return HLT_AK4PFJet100_;
}
const bool &Nano::HLT_AK4PFJet120() {
    if (!loaded_HLT_AK4PFJet120_) counter_uncached_HLT_AK4PFJet120_++;
    else counter_cached_HLT_AK4PFJet120_++;
    if (!loaded_HLT_AK4PFJet120_) {
        if (!b_HLT_AK4PFJet120_) throw std::runtime_error("HLT_AK4PFJet120 branch doesn't exist");
        b_HLT_AK4PFJet120_->GetEntry(index);
        loaded_HLT_AK4PFJet120_ = true;
    }
    return HLT_AK4PFJet120_;
}
const bool &Nano::HLT_AK4PFJet30() {
    if (!loaded_HLT_AK4PFJet30_) counter_uncached_HLT_AK4PFJet30_++;
    else counter_cached_HLT_AK4PFJet30_++;
    if (!loaded_HLT_AK4PFJet30_) {
        if (!b_HLT_AK4PFJet30_) throw std::runtime_error("HLT_AK4PFJet30 branch doesn't exist");
        b_HLT_AK4PFJet30_->GetEntry(index);
        loaded_HLT_AK4PFJet30_ = true;
    }
    return HLT_AK4PFJet30_;
}
const bool &Nano::HLT_AK4PFJet50() {
    if (!loaded_HLT_AK4PFJet50_) counter_uncached_HLT_AK4PFJet50_++;
    else counter_cached_HLT_AK4PFJet50_++;
    if (!loaded_HLT_AK4PFJet50_) {
        if (!b_HLT_AK4PFJet50_) throw std::runtime_error("HLT_AK4PFJet50 branch doesn't exist");
        b_HLT_AK4PFJet50_->GetEntry(index);
        loaded_HLT_AK4PFJet50_ = true;
    }
    return HLT_AK4PFJet50_;
}
const bool &Nano::HLT_AK4PFJet80() {
    if (!loaded_HLT_AK4PFJet80_) counter_uncached_HLT_AK4PFJet80_++;
    else counter_cached_HLT_AK4PFJet80_++;
    if (!loaded_HLT_AK4PFJet80_) {
        if (!b_HLT_AK4PFJet80_) throw std::runtime_error("HLT_AK4PFJet80 branch doesn't exist");
        b_HLT_AK4PFJet80_->GetEntry(index);
        loaded_HLT_AK4PFJet80_ = true;
    }
    return HLT_AK4PFJet80_;
}
const bool &Nano::HLT_AK8DiPFJet250_200_TrimMass30() {
    if (!loaded_HLT_AK8DiPFJet250_200_TrimMass30_) counter_uncached_HLT_AK8DiPFJet250_200_TrimMass30_++;
    else counter_cached_HLT_AK8DiPFJet250_200_TrimMass30_++;
    if (!loaded_HLT_AK8DiPFJet250_200_TrimMass30_) {
        if (!b_HLT_AK8DiPFJet250_200_TrimMass30_) throw std::runtime_error("HLT_AK8DiPFJet250_200_TrimMass30 branch doesn't exist");
        b_HLT_AK8DiPFJet250_200_TrimMass30_->GetEntry(index);
        loaded_HLT_AK8DiPFJet250_200_TrimMass30_ = true;
    }
    return HLT_AK8DiPFJet250_200_TrimMass30_;
}
const bool &Nano::HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20() {
    if (!loaded_HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20_) counter_uncached_HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20_++;
    else counter_cached_HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20_++;
    if (!loaded_HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20_) {
        if (!b_HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20_) throw std::runtime_error("HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20 branch doesn't exist");
        b_HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20_->GetEntry(index);
        loaded_HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20_ = true;
    }
    return HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20_;
}
const bool &Nano::HLT_AK8DiPFJet250_250_MassSD30() {
    if (!loaded_HLT_AK8DiPFJet250_250_MassSD30_) counter_uncached_HLT_AK8DiPFJet250_250_MassSD30_++;
    else counter_cached_HLT_AK8DiPFJet250_250_MassSD30_++;
    if (!loaded_HLT_AK8DiPFJet250_250_MassSD30_) {
        if (!b_HLT_AK8DiPFJet250_250_MassSD30_) throw std::runtime_error("HLT_AK8DiPFJet250_250_MassSD30 branch doesn't exist");
        b_HLT_AK8DiPFJet250_250_MassSD30_->GetEntry(index);
        loaded_HLT_AK8DiPFJet250_250_MassSD30_ = true;
    }
    return HLT_AK8DiPFJet250_250_MassSD30_;
}
const bool &Nano::HLT_AK8DiPFJet250_250_MassSD50() {
    if (!loaded_HLT_AK8DiPFJet250_250_MassSD50_) counter_uncached_HLT_AK8DiPFJet250_250_MassSD50_++;
    else counter_cached_HLT_AK8DiPFJet250_250_MassSD50_++;
    if (!loaded_HLT_AK8DiPFJet250_250_MassSD50_) {
        if (!b_HLT_AK8DiPFJet250_250_MassSD50_) throw std::runtime_error("HLT_AK8DiPFJet250_250_MassSD50 branch doesn't exist");
        b_HLT_AK8DiPFJet250_250_MassSD50_->GetEntry(index);
        loaded_HLT_AK8DiPFJet250_250_MassSD50_ = true;
    }
    return HLT_AK8DiPFJet250_250_MassSD50_;
}
const bool &Nano::HLT_AK8DiPFJet260_260_MassSD30() {
    if (!loaded_HLT_AK8DiPFJet260_260_MassSD30_) counter_uncached_HLT_AK8DiPFJet260_260_MassSD30_++;
    else counter_cached_HLT_AK8DiPFJet260_260_MassSD30_++;
    if (!loaded_HLT_AK8DiPFJet260_260_MassSD30_) {
        if (!b_HLT_AK8DiPFJet260_260_MassSD30_) throw std::runtime_error("HLT_AK8DiPFJet260_260_MassSD30 branch doesn't exist");
        b_HLT_AK8DiPFJet260_260_MassSD30_->GetEntry(index);
        loaded_HLT_AK8DiPFJet260_260_MassSD30_ = true;
    }
    return HLT_AK8DiPFJet260_260_MassSD30_;
}
const bool &Nano::HLT_AK8DiPFJet270_270_MassSD30() {
    if (!loaded_HLT_AK8DiPFJet270_270_MassSD30_) counter_uncached_HLT_AK8DiPFJet270_270_MassSD30_++;
    else counter_cached_HLT_AK8DiPFJet270_270_MassSD30_++;
    if (!loaded_HLT_AK8DiPFJet270_270_MassSD30_) {
        if (!b_HLT_AK8DiPFJet270_270_MassSD30_) throw std::runtime_error("HLT_AK8DiPFJet270_270_MassSD30 branch doesn't exist");
        b_HLT_AK8DiPFJet270_270_MassSD30_->GetEntry(index);
        loaded_HLT_AK8DiPFJet270_270_MassSD30_ = true;
    }
    return HLT_AK8DiPFJet270_270_MassSD30_;
}
const bool &Nano::HLT_AK8DiPFJet280_200_TrimMass30() {
    if (!loaded_HLT_AK8DiPFJet280_200_TrimMass30_) counter_uncached_HLT_AK8DiPFJet280_200_TrimMass30_++;
    else counter_cached_HLT_AK8DiPFJet280_200_TrimMass30_++;
    if (!loaded_HLT_AK8DiPFJet280_200_TrimMass30_) {
        if (!b_HLT_AK8DiPFJet280_200_TrimMass30_) throw std::runtime_error("HLT_AK8DiPFJet280_200_TrimMass30 branch doesn't exist");
        b_HLT_AK8DiPFJet280_200_TrimMass30_->GetEntry(index);
        loaded_HLT_AK8DiPFJet280_200_TrimMass30_ = true;
    }
    return HLT_AK8DiPFJet280_200_TrimMass30_;
}
const bool &Nano::HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087() {
    if (!loaded_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087_) counter_uncached_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087_++;
    else counter_cached_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087_++;
    if (!loaded_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087_) {
        if (!b_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087_) throw std::runtime_error("HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087 branch doesn't exist");
        b_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087_->GetEntry(index);
        loaded_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087_ = true;
    }
    return HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087_;
}
const bool &Nano::HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20() {
    if (!loaded_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20_) counter_uncached_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20_++;
    else counter_cached_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20_++;
    if (!loaded_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20_) {
        if (!b_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20_) throw std::runtime_error("HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20 branch doesn't exist");
        b_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20_->GetEntry(index);
        loaded_HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20_ = true;
    }
    return HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20_;
}
const bool &Nano::HLT_AK8DiPFJet300_200_TrimMass30() {
    if (!loaded_HLT_AK8DiPFJet300_200_TrimMass30_) counter_uncached_HLT_AK8DiPFJet300_200_TrimMass30_++;
    else counter_cached_HLT_AK8DiPFJet300_200_TrimMass30_++;
    if (!loaded_HLT_AK8DiPFJet300_200_TrimMass30_) {
        if (!b_HLT_AK8DiPFJet300_200_TrimMass30_) throw std::runtime_error("HLT_AK8DiPFJet300_200_TrimMass30 branch doesn't exist");
        b_HLT_AK8DiPFJet300_200_TrimMass30_->GetEntry(index);
        loaded_HLT_AK8DiPFJet300_200_TrimMass30_ = true;
    }
    return HLT_AK8DiPFJet300_200_TrimMass30_;
}
const bool &Nano::HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087() {
    if (!loaded_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087_) counter_uncached_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087_++;
    else counter_cached_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087_++;
    if (!loaded_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087_) {
        if (!b_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087_) throw std::runtime_error("HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087 branch doesn't exist");
        b_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087_->GetEntry(index);
        loaded_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087_ = true;
    }
    return HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087_;
}
const bool &Nano::HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20() {
    if (!loaded_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20_) counter_uncached_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20_++;
    else counter_cached_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20_++;
    if (!loaded_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20_) {
        if (!b_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20_) throw std::runtime_error("HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20 branch doesn't exist");
        b_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20_->GetEntry(index);
        loaded_HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20_ = true;
    }
    return HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20_;
}
const bool &Nano::HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20() {
    if (!loaded_HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20_) counter_uncached_HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20_++;
    else counter_cached_HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20_++;
    if (!loaded_HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20_) {
        if (!b_HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20_) throw std::runtime_error("HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20 branch doesn't exist");
        b_HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20_->GetEntry(index);
        loaded_HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20_ = true;
    }
    return HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20_;
}
const bool &Nano::HLT_AK8PFHT650_TrimR0p1PT0p03Mass50() {
    if (!loaded_HLT_AK8PFHT650_TrimR0p1PT0p03Mass50_) counter_uncached_HLT_AK8PFHT650_TrimR0p1PT0p03Mass50_++;
    else counter_cached_HLT_AK8PFHT650_TrimR0p1PT0p03Mass50_++;
    if (!loaded_HLT_AK8PFHT650_TrimR0p1PT0p03Mass50_) {
        if (!b_HLT_AK8PFHT650_TrimR0p1PT0p03Mass50_) throw std::runtime_error("HLT_AK8PFHT650_TrimR0p1PT0p03Mass50 branch doesn't exist");
        b_HLT_AK8PFHT650_TrimR0p1PT0p03Mass50_->GetEntry(index);
        loaded_HLT_AK8PFHT650_TrimR0p1PT0p03Mass50_ = true;
    }
    return HLT_AK8PFHT650_TrimR0p1PT0p03Mass50_;
}
const bool &Nano::HLT_AK8PFHT700_TrimR0p1PT0p03Mass50() {
    if (!loaded_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_) counter_uncached_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_++;
    else counter_cached_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_++;
    if (!loaded_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_) {
        if (!b_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_) throw std::runtime_error("HLT_AK8PFHT700_TrimR0p1PT0p03Mass50 branch doesn't exist");
        b_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_->GetEntry(index);
        loaded_HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_ = true;
    }
    return HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_;
}
const bool &Nano::HLT_AK8PFHT750_TrimMass50() {
    if (!loaded_HLT_AK8PFHT750_TrimMass50_) counter_uncached_HLT_AK8PFHT750_TrimMass50_++;
    else counter_cached_HLT_AK8PFHT750_TrimMass50_++;
    if (!loaded_HLT_AK8PFHT750_TrimMass50_) {
        if (!b_HLT_AK8PFHT750_TrimMass50_) throw std::runtime_error("HLT_AK8PFHT750_TrimMass50 branch doesn't exist");
        b_HLT_AK8PFHT750_TrimMass50_->GetEntry(index);
        loaded_HLT_AK8PFHT750_TrimMass50_ = true;
    }
    return HLT_AK8PFHT750_TrimMass50_;
}
const bool &Nano::HLT_AK8PFHT800_TrimMass50() {
    if (!loaded_HLT_AK8PFHT800_TrimMass50_) counter_uncached_HLT_AK8PFHT800_TrimMass50_++;
    else counter_cached_HLT_AK8PFHT800_TrimMass50_++;
    if (!loaded_HLT_AK8PFHT800_TrimMass50_) {
        if (!b_HLT_AK8PFHT800_TrimMass50_) throw std::runtime_error("HLT_AK8PFHT800_TrimMass50 branch doesn't exist");
        b_HLT_AK8PFHT800_TrimMass50_->GetEntry(index);
        loaded_HLT_AK8PFHT800_TrimMass50_ = true;
    }
    return HLT_AK8PFHT800_TrimMass50_;
}
const bool &Nano::HLT_AK8PFHT850_TrimMass50() {
    if (!loaded_HLT_AK8PFHT850_TrimMass50_) counter_uncached_HLT_AK8PFHT850_TrimMass50_++;
    else counter_cached_HLT_AK8PFHT850_TrimMass50_++;
    if (!loaded_HLT_AK8PFHT850_TrimMass50_) {
        if (!b_HLT_AK8PFHT850_TrimMass50_) throw std::runtime_error("HLT_AK8PFHT850_TrimMass50 branch doesn't exist");
        b_HLT_AK8PFHT850_TrimMass50_->GetEntry(index);
        loaded_HLT_AK8PFHT850_TrimMass50_ = true;
    }
    return HLT_AK8PFHT850_TrimMass50_;
}
const bool &Nano::HLT_AK8PFHT900_TrimMass50() {
    if (!loaded_HLT_AK8PFHT900_TrimMass50_) counter_uncached_HLT_AK8PFHT900_TrimMass50_++;
    else counter_cached_HLT_AK8PFHT900_TrimMass50_++;
    if (!loaded_HLT_AK8PFHT900_TrimMass50_) {
        if (!b_HLT_AK8PFHT900_TrimMass50_) throw std::runtime_error("HLT_AK8PFHT900_TrimMass50 branch doesn't exist");
        b_HLT_AK8PFHT900_TrimMass50_->GetEntry(index);
        loaded_HLT_AK8PFHT900_TrimMass50_ = true;
    }
    return HLT_AK8PFHT900_TrimMass50_;
}
const bool &Nano::HLT_AK8PFJet140() {
    if (!loaded_HLT_AK8PFJet140_) counter_uncached_HLT_AK8PFJet140_++;
    else counter_cached_HLT_AK8PFJet140_++;
    if (!loaded_HLT_AK8PFJet140_) {
        if (!b_HLT_AK8PFJet140_) throw std::runtime_error("HLT_AK8PFJet140 branch doesn't exist");
        b_HLT_AK8PFJet140_->GetEntry(index);
        loaded_HLT_AK8PFJet140_ = true;
    }
    return HLT_AK8PFJet140_;
}
const bool &Nano::HLT_AK8PFJet15() {
    if (!loaded_HLT_AK8PFJet15_) counter_uncached_HLT_AK8PFJet15_++;
    else counter_cached_HLT_AK8PFJet15_++;
    if (!loaded_HLT_AK8PFJet15_) {
        if (!b_HLT_AK8PFJet15_) throw std::runtime_error("HLT_AK8PFJet15 branch doesn't exist");
        b_HLT_AK8PFJet15_->GetEntry(index);
        loaded_HLT_AK8PFJet15_ = true;
    }
    return HLT_AK8PFJet15_;
}
const bool &Nano::HLT_AK8PFJet200() {
    if (!loaded_HLT_AK8PFJet200_) counter_uncached_HLT_AK8PFJet200_++;
    else counter_cached_HLT_AK8PFJet200_++;
    if (!loaded_HLT_AK8PFJet200_) {
        if (!b_HLT_AK8PFJet200_) throw std::runtime_error("HLT_AK8PFJet200 branch doesn't exist");
        b_HLT_AK8PFJet200_->GetEntry(index);
        loaded_HLT_AK8PFJet200_ = true;
    }
    return HLT_AK8PFJet200_;
}
const bool &Nano::HLT_AK8PFJet230_SoftDropMass40() {
    if (!loaded_HLT_AK8PFJet230_SoftDropMass40_) counter_uncached_HLT_AK8PFJet230_SoftDropMass40_++;
    else counter_cached_HLT_AK8PFJet230_SoftDropMass40_++;
    if (!loaded_HLT_AK8PFJet230_SoftDropMass40_) {
        if (!b_HLT_AK8PFJet230_SoftDropMass40_) throw std::runtime_error("HLT_AK8PFJet230_SoftDropMass40 branch doesn't exist");
        b_HLT_AK8PFJet230_SoftDropMass40_->GetEntry(index);
        loaded_HLT_AK8PFJet230_SoftDropMass40_ = true;
    }
    return HLT_AK8PFJet230_SoftDropMass40_;
}
const bool &Nano::HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35() {
    if (!loaded_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_) counter_uncached_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_++;
    else counter_cached_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_++;
    if (!loaded_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_) {
        if (!b_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_) throw std::runtime_error("HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35 branch doesn't exist");
        b_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_->GetEntry(index);
        loaded_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_ = true;
    }
    return HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_;
}
const bool &Nano::HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30() {
    if (!loaded_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_) counter_uncached_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_++;
    else counter_cached_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_++;
    if (!loaded_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_) {
        if (!b_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_) throw std::runtime_error("HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30 branch doesn't exist");
        b_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_->GetEntry(index);
        loaded_HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_ = true;
    }
    return HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_;
}
const bool &Nano::HLT_AK8PFJet25() {
    if (!loaded_HLT_AK8PFJet25_) counter_uncached_HLT_AK8PFJet25_++;
    else counter_cached_HLT_AK8PFJet25_++;
    if (!loaded_HLT_AK8PFJet25_) {
        if (!b_HLT_AK8PFJet25_) throw std::runtime_error("HLT_AK8PFJet25 branch doesn't exist");
        b_HLT_AK8PFJet25_->GetEntry(index);
        loaded_HLT_AK8PFJet25_ = true;
    }
    return HLT_AK8PFJet25_;
}
const bool &Nano::HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35() {
    if (!loaded_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_) counter_uncached_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_++;
    else counter_cached_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_++;
    if (!loaded_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_) {
        if (!b_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_) throw std::runtime_error("HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35 branch doesn't exist");
        b_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_->GetEntry(index);
        loaded_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_ = true;
    }
    return HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_;
}
const bool &Nano::HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30() {
    if (!loaded_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_) counter_uncached_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_++;
    else counter_cached_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_++;
    if (!loaded_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_) {
        if (!b_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_) throw std::runtime_error("HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30 branch doesn't exist");
        b_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_->GetEntry(index);
        loaded_HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_ = true;
    }
    return HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_;
}
const bool &Nano::HLT_AK8PFJet260() {
    if (!loaded_HLT_AK8PFJet260_) counter_uncached_HLT_AK8PFJet260_++;
    else counter_cached_HLT_AK8PFJet260_++;
    if (!loaded_HLT_AK8PFJet260_) {
        if (!b_HLT_AK8PFJet260_) throw std::runtime_error("HLT_AK8PFJet260 branch doesn't exist");
        b_HLT_AK8PFJet260_->GetEntry(index);
        loaded_HLT_AK8PFJet260_ = true;
    }
    return HLT_AK8PFJet260_;
}
const bool &Nano::HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35() {
    if (!loaded_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_) counter_uncached_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_++;
    else counter_cached_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_++;
    if (!loaded_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_) {
        if (!b_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_) throw std::runtime_error("HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35 branch doesn't exist");
        b_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_->GetEntry(index);
        loaded_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_ = true;
    }
    return HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_;
}
const bool &Nano::HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30() {
    if (!loaded_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_) counter_uncached_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_++;
    else counter_cached_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_++;
    if (!loaded_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_) {
        if (!b_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_) throw std::runtime_error("HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30 branch doesn't exist");
        b_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_->GetEntry(index);
        loaded_HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_ = true;
    }
    return HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_;
}
const bool &Nano::HLT_AK8PFJet320() {
    if (!loaded_HLT_AK8PFJet320_) counter_uncached_HLT_AK8PFJet320_++;
    else counter_cached_HLT_AK8PFJet320_++;
    if (!loaded_HLT_AK8PFJet320_) {
        if (!b_HLT_AK8PFJet320_) throw std::runtime_error("HLT_AK8PFJet320 branch doesn't exist");
        b_HLT_AK8PFJet320_->GetEntry(index);
        loaded_HLT_AK8PFJet320_ = true;
    }
    return HLT_AK8PFJet320_;
}
const bool &Nano::HLT_AK8PFJet330_PFAK8BTagCSV_p1() {
    if (!loaded_HLT_AK8PFJet330_PFAK8BTagCSV_p1_) counter_uncached_HLT_AK8PFJet330_PFAK8BTagCSV_p1_++;
    else counter_cached_HLT_AK8PFJet330_PFAK8BTagCSV_p1_++;
    if (!loaded_HLT_AK8PFJet330_PFAK8BTagCSV_p1_) {
        if (!b_HLT_AK8PFJet330_PFAK8BTagCSV_p1_) throw std::runtime_error("HLT_AK8PFJet330_PFAK8BTagCSV_p1 branch doesn't exist");
        b_HLT_AK8PFJet330_PFAK8BTagCSV_p1_->GetEntry(index);
        loaded_HLT_AK8PFJet330_PFAK8BTagCSV_p1_ = true;
    }
    return HLT_AK8PFJet330_PFAK8BTagCSV_p1_;
}
const bool &Nano::HLT_AK8PFJet330_PFAK8BTagCSV_p17() {
    if (!loaded_HLT_AK8PFJet330_PFAK8BTagCSV_p17_) counter_uncached_HLT_AK8PFJet330_PFAK8BTagCSV_p17_++;
    else counter_cached_HLT_AK8PFJet330_PFAK8BTagCSV_p17_++;
    if (!loaded_HLT_AK8PFJet330_PFAK8BTagCSV_p17_) {
        if (!b_HLT_AK8PFJet330_PFAK8BTagCSV_p17_) throw std::runtime_error("HLT_AK8PFJet330_PFAK8BTagCSV_p17 branch doesn't exist");
        b_HLT_AK8PFJet330_PFAK8BTagCSV_p17_->GetEntry(index);
        loaded_HLT_AK8PFJet330_PFAK8BTagCSV_p17_ = true;
    }
    return HLT_AK8PFJet330_PFAK8BTagCSV_p17_;
}
const bool &Nano::HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1() {
    if (!loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1_) counter_uncached_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1_++;
    else counter_cached_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1_++;
    if (!loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1_) {
        if (!b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1_) throw std::runtime_error("HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1 branch doesn't exist");
        b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1_->GetEntry(index);
        loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1_ = true;
    }
    return HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1_;
}
const bool &Nano::HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17() {
    if (!loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17_) counter_uncached_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17_++;
    else counter_cached_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17_++;
    if (!loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17_) {
        if (!b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17_) throw std::runtime_error("HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17 branch doesn't exist");
        b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17_->GetEntry(index);
        loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17_ = true;
    }
    return HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17_;
}
const bool &Nano::HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1() {
    if (!loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_) counter_uncached_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_++;
    else counter_cached_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_++;
    if (!loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_) {
        if (!b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_) throw std::runtime_error("HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1 branch doesn't exist");
        b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_->GetEntry(index);
        loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_ = true;
    }
    return HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_;
}
const bool &Nano::HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17() {
    if (!loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_) counter_uncached_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_++;
    else counter_cached_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_++;
    if (!loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_) {
        if (!b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_) throw std::runtime_error("HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17 branch doesn't exist");
        b_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_->GetEntry(index);
        loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_ = true;
    }
    return HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_;
}
const bool &Nano::HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2() {
    if (!loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_) counter_uncached_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_++;
    else counter_cached_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_++;
    if (!loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_) {
        if (!b_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_) throw std::runtime_error("HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2 branch doesn't exist");
        b_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_->GetEntry(index);
        loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_ = true;
    }
    return HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_;
}
const bool &Nano::HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4() {
    if (!loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_) counter_uncached_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_++;
    else counter_cached_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_++;
    if (!loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_) {
        if (!b_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_) throw std::runtime_error("HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4 branch doesn't exist");
        b_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_->GetEntry(index);
        loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_ = true;
    }
    return HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_;
}
const bool &Nano::HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02() {
    if (!loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_) counter_uncached_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_++;
    else counter_cached_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_++;
    if (!loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_) {
        if (!b_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_) throw std::runtime_error("HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02 branch doesn't exist");
        b_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_->GetEntry(index);
        loaded_HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_ = true;
    }
    return HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_;
}
const bool &Nano::HLT_AK8PFJet360_TrimMass30() {
    if (!loaded_HLT_AK8PFJet360_TrimMass30_) counter_uncached_HLT_AK8PFJet360_TrimMass30_++;
    else counter_cached_HLT_AK8PFJet360_TrimMass30_++;
    if (!loaded_HLT_AK8PFJet360_TrimMass30_) {
        if (!b_HLT_AK8PFJet360_TrimMass30_) throw std::runtime_error("HLT_AK8PFJet360_TrimMass30 branch doesn't exist");
        b_HLT_AK8PFJet360_TrimMass30_->GetEntry(index);
        loaded_HLT_AK8PFJet360_TrimMass30_ = true;
    }
    return HLT_AK8PFJet360_TrimMass30_;
}
const bool &Nano::HLT_AK8PFJet380_TrimMass30() {
    if (!loaded_HLT_AK8PFJet380_TrimMass30_) counter_uncached_HLT_AK8PFJet380_TrimMass30_++;
    else counter_cached_HLT_AK8PFJet380_TrimMass30_++;
    if (!loaded_HLT_AK8PFJet380_TrimMass30_) {
        if (!b_HLT_AK8PFJet380_TrimMass30_) throw std::runtime_error("HLT_AK8PFJet380_TrimMass30 branch doesn't exist");
        b_HLT_AK8PFJet380_TrimMass30_->GetEntry(index);
        loaded_HLT_AK8PFJet380_TrimMass30_ = true;
    }
    return HLT_AK8PFJet380_TrimMass30_;
}
const bool &Nano::HLT_AK8PFJet40() {
    if (!loaded_HLT_AK8PFJet40_) counter_uncached_HLT_AK8PFJet40_++;
    else counter_cached_HLT_AK8PFJet40_++;
    if (!loaded_HLT_AK8PFJet40_) {
        if (!b_HLT_AK8PFJet40_) throw std::runtime_error("HLT_AK8PFJet40 branch doesn't exist");
        b_HLT_AK8PFJet40_->GetEntry(index);
        loaded_HLT_AK8PFJet40_ = true;
    }
    return HLT_AK8PFJet40_;
}
const bool &Nano::HLT_AK8PFJet400() {
    if (!loaded_HLT_AK8PFJet400_) counter_uncached_HLT_AK8PFJet400_++;
    else counter_cached_HLT_AK8PFJet400_++;
    if (!loaded_HLT_AK8PFJet400_) {
        if (!b_HLT_AK8PFJet400_) throw std::runtime_error("HLT_AK8PFJet400 branch doesn't exist");
        b_HLT_AK8PFJet400_->GetEntry(index);
        loaded_HLT_AK8PFJet400_ = true;
    }
    return HLT_AK8PFJet400_;
}
const bool &Nano::HLT_AK8PFJet400_MassSD30() {
    if (!loaded_HLT_AK8PFJet400_MassSD30_) counter_uncached_HLT_AK8PFJet400_MassSD30_++;
    else counter_cached_HLT_AK8PFJet400_MassSD30_++;
    if (!loaded_HLT_AK8PFJet400_MassSD30_) {
        if (!b_HLT_AK8PFJet400_MassSD30_) throw std::runtime_error("HLT_AK8PFJet400_MassSD30 branch doesn't exist");
        b_HLT_AK8PFJet400_MassSD30_->GetEntry(index);
        loaded_HLT_AK8PFJet400_MassSD30_ = true;
    }
    return HLT_AK8PFJet400_MassSD30_;
}
const bool &Nano::HLT_AK8PFJet400_SoftDropMass40() {
    if (!loaded_HLT_AK8PFJet400_SoftDropMass40_) counter_uncached_HLT_AK8PFJet400_SoftDropMass40_++;
    else counter_cached_HLT_AK8PFJet400_SoftDropMass40_++;
    if (!loaded_HLT_AK8PFJet400_SoftDropMass40_) {
        if (!b_HLT_AK8PFJet400_SoftDropMass40_) throw std::runtime_error("HLT_AK8PFJet400_SoftDropMass40 branch doesn't exist");
        b_HLT_AK8PFJet400_SoftDropMass40_->GetEntry(index);
        loaded_HLT_AK8PFJet400_SoftDropMass40_ = true;
    }
    return HLT_AK8PFJet400_SoftDropMass40_;
}
const bool &Nano::HLT_AK8PFJet400_TrimMass30() {
    if (!loaded_HLT_AK8PFJet400_TrimMass30_) counter_uncached_HLT_AK8PFJet400_TrimMass30_++;
    else counter_cached_HLT_AK8PFJet400_TrimMass30_++;
    if (!loaded_HLT_AK8PFJet400_TrimMass30_) {
        if (!b_HLT_AK8PFJet400_TrimMass30_) throw std::runtime_error("HLT_AK8PFJet400_TrimMass30 branch doesn't exist");
        b_HLT_AK8PFJet400_TrimMass30_->GetEntry(index);
        loaded_HLT_AK8PFJet400_TrimMass30_ = true;
    }
    return HLT_AK8PFJet400_TrimMass30_;
}
const bool &Nano::HLT_AK8PFJet420_MassSD30() {
    if (!loaded_HLT_AK8PFJet420_MassSD30_) counter_uncached_HLT_AK8PFJet420_MassSD30_++;
    else counter_cached_HLT_AK8PFJet420_MassSD30_++;
    if (!loaded_HLT_AK8PFJet420_MassSD30_) {
        if (!b_HLT_AK8PFJet420_MassSD30_) throw std::runtime_error("HLT_AK8PFJet420_MassSD30 branch doesn't exist");
        b_HLT_AK8PFJet420_MassSD30_->GetEntry(index);
        loaded_HLT_AK8PFJet420_MassSD30_ = true;
    }
    return HLT_AK8PFJet420_MassSD30_;
}
const bool &Nano::HLT_AK8PFJet420_TrimMass30() {
    if (!loaded_HLT_AK8PFJet420_TrimMass30_) counter_uncached_HLT_AK8PFJet420_TrimMass30_++;
    else counter_cached_HLT_AK8PFJet420_TrimMass30_++;
    if (!loaded_HLT_AK8PFJet420_TrimMass30_) {
        if (!b_HLT_AK8PFJet420_TrimMass30_) throw std::runtime_error("HLT_AK8PFJet420_TrimMass30 branch doesn't exist");
        b_HLT_AK8PFJet420_TrimMass30_->GetEntry(index);
        loaded_HLT_AK8PFJet420_TrimMass30_ = true;
    }
    return HLT_AK8PFJet420_TrimMass30_;
}
const bool &Nano::HLT_AK8PFJet425_SoftDropMass40() {
    if (!loaded_HLT_AK8PFJet425_SoftDropMass40_) counter_uncached_HLT_AK8PFJet425_SoftDropMass40_++;
    else counter_cached_HLT_AK8PFJet425_SoftDropMass40_++;
    if (!loaded_HLT_AK8PFJet425_SoftDropMass40_) {
        if (!b_HLT_AK8PFJet425_SoftDropMass40_) throw std::runtime_error("HLT_AK8PFJet425_SoftDropMass40 branch doesn't exist");
        b_HLT_AK8PFJet425_SoftDropMass40_->GetEntry(index);
        loaded_HLT_AK8PFJet425_SoftDropMass40_ = true;
    }
    return HLT_AK8PFJet425_SoftDropMass40_;
}
const bool &Nano::HLT_AK8PFJet450() {
    if (!loaded_HLT_AK8PFJet450_) counter_uncached_HLT_AK8PFJet450_++;
    else counter_cached_HLT_AK8PFJet450_++;
    if (!loaded_HLT_AK8PFJet450_) {
        if (!b_HLT_AK8PFJet450_) throw std::runtime_error("HLT_AK8PFJet450 branch doesn't exist");
        b_HLT_AK8PFJet450_->GetEntry(index);
        loaded_HLT_AK8PFJet450_ = true;
    }
    return HLT_AK8PFJet450_;
}
const bool &Nano::HLT_AK8PFJet450_MassSD30() {
    if (!loaded_HLT_AK8PFJet450_MassSD30_) counter_uncached_HLT_AK8PFJet450_MassSD30_++;
    else counter_cached_HLT_AK8PFJet450_MassSD30_++;
    if (!loaded_HLT_AK8PFJet450_MassSD30_) {
        if (!b_HLT_AK8PFJet450_MassSD30_) throw std::runtime_error("HLT_AK8PFJet450_MassSD30 branch doesn't exist");
        b_HLT_AK8PFJet450_MassSD30_->GetEntry(index);
        loaded_HLT_AK8PFJet450_MassSD30_ = true;
    }
    return HLT_AK8PFJet450_MassSD30_;
}
const bool &Nano::HLT_AK8PFJet450_SoftDropMass40() {
    if (!loaded_HLT_AK8PFJet450_SoftDropMass40_) counter_uncached_HLT_AK8PFJet450_SoftDropMass40_++;
    else counter_cached_HLT_AK8PFJet450_SoftDropMass40_++;
    if (!loaded_HLT_AK8PFJet450_SoftDropMass40_) {
        if (!b_HLT_AK8PFJet450_SoftDropMass40_) throw std::runtime_error("HLT_AK8PFJet450_SoftDropMass40 branch doesn't exist");
        b_HLT_AK8PFJet450_SoftDropMass40_->GetEntry(index);
        loaded_HLT_AK8PFJet450_SoftDropMass40_ = true;
    }
    return HLT_AK8PFJet450_SoftDropMass40_;
}
const bool &Nano::HLT_AK8PFJet500() {
    if (!loaded_HLT_AK8PFJet500_) counter_uncached_HLT_AK8PFJet500_++;
    else counter_cached_HLT_AK8PFJet500_++;
    if (!loaded_HLT_AK8PFJet500_) {
        if (!b_HLT_AK8PFJet500_) throw std::runtime_error("HLT_AK8PFJet500 branch doesn't exist");
        b_HLT_AK8PFJet500_->GetEntry(index);
        loaded_HLT_AK8PFJet500_ = true;
    }
    return HLT_AK8PFJet500_;
}
const bool &Nano::HLT_AK8PFJet550() {
    if (!loaded_HLT_AK8PFJet550_) counter_uncached_HLT_AK8PFJet550_++;
    else counter_cached_HLT_AK8PFJet550_++;
    if (!loaded_HLT_AK8PFJet550_) {
        if (!b_HLT_AK8PFJet550_) throw std::runtime_error("HLT_AK8PFJet550 branch doesn't exist");
        b_HLT_AK8PFJet550_->GetEntry(index);
        loaded_HLT_AK8PFJet550_ = true;
    }
    return HLT_AK8PFJet550_;
}
const bool &Nano::HLT_AK8PFJet60() {
    if (!loaded_HLT_AK8PFJet60_) counter_uncached_HLT_AK8PFJet60_++;
    else counter_cached_HLT_AK8PFJet60_++;
    if (!loaded_HLT_AK8PFJet60_) {
        if (!b_HLT_AK8PFJet60_) throw std::runtime_error("HLT_AK8PFJet60 branch doesn't exist");
        b_HLT_AK8PFJet60_->GetEntry(index);
        loaded_HLT_AK8PFJet60_ = true;
    }
    return HLT_AK8PFJet60_;
}
const bool &Nano::HLT_AK8PFJet80() {
    if (!loaded_HLT_AK8PFJet80_) counter_uncached_HLT_AK8PFJet80_++;
    else counter_cached_HLT_AK8PFJet80_++;
    if (!loaded_HLT_AK8PFJet80_) {
        if (!b_HLT_AK8PFJet80_) throw std::runtime_error("HLT_AK8PFJet80 branch doesn't exist");
        b_HLT_AK8PFJet80_->GetEntry(index);
        loaded_HLT_AK8PFJet80_ = true;
    }
    return HLT_AK8PFJet80_;
}
const bool &Nano::HLT_AK8PFJetFwd140() {
    if (!loaded_HLT_AK8PFJetFwd140_) counter_uncached_HLT_AK8PFJetFwd140_++;
    else counter_cached_HLT_AK8PFJetFwd140_++;
    if (!loaded_HLT_AK8PFJetFwd140_) {
        if (!b_HLT_AK8PFJetFwd140_) throw std::runtime_error("HLT_AK8PFJetFwd140 branch doesn't exist");
        b_HLT_AK8PFJetFwd140_->GetEntry(index);
        loaded_HLT_AK8PFJetFwd140_ = true;
    }
    return HLT_AK8PFJetFwd140_;
}
const bool &Nano::HLT_AK8PFJetFwd15() {
    if (!loaded_HLT_AK8PFJetFwd15_) counter_uncached_HLT_AK8PFJetFwd15_++;
    else counter_cached_HLT_AK8PFJetFwd15_++;
    if (!loaded_HLT_AK8PFJetFwd15_) {
        if (!b_HLT_AK8PFJetFwd15_) throw std::runtime_error("HLT_AK8PFJetFwd15 branch doesn't exist");
        b_HLT_AK8PFJetFwd15_->GetEntry(index);
        loaded_HLT_AK8PFJetFwd15_ = true;
    }
    return HLT_AK8PFJetFwd15_;
}
const bool &Nano::HLT_AK8PFJetFwd200() {
    if (!loaded_HLT_AK8PFJetFwd200_) counter_uncached_HLT_AK8PFJetFwd200_++;
    else counter_cached_HLT_AK8PFJetFwd200_++;
    if (!loaded_HLT_AK8PFJetFwd200_) {
        if (!b_HLT_AK8PFJetFwd200_) throw std::runtime_error("HLT_AK8PFJetFwd200 branch doesn't exist");
        b_HLT_AK8PFJetFwd200_->GetEntry(index);
        loaded_HLT_AK8PFJetFwd200_ = true;
    }
    return HLT_AK8PFJetFwd200_;
}
const bool &Nano::HLT_AK8PFJetFwd25() {
    if (!loaded_HLT_AK8PFJetFwd25_) counter_uncached_HLT_AK8PFJetFwd25_++;
    else counter_cached_HLT_AK8PFJetFwd25_++;
    if (!loaded_HLT_AK8PFJetFwd25_) {
        if (!b_HLT_AK8PFJetFwd25_) throw std::runtime_error("HLT_AK8PFJetFwd25 branch doesn't exist");
        b_HLT_AK8PFJetFwd25_->GetEntry(index);
        loaded_HLT_AK8PFJetFwd25_ = true;
    }
    return HLT_AK8PFJetFwd25_;
}
const bool &Nano::HLT_AK8PFJetFwd260() {
    if (!loaded_HLT_AK8PFJetFwd260_) counter_uncached_HLT_AK8PFJetFwd260_++;
    else counter_cached_HLT_AK8PFJetFwd260_++;
    if (!loaded_HLT_AK8PFJetFwd260_) {
        if (!b_HLT_AK8PFJetFwd260_) throw std::runtime_error("HLT_AK8PFJetFwd260 branch doesn't exist");
        b_HLT_AK8PFJetFwd260_->GetEntry(index);
        loaded_HLT_AK8PFJetFwd260_ = true;
    }
    return HLT_AK8PFJetFwd260_;
}
const bool &Nano::HLT_AK8PFJetFwd320() {
    if (!loaded_HLT_AK8PFJetFwd320_) counter_uncached_HLT_AK8PFJetFwd320_++;
    else counter_cached_HLT_AK8PFJetFwd320_++;
    if (!loaded_HLT_AK8PFJetFwd320_) {
        if (!b_HLT_AK8PFJetFwd320_) throw std::runtime_error("HLT_AK8PFJetFwd320 branch doesn't exist");
        b_HLT_AK8PFJetFwd320_->GetEntry(index);
        loaded_HLT_AK8PFJetFwd320_ = true;
    }
    return HLT_AK8PFJetFwd320_;
}
const bool &Nano::HLT_AK8PFJetFwd40() {
    if (!loaded_HLT_AK8PFJetFwd40_) counter_uncached_HLT_AK8PFJetFwd40_++;
    else counter_cached_HLT_AK8PFJetFwd40_++;
    if (!loaded_HLT_AK8PFJetFwd40_) {
        if (!b_HLT_AK8PFJetFwd40_) throw std::runtime_error("HLT_AK8PFJetFwd40 branch doesn't exist");
        b_HLT_AK8PFJetFwd40_->GetEntry(index);
        loaded_HLT_AK8PFJetFwd40_ = true;
    }
    return HLT_AK8PFJetFwd40_;
}
const bool &Nano::HLT_AK8PFJetFwd400() {
    if (!loaded_HLT_AK8PFJetFwd400_) counter_uncached_HLT_AK8PFJetFwd400_++;
    else counter_cached_HLT_AK8PFJetFwd400_++;
    if (!loaded_HLT_AK8PFJetFwd400_) {
        if (!b_HLT_AK8PFJetFwd400_) throw std::runtime_error("HLT_AK8PFJetFwd400 branch doesn't exist");
        b_HLT_AK8PFJetFwd400_->GetEntry(index);
        loaded_HLT_AK8PFJetFwd400_ = true;
    }
    return HLT_AK8PFJetFwd400_;
}
const bool &Nano::HLT_AK8PFJetFwd450() {
    if (!loaded_HLT_AK8PFJetFwd450_) counter_uncached_HLT_AK8PFJetFwd450_++;
    else counter_cached_HLT_AK8PFJetFwd450_++;
    if (!loaded_HLT_AK8PFJetFwd450_) {
        if (!b_HLT_AK8PFJetFwd450_) throw std::runtime_error("HLT_AK8PFJetFwd450 branch doesn't exist");
        b_HLT_AK8PFJetFwd450_->GetEntry(index);
        loaded_HLT_AK8PFJetFwd450_ = true;
    }
    return HLT_AK8PFJetFwd450_;
}
const bool &Nano::HLT_AK8PFJetFwd500() {
    if (!loaded_HLT_AK8PFJetFwd500_) counter_uncached_HLT_AK8PFJetFwd500_++;
    else counter_cached_HLT_AK8PFJetFwd500_++;
    if (!loaded_HLT_AK8PFJetFwd500_) {
        if (!b_HLT_AK8PFJetFwd500_) throw std::runtime_error("HLT_AK8PFJetFwd500 branch doesn't exist");
        b_HLT_AK8PFJetFwd500_->GetEntry(index);
        loaded_HLT_AK8PFJetFwd500_ = true;
    }
    return HLT_AK8PFJetFwd500_;
}
const bool &Nano::HLT_AK8PFJetFwd60() {
    if (!loaded_HLT_AK8PFJetFwd60_) counter_uncached_HLT_AK8PFJetFwd60_++;
    else counter_cached_HLT_AK8PFJetFwd60_++;
    if (!loaded_HLT_AK8PFJetFwd60_) {
        if (!b_HLT_AK8PFJetFwd60_) throw std::runtime_error("HLT_AK8PFJetFwd60 branch doesn't exist");
        b_HLT_AK8PFJetFwd60_->GetEntry(index);
        loaded_HLT_AK8PFJetFwd60_ = true;
    }
    return HLT_AK8PFJetFwd60_;
}
const bool &Nano::HLT_AK8PFJetFwd80() {
    if (!loaded_HLT_AK8PFJetFwd80_) counter_uncached_HLT_AK8PFJetFwd80_++;
    else counter_cached_HLT_AK8PFJetFwd80_++;
    if (!loaded_HLT_AK8PFJetFwd80_) {
        if (!b_HLT_AK8PFJetFwd80_) throw std::runtime_error("HLT_AK8PFJetFwd80 branch doesn't exist");
        b_HLT_AK8PFJetFwd80_->GetEntry(index);
        loaded_HLT_AK8PFJetFwd80_ = true;
    }
    return HLT_AK8PFJetFwd80_;
}
const bool &Nano::HLT_BTagMu_AK4DiJet110_Mu5() {
    if (!loaded_HLT_BTagMu_AK4DiJet110_Mu5_) counter_uncached_HLT_BTagMu_AK4DiJet110_Mu5_++;
    else counter_cached_HLT_BTagMu_AK4DiJet110_Mu5_++;
    if (!loaded_HLT_BTagMu_AK4DiJet110_Mu5_) {
        if (!b_HLT_BTagMu_AK4DiJet110_Mu5_) throw std::runtime_error("HLT_BTagMu_AK4DiJet110_Mu5 branch doesn't exist");
        b_HLT_BTagMu_AK4DiJet110_Mu5_->GetEntry(index);
        loaded_HLT_BTagMu_AK4DiJet110_Mu5_ = true;
    }
    return HLT_BTagMu_AK4DiJet110_Mu5_;
}
const bool &Nano::HLT_BTagMu_AK4DiJet110_Mu5_noalgo() {
    if (!loaded_HLT_BTagMu_AK4DiJet110_Mu5_noalgo_) counter_uncached_HLT_BTagMu_AK4DiJet110_Mu5_noalgo_++;
    else counter_cached_HLT_BTagMu_AK4DiJet110_Mu5_noalgo_++;
    if (!loaded_HLT_BTagMu_AK4DiJet110_Mu5_noalgo_) {
        if (!b_HLT_BTagMu_AK4DiJet110_Mu5_noalgo_) throw std::runtime_error("HLT_BTagMu_AK4DiJet110_Mu5_noalgo branch doesn't exist");
        b_HLT_BTagMu_AK4DiJet110_Mu5_noalgo_->GetEntry(index);
        loaded_HLT_BTagMu_AK4DiJet110_Mu5_noalgo_ = true;
    }
    return HLT_BTagMu_AK4DiJet110_Mu5_noalgo_;
}
const bool &Nano::HLT_BTagMu_AK4DiJet170_Mu5() {
    if (!loaded_HLT_BTagMu_AK4DiJet170_Mu5_) counter_uncached_HLT_BTagMu_AK4DiJet170_Mu5_++;
    else counter_cached_HLT_BTagMu_AK4DiJet170_Mu5_++;
    if (!loaded_HLT_BTagMu_AK4DiJet170_Mu5_) {
        if (!b_HLT_BTagMu_AK4DiJet170_Mu5_) throw std::runtime_error("HLT_BTagMu_AK4DiJet170_Mu5 branch doesn't exist");
        b_HLT_BTagMu_AK4DiJet170_Mu5_->GetEntry(index);
        loaded_HLT_BTagMu_AK4DiJet170_Mu5_ = true;
    }
    return HLT_BTagMu_AK4DiJet170_Mu5_;
}
const bool &Nano::HLT_BTagMu_AK4DiJet170_Mu5_noalgo() {
    if (!loaded_HLT_BTagMu_AK4DiJet170_Mu5_noalgo_) counter_uncached_HLT_BTagMu_AK4DiJet170_Mu5_noalgo_++;
    else counter_cached_HLT_BTagMu_AK4DiJet170_Mu5_noalgo_++;
    if (!loaded_HLT_BTagMu_AK4DiJet170_Mu5_noalgo_) {
        if (!b_HLT_BTagMu_AK4DiJet170_Mu5_noalgo_) throw std::runtime_error("HLT_BTagMu_AK4DiJet170_Mu5_noalgo branch doesn't exist");
        b_HLT_BTagMu_AK4DiJet170_Mu5_noalgo_->GetEntry(index);
        loaded_HLT_BTagMu_AK4DiJet170_Mu5_noalgo_ = true;
    }
    return HLT_BTagMu_AK4DiJet170_Mu5_noalgo_;
}
const bool &Nano::HLT_BTagMu_AK4DiJet20_Mu5() {
    if (!loaded_HLT_BTagMu_AK4DiJet20_Mu5_) counter_uncached_HLT_BTagMu_AK4DiJet20_Mu5_++;
    else counter_cached_HLT_BTagMu_AK4DiJet20_Mu5_++;
    if (!loaded_HLT_BTagMu_AK4DiJet20_Mu5_) {
        if (!b_HLT_BTagMu_AK4DiJet20_Mu5_) throw std::runtime_error("HLT_BTagMu_AK4DiJet20_Mu5 branch doesn't exist");
        b_HLT_BTagMu_AK4DiJet20_Mu5_->GetEntry(index);
        loaded_HLT_BTagMu_AK4DiJet20_Mu5_ = true;
    }
    return HLT_BTagMu_AK4DiJet20_Mu5_;
}
const bool &Nano::HLT_BTagMu_AK4DiJet20_Mu5_noalgo() {
    if (!loaded_HLT_BTagMu_AK4DiJet20_Mu5_noalgo_) counter_uncached_HLT_BTagMu_AK4DiJet20_Mu5_noalgo_++;
    else counter_cached_HLT_BTagMu_AK4DiJet20_Mu5_noalgo_++;
    if (!loaded_HLT_BTagMu_AK4DiJet20_Mu5_noalgo_) {
        if (!b_HLT_BTagMu_AK4DiJet20_Mu5_noalgo_) throw std::runtime_error("HLT_BTagMu_AK4DiJet20_Mu5_noalgo branch doesn't exist");
        b_HLT_BTagMu_AK4DiJet20_Mu5_noalgo_->GetEntry(index);
        loaded_HLT_BTagMu_AK4DiJet20_Mu5_noalgo_ = true;
    }
    return HLT_BTagMu_AK4DiJet20_Mu5_noalgo_;
}
const bool &Nano::HLT_BTagMu_AK4DiJet40_Mu5() {
    if (!loaded_HLT_BTagMu_AK4DiJet40_Mu5_) counter_uncached_HLT_BTagMu_AK4DiJet40_Mu5_++;
    else counter_cached_HLT_BTagMu_AK4DiJet40_Mu5_++;
    if (!loaded_HLT_BTagMu_AK4DiJet40_Mu5_) {
        if (!b_HLT_BTagMu_AK4DiJet40_Mu5_) throw std::runtime_error("HLT_BTagMu_AK4DiJet40_Mu5 branch doesn't exist");
        b_HLT_BTagMu_AK4DiJet40_Mu5_->GetEntry(index);
        loaded_HLT_BTagMu_AK4DiJet40_Mu5_ = true;
    }
    return HLT_BTagMu_AK4DiJet40_Mu5_;
}
const bool &Nano::HLT_BTagMu_AK4DiJet40_Mu5_noalgo() {
    if (!loaded_HLT_BTagMu_AK4DiJet40_Mu5_noalgo_) counter_uncached_HLT_BTagMu_AK4DiJet40_Mu5_noalgo_++;
    else counter_cached_HLT_BTagMu_AK4DiJet40_Mu5_noalgo_++;
    if (!loaded_HLT_BTagMu_AK4DiJet40_Mu5_noalgo_) {
        if (!b_HLT_BTagMu_AK4DiJet40_Mu5_noalgo_) throw std::runtime_error("HLT_BTagMu_AK4DiJet40_Mu5_noalgo branch doesn't exist");
        b_HLT_BTagMu_AK4DiJet40_Mu5_noalgo_->GetEntry(index);
        loaded_HLT_BTagMu_AK4DiJet40_Mu5_noalgo_ = true;
    }
    return HLT_BTagMu_AK4DiJet40_Mu5_noalgo_;
}
const bool &Nano::HLT_BTagMu_AK4DiJet70_Mu5() {
    if (!loaded_HLT_BTagMu_AK4DiJet70_Mu5_) counter_uncached_HLT_BTagMu_AK4DiJet70_Mu5_++;
    else counter_cached_HLT_BTagMu_AK4DiJet70_Mu5_++;
    if (!loaded_HLT_BTagMu_AK4DiJet70_Mu5_) {
        if (!b_HLT_BTagMu_AK4DiJet70_Mu5_) throw std::runtime_error("HLT_BTagMu_AK4DiJet70_Mu5 branch doesn't exist");
        b_HLT_BTagMu_AK4DiJet70_Mu5_->GetEntry(index);
        loaded_HLT_BTagMu_AK4DiJet70_Mu5_ = true;
    }
    return HLT_BTagMu_AK4DiJet70_Mu5_;
}
const bool &Nano::HLT_BTagMu_AK4DiJet70_Mu5_noalgo() {
    if (!loaded_HLT_BTagMu_AK4DiJet70_Mu5_noalgo_) counter_uncached_HLT_BTagMu_AK4DiJet70_Mu5_noalgo_++;
    else counter_cached_HLT_BTagMu_AK4DiJet70_Mu5_noalgo_++;
    if (!loaded_HLT_BTagMu_AK4DiJet70_Mu5_noalgo_) {
        if (!b_HLT_BTagMu_AK4DiJet70_Mu5_noalgo_) throw std::runtime_error("HLT_BTagMu_AK4DiJet70_Mu5_noalgo branch doesn't exist");
        b_HLT_BTagMu_AK4DiJet70_Mu5_noalgo_->GetEntry(index);
        loaded_HLT_BTagMu_AK4DiJet70_Mu5_noalgo_ = true;
    }
    return HLT_BTagMu_AK4DiJet70_Mu5_noalgo_;
}
const bool &Nano::HLT_BTagMu_AK4Jet300_Mu5() {
    if (!loaded_HLT_BTagMu_AK4Jet300_Mu5_) counter_uncached_HLT_BTagMu_AK4Jet300_Mu5_++;
    else counter_cached_HLT_BTagMu_AK4Jet300_Mu5_++;
    if (!loaded_HLT_BTagMu_AK4Jet300_Mu5_) {
        if (!b_HLT_BTagMu_AK4Jet300_Mu5_) throw std::runtime_error("HLT_BTagMu_AK4Jet300_Mu5 branch doesn't exist");
        b_HLT_BTagMu_AK4Jet300_Mu5_->GetEntry(index);
        loaded_HLT_BTagMu_AK4Jet300_Mu5_ = true;
    }
    return HLT_BTagMu_AK4Jet300_Mu5_;
}
const bool &Nano::HLT_BTagMu_AK4Jet300_Mu5_noalgo() {
    if (!loaded_HLT_BTagMu_AK4Jet300_Mu5_noalgo_) counter_uncached_HLT_BTagMu_AK4Jet300_Mu5_noalgo_++;
    else counter_cached_HLT_BTagMu_AK4Jet300_Mu5_noalgo_++;
    if (!loaded_HLT_BTagMu_AK4Jet300_Mu5_noalgo_) {
        if (!b_HLT_BTagMu_AK4Jet300_Mu5_noalgo_) throw std::runtime_error("HLT_BTagMu_AK4Jet300_Mu5_noalgo branch doesn't exist");
        b_HLT_BTagMu_AK4Jet300_Mu5_noalgo_->GetEntry(index);
        loaded_HLT_BTagMu_AK4Jet300_Mu5_noalgo_ = true;
    }
    return HLT_BTagMu_AK4Jet300_Mu5_noalgo_;
}
const bool &Nano::HLT_BTagMu_AK8DiJet170_Mu5() {
    if (!loaded_HLT_BTagMu_AK8DiJet170_Mu5_) counter_uncached_HLT_BTagMu_AK8DiJet170_Mu5_++;
    else counter_cached_HLT_BTagMu_AK8DiJet170_Mu5_++;
    if (!loaded_HLT_BTagMu_AK8DiJet170_Mu5_) {
        if (!b_HLT_BTagMu_AK8DiJet170_Mu5_) throw std::runtime_error("HLT_BTagMu_AK8DiJet170_Mu5 branch doesn't exist");
        b_HLT_BTagMu_AK8DiJet170_Mu5_->GetEntry(index);
        loaded_HLT_BTagMu_AK8DiJet170_Mu5_ = true;
    }
    return HLT_BTagMu_AK8DiJet170_Mu5_;
}
const bool &Nano::HLT_BTagMu_AK8DiJet170_Mu5_noalgo() {
    if (!loaded_HLT_BTagMu_AK8DiJet170_Mu5_noalgo_) counter_uncached_HLT_BTagMu_AK8DiJet170_Mu5_noalgo_++;
    else counter_cached_HLT_BTagMu_AK8DiJet170_Mu5_noalgo_++;
    if (!loaded_HLT_BTagMu_AK8DiJet170_Mu5_noalgo_) {
        if (!b_HLT_BTagMu_AK8DiJet170_Mu5_noalgo_) throw std::runtime_error("HLT_BTagMu_AK8DiJet170_Mu5_noalgo branch doesn't exist");
        b_HLT_BTagMu_AK8DiJet170_Mu5_noalgo_->GetEntry(index);
        loaded_HLT_BTagMu_AK8DiJet170_Mu5_noalgo_ = true;
    }
    return HLT_BTagMu_AK8DiJet170_Mu5_noalgo_;
}
const bool &Nano::HLT_BTagMu_AK8Jet170_DoubleMu5() {
    if (!loaded_HLT_BTagMu_AK8Jet170_DoubleMu5_) counter_uncached_HLT_BTagMu_AK8Jet170_DoubleMu5_++;
    else counter_cached_HLT_BTagMu_AK8Jet170_DoubleMu5_++;
    if (!loaded_HLT_BTagMu_AK8Jet170_DoubleMu5_) {
        if (!b_HLT_BTagMu_AK8Jet170_DoubleMu5_) throw std::runtime_error("HLT_BTagMu_AK8Jet170_DoubleMu5 branch doesn't exist");
        b_HLT_BTagMu_AK8Jet170_DoubleMu5_->GetEntry(index);
        loaded_HLT_BTagMu_AK8Jet170_DoubleMu5_ = true;
    }
    return HLT_BTagMu_AK8Jet170_DoubleMu5_;
}
const bool &Nano::HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo() {
    if (!loaded_HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_) counter_uncached_HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_++;
    else counter_cached_HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_++;
    if (!loaded_HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_) {
        if (!b_HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_) throw std::runtime_error("HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo branch doesn't exist");
        b_HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_->GetEntry(index);
        loaded_HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_ = true;
    }
    return HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_;
}
const bool &Nano::HLT_BTagMu_AK8Jet300_Mu5() {
    if (!loaded_HLT_BTagMu_AK8Jet300_Mu5_) counter_uncached_HLT_BTagMu_AK8Jet300_Mu5_++;
    else counter_cached_HLT_BTagMu_AK8Jet300_Mu5_++;
    if (!loaded_HLT_BTagMu_AK8Jet300_Mu5_) {
        if (!b_HLT_BTagMu_AK8Jet300_Mu5_) throw std::runtime_error("HLT_BTagMu_AK8Jet300_Mu5 branch doesn't exist");
        b_HLT_BTagMu_AK8Jet300_Mu5_->GetEntry(index);
        loaded_HLT_BTagMu_AK8Jet300_Mu5_ = true;
    }
    return HLT_BTagMu_AK8Jet300_Mu5_;
}
const bool &Nano::HLT_BTagMu_AK8Jet300_Mu5_noalgo() {
    if (!loaded_HLT_BTagMu_AK8Jet300_Mu5_noalgo_) counter_uncached_HLT_BTagMu_AK8Jet300_Mu5_noalgo_++;
    else counter_cached_HLT_BTagMu_AK8Jet300_Mu5_noalgo_++;
    if (!loaded_HLT_BTagMu_AK8Jet300_Mu5_noalgo_) {
        if (!b_HLT_BTagMu_AK8Jet300_Mu5_noalgo_) throw std::runtime_error("HLT_BTagMu_AK8Jet300_Mu5_noalgo branch doesn't exist");
        b_HLT_BTagMu_AK8Jet300_Mu5_noalgo_->GetEntry(index);
        loaded_HLT_BTagMu_AK8Jet300_Mu5_noalgo_ = true;
    }
    return HLT_BTagMu_AK8Jet300_Mu5_noalgo_;
}
const bool &Nano::HLT_BTagMu_DiJet110_Mu5() {
    if (!loaded_HLT_BTagMu_DiJet110_Mu5_) counter_uncached_HLT_BTagMu_DiJet110_Mu5_++;
    else counter_cached_HLT_BTagMu_DiJet110_Mu5_++;
    if (!loaded_HLT_BTagMu_DiJet110_Mu5_) {
        if (!b_HLT_BTagMu_DiJet110_Mu5_) throw std::runtime_error("HLT_BTagMu_DiJet110_Mu5 branch doesn't exist");
        b_HLT_BTagMu_DiJet110_Mu5_->GetEntry(index);
        loaded_HLT_BTagMu_DiJet110_Mu5_ = true;
    }
    return HLT_BTagMu_DiJet110_Mu5_;
}
const bool &Nano::HLT_BTagMu_DiJet170_Mu5() {
    if (!loaded_HLT_BTagMu_DiJet170_Mu5_) counter_uncached_HLT_BTagMu_DiJet170_Mu5_++;
    else counter_cached_HLT_BTagMu_DiJet170_Mu5_++;
    if (!loaded_HLT_BTagMu_DiJet170_Mu5_) {
        if (!b_HLT_BTagMu_DiJet170_Mu5_) throw std::runtime_error("HLT_BTagMu_DiJet170_Mu5 branch doesn't exist");
        b_HLT_BTagMu_DiJet170_Mu5_->GetEntry(index);
        loaded_HLT_BTagMu_DiJet170_Mu5_ = true;
    }
    return HLT_BTagMu_DiJet170_Mu5_;
}
const bool &Nano::HLT_BTagMu_DiJet20_Mu5() {
    if (!loaded_HLT_BTagMu_DiJet20_Mu5_) counter_uncached_HLT_BTagMu_DiJet20_Mu5_++;
    else counter_cached_HLT_BTagMu_DiJet20_Mu5_++;
    if (!loaded_HLT_BTagMu_DiJet20_Mu5_) {
        if (!b_HLT_BTagMu_DiJet20_Mu5_) throw std::runtime_error("HLT_BTagMu_DiJet20_Mu5 branch doesn't exist");
        b_HLT_BTagMu_DiJet20_Mu5_->GetEntry(index);
        loaded_HLT_BTagMu_DiJet20_Mu5_ = true;
    }
    return HLT_BTagMu_DiJet20_Mu5_;
}
const bool &Nano::HLT_BTagMu_DiJet40_Mu5() {
    if (!loaded_HLT_BTagMu_DiJet40_Mu5_) counter_uncached_HLT_BTagMu_DiJet40_Mu5_++;
    else counter_cached_HLT_BTagMu_DiJet40_Mu5_++;
    if (!loaded_HLT_BTagMu_DiJet40_Mu5_) {
        if (!b_HLT_BTagMu_DiJet40_Mu5_) throw std::runtime_error("HLT_BTagMu_DiJet40_Mu5 branch doesn't exist");
        b_HLT_BTagMu_DiJet40_Mu5_->GetEntry(index);
        loaded_HLT_BTagMu_DiJet40_Mu5_ = true;
    }
    return HLT_BTagMu_DiJet40_Mu5_;
}
const bool &Nano::HLT_BTagMu_DiJet70_Mu5() {
    if (!loaded_HLT_BTagMu_DiJet70_Mu5_) counter_uncached_HLT_BTagMu_DiJet70_Mu5_++;
    else counter_cached_HLT_BTagMu_DiJet70_Mu5_++;
    if (!loaded_HLT_BTagMu_DiJet70_Mu5_) {
        if (!b_HLT_BTagMu_DiJet70_Mu5_) throw std::runtime_error("HLT_BTagMu_DiJet70_Mu5 branch doesn't exist");
        b_HLT_BTagMu_DiJet70_Mu5_->GetEntry(index);
        loaded_HLT_BTagMu_DiJet70_Mu5_ = true;
    }
    return HLT_BTagMu_DiJet70_Mu5_;
}
const bool &Nano::HLT_BTagMu_Jet300_Mu5() {
    if (!loaded_HLT_BTagMu_Jet300_Mu5_) counter_uncached_HLT_BTagMu_Jet300_Mu5_++;
    else counter_cached_HLT_BTagMu_Jet300_Mu5_++;
    if (!loaded_HLT_BTagMu_Jet300_Mu5_) {
        if (!b_HLT_BTagMu_Jet300_Mu5_) throw std::runtime_error("HLT_BTagMu_Jet300_Mu5 branch doesn't exist");
        b_HLT_BTagMu_Jet300_Mu5_->GetEntry(index);
        loaded_HLT_BTagMu_Jet300_Mu5_ = true;
    }
    return HLT_BTagMu_Jet300_Mu5_;
}
const bool &Nano::HLT_CDC_L2cosmic_10_er1p0() {
    if (!loaded_HLT_CDC_L2cosmic_10_er1p0_) counter_uncached_HLT_CDC_L2cosmic_10_er1p0_++;
    else counter_cached_HLT_CDC_L2cosmic_10_er1p0_++;
    if (!loaded_HLT_CDC_L2cosmic_10_er1p0_) {
        if (!b_HLT_CDC_L2cosmic_10_er1p0_) throw std::runtime_error("HLT_CDC_L2cosmic_10_er1p0 branch doesn't exist");
        b_HLT_CDC_L2cosmic_10_er1p0_->GetEntry(index);
        loaded_HLT_CDC_L2cosmic_10_er1p0_ = true;
    }
    return HLT_CDC_L2cosmic_10_er1p0_;
}
const bool &Nano::HLT_CDC_L2cosmic_5_er1p0() {
    if (!loaded_HLT_CDC_L2cosmic_5_er1p0_) counter_uncached_HLT_CDC_L2cosmic_5_er1p0_++;
    else counter_cached_HLT_CDC_L2cosmic_5_er1p0_++;
    if (!loaded_HLT_CDC_L2cosmic_5_er1p0_) {
        if (!b_HLT_CDC_L2cosmic_5_er1p0_) throw std::runtime_error("HLT_CDC_L2cosmic_5_er1p0 branch doesn't exist");
        b_HLT_CDC_L2cosmic_5_er1p0_->GetEntry(index);
        loaded_HLT_CDC_L2cosmic_5_er1p0_ = true;
    }
    return HLT_CDC_L2cosmic_5_er1p0_;
}
const bool &Nano::HLT_CDC_L2cosmic_5p5_er1p0() {
    if (!loaded_HLT_CDC_L2cosmic_5p5_er1p0_) counter_uncached_HLT_CDC_L2cosmic_5p5_er1p0_++;
    else counter_cached_HLT_CDC_L2cosmic_5p5_er1p0_++;
    if (!loaded_HLT_CDC_L2cosmic_5p5_er1p0_) {
        if (!b_HLT_CDC_L2cosmic_5p5_er1p0_) throw std::runtime_error("HLT_CDC_L2cosmic_5p5_er1p0 branch doesn't exist");
        b_HLT_CDC_L2cosmic_5p5_er1p0_->GetEntry(index);
        loaded_HLT_CDC_L2cosmic_5p5_er1p0_ = true;
    }
    return HLT_CDC_L2cosmic_5p5_er1p0_;
}
const bool &Nano::HLT_CaloJet260() {
    if (!loaded_HLT_CaloJet260_) counter_uncached_HLT_CaloJet260_++;
    else counter_cached_HLT_CaloJet260_++;
    if (!loaded_HLT_CaloJet260_) {
        if (!b_HLT_CaloJet260_) throw std::runtime_error("HLT_CaloJet260 branch doesn't exist");
        b_HLT_CaloJet260_->GetEntry(index);
        loaded_HLT_CaloJet260_ = true;
    }
    return HLT_CaloJet260_;
}
const bool &Nano::HLT_CaloJet500_NoJetID() {
    if (!loaded_HLT_CaloJet500_NoJetID_) counter_uncached_HLT_CaloJet500_NoJetID_++;
    else counter_cached_HLT_CaloJet500_NoJetID_++;
    if (!loaded_HLT_CaloJet500_NoJetID_) {
        if (!b_HLT_CaloJet500_NoJetID_) throw std::runtime_error("HLT_CaloJet500_NoJetID branch doesn't exist");
        b_HLT_CaloJet500_NoJetID_->GetEntry(index);
        loaded_HLT_CaloJet500_NoJetID_ = true;
    }
    return HLT_CaloJet500_NoJetID_;
}
const bool &Nano::HLT_CaloJet550_NoJetID() {
    if (!loaded_HLT_CaloJet550_NoJetID_) counter_uncached_HLT_CaloJet550_NoJetID_++;
    else counter_cached_HLT_CaloJet550_NoJetID_++;
    if (!loaded_HLT_CaloJet550_NoJetID_) {
        if (!b_HLT_CaloJet550_NoJetID_) throw std::runtime_error("HLT_CaloJet550_NoJetID branch doesn't exist");
        b_HLT_CaloJet550_NoJetID_->GetEntry(index);
        loaded_HLT_CaloJet550_NoJetID_ = true;
    }
    return HLT_CaloJet550_NoJetID_;
}
const bool &Nano::HLT_CaloMET100_HBHECleaned() {
    if (!loaded_HLT_CaloMET100_HBHECleaned_) counter_uncached_HLT_CaloMET100_HBHECleaned_++;
    else counter_cached_HLT_CaloMET100_HBHECleaned_++;
    if (!loaded_HLT_CaloMET100_HBHECleaned_) {
        if (!b_HLT_CaloMET100_HBHECleaned_) throw std::runtime_error("HLT_CaloMET100_HBHECleaned branch doesn't exist");
        b_HLT_CaloMET100_HBHECleaned_->GetEntry(index);
        loaded_HLT_CaloMET100_HBHECleaned_ = true;
    }
    return HLT_CaloMET100_HBHECleaned_;
}
const bool &Nano::HLT_CaloMET100_NotCleaned() {
    if (!loaded_HLT_CaloMET100_NotCleaned_) counter_uncached_HLT_CaloMET100_NotCleaned_++;
    else counter_cached_HLT_CaloMET100_NotCleaned_++;
    if (!loaded_HLT_CaloMET100_NotCleaned_) {
        if (!b_HLT_CaloMET100_NotCleaned_) throw std::runtime_error("HLT_CaloMET100_NotCleaned branch doesn't exist");
        b_HLT_CaloMET100_NotCleaned_->GetEntry(index);
        loaded_HLT_CaloMET100_NotCleaned_ = true;
    }
    return HLT_CaloMET100_NotCleaned_;
}
const bool &Nano::HLT_CaloMET110_NotCleaned() {
    if (!loaded_HLT_CaloMET110_NotCleaned_) counter_uncached_HLT_CaloMET110_NotCleaned_++;
    else counter_cached_HLT_CaloMET110_NotCleaned_++;
    if (!loaded_HLT_CaloMET110_NotCleaned_) {
        if (!b_HLT_CaloMET110_NotCleaned_) throw std::runtime_error("HLT_CaloMET110_NotCleaned branch doesn't exist");
        b_HLT_CaloMET110_NotCleaned_->GetEntry(index);
        loaded_HLT_CaloMET110_NotCleaned_ = true;
    }
    return HLT_CaloMET110_NotCleaned_;
}
const bool &Nano::HLT_CaloMET250_HBHECleaned() {
    if (!loaded_HLT_CaloMET250_HBHECleaned_) counter_uncached_HLT_CaloMET250_HBHECleaned_++;
    else counter_cached_HLT_CaloMET250_HBHECleaned_++;
    if (!loaded_HLT_CaloMET250_HBHECleaned_) {
        if (!b_HLT_CaloMET250_HBHECleaned_) throw std::runtime_error("HLT_CaloMET250_HBHECleaned branch doesn't exist");
        b_HLT_CaloMET250_HBHECleaned_->GetEntry(index);
        loaded_HLT_CaloMET250_HBHECleaned_ = true;
    }
    return HLT_CaloMET250_HBHECleaned_;
}
const bool &Nano::HLT_CaloMET250_NotCleaned() {
    if (!loaded_HLT_CaloMET250_NotCleaned_) counter_uncached_HLT_CaloMET250_NotCleaned_++;
    else counter_cached_HLT_CaloMET250_NotCleaned_++;
    if (!loaded_HLT_CaloMET250_NotCleaned_) {
        if (!b_HLT_CaloMET250_NotCleaned_) throw std::runtime_error("HLT_CaloMET250_NotCleaned branch doesn't exist");
        b_HLT_CaloMET250_NotCleaned_->GetEntry(index);
        loaded_HLT_CaloMET250_NotCleaned_ = true;
    }
    return HLT_CaloMET250_NotCleaned_;
}
const bool &Nano::HLT_CaloMET300_HBHECleaned() {
    if (!loaded_HLT_CaloMET300_HBHECleaned_) counter_uncached_HLT_CaloMET300_HBHECleaned_++;
    else counter_cached_HLT_CaloMET300_HBHECleaned_++;
    if (!loaded_HLT_CaloMET300_HBHECleaned_) {
        if (!b_HLT_CaloMET300_HBHECleaned_) throw std::runtime_error("HLT_CaloMET300_HBHECleaned branch doesn't exist");
        b_HLT_CaloMET300_HBHECleaned_->GetEntry(index);
        loaded_HLT_CaloMET300_HBHECleaned_ = true;
    }
    return HLT_CaloMET300_HBHECleaned_;
}
const bool &Nano::HLT_CaloMET350_HBHECleaned() {
    if (!loaded_HLT_CaloMET350_HBHECleaned_) counter_uncached_HLT_CaloMET350_HBHECleaned_++;
    else counter_cached_HLT_CaloMET350_HBHECleaned_++;
    if (!loaded_HLT_CaloMET350_HBHECleaned_) {
        if (!b_HLT_CaloMET350_HBHECleaned_) throw std::runtime_error("HLT_CaloMET350_HBHECleaned branch doesn't exist");
        b_HLT_CaloMET350_HBHECleaned_->GetEntry(index);
        loaded_HLT_CaloMET350_HBHECleaned_ = true;
    }
    return HLT_CaloMET350_HBHECleaned_;
}
const bool &Nano::HLT_CaloMET350_NotCleaned() {
    if (!loaded_HLT_CaloMET350_NotCleaned_) counter_uncached_HLT_CaloMET350_NotCleaned_++;
    else counter_cached_HLT_CaloMET350_NotCleaned_++;
    if (!loaded_HLT_CaloMET350_NotCleaned_) {
        if (!b_HLT_CaloMET350_NotCleaned_) throw std::runtime_error("HLT_CaloMET350_NotCleaned branch doesn't exist");
        b_HLT_CaloMET350_NotCleaned_->GetEntry(index);
        loaded_HLT_CaloMET350_NotCleaned_ = true;
    }
    return HLT_CaloMET350_NotCleaned_;
}
const bool &Nano::HLT_CaloMET60_DTCluster50() {
    if (!loaded_HLT_CaloMET60_DTCluster50_) counter_uncached_HLT_CaloMET60_DTCluster50_++;
    else counter_cached_HLT_CaloMET60_DTCluster50_++;
    if (!loaded_HLT_CaloMET60_DTCluster50_) {
        if (!b_HLT_CaloMET60_DTCluster50_) throw std::runtime_error("HLT_CaloMET60_DTCluster50 branch doesn't exist");
        b_HLT_CaloMET60_DTCluster50_->GetEntry(index);
        loaded_HLT_CaloMET60_DTCluster50_ = true;
    }
    return HLT_CaloMET60_DTCluster50_;
}
const bool &Nano::HLT_CaloMET60_DTClusterNoMB1S50() {
    if (!loaded_HLT_CaloMET60_DTClusterNoMB1S50_) counter_uncached_HLT_CaloMET60_DTClusterNoMB1S50_++;
    else counter_cached_HLT_CaloMET60_DTClusterNoMB1S50_++;
    if (!loaded_HLT_CaloMET60_DTClusterNoMB1S50_) {
        if (!b_HLT_CaloMET60_DTClusterNoMB1S50_) throw std::runtime_error("HLT_CaloMET60_DTClusterNoMB1S50 branch doesn't exist");
        b_HLT_CaloMET60_DTClusterNoMB1S50_->GetEntry(index);
        loaded_HLT_CaloMET60_DTClusterNoMB1S50_ = true;
    }
    return HLT_CaloMET60_DTClusterNoMB1S50_;
}
const bool &Nano::HLT_CaloMET70_HBHECleaned() {
    if (!loaded_HLT_CaloMET70_HBHECleaned_) counter_uncached_HLT_CaloMET70_HBHECleaned_++;
    else counter_cached_HLT_CaloMET70_HBHECleaned_++;
    if (!loaded_HLT_CaloMET70_HBHECleaned_) {
        if (!b_HLT_CaloMET70_HBHECleaned_) throw std::runtime_error("HLT_CaloMET70_HBHECleaned branch doesn't exist");
        b_HLT_CaloMET70_HBHECleaned_->GetEntry(index);
        loaded_HLT_CaloMET70_HBHECleaned_ = true;
    }
    return HLT_CaloMET70_HBHECleaned_;
}
const bool &Nano::HLT_CaloMET80_HBHECleaned() {
    if (!loaded_HLT_CaloMET80_HBHECleaned_) counter_uncached_HLT_CaloMET80_HBHECleaned_++;
    else counter_cached_HLT_CaloMET80_HBHECleaned_++;
    if (!loaded_HLT_CaloMET80_HBHECleaned_) {
        if (!b_HLT_CaloMET80_HBHECleaned_) throw std::runtime_error("HLT_CaloMET80_HBHECleaned branch doesn't exist");
        b_HLT_CaloMET80_HBHECleaned_->GetEntry(index);
        loaded_HLT_CaloMET80_HBHECleaned_ = true;
    }
    return HLT_CaloMET80_HBHECleaned_;
}
const bool &Nano::HLT_CaloMET80_NotCleaned() {
    if (!loaded_HLT_CaloMET80_NotCleaned_) counter_uncached_HLT_CaloMET80_NotCleaned_++;
    else counter_cached_HLT_CaloMET80_NotCleaned_++;
    if (!loaded_HLT_CaloMET80_NotCleaned_) {
        if (!b_HLT_CaloMET80_NotCleaned_) throw std::runtime_error("HLT_CaloMET80_NotCleaned branch doesn't exist");
        b_HLT_CaloMET80_NotCleaned_->GetEntry(index);
        loaded_HLT_CaloMET80_NotCleaned_ = true;
    }
    return HLT_CaloMET80_NotCleaned_;
}
const bool &Nano::HLT_CaloMET90_HBHECleaned() {
    if (!loaded_HLT_CaloMET90_HBHECleaned_) counter_uncached_HLT_CaloMET90_HBHECleaned_++;
    else counter_cached_HLT_CaloMET90_HBHECleaned_++;
    if (!loaded_HLT_CaloMET90_HBHECleaned_) {
        if (!b_HLT_CaloMET90_HBHECleaned_) throw std::runtime_error("HLT_CaloMET90_HBHECleaned branch doesn't exist");
        b_HLT_CaloMET90_HBHECleaned_->GetEntry(index);
        loaded_HLT_CaloMET90_HBHECleaned_ = true;
    }
    return HLT_CaloMET90_HBHECleaned_;
}
const bool &Nano::HLT_CaloMET90_NotCleaned() {
    if (!loaded_HLT_CaloMET90_NotCleaned_) counter_uncached_HLT_CaloMET90_NotCleaned_++;
    else counter_cached_HLT_CaloMET90_NotCleaned_++;
    if (!loaded_HLT_CaloMET90_NotCleaned_) {
        if (!b_HLT_CaloMET90_NotCleaned_) throw std::runtime_error("HLT_CaloMET90_NotCleaned branch doesn't exist");
        b_HLT_CaloMET90_NotCleaned_->GetEntry(index);
        loaded_HLT_CaloMET90_NotCleaned_ = true;
    }
    return HLT_CaloMET90_NotCleaned_;
}
const bool &Nano::HLT_CaloMHT90() {
    if (!loaded_HLT_CaloMHT90_) counter_uncached_HLT_CaloMHT90_++;
    else counter_cached_HLT_CaloMHT90_++;
    if (!loaded_HLT_CaloMHT90_) {
        if (!b_HLT_CaloMHT90_) throw std::runtime_error("HLT_CaloMHT90 branch doesn't exist");
        b_HLT_CaloMHT90_->GetEntry(index);
        loaded_HLT_CaloMHT90_ = true;
    }
    return HLT_CaloMHT90_;
}
const bool &Nano::HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight() {
    if (!loaded_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_) counter_uncached_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_++;
    else counter_cached_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_++;
    if (!loaded_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_) {
        if (!b_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_) throw std::runtime_error("HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight branch doesn't exist");
        b_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_->GetEntry(index);
        loaded_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_ = true;
    }
    return HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_;
}
const bool &Nano::HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067() {
    if (!loaded_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067_) counter_uncached_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067_++;
    else counter_cached_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067_++;
    if (!loaded_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067_) {
        if (!b_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067_) throw std::runtime_error("HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067 branch doesn't exist");
        b_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067_->GetEntry(index);
        loaded_HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067_ = true;
    }
    return HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067_;
}
const bool &Nano::HLT_CascadeMu100() {
    if (!loaded_HLT_CascadeMu100_) counter_uncached_HLT_CascadeMu100_++;
    else counter_cached_HLT_CascadeMu100_++;
    if (!loaded_HLT_CascadeMu100_) {
        if (!b_HLT_CascadeMu100_) throw std::runtime_error("HLT_CascadeMu100 branch doesn't exist");
        b_HLT_CascadeMu100_->GetEntry(index);
        loaded_HLT_CascadeMu100_ = true;
    }
    return HLT_CascadeMu100_;
}
const bool &Nano::HLT_CscCluster_Loose() {
    if (!loaded_HLT_CscCluster_Loose_) counter_uncached_HLT_CscCluster_Loose_++;
    else counter_cached_HLT_CscCluster_Loose_++;
    if (!loaded_HLT_CscCluster_Loose_) {
        if (!b_HLT_CscCluster_Loose_) throw std::runtime_error("HLT_CscCluster_Loose branch doesn't exist");
        b_HLT_CscCluster_Loose_->GetEntry(index);
        loaded_HLT_CscCluster_Loose_ = true;
    }
    return HLT_CscCluster_Loose_;
}
const bool &Nano::HLT_CscCluster_Medium() {
    if (!loaded_HLT_CscCluster_Medium_) counter_uncached_HLT_CscCluster_Medium_++;
    else counter_cached_HLT_CscCluster_Medium_++;
    if (!loaded_HLT_CscCluster_Medium_) {
        if (!b_HLT_CscCluster_Medium_) throw std::runtime_error("HLT_CscCluster_Medium branch doesn't exist");
        b_HLT_CscCluster_Medium_->GetEntry(index);
        loaded_HLT_CscCluster_Medium_ = true;
    }
    return HLT_CscCluster_Medium_;
}
const bool &Nano::HLT_CscCluster_Tight() {
    if (!loaded_HLT_CscCluster_Tight_) counter_uncached_HLT_CscCluster_Tight_++;
    else counter_cached_HLT_CscCluster_Tight_++;
    if (!loaded_HLT_CscCluster_Tight_) {
        if (!b_HLT_CscCluster_Tight_) throw std::runtime_error("HLT_CscCluster_Tight branch doesn't exist");
        b_HLT_CscCluster_Tight_->GetEntry(index);
        loaded_HLT_CscCluster_Tight_ = true;
    }
    return HLT_CscCluster_Tight_;
}
const bool &Nano::HLT_DiCentralPFJet170() {
    if (!loaded_HLT_DiCentralPFJet170_) counter_uncached_HLT_DiCentralPFJet170_++;
    else counter_cached_HLT_DiCentralPFJet170_++;
    if (!loaded_HLT_DiCentralPFJet170_) {
        if (!b_HLT_DiCentralPFJet170_) throw std::runtime_error("HLT_DiCentralPFJet170 branch doesn't exist");
        b_HLT_DiCentralPFJet170_->GetEntry(index);
        loaded_HLT_DiCentralPFJet170_ = true;
    }
    return HLT_DiCentralPFJet170_;
}
const bool &Nano::HLT_DiCentralPFJet170_CFMax0p1() {
    if (!loaded_HLT_DiCentralPFJet170_CFMax0p1_) counter_uncached_HLT_DiCentralPFJet170_CFMax0p1_++;
    else counter_cached_HLT_DiCentralPFJet170_CFMax0p1_++;
    if (!loaded_HLT_DiCentralPFJet170_CFMax0p1_) {
        if (!b_HLT_DiCentralPFJet170_CFMax0p1_) throw std::runtime_error("HLT_DiCentralPFJet170_CFMax0p1 branch doesn't exist");
        b_HLT_DiCentralPFJet170_CFMax0p1_->GetEntry(index);
        loaded_HLT_DiCentralPFJet170_CFMax0p1_ = true;
    }
    return HLT_DiCentralPFJet170_CFMax0p1_;
}
const bool &Nano::HLT_DiCentralPFJet220_CFMax0p3() {
    if (!loaded_HLT_DiCentralPFJet220_CFMax0p3_) counter_uncached_HLT_DiCentralPFJet220_CFMax0p3_++;
    else counter_cached_HLT_DiCentralPFJet220_CFMax0p3_++;
    if (!loaded_HLT_DiCentralPFJet220_CFMax0p3_) {
        if (!b_HLT_DiCentralPFJet220_CFMax0p3_) throw std::runtime_error("HLT_DiCentralPFJet220_CFMax0p3 branch doesn't exist");
        b_HLT_DiCentralPFJet220_CFMax0p3_->GetEntry(index);
        loaded_HLT_DiCentralPFJet220_CFMax0p3_ = true;
    }
    return HLT_DiCentralPFJet220_CFMax0p3_;
}
const bool &Nano::HLT_DiCentralPFJet330_CFMax0p5() {
    if (!loaded_HLT_DiCentralPFJet330_CFMax0p5_) counter_uncached_HLT_DiCentralPFJet330_CFMax0p5_++;
    else counter_cached_HLT_DiCentralPFJet330_CFMax0p5_++;
    if (!loaded_HLT_DiCentralPFJet330_CFMax0p5_) {
        if (!b_HLT_DiCentralPFJet330_CFMax0p5_) throw std::runtime_error("HLT_DiCentralPFJet330_CFMax0p5 branch doesn't exist");
        b_HLT_DiCentralPFJet330_CFMax0p5_->GetEntry(index);
        loaded_HLT_DiCentralPFJet330_CFMax0p5_ = true;
    }
    return HLT_DiCentralPFJet330_CFMax0p5_;
}
const bool &Nano::HLT_DiCentralPFJet430() {
    if (!loaded_HLT_DiCentralPFJet430_) counter_uncached_HLT_DiCentralPFJet430_++;
    else counter_cached_HLT_DiCentralPFJet430_++;
    if (!loaded_HLT_DiCentralPFJet430_) {
        if (!b_HLT_DiCentralPFJet430_) throw std::runtime_error("HLT_DiCentralPFJet430 branch doesn't exist");
        b_HLT_DiCentralPFJet430_->GetEntry(index);
        loaded_HLT_DiCentralPFJet430_ = true;
    }
    return HLT_DiCentralPFJet430_;
}
const bool &Nano::HLT_DiCentralPFJet55_PFMET110() {
    if (!loaded_HLT_DiCentralPFJet55_PFMET110_) counter_uncached_HLT_DiCentralPFJet55_PFMET110_++;
    else counter_cached_HLT_DiCentralPFJet55_PFMET110_++;
    if (!loaded_HLT_DiCentralPFJet55_PFMET110_) {
        if (!b_HLT_DiCentralPFJet55_PFMET110_) throw std::runtime_error("HLT_DiCentralPFJet55_PFMET110 branch doesn't exist");
        b_HLT_DiCentralPFJet55_PFMET110_->GetEntry(index);
        loaded_HLT_DiCentralPFJet55_PFMET110_ = true;
    }
    return HLT_DiCentralPFJet55_PFMET110_;
}
const bool &Nano::HLT_DiEle27_WPTightCaloOnly_L1DoubleEG() {
    if (!loaded_HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_) counter_uncached_HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_++;
    else counter_cached_HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_++;
    if (!loaded_HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_) {
        if (!b_HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_) throw std::runtime_error("HLT_DiEle27_WPTightCaloOnly_L1DoubleEG branch doesn't exist");
        b_HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_->GetEntry(index);
        loaded_HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_ = true;
    }
    return HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_;
}
const bool &Nano::HLT_DiJet110_35_Mjj650_PFMET110() {
    if (!loaded_HLT_DiJet110_35_Mjj650_PFMET110_) counter_uncached_HLT_DiJet110_35_Mjj650_PFMET110_++;
    else counter_cached_HLT_DiJet110_35_Mjj650_PFMET110_++;
    if (!loaded_HLT_DiJet110_35_Mjj650_PFMET110_) {
        if (!b_HLT_DiJet110_35_Mjj650_PFMET110_) throw std::runtime_error("HLT_DiJet110_35_Mjj650_PFMET110 branch doesn't exist");
        b_HLT_DiJet110_35_Mjj650_PFMET110_->GetEntry(index);
        loaded_HLT_DiJet110_35_Mjj650_PFMET110_ = true;
    }
    return HLT_DiJet110_35_Mjj650_PFMET110_;
}
const bool &Nano::HLT_DiJet110_35_Mjj650_PFMET120() {
    if (!loaded_HLT_DiJet110_35_Mjj650_PFMET120_) counter_uncached_HLT_DiJet110_35_Mjj650_PFMET120_++;
    else counter_cached_HLT_DiJet110_35_Mjj650_PFMET120_++;
    if (!loaded_HLT_DiJet110_35_Mjj650_PFMET120_) {
        if (!b_HLT_DiJet110_35_Mjj650_PFMET120_) throw std::runtime_error("HLT_DiJet110_35_Mjj650_PFMET120 branch doesn't exist");
        b_HLT_DiJet110_35_Mjj650_PFMET120_->GetEntry(index);
        loaded_HLT_DiJet110_35_Mjj650_PFMET120_ = true;
    }
    return HLT_DiJet110_35_Mjj650_PFMET120_;
}
const bool &Nano::HLT_DiJet110_35_Mjj650_PFMET130() {
    if (!loaded_HLT_DiJet110_35_Mjj650_PFMET130_) counter_uncached_HLT_DiJet110_35_Mjj650_PFMET130_++;
    else counter_cached_HLT_DiJet110_35_Mjj650_PFMET130_++;
    if (!loaded_HLT_DiJet110_35_Mjj650_PFMET130_) {
        if (!b_HLT_DiJet110_35_Mjj650_PFMET130_) throw std::runtime_error("HLT_DiJet110_35_Mjj650_PFMET130 branch doesn't exist");
        b_HLT_DiJet110_35_Mjj650_PFMET130_->GetEntry(index);
        loaded_HLT_DiJet110_35_Mjj650_PFMET130_ = true;
    }
    return HLT_DiJet110_35_Mjj650_PFMET130_;
}
const bool &Nano::HLT_DiJetVBFMu_PassThrough() {
    if (!loaded_HLT_DiJetVBFMu_PassThrough_) counter_uncached_HLT_DiJetVBFMu_PassThrough_++;
    else counter_cached_HLT_DiJetVBFMu_PassThrough_++;
    if (!loaded_HLT_DiJetVBFMu_PassThrough_) {
        if (!b_HLT_DiJetVBFMu_PassThrough_) throw std::runtime_error("HLT_DiJetVBFMu_PassThrough branch doesn't exist");
        b_HLT_DiJetVBFMu_PassThrough_->GetEntry(index);
        loaded_HLT_DiJetVBFMu_PassThrough_ = true;
    }
    return HLT_DiJetVBFMu_PassThrough_;
}
const bool &Nano::HLT_DiJetVBF_PassThrough() {
    if (!loaded_HLT_DiJetVBF_PassThrough_) counter_uncached_HLT_DiJetVBF_PassThrough_++;
    else counter_cached_HLT_DiJetVBF_PassThrough_++;
    if (!loaded_HLT_DiJetVBF_PassThrough_) {
        if (!b_HLT_DiJetVBF_PassThrough_) throw std::runtime_error("HLT_DiJetVBF_PassThrough branch doesn't exist");
        b_HLT_DiJetVBF_PassThrough_->GetEntry(index);
        loaded_HLT_DiJetVBF_PassThrough_ = true;
    }
    return HLT_DiJetVBF_PassThrough_;
}
const bool &Nano::HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8() {
    if (!loaded_HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_) counter_uncached_HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_++;
    else counter_cached_HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_++;
    if (!loaded_HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_) {
        if (!b_HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_) throw std::runtime_error("HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8 branch doesn't exist");
        b_HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_->GetEntry(index);
        loaded_HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_ = true;
    }
    return HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_;
}
const bool &Nano::HLT_DiMu9_Ele9_CaloIdL_TrackIdL() {
    if (!loaded_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_) counter_uncached_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_++;
    else counter_cached_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_++;
    if (!loaded_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_) {
        if (!b_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_) throw std::runtime_error("HLT_DiMu9_Ele9_CaloIdL_TrackIdL branch doesn't exist");
        b_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_->GetEntry(index);
        loaded_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_ = true;
    }
    return HLT_DiMu9_Ele9_CaloIdL_TrackIdL_;
}
const bool &Nano::HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ() {
    if (!loaded_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_) counter_uncached_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_++;
    else counter_cached_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_++;
    if (!loaded_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_) {
        if (!b_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_) throw std::runtime_error("HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ branch doesn't exist");
        b_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_->GetEntry(index);
        loaded_HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_ = true;
    }
    return HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_;
}
const bool &Nano::HLT_DiPFJet15_FBEta3_NoCaloMatched() {
    if (!loaded_HLT_DiPFJet15_FBEta3_NoCaloMatched_) counter_uncached_HLT_DiPFJet15_FBEta3_NoCaloMatched_++;
    else counter_cached_HLT_DiPFJet15_FBEta3_NoCaloMatched_++;
    if (!loaded_HLT_DiPFJet15_FBEta3_NoCaloMatched_) {
        if (!b_HLT_DiPFJet15_FBEta3_NoCaloMatched_) throw std::runtime_error("HLT_DiPFJet15_FBEta3_NoCaloMatched branch doesn't exist");
        b_HLT_DiPFJet15_FBEta3_NoCaloMatched_->GetEntry(index);
        loaded_HLT_DiPFJet15_FBEta3_NoCaloMatched_ = true;
    }
    return HLT_DiPFJet15_FBEta3_NoCaloMatched_;
}
const bool &Nano::HLT_DiPFJet15_NoCaloMatched() {
    if (!loaded_HLT_DiPFJet15_NoCaloMatched_) counter_uncached_HLT_DiPFJet15_NoCaloMatched_++;
    else counter_cached_HLT_DiPFJet15_NoCaloMatched_++;
    if (!loaded_HLT_DiPFJet15_NoCaloMatched_) {
        if (!b_HLT_DiPFJet15_NoCaloMatched_) throw std::runtime_error("HLT_DiPFJet15_NoCaloMatched branch doesn't exist");
        b_HLT_DiPFJet15_NoCaloMatched_->GetEntry(index);
        loaded_HLT_DiPFJet15_NoCaloMatched_ = true;
    }
    return HLT_DiPFJet15_NoCaloMatched_;
}
const bool &Nano::HLT_DiPFJet25_FBEta3_NoCaloMatched() {
    if (!loaded_HLT_DiPFJet25_FBEta3_NoCaloMatched_) counter_uncached_HLT_DiPFJet25_FBEta3_NoCaloMatched_++;
    else counter_cached_HLT_DiPFJet25_FBEta3_NoCaloMatched_++;
    if (!loaded_HLT_DiPFJet25_FBEta3_NoCaloMatched_) {
        if (!b_HLT_DiPFJet25_FBEta3_NoCaloMatched_) throw std::runtime_error("HLT_DiPFJet25_FBEta3_NoCaloMatched branch doesn't exist");
        b_HLT_DiPFJet25_FBEta3_NoCaloMatched_->GetEntry(index);
        loaded_HLT_DiPFJet25_FBEta3_NoCaloMatched_ = true;
    }
    return HLT_DiPFJet25_FBEta3_NoCaloMatched_;
}
const bool &Nano::HLT_DiPFJet25_NoCaloMatched() {
    if (!loaded_HLT_DiPFJet25_NoCaloMatched_) counter_uncached_HLT_DiPFJet25_NoCaloMatched_++;
    else counter_cached_HLT_DiPFJet25_NoCaloMatched_++;
    if (!loaded_HLT_DiPFJet25_NoCaloMatched_) {
        if (!b_HLT_DiPFJet25_NoCaloMatched_) throw std::runtime_error("HLT_DiPFJet25_NoCaloMatched branch doesn't exist");
        b_HLT_DiPFJet25_NoCaloMatched_->GetEntry(index);
        loaded_HLT_DiPFJet25_NoCaloMatched_ = true;
    }
    return HLT_DiPFJet25_NoCaloMatched_;
}
const bool &Nano::HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140() {
    if (!loaded_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140_) counter_uncached_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140_++;
    else counter_cached_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140_++;
    if (!loaded_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140_) {
        if (!b_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140_) throw std::runtime_error("HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140 branch doesn't exist");
        b_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140_->GetEntry(index);
        loaded_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140_ = true;
    }
    return HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140_;
}
const bool &Nano::HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80() {
    if (!loaded_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80_) counter_uncached_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80_++;
    else counter_cached_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80_++;
    if (!loaded_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80_) {
        if (!b_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80_) throw std::runtime_error("HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80 branch doesn't exist");
        b_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80_->GetEntry(index);
        loaded_HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80_ = true;
    }
    return HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80_;
}
const bool &Nano::HLT_DiPFJetAve100_HFJEC() {
    if (!loaded_HLT_DiPFJetAve100_HFJEC_) counter_uncached_HLT_DiPFJetAve100_HFJEC_++;
    else counter_cached_HLT_DiPFJetAve100_HFJEC_++;
    if (!loaded_HLT_DiPFJetAve100_HFJEC_) {
        if (!b_HLT_DiPFJetAve100_HFJEC_) throw std::runtime_error("HLT_DiPFJetAve100_HFJEC branch doesn't exist");
        b_HLT_DiPFJetAve100_HFJEC_->GetEntry(index);
        loaded_HLT_DiPFJetAve100_HFJEC_ = true;
    }
    return HLT_DiPFJetAve100_HFJEC_;
}
const bool &Nano::HLT_DiPFJetAve140() {
    if (!loaded_HLT_DiPFJetAve140_) counter_uncached_HLT_DiPFJetAve140_++;
    else counter_cached_HLT_DiPFJetAve140_++;
    if (!loaded_HLT_DiPFJetAve140_) {
        if (!b_HLT_DiPFJetAve140_) throw std::runtime_error("HLT_DiPFJetAve140 branch doesn't exist");
        b_HLT_DiPFJetAve140_->GetEntry(index);
        loaded_HLT_DiPFJetAve140_ = true;
    }
    return HLT_DiPFJetAve140_;
}
const bool &Nano::HLT_DiPFJetAve15_HFJEC() {
    if (!loaded_HLT_DiPFJetAve15_HFJEC_) counter_uncached_HLT_DiPFJetAve15_HFJEC_++;
    else counter_cached_HLT_DiPFJetAve15_HFJEC_++;
    if (!loaded_HLT_DiPFJetAve15_HFJEC_) {
        if (!b_HLT_DiPFJetAve15_HFJEC_) throw std::runtime_error("HLT_DiPFJetAve15_HFJEC branch doesn't exist");
        b_HLT_DiPFJetAve15_HFJEC_->GetEntry(index);
        loaded_HLT_DiPFJetAve15_HFJEC_ = true;
    }
    return HLT_DiPFJetAve15_HFJEC_;
}
const bool &Nano::HLT_DiPFJetAve160_HFJEC() {
    if (!loaded_HLT_DiPFJetAve160_HFJEC_) counter_uncached_HLT_DiPFJetAve160_HFJEC_++;
    else counter_cached_HLT_DiPFJetAve160_HFJEC_++;
    if (!loaded_HLT_DiPFJetAve160_HFJEC_) {
        if (!b_HLT_DiPFJetAve160_HFJEC_) throw std::runtime_error("HLT_DiPFJetAve160_HFJEC branch doesn't exist");
        b_HLT_DiPFJetAve160_HFJEC_->GetEntry(index);
        loaded_HLT_DiPFJetAve160_HFJEC_ = true;
    }
    return HLT_DiPFJetAve160_HFJEC_;
}
const bool &Nano::HLT_DiPFJetAve200() {
    if (!loaded_HLT_DiPFJetAve200_) counter_uncached_HLT_DiPFJetAve200_++;
    else counter_cached_HLT_DiPFJetAve200_++;
    if (!loaded_HLT_DiPFJetAve200_) {
        if (!b_HLT_DiPFJetAve200_) throw std::runtime_error("HLT_DiPFJetAve200 branch doesn't exist");
        b_HLT_DiPFJetAve200_->GetEntry(index);
        loaded_HLT_DiPFJetAve200_ = true;
    }
    return HLT_DiPFJetAve200_;
}
const bool &Nano::HLT_DiPFJetAve220_HFJEC() {
    if (!loaded_HLT_DiPFJetAve220_HFJEC_) counter_uncached_HLT_DiPFJetAve220_HFJEC_++;
    else counter_cached_HLT_DiPFJetAve220_HFJEC_++;
    if (!loaded_HLT_DiPFJetAve220_HFJEC_) {
        if (!b_HLT_DiPFJetAve220_HFJEC_) throw std::runtime_error("HLT_DiPFJetAve220_HFJEC branch doesn't exist");
        b_HLT_DiPFJetAve220_HFJEC_->GetEntry(index);
        loaded_HLT_DiPFJetAve220_HFJEC_ = true;
    }
    return HLT_DiPFJetAve220_HFJEC_;
}
const bool &Nano::HLT_DiPFJetAve25_HFJEC() {
    if (!loaded_HLT_DiPFJetAve25_HFJEC_) counter_uncached_HLT_DiPFJetAve25_HFJEC_++;
    else counter_cached_HLT_DiPFJetAve25_HFJEC_++;
    if (!loaded_HLT_DiPFJetAve25_HFJEC_) {
        if (!b_HLT_DiPFJetAve25_HFJEC_) throw std::runtime_error("HLT_DiPFJetAve25_HFJEC branch doesn't exist");
        b_HLT_DiPFJetAve25_HFJEC_->GetEntry(index);
        loaded_HLT_DiPFJetAve25_HFJEC_ = true;
    }
    return HLT_DiPFJetAve25_HFJEC_;
}
const bool &Nano::HLT_DiPFJetAve260() {
    if (!loaded_HLT_DiPFJetAve260_) counter_uncached_HLT_DiPFJetAve260_++;
    else counter_cached_HLT_DiPFJetAve260_++;
    if (!loaded_HLT_DiPFJetAve260_) {
        if (!b_HLT_DiPFJetAve260_) throw std::runtime_error("HLT_DiPFJetAve260 branch doesn't exist");
        b_HLT_DiPFJetAve260_->GetEntry(index);
        loaded_HLT_DiPFJetAve260_ = true;
    }
    return HLT_DiPFJetAve260_;
}
const bool &Nano::HLT_DiPFJetAve260_HFJEC() {
    if (!loaded_HLT_DiPFJetAve260_HFJEC_) counter_uncached_HLT_DiPFJetAve260_HFJEC_++;
    else counter_cached_HLT_DiPFJetAve260_HFJEC_++;
    if (!loaded_HLT_DiPFJetAve260_HFJEC_) {
        if (!b_HLT_DiPFJetAve260_HFJEC_) throw std::runtime_error("HLT_DiPFJetAve260_HFJEC branch doesn't exist");
        b_HLT_DiPFJetAve260_HFJEC_->GetEntry(index);
        loaded_HLT_DiPFJetAve260_HFJEC_ = true;
    }
    return HLT_DiPFJetAve260_HFJEC_;
}
const bool &Nano::HLT_DiPFJetAve300_HFJEC() {
    if (!loaded_HLT_DiPFJetAve300_HFJEC_) counter_uncached_HLT_DiPFJetAve300_HFJEC_++;
    else counter_cached_HLT_DiPFJetAve300_HFJEC_++;
    if (!loaded_HLT_DiPFJetAve300_HFJEC_) {
        if (!b_HLT_DiPFJetAve300_HFJEC_) throw std::runtime_error("HLT_DiPFJetAve300_HFJEC branch doesn't exist");
        b_HLT_DiPFJetAve300_HFJEC_->GetEntry(index);
        loaded_HLT_DiPFJetAve300_HFJEC_ = true;
    }
    return HLT_DiPFJetAve300_HFJEC_;
}
const bool &Nano::HLT_DiPFJetAve320() {
    if (!loaded_HLT_DiPFJetAve320_) counter_uncached_HLT_DiPFJetAve320_++;
    else counter_cached_HLT_DiPFJetAve320_++;
    if (!loaded_HLT_DiPFJetAve320_) {
        if (!b_HLT_DiPFJetAve320_) throw std::runtime_error("HLT_DiPFJetAve320 branch doesn't exist");
        b_HLT_DiPFJetAve320_->GetEntry(index);
        loaded_HLT_DiPFJetAve320_ = true;
    }
    return HLT_DiPFJetAve320_;
}
const bool &Nano::HLT_DiPFJetAve35_HFJEC() {
    if (!loaded_HLT_DiPFJetAve35_HFJEC_) counter_uncached_HLT_DiPFJetAve35_HFJEC_++;
    else counter_cached_HLT_DiPFJetAve35_HFJEC_++;
    if (!loaded_HLT_DiPFJetAve35_HFJEC_) {
        if (!b_HLT_DiPFJetAve35_HFJEC_) throw std::runtime_error("HLT_DiPFJetAve35_HFJEC branch doesn't exist");
        b_HLT_DiPFJetAve35_HFJEC_->GetEntry(index);
        loaded_HLT_DiPFJetAve35_HFJEC_ = true;
    }
    return HLT_DiPFJetAve35_HFJEC_;
}
const bool &Nano::HLT_DiPFJetAve40() {
    if (!loaded_HLT_DiPFJetAve40_) counter_uncached_HLT_DiPFJetAve40_++;
    else counter_cached_HLT_DiPFJetAve40_++;
    if (!loaded_HLT_DiPFJetAve40_) {
        if (!b_HLT_DiPFJetAve40_) throw std::runtime_error("HLT_DiPFJetAve40 branch doesn't exist");
        b_HLT_DiPFJetAve40_->GetEntry(index);
        loaded_HLT_DiPFJetAve40_ = true;
    }
    return HLT_DiPFJetAve40_;
}
const bool &Nano::HLT_DiPFJetAve400() {
    if (!loaded_HLT_DiPFJetAve400_) counter_uncached_HLT_DiPFJetAve400_++;
    else counter_cached_HLT_DiPFJetAve400_++;
    if (!loaded_HLT_DiPFJetAve400_) {
        if (!b_HLT_DiPFJetAve400_) throw std::runtime_error("HLT_DiPFJetAve400 branch doesn't exist");
        b_HLT_DiPFJetAve400_->GetEntry(index);
        loaded_HLT_DiPFJetAve400_ = true;
    }
    return HLT_DiPFJetAve400_;
}
const bool &Nano::HLT_DiPFJetAve500() {
    if (!loaded_HLT_DiPFJetAve500_) counter_uncached_HLT_DiPFJetAve500_++;
    else counter_cached_HLT_DiPFJetAve500_++;
    if (!loaded_HLT_DiPFJetAve500_) {
        if (!b_HLT_DiPFJetAve500_) throw std::runtime_error("HLT_DiPFJetAve500 branch doesn't exist");
        b_HLT_DiPFJetAve500_->GetEntry(index);
        loaded_HLT_DiPFJetAve500_ = true;
    }
    return HLT_DiPFJetAve500_;
}
const bool &Nano::HLT_DiPFJetAve60() {
    if (!loaded_HLT_DiPFJetAve60_) counter_uncached_HLT_DiPFJetAve60_++;
    else counter_cached_HLT_DiPFJetAve60_++;
    if (!loaded_HLT_DiPFJetAve60_) {
        if (!b_HLT_DiPFJetAve60_) throw std::runtime_error("HLT_DiPFJetAve60 branch doesn't exist");
        b_HLT_DiPFJetAve60_->GetEntry(index);
        loaded_HLT_DiPFJetAve60_ = true;
    }
    return HLT_DiPFJetAve60_;
}
const bool &Nano::HLT_DiPFJetAve60_HFJEC() {
    if (!loaded_HLT_DiPFJetAve60_HFJEC_) counter_uncached_HLT_DiPFJetAve60_HFJEC_++;
    else counter_cached_HLT_DiPFJetAve60_HFJEC_++;
    if (!loaded_HLT_DiPFJetAve60_HFJEC_) {
        if (!b_HLT_DiPFJetAve60_HFJEC_) throw std::runtime_error("HLT_DiPFJetAve60_HFJEC branch doesn't exist");
        b_HLT_DiPFJetAve60_HFJEC_->GetEntry(index);
        loaded_HLT_DiPFJetAve60_HFJEC_ = true;
    }
    return HLT_DiPFJetAve60_HFJEC_;
}
const bool &Nano::HLT_DiPFJetAve80() {
    if (!loaded_HLT_DiPFJetAve80_) counter_uncached_HLT_DiPFJetAve80_++;
    else counter_cached_HLT_DiPFJetAve80_++;
    if (!loaded_HLT_DiPFJetAve80_) {
        if (!b_HLT_DiPFJetAve80_) throw std::runtime_error("HLT_DiPFJetAve80 branch doesn't exist");
        b_HLT_DiPFJetAve80_->GetEntry(index);
        loaded_HLT_DiPFJetAve80_ = true;
    }
    return HLT_DiPFJetAve80_;
}
const bool &Nano::HLT_DiPFJetAve80_HFJEC() {
    if (!loaded_HLT_DiPFJetAve80_HFJEC_) counter_uncached_HLT_DiPFJetAve80_HFJEC_++;
    else counter_cached_HLT_DiPFJetAve80_HFJEC_++;
    if (!loaded_HLT_DiPFJetAve80_HFJEC_) {
        if (!b_HLT_DiPFJetAve80_HFJEC_) throw std::runtime_error("HLT_DiPFJetAve80_HFJEC branch doesn't exist");
        b_HLT_DiPFJetAve80_HFJEC_->GetEntry(index);
        loaded_HLT_DiPFJetAve80_HFJEC_ = true;
    }
    return HLT_DiPFJetAve80_HFJEC_;
}
const bool &Nano::HLT_DiPhoton10Time1ns() {
    if (!loaded_HLT_DiPhoton10Time1ns_) counter_uncached_HLT_DiPhoton10Time1ns_++;
    else counter_cached_HLT_DiPhoton10Time1ns_++;
    if (!loaded_HLT_DiPhoton10Time1ns_) {
        if (!b_HLT_DiPhoton10Time1ns_) throw std::runtime_error("HLT_DiPhoton10Time1ns branch doesn't exist");
        b_HLT_DiPhoton10Time1ns_->GetEntry(index);
        loaded_HLT_DiPhoton10Time1ns_ = true;
    }
    return HLT_DiPhoton10Time1ns_;
}
const bool &Nano::HLT_DiPhoton10Time1p2ns() {
    if (!loaded_HLT_DiPhoton10Time1p2ns_) counter_uncached_HLT_DiPhoton10Time1p2ns_++;
    else counter_cached_HLT_DiPhoton10Time1p2ns_++;
    if (!loaded_HLT_DiPhoton10Time1p2ns_) {
        if (!b_HLT_DiPhoton10Time1p2ns_) throw std::runtime_error("HLT_DiPhoton10Time1p2ns branch doesn't exist");
        b_HLT_DiPhoton10Time1p2ns_->GetEntry(index);
        loaded_HLT_DiPhoton10Time1p2ns_ = true;
    }
    return HLT_DiPhoton10Time1p2ns_;
}
const bool &Nano::HLT_DiPhoton10Time1p4ns() {
    if (!loaded_HLT_DiPhoton10Time1p4ns_) counter_uncached_HLT_DiPhoton10Time1p4ns_++;
    else counter_cached_HLT_DiPhoton10Time1p4ns_++;
    if (!loaded_HLT_DiPhoton10Time1p4ns_) {
        if (!b_HLT_DiPhoton10Time1p4ns_) throw std::runtime_error("HLT_DiPhoton10Time1p4ns branch doesn't exist");
        b_HLT_DiPhoton10Time1p4ns_->GetEntry(index);
        loaded_HLT_DiPhoton10Time1p4ns_ = true;
    }
    return HLT_DiPhoton10Time1p4ns_;
}
const bool &Nano::HLT_DiPhoton10Time1p6ns() {
    if (!loaded_HLT_DiPhoton10Time1p6ns_) counter_uncached_HLT_DiPhoton10Time1p6ns_++;
    else counter_cached_HLT_DiPhoton10Time1p6ns_++;
    if (!loaded_HLT_DiPhoton10Time1p6ns_) {
        if (!b_HLT_DiPhoton10Time1p6ns_) throw std::runtime_error("HLT_DiPhoton10Time1p6ns branch doesn't exist");
        b_HLT_DiPhoton10Time1p6ns_->GetEntry(index);
        loaded_HLT_DiPhoton10Time1p6ns_ = true;
    }
    return HLT_DiPhoton10Time1p6ns_;
}
const bool &Nano::HLT_DiPhoton10Time1p8ns() {
    if (!loaded_HLT_DiPhoton10Time1p8ns_) counter_uncached_HLT_DiPhoton10Time1p8ns_++;
    else counter_cached_HLT_DiPhoton10Time1p8ns_++;
    if (!loaded_HLT_DiPhoton10Time1p8ns_) {
        if (!b_HLT_DiPhoton10Time1p8ns_) throw std::runtime_error("HLT_DiPhoton10Time1p8ns branch doesn't exist");
        b_HLT_DiPhoton10Time1p8ns_->GetEntry(index);
        loaded_HLT_DiPhoton10Time1p8ns_ = true;
    }
    return HLT_DiPhoton10Time1p8ns_;
}
const bool &Nano::HLT_DiPhoton10Time2ns() {
    if (!loaded_HLT_DiPhoton10Time2ns_) counter_uncached_HLT_DiPhoton10Time2ns_++;
    else counter_cached_HLT_DiPhoton10Time2ns_++;
    if (!loaded_HLT_DiPhoton10Time2ns_) {
        if (!b_HLT_DiPhoton10Time2ns_) throw std::runtime_error("HLT_DiPhoton10Time2ns branch doesn't exist");
        b_HLT_DiPhoton10Time2ns_->GetEntry(index);
        loaded_HLT_DiPhoton10Time2ns_ = true;
    }
    return HLT_DiPhoton10Time2ns_;
}
const bool &Nano::HLT_DiPhoton10_CaloIdL() {
    if (!loaded_HLT_DiPhoton10_CaloIdL_) counter_uncached_HLT_DiPhoton10_CaloIdL_++;
    else counter_cached_HLT_DiPhoton10_CaloIdL_++;
    if (!loaded_HLT_DiPhoton10_CaloIdL_) {
        if (!b_HLT_DiPhoton10_CaloIdL_) throw std::runtime_error("HLT_DiPhoton10_CaloIdL branch doesn't exist");
        b_HLT_DiPhoton10_CaloIdL_->GetEntry(index);
        loaded_HLT_DiPhoton10_CaloIdL_ = true;
    }
    return HLT_DiPhoton10_CaloIdL_;
}
const bool &Nano::HLT_DiPhoton10sminlt0p1() {
    if (!loaded_HLT_DiPhoton10sminlt0p1_) counter_uncached_HLT_DiPhoton10sminlt0p1_++;
    else counter_cached_HLT_DiPhoton10sminlt0p1_++;
    if (!loaded_HLT_DiPhoton10sminlt0p1_) {
        if (!b_HLT_DiPhoton10sminlt0p1_) throw std::runtime_error("HLT_DiPhoton10sminlt0p1 branch doesn't exist");
        b_HLT_DiPhoton10sminlt0p1_->GetEntry(index);
        loaded_HLT_DiPhoton10sminlt0p1_ = true;
    }
    return HLT_DiPhoton10sminlt0p1_;
}
const bool &Nano::HLT_DiPhoton10sminlt0p12() {
    if (!loaded_HLT_DiPhoton10sminlt0p12_) counter_uncached_HLT_DiPhoton10sminlt0p12_++;
    else counter_cached_HLT_DiPhoton10sminlt0p12_++;
    if (!loaded_HLT_DiPhoton10sminlt0p12_) {
        if (!b_HLT_DiPhoton10sminlt0p12_) throw std::runtime_error("HLT_DiPhoton10sminlt0p12 branch doesn't exist");
        b_HLT_DiPhoton10sminlt0p12_->GetEntry(index);
        loaded_HLT_DiPhoton10sminlt0p12_ = true;
    }
    return HLT_DiPhoton10sminlt0p12_;
}
const bool &Nano::HLT_DiSC30_18_EIso_AND_HE_Mass70() {
    if (!loaded_HLT_DiSC30_18_EIso_AND_HE_Mass70_) counter_uncached_HLT_DiSC30_18_EIso_AND_HE_Mass70_++;
    else counter_cached_HLT_DiSC30_18_EIso_AND_HE_Mass70_++;
    if (!loaded_HLT_DiSC30_18_EIso_AND_HE_Mass70_) {
        if (!b_HLT_DiSC30_18_EIso_AND_HE_Mass70_) throw std::runtime_error("HLT_DiSC30_18_EIso_AND_HE_Mass70 branch doesn't exist");
        b_HLT_DiSC30_18_EIso_AND_HE_Mass70_->GetEntry(index);
        loaded_HLT_DiSC30_18_EIso_AND_HE_Mass70_ = true;
    }
    return HLT_DiSC30_18_EIso_AND_HE_Mass70_;
}
const bool &Nano::HLT_Dimuon0_Jpsi() {
    if (!loaded_HLT_Dimuon0_Jpsi_) counter_uncached_HLT_Dimuon0_Jpsi_++;
    else counter_cached_HLT_Dimuon0_Jpsi_++;
    if (!loaded_HLT_Dimuon0_Jpsi_) {
        if (!b_HLT_Dimuon0_Jpsi_) throw std::runtime_error("HLT_Dimuon0_Jpsi branch doesn't exist");
        b_HLT_Dimuon0_Jpsi_->GetEntry(index);
        loaded_HLT_Dimuon0_Jpsi_ = true;
    }
    return HLT_Dimuon0_Jpsi_;
}
const bool &Nano::HLT_Dimuon0_Jpsi3p5_Muon2() {
    if (!loaded_HLT_Dimuon0_Jpsi3p5_Muon2_) counter_uncached_HLT_Dimuon0_Jpsi3p5_Muon2_++;
    else counter_cached_HLT_Dimuon0_Jpsi3p5_Muon2_++;
    if (!loaded_HLT_Dimuon0_Jpsi3p5_Muon2_) {
        if (!b_HLT_Dimuon0_Jpsi3p5_Muon2_) throw std::runtime_error("HLT_Dimuon0_Jpsi3p5_Muon2 branch doesn't exist");
        b_HLT_Dimuon0_Jpsi3p5_Muon2_->GetEntry(index);
        loaded_HLT_Dimuon0_Jpsi3p5_Muon2_ = true;
    }
    return HLT_Dimuon0_Jpsi3p5_Muon2_;
}
const bool &Nano::HLT_Dimuon0_Jpsi_L1_4R_0er1p5R() {
    if (!loaded_HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_) counter_uncached_HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_++;
    else counter_cached_HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_++;
    if (!loaded_HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_) {
        if (!b_HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_) throw std::runtime_error("HLT_Dimuon0_Jpsi_L1_4R_0er1p5R branch doesn't exist");
        b_HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_->GetEntry(index);
        loaded_HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_ = true;
    }
    return HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_;
}
const bool &Nano::HLT_Dimuon0_Jpsi_L1_NoOS() {
    if (!loaded_HLT_Dimuon0_Jpsi_L1_NoOS_) counter_uncached_HLT_Dimuon0_Jpsi_L1_NoOS_++;
    else counter_cached_HLT_Dimuon0_Jpsi_L1_NoOS_++;
    if (!loaded_HLT_Dimuon0_Jpsi_L1_NoOS_) {
        if (!b_HLT_Dimuon0_Jpsi_L1_NoOS_) throw std::runtime_error("HLT_Dimuon0_Jpsi_L1_NoOS branch doesn't exist");
        b_HLT_Dimuon0_Jpsi_L1_NoOS_->GetEntry(index);
        loaded_HLT_Dimuon0_Jpsi_L1_NoOS_ = true;
    }
    return HLT_Dimuon0_Jpsi_L1_NoOS_;
}
const bool &Nano::HLT_Dimuon0_Jpsi_Muon() {
    if (!loaded_HLT_Dimuon0_Jpsi_Muon_) counter_uncached_HLT_Dimuon0_Jpsi_Muon_++;
    else counter_cached_HLT_Dimuon0_Jpsi_Muon_++;
    if (!loaded_HLT_Dimuon0_Jpsi_Muon_) {
        if (!b_HLT_Dimuon0_Jpsi_Muon_) throw std::runtime_error("HLT_Dimuon0_Jpsi_Muon branch doesn't exist");
        b_HLT_Dimuon0_Jpsi_Muon_->GetEntry(index);
        loaded_HLT_Dimuon0_Jpsi_Muon_ = true;
    }
    return HLT_Dimuon0_Jpsi_Muon_;
}
const bool &Nano::HLT_Dimuon0_Jpsi_NoVertexing() {
    if (!loaded_HLT_Dimuon0_Jpsi_NoVertexing_) counter_uncached_HLT_Dimuon0_Jpsi_NoVertexing_++;
    else counter_cached_HLT_Dimuon0_Jpsi_NoVertexing_++;
    if (!loaded_HLT_Dimuon0_Jpsi_NoVertexing_) {
        if (!b_HLT_Dimuon0_Jpsi_NoVertexing_) throw std::runtime_error("HLT_Dimuon0_Jpsi_NoVertexing branch doesn't exist");
        b_HLT_Dimuon0_Jpsi_NoVertexing_->GetEntry(index);
        loaded_HLT_Dimuon0_Jpsi_NoVertexing_ = true;
    }
    return HLT_Dimuon0_Jpsi_NoVertexing_;
}
const bool &Nano::HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R() {
    if (!loaded_HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_) counter_uncached_HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_++;
    else counter_cached_HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_++;
    if (!loaded_HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_) {
        if (!b_HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_) throw std::runtime_error("HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R branch doesn't exist");
        b_HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_->GetEntry(index);
        loaded_HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_ = true;
    }
    return HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_;
}
const bool &Nano::HLT_Dimuon0_Jpsi_NoVertexing_NoOS() {
    if (!loaded_HLT_Dimuon0_Jpsi_NoVertexing_NoOS_) counter_uncached_HLT_Dimuon0_Jpsi_NoVertexing_NoOS_++;
    else counter_cached_HLT_Dimuon0_Jpsi_NoVertexing_NoOS_++;
    if (!loaded_HLT_Dimuon0_Jpsi_NoVertexing_NoOS_) {
        if (!b_HLT_Dimuon0_Jpsi_NoVertexing_NoOS_) throw std::runtime_error("HLT_Dimuon0_Jpsi_NoVertexing_NoOS branch doesn't exist");
        b_HLT_Dimuon0_Jpsi_NoVertexing_NoOS_->GetEntry(index);
        loaded_HLT_Dimuon0_Jpsi_NoVertexing_NoOS_ = true;
    }
    return HLT_Dimuon0_Jpsi_NoVertexing_NoOS_;
}
const bool &Nano::HLT_Dimuon0_LowMass() {
    if (!loaded_HLT_Dimuon0_LowMass_) counter_uncached_HLT_Dimuon0_LowMass_++;
    else counter_cached_HLT_Dimuon0_LowMass_++;
    if (!loaded_HLT_Dimuon0_LowMass_) {
        if (!b_HLT_Dimuon0_LowMass_) throw std::runtime_error("HLT_Dimuon0_LowMass branch doesn't exist");
        b_HLT_Dimuon0_LowMass_->GetEntry(index);
        loaded_HLT_Dimuon0_LowMass_ = true;
    }
    return HLT_Dimuon0_LowMass_;
}
const bool &Nano::HLT_Dimuon0_LowMass_L1_0er1p5() {
    if (!loaded_HLT_Dimuon0_LowMass_L1_0er1p5_) counter_uncached_HLT_Dimuon0_LowMass_L1_0er1p5_++;
    else counter_cached_HLT_Dimuon0_LowMass_L1_0er1p5_++;
    if (!loaded_HLT_Dimuon0_LowMass_L1_0er1p5_) {
        if (!b_HLT_Dimuon0_LowMass_L1_0er1p5_) throw std::runtime_error("HLT_Dimuon0_LowMass_L1_0er1p5 branch doesn't exist");
        b_HLT_Dimuon0_LowMass_L1_0er1p5_->GetEntry(index);
        loaded_HLT_Dimuon0_LowMass_L1_0er1p5_ = true;
    }
    return HLT_Dimuon0_LowMass_L1_0er1p5_;
}
const bool &Nano::HLT_Dimuon0_LowMass_L1_0er1p5R() {
    if (!loaded_HLT_Dimuon0_LowMass_L1_0er1p5R_) counter_uncached_HLT_Dimuon0_LowMass_L1_0er1p5R_++;
    else counter_cached_HLT_Dimuon0_LowMass_L1_0er1p5R_++;
    if (!loaded_HLT_Dimuon0_LowMass_L1_0er1p5R_) {
        if (!b_HLT_Dimuon0_LowMass_L1_0er1p5R_) throw std::runtime_error("HLT_Dimuon0_LowMass_L1_0er1p5R branch doesn't exist");
        b_HLT_Dimuon0_LowMass_L1_0er1p5R_->GetEntry(index);
        loaded_HLT_Dimuon0_LowMass_L1_0er1p5R_ = true;
    }
    return HLT_Dimuon0_LowMass_L1_0er1p5R_;
}
const bool &Nano::HLT_Dimuon0_LowMass_L1_4() {
    if (!loaded_HLT_Dimuon0_LowMass_L1_4_) counter_uncached_HLT_Dimuon0_LowMass_L1_4_++;
    else counter_cached_HLT_Dimuon0_LowMass_L1_4_++;
    if (!loaded_HLT_Dimuon0_LowMass_L1_4_) {
        if (!b_HLT_Dimuon0_LowMass_L1_4_) throw std::runtime_error("HLT_Dimuon0_LowMass_L1_4 branch doesn't exist");
        b_HLT_Dimuon0_LowMass_L1_4_->GetEntry(index);
        loaded_HLT_Dimuon0_LowMass_L1_4_ = true;
    }
    return HLT_Dimuon0_LowMass_L1_4_;
}
const bool &Nano::HLT_Dimuon0_LowMass_L1_4R() {
    if (!loaded_HLT_Dimuon0_LowMass_L1_4R_) counter_uncached_HLT_Dimuon0_LowMass_L1_4R_++;
    else counter_cached_HLT_Dimuon0_LowMass_L1_4R_++;
    if (!loaded_HLT_Dimuon0_LowMass_L1_4R_) {
        if (!b_HLT_Dimuon0_LowMass_L1_4R_) throw std::runtime_error("HLT_Dimuon0_LowMass_L1_4R branch doesn't exist");
        b_HLT_Dimuon0_LowMass_L1_4R_->GetEntry(index);
        loaded_HLT_Dimuon0_LowMass_L1_4R_ = true;
    }
    return HLT_Dimuon0_LowMass_L1_4R_;
}
const bool &Nano::HLT_Dimuon0_LowMass_L1_TM530() {
    if (!loaded_HLT_Dimuon0_LowMass_L1_TM530_) counter_uncached_HLT_Dimuon0_LowMass_L1_TM530_++;
    else counter_cached_HLT_Dimuon0_LowMass_L1_TM530_++;
    if (!loaded_HLT_Dimuon0_LowMass_L1_TM530_) {
        if (!b_HLT_Dimuon0_LowMass_L1_TM530_) throw std::runtime_error("HLT_Dimuon0_LowMass_L1_TM530 branch doesn't exist");
        b_HLT_Dimuon0_LowMass_L1_TM530_->GetEntry(index);
        loaded_HLT_Dimuon0_LowMass_L1_TM530_ = true;
    }
    return HLT_Dimuon0_LowMass_L1_TM530_;
}
const bool &Nano::HLT_Dimuon0_Phi_Barrel() {
    if (!loaded_HLT_Dimuon0_Phi_Barrel_) counter_uncached_HLT_Dimuon0_Phi_Barrel_++;
    else counter_cached_HLT_Dimuon0_Phi_Barrel_++;
    if (!loaded_HLT_Dimuon0_Phi_Barrel_) {
        if (!b_HLT_Dimuon0_Phi_Barrel_) throw std::runtime_error("HLT_Dimuon0_Phi_Barrel branch doesn't exist");
        b_HLT_Dimuon0_Phi_Barrel_->GetEntry(index);
        loaded_HLT_Dimuon0_Phi_Barrel_ = true;
    }
    return HLT_Dimuon0_Phi_Barrel_;
}
const bool &Nano::HLT_Dimuon0_Upsilon_L1_4p5() {
    if (!loaded_HLT_Dimuon0_Upsilon_L1_4p5_) counter_uncached_HLT_Dimuon0_Upsilon_L1_4p5_++;
    else counter_cached_HLT_Dimuon0_Upsilon_L1_4p5_++;
    if (!loaded_HLT_Dimuon0_Upsilon_L1_4p5_) {
        if (!b_HLT_Dimuon0_Upsilon_L1_4p5_) throw std::runtime_error("HLT_Dimuon0_Upsilon_L1_4p5 branch doesn't exist");
        b_HLT_Dimuon0_Upsilon_L1_4p5_->GetEntry(index);
        loaded_HLT_Dimuon0_Upsilon_L1_4p5_ = true;
    }
    return HLT_Dimuon0_Upsilon_L1_4p5_;
}
const bool &Nano::HLT_Dimuon0_Upsilon_L1_4p5NoOS() {
    if (!loaded_HLT_Dimuon0_Upsilon_L1_4p5NoOS_) counter_uncached_HLT_Dimuon0_Upsilon_L1_4p5NoOS_++;
    else counter_cached_HLT_Dimuon0_Upsilon_L1_4p5NoOS_++;
    if (!loaded_HLT_Dimuon0_Upsilon_L1_4p5NoOS_) {
        if (!b_HLT_Dimuon0_Upsilon_L1_4p5NoOS_) throw std::runtime_error("HLT_Dimuon0_Upsilon_L1_4p5NoOS branch doesn't exist");
        b_HLT_Dimuon0_Upsilon_L1_4p5NoOS_->GetEntry(index);
        loaded_HLT_Dimuon0_Upsilon_L1_4p5NoOS_ = true;
    }
    return HLT_Dimuon0_Upsilon_L1_4p5NoOS_;
}
const bool &Nano::HLT_Dimuon0_Upsilon_L1_4p5er2p0() {
    if (!loaded_HLT_Dimuon0_Upsilon_L1_4p5er2p0_) counter_uncached_HLT_Dimuon0_Upsilon_L1_4p5er2p0_++;
    else counter_cached_HLT_Dimuon0_Upsilon_L1_4p5er2p0_++;
    if (!loaded_HLT_Dimuon0_Upsilon_L1_4p5er2p0_) {
        if (!b_HLT_Dimuon0_Upsilon_L1_4p5er2p0_) throw std::runtime_error("HLT_Dimuon0_Upsilon_L1_4p5er2p0 branch doesn't exist");
        b_HLT_Dimuon0_Upsilon_L1_4p5er2p0_->GetEntry(index);
        loaded_HLT_Dimuon0_Upsilon_L1_4p5er2p0_ = true;
    }
    return HLT_Dimuon0_Upsilon_L1_4p5er2p0_;
}
const bool &Nano::HLT_Dimuon0_Upsilon_L1_4p5er2p0M() {
    if (!loaded_HLT_Dimuon0_Upsilon_L1_4p5er2p0M_) counter_uncached_HLT_Dimuon0_Upsilon_L1_4p5er2p0M_++;
    else counter_cached_HLT_Dimuon0_Upsilon_L1_4p5er2p0M_++;
    if (!loaded_HLT_Dimuon0_Upsilon_L1_4p5er2p0M_) {
        if (!b_HLT_Dimuon0_Upsilon_L1_4p5er2p0M_) throw std::runtime_error("HLT_Dimuon0_Upsilon_L1_4p5er2p0M branch doesn't exist");
        b_HLT_Dimuon0_Upsilon_L1_4p5er2p0M_->GetEntry(index);
        loaded_HLT_Dimuon0_Upsilon_L1_4p5er2p0M_ = true;
    }
    return HLT_Dimuon0_Upsilon_L1_4p5er2p0M_;
}
const bool &Nano::HLT_Dimuon0_Upsilon_L1_5() {
    if (!loaded_HLT_Dimuon0_Upsilon_L1_5_) counter_uncached_HLT_Dimuon0_Upsilon_L1_5_++;
    else counter_cached_HLT_Dimuon0_Upsilon_L1_5_++;
    if (!loaded_HLT_Dimuon0_Upsilon_L1_5_) {
        if (!b_HLT_Dimuon0_Upsilon_L1_5_) throw std::runtime_error("HLT_Dimuon0_Upsilon_L1_5 branch doesn't exist");
        b_HLT_Dimuon0_Upsilon_L1_5_->GetEntry(index);
        loaded_HLT_Dimuon0_Upsilon_L1_5_ = true;
    }
    return HLT_Dimuon0_Upsilon_L1_5_;
}
const bool &Nano::HLT_Dimuon0_Upsilon_L1_5M() {
    if (!loaded_HLT_Dimuon0_Upsilon_L1_5M_) counter_uncached_HLT_Dimuon0_Upsilon_L1_5M_++;
    else counter_cached_HLT_Dimuon0_Upsilon_L1_5M_++;
    if (!loaded_HLT_Dimuon0_Upsilon_L1_5M_) {
        if (!b_HLT_Dimuon0_Upsilon_L1_5M_) throw std::runtime_error("HLT_Dimuon0_Upsilon_L1_5M branch doesn't exist");
        b_HLT_Dimuon0_Upsilon_L1_5M_->GetEntry(index);
        loaded_HLT_Dimuon0_Upsilon_L1_5M_ = true;
    }
    return HLT_Dimuon0_Upsilon_L1_5M_;
}
const bool &Nano::HLT_Dimuon0_Upsilon_Muon() {
    if (!loaded_HLT_Dimuon0_Upsilon_Muon_) counter_uncached_HLT_Dimuon0_Upsilon_Muon_++;
    else counter_cached_HLT_Dimuon0_Upsilon_Muon_++;
    if (!loaded_HLT_Dimuon0_Upsilon_Muon_) {
        if (!b_HLT_Dimuon0_Upsilon_Muon_) throw std::runtime_error("HLT_Dimuon0_Upsilon_Muon branch doesn't exist");
        b_HLT_Dimuon0_Upsilon_Muon_->GetEntry(index);
        loaded_HLT_Dimuon0_Upsilon_Muon_ = true;
    }
    return HLT_Dimuon0_Upsilon_Muon_;
}
const bool &Nano::HLT_Dimuon0_Upsilon_Muon_L1_TM0() {
    if (!loaded_HLT_Dimuon0_Upsilon_Muon_L1_TM0_) counter_uncached_HLT_Dimuon0_Upsilon_Muon_L1_TM0_++;
    else counter_cached_HLT_Dimuon0_Upsilon_Muon_L1_TM0_++;
    if (!loaded_HLT_Dimuon0_Upsilon_Muon_L1_TM0_) {
        if (!b_HLT_Dimuon0_Upsilon_Muon_L1_TM0_) throw std::runtime_error("HLT_Dimuon0_Upsilon_Muon_L1_TM0 branch doesn't exist");
        b_HLT_Dimuon0_Upsilon_Muon_L1_TM0_->GetEntry(index);
        loaded_HLT_Dimuon0_Upsilon_Muon_L1_TM0_ = true;
    }
    return HLT_Dimuon0_Upsilon_Muon_L1_TM0_;
}
const bool &Nano::HLT_Dimuon0_Upsilon_Muon_NoL1Mass() {
    if (!loaded_HLT_Dimuon0_Upsilon_Muon_NoL1Mass_) counter_uncached_HLT_Dimuon0_Upsilon_Muon_NoL1Mass_++;
    else counter_cached_HLT_Dimuon0_Upsilon_Muon_NoL1Mass_++;
    if (!loaded_HLT_Dimuon0_Upsilon_Muon_NoL1Mass_) {
        if (!b_HLT_Dimuon0_Upsilon_Muon_NoL1Mass_) throw std::runtime_error("HLT_Dimuon0_Upsilon_Muon_NoL1Mass branch doesn't exist");
        b_HLT_Dimuon0_Upsilon_Muon_NoL1Mass_->GetEntry(index);
        loaded_HLT_Dimuon0_Upsilon_Muon_NoL1Mass_ = true;
    }
    return HLT_Dimuon0_Upsilon_Muon_NoL1Mass_;
}
const bool &Nano::HLT_Dimuon0_Upsilon_NoVertexing() {
    if (!loaded_HLT_Dimuon0_Upsilon_NoVertexing_) counter_uncached_HLT_Dimuon0_Upsilon_NoVertexing_++;
    else counter_cached_HLT_Dimuon0_Upsilon_NoVertexing_++;
    if (!loaded_HLT_Dimuon0_Upsilon_NoVertexing_) {
        if (!b_HLT_Dimuon0_Upsilon_NoVertexing_) throw std::runtime_error("HLT_Dimuon0_Upsilon_NoVertexing branch doesn't exist");
        b_HLT_Dimuon0_Upsilon_NoVertexing_->GetEntry(index);
        loaded_HLT_Dimuon0_Upsilon_NoVertexing_ = true;
    }
    return HLT_Dimuon0_Upsilon_NoVertexing_;
}
const bool &Nano::HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing() {
    if (!loaded_HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing_) counter_uncached_HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing_++;
    else counter_cached_HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing_++;
    if (!loaded_HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing_) {
        if (!b_HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing_) throw std::runtime_error("HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing branch doesn't exist");
        b_HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing_->GetEntry(index);
        loaded_HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing_ = true;
    }
    return HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing_;
}
const bool &Nano::HLT_Dimuon0er16_Jpsi_NoVertexing() {
    if (!loaded_HLT_Dimuon0er16_Jpsi_NoVertexing_) counter_uncached_HLT_Dimuon0er16_Jpsi_NoVertexing_++;
    else counter_cached_HLT_Dimuon0er16_Jpsi_NoVertexing_++;
    if (!loaded_HLT_Dimuon0er16_Jpsi_NoVertexing_) {
        if (!b_HLT_Dimuon0er16_Jpsi_NoVertexing_) throw std::runtime_error("HLT_Dimuon0er16_Jpsi_NoVertexing branch doesn't exist");
        b_HLT_Dimuon0er16_Jpsi_NoVertexing_->GetEntry(index);
        loaded_HLT_Dimuon0er16_Jpsi_NoVertexing_ = true;
    }
    return HLT_Dimuon0er16_Jpsi_NoVertexing_;
}
const bool &Nano::HLT_Dimuon10_Jpsi_Barrel() {
    if (!loaded_HLT_Dimuon10_Jpsi_Barrel_) counter_uncached_HLT_Dimuon10_Jpsi_Barrel_++;
    else counter_cached_HLT_Dimuon10_Jpsi_Barrel_++;
    if (!loaded_HLT_Dimuon10_Jpsi_Barrel_) {
        if (!b_HLT_Dimuon10_Jpsi_Barrel_) throw std::runtime_error("HLT_Dimuon10_Jpsi_Barrel branch doesn't exist");
        b_HLT_Dimuon10_Jpsi_Barrel_->GetEntry(index);
        loaded_HLT_Dimuon10_Jpsi_Barrel_ = true;
    }
    return HLT_Dimuon10_Jpsi_Barrel_;
}
const bool &Nano::HLT_Dimuon10_PsiPrime_Barrel_Seagulls() {
    if (!loaded_HLT_Dimuon10_PsiPrime_Barrel_Seagulls_) counter_uncached_HLT_Dimuon10_PsiPrime_Barrel_Seagulls_++;
    else counter_cached_HLT_Dimuon10_PsiPrime_Barrel_Seagulls_++;
    if (!loaded_HLT_Dimuon10_PsiPrime_Barrel_Seagulls_) {
        if (!b_HLT_Dimuon10_PsiPrime_Barrel_Seagulls_) throw std::runtime_error("HLT_Dimuon10_PsiPrime_Barrel_Seagulls branch doesn't exist");
        b_HLT_Dimuon10_PsiPrime_Barrel_Seagulls_->GetEntry(index);
        loaded_HLT_Dimuon10_PsiPrime_Barrel_Seagulls_ = true;
    }
    return HLT_Dimuon10_PsiPrime_Barrel_Seagulls_;
}
const bool &Nano::HLT_Dimuon10_Upsilon_Barrel_Seagulls() {
    if (!loaded_HLT_Dimuon10_Upsilon_Barrel_Seagulls_) counter_uncached_HLT_Dimuon10_Upsilon_Barrel_Seagulls_++;
    else counter_cached_HLT_Dimuon10_Upsilon_Barrel_Seagulls_++;
    if (!loaded_HLT_Dimuon10_Upsilon_Barrel_Seagulls_) {
        if (!b_HLT_Dimuon10_Upsilon_Barrel_Seagulls_) throw std::runtime_error("HLT_Dimuon10_Upsilon_Barrel_Seagulls branch doesn't exist");
        b_HLT_Dimuon10_Upsilon_Barrel_Seagulls_->GetEntry(index);
        loaded_HLT_Dimuon10_Upsilon_Barrel_Seagulls_ = true;
    }
    return HLT_Dimuon10_Upsilon_Barrel_Seagulls_;
}
const bool &Nano::HLT_Dimuon10_Upsilon_y1p4() {
    if (!loaded_HLT_Dimuon10_Upsilon_y1p4_) counter_uncached_HLT_Dimuon10_Upsilon_y1p4_++;
    else counter_cached_HLT_Dimuon10_Upsilon_y1p4_++;
    if (!loaded_HLT_Dimuon10_Upsilon_y1p4_) {
        if (!b_HLT_Dimuon10_Upsilon_y1p4_) throw std::runtime_error("HLT_Dimuon10_Upsilon_y1p4 branch doesn't exist");
        b_HLT_Dimuon10_Upsilon_y1p4_->GetEntry(index);
        loaded_HLT_Dimuon10_Upsilon_y1p4_ = true;
    }
    return HLT_Dimuon10_Upsilon_y1p4_;
}
const bool &Nano::HLT_Dimuon12_Upsilon_eta1p5() {
    if (!loaded_HLT_Dimuon12_Upsilon_eta1p5_) counter_uncached_HLT_Dimuon12_Upsilon_eta1p5_++;
    else counter_cached_HLT_Dimuon12_Upsilon_eta1p5_++;
    if (!loaded_HLT_Dimuon12_Upsilon_eta1p5_) {
        if (!b_HLT_Dimuon12_Upsilon_eta1p5_) throw std::runtime_error("HLT_Dimuon12_Upsilon_eta1p5 branch doesn't exist");
        b_HLT_Dimuon12_Upsilon_eta1p5_->GetEntry(index);
        loaded_HLT_Dimuon12_Upsilon_eta1p5_ = true;
    }
    return HLT_Dimuon12_Upsilon_eta1p5_;
}
const bool &Nano::HLT_Dimuon12_Upsilon_y1p4() {
    if (!loaded_HLT_Dimuon12_Upsilon_y1p4_) counter_uncached_HLT_Dimuon12_Upsilon_y1p4_++;
    else counter_cached_HLT_Dimuon12_Upsilon_y1p4_++;
    if (!loaded_HLT_Dimuon12_Upsilon_y1p4_) {
        if (!b_HLT_Dimuon12_Upsilon_y1p4_) throw std::runtime_error("HLT_Dimuon12_Upsilon_y1p4 branch doesn't exist");
        b_HLT_Dimuon12_Upsilon_y1p4_->GetEntry(index);
        loaded_HLT_Dimuon12_Upsilon_y1p4_ = true;
    }
    return HLT_Dimuon12_Upsilon_y1p4_;
}
const bool &Nano::HLT_Dimuon13_PsiPrime() {
    if (!loaded_HLT_Dimuon13_PsiPrime_) counter_uncached_HLT_Dimuon13_PsiPrime_++;
    else counter_cached_HLT_Dimuon13_PsiPrime_++;
    if (!loaded_HLT_Dimuon13_PsiPrime_) {
        if (!b_HLT_Dimuon13_PsiPrime_) throw std::runtime_error("HLT_Dimuon13_PsiPrime branch doesn't exist");
        b_HLT_Dimuon13_PsiPrime_->GetEntry(index);
        loaded_HLT_Dimuon13_PsiPrime_ = true;
    }
    return HLT_Dimuon13_PsiPrime_;
}
const bool &Nano::HLT_Dimuon13_Upsilon() {
    if (!loaded_HLT_Dimuon13_Upsilon_) counter_uncached_HLT_Dimuon13_Upsilon_++;
    else counter_cached_HLT_Dimuon13_Upsilon_++;
    if (!loaded_HLT_Dimuon13_Upsilon_) {
        if (!b_HLT_Dimuon13_Upsilon_) throw std::runtime_error("HLT_Dimuon13_Upsilon branch doesn't exist");
        b_HLT_Dimuon13_Upsilon_->GetEntry(index);
        loaded_HLT_Dimuon13_Upsilon_ = true;
    }
    return HLT_Dimuon13_Upsilon_;
}
const bool &Nano::HLT_Dimuon14_Phi_Barrel_Seagulls() {
    if (!loaded_HLT_Dimuon14_Phi_Barrel_Seagulls_) counter_uncached_HLT_Dimuon14_Phi_Barrel_Seagulls_++;
    else counter_cached_HLT_Dimuon14_Phi_Barrel_Seagulls_++;
    if (!loaded_HLT_Dimuon14_Phi_Barrel_Seagulls_) {
        if (!b_HLT_Dimuon14_Phi_Barrel_Seagulls_) throw std::runtime_error("HLT_Dimuon14_Phi_Barrel_Seagulls branch doesn't exist");
        b_HLT_Dimuon14_Phi_Barrel_Seagulls_->GetEntry(index);
        loaded_HLT_Dimuon14_Phi_Barrel_Seagulls_ = true;
    }
    return HLT_Dimuon14_Phi_Barrel_Seagulls_;
}
const bool &Nano::HLT_Dimuon14_PsiPrime() {
    if (!loaded_HLT_Dimuon14_PsiPrime_) counter_uncached_HLT_Dimuon14_PsiPrime_++;
    else counter_cached_HLT_Dimuon14_PsiPrime_++;
    if (!loaded_HLT_Dimuon14_PsiPrime_) {
        if (!b_HLT_Dimuon14_PsiPrime_) throw std::runtime_error("HLT_Dimuon14_PsiPrime branch doesn't exist");
        b_HLT_Dimuon14_PsiPrime_->GetEntry(index);
        loaded_HLT_Dimuon14_PsiPrime_ = true;
    }
    return HLT_Dimuon14_PsiPrime_;
}
const bool &Nano::HLT_Dimuon14_PsiPrime_noCorrL1() {
    if (!loaded_HLT_Dimuon14_PsiPrime_noCorrL1_) counter_uncached_HLT_Dimuon14_PsiPrime_noCorrL1_++;
    else counter_cached_HLT_Dimuon14_PsiPrime_noCorrL1_++;
    if (!loaded_HLT_Dimuon14_PsiPrime_noCorrL1_) {
        if (!b_HLT_Dimuon14_PsiPrime_noCorrL1_) throw std::runtime_error("HLT_Dimuon14_PsiPrime_noCorrL1 branch doesn't exist");
        b_HLT_Dimuon14_PsiPrime_noCorrL1_->GetEntry(index);
        loaded_HLT_Dimuon14_PsiPrime_noCorrL1_ = true;
    }
    return HLT_Dimuon14_PsiPrime_noCorrL1_;
}
const bool &Nano::HLT_Dimuon16_Jpsi() {
    if (!loaded_HLT_Dimuon16_Jpsi_) counter_uncached_HLT_Dimuon16_Jpsi_++;
    else counter_cached_HLT_Dimuon16_Jpsi_++;
    if (!loaded_HLT_Dimuon16_Jpsi_) {
        if (!b_HLT_Dimuon16_Jpsi_) throw std::runtime_error("HLT_Dimuon16_Jpsi branch doesn't exist");
        b_HLT_Dimuon16_Jpsi_->GetEntry(index);
        loaded_HLT_Dimuon16_Jpsi_ = true;
    }
    return HLT_Dimuon16_Jpsi_;
}
const bool &Nano::HLT_Dimuon18_PsiPrime() {
    if (!loaded_HLT_Dimuon18_PsiPrime_) counter_uncached_HLT_Dimuon18_PsiPrime_++;
    else counter_cached_HLT_Dimuon18_PsiPrime_++;
    if (!loaded_HLT_Dimuon18_PsiPrime_) {
        if (!b_HLT_Dimuon18_PsiPrime_) throw std::runtime_error("HLT_Dimuon18_PsiPrime branch doesn't exist");
        b_HLT_Dimuon18_PsiPrime_->GetEntry(index);
        loaded_HLT_Dimuon18_PsiPrime_ = true;
    }
    return HLT_Dimuon18_PsiPrime_;
}
const bool &Nano::HLT_Dimuon18_PsiPrime_noCorrL1() {
    if (!loaded_HLT_Dimuon18_PsiPrime_noCorrL1_) counter_uncached_HLT_Dimuon18_PsiPrime_noCorrL1_++;
    else counter_cached_HLT_Dimuon18_PsiPrime_noCorrL1_++;
    if (!loaded_HLT_Dimuon18_PsiPrime_noCorrL1_) {
        if (!b_HLT_Dimuon18_PsiPrime_noCorrL1_) throw std::runtime_error("HLT_Dimuon18_PsiPrime_noCorrL1 branch doesn't exist");
        b_HLT_Dimuon18_PsiPrime_noCorrL1_->GetEntry(index);
        loaded_HLT_Dimuon18_PsiPrime_noCorrL1_ = true;
    }
    return HLT_Dimuon18_PsiPrime_noCorrL1_;
}
const bool &Nano::HLT_Dimuon20_Jpsi() {
    if (!loaded_HLT_Dimuon20_Jpsi_) counter_uncached_HLT_Dimuon20_Jpsi_++;
    else counter_cached_HLT_Dimuon20_Jpsi_++;
    if (!loaded_HLT_Dimuon20_Jpsi_) {
        if (!b_HLT_Dimuon20_Jpsi_) throw std::runtime_error("HLT_Dimuon20_Jpsi branch doesn't exist");
        b_HLT_Dimuon20_Jpsi_->GetEntry(index);
        loaded_HLT_Dimuon20_Jpsi_ = true;
    }
    return HLT_Dimuon20_Jpsi_;
}
const bool &Nano::HLT_Dimuon20_Jpsi_Barrel_Seagulls() {
    if (!loaded_HLT_Dimuon20_Jpsi_Barrel_Seagulls_) counter_uncached_HLT_Dimuon20_Jpsi_Barrel_Seagulls_++;
    else counter_cached_HLT_Dimuon20_Jpsi_Barrel_Seagulls_++;
    if (!loaded_HLT_Dimuon20_Jpsi_Barrel_Seagulls_) {
        if (!b_HLT_Dimuon20_Jpsi_Barrel_Seagulls_) throw std::runtime_error("HLT_Dimuon20_Jpsi_Barrel_Seagulls branch doesn't exist");
        b_HLT_Dimuon20_Jpsi_Barrel_Seagulls_->GetEntry(index);
        loaded_HLT_Dimuon20_Jpsi_Barrel_Seagulls_ = true;
    }
    return HLT_Dimuon20_Jpsi_Barrel_Seagulls_;
}
const bool &Nano::HLT_Dimuon24_Phi_noCorrL1() {
    if (!loaded_HLT_Dimuon24_Phi_noCorrL1_) counter_uncached_HLT_Dimuon24_Phi_noCorrL1_++;
    else counter_cached_HLT_Dimuon24_Phi_noCorrL1_++;
    if (!loaded_HLT_Dimuon24_Phi_noCorrL1_) {
        if (!b_HLT_Dimuon24_Phi_noCorrL1_) throw std::runtime_error("HLT_Dimuon24_Phi_noCorrL1 branch doesn't exist");
        b_HLT_Dimuon24_Phi_noCorrL1_->GetEntry(index);
        loaded_HLT_Dimuon24_Phi_noCorrL1_ = true;
    }
    return HLT_Dimuon24_Phi_noCorrL1_;
}
const bool &Nano::HLT_Dimuon24_Upsilon_noCorrL1() {
    if (!loaded_HLT_Dimuon24_Upsilon_noCorrL1_) counter_uncached_HLT_Dimuon24_Upsilon_noCorrL1_++;
    else counter_cached_HLT_Dimuon24_Upsilon_noCorrL1_++;
    if (!loaded_HLT_Dimuon24_Upsilon_noCorrL1_) {
        if (!b_HLT_Dimuon24_Upsilon_noCorrL1_) throw std::runtime_error("HLT_Dimuon24_Upsilon_noCorrL1 branch doesn't exist");
        b_HLT_Dimuon24_Upsilon_noCorrL1_->GetEntry(index);
        loaded_HLT_Dimuon24_Upsilon_noCorrL1_ = true;
    }
    return HLT_Dimuon24_Upsilon_noCorrL1_;
}
const bool &Nano::HLT_Dimuon25_Jpsi() {
    if (!loaded_HLT_Dimuon25_Jpsi_) counter_uncached_HLT_Dimuon25_Jpsi_++;
    else counter_cached_HLT_Dimuon25_Jpsi_++;
    if (!loaded_HLT_Dimuon25_Jpsi_) {
        if (!b_HLT_Dimuon25_Jpsi_) throw std::runtime_error("HLT_Dimuon25_Jpsi branch doesn't exist");
        b_HLT_Dimuon25_Jpsi_->GetEntry(index);
        loaded_HLT_Dimuon25_Jpsi_ = true;
    }
    return HLT_Dimuon25_Jpsi_;
}
const bool &Nano::HLT_Dimuon25_Jpsi_noCorrL1() {
    if (!loaded_HLT_Dimuon25_Jpsi_noCorrL1_) counter_uncached_HLT_Dimuon25_Jpsi_noCorrL1_++;
    else counter_cached_HLT_Dimuon25_Jpsi_noCorrL1_++;
    if (!loaded_HLT_Dimuon25_Jpsi_noCorrL1_) {
        if (!b_HLT_Dimuon25_Jpsi_noCorrL1_) throw std::runtime_error("HLT_Dimuon25_Jpsi_noCorrL1 branch doesn't exist");
        b_HLT_Dimuon25_Jpsi_noCorrL1_->GetEntry(index);
        loaded_HLT_Dimuon25_Jpsi_noCorrL1_ = true;
    }
    return HLT_Dimuon25_Jpsi_noCorrL1_;
}
const bool &Nano::HLT_Dimuon6_Jpsi_NoVertexing() {
    if (!loaded_HLT_Dimuon6_Jpsi_NoVertexing_) counter_uncached_HLT_Dimuon6_Jpsi_NoVertexing_++;
    else counter_cached_HLT_Dimuon6_Jpsi_NoVertexing_++;
    if (!loaded_HLT_Dimuon6_Jpsi_NoVertexing_) {
        if (!b_HLT_Dimuon6_Jpsi_NoVertexing_) throw std::runtime_error("HLT_Dimuon6_Jpsi_NoVertexing branch doesn't exist");
        b_HLT_Dimuon6_Jpsi_NoVertexing_->GetEntry(index);
        loaded_HLT_Dimuon6_Jpsi_NoVertexing_ = true;
    }
    return HLT_Dimuon6_Jpsi_NoVertexing_;
}
const bool &Nano::HLT_Dimuon8_PsiPrime_Barrel() {
    if (!loaded_HLT_Dimuon8_PsiPrime_Barrel_) counter_uncached_HLT_Dimuon8_PsiPrime_Barrel_++;
    else counter_cached_HLT_Dimuon8_PsiPrime_Barrel_++;
    if (!loaded_HLT_Dimuon8_PsiPrime_Barrel_) {
        if (!b_HLT_Dimuon8_PsiPrime_Barrel_) throw std::runtime_error("HLT_Dimuon8_PsiPrime_Barrel branch doesn't exist");
        b_HLT_Dimuon8_PsiPrime_Barrel_->GetEntry(index);
        loaded_HLT_Dimuon8_PsiPrime_Barrel_ = true;
    }
    return HLT_Dimuon8_PsiPrime_Barrel_;
}
const bool &Nano::HLT_Dimuon8_Upsilon_Barrel() {
    if (!loaded_HLT_Dimuon8_Upsilon_Barrel_) counter_uncached_HLT_Dimuon8_Upsilon_Barrel_++;
    else counter_cached_HLT_Dimuon8_Upsilon_Barrel_++;
    if (!loaded_HLT_Dimuon8_Upsilon_Barrel_) {
        if (!b_HLT_Dimuon8_Upsilon_Barrel_) throw std::runtime_error("HLT_Dimuon8_Upsilon_Barrel branch doesn't exist");
        b_HLT_Dimuon8_Upsilon_Barrel_->GetEntry(index);
        loaded_HLT_Dimuon8_Upsilon_Barrel_ = true;
    }
    return HLT_Dimuon8_Upsilon_Barrel_;
}
const bool &Nano::HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT() {
    if (!loaded_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_) counter_uncached_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_++;
    else counter_cached_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_++;
    if (!loaded_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_) {
        if (!b_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_) throw std::runtime_error("HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT branch doesn't exist");
        b_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_->GetEntry(index);
        loaded_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_ = true;
    }
    return HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_;
}
const bool &Nano::HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT() {
    if (!loaded_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_) counter_uncached_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_++;
    else counter_cached_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_++;
    if (!loaded_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_) {
        if (!b_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_) throw std::runtime_error("HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT branch doesn't exist");
        b_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_->GetEntry(index);
        loaded_HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_ = true;
    }
    return HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_;
}
const bool &Nano::HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT() {
    if (!loaded_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_) counter_uncached_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_++;
    else counter_cached_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_++;
    if (!loaded_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_) {
        if (!b_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_) throw std::runtime_error("HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT branch doesn't exist");
        b_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_->GetEntry(index);
        loaded_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_ = true;
    }
    return HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_;
}
const bool &Nano::HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT() {
    if (!loaded_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_) counter_uncached_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_++;
    else counter_cached_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_++;
    if (!loaded_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_) {
        if (!b_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_) throw std::runtime_error("HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT branch doesn't exist");
        b_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_->GetEntry(index);
        loaded_HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_ = true;
    }
    return HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_;
}
const bool &Nano::HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55() {
    if (!loaded_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_) counter_uncached_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_++;
    else counter_cached_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_++;
    if (!loaded_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_) {
        if (!b_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_) throw std::runtime_error("HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55 branch doesn't exist");
        b_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_->GetEntry(index);
        loaded_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_ = true;
    }
    return HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_;
}
const bool &Nano::HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55() {
    if (!loaded_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_) counter_uncached_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_++;
    else counter_cached_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_++;
    if (!loaded_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_) {
        if (!b_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_) throw std::runtime_error("HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55 branch doesn't exist");
        b_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_->GetEntry(index);
        loaded_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_ = true;
    }
    return HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_;
}
const bool &Nano::HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55() {
    if (!loaded_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_) counter_uncached_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_++;
    else counter_cached_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_++;
    if (!loaded_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_) {
        if (!b_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_) throw std::runtime_error("HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55 branch doesn't exist");
        b_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_->GetEntry(index);
        loaded_HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_ = true;
    }
    return HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_;
}
const bool &Nano::HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55() {
    if (!loaded_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_) counter_uncached_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_++;
    else counter_cached_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_++;
    if (!loaded_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_) {
        if (!b_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_) throw std::runtime_error("HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55 branch doesn't exist");
        b_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_->GetEntry(index);
        loaded_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_ = true;
    }
    return HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55_;
}
const bool &Nano::HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55() {
    if (!loaded_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_) counter_uncached_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_++;
    else counter_cached_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_++;
    if (!loaded_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_) {
        if (!b_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_) throw std::runtime_error("HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55 branch doesn't exist");
        b_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_->GetEntry(index);
        loaded_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_ = true;
    }
    return HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_;
}
const bool &Nano::HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55() {
    if (!loaded_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_) counter_uncached_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_++;
    else counter_cached_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_++;
    if (!loaded_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_) {
        if (!b_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_) throw std::runtime_error("HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55 branch doesn't exist");
        b_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_->GetEntry(index);
        loaded_HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_ = true;
    }
    return HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_;
}
const bool &Nano::HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55() {
    if (!loaded_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_) counter_uncached_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_++;
    else counter_cached_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_++;
    if (!loaded_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_) {
        if (!b_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_) throw std::runtime_error("HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55 branch doesn't exist");
        b_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_->GetEntry(index);
        loaded_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_ = true;
    }
    return HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_;
}
const bool &Nano::HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55() {
    if (!loaded_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_) counter_uncached_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_++;
    else counter_cached_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_++;
    if (!loaded_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_) {
        if (!b_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_) throw std::runtime_error("HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55 branch doesn't exist");
        b_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_->GetEntry(index);
        loaded_HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_ = true;
    }
    return HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_;
}
const bool &Nano::HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId() {
    if (!loaded_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_) counter_uncached_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_++;
    else counter_cached_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_++;
    if (!loaded_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_) {
        if (!b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_) throw std::runtime_error("HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId branch doesn't exist");
        b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_->GetEntry(index);
        loaded_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_ = true;
    }
    return HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_;
}
const bool &Nano::HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55() {
    if (!loaded_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_) counter_uncached_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_++;
    else counter_cached_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_++;
    if (!loaded_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_) {
        if (!b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_) throw std::runtime_error("HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55 branch doesn't exist");
        b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_->GetEntry(index);
        loaded_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_ = true;
    }
    return HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_;
}
const bool &Nano::HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto() {
    if (!loaded_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_) counter_uncached_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_++;
    else counter_cached_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_++;
    if (!loaded_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_) {
        if (!b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_) throw std::runtime_error("HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto branch doesn't exist");
        b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_->GetEntry(index);
        loaded_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_ = true;
    }
    return HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_;
}
const bool &Nano::HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55() {
    if (!loaded_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_) counter_uncached_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_++;
    else counter_cached_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_++;
    if (!loaded_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_) {
        if (!b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_) throw std::runtime_error("HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55 branch doesn't exist");
        b_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_->GetEntry(index);
        loaded_HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_ = true;
    }
    return HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_;
}
const bool &Nano::HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70() {
    if (!loaded_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70_) counter_uncached_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70_++;
    else counter_cached_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70_++;
    if (!loaded_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70_) {
        if (!b_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70_) throw std::runtime_error("HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70 branch doesn't exist");
        b_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70_->GetEntry(index);
        loaded_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70_ = true;
    }
    return HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70_;
}
const bool &Nano::HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90() {
    if (!loaded_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_) counter_uncached_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_++;
    else counter_cached_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_++;
    if (!loaded_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_) {
        if (!b_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_) throw std::runtime_error("HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90 branch doesn't exist");
        b_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_->GetEntry(index);
        loaded_HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_ = true;
    }
    return HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_;
}
const bool &Nano::HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55() {
    if (!loaded_HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55_) counter_uncached_HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55_++;
    else counter_cached_HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55_++;
    if (!loaded_HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55_) {
        if (!b_HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55_) throw std::runtime_error("HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55 branch doesn't exist");
        b_HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55_->GetEntry(index);
        loaded_HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55_ = true;
    }
    return HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55_;
}
const bool &Nano::HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90() {
    if (!loaded_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_) counter_uncached_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_++;
    else counter_cached_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_++;
    if (!loaded_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_) {
        if (!b_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_) throw std::runtime_error("HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90 branch doesn't exist");
        b_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_->GetEntry(index);
        loaded_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_ = true;
    }
    return HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_;
}
const bool &Nano::HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95() {
    if (!loaded_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_) counter_uncached_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_++;
    else counter_cached_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_++;
    if (!loaded_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_) {
        if (!b_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_) throw std::runtime_error("HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95 branch doesn't exist");
        b_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_->GetEntry(index);
        loaded_HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_ = true;
    }
    return HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_;
}
const bool &Nano::HLT_DoubleEle10_eta1p22_mMax6() {
    if (!loaded_HLT_DoubleEle10_eta1p22_mMax6_) counter_uncached_HLT_DoubleEle10_eta1p22_mMax6_++;
    else counter_cached_HLT_DoubleEle10_eta1p22_mMax6_++;
    if (!loaded_HLT_DoubleEle10_eta1p22_mMax6_) {
        if (!b_HLT_DoubleEle10_eta1p22_mMax6_) throw std::runtime_error("HLT_DoubleEle10_eta1p22_mMax6 branch doesn't exist");
        b_HLT_DoubleEle10_eta1p22_mMax6_->GetEntry(index);
        loaded_HLT_DoubleEle10_eta1p22_mMax6_ = true;
    }
    return HLT_DoubleEle10_eta1p22_mMax6_;
}
const bool &Nano::HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf() {
    if (!loaded_HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf_) counter_uncached_HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf_++;
    else counter_cached_HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf_++;
    if (!loaded_HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf_) {
        if (!b_HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf_) throw std::runtime_error("HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf branch doesn't exist");
        b_HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf_->GetEntry(index);
        loaded_HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf_ = true;
    }
    return HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf_;
}
const bool &Nano::HLT_DoubleEle24_eta2p1_WPTight_Gsf() {
    if (!loaded_HLT_DoubleEle24_eta2p1_WPTight_Gsf_) counter_uncached_HLT_DoubleEle24_eta2p1_WPTight_Gsf_++;
    else counter_cached_HLT_DoubleEle24_eta2p1_WPTight_Gsf_++;
    if (!loaded_HLT_DoubleEle24_eta2p1_WPTight_Gsf_) {
        if (!b_HLT_DoubleEle24_eta2p1_WPTight_Gsf_) throw std::runtime_error("HLT_DoubleEle24_eta2p1_WPTight_Gsf branch doesn't exist");
        b_HLT_DoubleEle24_eta2p1_WPTight_Gsf_->GetEntry(index);
        loaded_HLT_DoubleEle24_eta2p1_WPTight_Gsf_ = true;
    }
    return HLT_DoubleEle24_eta2p1_WPTight_Gsf_;
}
const bool &Nano::HLT_DoubleEle25_CaloIdL_GsfTrkIdVL() {
    if (!loaded_HLT_DoubleEle25_CaloIdL_GsfTrkIdVL_) counter_uncached_HLT_DoubleEle25_CaloIdL_GsfTrkIdVL_++;
    else counter_cached_HLT_DoubleEle25_CaloIdL_GsfTrkIdVL_++;
    if (!loaded_HLT_DoubleEle25_CaloIdL_GsfTrkIdVL_) {
        if (!b_HLT_DoubleEle25_CaloIdL_GsfTrkIdVL_) throw std::runtime_error("HLT_DoubleEle25_CaloIdL_GsfTrkIdVL branch doesn't exist");
        b_HLT_DoubleEle25_CaloIdL_GsfTrkIdVL_->GetEntry(index);
        loaded_HLT_DoubleEle25_CaloIdL_GsfTrkIdVL_ = true;
    }
    return HLT_DoubleEle25_CaloIdL_GsfTrkIdVL_;
}
const bool &Nano::HLT_DoubleEle25_CaloIdL_MW() {
    if (!loaded_HLT_DoubleEle25_CaloIdL_MW_) counter_uncached_HLT_DoubleEle25_CaloIdL_MW_++;
    else counter_cached_HLT_DoubleEle25_CaloIdL_MW_++;
    if (!loaded_HLT_DoubleEle25_CaloIdL_MW_) {
        if (!b_HLT_DoubleEle25_CaloIdL_MW_) throw std::runtime_error("HLT_DoubleEle25_CaloIdL_MW branch doesn't exist");
        b_HLT_DoubleEle25_CaloIdL_MW_->GetEntry(index);
        loaded_HLT_DoubleEle25_CaloIdL_MW_ = true;
    }
    return HLT_DoubleEle25_CaloIdL_MW_;
}
const bool &Nano::HLT_DoubleEle27_CaloIdL_MW() {
    if (!loaded_HLT_DoubleEle27_CaloIdL_MW_) counter_uncached_HLT_DoubleEle27_CaloIdL_MW_++;
    else counter_cached_HLT_DoubleEle27_CaloIdL_MW_++;
    if (!loaded_HLT_DoubleEle27_CaloIdL_MW_) {
        if (!b_HLT_DoubleEle27_CaloIdL_MW_) throw std::runtime_error("HLT_DoubleEle27_CaloIdL_MW branch doesn't exist");
        b_HLT_DoubleEle27_CaloIdL_MW_->GetEntry(index);
        loaded_HLT_DoubleEle27_CaloIdL_MW_ = true;
    }
    return HLT_DoubleEle27_CaloIdL_MW_;
}
const bool &Nano::HLT_DoubleEle33_CaloIdL() {
    if (!loaded_HLT_DoubleEle33_CaloIdL_) counter_uncached_HLT_DoubleEle33_CaloIdL_++;
    else counter_cached_HLT_DoubleEle33_CaloIdL_++;
    if (!loaded_HLT_DoubleEle33_CaloIdL_) {
        if (!b_HLT_DoubleEle33_CaloIdL_) throw std::runtime_error("HLT_DoubleEle33_CaloIdL branch doesn't exist");
        b_HLT_DoubleEle33_CaloIdL_->GetEntry(index);
        loaded_HLT_DoubleEle33_CaloIdL_ = true;
    }
    return HLT_DoubleEle33_CaloIdL_;
}
const bool &Nano::HLT_DoubleEle33_CaloIdL_GsfTrkIdVL() {
    if (!loaded_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_) counter_uncached_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_++;
    else counter_cached_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_++;
    if (!loaded_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_) {
        if (!b_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_) throw std::runtime_error("HLT_DoubleEle33_CaloIdL_GsfTrkIdVL branch doesn't exist");
        b_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_->GetEntry(index);
        loaded_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_ = true;
    }
    return HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_;
}
const bool &Nano::HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW() {
    if (!loaded_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW_) counter_uncached_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW_++;
    else counter_cached_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW_++;
    if (!loaded_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW_) {
        if (!b_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW_) throw std::runtime_error("HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW branch doesn't exist");
        b_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW_->GetEntry(index);
        loaded_HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW_ = true;
    }
    return HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW_;
}
const bool &Nano::HLT_DoubleEle33_CaloIdL_MW() {
    if (!loaded_HLT_DoubleEle33_CaloIdL_MW_) counter_uncached_HLT_DoubleEle33_CaloIdL_MW_++;
    else counter_cached_HLT_DoubleEle33_CaloIdL_MW_++;
    if (!loaded_HLT_DoubleEle33_CaloIdL_MW_) {
        if (!b_HLT_DoubleEle33_CaloIdL_MW_) throw std::runtime_error("HLT_DoubleEle33_CaloIdL_MW branch doesn't exist");
        b_HLT_DoubleEle33_CaloIdL_MW_->GetEntry(index);
        loaded_HLT_DoubleEle33_CaloIdL_MW_ = true;
    }
    return HLT_DoubleEle33_CaloIdL_MW_;
}
const bool &Nano::HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL() {
    if (!loaded_HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL_) counter_uncached_HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL_++;
    else counter_cached_HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL_++;
    if (!loaded_HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL_) {
        if (!b_HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL_) throw std::runtime_error("HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL branch doesn't exist");
        b_HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL_->GetEntry(index);
        loaded_HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL_ = true;
    }
    return HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL_;
}
const bool &Nano::HLT_DoubleEle4_eta1p22_mMax6() {
    if (!loaded_HLT_DoubleEle4_eta1p22_mMax6_) counter_uncached_HLT_DoubleEle4_eta1p22_mMax6_++;
    else counter_cached_HLT_DoubleEle4_eta1p22_mMax6_++;
    if (!loaded_HLT_DoubleEle4_eta1p22_mMax6_) {
        if (!b_HLT_DoubleEle4_eta1p22_mMax6_) throw std::runtime_error("HLT_DoubleEle4_eta1p22_mMax6 branch doesn't exist");
        b_HLT_DoubleEle4_eta1p22_mMax6_->GetEntry(index);
        loaded_HLT_DoubleEle4_eta1p22_mMax6_ = true;
    }
    return HLT_DoubleEle4_eta1p22_mMax6_;
}
const bool &Nano::HLT_DoubleEle4p5_eta1p22_mMax6() {
    if (!loaded_HLT_DoubleEle4p5_eta1p22_mMax6_) counter_uncached_HLT_DoubleEle4p5_eta1p22_mMax6_++;
    else counter_cached_HLT_DoubleEle4p5_eta1p22_mMax6_++;
    if (!loaded_HLT_DoubleEle4p5_eta1p22_mMax6_) {
        if (!b_HLT_DoubleEle4p5_eta1p22_mMax6_) throw std::runtime_error("HLT_DoubleEle4p5_eta1p22_mMax6 branch doesn't exist");
        b_HLT_DoubleEle4p5_eta1p22_mMax6_->GetEntry(index);
        loaded_HLT_DoubleEle4p5_eta1p22_mMax6_ = true;
    }
    return HLT_DoubleEle4p5_eta1p22_mMax6_;
}
const bool &Nano::HLT_DoubleEle5_eta1p22_mMax6() {
    if (!loaded_HLT_DoubleEle5_eta1p22_mMax6_) counter_uncached_HLT_DoubleEle5_eta1p22_mMax6_++;
    else counter_cached_HLT_DoubleEle5_eta1p22_mMax6_++;
    if (!loaded_HLT_DoubleEle5_eta1p22_mMax6_) {
        if (!b_HLT_DoubleEle5_eta1p22_mMax6_) throw std::runtime_error("HLT_DoubleEle5_eta1p22_mMax6 branch doesn't exist");
        b_HLT_DoubleEle5_eta1p22_mMax6_->GetEntry(index);
        loaded_HLT_DoubleEle5_eta1p22_mMax6_ = true;
    }
    return HLT_DoubleEle5_eta1p22_mMax6_;
}
const bool &Nano::HLT_DoubleEle5p5_eta1p22_mMax6() {
    if (!loaded_HLT_DoubleEle5p5_eta1p22_mMax6_) counter_uncached_HLT_DoubleEle5p5_eta1p22_mMax6_++;
    else counter_cached_HLT_DoubleEle5p5_eta1p22_mMax6_++;
    if (!loaded_HLT_DoubleEle5p5_eta1p22_mMax6_) {
        if (!b_HLT_DoubleEle5p5_eta1p22_mMax6_) throw std::runtime_error("HLT_DoubleEle5p5_eta1p22_mMax6 branch doesn't exist");
        b_HLT_DoubleEle5p5_eta1p22_mMax6_->GetEntry(index);
        loaded_HLT_DoubleEle5p5_eta1p22_mMax6_ = true;
    }
    return HLT_DoubleEle5p5_eta1p22_mMax6_;
}
const bool &Nano::HLT_DoubleEle6_eta1p22_mMax6() {
    if (!loaded_HLT_DoubleEle6_eta1p22_mMax6_) counter_uncached_HLT_DoubleEle6_eta1p22_mMax6_++;
    else counter_cached_HLT_DoubleEle6_eta1p22_mMax6_++;
    if (!loaded_HLT_DoubleEle6_eta1p22_mMax6_) {
        if (!b_HLT_DoubleEle6_eta1p22_mMax6_) throw std::runtime_error("HLT_DoubleEle6_eta1p22_mMax6 branch doesn't exist");
        b_HLT_DoubleEle6_eta1p22_mMax6_->GetEntry(index);
        loaded_HLT_DoubleEle6_eta1p22_mMax6_ = true;
    }
    return HLT_DoubleEle6_eta1p22_mMax6_;
}
const bool &Nano::HLT_DoubleEle6p5_eta1p22_mMax6() {
    if (!loaded_HLT_DoubleEle6p5_eta1p22_mMax6_) counter_uncached_HLT_DoubleEle6p5_eta1p22_mMax6_++;
    else counter_cached_HLT_DoubleEle6p5_eta1p22_mMax6_++;
    if (!loaded_HLT_DoubleEle6p5_eta1p22_mMax6_) {
        if (!b_HLT_DoubleEle6p5_eta1p22_mMax6_) throw std::runtime_error("HLT_DoubleEle6p5_eta1p22_mMax6 branch doesn't exist");
        b_HLT_DoubleEle6p5_eta1p22_mMax6_->GetEntry(index);
        loaded_HLT_DoubleEle6p5_eta1p22_mMax6_ = true;
    }
    return HLT_DoubleEle6p5_eta1p22_mMax6_;
}
const bool &Nano::HLT_DoubleEle7_eta1p22_mMax6() {
    if (!loaded_HLT_DoubleEle7_eta1p22_mMax6_) counter_uncached_HLT_DoubleEle7_eta1p22_mMax6_++;
    else counter_cached_HLT_DoubleEle7_eta1p22_mMax6_++;
    if (!loaded_HLT_DoubleEle7_eta1p22_mMax6_) {
        if (!b_HLT_DoubleEle7_eta1p22_mMax6_) throw std::runtime_error("HLT_DoubleEle7_eta1p22_mMax6 branch doesn't exist");
        b_HLT_DoubleEle7_eta1p22_mMax6_->GetEntry(index);
        loaded_HLT_DoubleEle7_eta1p22_mMax6_ = true;
    }
    return HLT_DoubleEle7_eta1p22_mMax6_;
}
const bool &Nano::HLT_DoubleEle7p5_eta1p22_mMax6() {
    if (!loaded_HLT_DoubleEle7p5_eta1p22_mMax6_) counter_uncached_HLT_DoubleEle7p5_eta1p22_mMax6_++;
    else counter_cached_HLT_DoubleEle7p5_eta1p22_mMax6_++;
    if (!loaded_HLT_DoubleEle7p5_eta1p22_mMax6_) {
        if (!b_HLT_DoubleEle7p5_eta1p22_mMax6_) throw std::runtime_error("HLT_DoubleEle7p5_eta1p22_mMax6 branch doesn't exist");
        b_HLT_DoubleEle7p5_eta1p22_mMax6_->GetEntry(index);
        loaded_HLT_DoubleEle7p5_eta1p22_mMax6_ = true;
    }
    return HLT_DoubleEle7p5_eta1p22_mMax6_;
}
const bool &Nano::HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350() {
    if (!loaded_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_) counter_uncached_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_++;
    else counter_cached_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_++;
    if (!loaded_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_) {
        if (!b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_) throw std::runtime_error("HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350 branch doesn't exist");
        b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_->GetEntry(index);
        loaded_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_ = true;
    }
    return HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_;
}
const bool &Nano::HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250() {
    if (!loaded_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250_) counter_uncached_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250_++;
    else counter_cached_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250_++;
    if (!loaded_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250_) {
        if (!b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250_) throw std::runtime_error("HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250 branch doesn't exist");
        b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250_->GetEntry(index);
        loaded_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250_ = true;
    }
    return HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250_;
}
const bool &Nano::HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300() {
    if (!loaded_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300_) counter_uncached_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300_++;
    else counter_cached_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300_++;
    if (!loaded_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300_) {
        if (!b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300_) throw std::runtime_error("HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300 branch doesn't exist");
        b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300_->GetEntry(index);
        loaded_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300_ = true;
    }
    return HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300_;
}
const bool &Nano::HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350() {
    if (!loaded_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_) counter_uncached_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_++;
    else counter_cached_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_++;
    if (!loaded_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_) {
        if (!b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_) throw std::runtime_error("HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350 branch doesn't exist");
        b_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_->GetEntry(index);
        loaded_HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_ = true;
    }
    return HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_;
}
const bool &Nano::HLT_DoubleEle8_eta1p22_mMax6() {
    if (!loaded_HLT_DoubleEle8_eta1p22_mMax6_) counter_uncached_HLT_DoubleEle8_eta1p22_mMax6_++;
    else counter_cached_HLT_DoubleEle8_eta1p22_mMax6_++;
    if (!loaded_HLT_DoubleEle8_eta1p22_mMax6_) {
        if (!b_HLT_DoubleEle8_eta1p22_mMax6_) throw std::runtime_error("HLT_DoubleEle8_eta1p22_mMax6 branch doesn't exist");
        b_HLT_DoubleEle8_eta1p22_mMax6_->GetEntry(index);
        loaded_HLT_DoubleEle8_eta1p22_mMax6_ = true;
    }
    return HLT_DoubleEle8_eta1p22_mMax6_;
}
const bool &Nano::HLT_DoubleEle8p5_eta1p22_mMax6() {
    if (!loaded_HLT_DoubleEle8p5_eta1p22_mMax6_) counter_uncached_HLT_DoubleEle8p5_eta1p22_mMax6_++;
    else counter_cached_HLT_DoubleEle8p5_eta1p22_mMax6_++;
    if (!loaded_HLT_DoubleEle8p5_eta1p22_mMax6_) {
        if (!b_HLT_DoubleEle8p5_eta1p22_mMax6_) throw std::runtime_error("HLT_DoubleEle8p5_eta1p22_mMax6 branch doesn't exist");
        b_HLT_DoubleEle8p5_eta1p22_mMax6_->GetEntry(index);
        loaded_HLT_DoubleEle8p5_eta1p22_mMax6_ = true;
    }
    return HLT_DoubleEle8p5_eta1p22_mMax6_;
}
const bool &Nano::HLT_DoubleEle9_eta1p22_mMax6() {
    if (!loaded_HLT_DoubleEle9_eta1p22_mMax6_) counter_uncached_HLT_DoubleEle9_eta1p22_mMax6_++;
    else counter_cached_HLT_DoubleEle9_eta1p22_mMax6_++;
    if (!loaded_HLT_DoubleEle9_eta1p22_mMax6_) {
        if (!b_HLT_DoubleEle9_eta1p22_mMax6_) throw std::runtime_error("HLT_DoubleEle9_eta1p22_mMax6 branch doesn't exist");
        b_HLT_DoubleEle9_eta1p22_mMax6_->GetEntry(index);
        loaded_HLT_DoubleEle9_eta1p22_mMax6_ = true;
    }
    return HLT_DoubleEle9_eta1p22_mMax6_;
}
const bool &Nano::HLT_DoubleEle9p5_eta1p22_mMax6() {
    if (!loaded_HLT_DoubleEle9p5_eta1p22_mMax6_) counter_uncached_HLT_DoubleEle9p5_eta1p22_mMax6_++;
    else counter_cached_HLT_DoubleEle9p5_eta1p22_mMax6_++;
    if (!loaded_HLT_DoubleEle9p5_eta1p22_mMax6_) {
        if (!b_HLT_DoubleEle9p5_eta1p22_mMax6_) throw std::runtime_error("HLT_DoubleEle9p5_eta1p22_mMax6 branch doesn't exist");
        b_HLT_DoubleEle9p5_eta1p22_mMax6_->GetEntry(index);
        loaded_HLT_DoubleEle9p5_eta1p22_mMax6_ = true;
    }
    return HLT_DoubleEle9p5_eta1p22_mMax6_;
}
const bool &Nano::HLT_DoubleIsoMu17_eta2p1() {
    if (!loaded_HLT_DoubleIsoMu17_eta2p1_) counter_uncached_HLT_DoubleIsoMu17_eta2p1_++;
    else counter_cached_HLT_DoubleIsoMu17_eta2p1_++;
    if (!loaded_HLT_DoubleIsoMu17_eta2p1_) {
        if (!b_HLT_DoubleIsoMu17_eta2p1_) throw std::runtime_error("HLT_DoubleIsoMu17_eta2p1 branch doesn't exist");
        b_HLT_DoubleIsoMu17_eta2p1_->GetEntry(index);
        loaded_HLT_DoubleIsoMu17_eta2p1_ = true;
    }
    return HLT_DoubleIsoMu17_eta2p1_;
}
const bool &Nano::HLT_DoubleIsoMu17_eta2p1_noDzCut() {
    if (!loaded_HLT_DoubleIsoMu17_eta2p1_noDzCut_) counter_uncached_HLT_DoubleIsoMu17_eta2p1_noDzCut_++;
    else counter_cached_HLT_DoubleIsoMu17_eta2p1_noDzCut_++;
    if (!loaded_HLT_DoubleIsoMu17_eta2p1_noDzCut_) {
        if (!b_HLT_DoubleIsoMu17_eta2p1_noDzCut_) throw std::runtime_error("HLT_DoubleIsoMu17_eta2p1_noDzCut branch doesn't exist");
        b_HLT_DoubleIsoMu17_eta2p1_noDzCut_->GetEntry(index);
        loaded_HLT_DoubleIsoMu17_eta2p1_noDzCut_ = true;
    }
    return HLT_DoubleIsoMu17_eta2p1_noDzCut_;
}
const bool &Nano::HLT_DoubleIsoMu20_eta2p1() {
    if (!loaded_HLT_DoubleIsoMu20_eta2p1_) counter_uncached_HLT_DoubleIsoMu20_eta2p1_++;
    else counter_cached_HLT_DoubleIsoMu20_eta2p1_++;
    if (!loaded_HLT_DoubleIsoMu20_eta2p1_) {
        if (!b_HLT_DoubleIsoMu20_eta2p1_) throw std::runtime_error("HLT_DoubleIsoMu20_eta2p1 branch doesn't exist");
        b_HLT_DoubleIsoMu20_eta2p1_->GetEntry(index);
        loaded_HLT_DoubleIsoMu20_eta2p1_ = true;
    }
    return HLT_DoubleIsoMu20_eta2p1_;
}
const bool &Nano::HLT_DoubleIsoMu24_eta2p1() {
    if (!loaded_HLT_DoubleIsoMu24_eta2p1_) counter_uncached_HLT_DoubleIsoMu24_eta2p1_++;
    else counter_cached_HLT_DoubleIsoMu24_eta2p1_++;
    if (!loaded_HLT_DoubleIsoMu24_eta2p1_) {
        if (!b_HLT_DoubleIsoMu24_eta2p1_) throw std::runtime_error("HLT_DoubleIsoMu24_eta2p1 branch doesn't exist");
        b_HLT_DoubleIsoMu24_eta2p1_->GetEntry(index);
        loaded_HLT_DoubleIsoMu24_eta2p1_ = true;
    }
    return HLT_DoubleIsoMu24_eta2p1_;
}
const bool &Nano::HLT_DoubleJet90_Double30_DoubleBTagCSV_p087() {
    if (!loaded_HLT_DoubleJet90_Double30_DoubleBTagCSV_p087_) counter_uncached_HLT_DoubleJet90_Double30_DoubleBTagCSV_p087_++;
    else counter_cached_HLT_DoubleJet90_Double30_DoubleBTagCSV_p087_++;
    if (!loaded_HLT_DoubleJet90_Double30_DoubleBTagCSV_p087_) {
        if (!b_HLT_DoubleJet90_Double30_DoubleBTagCSV_p087_) throw std::runtime_error("HLT_DoubleJet90_Double30_DoubleBTagCSV_p087 branch doesn't exist");
        b_HLT_DoubleJet90_Double30_DoubleBTagCSV_p087_->GetEntry(index);
        loaded_HLT_DoubleJet90_Double30_DoubleBTagCSV_p087_ = true;
    }
    return HLT_DoubleJet90_Double30_DoubleBTagCSV_p087_;
}
const bool &Nano::HLT_DoubleJet90_Double30_TripleBTagCSV_p087() {
    if (!loaded_HLT_DoubleJet90_Double30_TripleBTagCSV_p087_) counter_uncached_HLT_DoubleJet90_Double30_TripleBTagCSV_p087_++;
    else counter_cached_HLT_DoubleJet90_Double30_TripleBTagCSV_p087_++;
    if (!loaded_HLT_DoubleJet90_Double30_TripleBTagCSV_p087_) {
        if (!b_HLT_DoubleJet90_Double30_TripleBTagCSV_p087_) throw std::runtime_error("HLT_DoubleJet90_Double30_TripleBTagCSV_p087 branch doesn't exist");
        b_HLT_DoubleJet90_Double30_TripleBTagCSV_p087_->GetEntry(index);
        loaded_HLT_DoubleJet90_Double30_TripleBTagCSV_p087_ = true;
    }
    return HLT_DoubleJet90_Double30_TripleBTagCSV_p087_;
}
const bool &Nano::HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6() {
    if (!loaded_HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6_) counter_uncached_HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6_++;
    else counter_cached_HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6_++;
    if (!loaded_HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6_) {
        if (!b_HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6_) throw std::runtime_error("HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6 branch doesn't exist");
        b_HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6_->GetEntry(index);
        loaded_HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6_ = true;
    }
    return HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6_;
}
const bool &Nano::HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160() {
    if (!loaded_HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160_) counter_uncached_HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160_++;
    else counter_cached_HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160_++;
    if (!loaded_HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160_) {
        if (!b_HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160_) throw std::runtime_error("HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160 branch doesn't exist");
        b_HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160_->GetEntry(index);
        loaded_HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160_ = true;
    }
    return HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160_;
}
const bool &Nano::HLT_DoubleJetsC100_SingleBTagCSV_p014() {
    if (!loaded_HLT_DoubleJetsC100_SingleBTagCSV_p014_) counter_uncached_HLT_DoubleJetsC100_SingleBTagCSV_p014_++;
    else counter_cached_HLT_DoubleJetsC100_SingleBTagCSV_p014_++;
    if (!loaded_HLT_DoubleJetsC100_SingleBTagCSV_p014_) {
        if (!b_HLT_DoubleJetsC100_SingleBTagCSV_p014_) throw std::runtime_error("HLT_DoubleJetsC100_SingleBTagCSV_p014 branch doesn't exist");
        b_HLT_DoubleJetsC100_SingleBTagCSV_p014_->GetEntry(index);
        loaded_HLT_DoubleJetsC100_SingleBTagCSV_p014_ = true;
    }
    return HLT_DoubleJetsC100_SingleBTagCSV_p014_;
}
const bool &Nano::HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350() {
    if (!loaded_HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350_) counter_uncached_HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350_++;
    else counter_cached_HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350_++;
    if (!loaded_HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350_) {
        if (!b_HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350_) throw std::runtime_error("HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350 branch doesn't exist");
        b_HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350_->GetEntry(index);
        loaded_HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350_ = true;
    }
    return HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350_;
}
const bool &Nano::HLT_DoubleJetsC100_SingleBTagCSV_p026() {
    if (!loaded_HLT_DoubleJetsC100_SingleBTagCSV_p026_) counter_uncached_HLT_DoubleJetsC100_SingleBTagCSV_p026_++;
    else counter_cached_HLT_DoubleJetsC100_SingleBTagCSV_p026_++;
    if (!loaded_HLT_DoubleJetsC100_SingleBTagCSV_p026_) {
        if (!b_HLT_DoubleJetsC100_SingleBTagCSV_p026_) throw std::runtime_error("HLT_DoubleJetsC100_SingleBTagCSV_p026 branch doesn't exist");
        b_HLT_DoubleJetsC100_SingleBTagCSV_p026_->GetEntry(index);
        loaded_HLT_DoubleJetsC100_SingleBTagCSV_p026_ = true;
    }
    return HLT_DoubleJetsC100_SingleBTagCSV_p026_;
}
const bool &Nano::HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350() {
    if (!loaded_HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350_) counter_uncached_HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350_++;
    else counter_cached_HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350_++;
    if (!loaded_HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350_) {
        if (!b_HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350_) throw std::runtime_error("HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350 branch doesn't exist");
        b_HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350_->GetEntry(index);
        loaded_HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350_ = true;
    }
    return HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350_;
}
const bool &Nano::HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6() {
    if (!loaded_HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6_) counter_uncached_HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6_++;
    else counter_cached_HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6_++;
    if (!loaded_HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6_) {
        if (!b_HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6_) throw std::runtime_error("HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6 branch doesn't exist");
        b_HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6_->GetEntry(index);
        loaded_HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6_ = true;
    }
    return HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6_;
}
const bool &Nano::HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172() {
    if (!loaded_HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172_) counter_uncached_HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172_++;
    else counter_cached_HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172_++;
    if (!loaded_HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172_) {
        if (!b_HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172_) throw std::runtime_error("HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172 branch doesn't exist");
        b_HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172_->GetEntry(index);
        loaded_HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172_ = true;
    }
    return HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172_;
}
const bool &Nano::HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm() {
    if (!loaded_HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_) counter_uncached_HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_++;
    else counter_cached_HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_++;
    if (!loaded_HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_) {
        if (!b_HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_) throw std::runtime_error("HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm branch doesn't exist");
        b_HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_->GetEntry(index);
        loaded_HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_ = true;
    }
    return HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_;
}
const bool &Nano::HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm() {
    if (!loaded_HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_) counter_uncached_HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_++;
    else counter_cached_HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_++;
    if (!loaded_HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_) {
        if (!b_HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_) throw std::runtime_error("HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm branch doesn't exist");
        b_HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_->GetEntry(index);
        loaded_HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ = true;
    }
    return HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_;
}
const bool &Nano::HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm() {
    if (!loaded_HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_) counter_uncached_HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_++;
    else counter_cached_HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_++;
    if (!loaded_HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_) {
        if (!b_HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_) throw std::runtime_error("HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm branch doesn't exist");
        b_HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_->GetEntry(index);
        loaded_HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_ = true;
    }
    return HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_;
}
const bool &Nano::HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm() {
    if (!loaded_HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_) counter_uncached_HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_++;
    else counter_cached_HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_++;
    if (!loaded_HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_) {
        if (!b_HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_) throw std::runtime_error("HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm branch doesn't exist");
        b_HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_->GetEntry(index);
        loaded_HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ = true;
    }
    return HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_;
}
const bool &Nano::HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm() {
    if (!loaded_HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_) counter_uncached_HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_++;
    else counter_cached_HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_++;
    if (!loaded_HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_) {
        if (!b_HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_) throw std::runtime_error("HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm branch doesn't exist");
        b_HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_->GetEntry(index);
        loaded_HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ = true;
    }
    return HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_;
}
const bool &Nano::HLT_DoubleL2Mu23NoVtx_2Cha() {
    if (!loaded_HLT_DoubleL2Mu23NoVtx_2Cha_) counter_uncached_HLT_DoubleL2Mu23NoVtx_2Cha_++;
    else counter_cached_HLT_DoubleL2Mu23NoVtx_2Cha_++;
    if (!loaded_HLT_DoubleL2Mu23NoVtx_2Cha_) {
        if (!b_HLT_DoubleL2Mu23NoVtx_2Cha_) throw std::runtime_error("HLT_DoubleL2Mu23NoVtx_2Cha branch doesn't exist");
        b_HLT_DoubleL2Mu23NoVtx_2Cha_->GetEntry(index);
        loaded_HLT_DoubleL2Mu23NoVtx_2Cha_ = true;
    }
    return HLT_DoubleL2Mu23NoVtx_2Cha_;
}
const bool &Nano::HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed() {
    if (!loaded_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_) counter_uncached_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_++;
    else counter_cached_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_++;
    if (!loaded_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_) {
        if (!b_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_) throw std::runtime_error("HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed branch doesn't exist");
        b_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_->GetEntry(index);
        loaded_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_ = true;
    }
    return HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_;
}
const bool &Nano::HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched() {
    if (!loaded_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_) counter_uncached_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_++;
    else counter_cached_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_++;
    if (!loaded_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_) {
        if (!b_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_) throw std::runtime_error("HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched branch doesn't exist");
        b_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_->GetEntry(index);
        loaded_HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_ = true;
    }
    return HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_;
}
const bool &Nano::HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched() {
    if (!loaded_HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_) counter_uncached_HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_++;
    else counter_cached_HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_++;
    if (!loaded_HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_) {
        if (!b_HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_) throw std::runtime_error("HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched branch doesn't exist");
        b_HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_->GetEntry(index);
        loaded_HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_ = true;
    }
    return HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_;
}
const bool &Nano::HLT_DoubleL2Mu25NoVtx_2Cha() {
    if (!loaded_HLT_DoubleL2Mu25NoVtx_2Cha_) counter_uncached_HLT_DoubleL2Mu25NoVtx_2Cha_++;
    else counter_cached_HLT_DoubleL2Mu25NoVtx_2Cha_++;
    if (!loaded_HLT_DoubleL2Mu25NoVtx_2Cha_) {
        if (!b_HLT_DoubleL2Mu25NoVtx_2Cha_) throw std::runtime_error("HLT_DoubleL2Mu25NoVtx_2Cha branch doesn't exist");
        b_HLT_DoubleL2Mu25NoVtx_2Cha_->GetEntry(index);
        loaded_HLT_DoubleL2Mu25NoVtx_2Cha_ = true;
    }
    return HLT_DoubleL2Mu25NoVtx_2Cha_;
}
const bool &Nano::HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed() {
    if (!loaded_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_) counter_uncached_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_++;
    else counter_cached_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_++;
    if (!loaded_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_) {
        if (!b_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_) throw std::runtime_error("HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed branch doesn't exist");
        b_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_->GetEntry(index);
        loaded_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_ = true;
    }
    return HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_;
}
const bool &Nano::HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4() {
    if (!loaded_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_) counter_uncached_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_++;
    else counter_cached_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_++;
    if (!loaded_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_) {
        if (!b_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_) throw std::runtime_error("HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4 branch doesn't exist");
        b_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_->GetEntry(index);
        loaded_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_ = true;
    }
    return HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_;
}
const bool &Nano::HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched() {
    if (!loaded_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_) counter_uncached_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_++;
    else counter_cached_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_++;
    if (!loaded_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_) {
        if (!b_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_) throw std::runtime_error("HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched branch doesn't exist");
        b_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_->GetEntry(index);
        loaded_HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_ = true;
    }
    return HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_;
}
const bool &Nano::HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4() {
    if (!loaded_HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_) counter_uncached_HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_++;
    else counter_cached_HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_++;
    if (!loaded_HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_) {
        if (!b_HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_) throw std::runtime_error("HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4 branch doesn't exist");
        b_HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_->GetEntry(index);
        loaded_HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_ = true;
    }
    return HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_;
}
const bool &Nano::HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched() {
    if (!loaded_HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_) counter_uncached_HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_++;
    else counter_cached_HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_++;
    if (!loaded_HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_) {
        if (!b_HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_) throw std::runtime_error("HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched branch doesn't exist");
        b_HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_->GetEntry(index);
        loaded_HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_ = true;
    }
    return HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_;
}
const bool &Nano::HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4() {
    if (!loaded_HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_) counter_uncached_HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_++;
    else counter_cached_HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_++;
    if (!loaded_HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_) {
        if (!b_HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_) throw std::runtime_error("HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4 branch doesn't exist");
        b_HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_->GetEntry(index);
        loaded_HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_ = true;
    }
    return HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_;
}
const bool &Nano::HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4() {
    if (!loaded_HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_) counter_uncached_HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_++;
    else counter_cached_HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_++;
    if (!loaded_HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_) {
        if (!b_HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_) throw std::runtime_error("HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4 branch doesn't exist");
        b_HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_->GetEntry(index);
        loaded_HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_ = true;
    }
    return HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_;
}
const bool &Nano::HLT_DoubleL2Mu50() {
    if (!loaded_HLT_DoubleL2Mu50_) counter_uncached_HLT_DoubleL2Mu50_++;
    else counter_cached_HLT_DoubleL2Mu50_++;
    if (!loaded_HLT_DoubleL2Mu50_) {
        if (!b_HLT_DoubleL2Mu50_) throw std::runtime_error("HLT_DoubleL2Mu50 branch doesn't exist");
        b_HLT_DoubleL2Mu50_->GetEntry(index);
        loaded_HLT_DoubleL2Mu50_ = true;
    }
    return HLT_DoubleL2Mu50_;
}
const bool &Nano::HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm() {
    if (!loaded_HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_) counter_uncached_HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_++;
    else counter_cached_HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_++;
    if (!loaded_HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_) {
        if (!b_HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_) throw std::runtime_error("HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm branch doesn't exist");
        b_HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_->GetEntry(index);
        loaded_HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_ = true;
    }
    return HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_;
}
const bool &Nano::HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm() {
    if (!loaded_HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_) counter_uncached_HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_++;
    else counter_cached_HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_++;
    if (!loaded_HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_) {
        if (!b_HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_) throw std::runtime_error("HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm branch doesn't exist");
        b_HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_->GetEntry(index);
        loaded_HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_ = true;
    }
    return HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_;
}
const bool &Nano::HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm() {
    if (!loaded_HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_) counter_uncached_HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_++;
    else counter_cached_HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_++;
    if (!loaded_HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_) {
        if (!b_HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_) throw std::runtime_error("HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm branch doesn't exist");
        b_HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_->GetEntry(index);
        loaded_HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_ = true;
    }
    return HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_;
}
const bool &Nano::HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm() {
    if (!loaded_HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_) counter_uncached_HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_++;
    else counter_cached_HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_++;
    if (!loaded_HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_) {
        if (!b_HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_) throw std::runtime_error("HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm branch doesn't exist");
        b_HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_->GetEntry(index);
        loaded_HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_ = true;
    }
    return HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_;
}
const bool &Nano::HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm() {
    if (!loaded_HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_) counter_uncached_HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_++;
    else counter_cached_HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_++;
    if (!loaded_HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_) {
        if (!b_HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_) throw std::runtime_error("HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm branch doesn't exist");
        b_HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_->GetEntry(index);
        loaded_HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_ = true;
    }
    return HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_;
}
const bool &Nano::HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm() {
    if (!loaded_HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_) counter_uncached_HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_++;
    else counter_cached_HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_++;
    if (!loaded_HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_) {
        if (!b_HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_) throw std::runtime_error("HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm branch doesn't exist");
        b_HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_->GetEntry(index);
        loaded_HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_ = true;
    }
    return HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_;
}
const bool &Nano::HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg() {
    if (!loaded_HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_) counter_uncached_HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_) {
        if (!b_HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_ = true;
    }
    return HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg() {
    if (!loaded_HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_) counter_uncached_HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_) {
        if (!b_HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_ = true;
    }
    return HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1() {
    if (!loaded_HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_) counter_uncached_HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_++;
    else counter_cached_HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_++;
    if (!loaded_HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_) {
        if (!b_HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_) throw std::runtime_error("HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1 branch doesn't exist");
        b_HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_->GetEntry(index);
        loaded_HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_ = true;
    }
    return HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_;
}
const bool &Nano::HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg() {
    if (!loaded_HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_) counter_uncached_HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_) {
        if (!b_HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_ = true;
    }
    return HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg() {
    if (!loaded_HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_) counter_uncached_HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_) {
        if (!b_HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_ = true;
    }
    return HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg() {
    if (!loaded_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_) counter_uncached_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_) {
        if (!b_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_ = true;
    }
    return HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg() {
    if (!loaded_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_) counter_uncached_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_) {
        if (!b_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_ = true;
    }
    return HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1() {
    if (!loaded_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_) counter_uncached_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_++;
    else counter_cached_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_++;
    if (!loaded_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_) {
        if (!b_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_) throw std::runtime_error("HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1 branch doesn't exist");
        b_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_->GetEntry(index);
        loaded_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_ = true;
    }
    return HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_;
}
const bool &Nano::HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1() {
    if (!loaded_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_) counter_uncached_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_++;
    else counter_cached_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_++;
    if (!loaded_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_) {
        if (!b_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_) throw std::runtime_error("HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1 branch doesn't exist");
        b_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_->GetEntry(index);
        loaded_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_ = true;
    }
    return HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_;
}
const bool &Nano::HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60() {
    if (!loaded_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_) counter_uncached_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_++;
    else counter_cached_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_++;
    if (!loaded_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_) {
        if (!b_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_) throw std::runtime_error("HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60 branch doesn't exist");
        b_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_->GetEntry(index);
        loaded_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_ = true;
    }
    return HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_;
}
const bool &Nano::HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75() {
    if (!loaded_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_) counter_uncached_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_++;
    else counter_cached_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_++;
    if (!loaded_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_) {
        if (!b_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_) throw std::runtime_error("HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75 branch doesn't exist");
        b_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_->GetEntry(index);
        loaded_HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_ = true;
    }
    return HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_;
}
const bool &Nano::HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1() {
    if (!loaded_HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_) counter_uncached_HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_++;
    else counter_cached_HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_++;
    if (!loaded_HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_) {
        if (!b_HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_) throw std::runtime_error("HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1 branch doesn't exist");
        b_HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_->GetEntry(index);
        loaded_HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_ = true;
    }
    return HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_;
}
const bool &Nano::HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1() {
    if (!loaded_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_) counter_uncached_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_++;
    else counter_cached_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_++;
    if (!loaded_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_) {
        if (!b_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_) throw std::runtime_error("HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1 branch doesn't exist");
        b_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_->GetEntry(index);
        loaded_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_ = true;
    }
    return HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_;
}
const bool &Nano::HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleMu0() {
    if (!loaded_HLT_DoubleMu0_) counter_uncached_HLT_DoubleMu0_++;
    else counter_cached_HLT_DoubleMu0_++;
    if (!loaded_HLT_DoubleMu0_) {
        if (!b_HLT_DoubleMu0_) throw std::runtime_error("HLT_DoubleMu0 branch doesn't exist");
        b_HLT_DoubleMu0_->GetEntry(index);
        loaded_HLT_DoubleMu0_ = true;
    }
    return HLT_DoubleMu0_;
}
const bool &Nano::HLT_DoubleMu18NoFiltersNoVtx() {
    if (!loaded_HLT_DoubleMu18NoFiltersNoVtx_) counter_uncached_HLT_DoubleMu18NoFiltersNoVtx_++;
    else counter_cached_HLT_DoubleMu18NoFiltersNoVtx_++;
    if (!loaded_HLT_DoubleMu18NoFiltersNoVtx_) {
        if (!b_HLT_DoubleMu18NoFiltersNoVtx_) throw std::runtime_error("HLT_DoubleMu18NoFiltersNoVtx branch doesn't exist");
        b_HLT_DoubleMu18NoFiltersNoVtx_->GetEntry(index);
        loaded_HLT_DoubleMu18NoFiltersNoVtx_ = true;
    }
    return HLT_DoubleMu18NoFiltersNoVtx_;
}
const bool &Nano::HLT_DoubleMu20_7_Mass0to30_L1_DM4() {
    if (!loaded_HLT_DoubleMu20_7_Mass0to30_L1_DM4_) counter_uncached_HLT_DoubleMu20_7_Mass0to30_L1_DM4_++;
    else counter_cached_HLT_DoubleMu20_7_Mass0to30_L1_DM4_++;
    if (!loaded_HLT_DoubleMu20_7_Mass0to30_L1_DM4_) {
        if (!b_HLT_DoubleMu20_7_Mass0to30_L1_DM4_) throw std::runtime_error("HLT_DoubleMu20_7_Mass0to30_L1_DM4 branch doesn't exist");
        b_HLT_DoubleMu20_7_Mass0to30_L1_DM4_->GetEntry(index);
        loaded_HLT_DoubleMu20_7_Mass0to30_L1_DM4_ = true;
    }
    return HLT_DoubleMu20_7_Mass0to30_L1_DM4_;
}
const bool &Nano::HLT_DoubleMu20_7_Mass0to30_L1_DM4EG() {
    if (!loaded_HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_) counter_uncached_HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_++;
    else counter_cached_HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_++;
    if (!loaded_HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_) {
        if (!b_HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_) throw std::runtime_error("HLT_DoubleMu20_7_Mass0to30_L1_DM4EG branch doesn't exist");
        b_HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_->GetEntry(index);
        loaded_HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_ = true;
    }
    return HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_;
}
const bool &Nano::HLT_DoubleMu20_7_Mass0to30_Photon23() {
    if (!loaded_HLT_DoubleMu20_7_Mass0to30_Photon23_) counter_uncached_HLT_DoubleMu20_7_Mass0to30_Photon23_++;
    else counter_cached_HLT_DoubleMu20_7_Mass0to30_Photon23_++;
    if (!loaded_HLT_DoubleMu20_7_Mass0to30_Photon23_) {
        if (!b_HLT_DoubleMu20_7_Mass0to30_Photon23_) throw std::runtime_error("HLT_DoubleMu20_7_Mass0to30_Photon23 branch doesn't exist");
        b_HLT_DoubleMu20_7_Mass0to30_Photon23_->GetEntry(index);
        loaded_HLT_DoubleMu20_7_Mass0to30_Photon23_ = true;
    }
    return HLT_DoubleMu20_7_Mass0to30_Photon23_;
}
const bool &Nano::HLT_DoubleMu23NoFiltersNoVtxDisplaced() {
    if (!loaded_HLT_DoubleMu23NoFiltersNoVtxDisplaced_) counter_uncached_HLT_DoubleMu23NoFiltersNoVtxDisplaced_++;
    else counter_cached_HLT_DoubleMu23NoFiltersNoVtxDisplaced_++;
    if (!loaded_HLT_DoubleMu23NoFiltersNoVtxDisplaced_) {
        if (!b_HLT_DoubleMu23NoFiltersNoVtxDisplaced_) throw std::runtime_error("HLT_DoubleMu23NoFiltersNoVtxDisplaced branch doesn't exist");
        b_HLT_DoubleMu23NoFiltersNoVtxDisplaced_->GetEntry(index);
        loaded_HLT_DoubleMu23NoFiltersNoVtxDisplaced_ = true;
    }
    return HLT_DoubleMu23NoFiltersNoVtxDisplaced_;
}
const bool &Nano::HLT_DoubleMu28NoFiltersNoVtxDisplaced() {
    if (!loaded_HLT_DoubleMu28NoFiltersNoVtxDisplaced_) counter_uncached_HLT_DoubleMu28NoFiltersNoVtxDisplaced_++;
    else counter_cached_HLT_DoubleMu28NoFiltersNoVtxDisplaced_++;
    if (!loaded_HLT_DoubleMu28NoFiltersNoVtxDisplaced_) {
        if (!b_HLT_DoubleMu28NoFiltersNoVtxDisplaced_) throw std::runtime_error("HLT_DoubleMu28NoFiltersNoVtxDisplaced branch doesn't exist");
        b_HLT_DoubleMu28NoFiltersNoVtxDisplaced_->GetEntry(index);
        loaded_HLT_DoubleMu28NoFiltersNoVtxDisplaced_ = true;
    }
    return HLT_DoubleMu28NoFiltersNoVtxDisplaced_;
}
const bool &Nano::HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi() {
    if (!loaded_HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_) counter_uncached_HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_++;
    else counter_cached_HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_++;
    if (!loaded_HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_) {
        if (!b_HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_) throw std::runtime_error("HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi branch doesn't exist");
        b_HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_->GetEntry(index);
        loaded_HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_ = true;
    }
    return HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_;
}
const bool &Nano::HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi() {
    if (!loaded_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi_) counter_uncached_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi_++;
    else counter_cached_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi_++;
    if (!loaded_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi_) {
        if (!b_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi_) throw std::runtime_error("HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi branch doesn't exist");
        b_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi_->GetEntry(index);
        loaded_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi_ = true;
    }
    return HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi_;
}
const bool &Nano::HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05() {
    if (!loaded_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_) counter_uncached_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_++;
    else counter_cached_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_++;
    if (!loaded_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_) {
        if (!b_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_) throw std::runtime_error("HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05 branch doesn't exist");
        b_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_->GetEntry(index);
        loaded_HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_ = true;
    }
    return HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_;
}
const bool &Nano::HLT_DoubleMu33NoFiltersNoVtx() {
    if (!loaded_HLT_DoubleMu33NoFiltersNoVtx_) counter_uncached_HLT_DoubleMu33NoFiltersNoVtx_++;
    else counter_cached_HLT_DoubleMu33NoFiltersNoVtx_++;
    if (!loaded_HLT_DoubleMu33NoFiltersNoVtx_) {
        if (!b_HLT_DoubleMu33NoFiltersNoVtx_) throw std::runtime_error("HLT_DoubleMu33NoFiltersNoVtx branch doesn't exist");
        b_HLT_DoubleMu33NoFiltersNoVtx_->GetEntry(index);
        loaded_HLT_DoubleMu33NoFiltersNoVtx_ = true;
    }
    return HLT_DoubleMu33NoFiltersNoVtx_;
}
const bool &Nano::HLT_DoubleMu33NoFiltersNoVtxDisplaced() {
    if (!loaded_HLT_DoubleMu33NoFiltersNoVtxDisplaced_) counter_uncached_HLT_DoubleMu33NoFiltersNoVtxDisplaced_++;
    else counter_cached_HLT_DoubleMu33NoFiltersNoVtxDisplaced_++;
    if (!loaded_HLT_DoubleMu33NoFiltersNoVtxDisplaced_) {
        if (!b_HLT_DoubleMu33NoFiltersNoVtxDisplaced_) throw std::runtime_error("HLT_DoubleMu33NoFiltersNoVtxDisplaced branch doesn't exist");
        b_HLT_DoubleMu33NoFiltersNoVtxDisplaced_->GetEntry(index);
        loaded_HLT_DoubleMu33NoFiltersNoVtxDisplaced_ = true;
    }
    return HLT_DoubleMu33NoFiltersNoVtxDisplaced_;
}
const bool &Nano::HLT_DoubleMu38NoFiltersNoVtx() {
    if (!loaded_HLT_DoubleMu38NoFiltersNoVtx_) counter_uncached_HLT_DoubleMu38NoFiltersNoVtx_++;
    else counter_cached_HLT_DoubleMu38NoFiltersNoVtx_++;
    if (!loaded_HLT_DoubleMu38NoFiltersNoVtx_) {
        if (!b_HLT_DoubleMu38NoFiltersNoVtx_) throw std::runtime_error("HLT_DoubleMu38NoFiltersNoVtx branch doesn't exist");
        b_HLT_DoubleMu38NoFiltersNoVtx_->GetEntry(index);
        loaded_HLT_DoubleMu38NoFiltersNoVtx_ = true;
    }
    return HLT_DoubleMu38NoFiltersNoVtx_;
}
const bool &Nano::HLT_DoubleMu3_DCA_PFMET50_PFMHT60() {
    if (!loaded_HLT_DoubleMu3_DCA_PFMET50_PFMHT60_) counter_uncached_HLT_DoubleMu3_DCA_PFMET50_PFMHT60_++;
    else counter_cached_HLT_DoubleMu3_DCA_PFMET50_PFMHT60_++;
    if (!loaded_HLT_DoubleMu3_DCA_PFMET50_PFMHT60_) {
        if (!b_HLT_DoubleMu3_DCA_PFMET50_PFMHT60_) throw std::runtime_error("HLT_DoubleMu3_DCA_PFMET50_PFMHT60 branch doesn't exist");
        b_HLT_DoubleMu3_DCA_PFMET50_PFMHT60_->GetEntry(index);
        loaded_HLT_DoubleMu3_DCA_PFMET50_PFMHT60_ = true;
    }
    return HLT_DoubleMu3_DCA_PFMET50_PFMHT60_;
}
const bool &Nano::HLT_DoubleMu3_DZ_PFMET50_PFMHT60() {
    if (!loaded_HLT_DoubleMu3_DZ_PFMET50_PFMHT60_) counter_uncached_HLT_DoubleMu3_DZ_PFMET50_PFMHT60_++;
    else counter_cached_HLT_DoubleMu3_DZ_PFMET50_PFMHT60_++;
    if (!loaded_HLT_DoubleMu3_DZ_PFMET50_PFMHT60_) {
        if (!b_HLT_DoubleMu3_DZ_PFMET50_PFMHT60_) throw std::runtime_error("HLT_DoubleMu3_DZ_PFMET50_PFMHT60 branch doesn't exist");
        b_HLT_DoubleMu3_DZ_PFMET50_PFMHT60_->GetEntry(index);
        loaded_HLT_DoubleMu3_DZ_PFMET50_PFMHT60_ = true;
    }
    return HLT_DoubleMu3_DZ_PFMET50_PFMHT60_;
}
const bool &Nano::HLT_DoubleMu3_DZ_PFMET70_PFMHT70() {
    if (!loaded_HLT_DoubleMu3_DZ_PFMET70_PFMHT70_) counter_uncached_HLT_DoubleMu3_DZ_PFMET70_PFMHT70_++;
    else counter_cached_HLT_DoubleMu3_DZ_PFMET70_PFMHT70_++;
    if (!loaded_HLT_DoubleMu3_DZ_PFMET70_PFMHT70_) {
        if (!b_HLT_DoubleMu3_DZ_PFMET70_PFMHT70_) throw std::runtime_error("HLT_DoubleMu3_DZ_PFMET70_PFMHT70 branch doesn't exist");
        b_HLT_DoubleMu3_DZ_PFMET70_PFMHT70_->GetEntry(index);
        loaded_HLT_DoubleMu3_DZ_PFMET70_PFMHT70_ = true;
    }
    return HLT_DoubleMu3_DZ_PFMET70_PFMHT70_;
}
const bool &Nano::HLT_DoubleMu3_DZ_PFMET90_PFMHT90() {
    if (!loaded_HLT_DoubleMu3_DZ_PFMET90_PFMHT90_) counter_uncached_HLT_DoubleMu3_DZ_PFMET90_PFMHT90_++;
    else counter_cached_HLT_DoubleMu3_DZ_PFMET90_PFMHT90_++;
    if (!loaded_HLT_DoubleMu3_DZ_PFMET90_PFMHT90_) {
        if (!b_HLT_DoubleMu3_DZ_PFMET90_PFMHT90_) throw std::runtime_error("HLT_DoubleMu3_DZ_PFMET90_PFMHT90 branch doesn't exist");
        b_HLT_DoubleMu3_DZ_PFMET90_PFMHT90_->GetEntry(index);
        loaded_HLT_DoubleMu3_DZ_PFMET90_PFMHT90_ = true;
    }
    return HLT_DoubleMu3_DZ_PFMET90_PFMHT90_;
}
const bool &Nano::HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon() {
    if (!loaded_HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_) counter_uncached_HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_++;
    else counter_cached_HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_++;
    if (!loaded_HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_) {
        if (!b_HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_) throw std::runtime_error("HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon branch doesn't exist");
        b_HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_->GetEntry(index);
        loaded_HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_ = true;
    }
    return HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_;
}
const bool &Nano::HLT_DoubleMu3_PFMET50() {
    if (!loaded_HLT_DoubleMu3_PFMET50_) counter_uncached_HLT_DoubleMu3_PFMET50_++;
    else counter_cached_HLT_DoubleMu3_PFMET50_++;
    if (!loaded_HLT_DoubleMu3_PFMET50_) {
        if (!b_HLT_DoubleMu3_PFMET50_) throw std::runtime_error("HLT_DoubleMu3_PFMET50 branch doesn't exist");
        b_HLT_DoubleMu3_PFMET50_->GetEntry(index);
        loaded_HLT_DoubleMu3_PFMET50_ = true;
    }
    return HLT_DoubleMu3_PFMET50_;
}
const bool &Nano::HLT_DoubleMu3_TkMu_DsTau3Mu() {
    if (!loaded_HLT_DoubleMu3_TkMu_DsTau3Mu_) counter_uncached_HLT_DoubleMu3_TkMu_DsTau3Mu_++;
    else counter_cached_HLT_DoubleMu3_TkMu_DsTau3Mu_++;
    if (!loaded_HLT_DoubleMu3_TkMu_DsTau3Mu_) {
        if (!b_HLT_DoubleMu3_TkMu_DsTau3Mu_) throw std::runtime_error("HLT_DoubleMu3_TkMu_DsTau3Mu branch doesn't exist");
        b_HLT_DoubleMu3_TkMu_DsTau3Mu_->GetEntry(index);
        loaded_HLT_DoubleMu3_TkMu_DsTau3Mu_ = true;
    }
    return HLT_DoubleMu3_TkMu_DsTau3Mu_;
}
const bool &Nano::HLT_DoubleMu3_Trk_Tau3mu() {
    if (!loaded_HLT_DoubleMu3_Trk_Tau3mu_) counter_uncached_HLT_DoubleMu3_Trk_Tau3mu_++;
    else counter_cached_HLT_DoubleMu3_Trk_Tau3mu_++;
    if (!loaded_HLT_DoubleMu3_Trk_Tau3mu_) {
        if (!b_HLT_DoubleMu3_Trk_Tau3mu_) throw std::runtime_error("HLT_DoubleMu3_Trk_Tau3mu branch doesn't exist");
        b_HLT_DoubleMu3_Trk_Tau3mu_->GetEntry(index);
        loaded_HLT_DoubleMu3_Trk_Tau3mu_ = true;
    }
    return HLT_DoubleMu3_Trk_Tau3mu_;
}
const bool &Nano::HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass() {
    if (!loaded_HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_) counter_uncached_HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_++;
    else counter_cached_HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_++;
    if (!loaded_HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_) {
        if (!b_HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_) throw std::runtime_error("HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass branch doesn't exist");
        b_HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_->GetEntry(index);
        loaded_HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_ = true;
    }
    return HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_;
}
const bool &Nano::HLT_DoubleMu40NoFiltersNoVtxDisplaced() {
    if (!loaded_HLT_DoubleMu40NoFiltersNoVtxDisplaced_) counter_uncached_HLT_DoubleMu40NoFiltersNoVtxDisplaced_++;
    else counter_cached_HLT_DoubleMu40NoFiltersNoVtxDisplaced_++;
    if (!loaded_HLT_DoubleMu40NoFiltersNoVtxDisplaced_) {
        if (!b_HLT_DoubleMu40NoFiltersNoVtxDisplaced_) throw std::runtime_error("HLT_DoubleMu40NoFiltersNoVtxDisplaced branch doesn't exist");
        b_HLT_DoubleMu40NoFiltersNoVtxDisplaced_->GetEntry(index);
        loaded_HLT_DoubleMu40NoFiltersNoVtxDisplaced_ = true;
    }
    return HLT_DoubleMu40NoFiltersNoVtxDisplaced_;
}
const bool &Nano::HLT_DoubleMu43NoFiltersNoVtx() {
    if (!loaded_HLT_DoubleMu43NoFiltersNoVtx_) counter_uncached_HLT_DoubleMu43NoFiltersNoVtx_++;
    else counter_cached_HLT_DoubleMu43NoFiltersNoVtx_++;
    if (!loaded_HLT_DoubleMu43NoFiltersNoVtx_) {
        if (!b_HLT_DoubleMu43NoFiltersNoVtx_) throw std::runtime_error("HLT_DoubleMu43NoFiltersNoVtx branch doesn't exist");
        b_HLT_DoubleMu43NoFiltersNoVtx_->GetEntry(index);
        loaded_HLT_DoubleMu43NoFiltersNoVtx_ = true;
    }
    return HLT_DoubleMu43NoFiltersNoVtx_;
}
const bool &Nano::HLT_DoubleMu48NoFiltersNoVtx() {
    if (!loaded_HLT_DoubleMu48NoFiltersNoVtx_) counter_uncached_HLT_DoubleMu48NoFiltersNoVtx_++;
    else counter_cached_HLT_DoubleMu48NoFiltersNoVtx_++;
    if (!loaded_HLT_DoubleMu48NoFiltersNoVtx_) {
        if (!b_HLT_DoubleMu48NoFiltersNoVtx_) throw std::runtime_error("HLT_DoubleMu48NoFiltersNoVtx branch doesn't exist");
        b_HLT_DoubleMu48NoFiltersNoVtx_->GetEntry(index);
        loaded_HLT_DoubleMu48NoFiltersNoVtx_ = true;
    }
    return HLT_DoubleMu48NoFiltersNoVtx_;
}
const bool &Nano::HLT_DoubleMu4_3_Bs() {
    if (!loaded_HLT_DoubleMu4_3_Bs_) counter_uncached_HLT_DoubleMu4_3_Bs_++;
    else counter_cached_HLT_DoubleMu4_3_Bs_++;
    if (!loaded_HLT_DoubleMu4_3_Bs_) {
        if (!b_HLT_DoubleMu4_3_Bs_) throw std::runtime_error("HLT_DoubleMu4_3_Bs branch doesn't exist");
        b_HLT_DoubleMu4_3_Bs_->GetEntry(index);
        loaded_HLT_DoubleMu4_3_Bs_ = true;
    }
    return HLT_DoubleMu4_3_Bs_;
}
const bool &Nano::HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG() {
    if (!loaded_HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_) counter_uncached_HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_++;
    else counter_cached_HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_++;
    if (!loaded_HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_) {
        if (!b_HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_) throw std::runtime_error("HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG branch doesn't exist");
        b_HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_->GetEntry(index);
        loaded_HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_ = true;
    }
    return HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_;
}
const bool &Nano::HLT_DoubleMu4_3_Jpsi() {
    if (!loaded_HLT_DoubleMu4_3_Jpsi_) counter_uncached_HLT_DoubleMu4_3_Jpsi_++;
    else counter_cached_HLT_DoubleMu4_3_Jpsi_++;
    if (!loaded_HLT_DoubleMu4_3_Jpsi_) {
        if (!b_HLT_DoubleMu4_3_Jpsi_) throw std::runtime_error("HLT_DoubleMu4_3_Jpsi branch doesn't exist");
        b_HLT_DoubleMu4_3_Jpsi_->GetEntry(index);
        loaded_HLT_DoubleMu4_3_Jpsi_ = true;
    }
    return HLT_DoubleMu4_3_Jpsi_;
}
const bool &Nano::HLT_DoubleMu4_3_Jpsi_Displaced() {
    if (!loaded_HLT_DoubleMu4_3_Jpsi_Displaced_) counter_uncached_HLT_DoubleMu4_3_Jpsi_Displaced_++;
    else counter_cached_HLT_DoubleMu4_3_Jpsi_Displaced_++;
    if (!loaded_HLT_DoubleMu4_3_Jpsi_Displaced_) {
        if (!b_HLT_DoubleMu4_3_Jpsi_Displaced_) throw std::runtime_error("HLT_DoubleMu4_3_Jpsi_Displaced branch doesn't exist");
        b_HLT_DoubleMu4_3_Jpsi_Displaced_->GetEntry(index);
        loaded_HLT_DoubleMu4_3_Jpsi_Displaced_ = true;
    }
    return HLT_DoubleMu4_3_Jpsi_Displaced_;
}
const bool &Nano::HLT_DoubleMu4_3_LowMass() {
    if (!loaded_HLT_DoubleMu4_3_LowMass_) counter_uncached_HLT_DoubleMu4_3_LowMass_++;
    else counter_cached_HLT_DoubleMu4_3_LowMass_++;
    if (!loaded_HLT_DoubleMu4_3_LowMass_) {
        if (!b_HLT_DoubleMu4_3_LowMass_) throw std::runtime_error("HLT_DoubleMu4_3_LowMass branch doesn't exist");
        b_HLT_DoubleMu4_3_LowMass_->GetEntry(index);
        loaded_HLT_DoubleMu4_3_LowMass_ = true;
    }
    return HLT_DoubleMu4_3_LowMass_;
}
const bool &Nano::HLT_DoubleMu4_3_Photon4_BsToMMG() {
    if (!loaded_HLT_DoubleMu4_3_Photon4_BsToMMG_) counter_uncached_HLT_DoubleMu4_3_Photon4_BsToMMG_++;
    else counter_cached_HLT_DoubleMu4_3_Photon4_BsToMMG_++;
    if (!loaded_HLT_DoubleMu4_3_Photon4_BsToMMG_) {
        if (!b_HLT_DoubleMu4_3_Photon4_BsToMMG_) throw std::runtime_error("HLT_DoubleMu4_3_Photon4_BsToMMG branch doesn't exist");
        b_HLT_DoubleMu4_3_Photon4_BsToMMG_->GetEntry(index);
        loaded_HLT_DoubleMu4_3_Photon4_BsToMMG_ = true;
    }
    return HLT_DoubleMu4_3_Photon4_BsToMMG_;
}
const bool &Nano::HLT_DoubleMu4_JpsiTrkTrk_Displaced() {
    if (!loaded_HLT_DoubleMu4_JpsiTrkTrk_Displaced_) counter_uncached_HLT_DoubleMu4_JpsiTrkTrk_Displaced_++;
    else counter_cached_HLT_DoubleMu4_JpsiTrkTrk_Displaced_++;
    if (!loaded_HLT_DoubleMu4_JpsiTrkTrk_Displaced_) {
        if (!b_HLT_DoubleMu4_JpsiTrkTrk_Displaced_) throw std::runtime_error("HLT_DoubleMu4_JpsiTrkTrk_Displaced branch doesn't exist");
        b_HLT_DoubleMu4_JpsiTrkTrk_Displaced_->GetEntry(index);
        loaded_HLT_DoubleMu4_JpsiTrkTrk_Displaced_ = true;
    }
    return HLT_DoubleMu4_JpsiTrkTrk_Displaced_;
}
const bool &Nano::HLT_DoubleMu4_JpsiTrk_Bc() {
    if (!loaded_HLT_DoubleMu4_JpsiTrk_Bc_) counter_uncached_HLT_DoubleMu4_JpsiTrk_Bc_++;
    else counter_cached_HLT_DoubleMu4_JpsiTrk_Bc_++;
    if (!loaded_HLT_DoubleMu4_JpsiTrk_Bc_) {
        if (!b_HLT_DoubleMu4_JpsiTrk_Bc_) throw std::runtime_error("HLT_DoubleMu4_JpsiTrk_Bc branch doesn't exist");
        b_HLT_DoubleMu4_JpsiTrk_Bc_->GetEntry(index);
        loaded_HLT_DoubleMu4_JpsiTrk_Bc_ = true;
    }
    return HLT_DoubleMu4_JpsiTrk_Bc_;
}
const bool &Nano::HLT_DoubleMu4_JpsiTrk_Displaced() {
    if (!loaded_HLT_DoubleMu4_JpsiTrk_Displaced_) counter_uncached_HLT_DoubleMu4_JpsiTrk_Displaced_++;
    else counter_cached_HLT_DoubleMu4_JpsiTrk_Displaced_++;
    if (!loaded_HLT_DoubleMu4_JpsiTrk_Displaced_) {
        if (!b_HLT_DoubleMu4_JpsiTrk_Displaced_) throw std::runtime_error("HLT_DoubleMu4_JpsiTrk_Displaced branch doesn't exist");
        b_HLT_DoubleMu4_JpsiTrk_Displaced_->GetEntry(index);
        loaded_HLT_DoubleMu4_JpsiTrk_Displaced_ = true;
    }
    return HLT_DoubleMu4_JpsiTrk_Displaced_;
}
const bool &Nano::HLT_DoubleMu4_Jpsi_Displaced() {
    if (!loaded_HLT_DoubleMu4_Jpsi_Displaced_) counter_uncached_HLT_DoubleMu4_Jpsi_Displaced_++;
    else counter_cached_HLT_DoubleMu4_Jpsi_Displaced_++;
    if (!loaded_HLT_DoubleMu4_Jpsi_Displaced_) {
        if (!b_HLT_DoubleMu4_Jpsi_Displaced_) throw std::runtime_error("HLT_DoubleMu4_Jpsi_Displaced branch doesn't exist");
        b_HLT_DoubleMu4_Jpsi_Displaced_->GetEntry(index);
        loaded_HLT_DoubleMu4_Jpsi_Displaced_ = true;
    }
    return HLT_DoubleMu4_Jpsi_Displaced_;
}
const bool &Nano::HLT_DoubleMu4_Jpsi_NoVertexing() {
    if (!loaded_HLT_DoubleMu4_Jpsi_NoVertexing_) counter_uncached_HLT_DoubleMu4_Jpsi_NoVertexing_++;
    else counter_cached_HLT_DoubleMu4_Jpsi_NoVertexing_++;
    if (!loaded_HLT_DoubleMu4_Jpsi_NoVertexing_) {
        if (!b_HLT_DoubleMu4_Jpsi_NoVertexing_) throw std::runtime_error("HLT_DoubleMu4_Jpsi_NoVertexing branch doesn't exist");
        b_HLT_DoubleMu4_Jpsi_NoVertexing_->GetEntry(index);
        loaded_HLT_DoubleMu4_Jpsi_NoVertexing_ = true;
    }
    return HLT_DoubleMu4_Jpsi_NoVertexing_;
}
const bool &Nano::HLT_DoubleMu4_LowMassNonResonantTrk_Displaced() {
    if (!loaded_HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_) counter_uncached_HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_++;
    else counter_cached_HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_++;
    if (!loaded_HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_) {
        if (!b_HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_) throw std::runtime_error("HLT_DoubleMu4_LowMassNonResonantTrk_Displaced branch doesn't exist");
        b_HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_->GetEntry(index);
        loaded_HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_ = true;
    }
    return HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_;
}
const bool &Nano::HLT_DoubleMu4_LowMass_Displaced() {
    if (!loaded_HLT_DoubleMu4_LowMass_Displaced_) counter_uncached_HLT_DoubleMu4_LowMass_Displaced_++;
    else counter_cached_HLT_DoubleMu4_LowMass_Displaced_++;
    if (!loaded_HLT_DoubleMu4_LowMass_Displaced_) {
        if (!b_HLT_DoubleMu4_LowMass_Displaced_) throw std::runtime_error("HLT_DoubleMu4_LowMass_Displaced branch doesn't exist");
        b_HLT_DoubleMu4_LowMass_Displaced_->GetEntry(index);
        loaded_HLT_DoubleMu4_LowMass_Displaced_ = true;
    }
    return HLT_DoubleMu4_LowMass_Displaced_;
}
const bool &Nano::HLT_DoubleMu4_Mass3p8_DZ_PFHT350() {
    if (!loaded_HLT_DoubleMu4_Mass3p8_DZ_PFHT350_) counter_uncached_HLT_DoubleMu4_Mass3p8_DZ_PFHT350_++;
    else counter_cached_HLT_DoubleMu4_Mass3p8_DZ_PFHT350_++;
    if (!loaded_HLT_DoubleMu4_Mass3p8_DZ_PFHT350_) {
        if (!b_HLT_DoubleMu4_Mass3p8_DZ_PFHT350_) throw std::runtime_error("HLT_DoubleMu4_Mass3p8_DZ_PFHT350 branch doesn't exist");
        b_HLT_DoubleMu4_Mass3p8_DZ_PFHT350_->GetEntry(index);
        loaded_HLT_DoubleMu4_Mass3p8_DZ_PFHT350_ = true;
    }
    return HLT_DoubleMu4_Mass3p8_DZ_PFHT350_;
}
const bool &Nano::HLT_DoubleMu4_Mass8_DZ_PFHT350() {
    if (!loaded_HLT_DoubleMu4_Mass8_DZ_PFHT350_) counter_uncached_HLT_DoubleMu4_Mass8_DZ_PFHT350_++;
    else counter_cached_HLT_DoubleMu4_Mass8_DZ_PFHT350_++;
    if (!loaded_HLT_DoubleMu4_Mass8_DZ_PFHT350_) {
        if (!b_HLT_DoubleMu4_Mass8_DZ_PFHT350_) throw std::runtime_error("HLT_DoubleMu4_Mass8_DZ_PFHT350 branch doesn't exist");
        b_HLT_DoubleMu4_Mass8_DZ_PFHT350_->GetEntry(index);
        loaded_HLT_DoubleMu4_Mass8_DZ_PFHT350_ = true;
    }
    return HLT_DoubleMu4_Mass8_DZ_PFHT350_;
}
const bool &Nano::HLT_DoubleMu4_MuMuTrk_Displaced() {
    if (!loaded_HLT_DoubleMu4_MuMuTrk_Displaced_) counter_uncached_HLT_DoubleMu4_MuMuTrk_Displaced_++;
    else counter_cached_HLT_DoubleMu4_MuMuTrk_Displaced_++;
    if (!loaded_HLT_DoubleMu4_MuMuTrk_Displaced_) {
        if (!b_HLT_DoubleMu4_MuMuTrk_Displaced_) throw std::runtime_error("HLT_DoubleMu4_MuMuTrk_Displaced branch doesn't exist");
        b_HLT_DoubleMu4_MuMuTrk_Displaced_->GetEntry(index);
        loaded_HLT_DoubleMu4_MuMuTrk_Displaced_ = true;
    }
    return HLT_DoubleMu4_MuMuTrk_Displaced_;
}
const bool &Nano::HLT_DoubleMu4_PsiPrimeTrk_Displaced() {
    if (!loaded_HLT_DoubleMu4_PsiPrimeTrk_Displaced_) counter_uncached_HLT_DoubleMu4_PsiPrimeTrk_Displaced_++;
    else counter_cached_HLT_DoubleMu4_PsiPrimeTrk_Displaced_++;
    if (!loaded_HLT_DoubleMu4_PsiPrimeTrk_Displaced_) {
        if (!b_HLT_DoubleMu4_PsiPrimeTrk_Displaced_) throw std::runtime_error("HLT_DoubleMu4_PsiPrimeTrk_Displaced branch doesn't exist");
        b_HLT_DoubleMu4_PsiPrimeTrk_Displaced_->GetEntry(index);
        loaded_HLT_DoubleMu4_PsiPrimeTrk_Displaced_ = true;
    }
    return HLT_DoubleMu4_PsiPrimeTrk_Displaced_;
}
const bool &Nano::HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL() {
    if (!loaded_HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_) counter_uncached_HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_++;
    else counter_cached_HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_++;
    if (!loaded_HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_) {
        if (!b_HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_) throw std::runtime_error("HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL branch doesn't exist");
        b_HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_->GetEntry(index);
        loaded_HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_ = true;
    }
    return HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_;
}
const bool &Nano::HLT_DoubleMu8_Mass8_PFHT250() {
    if (!loaded_HLT_DoubleMu8_Mass8_PFHT250_) counter_uncached_HLT_DoubleMu8_Mass8_PFHT250_++;
    else counter_cached_HLT_DoubleMu8_Mass8_PFHT250_++;
    if (!loaded_HLT_DoubleMu8_Mass8_PFHT250_) {
        if (!b_HLT_DoubleMu8_Mass8_PFHT250_) throw std::runtime_error("HLT_DoubleMu8_Mass8_PFHT250 branch doesn't exist");
        b_HLT_DoubleMu8_Mass8_PFHT250_->GetEntry(index);
        loaded_HLT_DoubleMu8_Mass8_PFHT250_ = true;
    }
    return HLT_DoubleMu8_Mass8_PFHT250_;
}
const bool &Nano::HLT_DoubleMu8_Mass8_PFHT300() {
    if (!loaded_HLT_DoubleMu8_Mass8_PFHT300_) counter_uncached_HLT_DoubleMu8_Mass8_PFHT300_++;
    else counter_cached_HLT_DoubleMu8_Mass8_PFHT300_++;
    if (!loaded_HLT_DoubleMu8_Mass8_PFHT300_) {
        if (!b_HLT_DoubleMu8_Mass8_PFHT300_) throw std::runtime_error("HLT_DoubleMu8_Mass8_PFHT300 branch doesn't exist");
        b_HLT_DoubleMu8_Mass8_PFHT300_->GetEntry(index);
        loaded_HLT_DoubleMu8_Mass8_PFHT300_ = true;
    }
    return HLT_DoubleMu8_Mass8_PFHT300_;
}
const bool &Nano::HLT_DoubleMu8_Mass8_PFHT350() {
    if (!loaded_HLT_DoubleMu8_Mass8_PFHT350_) counter_uncached_HLT_DoubleMu8_Mass8_PFHT350_++;
    else counter_cached_HLT_DoubleMu8_Mass8_PFHT350_++;
    if (!loaded_HLT_DoubleMu8_Mass8_PFHT350_) {
        if (!b_HLT_DoubleMu8_Mass8_PFHT350_) throw std::runtime_error("HLT_DoubleMu8_Mass8_PFHT350 branch doesn't exist");
        b_HLT_DoubleMu8_Mass8_PFHT350_->GetEntry(index);
        loaded_HLT_DoubleMu8_Mass8_PFHT350_ = true;
    }
    return HLT_DoubleMu8_Mass8_PFHT350_;
}
const bool &Nano::HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33() {
    if (!loaded_HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33_) counter_uncached_HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33_++;
    else counter_cached_HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33_++;
    if (!loaded_HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33_) {
        if (!b_HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33_) throw std::runtime_error("HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33 branch doesn't exist");
        b_HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33_->GetEntry(index);
        loaded_HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33_ = true;
    }
    return HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33_;
}
const bool &Nano::HLT_DoublePFJets100_CaloBTagCSV_p33() {
    if (!loaded_HLT_DoublePFJets100_CaloBTagCSV_p33_) counter_uncached_HLT_DoublePFJets100_CaloBTagCSV_p33_++;
    else counter_cached_HLT_DoublePFJets100_CaloBTagCSV_p33_++;
    if (!loaded_HLT_DoublePFJets100_CaloBTagCSV_p33_) {
        if (!b_HLT_DoublePFJets100_CaloBTagCSV_p33_) throw std::runtime_error("HLT_DoublePFJets100_CaloBTagCSV_p33 branch doesn't exist");
        b_HLT_DoublePFJets100_CaloBTagCSV_p33_->GetEntry(index);
        loaded_HLT_DoublePFJets100_CaloBTagCSV_p33_ = true;
    }
    return HLT_DoublePFJets100_CaloBTagCSV_p33_;
}
const bool &Nano::HLT_DoublePFJets100_CaloBTagCSV_p79() {
    if (!loaded_HLT_DoublePFJets100_CaloBTagCSV_p79_) counter_uncached_HLT_DoublePFJets100_CaloBTagCSV_p79_++;
    else counter_cached_HLT_DoublePFJets100_CaloBTagCSV_p79_++;
    if (!loaded_HLT_DoublePFJets100_CaloBTagCSV_p79_) {
        if (!b_HLT_DoublePFJets100_CaloBTagCSV_p79_) throw std::runtime_error("HLT_DoublePFJets100_CaloBTagCSV_p79 branch doesn't exist");
        b_HLT_DoublePFJets100_CaloBTagCSV_p79_->GetEntry(index);
        loaded_HLT_DoublePFJets100_CaloBTagCSV_p79_ = true;
    }
    return HLT_DoublePFJets100_CaloBTagCSV_p79_;
}
const bool &Nano::HLT_DoublePFJets100_CaloBTagDeepCSV_p71() {
    if (!loaded_HLT_DoublePFJets100_CaloBTagDeepCSV_p71_) counter_uncached_HLT_DoublePFJets100_CaloBTagDeepCSV_p71_++;
    else counter_cached_HLT_DoublePFJets100_CaloBTagDeepCSV_p71_++;
    if (!loaded_HLT_DoublePFJets100_CaloBTagDeepCSV_p71_) {
        if (!b_HLT_DoublePFJets100_CaloBTagDeepCSV_p71_) throw std::runtime_error("HLT_DoublePFJets100_CaloBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_DoublePFJets100_CaloBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets100_CaloBTagDeepCSV_p71_ = true;
    }
    return HLT_DoublePFJets100_CaloBTagDeepCSV_p71_;
}
const bool &Nano::HLT_DoublePFJets100_PFBTagDeepCSV_p71() {
    if (!loaded_HLT_DoublePFJets100_PFBTagDeepCSV_p71_) counter_uncached_HLT_DoublePFJets100_PFBTagDeepCSV_p71_++;
    else counter_cached_HLT_DoublePFJets100_PFBTagDeepCSV_p71_++;
    if (!loaded_HLT_DoublePFJets100_PFBTagDeepCSV_p71_) {
        if (!b_HLT_DoublePFJets100_PFBTagDeepCSV_p71_) throw std::runtime_error("HLT_DoublePFJets100_PFBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_DoublePFJets100_PFBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets100_PFBTagDeepCSV_p71_ = true;
    }
    return HLT_DoublePFJets100_PFBTagDeepCSV_p71_;
}
const bool &Nano::HLT_DoublePFJets100_PFBTagDeepJet_p71() {
    if (!loaded_HLT_DoublePFJets100_PFBTagDeepJet_p71_) counter_uncached_HLT_DoublePFJets100_PFBTagDeepJet_p71_++;
    else counter_cached_HLT_DoublePFJets100_PFBTagDeepJet_p71_++;
    if (!loaded_HLT_DoublePFJets100_PFBTagDeepJet_p71_) {
        if (!b_HLT_DoublePFJets100_PFBTagDeepJet_p71_) throw std::runtime_error("HLT_DoublePFJets100_PFBTagDeepJet_p71 branch doesn't exist");
        b_HLT_DoublePFJets100_PFBTagDeepJet_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets100_PFBTagDeepJet_p71_ = true;
    }
    return HLT_DoublePFJets100_PFBTagDeepJet_p71_;
}
const bool &Nano::HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33() {
    if (!loaded_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33_) counter_uncached_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33_++;
    else counter_cached_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33_++;
    if (!loaded_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33_) {
        if (!b_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33_) throw std::runtime_error("HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33 branch doesn't exist");
        b_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33_->GetEntry(index);
        loaded_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33_ = true;
    }
    return HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33_;
}
const bool &Nano::HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79() {
    if (!loaded_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79_) counter_uncached_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79_++;
    else counter_cached_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79_++;
    if (!loaded_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79_) {
        if (!b_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79_) throw std::runtime_error("HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79 branch doesn't exist");
        b_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79_->GetEntry(index);
        loaded_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79_ = true;
    }
    return HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79_;
}
const bool &Nano::HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71() {
    if (!loaded_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) counter_uncached_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_++;
    else counter_cached_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_++;
    if (!loaded_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) {
        if (!b_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) throw std::runtime_error("HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ = true;
    }
    return HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_;
}
const bool &Nano::HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71() {
    if (!loaded_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_) counter_uncached_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_++;
    else counter_cached_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_++;
    if (!loaded_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_) {
        if (!b_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_) throw std::runtime_error("HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_ = true;
    }
    return HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_;
}
const bool &Nano::HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71() {
    if (!loaded_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_) counter_uncached_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_++;
    else counter_cached_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_++;
    if (!loaded_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_) {
        if (!b_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_) throw std::runtime_error("HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71 branch doesn't exist");
        b_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_ = true;
    }
    return HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_;
}
const bool &Nano::HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33() {
    if (!loaded_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33_) counter_uncached_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33_++;
    else counter_cached_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33_++;
    if (!loaded_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33_) {
        if (!b_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33_) throw std::runtime_error("HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33 branch doesn't exist");
        b_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33_->GetEntry(index);
        loaded_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33_ = true;
    }
    return HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33_;
}
const bool &Nano::HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79() {
    if (!loaded_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79_) counter_uncached_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79_++;
    else counter_cached_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79_++;
    if (!loaded_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79_) {
        if (!b_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79_) throw std::runtime_error("HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79 branch doesn't exist");
        b_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79_->GetEntry(index);
        loaded_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79_ = true;
    }
    return HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79_;
}
const bool &Nano::HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71() {
    if (!loaded_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) counter_uncached_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_++;
    else counter_cached_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_++;
    if (!loaded_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) {
        if (!b_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) throw std::runtime_error("HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ = true;
    }
    return HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_;
}
const bool &Nano::HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71() {
    if (!loaded_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_) counter_uncached_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_++;
    else counter_cached_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_++;
    if (!loaded_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_) {
        if (!b_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_) throw std::runtime_error("HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_ = true;
    }
    return HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_;
}
const bool &Nano::HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71() {
    if (!loaded_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_) counter_uncached_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_++;
    else counter_cached_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_++;
    if (!loaded_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_) {
        if (!b_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_) throw std::runtime_error("HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71 branch doesn't exist");
        b_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_ = true;
    }
    return HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_;
}
const bool &Nano::HLT_DoublePFJets200_CaloBTagCSV_p33() {
    if (!loaded_HLT_DoublePFJets200_CaloBTagCSV_p33_) counter_uncached_HLT_DoublePFJets200_CaloBTagCSV_p33_++;
    else counter_cached_HLT_DoublePFJets200_CaloBTagCSV_p33_++;
    if (!loaded_HLT_DoublePFJets200_CaloBTagCSV_p33_) {
        if (!b_HLT_DoublePFJets200_CaloBTagCSV_p33_) throw std::runtime_error("HLT_DoublePFJets200_CaloBTagCSV_p33 branch doesn't exist");
        b_HLT_DoublePFJets200_CaloBTagCSV_p33_->GetEntry(index);
        loaded_HLT_DoublePFJets200_CaloBTagCSV_p33_ = true;
    }
    return HLT_DoublePFJets200_CaloBTagCSV_p33_;
}
const bool &Nano::HLT_DoublePFJets200_CaloBTagCSV_p79() {
    if (!loaded_HLT_DoublePFJets200_CaloBTagCSV_p79_) counter_uncached_HLT_DoublePFJets200_CaloBTagCSV_p79_++;
    else counter_cached_HLT_DoublePFJets200_CaloBTagCSV_p79_++;
    if (!loaded_HLT_DoublePFJets200_CaloBTagCSV_p79_) {
        if (!b_HLT_DoublePFJets200_CaloBTagCSV_p79_) throw std::runtime_error("HLT_DoublePFJets200_CaloBTagCSV_p79 branch doesn't exist");
        b_HLT_DoublePFJets200_CaloBTagCSV_p79_->GetEntry(index);
        loaded_HLT_DoublePFJets200_CaloBTagCSV_p79_ = true;
    }
    return HLT_DoublePFJets200_CaloBTagCSV_p79_;
}
const bool &Nano::HLT_DoublePFJets200_CaloBTagDeepCSV_p71() {
    if (!loaded_HLT_DoublePFJets200_CaloBTagDeepCSV_p71_) counter_uncached_HLT_DoublePFJets200_CaloBTagDeepCSV_p71_++;
    else counter_cached_HLT_DoublePFJets200_CaloBTagDeepCSV_p71_++;
    if (!loaded_HLT_DoublePFJets200_CaloBTagDeepCSV_p71_) {
        if (!b_HLT_DoublePFJets200_CaloBTagDeepCSV_p71_) throw std::runtime_error("HLT_DoublePFJets200_CaloBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_DoublePFJets200_CaloBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets200_CaloBTagDeepCSV_p71_ = true;
    }
    return HLT_DoublePFJets200_CaloBTagDeepCSV_p71_;
}
const bool &Nano::HLT_DoublePFJets200_PFBTagDeepCSV_p71() {
    if (!loaded_HLT_DoublePFJets200_PFBTagDeepCSV_p71_) counter_uncached_HLT_DoublePFJets200_PFBTagDeepCSV_p71_++;
    else counter_cached_HLT_DoublePFJets200_PFBTagDeepCSV_p71_++;
    if (!loaded_HLT_DoublePFJets200_PFBTagDeepCSV_p71_) {
        if (!b_HLT_DoublePFJets200_PFBTagDeepCSV_p71_) throw std::runtime_error("HLT_DoublePFJets200_PFBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_DoublePFJets200_PFBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets200_PFBTagDeepCSV_p71_ = true;
    }
    return HLT_DoublePFJets200_PFBTagDeepCSV_p71_;
}
const bool &Nano::HLT_DoublePFJets200_PFBTagDeepJet_p71() {
    if (!loaded_HLT_DoublePFJets200_PFBTagDeepJet_p71_) counter_uncached_HLT_DoublePFJets200_PFBTagDeepJet_p71_++;
    else counter_cached_HLT_DoublePFJets200_PFBTagDeepJet_p71_++;
    if (!loaded_HLT_DoublePFJets200_PFBTagDeepJet_p71_) {
        if (!b_HLT_DoublePFJets200_PFBTagDeepJet_p71_) throw std::runtime_error("HLT_DoublePFJets200_PFBTagDeepJet_p71 branch doesn't exist");
        b_HLT_DoublePFJets200_PFBTagDeepJet_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets200_PFBTagDeepJet_p71_ = true;
    }
    return HLT_DoublePFJets200_PFBTagDeepJet_p71_;
}
const bool &Nano::HLT_DoublePFJets350_CaloBTagCSV_p33() {
    if (!loaded_HLT_DoublePFJets350_CaloBTagCSV_p33_) counter_uncached_HLT_DoublePFJets350_CaloBTagCSV_p33_++;
    else counter_cached_HLT_DoublePFJets350_CaloBTagCSV_p33_++;
    if (!loaded_HLT_DoublePFJets350_CaloBTagCSV_p33_) {
        if (!b_HLT_DoublePFJets350_CaloBTagCSV_p33_) throw std::runtime_error("HLT_DoublePFJets350_CaloBTagCSV_p33 branch doesn't exist");
        b_HLT_DoublePFJets350_CaloBTagCSV_p33_->GetEntry(index);
        loaded_HLT_DoublePFJets350_CaloBTagCSV_p33_ = true;
    }
    return HLT_DoublePFJets350_CaloBTagCSV_p33_;
}
const bool &Nano::HLT_DoublePFJets350_CaloBTagCSV_p79() {
    if (!loaded_HLT_DoublePFJets350_CaloBTagCSV_p79_) counter_uncached_HLT_DoublePFJets350_CaloBTagCSV_p79_++;
    else counter_cached_HLT_DoublePFJets350_CaloBTagCSV_p79_++;
    if (!loaded_HLT_DoublePFJets350_CaloBTagCSV_p79_) {
        if (!b_HLT_DoublePFJets350_CaloBTagCSV_p79_) throw std::runtime_error("HLT_DoublePFJets350_CaloBTagCSV_p79 branch doesn't exist");
        b_HLT_DoublePFJets350_CaloBTagCSV_p79_->GetEntry(index);
        loaded_HLT_DoublePFJets350_CaloBTagCSV_p79_ = true;
    }
    return HLT_DoublePFJets350_CaloBTagCSV_p79_;
}
const bool &Nano::HLT_DoublePFJets350_CaloBTagDeepCSV_p71() {
    if (!loaded_HLT_DoublePFJets350_CaloBTagDeepCSV_p71_) counter_uncached_HLT_DoublePFJets350_CaloBTagDeepCSV_p71_++;
    else counter_cached_HLT_DoublePFJets350_CaloBTagDeepCSV_p71_++;
    if (!loaded_HLT_DoublePFJets350_CaloBTagDeepCSV_p71_) {
        if (!b_HLT_DoublePFJets350_CaloBTagDeepCSV_p71_) throw std::runtime_error("HLT_DoublePFJets350_CaloBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_DoublePFJets350_CaloBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets350_CaloBTagDeepCSV_p71_ = true;
    }
    return HLT_DoublePFJets350_CaloBTagDeepCSV_p71_;
}
const bool &Nano::HLT_DoublePFJets350_PFBTagDeepCSV_p71() {
    if (!loaded_HLT_DoublePFJets350_PFBTagDeepCSV_p71_) counter_uncached_HLT_DoublePFJets350_PFBTagDeepCSV_p71_++;
    else counter_cached_HLT_DoublePFJets350_PFBTagDeepCSV_p71_++;
    if (!loaded_HLT_DoublePFJets350_PFBTagDeepCSV_p71_) {
        if (!b_HLT_DoublePFJets350_PFBTagDeepCSV_p71_) throw std::runtime_error("HLT_DoublePFJets350_PFBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_DoublePFJets350_PFBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets350_PFBTagDeepCSV_p71_ = true;
    }
    return HLT_DoublePFJets350_PFBTagDeepCSV_p71_;
}
const bool &Nano::HLT_DoublePFJets350_PFBTagDeepJet_p71() {
    if (!loaded_HLT_DoublePFJets350_PFBTagDeepJet_p71_) counter_uncached_HLT_DoublePFJets350_PFBTagDeepJet_p71_++;
    else counter_cached_HLT_DoublePFJets350_PFBTagDeepJet_p71_++;
    if (!loaded_HLT_DoublePFJets350_PFBTagDeepJet_p71_) {
        if (!b_HLT_DoublePFJets350_PFBTagDeepJet_p71_) throw std::runtime_error("HLT_DoublePFJets350_PFBTagDeepJet_p71 branch doesn't exist");
        b_HLT_DoublePFJets350_PFBTagDeepJet_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets350_PFBTagDeepJet_p71_ = true;
    }
    return HLT_DoublePFJets350_PFBTagDeepJet_p71_;
}
const bool &Nano::HLT_DoublePFJets40_CaloBTagCSV_p33() {
    if (!loaded_HLT_DoublePFJets40_CaloBTagCSV_p33_) counter_uncached_HLT_DoublePFJets40_CaloBTagCSV_p33_++;
    else counter_cached_HLT_DoublePFJets40_CaloBTagCSV_p33_++;
    if (!loaded_HLT_DoublePFJets40_CaloBTagCSV_p33_) {
        if (!b_HLT_DoublePFJets40_CaloBTagCSV_p33_) throw std::runtime_error("HLT_DoublePFJets40_CaloBTagCSV_p33 branch doesn't exist");
        b_HLT_DoublePFJets40_CaloBTagCSV_p33_->GetEntry(index);
        loaded_HLT_DoublePFJets40_CaloBTagCSV_p33_ = true;
    }
    return HLT_DoublePFJets40_CaloBTagCSV_p33_;
}
const bool &Nano::HLT_DoublePFJets40_CaloBTagCSV_p79() {
    if (!loaded_HLT_DoublePFJets40_CaloBTagCSV_p79_) counter_uncached_HLT_DoublePFJets40_CaloBTagCSV_p79_++;
    else counter_cached_HLT_DoublePFJets40_CaloBTagCSV_p79_++;
    if (!loaded_HLT_DoublePFJets40_CaloBTagCSV_p79_) {
        if (!b_HLT_DoublePFJets40_CaloBTagCSV_p79_) throw std::runtime_error("HLT_DoublePFJets40_CaloBTagCSV_p79 branch doesn't exist");
        b_HLT_DoublePFJets40_CaloBTagCSV_p79_->GetEntry(index);
        loaded_HLT_DoublePFJets40_CaloBTagCSV_p79_ = true;
    }
    return HLT_DoublePFJets40_CaloBTagCSV_p79_;
}
const bool &Nano::HLT_DoublePFJets40_CaloBTagDeepCSV_p71() {
    if (!loaded_HLT_DoublePFJets40_CaloBTagDeepCSV_p71_) counter_uncached_HLT_DoublePFJets40_CaloBTagDeepCSV_p71_++;
    else counter_cached_HLT_DoublePFJets40_CaloBTagDeepCSV_p71_++;
    if (!loaded_HLT_DoublePFJets40_CaloBTagDeepCSV_p71_) {
        if (!b_HLT_DoublePFJets40_CaloBTagDeepCSV_p71_) throw std::runtime_error("HLT_DoublePFJets40_CaloBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_DoublePFJets40_CaloBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets40_CaloBTagDeepCSV_p71_ = true;
    }
    return HLT_DoublePFJets40_CaloBTagDeepCSV_p71_;
}
const bool &Nano::HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1() {
    if (!loaded_HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_) counter_uncached_HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_++;
    else counter_cached_HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_++;
    if (!loaded_HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_) {
        if (!b_HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_) throw std::runtime_error("HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1 branch doesn't exist");
        b_HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_->GetEntry(index);
        loaded_HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_ = true;
    }
    return HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_;
}
const bool &Nano::HLT_DoublePFJets40_PFBTagDeepCSV_p71() {
    if (!loaded_HLT_DoublePFJets40_PFBTagDeepCSV_p71_) counter_uncached_HLT_DoublePFJets40_PFBTagDeepCSV_p71_++;
    else counter_cached_HLT_DoublePFJets40_PFBTagDeepCSV_p71_++;
    if (!loaded_HLT_DoublePFJets40_PFBTagDeepCSV_p71_) {
        if (!b_HLT_DoublePFJets40_PFBTagDeepCSV_p71_) throw std::runtime_error("HLT_DoublePFJets40_PFBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_DoublePFJets40_PFBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets40_PFBTagDeepCSV_p71_ = true;
    }
    return HLT_DoublePFJets40_PFBTagDeepCSV_p71_;
}
const bool &Nano::HLT_DoublePFJets40_PFBTagDeepJet_p71() {
    if (!loaded_HLT_DoublePFJets40_PFBTagDeepJet_p71_) counter_uncached_HLT_DoublePFJets40_PFBTagDeepJet_p71_++;
    else counter_cached_HLT_DoublePFJets40_PFBTagDeepJet_p71_++;
    if (!loaded_HLT_DoublePFJets40_PFBTagDeepJet_p71_) {
        if (!b_HLT_DoublePFJets40_PFBTagDeepJet_p71_) throw std::runtime_error("HLT_DoublePFJets40_PFBTagDeepJet_p71 branch doesn't exist");
        b_HLT_DoublePFJets40_PFBTagDeepJet_p71_->GetEntry(index);
        loaded_HLT_DoublePFJets40_PFBTagDeepJet_p71_ = true;
    }
    return HLT_DoublePFJets40_PFBTagDeepJet_p71_;
}
const bool &Nano::HLT_DoublePhoton33_CaloIdL() {
    if (!loaded_HLT_DoublePhoton33_CaloIdL_) counter_uncached_HLT_DoublePhoton33_CaloIdL_++;
    else counter_cached_HLT_DoublePhoton33_CaloIdL_++;
    if (!loaded_HLT_DoublePhoton33_CaloIdL_) {
        if (!b_HLT_DoublePhoton33_CaloIdL_) throw std::runtime_error("HLT_DoublePhoton33_CaloIdL branch doesn't exist");
        b_HLT_DoublePhoton33_CaloIdL_->GetEntry(index);
        loaded_HLT_DoublePhoton33_CaloIdL_ = true;
    }
    return HLT_DoublePhoton33_CaloIdL_;
}
const bool &Nano::HLT_DoublePhoton60() {
    if (!loaded_HLT_DoublePhoton60_) counter_uncached_HLT_DoublePhoton60_++;
    else counter_cached_HLT_DoublePhoton60_++;
    if (!loaded_HLT_DoublePhoton60_) {
        if (!b_HLT_DoublePhoton60_) throw std::runtime_error("HLT_DoublePhoton60 branch doesn't exist");
        b_HLT_DoublePhoton60_->GetEntry(index);
        loaded_HLT_DoublePhoton60_ = true;
    }
    return HLT_DoublePhoton60_;
}
const bool &Nano::HLT_DoublePhoton70() {
    if (!loaded_HLT_DoublePhoton70_) counter_uncached_HLT_DoublePhoton70_++;
    else counter_cached_HLT_DoublePhoton70_++;
    if (!loaded_HLT_DoublePhoton70_) {
        if (!b_HLT_DoublePhoton70_) throw std::runtime_error("HLT_DoublePhoton70 branch doesn't exist");
        b_HLT_DoublePhoton70_->GetEntry(index);
        loaded_HLT_DoublePhoton70_ = true;
    }
    return HLT_DoublePhoton70_;
}
const bool &Nano::HLT_DoublePhoton85() {
    if (!loaded_HLT_DoublePhoton85_) counter_uncached_HLT_DoublePhoton85_++;
    else counter_cached_HLT_DoublePhoton85_++;
    if (!loaded_HLT_DoublePhoton85_) {
        if (!b_HLT_DoublePhoton85_) throw std::runtime_error("HLT_DoublePhoton85 branch doesn't exist");
        b_HLT_DoublePhoton85_->GetEntry(index);
        loaded_HLT_DoublePhoton85_ = true;
    }
    return HLT_DoublePhoton85_;
}
const bool &Nano::HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg() {
    if (!loaded_HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_) counter_uncached_HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_) {
        if (!b_HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_ = true;
    }
    return HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg() {
    if (!loaded_HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_) counter_uncached_HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_) {
        if (!b_HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_ = true;
    }
    return HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg() {
    if (!loaded_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_) counter_uncached_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_) {
        if (!b_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_ = true;
    }
    return HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1() {
    if (!loaded_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_) counter_uncached_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_++;
    else counter_cached_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_++;
    if (!loaded_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_) {
        if (!b_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_) throw std::runtime_error("HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1 branch doesn't exist");
        b_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_->GetEntry(index);
        loaded_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_ = true;
    }
    return HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_;
}
const bool &Nano::HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg() {
    if (!loaded_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_) counter_uncached_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_) {
        if (!b_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_ = true;
    }
    return HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1() {
    if (!loaded_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_) counter_uncached_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_++;
    else counter_cached_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_++;
    if (!loaded_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_) {
        if (!b_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_) throw std::runtime_error("HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1 branch doesn't exist");
        b_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_->GetEntry(index);
        loaded_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_ = true;
    }
    return HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_;
}
const bool &Nano::HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg_) counter_uncached_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg_) {
        if (!b_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_DoubleTrkMu_16_6_NoFiltersNoVtx() {
    if (!loaded_HLT_DoubleTrkMu_16_6_NoFiltersNoVtx_) counter_uncached_HLT_DoubleTrkMu_16_6_NoFiltersNoVtx_++;
    else counter_cached_HLT_DoubleTrkMu_16_6_NoFiltersNoVtx_++;
    if (!loaded_HLT_DoubleTrkMu_16_6_NoFiltersNoVtx_) {
        if (!b_HLT_DoubleTrkMu_16_6_NoFiltersNoVtx_) throw std::runtime_error("HLT_DoubleTrkMu_16_6_NoFiltersNoVtx branch doesn't exist");
        b_HLT_DoubleTrkMu_16_6_NoFiltersNoVtx_->GetEntry(index);
        loaded_HLT_DoubleTrkMu_16_6_NoFiltersNoVtx_ = true;
    }
    return HLT_DoubleTrkMu_16_6_NoFiltersNoVtx_;
}
const bool &Nano::HLT_ECALHT800() {
    if (!loaded_HLT_ECALHT800_) counter_uncached_HLT_ECALHT800_++;
    else counter_cached_HLT_ECALHT800_++;
    if (!loaded_HLT_ECALHT800_) {
        if (!b_HLT_ECALHT800_) throw std::runtime_error("HLT_ECALHT800 branch doesn't exist");
        b_HLT_ECALHT800_->GetEntry(index);
        loaded_HLT_ECALHT800_ = true;
    }
    return HLT_ECALHT800_;
}
const bool &Nano::HLT_EcalCalibration() {
    if (!loaded_HLT_EcalCalibration_) counter_uncached_HLT_EcalCalibration_++;
    else counter_cached_HLT_EcalCalibration_++;
    if (!loaded_HLT_EcalCalibration_) {
        if (!b_HLT_EcalCalibration_) throw std::runtime_error("HLT_EcalCalibration branch doesn't exist");
        b_HLT_EcalCalibration_->GetEntry(index);
        loaded_HLT_EcalCalibration_ = true;
    }
    return HLT_EcalCalibration_;
}
const bool &Nano::HLT_Ele105_CaloIdVT_GsfTrkIdT() {
    if (!loaded_HLT_Ele105_CaloIdVT_GsfTrkIdT_) counter_uncached_HLT_Ele105_CaloIdVT_GsfTrkIdT_++;
    else counter_cached_HLT_Ele105_CaloIdVT_GsfTrkIdT_++;
    if (!loaded_HLT_Ele105_CaloIdVT_GsfTrkIdT_) {
        if (!b_HLT_Ele105_CaloIdVT_GsfTrkIdT_) throw std::runtime_error("HLT_Ele105_CaloIdVT_GsfTrkIdT branch doesn't exist");
        b_HLT_Ele105_CaloIdVT_GsfTrkIdT_->GetEntry(index);
        loaded_HLT_Ele105_CaloIdVT_GsfTrkIdT_ = true;
    }
    return HLT_Ele105_CaloIdVT_GsfTrkIdT_;
}
const bool &Nano::HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13() {
    if (!loaded_HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13_) counter_uncached_HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13_++;
    else counter_cached_HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13_++;
    if (!loaded_HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13_) {
        if (!b_HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13_) throw std::runtime_error("HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13 branch doesn't exist");
        b_HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13_->GetEntry(index);
        loaded_HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13_ = true;
    }
    return HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13_;
}
const bool &Nano::HLT_Ele115_CaloIdVT_GsfTrkIdT() {
    if (!loaded_HLT_Ele115_CaloIdVT_GsfTrkIdT_) counter_uncached_HLT_Ele115_CaloIdVT_GsfTrkIdT_++;
    else counter_cached_HLT_Ele115_CaloIdVT_GsfTrkIdT_++;
    if (!loaded_HLT_Ele115_CaloIdVT_GsfTrkIdT_) {
        if (!b_HLT_Ele115_CaloIdVT_GsfTrkIdT_) throw std::runtime_error("HLT_Ele115_CaloIdVT_GsfTrkIdT branch doesn't exist");
        b_HLT_Ele115_CaloIdVT_GsfTrkIdT_->GetEntry(index);
        loaded_HLT_Ele115_CaloIdVT_GsfTrkIdT_ = true;
    }
    return HLT_Ele115_CaloIdVT_GsfTrkIdT_;
}
const bool &Nano::HLT_Ele12_CaloIdL_TrackIdL_IsoVL() {
    if (!loaded_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_) counter_uncached_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_++;
    else counter_cached_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_++;
    if (!loaded_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_) {
        if (!b_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_) throw std::runtime_error("HLT_Ele12_CaloIdL_TrackIdL_IsoVL branch doesn't exist");
        b_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_->GetEntry(index);
        loaded_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_ = true;
    }
    return HLT_Ele12_CaloIdL_TrackIdL_IsoVL_;
}
const bool &Nano::HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30() {
    if (!loaded_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_) counter_uncached_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_++;
    else counter_cached_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_++;
    if (!loaded_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_) {
        if (!b_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_) throw std::runtime_error("HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30 branch doesn't exist");
        b_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_->GetEntry(index);
        loaded_HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_ = true;
    }
    return HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_;
}
const bool &Nano::HLT_Ele12_CaloIdM_TrackIdM_PFJet30() {
    if (!loaded_HLT_Ele12_CaloIdM_TrackIdM_PFJet30_) counter_uncached_HLT_Ele12_CaloIdM_TrackIdM_PFJet30_++;
    else counter_cached_HLT_Ele12_CaloIdM_TrackIdM_PFJet30_++;
    if (!loaded_HLT_Ele12_CaloIdM_TrackIdM_PFJet30_) {
        if (!b_HLT_Ele12_CaloIdM_TrackIdM_PFJet30_) throw std::runtime_error("HLT_Ele12_CaloIdM_TrackIdM_PFJet30 branch doesn't exist");
        b_HLT_Ele12_CaloIdM_TrackIdM_PFJet30_->GetEntry(index);
        loaded_HLT_Ele12_CaloIdM_TrackIdM_PFJet30_ = true;
    }
    return HLT_Ele12_CaloIdM_TrackIdM_PFJet30_;
}
const bool &Nano::HLT_Ele135_CaloIdVT_GsfTrkIdT() {
    if (!loaded_HLT_Ele135_CaloIdVT_GsfTrkIdT_) counter_uncached_HLT_Ele135_CaloIdVT_GsfTrkIdT_++;
    else counter_cached_HLT_Ele135_CaloIdVT_GsfTrkIdT_++;
    if (!loaded_HLT_Ele135_CaloIdVT_GsfTrkIdT_) {
        if (!b_HLT_Ele135_CaloIdVT_GsfTrkIdT_) throw std::runtime_error("HLT_Ele135_CaloIdVT_GsfTrkIdT branch doesn't exist");
        b_HLT_Ele135_CaloIdVT_GsfTrkIdT_->GetEntry(index);
        loaded_HLT_Ele135_CaloIdVT_GsfTrkIdT_ = true;
    }
    return HLT_Ele135_CaloIdVT_GsfTrkIdT_;
}
const bool &Nano::HLT_Ele145_CaloIdVT_GsfTrkIdT() {
    if (!loaded_HLT_Ele145_CaloIdVT_GsfTrkIdT_) counter_uncached_HLT_Ele145_CaloIdVT_GsfTrkIdT_++;
    else counter_cached_HLT_Ele145_CaloIdVT_GsfTrkIdT_++;
    if (!loaded_HLT_Ele145_CaloIdVT_GsfTrkIdT_) {
        if (!b_HLT_Ele145_CaloIdVT_GsfTrkIdT_) throw std::runtime_error("HLT_Ele145_CaloIdVT_GsfTrkIdT branch doesn't exist");
        b_HLT_Ele145_CaloIdVT_GsfTrkIdT_->GetEntry(index);
        loaded_HLT_Ele145_CaloIdVT_GsfTrkIdT_ = true;
    }
    return HLT_Ele145_CaloIdVT_GsfTrkIdT_;
}
const bool &Nano::HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30() {
    if (!loaded_HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_) counter_uncached_HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_++;
    else counter_cached_HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_++;
    if (!loaded_HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_) {
        if (!b_HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_) throw std::runtime_error("HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30 branch doesn't exist");
        b_HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_->GetEntry(index);
        loaded_HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_ = true;
    }
    return HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_;
}
const bool &Nano::HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL() {
    if (!loaded_HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_) counter_uncached_HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_++;
    else counter_cached_HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_++;
    if (!loaded_HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_) {
        if (!b_HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_) throw std::runtime_error("HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL branch doesn't exist");
        b_HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_->GetEntry(index);
        loaded_HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_ = true;
    }
    return HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_;
}
const bool &Nano::HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400() {
    if (!loaded_HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400_) counter_uncached_HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400_++;
    else counter_cached_HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400_++;
    if (!loaded_HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400_) {
        if (!b_HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400_) throw std::runtime_error("HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400 branch doesn't exist");
        b_HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400_->GetEntry(index);
        loaded_HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400_ = true;
    }
    return HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400_;
}
const bool &Nano::HLT_Ele15_IsoVVVL_PFHT350() {
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT350_) counter_uncached_HLT_Ele15_IsoVVVL_PFHT350_++;
    else counter_cached_HLT_Ele15_IsoVVVL_PFHT350_++;
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT350_) {
        if (!b_HLT_Ele15_IsoVVVL_PFHT350_) throw std::runtime_error("HLT_Ele15_IsoVVVL_PFHT350 branch doesn't exist");
        b_HLT_Ele15_IsoVVVL_PFHT350_->GetEntry(index);
        loaded_HLT_Ele15_IsoVVVL_PFHT350_ = true;
    }
    return HLT_Ele15_IsoVVVL_PFHT350_;
}
const bool &Nano::HLT_Ele15_IsoVVVL_PFHT350_PFMET50() {
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT350_PFMET50_) counter_uncached_HLT_Ele15_IsoVVVL_PFHT350_PFMET50_++;
    else counter_cached_HLT_Ele15_IsoVVVL_PFHT350_PFMET50_++;
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT350_PFMET50_) {
        if (!b_HLT_Ele15_IsoVVVL_PFHT350_PFMET50_) throw std::runtime_error("HLT_Ele15_IsoVVVL_PFHT350_PFMET50 branch doesn't exist");
        b_HLT_Ele15_IsoVVVL_PFHT350_PFMET50_->GetEntry(index);
        loaded_HLT_Ele15_IsoVVVL_PFHT350_PFMET50_ = true;
    }
    return HLT_Ele15_IsoVVVL_PFHT350_PFMET50_;
}
const bool &Nano::HLT_Ele15_IsoVVVL_PFHT400() {
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT400_) counter_uncached_HLT_Ele15_IsoVVVL_PFHT400_++;
    else counter_cached_HLT_Ele15_IsoVVVL_PFHT400_++;
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT400_) {
        if (!b_HLT_Ele15_IsoVVVL_PFHT400_) throw std::runtime_error("HLT_Ele15_IsoVVVL_PFHT400 branch doesn't exist");
        b_HLT_Ele15_IsoVVVL_PFHT400_->GetEntry(index);
        loaded_HLT_Ele15_IsoVVVL_PFHT400_ = true;
    }
    return HLT_Ele15_IsoVVVL_PFHT400_;
}
const bool &Nano::HLT_Ele15_IsoVVVL_PFHT400_PFMET50() {
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT400_PFMET50_) counter_uncached_HLT_Ele15_IsoVVVL_PFHT400_PFMET50_++;
    else counter_cached_HLT_Ele15_IsoVVVL_PFHT400_PFMET50_++;
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT400_PFMET50_) {
        if (!b_HLT_Ele15_IsoVVVL_PFHT400_PFMET50_) throw std::runtime_error("HLT_Ele15_IsoVVVL_PFHT400_PFMET50 branch doesn't exist");
        b_HLT_Ele15_IsoVVVL_PFHT400_PFMET50_->GetEntry(index);
        loaded_HLT_Ele15_IsoVVVL_PFHT400_PFMET50_ = true;
    }
    return HLT_Ele15_IsoVVVL_PFHT400_PFMET50_;
}
const bool &Nano::HLT_Ele15_IsoVVVL_PFHT450() {
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT450_) counter_uncached_HLT_Ele15_IsoVVVL_PFHT450_++;
    else counter_cached_HLT_Ele15_IsoVVVL_PFHT450_++;
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT450_) {
        if (!b_HLT_Ele15_IsoVVVL_PFHT450_) throw std::runtime_error("HLT_Ele15_IsoVVVL_PFHT450 branch doesn't exist");
        b_HLT_Ele15_IsoVVVL_PFHT450_->GetEntry(index);
        loaded_HLT_Ele15_IsoVVVL_PFHT450_ = true;
    }
    return HLT_Ele15_IsoVVVL_PFHT450_;
}
const bool &Nano::HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5() {
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_) counter_uncached_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_++;
    else counter_cached_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_++;
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_) {
        if (!b_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_) throw std::runtime_error("HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5 branch doesn't exist");
        b_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_->GetEntry(index);
        loaded_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_ = true;
    }
    return HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_;
}
const bool &Nano::HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5() {
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_) counter_uncached_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_++;
    else counter_cached_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_++;
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_) {
        if (!b_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_) throw std::runtime_error("HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5 branch doesn't exist");
        b_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_->GetEntry(index);
        loaded_HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_ = true;
    }
    return HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_;
}
const bool &Nano::HLT_Ele15_IsoVVVL_PFHT450_PFMET50() {
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT450_PFMET50_) counter_uncached_HLT_Ele15_IsoVVVL_PFHT450_PFMET50_++;
    else counter_cached_HLT_Ele15_IsoVVVL_PFHT450_PFMET50_++;
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT450_PFMET50_) {
        if (!b_HLT_Ele15_IsoVVVL_PFHT450_PFMET50_) throw std::runtime_error("HLT_Ele15_IsoVVVL_PFHT450_PFMET50 branch doesn't exist");
        b_HLT_Ele15_IsoVVVL_PFHT450_PFMET50_->GetEntry(index);
        loaded_HLT_Ele15_IsoVVVL_PFHT450_PFMET50_ = true;
    }
    return HLT_Ele15_IsoVVVL_PFHT450_PFMET50_;
}
const bool &Nano::HLT_Ele15_IsoVVVL_PFHT600() {
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT600_) counter_uncached_HLT_Ele15_IsoVVVL_PFHT600_++;
    else counter_cached_HLT_Ele15_IsoVVVL_PFHT600_++;
    if (!loaded_HLT_Ele15_IsoVVVL_PFHT600_) {
        if (!b_HLT_Ele15_IsoVVVL_PFHT600_) throw std::runtime_error("HLT_Ele15_IsoVVVL_PFHT600 branch doesn't exist");
        b_HLT_Ele15_IsoVVVL_PFHT600_->GetEntry(index);
        loaded_HLT_Ele15_IsoVVVL_PFHT600_ = true;
    }
    return HLT_Ele15_IsoVVVL_PFHT600_;
}
const bool &Nano::HLT_Ele15_WPLoose_Gsf() {
    if (!loaded_HLT_Ele15_WPLoose_Gsf_) counter_uncached_HLT_Ele15_WPLoose_Gsf_++;
    else counter_cached_HLT_Ele15_WPLoose_Gsf_++;
    if (!loaded_HLT_Ele15_WPLoose_Gsf_) {
        if (!b_HLT_Ele15_WPLoose_Gsf_) throw std::runtime_error("HLT_Ele15_WPLoose_Gsf branch doesn't exist");
        b_HLT_Ele15_WPLoose_Gsf_->GetEntry(index);
        loaded_HLT_Ele15_WPLoose_Gsf_ = true;
    }
    return HLT_Ele15_WPLoose_Gsf_;
}
const bool &Nano::HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL() {
    if (!loaded_HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_) counter_uncached_HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_++;
    else counter_cached_HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_++;
    if (!loaded_HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_) {
        if (!b_HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_) throw std::runtime_error("HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL branch doesn't exist");
        b_HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_->GetEntry(index);
        loaded_HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_ = true;
    }
    return HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_;
}
const bool &Nano::HLT_Ele17_CaloIdL_GsfTrkIdVL() {
    if (!loaded_HLT_Ele17_CaloIdL_GsfTrkIdVL_) counter_uncached_HLT_Ele17_CaloIdL_GsfTrkIdVL_++;
    else counter_cached_HLT_Ele17_CaloIdL_GsfTrkIdVL_++;
    if (!loaded_HLT_Ele17_CaloIdL_GsfTrkIdVL_) {
        if (!b_HLT_Ele17_CaloIdL_GsfTrkIdVL_) throw std::runtime_error("HLT_Ele17_CaloIdL_GsfTrkIdVL branch doesn't exist");
        b_HLT_Ele17_CaloIdL_GsfTrkIdVL_->GetEntry(index);
        loaded_HLT_Ele17_CaloIdL_GsfTrkIdVL_ = true;
    }
    return HLT_Ele17_CaloIdL_GsfTrkIdVL_;
}
const bool &Nano::HLT_Ele17_CaloIdL_TrackIdL_IsoVL() {
    if (!loaded_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_) counter_uncached_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_++;
    else counter_cached_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_++;
    if (!loaded_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_) {
        if (!b_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_) throw std::runtime_error("HLT_Ele17_CaloIdL_TrackIdL_IsoVL branch doesn't exist");
        b_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_->GetEntry(index);
        loaded_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_ = true;
    }
    return HLT_Ele17_CaloIdL_TrackIdL_IsoVL_;
}
const bool &Nano::HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30() {
    if (!loaded_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_) counter_uncached_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_++;
    else counter_cached_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_++;
    if (!loaded_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_) {
        if (!b_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_) throw std::runtime_error("HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30 branch doesn't exist");
        b_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_->GetEntry(index);
        loaded_HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_ = true;
    }
    return HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_;
}
const bool &Nano::HLT_Ele17_CaloIdM_TrackIdM_PFJet30() {
    if (!loaded_HLT_Ele17_CaloIdM_TrackIdM_PFJet30_) counter_uncached_HLT_Ele17_CaloIdM_TrackIdM_PFJet30_++;
    else counter_cached_HLT_Ele17_CaloIdM_TrackIdM_PFJet30_++;
    if (!loaded_HLT_Ele17_CaloIdM_TrackIdM_PFJet30_) {
        if (!b_HLT_Ele17_CaloIdM_TrackIdM_PFJet30_) throw std::runtime_error("HLT_Ele17_CaloIdM_TrackIdM_PFJet30 branch doesn't exist");
        b_HLT_Ele17_CaloIdM_TrackIdM_PFJet30_->GetEntry(index);
        loaded_HLT_Ele17_CaloIdM_TrackIdM_PFJet30_ = true;
    }
    return HLT_Ele17_CaloIdM_TrackIdM_PFJet30_;
}
const bool &Nano::HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL() {
    if (!loaded_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_) counter_uncached_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_++;
    else counter_cached_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_++;
    if (!loaded_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_) {
        if (!b_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_) throw std::runtime_error("HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL branch doesn't exist");
        b_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_->GetEntry(index);
        loaded_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_ = true;
    }
    return HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_;
}
const bool &Nano::HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ() {
    if (!loaded_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_) counter_uncached_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_++;
    else counter_cached_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_++;
    if (!loaded_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_) {
        if (!b_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_) throw std::runtime_error("HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ branch doesn't exist");
        b_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_->GetEntry(index);
        loaded_HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_ = true;
    }
    return HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_;
}
const bool &Nano::HLT_Ele17_Ele8_Gsf() {
    if (!loaded_HLT_Ele17_Ele8_Gsf_) counter_uncached_HLT_Ele17_Ele8_Gsf_++;
    else counter_cached_HLT_Ele17_Ele8_Gsf_++;
    if (!loaded_HLT_Ele17_Ele8_Gsf_) {
        if (!b_HLT_Ele17_Ele8_Gsf_) throw std::runtime_error("HLT_Ele17_Ele8_Gsf branch doesn't exist");
        b_HLT_Ele17_Ele8_Gsf_->GetEntry(index);
        loaded_HLT_Ele17_Ele8_Gsf_ = true;
    }
    return HLT_Ele17_Ele8_Gsf_;
}
const bool &Nano::HLT_Ele17_WPLoose_Gsf() {
    if (!loaded_HLT_Ele17_WPLoose_Gsf_) counter_uncached_HLT_Ele17_WPLoose_Gsf_++;
    else counter_cached_HLT_Ele17_WPLoose_Gsf_++;
    if (!loaded_HLT_Ele17_WPLoose_Gsf_) {
        if (!b_HLT_Ele17_WPLoose_Gsf_) throw std::runtime_error("HLT_Ele17_WPLoose_Gsf branch doesn't exist");
        b_HLT_Ele17_WPLoose_Gsf_->GetEntry(index);
        loaded_HLT_Ele17_WPLoose_Gsf_ = true;
    }
    return HLT_Ele17_WPLoose_Gsf_;
}
const bool &Nano::HLT_Ele200_CaloIdVT_GsfTrkIdT() {
    if (!loaded_HLT_Ele200_CaloIdVT_GsfTrkIdT_) counter_uncached_HLT_Ele200_CaloIdVT_GsfTrkIdT_++;
    else counter_cached_HLT_Ele200_CaloIdVT_GsfTrkIdT_++;
    if (!loaded_HLT_Ele200_CaloIdVT_GsfTrkIdT_) {
        if (!b_HLT_Ele200_CaloIdVT_GsfTrkIdT_) throw std::runtime_error("HLT_Ele200_CaloIdVT_GsfTrkIdT branch doesn't exist");
        b_HLT_Ele200_CaloIdVT_GsfTrkIdT_->GetEntry(index);
        loaded_HLT_Ele200_CaloIdVT_GsfTrkIdT_ = true;
    }
    return HLT_Ele200_CaloIdVT_GsfTrkIdT_;
}
const bool &Nano::HLT_Ele20_WPLoose_Gsf() {
    if (!loaded_HLT_Ele20_WPLoose_Gsf_) counter_uncached_HLT_Ele20_WPLoose_Gsf_++;
    else counter_cached_HLT_Ele20_WPLoose_Gsf_++;
    if (!loaded_HLT_Ele20_WPLoose_Gsf_) {
        if (!b_HLT_Ele20_WPLoose_Gsf_) throw std::runtime_error("HLT_Ele20_WPLoose_Gsf branch doesn't exist");
        b_HLT_Ele20_WPLoose_Gsf_->GetEntry(index);
        loaded_HLT_Ele20_WPLoose_Gsf_ = true;
    }
    return HLT_Ele20_WPLoose_Gsf_;
}
const bool &Nano::HLT_Ele20_WPTight_Gsf() {
    if (!loaded_HLT_Ele20_WPTight_Gsf_) counter_uncached_HLT_Ele20_WPTight_Gsf_++;
    else counter_cached_HLT_Ele20_WPTight_Gsf_++;
    if (!loaded_HLT_Ele20_WPTight_Gsf_) {
        if (!b_HLT_Ele20_WPTight_Gsf_) throw std::runtime_error("HLT_Ele20_WPTight_Gsf branch doesn't exist");
        b_HLT_Ele20_WPTight_Gsf_->GetEntry(index);
        loaded_HLT_Ele20_WPTight_Gsf_ = true;
    }
    return HLT_Ele20_WPTight_Gsf_;
}
const bool &Nano::HLT_Ele20_eta2p1_WPLoose_Gsf() {
    if (!loaded_HLT_Ele20_eta2p1_WPLoose_Gsf_) counter_uncached_HLT_Ele20_eta2p1_WPLoose_Gsf_++;
    else counter_cached_HLT_Ele20_eta2p1_WPLoose_Gsf_++;
    if (!loaded_HLT_Ele20_eta2p1_WPLoose_Gsf_) {
        if (!b_HLT_Ele20_eta2p1_WPLoose_Gsf_) throw std::runtime_error("HLT_Ele20_eta2p1_WPLoose_Gsf branch doesn't exist");
        b_HLT_Ele20_eta2p1_WPLoose_Gsf_->GetEntry(index);
        loaded_HLT_Ele20_eta2p1_WPLoose_Gsf_ = true;
    }
    return HLT_Ele20_eta2p1_WPLoose_Gsf_;
}
const bool &Nano::HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28() {
    if (!loaded_HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28_) counter_uncached_HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28_++;
    else counter_cached_HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28_++;
    if (!loaded_HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28_) {
        if (!b_HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28_) throw std::runtime_error("HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28 branch doesn't exist");
        b_HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28_->GetEntry(index);
        loaded_HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28_ = true;
    }
    return HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28_;
}
const bool &Nano::HLT_Ele22_eta2p1_WPLoose_Gsf() {
    if (!loaded_HLT_Ele22_eta2p1_WPLoose_Gsf_) counter_uncached_HLT_Ele22_eta2p1_WPLoose_Gsf_++;
    else counter_cached_HLT_Ele22_eta2p1_WPLoose_Gsf_++;
    if (!loaded_HLT_Ele22_eta2p1_WPLoose_Gsf_) {
        if (!b_HLT_Ele22_eta2p1_WPLoose_Gsf_) throw std::runtime_error("HLT_Ele22_eta2p1_WPLoose_Gsf branch doesn't exist");
        b_HLT_Ele22_eta2p1_WPLoose_Gsf_->GetEntry(index);
        loaded_HLT_Ele22_eta2p1_WPLoose_Gsf_ = true;
    }
    return HLT_Ele22_eta2p1_WPLoose_Gsf_;
}
const bool &Nano::HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1() {
    if (!loaded_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) counter_uncached_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_++;
    else counter_cached_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_++;
    if (!loaded_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) {
        if (!b_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) throw std::runtime_error("HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1 branch doesn't exist");
        b_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_->GetEntry(index);
        loaded_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ = true;
    }
    return HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_;
}
const bool &Nano::HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29() {
    if (!loaded_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29_) counter_uncached_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29_++;
    else counter_cached_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29_++;
    if (!loaded_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29_) {
        if (!b_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29_) throw std::runtime_error("HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29 branch doesn't exist");
        b_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29_->GetEntry(index);
        loaded_HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29_ = true;
    }
    return HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29_;
}
const bool &Nano::HLT_Ele23_CaloIdL_TrackIdL_IsoVL() {
    if (!loaded_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_) counter_uncached_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_++;
    else counter_cached_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_++;
    if (!loaded_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_) {
        if (!b_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_) throw std::runtime_error("HLT_Ele23_CaloIdL_TrackIdL_IsoVL branch doesn't exist");
        b_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_->GetEntry(index);
        loaded_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_ = true;
    }
    return HLT_Ele23_CaloIdL_TrackIdL_IsoVL_;
}
const bool &Nano::HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30() {
    if (!loaded_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_) counter_uncached_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_++;
    else counter_cached_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_++;
    if (!loaded_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_) {
        if (!b_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_) throw std::runtime_error("HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30 branch doesn't exist");
        b_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_->GetEntry(index);
        loaded_HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_ = true;
    }
    return HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_;
}
const bool &Nano::HLT_Ele23_CaloIdM_TrackIdM_PFJet30() {
    if (!loaded_HLT_Ele23_CaloIdM_TrackIdM_PFJet30_) counter_uncached_HLT_Ele23_CaloIdM_TrackIdM_PFJet30_++;
    else counter_cached_HLT_Ele23_CaloIdM_TrackIdM_PFJet30_++;
    if (!loaded_HLT_Ele23_CaloIdM_TrackIdM_PFJet30_) {
        if (!b_HLT_Ele23_CaloIdM_TrackIdM_PFJet30_) throw std::runtime_error("HLT_Ele23_CaloIdM_TrackIdM_PFJet30 branch doesn't exist");
        b_HLT_Ele23_CaloIdM_TrackIdM_PFJet30_->GetEntry(index);
        loaded_HLT_Ele23_CaloIdM_TrackIdM_PFJet30_ = true;
    }
    return HLT_Ele23_CaloIdM_TrackIdM_PFJet30_;
}
const bool &Nano::HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL() {
    if (!loaded_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_) counter_uncached_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_++;
    else counter_cached_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_++;
    if (!loaded_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_) {
        if (!b_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_) throw std::runtime_error("HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL branch doesn't exist");
        b_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_->GetEntry(index);
        loaded_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_ = true;
    }
    return HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_;
}
const bool &Nano::HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ() {
    if (!loaded_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_) counter_uncached_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_++;
    else counter_cached_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_++;
    if (!loaded_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_) {
        if (!b_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_) throw std::runtime_error("HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ branch doesn't exist");
        b_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_->GetEntry(index);
        loaded_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_ = true;
    }
    return HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_;
}
const bool &Nano::HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded() {
    if (!loaded_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded_) counter_uncached_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded_++;
    else counter_cached_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded_++;
    if (!loaded_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded_) {
        if (!b_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded_) throw std::runtime_error("HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded branch doesn't exist");
        b_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded_->GetEntry(index);
        loaded_HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded_ = true;
    }
    return HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded_;
}
const bool &Nano::HLT_Ele23_WPLoose_Gsf() {
    if (!loaded_HLT_Ele23_WPLoose_Gsf_) counter_uncached_HLT_Ele23_WPLoose_Gsf_++;
    else counter_cached_HLT_Ele23_WPLoose_Gsf_++;
    if (!loaded_HLT_Ele23_WPLoose_Gsf_) {
        if (!b_HLT_Ele23_WPLoose_Gsf_) throw std::runtime_error("HLT_Ele23_WPLoose_Gsf branch doesn't exist");
        b_HLT_Ele23_WPLoose_Gsf_->GetEntry(index);
        loaded_HLT_Ele23_WPLoose_Gsf_ = true;
    }
    return HLT_Ele23_WPLoose_Gsf_;
}
const bool &Nano::HLT_Ele23_WPLoose_Gsf_WHbbBoost() {
    if (!loaded_HLT_Ele23_WPLoose_Gsf_WHbbBoost_) counter_uncached_HLT_Ele23_WPLoose_Gsf_WHbbBoost_++;
    else counter_cached_HLT_Ele23_WPLoose_Gsf_WHbbBoost_++;
    if (!loaded_HLT_Ele23_WPLoose_Gsf_WHbbBoost_) {
        if (!b_HLT_Ele23_WPLoose_Gsf_WHbbBoost_) throw std::runtime_error("HLT_Ele23_WPLoose_Gsf_WHbbBoost branch doesn't exist");
        b_HLT_Ele23_WPLoose_Gsf_WHbbBoost_->GetEntry(index);
        loaded_HLT_Ele23_WPLoose_Gsf_WHbbBoost_ = true;
    }
    return HLT_Ele23_WPLoose_Gsf_WHbbBoost_;
}
const bool &Nano::HLT_Ele24_eta2p1_WPLoose_Gsf() {
    if (!loaded_HLT_Ele24_eta2p1_WPLoose_Gsf_) counter_uncached_HLT_Ele24_eta2p1_WPLoose_Gsf_++;
    else counter_cached_HLT_Ele24_eta2p1_WPLoose_Gsf_++;
    if (!loaded_HLT_Ele24_eta2p1_WPLoose_Gsf_) {
        if (!b_HLT_Ele24_eta2p1_WPLoose_Gsf_) throw std::runtime_error("HLT_Ele24_eta2p1_WPLoose_Gsf branch doesn't exist");
        b_HLT_Ele24_eta2p1_WPLoose_Gsf_->GetEntry(index);
        loaded_HLT_Ele24_eta2p1_WPLoose_Gsf_ = true;
    }
    return HLT_Ele24_eta2p1_WPLoose_Gsf_;
}
const bool &Nano::HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20() {
    if (!loaded_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_) counter_uncached_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_++;
    else counter_cached_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_++;
    if (!loaded_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_) {
        if (!b_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_) throw std::runtime_error("HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20 branch doesn't exist");
        b_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_->GetEntry(index);
        loaded_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_ = true;
    }
    return HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_;
}
const bool &Nano::HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1() {
    if (!loaded_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) counter_uncached_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_++;
    else counter_cached_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_++;
    if (!loaded_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) {
        if (!b_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) throw std::runtime_error("HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1 branch doesn't exist");
        b_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_->GetEntry(index);
        loaded_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ = true;
    }
    return HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_;
}
const bool &Nano::HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30() {
    if (!loaded_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30_) counter_uncached_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30_++;
    else counter_cached_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30_++;
    if (!loaded_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30_) {
        if (!b_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30_) throw std::runtime_error("HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30 branch doesn't exist");
        b_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30_->GetEntry(index);
        loaded_HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30_ = true;
    }
    return HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30_;
}
const bool &Nano::HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1() {
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1_) counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1_++;
    else counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1_++;
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1_) {
        if (!b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1_) throw std::runtime_error("HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1_ = true;
    }
    return HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1_;
}
const bool &Nano::HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1() {
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1_) counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1_++;
    else counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1_++;
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1_) {
        if (!b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1_) throw std::runtime_error("HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1 branch doesn't exist");
        b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1_->GetEntry(index);
        loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1_ = true;
    }
    return HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1_;
}
const bool &Nano::HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1() {
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_) counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_++;
    else counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_++;
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_) {
        if (!b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_) throw std::runtime_error("HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_ = true;
    }
    return HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_;
}
const bool &Nano::HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1() {
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_) counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_++;
    else counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_++;
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_) {
        if (!b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_) throw std::runtime_error("HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1 branch doesn't exist");
        b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_->GetEntry(index);
        loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_ = true;
    }
    return HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_;
}
const bool &Nano::HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1() {
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_) counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_++;
    else counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_++;
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_) {
        if (!b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_) throw std::runtime_error("HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_ = true;
    }
    return HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_;
}
const bool &Nano::HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1() {
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1_) counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1_++;
    else counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1_++;
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1_) {
        if (!b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1_) throw std::runtime_error("HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1_ = true;
    }
    return HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1_;
}
const bool &Nano::HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1() {
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1_) counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1_++;
    else counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1_++;
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1_) {
        if (!b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1_) throw std::runtime_error("HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1 branch doesn't exist");
        b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1_->GetEntry(index);
        loaded_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1_ = true;
    }
    return HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1_;
}
const bool &Nano::HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1() {
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_) counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_++;
    else counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_++;
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_) {
        if (!b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_) throw std::runtime_error("HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_ = true;
    }
    return HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_;
}
const bool &Nano::HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1() {
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_) counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_++;
    else counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_++;
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_) {
        if (!b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_) throw std::runtime_error("HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1 branch doesn't exist");
        b_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_->GetEntry(index);
        loaded_HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_ = true;
    }
    return HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_;
}
const bool &Nano::HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1() {
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1_) counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1_++;
    else counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1_++;
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1_) {
        if (!b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1_) throw std::runtime_error("HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1_ = true;
    }
    return HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1_;
}
const bool &Nano::HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1() {
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1_) counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1_++;
    else counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1_++;
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1_) {
        if (!b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1_) throw std::runtime_error("HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1 branch doesn't exist");
        b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1_->GetEntry(index);
        loaded_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1_ = true;
    }
    return HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1_;
}
const bool &Nano::HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1() {
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_) counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_++;
    else counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_++;
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_) {
        if (!b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_) throw std::runtime_error("HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_ = true;
    }
    return HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_;
}
const bool &Nano::HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1() {
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_) counter_uncached_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_++;
    else counter_cached_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_++;
    if (!loaded_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_) {
        if (!b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_) throw std::runtime_error("HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1 branch doesn't exist");
        b_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_->GetEntry(index);
        loaded_HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_ = true;
    }
    return HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_;
}
const bool &Nano::HLT_Ele250_CaloIdVT_GsfTrkIdT() {
    if (!loaded_HLT_Ele250_CaloIdVT_GsfTrkIdT_) counter_uncached_HLT_Ele250_CaloIdVT_GsfTrkIdT_++;
    else counter_cached_HLT_Ele250_CaloIdVT_GsfTrkIdT_++;
    if (!loaded_HLT_Ele250_CaloIdVT_GsfTrkIdT_) {
        if (!b_HLT_Ele250_CaloIdVT_GsfTrkIdT_) throw std::runtime_error("HLT_Ele250_CaloIdVT_GsfTrkIdT branch doesn't exist");
        b_HLT_Ele250_CaloIdVT_GsfTrkIdT_->GetEntry(index);
        loaded_HLT_Ele250_CaloIdVT_GsfTrkIdT_ = true;
    }
    return HLT_Ele250_CaloIdVT_GsfTrkIdT_;
}
const bool &Nano::HLT_Ele25_WPTight_Gsf() {
    if (!loaded_HLT_Ele25_WPTight_Gsf_) counter_uncached_HLT_Ele25_WPTight_Gsf_++;
    else counter_cached_HLT_Ele25_WPTight_Gsf_++;
    if (!loaded_HLT_Ele25_WPTight_Gsf_) {
        if (!b_HLT_Ele25_WPTight_Gsf_) throw std::runtime_error("HLT_Ele25_WPTight_Gsf branch doesn't exist");
        b_HLT_Ele25_WPTight_Gsf_->GetEntry(index);
        loaded_HLT_Ele25_WPTight_Gsf_ = true;
    }
    return HLT_Ele25_WPTight_Gsf_;
}
const bool &Nano::HLT_Ele25_eta2p1_WPLoose_Gsf() {
    if (!loaded_HLT_Ele25_eta2p1_WPLoose_Gsf_) counter_uncached_HLT_Ele25_eta2p1_WPLoose_Gsf_++;
    else counter_cached_HLT_Ele25_eta2p1_WPLoose_Gsf_++;
    if (!loaded_HLT_Ele25_eta2p1_WPLoose_Gsf_) {
        if (!b_HLT_Ele25_eta2p1_WPLoose_Gsf_) throw std::runtime_error("HLT_Ele25_eta2p1_WPLoose_Gsf branch doesn't exist");
        b_HLT_Ele25_eta2p1_WPLoose_Gsf_->GetEntry(index);
        loaded_HLT_Ele25_eta2p1_WPLoose_Gsf_ = true;
    }
    return HLT_Ele25_eta2p1_WPLoose_Gsf_;
}
const bool &Nano::HLT_Ele25_eta2p1_WPTight_Gsf() {
    if (!loaded_HLT_Ele25_eta2p1_WPTight_Gsf_) counter_uncached_HLT_Ele25_eta2p1_WPTight_Gsf_++;
    else counter_cached_HLT_Ele25_eta2p1_WPTight_Gsf_++;
    if (!loaded_HLT_Ele25_eta2p1_WPTight_Gsf_) {
        if (!b_HLT_Ele25_eta2p1_WPTight_Gsf_) throw std::runtime_error("HLT_Ele25_eta2p1_WPTight_Gsf branch doesn't exist");
        b_HLT_Ele25_eta2p1_WPTight_Gsf_->GetEntry(index);
        loaded_HLT_Ele25_eta2p1_WPTight_Gsf_ = true;
    }
    return HLT_Ele25_eta2p1_WPTight_Gsf_;
}
const bool &Nano::HLT_Ele27_Ele37_CaloIdL_MW() {
    if (!loaded_HLT_Ele27_Ele37_CaloIdL_MW_) counter_uncached_HLT_Ele27_Ele37_CaloIdL_MW_++;
    else counter_cached_HLT_Ele27_Ele37_CaloIdL_MW_++;
    if (!loaded_HLT_Ele27_Ele37_CaloIdL_MW_) {
        if (!b_HLT_Ele27_Ele37_CaloIdL_MW_) throw std::runtime_error("HLT_Ele27_Ele37_CaloIdL_MW branch doesn't exist");
        b_HLT_Ele27_Ele37_CaloIdL_MW_->GetEntry(index);
        loaded_HLT_Ele27_Ele37_CaloIdL_MW_ = true;
    }
    return HLT_Ele27_Ele37_CaloIdL_MW_;
}
const bool &Nano::HLT_Ele27_HighEta_Ele20_Mass55() {
    if (!loaded_HLT_Ele27_HighEta_Ele20_Mass55_) counter_uncached_HLT_Ele27_HighEta_Ele20_Mass55_++;
    else counter_cached_HLT_Ele27_HighEta_Ele20_Mass55_++;
    if (!loaded_HLT_Ele27_HighEta_Ele20_Mass55_) {
        if (!b_HLT_Ele27_HighEta_Ele20_Mass55_) throw std::runtime_error("HLT_Ele27_HighEta_Ele20_Mass55 branch doesn't exist");
        b_HLT_Ele27_HighEta_Ele20_Mass55_->GetEntry(index);
        loaded_HLT_Ele27_HighEta_Ele20_Mass55_ = true;
    }
    return HLT_Ele27_HighEta_Ele20_Mass55_;
}
const bool &Nano::HLT_Ele27_WPLoose_Gsf() {
    if (!loaded_HLT_Ele27_WPLoose_Gsf_) counter_uncached_HLT_Ele27_WPLoose_Gsf_++;
    else counter_cached_HLT_Ele27_WPLoose_Gsf_++;
    if (!loaded_HLT_Ele27_WPLoose_Gsf_) {
        if (!b_HLT_Ele27_WPLoose_Gsf_) throw std::runtime_error("HLT_Ele27_WPLoose_Gsf branch doesn't exist");
        b_HLT_Ele27_WPLoose_Gsf_->GetEntry(index);
        loaded_HLT_Ele27_WPLoose_Gsf_ = true;
    }
    return HLT_Ele27_WPLoose_Gsf_;
}
const bool &Nano::HLT_Ele27_WPLoose_Gsf_WHbbBoost() {
    if (!loaded_HLT_Ele27_WPLoose_Gsf_WHbbBoost_) counter_uncached_HLT_Ele27_WPLoose_Gsf_WHbbBoost_++;
    else counter_cached_HLT_Ele27_WPLoose_Gsf_WHbbBoost_++;
    if (!loaded_HLT_Ele27_WPLoose_Gsf_WHbbBoost_) {
        if (!b_HLT_Ele27_WPLoose_Gsf_WHbbBoost_) throw std::runtime_error("HLT_Ele27_WPLoose_Gsf_WHbbBoost branch doesn't exist");
        b_HLT_Ele27_WPLoose_Gsf_WHbbBoost_->GetEntry(index);
        loaded_HLT_Ele27_WPLoose_Gsf_WHbbBoost_ = true;
    }
    return HLT_Ele27_WPLoose_Gsf_WHbbBoost_;
}
const bool &Nano::HLT_Ele27_WPTight_Gsf() {
    if (!loaded_HLT_Ele27_WPTight_Gsf_) counter_uncached_HLT_Ele27_WPTight_Gsf_++;
    else counter_cached_HLT_Ele27_WPTight_Gsf_++;
    if (!loaded_HLT_Ele27_WPTight_Gsf_) {
        if (!b_HLT_Ele27_WPTight_Gsf_) throw std::runtime_error("HLT_Ele27_WPTight_Gsf branch doesn't exist");
        b_HLT_Ele27_WPTight_Gsf_->GetEntry(index);
        loaded_HLT_Ele27_WPTight_Gsf_ = true;
    }
    return HLT_Ele27_WPTight_Gsf_;
}
const bool &Nano::HLT_Ele27_WPTight_Gsf_L1JetTauSeeded() {
    if (!loaded_HLT_Ele27_WPTight_Gsf_L1JetTauSeeded_) counter_uncached_HLT_Ele27_WPTight_Gsf_L1JetTauSeeded_++;
    else counter_cached_HLT_Ele27_WPTight_Gsf_L1JetTauSeeded_++;
    if (!loaded_HLT_Ele27_WPTight_Gsf_L1JetTauSeeded_) {
        if (!b_HLT_Ele27_WPTight_Gsf_L1JetTauSeeded_) throw std::runtime_error("HLT_Ele27_WPTight_Gsf_L1JetTauSeeded branch doesn't exist");
        b_HLT_Ele27_WPTight_Gsf_L1JetTauSeeded_->GetEntry(index);
        loaded_HLT_Ele27_WPTight_Gsf_L1JetTauSeeded_ = true;
    }
    return HLT_Ele27_WPTight_Gsf_L1JetTauSeeded_;
}
const bool &Nano::HLT_Ele27_eta2p1_WPLoose_Gsf() {
    if (!loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_) counter_uncached_HLT_Ele27_eta2p1_WPLoose_Gsf_++;
    else counter_cached_HLT_Ele27_eta2p1_WPLoose_Gsf_++;
    if (!loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_) {
        if (!b_HLT_Ele27_eta2p1_WPLoose_Gsf_) throw std::runtime_error("HLT_Ele27_eta2p1_WPLoose_Gsf branch doesn't exist");
        b_HLT_Ele27_eta2p1_WPLoose_Gsf_->GetEntry(index);
        loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_ = true;
    }
    return HLT_Ele27_eta2p1_WPLoose_Gsf_;
}
const bool &Nano::HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_) counter_uncached_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_) {
        if (!b_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_) counter_uncached_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_) {
        if (!b_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_) counter_uncached_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_) {
        if (!b_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_Ele27_eta2p1_WPLoose_Gsf_HT200() {
    if (!loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_HT200_) counter_uncached_HLT_Ele27_eta2p1_WPLoose_Gsf_HT200_++;
    else counter_cached_HLT_Ele27_eta2p1_WPLoose_Gsf_HT200_++;
    if (!loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_HT200_) {
        if (!b_HLT_Ele27_eta2p1_WPLoose_Gsf_HT200_) throw std::runtime_error("HLT_Ele27_eta2p1_WPLoose_Gsf_HT200 branch doesn't exist");
        b_HLT_Ele27_eta2p1_WPLoose_Gsf_HT200_->GetEntry(index);
        loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_HT200_ = true;
    }
    return HLT_Ele27_eta2p1_WPLoose_Gsf_HT200_;
}
const bool &Nano::HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1() {
    if (!loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) counter_uncached_HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_++;
    else counter_cached_HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_++;
    if (!loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) {
        if (!b_HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) throw std::runtime_error("HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1 branch doesn't exist");
        b_HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_->GetEntry(index);
        loaded_HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ = true;
    }
    return HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_;
}
const bool &Nano::HLT_Ele27_eta2p1_WPTight_Gsf() {
    if (!loaded_HLT_Ele27_eta2p1_WPTight_Gsf_) counter_uncached_HLT_Ele27_eta2p1_WPTight_Gsf_++;
    else counter_cached_HLT_Ele27_eta2p1_WPTight_Gsf_++;
    if (!loaded_HLT_Ele27_eta2p1_WPTight_Gsf_) {
        if (!b_HLT_Ele27_eta2p1_WPTight_Gsf_) throw std::runtime_error("HLT_Ele27_eta2p1_WPTight_Gsf branch doesn't exist");
        b_HLT_Ele27_eta2p1_WPTight_Gsf_->GetEntry(index);
        loaded_HLT_Ele27_eta2p1_WPTight_Gsf_ = true;
    }
    return HLT_Ele27_eta2p1_WPTight_Gsf_;
}
const bool &Nano::HLT_Ele28_HighEta_SC20_Mass55() {
    if (!loaded_HLT_Ele28_HighEta_SC20_Mass55_) counter_uncached_HLT_Ele28_HighEta_SC20_Mass55_++;
    else counter_cached_HLT_Ele28_HighEta_SC20_Mass55_++;
    if (!loaded_HLT_Ele28_HighEta_SC20_Mass55_) {
        if (!b_HLT_Ele28_HighEta_SC20_Mass55_) throw std::runtime_error("HLT_Ele28_HighEta_SC20_Mass55 branch doesn't exist");
        b_HLT_Ele28_HighEta_SC20_Mass55_->GetEntry(index);
        loaded_HLT_Ele28_HighEta_SC20_Mass55_ = true;
    }
    return HLT_Ele28_HighEta_SC20_Mass55_;
}
const bool &Nano::HLT_Ele28_WPTight_Gsf() {
    if (!loaded_HLT_Ele28_WPTight_Gsf_) counter_uncached_HLT_Ele28_WPTight_Gsf_++;
    else counter_cached_HLT_Ele28_WPTight_Gsf_++;
    if (!loaded_HLT_Ele28_WPTight_Gsf_) {
        if (!b_HLT_Ele28_WPTight_Gsf_) throw std::runtime_error("HLT_Ele28_WPTight_Gsf branch doesn't exist");
        b_HLT_Ele28_WPTight_Gsf_->GetEntry(index);
        loaded_HLT_Ele28_WPTight_Gsf_ = true;
    }
    return HLT_Ele28_WPTight_Gsf_;
}
const bool &Nano::HLT_Ele28_eta2p1_WPTight_Gsf_HT150() {
    if (!loaded_HLT_Ele28_eta2p1_WPTight_Gsf_HT150_) counter_uncached_HLT_Ele28_eta2p1_WPTight_Gsf_HT150_++;
    else counter_cached_HLT_Ele28_eta2p1_WPTight_Gsf_HT150_++;
    if (!loaded_HLT_Ele28_eta2p1_WPTight_Gsf_HT150_) {
        if (!b_HLT_Ele28_eta2p1_WPTight_Gsf_HT150_) throw std::runtime_error("HLT_Ele28_eta2p1_WPTight_Gsf_HT150 branch doesn't exist");
        b_HLT_Ele28_eta2p1_WPTight_Gsf_HT150_->GetEntry(index);
        loaded_HLT_Ele28_eta2p1_WPTight_Gsf_HT150_ = true;
    }
    return HLT_Ele28_eta2p1_WPTight_Gsf_HT150_;
}
const bool &Nano::HLT_Ele300_CaloIdVT_GsfTrkIdT() {
    if (!loaded_HLT_Ele300_CaloIdVT_GsfTrkIdT_) counter_uncached_HLT_Ele300_CaloIdVT_GsfTrkIdT_++;
    else counter_cached_HLT_Ele300_CaloIdVT_GsfTrkIdT_++;
    if (!loaded_HLT_Ele300_CaloIdVT_GsfTrkIdT_) {
        if (!b_HLT_Ele300_CaloIdVT_GsfTrkIdT_) throw std::runtime_error("HLT_Ele300_CaloIdVT_GsfTrkIdT branch doesn't exist");
        b_HLT_Ele300_CaloIdVT_GsfTrkIdT_->GetEntry(index);
        loaded_HLT_Ele300_CaloIdVT_GsfTrkIdT_ = true;
    }
    return HLT_Ele300_CaloIdVT_GsfTrkIdT_;
}
const bool &Nano::HLT_Ele30WP60_Ele8_Mass55() {
    if (!loaded_HLT_Ele30WP60_Ele8_Mass55_) counter_uncached_HLT_Ele30WP60_Ele8_Mass55_++;
    else counter_cached_HLT_Ele30WP60_Ele8_Mass55_++;
    if (!loaded_HLT_Ele30WP60_Ele8_Mass55_) {
        if (!b_HLT_Ele30WP60_Ele8_Mass55_) throw std::runtime_error("HLT_Ele30WP60_Ele8_Mass55 branch doesn't exist");
        b_HLT_Ele30WP60_Ele8_Mass55_->GetEntry(index);
        loaded_HLT_Ele30WP60_Ele8_Mass55_ = true;
    }
    return HLT_Ele30WP60_Ele8_Mass55_;
}
const bool &Nano::HLT_Ele30WP60_SC4_Mass55() {
    if (!loaded_HLT_Ele30WP60_SC4_Mass55_) counter_uncached_HLT_Ele30WP60_SC4_Mass55_++;
    else counter_cached_HLT_Ele30WP60_SC4_Mass55_++;
    if (!loaded_HLT_Ele30WP60_SC4_Mass55_) {
        if (!b_HLT_Ele30WP60_SC4_Mass55_) throw std::runtime_error("HLT_Ele30WP60_SC4_Mass55 branch doesn't exist");
        b_HLT_Ele30WP60_SC4_Mass55_->GetEntry(index);
        loaded_HLT_Ele30WP60_SC4_Mass55_ = true;
    }
    return HLT_Ele30WP60_SC4_Mass55_;
}
const bool &Nano::HLT_Ele30_WPTight_Gsf() {
    if (!loaded_HLT_Ele30_WPTight_Gsf_) counter_uncached_HLT_Ele30_WPTight_Gsf_++;
    else counter_cached_HLT_Ele30_WPTight_Gsf_++;
    if (!loaded_HLT_Ele30_WPTight_Gsf_) {
        if (!b_HLT_Ele30_WPTight_Gsf_) throw std::runtime_error("HLT_Ele30_WPTight_Gsf branch doesn't exist");
        b_HLT_Ele30_WPTight_Gsf_->GetEntry(index);
        loaded_HLT_Ele30_WPTight_Gsf_ = true;
    }
    return HLT_Ele30_WPTight_Gsf_;
}
const bool &Nano::HLT_Ele30_eta2p1_WPLoose_Gsf() {
    if (!loaded_HLT_Ele30_eta2p1_WPLoose_Gsf_) counter_uncached_HLT_Ele30_eta2p1_WPLoose_Gsf_++;
    else counter_cached_HLT_Ele30_eta2p1_WPLoose_Gsf_++;
    if (!loaded_HLT_Ele30_eta2p1_WPLoose_Gsf_) {
        if (!b_HLT_Ele30_eta2p1_WPLoose_Gsf_) throw std::runtime_error("HLT_Ele30_eta2p1_WPLoose_Gsf branch doesn't exist");
        b_HLT_Ele30_eta2p1_WPLoose_Gsf_->GetEntry(index);
        loaded_HLT_Ele30_eta2p1_WPLoose_Gsf_ = true;
    }
    return HLT_Ele30_eta2p1_WPLoose_Gsf_;
}
const bool &Nano::HLT_Ele30_eta2p1_WPTight_Gsf() {
    if (!loaded_HLT_Ele30_eta2p1_WPTight_Gsf_) counter_uncached_HLT_Ele30_eta2p1_WPTight_Gsf_++;
    else counter_cached_HLT_Ele30_eta2p1_WPTight_Gsf_++;
    if (!loaded_HLT_Ele30_eta2p1_WPTight_Gsf_) {
        if (!b_HLT_Ele30_eta2p1_WPTight_Gsf_) throw std::runtime_error("HLT_Ele30_eta2p1_WPTight_Gsf branch doesn't exist");
        b_HLT_Ele30_eta2p1_WPTight_Gsf_->GetEntry(index);
        loaded_HLT_Ele30_eta2p1_WPTight_Gsf_ = true;
    }
    return HLT_Ele30_eta2p1_WPTight_Gsf_;
}
const bool &Nano::HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned() {
    if (!loaded_HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_) counter_uncached_HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_++;
    else counter_cached_HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_++;
    if (!loaded_HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_) {
        if (!b_HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_) throw std::runtime_error("HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned branch doesn't exist");
        b_HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_->GetEntry(index);
        loaded_HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_ = true;
    }
    return HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_;
}
const bool &Nano::HLT_Ele32_WPTight_Gsf() {
    if (!loaded_HLT_Ele32_WPTight_Gsf_) counter_uncached_HLT_Ele32_WPTight_Gsf_++;
    else counter_cached_HLT_Ele32_WPTight_Gsf_++;
    if (!loaded_HLT_Ele32_WPTight_Gsf_) {
        if (!b_HLT_Ele32_WPTight_Gsf_) throw std::runtime_error("HLT_Ele32_WPTight_Gsf branch doesn't exist");
        b_HLT_Ele32_WPTight_Gsf_->GetEntry(index);
        loaded_HLT_Ele32_WPTight_Gsf_ = true;
    }
    return HLT_Ele32_WPTight_Gsf_;
}
const bool &Nano::HLT_Ele32_WPTight_Gsf_L1DoubleEG() {
    if (!loaded_HLT_Ele32_WPTight_Gsf_L1DoubleEG_) counter_uncached_HLT_Ele32_WPTight_Gsf_L1DoubleEG_++;
    else counter_cached_HLT_Ele32_WPTight_Gsf_L1DoubleEG_++;
    if (!loaded_HLT_Ele32_WPTight_Gsf_L1DoubleEG_) {
        if (!b_HLT_Ele32_WPTight_Gsf_L1DoubleEG_) throw std::runtime_error("HLT_Ele32_WPTight_Gsf_L1DoubleEG branch doesn't exist");
        b_HLT_Ele32_WPTight_Gsf_L1DoubleEG_->GetEntry(index);
        loaded_HLT_Ele32_WPTight_Gsf_L1DoubleEG_ = true;
    }
    return HLT_Ele32_WPTight_Gsf_L1DoubleEG_;
}
const bool &Nano::HLT_Ele32_eta2p1_WPLoose_Gsf() {
    if (!loaded_HLT_Ele32_eta2p1_WPLoose_Gsf_) counter_uncached_HLT_Ele32_eta2p1_WPLoose_Gsf_++;
    else counter_cached_HLT_Ele32_eta2p1_WPLoose_Gsf_++;
    if (!loaded_HLT_Ele32_eta2p1_WPLoose_Gsf_) {
        if (!b_HLT_Ele32_eta2p1_WPLoose_Gsf_) throw std::runtime_error("HLT_Ele32_eta2p1_WPLoose_Gsf branch doesn't exist");
        b_HLT_Ele32_eta2p1_WPLoose_Gsf_->GetEntry(index);
        loaded_HLT_Ele32_eta2p1_WPLoose_Gsf_ = true;
    }
    return HLT_Ele32_eta2p1_WPLoose_Gsf_;
}
const bool &Nano::HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1() {
    if (!loaded_HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) counter_uncached_HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_++;
    else counter_cached_HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_++;
    if (!loaded_HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) {
        if (!b_HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) throw std::runtime_error("HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1 branch doesn't exist");
        b_HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_->GetEntry(index);
        loaded_HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ = true;
    }
    return HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_;
}
const bool &Nano::HLT_Ele32_eta2p1_WPTight_Gsf() {
    if (!loaded_HLT_Ele32_eta2p1_WPTight_Gsf_) counter_uncached_HLT_Ele32_eta2p1_WPTight_Gsf_++;
    else counter_cached_HLT_Ele32_eta2p1_WPTight_Gsf_++;
    if (!loaded_HLT_Ele32_eta2p1_WPTight_Gsf_) {
        if (!b_HLT_Ele32_eta2p1_WPTight_Gsf_) throw std::runtime_error("HLT_Ele32_eta2p1_WPTight_Gsf branch doesn't exist");
        b_HLT_Ele32_eta2p1_WPTight_Gsf_->GetEntry(index);
        loaded_HLT_Ele32_eta2p1_WPTight_Gsf_ = true;
    }
    return HLT_Ele32_eta2p1_WPTight_Gsf_;
}
const bool &Nano::HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50() {
    if (!loaded_HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50_) counter_uncached_HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50_++;
    else counter_cached_HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50_++;
    if (!loaded_HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50_) {
        if (!b_HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50_) throw std::runtime_error("HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50 branch doesn't exist");
        b_HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50_->GetEntry(index);
        loaded_HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50_ = true;
    }
    return HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50_;
}
const bool &Nano::HLT_Ele35_WPLoose_Gsf() {
    if (!loaded_HLT_Ele35_WPLoose_Gsf_) counter_uncached_HLT_Ele35_WPLoose_Gsf_++;
    else counter_cached_HLT_Ele35_WPLoose_Gsf_++;
    if (!loaded_HLT_Ele35_WPLoose_Gsf_) {
        if (!b_HLT_Ele35_WPLoose_Gsf_) throw std::runtime_error("HLT_Ele35_WPLoose_Gsf branch doesn't exist");
        b_HLT_Ele35_WPLoose_Gsf_->GetEntry(index);
        loaded_HLT_Ele35_WPLoose_Gsf_ = true;
    }
    return HLT_Ele35_WPLoose_Gsf_;
}
const bool &Nano::HLT_Ele35_WPTight_Gsf() {
    if (!loaded_HLT_Ele35_WPTight_Gsf_) counter_uncached_HLT_Ele35_WPTight_Gsf_++;
    else counter_cached_HLT_Ele35_WPTight_Gsf_++;
    if (!loaded_HLT_Ele35_WPTight_Gsf_) {
        if (!b_HLT_Ele35_WPTight_Gsf_) throw std::runtime_error("HLT_Ele35_WPTight_Gsf branch doesn't exist");
        b_HLT_Ele35_WPTight_Gsf_->GetEntry(index);
        loaded_HLT_Ele35_WPTight_Gsf_ = true;
    }
    return HLT_Ele35_WPTight_Gsf_;
}
const bool &Nano::HLT_Ele35_WPTight_Gsf_L1EGMT() {
    if (!loaded_HLT_Ele35_WPTight_Gsf_L1EGMT_) counter_uncached_HLT_Ele35_WPTight_Gsf_L1EGMT_++;
    else counter_cached_HLT_Ele35_WPTight_Gsf_L1EGMT_++;
    if (!loaded_HLT_Ele35_WPTight_Gsf_L1EGMT_) {
        if (!b_HLT_Ele35_WPTight_Gsf_L1EGMT_) throw std::runtime_error("HLT_Ele35_WPTight_Gsf_L1EGMT branch doesn't exist");
        b_HLT_Ele35_WPTight_Gsf_L1EGMT_->GetEntry(index);
        loaded_HLT_Ele35_WPTight_Gsf_L1EGMT_ = true;
    }
    return HLT_Ele35_WPTight_Gsf_L1EGMT_;
}
const bool &Nano::HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1() {
    if (!loaded_HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) counter_uncached_HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_++;
    else counter_cached_HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_++;
    if (!loaded_HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) {
        if (!b_HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_) throw std::runtime_error("HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1 branch doesn't exist");
        b_HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_->GetEntry(index);
        loaded_HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_ = true;
    }
    return HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_;
}
const bool &Nano::HLT_Ele38_WPTight_Gsf() {
    if (!loaded_HLT_Ele38_WPTight_Gsf_) counter_uncached_HLT_Ele38_WPTight_Gsf_++;
    else counter_cached_HLT_Ele38_WPTight_Gsf_++;
    if (!loaded_HLT_Ele38_WPTight_Gsf_) {
        if (!b_HLT_Ele38_WPTight_Gsf_) throw std::runtime_error("HLT_Ele38_WPTight_Gsf branch doesn't exist");
        b_HLT_Ele38_WPTight_Gsf_->GetEntry(index);
        loaded_HLT_Ele38_WPTight_Gsf_ = true;
    }
    return HLT_Ele38_WPTight_Gsf_;
}
const bool &Nano::HLT_Ele40_WPTight_Gsf() {
    if (!loaded_HLT_Ele40_WPTight_Gsf_) counter_uncached_HLT_Ele40_WPTight_Gsf_++;
    else counter_cached_HLT_Ele40_WPTight_Gsf_++;
    if (!loaded_HLT_Ele40_WPTight_Gsf_) {
        if (!b_HLT_Ele40_WPTight_Gsf_) throw std::runtime_error("HLT_Ele40_WPTight_Gsf branch doesn't exist");
        b_HLT_Ele40_WPTight_Gsf_->GetEntry(index);
        loaded_HLT_Ele40_WPTight_Gsf_ = true;
    }
    return HLT_Ele40_WPTight_Gsf_;
}
const bool &Nano::HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50() {
    if (!loaded_HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50_) counter_uncached_HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50_++;
    else counter_cached_HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50_++;
    if (!loaded_HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50_) {
        if (!b_HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50_) throw std::runtime_error("HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50 branch doesn't exist");
        b_HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50_->GetEntry(index);
        loaded_HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50_ = true;
    }
    return HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50_;
}
const bool &Nano::HLT_Ele45_WPLoose_Gsf() {
    if (!loaded_HLT_Ele45_WPLoose_Gsf_) counter_uncached_HLT_Ele45_WPLoose_Gsf_++;
    else counter_cached_HLT_Ele45_WPLoose_Gsf_++;
    if (!loaded_HLT_Ele45_WPLoose_Gsf_) {
        if (!b_HLT_Ele45_WPLoose_Gsf_) throw std::runtime_error("HLT_Ele45_WPLoose_Gsf branch doesn't exist");
        b_HLT_Ele45_WPLoose_Gsf_->GetEntry(index);
        loaded_HLT_Ele45_WPLoose_Gsf_ = true;
    }
    return HLT_Ele45_WPLoose_Gsf_;
}
const bool &Nano::HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded() {
    if (!loaded_HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded_) counter_uncached_HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded_++;
    else counter_cached_HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded_++;
    if (!loaded_HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded_) {
        if (!b_HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded_) throw std::runtime_error("HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded branch doesn't exist");
        b_HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded_->GetEntry(index);
        loaded_HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded_ = true;
    }
    return HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded_;
}
const bool &Nano::HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40() {
    if (!loaded_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_) counter_uncached_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_++;
    else counter_cached_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_++;
    if (!loaded_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_) {
        if (!b_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_) throw std::runtime_error("HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40 branch doesn't exist");
        b_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_->GetEntry(index);
        loaded_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_ = true;
    }
    return HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_;
}
const bool &Nano::HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35() {
    if (!loaded_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_) counter_uncached_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_++;
    else counter_cached_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_++;
    if (!loaded_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_) {
        if (!b_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_) throw std::runtime_error("HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35 branch doesn't exist");
        b_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_->GetEntry(index);
        loaded_HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_ = true;
    }
    return HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_;
}
const bool &Nano::HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140() {
    if (!loaded_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140_) counter_uncached_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140_++;
    else counter_cached_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140_++;
    if (!loaded_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140_) {
        if (!b_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140_) throw std::runtime_error("HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140 branch doesn't exist");
        b_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140_->GetEntry(index);
        loaded_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140_ = true;
    }
    return HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140_;
}
const bool &Nano::HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165() {
    if (!loaded_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_) counter_uncached_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_++;
    else counter_cached_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_++;
    if (!loaded_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_) {
        if (!b_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_) throw std::runtime_error("HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165 branch doesn't exist");
        b_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_->GetEntry(index);
        loaded_HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_ = true;
    }
    return HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_;
}
const bool &Nano::HLT_Ele50_IsoVVVL_PFHT400() {
    if (!loaded_HLT_Ele50_IsoVVVL_PFHT400_) counter_uncached_HLT_Ele50_IsoVVVL_PFHT400_++;
    else counter_cached_HLT_Ele50_IsoVVVL_PFHT400_++;
    if (!loaded_HLT_Ele50_IsoVVVL_PFHT400_) {
        if (!b_HLT_Ele50_IsoVVVL_PFHT400_) throw std::runtime_error("HLT_Ele50_IsoVVVL_PFHT400 branch doesn't exist");
        b_HLT_Ele50_IsoVVVL_PFHT400_->GetEntry(index);
        loaded_HLT_Ele50_IsoVVVL_PFHT400_ = true;
    }
    return HLT_Ele50_IsoVVVL_PFHT400_;
}
const bool &Nano::HLT_Ele50_IsoVVVL_PFHT450() {
    if (!loaded_HLT_Ele50_IsoVVVL_PFHT450_) counter_uncached_HLT_Ele50_IsoVVVL_PFHT450_++;
    else counter_cached_HLT_Ele50_IsoVVVL_PFHT450_++;
    if (!loaded_HLT_Ele50_IsoVVVL_PFHT450_) {
        if (!b_HLT_Ele50_IsoVVVL_PFHT450_) throw std::runtime_error("HLT_Ele50_IsoVVVL_PFHT450 branch doesn't exist");
        b_HLT_Ele50_IsoVVVL_PFHT450_->GetEntry(index);
        loaded_HLT_Ele50_IsoVVVL_PFHT450_ = true;
    }
    return HLT_Ele50_IsoVVVL_PFHT450_;
}
const bool &Nano::HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30() {
    if (!loaded_HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_) counter_uncached_HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_++;
    else counter_cached_HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_++;
    if (!loaded_HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_) {
        if (!b_HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_) throw std::runtime_error("HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30 branch doesn't exist");
        b_HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_->GetEntry(index);
        loaded_HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_ = true;
    }
    return HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_;
}
const bool &Nano::HLT_Ele8_CaloIdM_TrackIdM_PFJet30() {
    if (!loaded_HLT_Ele8_CaloIdM_TrackIdM_PFJet30_) counter_uncached_HLT_Ele8_CaloIdM_TrackIdM_PFJet30_++;
    else counter_cached_HLT_Ele8_CaloIdM_TrackIdM_PFJet30_++;
    if (!loaded_HLT_Ele8_CaloIdM_TrackIdM_PFJet30_) {
        if (!b_HLT_Ele8_CaloIdM_TrackIdM_PFJet30_) throw std::runtime_error("HLT_Ele8_CaloIdM_TrackIdM_PFJet30 branch doesn't exist");
        b_HLT_Ele8_CaloIdM_TrackIdM_PFJet30_->GetEntry(index);
        loaded_HLT_Ele8_CaloIdM_TrackIdM_PFJet30_ = true;
    }
    return HLT_Ele8_CaloIdM_TrackIdM_PFJet30_;
}
const bool &Nano::HLT_EphemeralPhysics() {
    if (!loaded_HLT_EphemeralPhysics_) counter_uncached_HLT_EphemeralPhysics_++;
    else counter_cached_HLT_EphemeralPhysics_++;
    if (!loaded_HLT_EphemeralPhysics_) {
        if (!b_HLT_EphemeralPhysics_) throw std::runtime_error("HLT_EphemeralPhysics branch doesn't exist");
        b_HLT_EphemeralPhysics_->GetEntry(index);
        loaded_HLT_EphemeralPhysics_ = true;
    }
    return HLT_EphemeralPhysics_;
}
const bool &Nano::HLT_EphemeralZeroBias() {
    if (!loaded_HLT_EphemeralZeroBias_) counter_uncached_HLT_EphemeralZeroBias_++;
    else counter_cached_HLT_EphemeralZeroBias_++;
    if (!loaded_HLT_EphemeralZeroBias_) {
        if (!b_HLT_EphemeralZeroBias_) throw std::runtime_error("HLT_EphemeralZeroBias branch doesn't exist");
        b_HLT_EphemeralZeroBias_->GetEntry(index);
        loaded_HLT_EphemeralZeroBias_ = true;
    }
    return HLT_EphemeralZeroBias_;
}
const bool &Nano::HLT_ExpressMuons() {
    if (!loaded_HLT_ExpressMuons_) counter_uncached_HLT_ExpressMuons_++;
    else counter_cached_HLT_ExpressMuons_++;
    if (!loaded_HLT_ExpressMuons_) {
        if (!b_HLT_ExpressMuons_) throw std::runtime_error("HLT_ExpressMuons branch doesn't exist");
        b_HLT_ExpressMuons_->GetEntry(index);
        loaded_HLT_ExpressMuons_ = true;
    }
    return HLT_ExpressMuons_;
}
const bool &Nano::HLT_FullTrack_Multiplicity100() {
    if (!loaded_HLT_FullTrack_Multiplicity100_) counter_uncached_HLT_FullTrack_Multiplicity100_++;
    else counter_cached_HLT_FullTrack_Multiplicity100_++;
    if (!loaded_HLT_FullTrack_Multiplicity100_) {
        if (!b_HLT_FullTrack_Multiplicity100_) throw std::runtime_error("HLT_FullTrack_Multiplicity100 branch doesn't exist");
        b_HLT_FullTrack_Multiplicity100_->GetEntry(index);
        loaded_HLT_FullTrack_Multiplicity100_ = true;
    }
    return HLT_FullTrack_Multiplicity100_;
}
const bool &Nano::HLT_FullTrack_Multiplicity105() {
    if (!loaded_HLT_FullTrack_Multiplicity105_) counter_uncached_HLT_FullTrack_Multiplicity105_++;
    else counter_cached_HLT_FullTrack_Multiplicity105_++;
    if (!loaded_HLT_FullTrack_Multiplicity105_) {
        if (!b_HLT_FullTrack_Multiplicity105_) throw std::runtime_error("HLT_FullTrack_Multiplicity105 branch doesn't exist");
        b_HLT_FullTrack_Multiplicity105_->GetEntry(index);
        loaded_HLT_FullTrack_Multiplicity105_ = true;
    }
    return HLT_FullTrack_Multiplicity105_;
}
const bool &Nano::HLT_FullTrack_Multiplicity130() {
    if (!loaded_HLT_FullTrack_Multiplicity130_) counter_uncached_HLT_FullTrack_Multiplicity130_++;
    else counter_cached_HLT_FullTrack_Multiplicity130_++;
    if (!loaded_HLT_FullTrack_Multiplicity130_) {
        if (!b_HLT_FullTrack_Multiplicity130_) throw std::runtime_error("HLT_FullTrack_Multiplicity130 branch doesn't exist");
        b_HLT_FullTrack_Multiplicity130_->GetEntry(index);
        loaded_HLT_FullTrack_Multiplicity130_ = true;
    }
    return HLT_FullTrack_Multiplicity130_;
}
const bool &Nano::HLT_FullTrack_Multiplicity135() {
    if (!loaded_HLT_FullTrack_Multiplicity135_) counter_uncached_HLT_FullTrack_Multiplicity135_++;
    else counter_cached_HLT_FullTrack_Multiplicity135_++;
    if (!loaded_HLT_FullTrack_Multiplicity135_) {
        if (!b_HLT_FullTrack_Multiplicity135_) throw std::runtime_error("HLT_FullTrack_Multiplicity135 branch doesn't exist");
        b_HLT_FullTrack_Multiplicity135_->GetEntry(index);
        loaded_HLT_FullTrack_Multiplicity135_ = true;
    }
    return HLT_FullTrack_Multiplicity135_;
}
const bool &Nano::HLT_FullTrack_Multiplicity155() {
    if (!loaded_HLT_FullTrack_Multiplicity155_) counter_uncached_HLT_FullTrack_Multiplicity155_++;
    else counter_cached_HLT_FullTrack_Multiplicity155_++;
    if (!loaded_HLT_FullTrack_Multiplicity155_) {
        if (!b_HLT_FullTrack_Multiplicity155_) throw std::runtime_error("HLT_FullTrack_Multiplicity155 branch doesn't exist");
        b_HLT_FullTrack_Multiplicity155_->GetEntry(index);
        loaded_HLT_FullTrack_Multiplicity155_ = true;
    }
    return HLT_FullTrack_Multiplicity155_;
}
const bool &Nano::HLT_FullTrack_Multiplicity85() {
    if (!loaded_HLT_FullTrack_Multiplicity85_) counter_uncached_HLT_FullTrack_Multiplicity85_++;
    else counter_cached_HLT_FullTrack_Multiplicity85_++;
    if (!loaded_HLT_FullTrack_Multiplicity85_) {
        if (!b_HLT_FullTrack_Multiplicity85_) throw std::runtime_error("HLT_FullTrack_Multiplicity85 branch doesn't exist");
        b_HLT_FullTrack_Multiplicity85_->GetEntry(index);
        loaded_HLT_FullTrack_Multiplicity85_ = true;
    }
    return HLT_FullTrack_Multiplicity85_;
}
const bool &Nano::HLT_FullTracks_Multiplicity100() {
    if (!loaded_HLT_FullTracks_Multiplicity100_) counter_uncached_HLT_FullTracks_Multiplicity100_++;
    else counter_cached_HLT_FullTracks_Multiplicity100_++;
    if (!loaded_HLT_FullTracks_Multiplicity100_) {
        if (!b_HLT_FullTracks_Multiplicity100_) throw std::runtime_error("HLT_FullTracks_Multiplicity100 branch doesn't exist");
        b_HLT_FullTracks_Multiplicity100_->GetEntry(index);
        loaded_HLT_FullTracks_Multiplicity100_ = true;
    }
    return HLT_FullTracks_Multiplicity100_;
}
const bool &Nano::HLT_FullTracks_Multiplicity130() {
    if (!loaded_HLT_FullTracks_Multiplicity130_) counter_uncached_HLT_FullTracks_Multiplicity130_++;
    else counter_cached_HLT_FullTracks_Multiplicity130_++;
    if (!loaded_HLT_FullTracks_Multiplicity130_) {
        if (!b_HLT_FullTracks_Multiplicity130_) throw std::runtime_error("HLT_FullTracks_Multiplicity130 branch doesn't exist");
        b_HLT_FullTracks_Multiplicity130_->GetEntry(index);
        loaded_HLT_FullTracks_Multiplicity130_ = true;
    }
    return HLT_FullTracks_Multiplicity130_;
}
const bool &Nano::HLT_FullTracks_Multiplicity150() {
    if (!loaded_HLT_FullTracks_Multiplicity150_) counter_uncached_HLT_FullTracks_Multiplicity150_++;
    else counter_cached_HLT_FullTracks_Multiplicity150_++;
    if (!loaded_HLT_FullTracks_Multiplicity150_) {
        if (!b_HLT_FullTracks_Multiplicity150_) throw std::runtime_error("HLT_FullTracks_Multiplicity150 branch doesn't exist");
        b_HLT_FullTracks_Multiplicity150_->GetEntry(index);
        loaded_HLT_FullTracks_Multiplicity150_ = true;
    }
    return HLT_FullTracks_Multiplicity150_;
}
const bool &Nano::HLT_FullTracks_Multiplicity80() {
    if (!loaded_HLT_FullTracks_Multiplicity80_) counter_uncached_HLT_FullTracks_Multiplicity80_++;
    else counter_cached_HLT_FullTracks_Multiplicity80_++;
    if (!loaded_HLT_FullTracks_Multiplicity80_) {
        if (!b_HLT_FullTracks_Multiplicity80_) throw std::runtime_error("HLT_FullTracks_Multiplicity80 branch doesn't exist");
        b_HLT_FullTracks_Multiplicity80_->GetEntry(index);
        loaded_HLT_FullTracks_Multiplicity80_ = true;
    }
    return HLT_FullTracks_Multiplicity80_;
}
const bool &Nano::HLT_GlobalRunHPDNoise() {
    if (!loaded_HLT_GlobalRunHPDNoise_) counter_uncached_HLT_GlobalRunHPDNoise_++;
    else counter_cached_HLT_GlobalRunHPDNoise_++;
    if (!loaded_HLT_GlobalRunHPDNoise_) {
        if (!b_HLT_GlobalRunHPDNoise_) throw std::runtime_error("HLT_GlobalRunHPDNoise branch doesn't exist");
        b_HLT_GlobalRunHPDNoise_->GetEntry(index);
        loaded_HLT_GlobalRunHPDNoise_ = true;
    }
    return HLT_GlobalRunHPDNoise_;
}
const bool &Nano::HLT_HISinglePhoton10() {
    if (!loaded_HLT_HISinglePhoton10_) counter_uncached_HLT_HISinglePhoton10_++;
    else counter_cached_HLT_HISinglePhoton10_++;
    if (!loaded_HLT_HISinglePhoton10_) {
        if (!b_HLT_HISinglePhoton10_) throw std::runtime_error("HLT_HISinglePhoton10 branch doesn't exist");
        b_HLT_HISinglePhoton10_->GetEntry(index);
        loaded_HLT_HISinglePhoton10_ = true;
    }
    return HLT_HISinglePhoton10_;
}
const bool &Nano::HLT_HISinglePhoton10_Eta3p1ForPPRef() {
    if (!loaded_HLT_HISinglePhoton10_Eta3p1ForPPRef_) counter_uncached_HLT_HISinglePhoton10_Eta3p1ForPPRef_++;
    else counter_cached_HLT_HISinglePhoton10_Eta3p1ForPPRef_++;
    if (!loaded_HLT_HISinglePhoton10_Eta3p1ForPPRef_) {
        if (!b_HLT_HISinglePhoton10_Eta3p1ForPPRef_) throw std::runtime_error("HLT_HISinglePhoton10_Eta3p1ForPPRef branch doesn't exist");
        b_HLT_HISinglePhoton10_Eta3p1ForPPRef_->GetEntry(index);
        loaded_HLT_HISinglePhoton10_Eta3p1ForPPRef_ = true;
    }
    return HLT_HISinglePhoton10_Eta3p1ForPPRef_;
}
const bool &Nano::HLT_HISinglePhoton15() {
    if (!loaded_HLT_HISinglePhoton15_) counter_uncached_HLT_HISinglePhoton15_++;
    else counter_cached_HLT_HISinglePhoton15_++;
    if (!loaded_HLT_HISinglePhoton15_) {
        if (!b_HLT_HISinglePhoton15_) throw std::runtime_error("HLT_HISinglePhoton15 branch doesn't exist");
        b_HLT_HISinglePhoton15_->GetEntry(index);
        loaded_HLT_HISinglePhoton15_ = true;
    }
    return HLT_HISinglePhoton15_;
}
const bool &Nano::HLT_HISinglePhoton20() {
    if (!loaded_HLT_HISinglePhoton20_) counter_uncached_HLT_HISinglePhoton20_++;
    else counter_cached_HLT_HISinglePhoton20_++;
    if (!loaded_HLT_HISinglePhoton20_) {
        if (!b_HLT_HISinglePhoton20_) throw std::runtime_error("HLT_HISinglePhoton20 branch doesn't exist");
        b_HLT_HISinglePhoton20_->GetEntry(index);
        loaded_HLT_HISinglePhoton20_ = true;
    }
    return HLT_HISinglePhoton20_;
}
const bool &Nano::HLT_HISinglePhoton20_Eta3p1ForPPRef() {
    if (!loaded_HLT_HISinglePhoton20_Eta3p1ForPPRef_) counter_uncached_HLT_HISinglePhoton20_Eta3p1ForPPRef_++;
    else counter_cached_HLT_HISinglePhoton20_Eta3p1ForPPRef_++;
    if (!loaded_HLT_HISinglePhoton20_Eta3p1ForPPRef_) {
        if (!b_HLT_HISinglePhoton20_Eta3p1ForPPRef_) throw std::runtime_error("HLT_HISinglePhoton20_Eta3p1ForPPRef branch doesn't exist");
        b_HLT_HISinglePhoton20_Eta3p1ForPPRef_->GetEntry(index);
        loaded_HLT_HISinglePhoton20_Eta3p1ForPPRef_ = true;
    }
    return HLT_HISinglePhoton20_Eta3p1ForPPRef_;
}
const bool &Nano::HLT_HISinglePhoton30_Eta3p1ForPPRef() {
    if (!loaded_HLT_HISinglePhoton30_Eta3p1ForPPRef_) counter_uncached_HLT_HISinglePhoton30_Eta3p1ForPPRef_++;
    else counter_cached_HLT_HISinglePhoton30_Eta3p1ForPPRef_++;
    if (!loaded_HLT_HISinglePhoton30_Eta3p1ForPPRef_) {
        if (!b_HLT_HISinglePhoton30_Eta3p1ForPPRef_) throw std::runtime_error("HLT_HISinglePhoton30_Eta3p1ForPPRef branch doesn't exist");
        b_HLT_HISinglePhoton30_Eta3p1ForPPRef_->GetEntry(index);
        loaded_HLT_HISinglePhoton30_Eta3p1ForPPRef_ = true;
    }
    return HLT_HISinglePhoton30_Eta3p1ForPPRef_;
}
const bool &Nano::HLT_HISinglePhoton40() {
    if (!loaded_HLT_HISinglePhoton40_) counter_uncached_HLT_HISinglePhoton40_++;
    else counter_cached_HLT_HISinglePhoton40_++;
    if (!loaded_HLT_HISinglePhoton40_) {
        if (!b_HLT_HISinglePhoton40_) throw std::runtime_error("HLT_HISinglePhoton40 branch doesn't exist");
        b_HLT_HISinglePhoton40_->GetEntry(index);
        loaded_HLT_HISinglePhoton40_ = true;
    }
    return HLT_HISinglePhoton40_;
}
const bool &Nano::HLT_HISinglePhoton40_Eta3p1ForPPRef() {
    if (!loaded_HLT_HISinglePhoton40_Eta3p1ForPPRef_) counter_uncached_HLT_HISinglePhoton40_Eta3p1ForPPRef_++;
    else counter_cached_HLT_HISinglePhoton40_Eta3p1ForPPRef_++;
    if (!loaded_HLT_HISinglePhoton40_Eta3p1ForPPRef_) {
        if (!b_HLT_HISinglePhoton40_Eta3p1ForPPRef_) throw std::runtime_error("HLT_HISinglePhoton40_Eta3p1ForPPRef branch doesn't exist");
        b_HLT_HISinglePhoton40_Eta3p1ForPPRef_->GetEntry(index);
        loaded_HLT_HISinglePhoton40_Eta3p1ForPPRef_ = true;
    }
    return HLT_HISinglePhoton40_Eta3p1ForPPRef_;
}
const bool &Nano::HLT_HISinglePhoton50_Eta3p1ForPPRef() {
    if (!loaded_HLT_HISinglePhoton50_Eta3p1ForPPRef_) counter_uncached_HLT_HISinglePhoton50_Eta3p1ForPPRef_++;
    else counter_cached_HLT_HISinglePhoton50_Eta3p1ForPPRef_++;
    if (!loaded_HLT_HISinglePhoton50_Eta3p1ForPPRef_) {
        if (!b_HLT_HISinglePhoton50_Eta3p1ForPPRef_) throw std::runtime_error("HLT_HISinglePhoton50_Eta3p1ForPPRef branch doesn't exist");
        b_HLT_HISinglePhoton50_Eta3p1ForPPRef_->GetEntry(index);
        loaded_HLT_HISinglePhoton50_Eta3p1ForPPRef_ = true;
    }
    return HLT_HISinglePhoton50_Eta3p1ForPPRef_;
}
const bool &Nano::HLT_HISinglePhoton60() {
    if (!loaded_HLT_HISinglePhoton60_) counter_uncached_HLT_HISinglePhoton60_++;
    else counter_cached_HLT_HISinglePhoton60_++;
    if (!loaded_HLT_HISinglePhoton60_) {
        if (!b_HLT_HISinglePhoton60_) throw std::runtime_error("HLT_HISinglePhoton60 branch doesn't exist");
        b_HLT_HISinglePhoton60_->GetEntry(index);
        loaded_HLT_HISinglePhoton60_ = true;
    }
    return HLT_HISinglePhoton60_;
}
const bool &Nano::HLT_HISinglePhoton60_Eta3p1ForPPRef() {
    if (!loaded_HLT_HISinglePhoton60_Eta3p1ForPPRef_) counter_uncached_HLT_HISinglePhoton60_Eta3p1ForPPRef_++;
    else counter_cached_HLT_HISinglePhoton60_Eta3p1ForPPRef_++;
    if (!loaded_HLT_HISinglePhoton60_Eta3p1ForPPRef_) {
        if (!b_HLT_HISinglePhoton60_Eta3p1ForPPRef_) throw std::runtime_error("HLT_HISinglePhoton60_Eta3p1ForPPRef branch doesn't exist");
        b_HLT_HISinglePhoton60_Eta3p1ForPPRef_->GetEntry(index);
        loaded_HLT_HISinglePhoton60_Eta3p1ForPPRef_ = true;
    }
    return HLT_HISinglePhoton60_Eta3p1ForPPRef_;
}
const bool &Nano::HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack() {
    if (!loaded_HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_) counter_uncached_HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_++;
    else counter_cached_HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_++;
    if (!loaded_HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_) {
        if (!b_HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_) throw std::runtime_error("HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack branch doesn't exist");
        b_HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_->GetEntry(index);
        loaded_HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_ = true;
    }
    return HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_;
}
const bool &Nano::HLT_HT200() {
    if (!loaded_HLT_HT200_) counter_uncached_HLT_HT200_++;
    else counter_cached_HLT_HT200_++;
    if (!loaded_HLT_HT200_) {
        if (!b_HLT_HT200_) throw std::runtime_error("HLT_HT200 branch doesn't exist");
        b_HLT_HT200_->GetEntry(index);
        loaded_HLT_HT200_ = true;
    }
    return HLT_HT200_;
}
const bool &Nano::HLT_HT2000() {
    if (!loaded_HLT_HT2000_) counter_uncached_HLT_HT2000_++;
    else counter_cached_HLT_HT2000_++;
    if (!loaded_HLT_HT2000_) {
        if (!b_HLT_HT2000_) throw std::runtime_error("HLT_HT2000 branch doesn't exist");
        b_HLT_HT2000_->GetEntry(index);
        loaded_HLT_HT2000_ = true;
    }
    return HLT_HT2000_;
}
const bool &Nano::HLT_HT200_DisplacedDijet40_DisplacedTrack() {
    if (!loaded_HLT_HT200_DisplacedDijet40_DisplacedTrack_) counter_uncached_HLT_HT200_DisplacedDijet40_DisplacedTrack_++;
    else counter_cached_HLT_HT200_DisplacedDijet40_DisplacedTrack_++;
    if (!loaded_HLT_HT200_DisplacedDijet40_DisplacedTrack_) {
        if (!b_HLT_HT200_DisplacedDijet40_DisplacedTrack_) throw std::runtime_error("HLT_HT200_DisplacedDijet40_DisplacedTrack branch doesn't exist");
        b_HLT_HT200_DisplacedDijet40_DisplacedTrack_->GetEntry(index);
        loaded_HLT_HT200_DisplacedDijet40_DisplacedTrack_ = true;
    }
    return HLT_HT200_DisplacedDijet40_DisplacedTrack_;
}
const bool &Nano::HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless() {
    if (!loaded_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_) counter_uncached_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_++;
    else counter_cached_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_++;
    if (!loaded_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_) {
        if (!b_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_) throw std::runtime_error("HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless branch doesn't exist");
        b_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_->GetEntry(index);
        loaded_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_ = true;
    }
    return HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_;
}
const bool &Nano::HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive() {
    if (!loaded_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_) counter_uncached_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_++;
    else counter_cached_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_++;
    if (!loaded_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_) {
        if (!b_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_) throw std::runtime_error("HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive branch doesn't exist");
        b_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_->GetEntry(index);
        loaded_HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_ = true;
    }
    return HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_;
}
const bool &Nano::HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless() {
    if (!loaded_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_) counter_uncached_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_++;
    else counter_cached_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_++;
    if (!loaded_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_) {
        if (!b_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_) throw std::runtime_error("HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless branch doesn't exist");
        b_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_->GetEntry(index);
        loaded_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_ = true;
    }
    return HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_;
}
const bool &Nano::HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive() {
    if (!loaded_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_) counter_uncached_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_++;
    else counter_cached_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_++;
    if (!loaded_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_) {
        if (!b_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_) throw std::runtime_error("HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive branch doesn't exist");
        b_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_->GetEntry(index);
        loaded_HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_ = true;
    }
    return HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_;
}
const bool &Nano::HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5() {
    if (!loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5_) counter_uncached_HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5_++;
    else counter_cached_HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5_++;
    if (!loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5_) {
        if (!b_HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5_) throw std::runtime_error("HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5 branch doesn't exist");
        b_HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5_->GetEntry(index);
        loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5_ = true;
    }
    return HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5_;
}
const bool &Nano::HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5() {
    if (!loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_) counter_uncached_HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_++;
    else counter_cached_HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_++;
    if (!loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_) {
        if (!b_HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_) throw std::runtime_error("HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5 branch doesn't exist");
        b_HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_->GetEntry(index);
        loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_ = true;
    }
    return HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_;
}
const bool &Nano::HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack() {
    if (!loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_) counter_uncached_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_++;
    else counter_cached_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_++;
    if (!loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_) {
        if (!b_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_) throw std::runtime_error("HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack branch doesn't exist");
        b_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_->GetEntry(index);
        loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_ = true;
    }
    return HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_;
}
const bool &Nano::HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5() {
    if (!loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_) counter_uncached_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_++;
    else counter_cached_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_++;
    if (!loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_) {
        if (!b_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_) throw std::runtime_error("HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5 branch doesn't exist");
        b_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_->GetEntry(index);
        loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_ = true;
    }
    return HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_;
}
const bool &Nano::HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack() {
    if (!loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_) counter_uncached_HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_++;
    else counter_cached_HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_++;
    if (!loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_) {
        if (!b_HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_) throw std::runtime_error("HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack branch doesn't exist");
        b_HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_->GetEntry(index);
        loaded_HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_ = true;
    }
    return HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_;
}
const bool &Nano::HLT_HT2500() {
    if (!loaded_HLT_HT2500_) counter_uncached_HLT_HT2500_++;
    else counter_cached_HLT_HT2500_++;
    if (!loaded_HLT_HT2500_) {
        if (!b_HLT_HT2500_) throw std::runtime_error("HLT_HT2500 branch doesn't exist");
        b_HLT_HT2500_->GetEntry(index);
        loaded_HLT_HT2500_ = true;
    }
    return HLT_HT2500_;
}
const bool &Nano::HLT_HT250_CaloMET70() {
    if (!loaded_HLT_HT250_CaloMET70_) counter_uncached_HLT_HT250_CaloMET70_++;
    else counter_cached_HLT_HT250_CaloMET70_++;
    if (!loaded_HLT_HT250_CaloMET70_) {
        if (!b_HLT_HT250_CaloMET70_) throw std::runtime_error("HLT_HT250_CaloMET70 branch doesn't exist");
        b_HLT_HT250_CaloMET70_->GetEntry(index);
        loaded_HLT_HT250_CaloMET70_ = true;
    }
    return HLT_HT250_CaloMET70_;
}
const bool &Nano::HLT_HT250_DisplacedDijet40_DisplacedTrack() {
    if (!loaded_HLT_HT250_DisplacedDijet40_DisplacedTrack_) counter_uncached_HLT_HT250_DisplacedDijet40_DisplacedTrack_++;
    else counter_cached_HLT_HT250_DisplacedDijet40_DisplacedTrack_++;
    if (!loaded_HLT_HT250_DisplacedDijet40_DisplacedTrack_) {
        if (!b_HLT_HT250_DisplacedDijet40_DisplacedTrack_) throw std::runtime_error("HLT_HT250_DisplacedDijet40_DisplacedTrack branch doesn't exist");
        b_HLT_HT250_DisplacedDijet40_DisplacedTrack_->GetEntry(index);
        loaded_HLT_HT250_DisplacedDijet40_DisplacedTrack_ = true;
    }
    return HLT_HT250_DisplacedDijet40_DisplacedTrack_;
}
const bool &Nano::HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack() {
    if (!loaded_HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_) counter_uncached_HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_++;
    else counter_cached_HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_++;
    if (!loaded_HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_) {
        if (!b_HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_) throw std::runtime_error("HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack branch doesn't exist");
        b_HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_->GetEntry(index);
        loaded_HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_ = true;
    }
    return HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_;
}
const bool &Nano::HLT_HT275() {
    if (!loaded_HLT_HT275_) counter_uncached_HLT_HT275_++;
    else counter_cached_HLT_HT275_++;
    if (!loaded_HLT_HT275_) {
        if (!b_HLT_HT275_) throw std::runtime_error("HLT_HT275 branch doesn't exist");
        b_HLT_HT275_->GetEntry(index);
        loaded_HLT_HT275_ = true;
    }
    return HLT_HT275_;
}
const bool &Nano::HLT_HT300PT30_QuadJet_75_60_45_40() {
    if (!loaded_HLT_HT300PT30_QuadJet_75_60_45_40_) counter_uncached_HLT_HT300PT30_QuadJet_75_60_45_40_++;
    else counter_cached_HLT_HT300PT30_QuadJet_75_60_45_40_++;
    if (!loaded_HLT_HT300PT30_QuadJet_75_60_45_40_) {
        if (!b_HLT_HT300PT30_QuadJet_75_60_45_40_) throw std::runtime_error("HLT_HT300PT30_QuadJet_75_60_45_40 branch doesn't exist");
        b_HLT_HT300PT30_QuadJet_75_60_45_40_->GetEntry(index);
        loaded_HLT_HT300PT30_QuadJet_75_60_45_40_ = true;
    }
    return HLT_HT300PT30_QuadJet_75_60_45_40_;
}
const bool &Nano::HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07() {
    if (!loaded_HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07_) counter_uncached_HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07_++;
    else counter_cached_HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07_++;
    if (!loaded_HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07_) {
        if (!b_HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07_) throw std::runtime_error("HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07 branch doesn't exist");
        b_HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07_->GetEntry(index);
        loaded_HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07_ = true;
    }
    return HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07_;
}
const bool &Nano::HLT_HT300_Beamspot() {
    if (!loaded_HLT_HT300_Beamspot_) counter_uncached_HLT_HT300_Beamspot_++;
    else counter_cached_HLT_HT300_Beamspot_++;
    if (!loaded_HLT_HT300_Beamspot_) {
        if (!b_HLT_HT300_Beamspot_) throw std::runtime_error("HLT_HT300_Beamspot branch doesn't exist");
        b_HLT_HT300_Beamspot_->GetEntry(index);
        loaded_HLT_HT300_Beamspot_ = true;
    }
    return HLT_HT300_Beamspot_;
}
const bool &Nano::HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive() {
    if (!loaded_HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_) counter_uncached_HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_++;
    else counter_cached_HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_++;
    if (!loaded_HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_) {
        if (!b_HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_) throw std::runtime_error("HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive branch doesn't exist");
        b_HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_->GetEntry(index);
        loaded_HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_ = true;
    }
    return HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_;
}
const bool &Nano::HLT_HT325() {
    if (!loaded_HLT_HT325_) counter_uncached_HLT_HT325_++;
    else counter_cached_HLT_HT325_++;
    if (!loaded_HLT_HT325_) {
        if (!b_HLT_HT325_) throw std::runtime_error("HLT_HT325 branch doesn't exist");
        b_HLT_HT325_->GetEntry(index);
        loaded_HLT_HT325_ = true;
    }
    return HLT_HT325_;
}
const bool &Nano::HLT_HT350_DisplacedDijet40_DisplacedTrack() {
    if (!loaded_HLT_HT350_DisplacedDijet40_DisplacedTrack_) counter_uncached_HLT_HT350_DisplacedDijet40_DisplacedTrack_++;
    else counter_cached_HLT_HT350_DisplacedDijet40_DisplacedTrack_++;
    if (!loaded_HLT_HT350_DisplacedDijet40_DisplacedTrack_) {
        if (!b_HLT_HT350_DisplacedDijet40_DisplacedTrack_) throw std::runtime_error("HLT_HT350_DisplacedDijet40_DisplacedTrack branch doesn't exist");
        b_HLT_HT350_DisplacedDijet40_DisplacedTrack_->GetEntry(index);
        loaded_HLT_HT350_DisplacedDijet40_DisplacedTrack_ = true;
    }
    return HLT_HT350_DisplacedDijet40_DisplacedTrack_;
}
const bool &Nano::HLT_HT350_DisplacedDijet40_Inclusive() {
    if (!loaded_HLT_HT350_DisplacedDijet40_Inclusive_) counter_uncached_HLT_HT350_DisplacedDijet40_Inclusive_++;
    else counter_cached_HLT_HT350_DisplacedDijet40_Inclusive_++;
    if (!loaded_HLT_HT350_DisplacedDijet40_Inclusive_) {
        if (!b_HLT_HT350_DisplacedDijet40_Inclusive_) throw std::runtime_error("HLT_HT350_DisplacedDijet40_Inclusive branch doesn't exist");
        b_HLT_HT350_DisplacedDijet40_Inclusive_->GetEntry(index);
        loaded_HLT_HT350_DisplacedDijet40_Inclusive_ = true;
    }
    return HLT_HT350_DisplacedDijet40_Inclusive_;
}
const bool &Nano::HLT_HT350_DisplacedDijet80_DisplacedTrack() {
    if (!loaded_HLT_HT350_DisplacedDijet80_DisplacedTrack_) counter_uncached_HLT_HT350_DisplacedDijet80_DisplacedTrack_++;
    else counter_cached_HLT_HT350_DisplacedDijet80_DisplacedTrack_++;
    if (!loaded_HLT_HT350_DisplacedDijet80_DisplacedTrack_) {
        if (!b_HLT_HT350_DisplacedDijet80_DisplacedTrack_) throw std::runtime_error("HLT_HT350_DisplacedDijet80_DisplacedTrack branch doesn't exist");
        b_HLT_HT350_DisplacedDijet80_DisplacedTrack_->GetEntry(index);
        loaded_HLT_HT350_DisplacedDijet80_DisplacedTrack_ = true;
    }
    return HLT_HT350_DisplacedDijet80_DisplacedTrack_;
}
const bool &Nano::HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack() {
    if (!loaded_HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack_) counter_uncached_HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack_++;
    else counter_cached_HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack_++;
    if (!loaded_HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack_) {
        if (!b_HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack_) throw std::runtime_error("HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack branch doesn't exist");
        b_HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack_->GetEntry(index);
        loaded_HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack_ = true;
    }
    return HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack_;
}
const bool &Nano::HLT_HT400_DisplacedDijet40_DisplacedTrack() {
    if (!loaded_HLT_HT400_DisplacedDijet40_DisplacedTrack_) counter_uncached_HLT_HT400_DisplacedDijet40_DisplacedTrack_++;
    else counter_cached_HLT_HT400_DisplacedDijet40_DisplacedTrack_++;
    if (!loaded_HLT_HT400_DisplacedDijet40_DisplacedTrack_) {
        if (!b_HLT_HT400_DisplacedDijet40_DisplacedTrack_) throw std::runtime_error("HLT_HT400_DisplacedDijet40_DisplacedTrack branch doesn't exist");
        b_HLT_HT400_DisplacedDijet40_DisplacedTrack_->GetEntry(index);
        loaded_HLT_HT400_DisplacedDijet40_DisplacedTrack_ = true;
    }
    return HLT_HT400_DisplacedDijet40_DisplacedTrack_;
}
const bool &Nano::HLT_HT400_DisplacedDijet40_Inclusive() {
    if (!loaded_HLT_HT400_DisplacedDijet40_Inclusive_) counter_uncached_HLT_HT400_DisplacedDijet40_Inclusive_++;
    else counter_cached_HLT_HT400_DisplacedDijet40_Inclusive_++;
    if (!loaded_HLT_HT400_DisplacedDijet40_Inclusive_) {
        if (!b_HLT_HT400_DisplacedDijet40_Inclusive_) throw std::runtime_error("HLT_HT400_DisplacedDijet40_Inclusive branch doesn't exist");
        b_HLT_HT400_DisplacedDijet40_Inclusive_->GetEntry(index);
        loaded_HLT_HT400_DisplacedDijet40_Inclusive_ = true;
    }
    return HLT_HT400_DisplacedDijet40_Inclusive_;
}
const bool &Nano::HLT_HT410to430() {
    if (!loaded_HLT_HT410to430_) counter_uncached_HLT_HT410to430_++;
    else counter_cached_HLT_HT410to430_++;
    if (!loaded_HLT_HT410to430_) {
        if (!b_HLT_HT410to430_) throw std::runtime_error("HLT_HT410to430 branch doesn't exist");
        b_HLT_HT410to430_->GetEntry(index);
        loaded_HLT_HT410to430_ = true;
    }
    return HLT_HT410to430_;
}
const bool &Nano::HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive() {
    if (!loaded_HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_) counter_uncached_HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_++;
    else counter_cached_HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_++;
    if (!loaded_HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_) {
        if (!b_HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_) throw std::runtime_error("HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive branch doesn't exist");
        b_HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_->GetEntry(index);
        loaded_HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_ = true;
    }
    return HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_;
}
const bool &Nano::HLT_HT425() {
    if (!loaded_HLT_HT425_) counter_uncached_HLT_HT425_++;
    else counter_cached_HLT_HT425_++;
    if (!loaded_HLT_HT425_) {
        if (!b_HLT_HT425_) throw std::runtime_error("HLT_HT425 branch doesn't exist");
        b_HLT_HT425_->GetEntry(index);
        loaded_HLT_HT425_ = true;
    }
    return HLT_HT425_;
}
const bool &Nano::HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive() {
    if (!loaded_HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_) counter_uncached_HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_++;
    else counter_cached_HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_++;
    if (!loaded_HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_) {
        if (!b_HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_) throw std::runtime_error("HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive branch doesn't exist");
        b_HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_->GetEntry(index);
        loaded_HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_ = true;
    }
    return HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_;
}
const bool &Nano::HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless() {
    if (!loaded_HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_) counter_uncached_HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_++;
    else counter_cached_HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_++;
    if (!loaded_HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_) {
        if (!b_HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_) throw std::runtime_error("HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless branch doesn't exist");
        b_HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_->GetEntry(index);
        loaded_HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_ = true;
    }
    return HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_;
}
const bool &Nano::HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive() {
    if (!loaded_HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_) counter_uncached_HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_++;
    else counter_cached_HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_++;
    if (!loaded_HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_) {
        if (!b_HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_) throw std::runtime_error("HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive branch doesn't exist");
        b_HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_->GetEntry(index);
        loaded_HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_ = true;
    }
    return HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_;
}
const bool &Nano::HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive() {
    if (!loaded_HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_) counter_uncached_HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_++;
    else counter_cached_HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_++;
    if (!loaded_HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_) {
        if (!b_HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_) throw std::runtime_error("HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive branch doesn't exist");
        b_HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_->GetEntry(index);
        loaded_HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_ = true;
    }
    return HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_;
}
const bool &Nano::HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless() {
    if (!loaded_HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_) counter_uncached_HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_++;
    else counter_cached_HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_++;
    if (!loaded_HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_) {
        if (!b_HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_) throw std::runtime_error("HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless branch doesn't exist");
        b_HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_->GetEntry(index);
        loaded_HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_ = true;
    }
    return HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_;
}
const bool &Nano::HLT_HT430_DelayedJet40_SingleDelay1nsInclusive() {
    if (!loaded_HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_) counter_uncached_HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_++;
    else counter_cached_HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_++;
    if (!loaded_HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_) {
        if (!b_HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_) throw std::runtime_error("HLT_HT430_DelayedJet40_SingleDelay1nsInclusive branch doesn't exist");
        b_HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_->GetEntry(index);
        loaded_HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_ = true;
    }
    return HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_;
}
const bool &Nano::HLT_HT430_DelayedJet40_SingleDelay1nsTrackless() {
    if (!loaded_HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_) counter_uncached_HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_++;
    else counter_cached_HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_++;
    if (!loaded_HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_) {
        if (!b_HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_) throw std::runtime_error("HLT_HT430_DelayedJet40_SingleDelay1nsTrackless branch doesn't exist");
        b_HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_->GetEntry(index);
        loaded_HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_ = true;
    }
    return HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_;
}
const bool &Nano::HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive() {
    if (!loaded_HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_) counter_uncached_HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_++;
    else counter_cached_HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_++;
    if (!loaded_HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_) {
        if (!b_HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_) throw std::runtime_error("HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive branch doesn't exist");
        b_HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_->GetEntry(index);
        loaded_HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_ = true;
    }
    return HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_;
}
const bool &Nano::HLT_HT430_DelayedJet40_SingleDelay2nsInclusive() {
    if (!loaded_HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_) counter_uncached_HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_++;
    else counter_cached_HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_++;
    if (!loaded_HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_) {
        if (!b_HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_) throw std::runtime_error("HLT_HT430_DelayedJet40_SingleDelay2nsInclusive branch doesn't exist");
        b_HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_->GetEntry(index);
        loaded_HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_ = true;
    }
    return HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_;
}
const bool &Nano::HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5() {
    if (!loaded_HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5_) counter_uncached_HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5_++;
    else counter_cached_HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5_++;
    if (!loaded_HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5_) {
        if (!b_HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5_) throw std::runtime_error("HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5 branch doesn't exist");
        b_HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5_->GetEntry(index);
        loaded_HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5_ = true;
    }
    return HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5_;
}
const bool &Nano::HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5() {
    if (!loaded_HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5_) counter_uncached_HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5_++;
    else counter_cached_HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5_++;
    if (!loaded_HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5_) {
        if (!b_HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5_) throw std::runtime_error("HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5 branch doesn't exist");
        b_HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5_->GetEntry(index);
        loaded_HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5_ = true;
    }
    return HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5_;
}
const bool &Nano::HLT_HT430_DisplacedDijet40_DisplacedTrack() {
    if (!loaded_HLT_HT430_DisplacedDijet40_DisplacedTrack_) counter_uncached_HLT_HT430_DisplacedDijet40_DisplacedTrack_++;
    else counter_cached_HLT_HT430_DisplacedDijet40_DisplacedTrack_++;
    if (!loaded_HLT_HT430_DisplacedDijet40_DisplacedTrack_) {
        if (!b_HLT_HT430_DisplacedDijet40_DisplacedTrack_) throw std::runtime_error("HLT_HT430_DisplacedDijet40_DisplacedTrack branch doesn't exist");
        b_HLT_HT430_DisplacedDijet40_DisplacedTrack_->GetEntry(index);
        loaded_HLT_HT430_DisplacedDijet40_DisplacedTrack_ = true;
    }
    return HLT_HT430_DisplacedDijet40_DisplacedTrack_;
}
const bool &Nano::HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5() {
    if (!loaded_HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_) counter_uncached_HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_++;
    else counter_cached_HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_++;
    if (!loaded_HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_) {
        if (!b_HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_) throw std::runtime_error("HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5 branch doesn't exist");
        b_HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_->GetEntry(index);
        loaded_HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_ = true;
    }
    return HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_;
}
const bool &Nano::HLT_HT430_DisplacedDijet60_DisplacedTrack() {
    if (!loaded_HLT_HT430_DisplacedDijet60_DisplacedTrack_) counter_uncached_HLT_HT430_DisplacedDijet60_DisplacedTrack_++;
    else counter_cached_HLT_HT430_DisplacedDijet60_DisplacedTrack_++;
    if (!loaded_HLT_HT430_DisplacedDijet60_DisplacedTrack_) {
        if (!b_HLT_HT430_DisplacedDijet60_DisplacedTrack_) throw std::runtime_error("HLT_HT430_DisplacedDijet60_DisplacedTrack branch doesn't exist");
        b_HLT_HT430_DisplacedDijet60_DisplacedTrack_->GetEntry(index);
        loaded_HLT_HT430_DisplacedDijet60_DisplacedTrack_ = true;
    }
    return HLT_HT430_DisplacedDijet60_DisplacedTrack_;
}
const bool &Nano::HLT_HT430_DisplacedDijet80_DisplacedTrack() {
    if (!loaded_HLT_HT430_DisplacedDijet80_DisplacedTrack_) counter_uncached_HLT_HT430_DisplacedDijet80_DisplacedTrack_++;
    else counter_cached_HLT_HT430_DisplacedDijet80_DisplacedTrack_++;
    if (!loaded_HLT_HT430_DisplacedDijet80_DisplacedTrack_) {
        if (!b_HLT_HT430_DisplacedDijet80_DisplacedTrack_) throw std::runtime_error("HLT_HT430_DisplacedDijet80_DisplacedTrack branch doesn't exist");
        b_HLT_HT430_DisplacedDijet80_DisplacedTrack_->GetEntry(index);
        loaded_HLT_HT430_DisplacedDijet80_DisplacedTrack_ = true;
    }
    return HLT_HT430_DisplacedDijet80_DisplacedTrack_;
}
const bool &Nano::HLT_HT430to450() {
    if (!loaded_HLT_HT430to450_) counter_uncached_HLT_HT430to450_++;
    else counter_cached_HLT_HT430to450_++;
    if (!loaded_HLT_HT430to450_) {
        if (!b_HLT_HT430to450_) throw std::runtime_error("HLT_HT430to450 branch doesn't exist");
        b_HLT_HT430to450_->GetEntry(index);
        loaded_HLT_HT430to450_ = true;
    }
    return HLT_HT430to450_;
}
const bool &Nano::HLT_HT450_Beamspot() {
    if (!loaded_HLT_HT450_Beamspot_) counter_uncached_HLT_HT450_Beamspot_++;
    else counter_cached_HLT_HT450_Beamspot_++;
    if (!loaded_HLT_HT450_Beamspot_) {
        if (!b_HLT_HT450_Beamspot_) throw std::runtime_error("HLT_HT450_Beamspot branch doesn't exist");
        b_HLT_HT450_Beamspot_->GetEntry(index);
        loaded_HLT_HT450_Beamspot_ = true;
    }
    return HLT_HT450_Beamspot_;
}
const bool &Nano::HLT_HT450to470() {
    if (!loaded_HLT_HT450to470_) counter_uncached_HLT_HT450to470_++;
    else counter_cached_HLT_HT450to470_++;
    if (!loaded_HLT_HT450to470_) {
        if (!b_HLT_HT450to470_) throw std::runtime_error("HLT_HT450to470 branch doesn't exist");
        b_HLT_HT450to470_->GetEntry(index);
        loaded_HLT_HT450to470_ = true;
    }
    return HLT_HT450to470_;
}
const bool &Nano::HLT_HT470to500() {
    if (!loaded_HLT_HT470to500_) counter_uncached_HLT_HT470to500_++;
    else counter_cached_HLT_HT470to500_++;
    if (!loaded_HLT_HT470to500_) {
        if (!b_HLT_HT470to500_) throw std::runtime_error("HLT_HT470to500 branch doesn't exist");
        b_HLT_HT470to500_->GetEntry(index);
        loaded_HLT_HT470to500_ = true;
    }
    return HLT_HT470to500_;
}
const bool &Nano::HLT_HT500_DisplacedDijet40_DisplacedTrack() {
    if (!loaded_HLT_HT500_DisplacedDijet40_DisplacedTrack_) counter_uncached_HLT_HT500_DisplacedDijet40_DisplacedTrack_++;
    else counter_cached_HLT_HT500_DisplacedDijet40_DisplacedTrack_++;
    if (!loaded_HLT_HT500_DisplacedDijet40_DisplacedTrack_) {
        if (!b_HLT_HT500_DisplacedDijet40_DisplacedTrack_) throw std::runtime_error("HLT_HT500_DisplacedDijet40_DisplacedTrack branch doesn't exist");
        b_HLT_HT500_DisplacedDijet40_DisplacedTrack_->GetEntry(index);
        loaded_HLT_HT500_DisplacedDijet40_DisplacedTrack_ = true;
    }
    return HLT_HT500_DisplacedDijet40_DisplacedTrack_;
}
const bool &Nano::HLT_HT500_DisplacedDijet40_Inclusive() {
    if (!loaded_HLT_HT500_DisplacedDijet40_Inclusive_) counter_uncached_HLT_HT500_DisplacedDijet40_Inclusive_++;
    else counter_cached_HLT_HT500_DisplacedDijet40_Inclusive_++;
    if (!loaded_HLT_HT500_DisplacedDijet40_Inclusive_) {
        if (!b_HLT_HT500_DisplacedDijet40_Inclusive_) throw std::runtime_error("HLT_HT500_DisplacedDijet40_Inclusive branch doesn't exist");
        b_HLT_HT500_DisplacedDijet40_Inclusive_->GetEntry(index);
        loaded_HLT_HT500_DisplacedDijet40_Inclusive_ = true;
    }
    return HLT_HT500_DisplacedDijet40_Inclusive_;
}
const bool &Nano::HLT_HT500to550() {
    if (!loaded_HLT_HT500to550_) counter_uncached_HLT_HT500to550_++;
    else counter_cached_HLT_HT500to550_++;
    if (!loaded_HLT_HT500to550_) {
        if (!b_HLT_HT500to550_) throw std::runtime_error("HLT_HT500to550 branch doesn't exist");
        b_HLT_HT500to550_->GetEntry(index);
        loaded_HLT_HT500to550_ = true;
    }
    return HLT_HT500to550_;
}
const bool &Nano::HLT_HT550_DisplacedDijet40_Inclusive() {
    if (!loaded_HLT_HT550_DisplacedDijet40_Inclusive_) counter_uncached_HLT_HT550_DisplacedDijet40_Inclusive_++;
    else counter_cached_HLT_HT550_DisplacedDijet40_Inclusive_++;
    if (!loaded_HLT_HT550_DisplacedDijet40_Inclusive_) {
        if (!b_HLT_HT550_DisplacedDijet40_Inclusive_) throw std::runtime_error("HLT_HT550_DisplacedDijet40_Inclusive branch doesn't exist");
        b_HLT_HT550_DisplacedDijet40_Inclusive_->GetEntry(index);
        loaded_HLT_HT550_DisplacedDijet40_Inclusive_ = true;
    }
    return HLT_HT550_DisplacedDijet40_Inclusive_;
}
const bool &Nano::HLT_HT550_DisplacedDijet60_Inclusive() {
    if (!loaded_HLT_HT550_DisplacedDijet60_Inclusive_) counter_uncached_HLT_HT550_DisplacedDijet60_Inclusive_++;
    else counter_cached_HLT_HT550_DisplacedDijet60_Inclusive_++;
    if (!loaded_HLT_HT550_DisplacedDijet60_Inclusive_) {
        if (!b_HLT_HT550_DisplacedDijet60_Inclusive_) throw std::runtime_error("HLT_HT550_DisplacedDijet60_Inclusive branch doesn't exist");
        b_HLT_HT550_DisplacedDijet60_Inclusive_->GetEntry(index);
        loaded_HLT_HT550_DisplacedDijet60_Inclusive_ = true;
    }
    return HLT_HT550_DisplacedDijet60_Inclusive_;
}
const bool &Nano::HLT_HT550_DisplacedDijet80_Inclusive() {
    if (!loaded_HLT_HT550_DisplacedDijet80_Inclusive_) counter_uncached_HLT_HT550_DisplacedDijet80_Inclusive_++;
    else counter_cached_HLT_HT550_DisplacedDijet80_Inclusive_++;
    if (!loaded_HLT_HT550_DisplacedDijet80_Inclusive_) {
        if (!b_HLT_HT550_DisplacedDijet80_Inclusive_) throw std::runtime_error("HLT_HT550_DisplacedDijet80_Inclusive branch doesn't exist");
        b_HLT_HT550_DisplacedDijet80_Inclusive_->GetEntry(index);
        loaded_HLT_HT550_DisplacedDijet80_Inclusive_ = true;
    }
    return HLT_HT550_DisplacedDijet80_Inclusive_;
}
const bool &Nano::HLT_HT550to650() {
    if (!loaded_HLT_HT550to650_) counter_uncached_HLT_HT550to650_++;
    else counter_cached_HLT_HT550to650_++;
    if (!loaded_HLT_HT550to650_) {
        if (!b_HLT_HT550to650_) throw std::runtime_error("HLT_HT550to650 branch doesn't exist");
        b_HLT_HT550to650_->GetEntry(index);
        loaded_HLT_HT550to650_ = true;
    }
    return HLT_HT550to650_;
}
const bool &Nano::HLT_HT575() {
    if (!loaded_HLT_HT575_) counter_uncached_HLT_HT575_++;
    else counter_cached_HLT_HT575_++;
    if (!loaded_HLT_HT575_) {
        if (!b_HLT_HT575_) throw std::runtime_error("HLT_HT575 branch doesn't exist");
        b_HLT_HT575_->GetEntry(index);
        loaded_HLT_HT575_ = true;
    }
    return HLT_HT575_;
}
const bool &Nano::HLT_HT650() {
    if (!loaded_HLT_HT650_) counter_uncached_HLT_HT650_++;
    else counter_cached_HLT_HT650_++;
    if (!loaded_HLT_HT650_) {
        if (!b_HLT_HT650_) throw std::runtime_error("HLT_HT650 branch doesn't exist");
        b_HLT_HT650_->GetEntry(index);
        loaded_HLT_HT650_ = true;
    }
    return HLT_HT650_;
}
const bool &Nano::HLT_HT650_DisplacedDijet60_Inclusive() {
    if (!loaded_HLT_HT650_DisplacedDijet60_Inclusive_) counter_uncached_HLT_HT650_DisplacedDijet60_Inclusive_++;
    else counter_cached_HLT_HT650_DisplacedDijet60_Inclusive_++;
    if (!loaded_HLT_HT650_DisplacedDijet60_Inclusive_) {
        if (!b_HLT_HT650_DisplacedDijet60_Inclusive_) throw std::runtime_error("HLT_HT650_DisplacedDijet60_Inclusive branch doesn't exist");
        b_HLT_HT650_DisplacedDijet60_Inclusive_->GetEntry(index);
        loaded_HLT_HT650_DisplacedDijet60_Inclusive_ = true;
    }
    return HLT_HT650_DisplacedDijet60_Inclusive_;
}
const bool &Nano::HLT_HT650_DisplacedDijet80_Inclusive() {
    if (!loaded_HLT_HT650_DisplacedDijet80_Inclusive_) counter_uncached_HLT_HT650_DisplacedDijet80_Inclusive_++;
    else counter_cached_HLT_HT650_DisplacedDijet80_Inclusive_++;
    if (!loaded_HLT_HT650_DisplacedDijet80_Inclusive_) {
        if (!b_HLT_HT650_DisplacedDijet80_Inclusive_) throw std::runtime_error("HLT_HT650_DisplacedDijet80_Inclusive branch doesn't exist");
        b_HLT_HT650_DisplacedDijet80_Inclusive_->GetEntry(index);
        loaded_HLT_HT650_DisplacedDijet80_Inclusive_ = true;
    }
    return HLT_HT650_DisplacedDijet80_Inclusive_;
}
const bool &Nano::HLT_HT750_DisplacedDijet80_Inclusive() {
    if (!loaded_HLT_HT750_DisplacedDijet80_Inclusive_) counter_uncached_HLT_HT750_DisplacedDijet80_Inclusive_++;
    else counter_cached_HLT_HT750_DisplacedDijet80_Inclusive_++;
    if (!loaded_HLT_HT750_DisplacedDijet80_Inclusive_) {
        if (!b_HLT_HT750_DisplacedDijet80_Inclusive_) throw std::runtime_error("HLT_HT750_DisplacedDijet80_Inclusive branch doesn't exist");
        b_HLT_HT750_DisplacedDijet80_Inclusive_->GetEntry(index);
        loaded_HLT_HT750_DisplacedDijet80_Inclusive_ = true;
    }
    return HLT_HT750_DisplacedDijet80_Inclusive_;
}
const bool &Nano::HLT_HcalCalibration() {
    if (!loaded_HLT_HcalCalibration_) counter_uncached_HLT_HcalCalibration_++;
    else counter_cached_HLT_HcalCalibration_++;
    if (!loaded_HLT_HcalCalibration_) {
        if (!b_HLT_HcalCalibration_) throw std::runtime_error("HLT_HcalCalibration branch doesn't exist");
        b_HLT_HcalCalibration_->GetEntry(index);
        loaded_HLT_HcalCalibration_ = true;
    }
    return HLT_HcalCalibration_;
}
const bool &Nano::HLT_HcalIsolatedbunch() {
    if (!loaded_HLT_HcalIsolatedbunch_) counter_uncached_HLT_HcalIsolatedbunch_++;
    else counter_cached_HLT_HcalIsolatedbunch_++;
    if (!loaded_HLT_HcalIsolatedbunch_) {
        if (!b_HLT_HcalIsolatedbunch_) throw std::runtime_error("HLT_HcalIsolatedbunch branch doesn't exist");
        b_HLT_HcalIsolatedbunch_->GetEntry(index);
        loaded_HLT_HcalIsolatedbunch_ = true;
    }
    return HLT_HcalIsolatedbunch_;
}
const bool &Nano::HLT_HcalNZS() {
    if (!loaded_HLT_HcalNZS_) counter_uncached_HLT_HcalNZS_++;
    else counter_cached_HLT_HcalNZS_++;
    if (!loaded_HLT_HcalNZS_) {
        if (!b_HLT_HcalNZS_) throw std::runtime_error("HLT_HcalNZS branch doesn't exist");
        b_HLT_HcalNZS_->GetEntry(index);
        loaded_HLT_HcalNZS_ = true;
    }
    return HLT_HcalNZS_;
}
const bool &Nano::HLT_HcalPhiSym() {
    if (!loaded_HLT_HcalPhiSym_) counter_uncached_HLT_HcalPhiSym_++;
    else counter_cached_HLT_HcalPhiSym_++;
    if (!loaded_HLT_HcalPhiSym_) {
        if (!b_HLT_HcalPhiSym_) throw std::runtime_error("HLT_HcalPhiSym branch doesn't exist");
        b_HLT_HcalPhiSym_->GetEntry(index);
        loaded_HLT_HcalPhiSym_ = true;
    }
    return HLT_HcalPhiSym_;
}
const bool &Nano::HLT_HighPtTkMu100() {
    if (!loaded_HLT_HighPtTkMu100_) counter_uncached_HLT_HighPtTkMu100_++;
    else counter_cached_HLT_HighPtTkMu100_++;
    if (!loaded_HLT_HighPtTkMu100_) {
        if (!b_HLT_HighPtTkMu100_) throw std::runtime_error("HLT_HighPtTkMu100 branch doesn't exist");
        b_HLT_HighPtTkMu100_->GetEntry(index);
        loaded_HLT_HighPtTkMu100_ = true;
    }
    return HLT_HighPtTkMu100_;
}
const bool &Nano::HLT_IsoMu16_eta2p1_MET30() {
    if (!loaded_HLT_IsoMu16_eta2p1_MET30_) counter_uncached_HLT_IsoMu16_eta2p1_MET30_++;
    else counter_cached_HLT_IsoMu16_eta2p1_MET30_++;
    if (!loaded_HLT_IsoMu16_eta2p1_MET30_) {
        if (!b_HLT_IsoMu16_eta2p1_MET30_) throw std::runtime_error("HLT_IsoMu16_eta2p1_MET30 branch doesn't exist");
        b_HLT_IsoMu16_eta2p1_MET30_->GetEntry(index);
        loaded_HLT_IsoMu16_eta2p1_MET30_ = true;
    }
    return HLT_IsoMu16_eta2p1_MET30_;
}
const bool &Nano::HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1() {
    if (!loaded_HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1_) counter_uncached_HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1_++;
    else counter_cached_HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1_++;
    if (!loaded_HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1_) {
        if (!b_HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1_) throw std::runtime_error("HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1 branch doesn't exist");
        b_HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1_->GetEntry(index);
        loaded_HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1_ = true;
    }
    return HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1_;
}
const bool &Nano::HLT_IsoMu17_eta2p1() {
    if (!loaded_HLT_IsoMu17_eta2p1_) counter_uncached_HLT_IsoMu17_eta2p1_++;
    else counter_cached_HLT_IsoMu17_eta2p1_++;
    if (!loaded_HLT_IsoMu17_eta2p1_) {
        if (!b_HLT_IsoMu17_eta2p1_) throw std::runtime_error("HLT_IsoMu17_eta2p1 branch doesn't exist");
        b_HLT_IsoMu17_eta2p1_->GetEntry(index);
        loaded_HLT_IsoMu17_eta2p1_ = true;
    }
    return HLT_IsoMu17_eta2p1_;
}
const bool &Nano::HLT_IsoMu17_eta2p1_LooseIsoPFTau20() {
    if (!loaded_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_) counter_uncached_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_++;
    else counter_cached_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_++;
    if (!loaded_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_) {
        if (!b_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_) throw std::runtime_error("HLT_IsoMu17_eta2p1_LooseIsoPFTau20 branch doesn't exist");
        b_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_->GetEntry(index);
        loaded_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_ = true;
    }
    return HLT_IsoMu17_eta2p1_LooseIsoPFTau20_;
}
const bool &Nano::HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1() {
    if (!loaded_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1_) counter_uncached_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1_++;
    else counter_cached_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1_++;
    if (!loaded_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1_) {
        if (!b_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1_) throw std::runtime_error("HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1 branch doesn't exist");
        b_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1_ = true;
    }
    return HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1_;
}
const bool &Nano::HLT_IsoMu18() {
    if (!loaded_HLT_IsoMu18_) counter_uncached_HLT_IsoMu18_++;
    else counter_cached_HLT_IsoMu18_++;
    if (!loaded_HLT_IsoMu18_) {
        if (!b_HLT_IsoMu18_) throw std::runtime_error("HLT_IsoMu18 branch doesn't exist");
        b_HLT_IsoMu18_->GetEntry(index);
        loaded_HLT_IsoMu18_ = true;
    }
    return HLT_IsoMu18_;
}
const bool &Nano::HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20() {
    if (!loaded_HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20_) counter_uncached_HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20_++;
    else counter_cached_HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20_++;
    if (!loaded_HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20_) {
        if (!b_HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20_) throw std::runtime_error("HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20 branch doesn't exist");
        b_HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20_->GetEntry(index);
        loaded_HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20_ = true;
    }
    return HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20_;
}
const bool &Nano::HLT_IsoMu19_eta2p1_LooseIsoPFTau20() {
    if (!loaded_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_) counter_uncached_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_++;
    else counter_cached_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_++;
    if (!loaded_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_) {
        if (!b_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_) throw std::runtime_error("HLT_IsoMu19_eta2p1_LooseIsoPFTau20 branch doesn't exist");
        b_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_->GetEntry(index);
        loaded_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_ = true;
    }
    return HLT_IsoMu19_eta2p1_LooseIsoPFTau20_;
}
const bool &Nano::HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1() {
    if (!loaded_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1_) counter_uncached_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1_++;
    else counter_cached_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1_++;
    if (!loaded_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1_) {
        if (!b_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1_) throw std::runtime_error("HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1 branch doesn't exist");
        b_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1_ = true;
    }
    return HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1_;
}
const bool &Nano::HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_) counter_uncached_HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_) {
        if (!b_HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_) counter_uncached_HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_) {
        if (!b_HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_) counter_uncached_HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_) {
        if (!b_HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_IsoMu20() {
    if (!loaded_HLT_IsoMu20_) counter_uncached_HLT_IsoMu20_++;
    else counter_cached_HLT_IsoMu20_++;
    if (!loaded_HLT_IsoMu20_) {
        if (!b_HLT_IsoMu20_) throw std::runtime_error("HLT_IsoMu20 branch doesn't exist");
        b_HLT_IsoMu20_->GetEntry(index);
        loaded_HLT_IsoMu20_ = true;
    }
    return HLT_IsoMu20_;
}
const bool &Nano::HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1() {
    if (!loaded_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1_) counter_uncached_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1_++;
    else counter_cached_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1_++;
    if (!loaded_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1_) {
        if (!b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1_) throw std::runtime_error("HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1_ = true;
    }
    return HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1_;
}
const bool &Nano::HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1() {
    if (!loaded_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1_) counter_uncached_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1_++;
    else counter_cached_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1_++;
    if (!loaded_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1_) {
        if (!b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1_) throw std::runtime_error("HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1 branch doesn't exist");
        b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1_ = true;
    }
    return HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1_;
}
const bool &Nano::HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1() {
    if (!loaded_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_) counter_uncached_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_++;
    else counter_cached_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_++;
    if (!loaded_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_) {
        if (!b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_) throw std::runtime_error("HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_ = true;
    }
    return HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_;
}
const bool &Nano::HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1() {
    if (!loaded_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_) counter_uncached_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_++;
    else counter_cached_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_++;
    if (!loaded_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_) {
        if (!b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_) throw std::runtime_error("HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1 branch doesn't exist");
        b_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_ = true;
    }
    return HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_;
}
const bool &Nano::HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1() {
    if (!loaded_HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_) counter_uncached_HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_++;
    else counter_cached_HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_++;
    if (!loaded_HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_) {
        if (!b_HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_) throw std::runtime_error("HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_ = true;
    }
    return HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_;
}
const bool &Nano::HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1() {
    if (!loaded_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1_) counter_uncached_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1_++;
    else counter_cached_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1_++;
    if (!loaded_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1_) {
        if (!b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1_) throw std::runtime_error("HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1_ = true;
    }
    return HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1_;
}
const bool &Nano::HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1() {
    if (!loaded_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1_) counter_uncached_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1_++;
    else counter_cached_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1_++;
    if (!loaded_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1_) {
        if (!b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1_) throw std::runtime_error("HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1 branch doesn't exist");
        b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1_ = true;
    }
    return HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1_;
}
const bool &Nano::HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1() {
    if (!loaded_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_) counter_uncached_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_++;
    else counter_cached_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_++;
    if (!loaded_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_) {
        if (!b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_) throw std::runtime_error("HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_ = true;
    }
    return HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_;
}
const bool &Nano::HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1() {
    if (!loaded_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_) counter_uncached_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_++;
    else counter_cached_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_++;
    if (!loaded_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_) {
        if (!b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_) throw std::runtime_error("HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1 branch doesn't exist");
        b_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_ = true;
    }
    return HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_;
}
const bool &Nano::HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1() {
    if (!loaded_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1_) counter_uncached_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1_++;
    else counter_cached_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1_++;
    if (!loaded_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1_) {
        if (!b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1_) throw std::runtime_error("HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1_ = true;
    }
    return HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1_;
}
const bool &Nano::HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1() {
    if (!loaded_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1_) counter_uncached_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1_++;
    else counter_cached_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1_++;
    if (!loaded_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1_) {
        if (!b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1_) throw std::runtime_error("HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1 branch doesn't exist");
        b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1_ = true;
    }
    return HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1_;
}
const bool &Nano::HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1() {
    if (!loaded_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_) counter_uncached_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_++;
    else counter_cached_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_++;
    if (!loaded_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_) {
        if (!b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_) throw std::runtime_error("HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_ = true;
    }
    return HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_;
}
const bool &Nano::HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1() {
    if (!loaded_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_) counter_uncached_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_++;
    else counter_cached_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_++;
    if (!loaded_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_) {
        if (!b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_) throw std::runtime_error("HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1 branch doesn't exist");
        b_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_ = true;
    }
    return HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_;
}
const bool &Nano::HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1() {
    if (!loaded_HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1_) counter_uncached_HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1_++;
    else counter_cached_HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1_++;
    if (!loaded_HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1_) {
        if (!b_HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1_) throw std::runtime_error("HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1 branch doesn't exist");
        b_HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1_ = true;
    }
    return HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1_;
}
const bool &Nano::HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1() {
    if (!loaded_HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1_) counter_uncached_HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1_++;
    else counter_cached_HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1_++;
    if (!loaded_HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1_) {
        if (!b_HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1_) throw std::runtime_error("HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1 branch doesn't exist");
        b_HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1_ = true;
    }
    return HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1_;
}
const bool &Nano::HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_) counter_uncached_HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_) {
        if (!b_HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_) counter_uncached_HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_) {
        if (!b_HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_) counter_uncached_HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_) {
        if (!b_HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_IsoMu22() {
    if (!loaded_HLT_IsoMu22_) counter_uncached_HLT_IsoMu22_++;
    else counter_cached_HLT_IsoMu22_++;
    if (!loaded_HLT_IsoMu22_) {
        if (!b_HLT_IsoMu22_) throw std::runtime_error("HLT_IsoMu22 branch doesn't exist");
        b_HLT_IsoMu22_->GetEntry(index);
        loaded_HLT_IsoMu22_ = true;
    }
    return HLT_IsoMu22_;
}
const bool &Nano::HLT_IsoMu22_eta2p1() {
    if (!loaded_HLT_IsoMu22_eta2p1_) counter_uncached_HLT_IsoMu22_eta2p1_++;
    else counter_cached_HLT_IsoMu22_eta2p1_++;
    if (!loaded_HLT_IsoMu22_eta2p1_) {
        if (!b_HLT_IsoMu22_eta2p1_) throw std::runtime_error("HLT_IsoMu22_eta2p1 branch doesn't exist");
        b_HLT_IsoMu22_eta2p1_->GetEntry(index);
        loaded_HLT_IsoMu22_eta2p1_ = true;
    }
    return HLT_IsoMu22_eta2p1_;
}
const bool &Nano::HLT_IsoMu24() {
    if (!loaded_HLT_IsoMu24_) counter_uncached_HLT_IsoMu24_++;
    else counter_cached_HLT_IsoMu24_++;
    if (!loaded_HLT_IsoMu24_) {
        if (!b_HLT_IsoMu24_) throw std::runtime_error("HLT_IsoMu24 branch doesn't exist");
        b_HLT_IsoMu24_->GetEntry(index);
        loaded_HLT_IsoMu24_ = true;
    }
    return HLT_IsoMu24_;
}
const bool &Nano::HLT_IsoMu24_TwoProngs35() {
    if (!loaded_HLT_IsoMu24_TwoProngs35_) counter_uncached_HLT_IsoMu24_TwoProngs35_++;
    else counter_cached_HLT_IsoMu24_TwoProngs35_++;
    if (!loaded_HLT_IsoMu24_TwoProngs35_) {
        if (!b_HLT_IsoMu24_TwoProngs35_) throw std::runtime_error("HLT_IsoMu24_TwoProngs35 branch doesn't exist");
        b_HLT_IsoMu24_TwoProngs35_->GetEntry(index);
        loaded_HLT_IsoMu24_TwoProngs35_ = true;
    }
    return HLT_IsoMu24_TwoProngs35_;
}
const bool &Nano::HLT_IsoMu24_eta2p1() {
    if (!loaded_HLT_IsoMu24_eta2p1_) counter_uncached_HLT_IsoMu24_eta2p1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_) {
        if (!b_HLT_IsoMu24_eta2p1_) throw std::runtime_error("HLT_IsoMu24_eta2p1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_ = true;
    }
    return HLT_IsoMu24_eta2p1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1_) counter_uncached_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1_) {
        if (!b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1_) counter_uncached_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1_) {
        if (!b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1() {
    if (!loaded_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_) counter_uncached_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_) {
        if (!b_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_ = true;
    }
    return HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1_) counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1_) {
        if (!b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1_) counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1_) {
        if (!b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr() {
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_) counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_++;
    else counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_++;
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_) {
        if (!b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_) throw std::runtime_error("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_ = true;
    }
    return HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_) counter_uncached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_) {
        if (!b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1_) counter_uncached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1_) {
        if (!b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1_) counter_uncached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1_) {
        if (!b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_;
}
const bool &Nano::HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1() {
    if (!loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_) counter_uncached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_++;
    else counter_cached_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_++;
    if (!loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_) {
        if (!b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_) throw std::runtime_error("HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1 branch doesn't exist");
        b_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_->GetEntry(index);
        loaded_HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_ = true;
    }
    return HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_;
}
const bool &Nano::HLT_IsoMu27() {
    if (!loaded_HLT_IsoMu27_) counter_uncached_HLT_IsoMu27_++;
    else counter_cached_HLT_IsoMu27_++;
    if (!loaded_HLT_IsoMu27_) {
        if (!b_HLT_IsoMu27_) throw std::runtime_error("HLT_IsoMu27 branch doesn't exist");
        b_HLT_IsoMu27_->GetEntry(index);
        loaded_HLT_IsoMu27_ = true;
    }
    return HLT_IsoMu27_;
}
const bool &Nano::HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1() {
    if (!loaded_HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1_) counter_uncached_HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1_++;
    else counter_cached_HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1_++;
    if (!loaded_HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1_) {
        if (!b_HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1_) throw std::runtime_error("HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1 branch doesn't exist");
        b_HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1_ = true;
    }
    return HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1_;
}
const bool &Nano::HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1() {
    if (!loaded_HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1_) counter_uncached_HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1_++;
    else counter_cached_HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1_++;
    if (!loaded_HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1_) {
        if (!b_HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1_) throw std::runtime_error("HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1 branch doesn't exist");
        b_HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1_ = true;
    }
    return HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1_;
}
const bool &Nano::HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1() {
    if (!loaded_HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_) counter_uncached_HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_++;
    else counter_cached_HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_++;
    if (!loaded_HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_) {
        if (!b_HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_) throw std::runtime_error("HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1 branch doesn't exist");
        b_HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_ = true;
    }
    return HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_;
}
const bool &Nano::HLT_IsoMu27_MET90() {
    if (!loaded_HLT_IsoMu27_MET90_) counter_uncached_HLT_IsoMu27_MET90_++;
    else counter_cached_HLT_IsoMu27_MET90_++;
    if (!loaded_HLT_IsoMu27_MET90_) {
        if (!b_HLT_IsoMu27_MET90_) throw std::runtime_error("HLT_IsoMu27_MET90 branch doesn't exist");
        b_HLT_IsoMu27_MET90_->GetEntry(index);
        loaded_HLT_IsoMu27_MET90_ = true;
    }
    return HLT_IsoMu27_MET90_;
}
const bool &Nano::HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1() {
    if (!loaded_HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1_) counter_uncached_HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1_++;
    else counter_cached_HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1_++;
    if (!loaded_HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1_) {
        if (!b_HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1_) throw std::runtime_error("HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1 branch doesn't exist");
        b_HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1_ = true;
    }
    return HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1_;
}
const bool &Nano::HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1() {
    if (!loaded_HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1_) counter_uncached_HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1_++;
    else counter_cached_HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1_++;
    if (!loaded_HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1_) {
        if (!b_HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1_) throw std::runtime_error("HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1 branch doesn't exist");
        b_HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1_ = true;
    }
    return HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1_;
}
const bool &Nano::HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1() {
    if (!loaded_HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_) counter_uncached_HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_++;
    else counter_cached_HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_++;
    if (!loaded_HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_) {
        if (!b_HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_) throw std::runtime_error("HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1 branch doesn't exist");
        b_HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_ = true;
    }
    return HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_;
}
const bool &Nano::HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1() {
    if (!loaded_HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_) counter_uncached_HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_++;
    else counter_cached_HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_++;
    if (!loaded_HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_) {
        if (!b_HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_) throw std::runtime_error("HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1 branch doesn't exist");
        b_HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_ = true;
    }
    return HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_;
}
const bool &Nano::HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1() {
    if (!loaded_HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1_) counter_uncached_HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1_++;
    else counter_cached_HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1_++;
    if (!loaded_HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1_) {
        if (!b_HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1_) throw std::runtime_error("HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1 branch doesn't exist");
        b_HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1_ = true;
    }
    return HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1_;
}
const bool &Nano::HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1() {
    if (!loaded_HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1_) counter_uncached_HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1_++;
    else counter_cached_HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1_++;
    if (!loaded_HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1_) {
        if (!b_HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1_) throw std::runtime_error("HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1 branch doesn't exist");
        b_HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1_ = true;
    }
    return HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1_;
}
const bool &Nano::HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1() {
    if (!loaded_HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_) counter_uncached_HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_++;
    else counter_cached_HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_++;
    if (!loaded_HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_) {
        if (!b_HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_) throw std::runtime_error("HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1 branch doesn't exist");
        b_HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_->GetEntry(index);
        loaded_HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_ = true;
    }
    return HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_;
}
const bool &Nano::HLT_IsoMu30() {
    if (!loaded_HLT_IsoMu30_) counter_uncached_HLT_IsoMu30_++;
    else counter_cached_HLT_IsoMu30_++;
    if (!loaded_HLT_IsoMu30_) {
        if (!b_HLT_IsoMu30_) throw std::runtime_error("HLT_IsoMu30 branch doesn't exist");
        b_HLT_IsoMu30_->GetEntry(index);
        loaded_HLT_IsoMu30_ = true;
    }
    return HLT_IsoMu30_;
}
const bool &Nano::HLT_IsoMu50_AK8PFJet230_SoftDropMass40() {
    if (!loaded_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_) counter_uncached_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_++;
    else counter_cached_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_++;
    if (!loaded_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_) {
        if (!b_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_) throw std::runtime_error("HLT_IsoMu50_AK8PFJet230_SoftDropMass40 branch doesn't exist");
        b_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_->GetEntry(index);
        loaded_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_ = true;
    }
    return HLT_IsoMu50_AK8PFJet230_SoftDropMass40_;
}
const bool &Nano::HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35() {
    if (!loaded_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_) counter_uncached_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_++;
    else counter_cached_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_++;
    if (!loaded_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_) {
        if (!b_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_) throw std::runtime_error("HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35 branch doesn't exist");
        b_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_->GetEntry(index);
        loaded_HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_ = true;
    }
    return HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_;
}
const bool &Nano::HLT_IsoTkMu18() {
    if (!loaded_HLT_IsoTkMu18_) counter_uncached_HLT_IsoTkMu18_++;
    else counter_cached_HLT_IsoTkMu18_++;
    if (!loaded_HLT_IsoTkMu18_) {
        if (!b_HLT_IsoTkMu18_) throw std::runtime_error("HLT_IsoTkMu18 branch doesn't exist");
        b_HLT_IsoTkMu18_->GetEntry(index);
        loaded_HLT_IsoTkMu18_ = true;
    }
    return HLT_IsoTkMu18_;
}
const bool &Nano::HLT_IsoTkMu20() {
    if (!loaded_HLT_IsoTkMu20_) counter_uncached_HLT_IsoTkMu20_++;
    else counter_cached_HLT_IsoTkMu20_++;
    if (!loaded_HLT_IsoTkMu20_) {
        if (!b_HLT_IsoTkMu20_) throw std::runtime_error("HLT_IsoTkMu20 branch doesn't exist");
        b_HLT_IsoTkMu20_->GetEntry(index);
        loaded_HLT_IsoTkMu20_ = true;
    }
    return HLT_IsoTkMu20_;
}
const bool &Nano::HLT_IsoTkMu22() {
    if (!loaded_HLT_IsoTkMu22_) counter_uncached_HLT_IsoTkMu22_++;
    else counter_cached_HLT_IsoTkMu22_++;
    if (!loaded_HLT_IsoTkMu22_) {
        if (!b_HLT_IsoTkMu22_) throw std::runtime_error("HLT_IsoTkMu22 branch doesn't exist");
        b_HLT_IsoTkMu22_->GetEntry(index);
        loaded_HLT_IsoTkMu22_ = true;
    }
    return HLT_IsoTkMu22_;
}
const bool &Nano::HLT_IsoTkMu22_eta2p1() {
    if (!loaded_HLT_IsoTkMu22_eta2p1_) counter_uncached_HLT_IsoTkMu22_eta2p1_++;
    else counter_cached_HLT_IsoTkMu22_eta2p1_++;
    if (!loaded_HLT_IsoTkMu22_eta2p1_) {
        if (!b_HLT_IsoTkMu22_eta2p1_) throw std::runtime_error("HLT_IsoTkMu22_eta2p1 branch doesn't exist");
        b_HLT_IsoTkMu22_eta2p1_->GetEntry(index);
        loaded_HLT_IsoTkMu22_eta2p1_ = true;
    }
    return HLT_IsoTkMu22_eta2p1_;
}
const bool &Nano::HLT_IsoTkMu24() {
    if (!loaded_HLT_IsoTkMu24_) counter_uncached_HLT_IsoTkMu24_++;
    else counter_cached_HLT_IsoTkMu24_++;
    if (!loaded_HLT_IsoTkMu24_) {
        if (!b_HLT_IsoTkMu24_) throw std::runtime_error("HLT_IsoTkMu24 branch doesn't exist");
        b_HLT_IsoTkMu24_->GetEntry(index);
        loaded_HLT_IsoTkMu24_ = true;
    }
    return HLT_IsoTkMu24_;
}
const bool &Nano::HLT_IsoTkMu24_eta2p1() {
    if (!loaded_HLT_IsoTkMu24_eta2p1_) counter_uncached_HLT_IsoTkMu24_eta2p1_++;
    else counter_cached_HLT_IsoTkMu24_eta2p1_++;
    if (!loaded_HLT_IsoTkMu24_eta2p1_) {
        if (!b_HLT_IsoTkMu24_eta2p1_) throw std::runtime_error("HLT_IsoTkMu24_eta2p1 branch doesn't exist");
        b_HLT_IsoTkMu24_eta2p1_->GetEntry(index);
        loaded_HLT_IsoTkMu24_eta2p1_ = true;
    }
    return HLT_IsoTkMu24_eta2p1_;
}
const bool &Nano::HLT_IsoTkMu27() {
    if (!loaded_HLT_IsoTkMu27_) counter_uncached_HLT_IsoTkMu27_++;
    else counter_cached_HLT_IsoTkMu27_++;
    if (!loaded_HLT_IsoTkMu27_) {
        if (!b_HLT_IsoTkMu27_) throw std::runtime_error("HLT_IsoTkMu27 branch doesn't exist");
        b_HLT_IsoTkMu27_->GetEntry(index);
        loaded_HLT_IsoTkMu27_ = true;
    }
    return HLT_IsoTkMu27_;
}
const bool &Nano::HLT_IsoTrackHB() {
    if (!loaded_HLT_IsoTrackHB_) counter_uncached_HLT_IsoTrackHB_++;
    else counter_cached_HLT_IsoTrackHB_++;
    if (!loaded_HLT_IsoTrackHB_) {
        if (!b_HLT_IsoTrackHB_) throw std::runtime_error("HLT_IsoTrackHB branch doesn't exist");
        b_HLT_IsoTrackHB_->GetEntry(index);
        loaded_HLT_IsoTrackHB_ = true;
    }
    return HLT_IsoTrackHB_;
}
const bool &Nano::HLT_IsoTrackHE() {
    if (!loaded_HLT_IsoTrackHE_) counter_uncached_HLT_IsoTrackHE_++;
    else counter_cached_HLT_IsoTrackHE_++;
    if (!loaded_HLT_IsoTrackHE_) {
        if (!b_HLT_IsoTrackHE_) throw std::runtime_error("HLT_IsoTrackHE branch doesn't exist");
        b_HLT_IsoTrackHE_->GetEntry(index);
        loaded_HLT_IsoTrackHE_ = true;
    }
    return HLT_IsoTrackHE_;
}
const bool &Nano::HLT_JetE30_NoBPTX() {
    if (!loaded_HLT_JetE30_NoBPTX_) counter_uncached_HLT_JetE30_NoBPTX_++;
    else counter_cached_HLT_JetE30_NoBPTX_++;
    if (!loaded_HLT_JetE30_NoBPTX_) {
        if (!b_HLT_JetE30_NoBPTX_) throw std::runtime_error("HLT_JetE30_NoBPTX branch doesn't exist");
        b_HLT_JetE30_NoBPTX_->GetEntry(index);
        loaded_HLT_JetE30_NoBPTX_ = true;
    }
    return HLT_JetE30_NoBPTX_;
}
const bool &Nano::HLT_JetE30_NoBPTX3BX() {
    if (!loaded_HLT_JetE30_NoBPTX3BX_) counter_uncached_HLT_JetE30_NoBPTX3BX_++;
    else counter_cached_HLT_JetE30_NoBPTX3BX_++;
    if (!loaded_HLT_JetE30_NoBPTX3BX_) {
        if (!b_HLT_JetE30_NoBPTX3BX_) throw std::runtime_error("HLT_JetE30_NoBPTX3BX branch doesn't exist");
        b_HLT_JetE30_NoBPTX3BX_->GetEntry(index);
        loaded_HLT_JetE30_NoBPTX3BX_ = true;
    }
    return HLT_JetE30_NoBPTX3BX_;
}
const bool &Nano::HLT_JetE50_NoBPTX3BX() {
    if (!loaded_HLT_JetE50_NoBPTX3BX_) counter_uncached_HLT_JetE50_NoBPTX3BX_++;
    else counter_cached_HLT_JetE50_NoBPTX3BX_++;
    if (!loaded_HLT_JetE50_NoBPTX3BX_) {
        if (!b_HLT_JetE50_NoBPTX3BX_) throw std::runtime_error("HLT_JetE50_NoBPTX3BX branch doesn't exist");
        b_HLT_JetE50_NoBPTX3BX_->GetEntry(index);
        loaded_HLT_JetE50_NoBPTX3BX_ = true;
    }
    return HLT_JetE50_NoBPTX3BX_;
}
const bool &Nano::HLT_JetE70_NoBPTX3BX() {
    if (!loaded_HLT_JetE70_NoBPTX3BX_) counter_uncached_HLT_JetE70_NoBPTX3BX_++;
    else counter_cached_HLT_JetE70_NoBPTX3BX_++;
    if (!loaded_HLT_JetE70_NoBPTX3BX_) {
        if (!b_HLT_JetE70_NoBPTX3BX_) throw std::runtime_error("HLT_JetE70_NoBPTX3BX branch doesn't exist");
        b_HLT_JetE70_NoBPTX3BX_->GetEntry(index);
        loaded_HLT_JetE70_NoBPTX3BX_ = true;
    }
    return HLT_JetE70_NoBPTX3BX_;
}
const bool &Nano::HLT_L1BeamGasMinus() {
    if (!loaded_HLT_L1BeamGasMinus_) counter_uncached_HLT_L1BeamGasMinus_++;
    else counter_cached_HLT_L1BeamGasMinus_++;
    if (!loaded_HLT_L1BeamGasMinus_) {
        if (!b_HLT_L1BeamGasMinus_) throw std::runtime_error("HLT_L1BeamGasMinus branch doesn't exist");
        b_HLT_L1BeamGasMinus_->GetEntry(index);
        loaded_HLT_L1BeamGasMinus_ = true;
    }
    return HLT_L1BeamGasMinus_;
}
const bool &Nano::HLT_L1BeamGasPlus() {
    if (!loaded_HLT_L1BeamGasPlus_) counter_uncached_HLT_L1BeamGasPlus_++;
    else counter_cached_HLT_L1BeamGasPlus_++;
    if (!loaded_HLT_L1BeamGasPlus_) {
        if (!b_HLT_L1BeamGasPlus_) throw std::runtime_error("HLT_L1BeamGasPlus branch doesn't exist");
        b_HLT_L1BeamGasPlus_->GetEntry(index);
        loaded_HLT_L1BeamGasPlus_ = true;
    }
    return HLT_L1BeamGasPlus_;
}
const bool &Nano::HLT_L1BptxMinus() {
    if (!loaded_HLT_L1BptxMinus_) counter_uncached_HLT_L1BptxMinus_++;
    else counter_cached_HLT_L1BptxMinus_++;
    if (!loaded_HLT_L1BptxMinus_) {
        if (!b_HLT_L1BptxMinus_) throw std::runtime_error("HLT_L1BptxMinus branch doesn't exist");
        b_HLT_L1BptxMinus_->GetEntry(index);
        loaded_HLT_L1BptxMinus_ = true;
    }
    return HLT_L1BptxMinus_;
}
const bool &Nano::HLT_L1BptxPlus() {
    if (!loaded_HLT_L1BptxPlus_) counter_uncached_HLT_L1BptxPlus_++;
    else counter_cached_HLT_L1BptxPlus_++;
    if (!loaded_HLT_L1BptxPlus_) {
        if (!b_HLT_L1BptxPlus_) throw std::runtime_error("HLT_L1BptxPlus branch doesn't exist");
        b_HLT_L1BptxPlus_->GetEntry(index);
        loaded_HLT_L1BptxPlus_ = true;
    }
    return HLT_L1BptxPlus_;
}
const bool &Nano::HLT_L1BptxXOR() {
    if (!loaded_HLT_L1BptxXOR_) counter_uncached_HLT_L1BptxXOR_++;
    else counter_cached_HLT_L1BptxXOR_++;
    if (!loaded_HLT_L1BptxXOR_) {
        if (!b_HLT_L1BptxXOR_) throw std::runtime_error("HLT_L1BptxXOR branch doesn't exist");
        b_HLT_L1BptxXOR_->GetEntry(index);
        loaded_HLT_L1BptxXOR_ = true;
    }
    return HLT_L1BptxXOR_;
}
const bool &Nano::HLT_L1CSCShower_DTCluster50() {
    if (!loaded_HLT_L1CSCShower_DTCluster50_) counter_uncached_HLT_L1CSCShower_DTCluster50_++;
    else counter_cached_HLT_L1CSCShower_DTCluster50_++;
    if (!loaded_HLT_L1CSCShower_DTCluster50_) {
        if (!b_HLT_L1CSCShower_DTCluster50_) throw std::runtime_error("HLT_L1CSCShower_DTCluster50 branch doesn't exist");
        b_HLT_L1CSCShower_DTCluster50_->GetEntry(index);
        loaded_HLT_L1CSCShower_DTCluster50_ = true;
    }
    return HLT_L1CSCShower_DTCluster50_;
}
const bool &Nano::HLT_L1CSCShower_DTCluster75() {
    if (!loaded_HLT_L1CSCShower_DTCluster75_) counter_uncached_HLT_L1CSCShower_DTCluster75_++;
    else counter_cached_HLT_L1CSCShower_DTCluster75_++;
    if (!loaded_HLT_L1CSCShower_DTCluster75_) {
        if (!b_HLT_L1CSCShower_DTCluster75_) throw std::runtime_error("HLT_L1CSCShower_DTCluster75 branch doesn't exist");
        b_HLT_L1CSCShower_DTCluster75_->GetEntry(index);
        loaded_HLT_L1CSCShower_DTCluster75_ = true;
    }
    return HLT_L1CSCShower_DTCluster75_;
}
const bool &Nano::HLT_L1ETMHadSeeds() {
    if (!loaded_HLT_L1ETMHadSeeds_) counter_uncached_HLT_L1ETMHadSeeds_++;
    else counter_cached_HLT_L1ETMHadSeeds_++;
    if (!loaded_HLT_L1ETMHadSeeds_) {
        if (!b_HLT_L1ETMHadSeeds_) throw std::runtime_error("HLT_L1ETMHadSeeds branch doesn't exist");
        b_HLT_L1ETMHadSeeds_->GetEntry(index);
        loaded_HLT_L1ETMHadSeeds_ = true;
    }
    return HLT_L1ETMHadSeeds_;
}
const bool &Nano::HLT_L1FatEvents() {
    if (!loaded_HLT_L1FatEvents_) counter_uncached_HLT_L1FatEvents_++;
    else counter_cached_HLT_L1FatEvents_++;
    if (!loaded_HLT_L1FatEvents_) {
        if (!b_HLT_L1FatEvents_) throw std::runtime_error("HLT_L1FatEvents branch doesn't exist");
        b_HLT_L1FatEvents_->GetEntry(index);
        loaded_HLT_L1FatEvents_ = true;
    }
    return HLT_L1FatEvents_;
}
const bool &Nano::HLT_L1FatEvents_part0() {
    if (!loaded_HLT_L1FatEvents_part0_) counter_uncached_HLT_L1FatEvents_part0_++;
    else counter_cached_HLT_L1FatEvents_part0_++;
    if (!loaded_HLT_L1FatEvents_part0_) {
        if (!b_HLT_L1FatEvents_part0_) throw std::runtime_error("HLT_L1FatEvents_part0 branch doesn't exist");
        b_HLT_L1FatEvents_part0_->GetEntry(index);
        loaded_HLT_L1FatEvents_part0_ = true;
    }
    return HLT_L1FatEvents_part0_;
}
const bool &Nano::HLT_L1FatEvents_part1() {
    if (!loaded_HLT_L1FatEvents_part1_) counter_uncached_HLT_L1FatEvents_part1_++;
    else counter_cached_HLT_L1FatEvents_part1_++;
    if (!loaded_HLT_L1FatEvents_part1_) {
        if (!b_HLT_L1FatEvents_part1_) throw std::runtime_error("HLT_L1FatEvents_part1 branch doesn't exist");
        b_HLT_L1FatEvents_part1_->GetEntry(index);
        loaded_HLT_L1FatEvents_part1_ = true;
    }
    return HLT_L1FatEvents_part1_;
}
const bool &Nano::HLT_L1FatEvents_part2() {
    if (!loaded_HLT_L1FatEvents_part2_) counter_uncached_HLT_L1FatEvents_part2_++;
    else counter_cached_HLT_L1FatEvents_part2_++;
    if (!loaded_HLT_L1FatEvents_part2_) {
        if (!b_HLT_L1FatEvents_part2_) throw std::runtime_error("HLT_L1FatEvents_part2 branch doesn't exist");
        b_HLT_L1FatEvents_part2_->GetEntry(index);
        loaded_HLT_L1FatEvents_part2_ = true;
    }
    return HLT_L1FatEvents_part2_;
}
const bool &Nano::HLT_L1FatEvents_part3() {
    if (!loaded_HLT_L1FatEvents_part3_) counter_uncached_HLT_L1FatEvents_part3_++;
    else counter_cached_HLT_L1FatEvents_part3_++;
    if (!loaded_HLT_L1FatEvents_part3_) {
        if (!b_HLT_L1FatEvents_part3_) throw std::runtime_error("HLT_L1FatEvents_part3 branch doesn't exist");
        b_HLT_L1FatEvents_part3_->GetEntry(index);
        loaded_HLT_L1FatEvents_part3_ = true;
    }
    return HLT_L1FatEvents_part3_;
}
const bool &Nano::HLT_L1MET_DTCluster50() {
    if (!loaded_HLT_L1MET_DTCluster50_) counter_uncached_HLT_L1MET_DTCluster50_++;
    else counter_cached_HLT_L1MET_DTCluster50_++;
    if (!loaded_HLT_L1MET_DTCluster50_) {
        if (!b_HLT_L1MET_DTCluster50_) throw std::runtime_error("HLT_L1MET_DTCluster50 branch doesn't exist");
        b_HLT_L1MET_DTCluster50_->GetEntry(index);
        loaded_HLT_L1MET_DTCluster50_ = true;
    }
    return HLT_L1MET_DTCluster50_;
}
const bool &Nano::HLT_L1MET_DTClusterNoMB1S50() {
    if (!loaded_HLT_L1MET_DTClusterNoMB1S50_) counter_uncached_HLT_L1MET_DTClusterNoMB1S50_++;
    else counter_cached_HLT_L1MET_DTClusterNoMB1S50_++;
    if (!loaded_HLT_L1MET_DTClusterNoMB1S50_) {
        if (!b_HLT_L1MET_DTClusterNoMB1S50_) throw std::runtime_error("HLT_L1MET_DTClusterNoMB1S50 branch doesn't exist");
        b_HLT_L1MET_DTClusterNoMB1S50_->GetEntry(index);
        loaded_HLT_L1MET_DTClusterNoMB1S50_ = true;
    }
    return HLT_L1MET_DTClusterNoMB1S50_;
}
const bool &Nano::HLT_L1MinimumBiasHF0OR() {
    if (!loaded_HLT_L1MinimumBiasHF0OR_) counter_uncached_HLT_L1MinimumBiasHF0OR_++;
    else counter_cached_HLT_L1MinimumBiasHF0OR_++;
    if (!loaded_HLT_L1MinimumBiasHF0OR_) {
        if (!b_HLT_L1MinimumBiasHF0OR_) throw std::runtime_error("HLT_L1MinimumBiasHF0OR branch doesn't exist");
        b_HLT_L1MinimumBiasHF0OR_->GetEntry(index);
        loaded_HLT_L1MinimumBiasHF0OR_ = true;
    }
    return HLT_L1MinimumBiasHF0OR_;
}
const bool &Nano::HLT_L1MinimumBiasHF_AND() {
    if (!loaded_HLT_L1MinimumBiasHF_AND_) counter_uncached_HLT_L1MinimumBiasHF_AND_++;
    else counter_cached_HLT_L1MinimumBiasHF_AND_++;
    if (!loaded_HLT_L1MinimumBiasHF_AND_) {
        if (!b_HLT_L1MinimumBiasHF_AND_) throw std::runtime_error("HLT_L1MinimumBiasHF_AND branch doesn't exist");
        b_HLT_L1MinimumBiasHF_AND_->GetEntry(index);
        loaded_HLT_L1MinimumBiasHF_AND_ = true;
    }
    return HLT_L1MinimumBiasHF_AND_;
}
const bool &Nano::HLT_L1MinimumBiasHF_OR() {
    if (!loaded_HLT_L1MinimumBiasHF_OR_) counter_uncached_HLT_L1MinimumBiasHF_OR_++;
    else counter_cached_HLT_L1MinimumBiasHF_OR_++;
    if (!loaded_HLT_L1MinimumBiasHF_OR_) {
        if (!b_HLT_L1MinimumBiasHF_OR_) throw std::runtime_error("HLT_L1MinimumBiasHF_OR branch doesn't exist");
        b_HLT_L1MinimumBiasHF_OR_->GetEntry(index);
        loaded_HLT_L1MinimumBiasHF_OR_ = true;
    }
    return HLT_L1MinimumBiasHF_OR_;
}
const bool &Nano::HLT_L1MinimumBiasHF_OR_part0() {
    if (!loaded_HLT_L1MinimumBiasHF_OR_part0_) counter_uncached_HLT_L1MinimumBiasHF_OR_part0_++;
    else counter_cached_HLT_L1MinimumBiasHF_OR_part0_++;
    if (!loaded_HLT_L1MinimumBiasHF_OR_part0_) {
        if (!b_HLT_L1MinimumBiasHF_OR_part0_) throw std::runtime_error("HLT_L1MinimumBiasHF_OR_part0 branch doesn't exist");
        b_HLT_L1MinimumBiasHF_OR_part0_->GetEntry(index);
        loaded_HLT_L1MinimumBiasHF_OR_part0_ = true;
    }
    return HLT_L1MinimumBiasHF_OR_part0_;
}
const bool &Nano::HLT_L1MinimumBiasHF_OR_part1() {
    if (!loaded_HLT_L1MinimumBiasHF_OR_part1_) counter_uncached_HLT_L1MinimumBiasHF_OR_part1_++;
    else counter_cached_HLT_L1MinimumBiasHF_OR_part1_++;
    if (!loaded_HLT_L1MinimumBiasHF_OR_part1_) {
        if (!b_HLT_L1MinimumBiasHF_OR_part1_) throw std::runtime_error("HLT_L1MinimumBiasHF_OR_part1 branch doesn't exist");
        b_HLT_L1MinimumBiasHF_OR_part1_->GetEntry(index);
        loaded_HLT_L1MinimumBiasHF_OR_part1_ = true;
    }
    return HLT_L1MinimumBiasHF_OR_part1_;
}
const bool &Nano::HLT_L1MinimumBiasHF_OR_part2() {
    if (!loaded_HLT_L1MinimumBiasHF_OR_part2_) counter_uncached_HLT_L1MinimumBiasHF_OR_part2_++;
    else counter_cached_HLT_L1MinimumBiasHF_OR_part2_++;
    if (!loaded_HLT_L1MinimumBiasHF_OR_part2_) {
        if (!b_HLT_L1MinimumBiasHF_OR_part2_) throw std::runtime_error("HLT_L1MinimumBiasHF_OR_part2 branch doesn't exist");
        b_HLT_L1MinimumBiasHF_OR_part2_->GetEntry(index);
        loaded_HLT_L1MinimumBiasHF_OR_part2_ = true;
    }
    return HLT_L1MinimumBiasHF_OR_part2_;
}
const bool &Nano::HLT_L1MinimumBiasHF_OR_part3() {
    if (!loaded_HLT_L1MinimumBiasHF_OR_part3_) counter_uncached_HLT_L1MinimumBiasHF_OR_part3_++;
    else counter_cached_HLT_L1MinimumBiasHF_OR_part3_++;
    if (!loaded_HLT_L1MinimumBiasHF_OR_part3_) {
        if (!b_HLT_L1MinimumBiasHF_OR_part3_) throw std::runtime_error("HLT_L1MinimumBiasHF_OR_part3 branch doesn't exist");
        b_HLT_L1MinimumBiasHF_OR_part3_->GetEntry(index);
        loaded_HLT_L1MinimumBiasHF_OR_part3_ = true;
    }
    return HLT_L1MinimumBiasHF_OR_part3_;
}
const bool &Nano::HLT_L1MinimumBiasHF_OR_part4() {
    if (!loaded_HLT_L1MinimumBiasHF_OR_part4_) counter_uncached_HLT_L1MinimumBiasHF_OR_part4_++;
    else counter_cached_HLT_L1MinimumBiasHF_OR_part4_++;
    if (!loaded_HLT_L1MinimumBiasHF_OR_part4_) {
        if (!b_HLT_L1MinimumBiasHF_OR_part4_) throw std::runtime_error("HLT_L1MinimumBiasHF_OR_part4 branch doesn't exist");
        b_HLT_L1MinimumBiasHF_OR_part4_->GetEntry(index);
        loaded_HLT_L1MinimumBiasHF_OR_part4_ = true;
    }
    return HLT_L1MinimumBiasHF_OR_part4_;
}
const bool &Nano::HLT_L1MinimumBiasHF_OR_part5() {
    if (!loaded_HLT_L1MinimumBiasHF_OR_part5_) counter_uncached_HLT_L1MinimumBiasHF_OR_part5_++;
    else counter_cached_HLT_L1MinimumBiasHF_OR_part5_++;
    if (!loaded_HLT_L1MinimumBiasHF_OR_part5_) {
        if (!b_HLT_L1MinimumBiasHF_OR_part5_) throw std::runtime_error("HLT_L1MinimumBiasHF_OR_part5 branch doesn't exist");
        b_HLT_L1MinimumBiasHF_OR_part5_->GetEntry(index);
        loaded_HLT_L1MinimumBiasHF_OR_part5_ = true;
    }
    return HLT_L1MinimumBiasHF_OR_part5_;
}
const bool &Nano::HLT_L1MinimumBiasHF_OR_part6() {
    if (!loaded_HLT_L1MinimumBiasHF_OR_part6_) counter_uncached_HLT_L1MinimumBiasHF_OR_part6_++;
    else counter_cached_HLT_L1MinimumBiasHF_OR_part6_++;
    if (!loaded_HLT_L1MinimumBiasHF_OR_part6_) {
        if (!b_HLT_L1MinimumBiasHF_OR_part6_) throw std::runtime_error("HLT_L1MinimumBiasHF_OR_part6 branch doesn't exist");
        b_HLT_L1MinimumBiasHF_OR_part6_->GetEntry(index);
        loaded_HLT_L1MinimumBiasHF_OR_part6_ = true;
    }
    return HLT_L1MinimumBiasHF_OR_part6_;
}
const bool &Nano::HLT_L1MinimumBiasHF_OR_part7() {
    if (!loaded_HLT_L1MinimumBiasHF_OR_part7_) counter_uncached_HLT_L1MinimumBiasHF_OR_part7_++;
    else counter_cached_HLT_L1MinimumBiasHF_OR_part7_++;
    if (!loaded_HLT_L1MinimumBiasHF_OR_part7_) {
        if (!b_HLT_L1MinimumBiasHF_OR_part7_) throw std::runtime_error("HLT_L1MinimumBiasHF_OR_part7 branch doesn't exist");
        b_HLT_L1MinimumBiasHF_OR_part7_->GetEntry(index);
        loaded_HLT_L1MinimumBiasHF_OR_part7_ = true;
    }
    return HLT_L1MinimumBiasHF_OR_part7_;
}
const bool &Nano::HLT_L1MinimumBiasHF_OR_part8() {
    if (!loaded_HLT_L1MinimumBiasHF_OR_part8_) counter_uncached_HLT_L1MinimumBiasHF_OR_part8_++;
    else counter_cached_HLT_L1MinimumBiasHF_OR_part8_++;
    if (!loaded_HLT_L1MinimumBiasHF_OR_part8_) {
        if (!b_HLT_L1MinimumBiasHF_OR_part8_) throw std::runtime_error("HLT_L1MinimumBiasHF_OR_part8 branch doesn't exist");
        b_HLT_L1MinimumBiasHF_OR_part8_->GetEntry(index);
        loaded_HLT_L1MinimumBiasHF_OR_part8_ = true;
    }
    return HLT_L1MinimumBiasHF_OR_part8_;
}
const bool &Nano::HLT_L1MinimumBiasHF_OR_part9() {
    if (!loaded_HLT_L1MinimumBiasHF_OR_part9_) counter_uncached_HLT_L1MinimumBiasHF_OR_part9_++;
    else counter_cached_HLT_L1MinimumBiasHF_OR_part9_++;
    if (!loaded_HLT_L1MinimumBiasHF_OR_part9_) {
        if (!b_HLT_L1MinimumBiasHF_OR_part9_) throw std::runtime_error("HLT_L1MinimumBiasHF_OR_part9 branch doesn't exist");
        b_HLT_L1MinimumBiasHF_OR_part9_->GetEntry(index);
        loaded_HLT_L1MinimumBiasHF_OR_part9_ = true;
    }
    return HLT_L1MinimumBiasHF_OR_part9_;
}
const bool &Nano::HLT_L1Mu6HT240() {
    if (!loaded_HLT_L1Mu6HT240_) counter_uncached_HLT_L1Mu6HT240_++;
    else counter_cached_HLT_L1Mu6HT240_++;
    if (!loaded_HLT_L1Mu6HT240_) {
        if (!b_HLT_L1Mu6HT240_) throw std::runtime_error("HLT_L1Mu6HT240 branch doesn't exist");
        b_HLT_L1Mu6HT240_->GetEntry(index);
        loaded_HLT_L1Mu6HT240_ = true;
    }
    return HLT_L1Mu6HT240_;
}
const bool &Nano::HLT_L1NotBptxOR() {
    if (!loaded_HLT_L1NotBptxOR_) counter_uncached_HLT_L1NotBptxOR_++;
    else counter_cached_HLT_L1NotBptxOR_++;
    if (!loaded_HLT_L1NotBptxOR_) {
        if (!b_HLT_L1NotBptxOR_) throw std::runtime_error("HLT_L1NotBptxOR branch doesn't exist");
        b_HLT_L1NotBptxOR_->GetEntry(index);
        loaded_HLT_L1NotBptxOR_ = true;
    }
    return HLT_L1NotBptxOR_;
}
const bool &Nano::HLT_L1SingleMu16() {
    if (!loaded_HLT_L1SingleMu16_) counter_uncached_HLT_L1SingleMu16_++;
    else counter_cached_HLT_L1SingleMu16_++;
    if (!loaded_HLT_L1SingleMu16_) {
        if (!b_HLT_L1SingleMu16_) throw std::runtime_error("HLT_L1SingleMu16 branch doesn't exist");
        b_HLT_L1SingleMu16_->GetEntry(index);
        loaded_HLT_L1SingleMu16_ = true;
    }
    return HLT_L1SingleMu16_;
}
const bool &Nano::HLT_L1SingleMu18() {
    if (!loaded_HLT_L1SingleMu18_) counter_uncached_HLT_L1SingleMu18_++;
    else counter_cached_HLT_L1SingleMu18_++;
    if (!loaded_HLT_L1SingleMu18_) {
        if (!b_HLT_L1SingleMu18_) throw std::runtime_error("HLT_L1SingleMu18 branch doesn't exist");
        b_HLT_L1SingleMu18_->GetEntry(index);
        loaded_HLT_L1SingleMu18_ = true;
    }
    return HLT_L1SingleMu18_;
}
const bool &Nano::HLT_L1SingleMu25() {
    if (!loaded_HLT_L1SingleMu25_) counter_uncached_HLT_L1SingleMu25_++;
    else counter_cached_HLT_L1SingleMu25_++;
    if (!loaded_HLT_L1SingleMu25_) {
        if (!b_HLT_L1SingleMu25_) throw std::runtime_error("HLT_L1SingleMu25 branch doesn't exist");
        b_HLT_L1SingleMu25_->GetEntry(index);
        loaded_HLT_L1SingleMu25_ = true;
    }
    return HLT_L1SingleMu25_;
}
const bool &Nano::HLT_L1SingleMuCosmics() {
    if (!loaded_HLT_L1SingleMuCosmics_) counter_uncached_HLT_L1SingleMuCosmics_++;
    else counter_cached_HLT_L1SingleMuCosmics_++;
    if (!loaded_HLT_L1SingleMuCosmics_) {
        if (!b_HLT_L1SingleMuCosmics_) throw std::runtime_error("HLT_L1SingleMuCosmics branch doesn't exist");
        b_HLT_L1SingleMuCosmics_->GetEntry(index);
        loaded_HLT_L1SingleMuCosmics_ = true;
    }
    return HLT_L1SingleMuCosmics_;
}
const bool &Nano::HLT_L1SingleMuOpen() {
    if (!loaded_HLT_L1SingleMuOpen_) counter_uncached_HLT_L1SingleMuOpen_++;
    else counter_cached_HLT_L1SingleMuOpen_++;
    if (!loaded_HLT_L1SingleMuOpen_) {
        if (!b_HLT_L1SingleMuOpen_) throw std::runtime_error("HLT_L1SingleMuOpen branch doesn't exist");
        b_HLT_L1SingleMuOpen_->GetEntry(index);
        loaded_HLT_L1SingleMuOpen_ = true;
    }
    return HLT_L1SingleMuOpen_;
}
const bool &Nano::HLT_L1SingleMuOpen_DT() {
    if (!loaded_HLT_L1SingleMuOpen_DT_) counter_uncached_HLT_L1SingleMuOpen_DT_++;
    else counter_cached_HLT_L1SingleMuOpen_DT_++;
    if (!loaded_HLT_L1SingleMuOpen_DT_) {
        if (!b_HLT_L1SingleMuOpen_DT_) throw std::runtime_error("HLT_L1SingleMuOpen_DT branch doesn't exist");
        b_HLT_L1SingleMuOpen_DT_->GetEntry(index);
        loaded_HLT_L1SingleMuOpen_DT_ = true;
    }
    return HLT_L1SingleMuOpen_DT_;
}
const bool &Nano::HLT_L1UnpairedBunchBptxMinus() {
    if (!loaded_HLT_L1UnpairedBunchBptxMinus_) counter_uncached_HLT_L1UnpairedBunchBptxMinus_++;
    else counter_cached_HLT_L1UnpairedBunchBptxMinus_++;
    if (!loaded_HLT_L1UnpairedBunchBptxMinus_) {
        if (!b_HLT_L1UnpairedBunchBptxMinus_) throw std::runtime_error("HLT_L1UnpairedBunchBptxMinus branch doesn't exist");
        b_HLT_L1UnpairedBunchBptxMinus_->GetEntry(index);
        loaded_HLT_L1UnpairedBunchBptxMinus_ = true;
    }
    return HLT_L1UnpairedBunchBptxMinus_;
}
const bool &Nano::HLT_L1UnpairedBunchBptxPlus() {
    if (!loaded_HLT_L1UnpairedBunchBptxPlus_) counter_uncached_HLT_L1UnpairedBunchBptxPlus_++;
    else counter_cached_HLT_L1UnpairedBunchBptxPlus_++;
    if (!loaded_HLT_L1UnpairedBunchBptxPlus_) {
        if (!b_HLT_L1UnpairedBunchBptxPlus_) throw std::runtime_error("HLT_L1UnpairedBunchBptxPlus branch doesn't exist");
        b_HLT_L1UnpairedBunchBptxPlus_->GetEntry(index);
        loaded_HLT_L1UnpairedBunchBptxPlus_ = true;
    }
    return HLT_L1UnpairedBunchBptxPlus_;
}
const bool &Nano::HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142() {
    if (!loaded_HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_) counter_uncached_HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_++;
    else counter_cached_HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_++;
    if (!loaded_HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_) {
        if (!b_HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_) throw std::runtime_error("HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142 branch doesn't exist");
        b_HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_->GetEntry(index);
        loaded_HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_ = true;
    }
    return HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_;
}
const bool &Nano::HLT_L1_DoubleJet30_Mass_Min400_Mu10() {
    if (!loaded_HLT_L1_DoubleJet30_Mass_Min400_Mu10_) counter_uncached_HLT_L1_DoubleJet30_Mass_Min400_Mu10_++;
    else counter_cached_HLT_L1_DoubleJet30_Mass_Min400_Mu10_++;
    if (!loaded_HLT_L1_DoubleJet30_Mass_Min400_Mu10_) {
        if (!b_HLT_L1_DoubleJet30_Mass_Min400_Mu10_) throw std::runtime_error("HLT_L1_DoubleJet30_Mass_Min400_Mu10 branch doesn't exist");
        b_HLT_L1_DoubleJet30_Mass_Min400_Mu10_->GetEntry(index);
        loaded_HLT_L1_DoubleJet30_Mass_Min400_Mu10_ = true;
    }
    return HLT_L1_DoubleJet30_Mass_Min400_Mu10_;
}
const bool &Nano::HLT_L1_TripleJet_VBF() {
    if (!loaded_HLT_L1_TripleJet_VBF_) counter_uncached_HLT_L1_TripleJet_VBF_++;
    else counter_cached_HLT_L1_TripleJet_VBF_++;
    if (!loaded_HLT_L1_TripleJet_VBF_) {
        if (!b_HLT_L1_TripleJet_VBF_) throw std::runtime_error("HLT_L1_TripleJet_VBF branch doesn't exist");
        b_HLT_L1_TripleJet_VBF_->GetEntry(index);
        loaded_HLT_L1_TripleJet_VBF_ = true;
    }
    return HLT_L1_TripleJet_VBF_;
}
const bool &Nano::HLT_L2DoubleMu23_NoVertex() {
    if (!loaded_HLT_L2DoubleMu23_NoVertex_) counter_uncached_HLT_L2DoubleMu23_NoVertex_++;
    else counter_cached_HLT_L2DoubleMu23_NoVertex_++;
    if (!loaded_HLT_L2DoubleMu23_NoVertex_) {
        if (!b_HLT_L2DoubleMu23_NoVertex_) throw std::runtime_error("HLT_L2DoubleMu23_NoVertex branch doesn't exist");
        b_HLT_L2DoubleMu23_NoVertex_->GetEntry(index);
        loaded_HLT_L2DoubleMu23_NoVertex_ = true;
    }
    return HLT_L2DoubleMu23_NoVertex_;
}
const bool &Nano::HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10() {
    if (!loaded_HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10_) counter_uncached_HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10_++;
    else counter_cached_HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10_++;
    if (!loaded_HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10_) {
        if (!b_HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10_) throw std::runtime_error("HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10 branch doesn't exist");
        b_HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10_->GetEntry(index);
        loaded_HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10_ = true;
    }
    return HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10_;
}
const bool &Nano::HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10() {
    if (!loaded_HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10_) counter_uncached_HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10_++;
    else counter_cached_HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10_++;
    if (!loaded_HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10_) {
        if (!b_HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10_) throw std::runtime_error("HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10 branch doesn't exist");
        b_HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10_->GetEntry(index);
        loaded_HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10_ = true;
    }
    return HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10_;
}
const bool &Nano::HLT_L2Mu10() {
    if (!loaded_HLT_L2Mu10_) counter_uncached_HLT_L2Mu10_++;
    else counter_cached_HLT_L2Mu10_++;
    if (!loaded_HLT_L2Mu10_) {
        if (!b_HLT_L2Mu10_) throw std::runtime_error("HLT_L2Mu10 branch doesn't exist");
        b_HLT_L2Mu10_->GetEntry(index);
        loaded_HLT_L2Mu10_ = true;
    }
    return HLT_L2Mu10_;
}
const bool &Nano::HLT_L2Mu10NoVtx_2Cha() {
    if (!loaded_HLT_L2Mu10NoVtx_2Cha_) counter_uncached_HLT_L2Mu10NoVtx_2Cha_++;
    else counter_cached_HLT_L2Mu10NoVtx_2Cha_++;
    if (!loaded_HLT_L2Mu10NoVtx_2Cha_) {
        if (!b_HLT_L2Mu10NoVtx_2Cha_) throw std::runtime_error("HLT_L2Mu10NoVtx_2Cha branch doesn't exist");
        b_HLT_L2Mu10NoVtx_2Cha_->GetEntry(index);
        loaded_HLT_L2Mu10NoVtx_2Cha_ = true;
    }
    return HLT_L2Mu10NoVtx_2Cha_;
}
const bool &Nano::HLT_L2Mu10NoVtx_2Cha_CosmicSeed() {
    if (!loaded_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_) counter_uncached_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_++;
    else counter_cached_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_++;
    if (!loaded_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_) {
        if (!b_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_) throw std::runtime_error("HLT_L2Mu10NoVtx_2Cha_CosmicSeed branch doesn't exist");
        b_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_->GetEntry(index);
        loaded_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_ = true;
    }
    return HLT_L2Mu10NoVtx_2Cha_CosmicSeed_;
}
const bool &Nano::HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm() {
    if (!loaded_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_) counter_uncached_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_++;
    else counter_cached_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_++;
    if (!loaded_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_) {
        if (!b_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_) throw std::runtime_error("HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm branch doesn't exist");
        b_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_->GetEntry(index);
        loaded_HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_ = true;
    }
    return HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_;
}
const bool &Nano::HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm() {
    if (!loaded_HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_) counter_uncached_HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_++;
    else counter_cached_HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_++;
    if (!loaded_HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_) {
        if (!b_HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_) throw std::runtime_error("HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm branch doesn't exist");
        b_HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_->GetEntry(index);
        loaded_HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_ = true;
    }
    return HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_;
}
const bool &Nano::HLT_L2Mu10_NoVertex_NoBPTX() {
    if (!loaded_HLT_L2Mu10_NoVertex_NoBPTX_) counter_uncached_HLT_L2Mu10_NoVertex_NoBPTX_++;
    else counter_cached_HLT_L2Mu10_NoVertex_NoBPTX_++;
    if (!loaded_HLT_L2Mu10_NoVertex_NoBPTX_) {
        if (!b_HLT_L2Mu10_NoVertex_NoBPTX_) throw std::runtime_error("HLT_L2Mu10_NoVertex_NoBPTX branch doesn't exist");
        b_HLT_L2Mu10_NoVertex_NoBPTX_->GetEntry(index);
        loaded_HLT_L2Mu10_NoVertex_NoBPTX_ = true;
    }
    return HLT_L2Mu10_NoVertex_NoBPTX_;
}
const bool &Nano::HLT_L2Mu10_NoVertex_NoBPTX3BX() {
    if (!loaded_HLT_L2Mu10_NoVertex_NoBPTX3BX_) counter_uncached_HLT_L2Mu10_NoVertex_NoBPTX3BX_++;
    else counter_cached_HLT_L2Mu10_NoVertex_NoBPTX3BX_++;
    if (!loaded_HLT_L2Mu10_NoVertex_NoBPTX3BX_) {
        if (!b_HLT_L2Mu10_NoVertex_NoBPTX3BX_) throw std::runtime_error("HLT_L2Mu10_NoVertex_NoBPTX3BX branch doesn't exist");
        b_HLT_L2Mu10_NoVertex_NoBPTX3BX_->GetEntry(index);
        loaded_HLT_L2Mu10_NoVertex_NoBPTX3BX_ = true;
    }
    return HLT_L2Mu10_NoVertex_NoBPTX3BX_;
}
const bool &Nano::HLT_L2Mu23NoVtx_2Cha() {
    if (!loaded_HLT_L2Mu23NoVtx_2Cha_) counter_uncached_HLT_L2Mu23NoVtx_2Cha_++;
    else counter_cached_HLT_L2Mu23NoVtx_2Cha_++;
    if (!loaded_HLT_L2Mu23NoVtx_2Cha_) {
        if (!b_HLT_L2Mu23NoVtx_2Cha_) throw std::runtime_error("HLT_L2Mu23NoVtx_2Cha branch doesn't exist");
        b_HLT_L2Mu23NoVtx_2Cha_->GetEntry(index);
        loaded_HLT_L2Mu23NoVtx_2Cha_ = true;
    }
    return HLT_L2Mu23NoVtx_2Cha_;
}
const bool &Nano::HLT_L2Mu23NoVtx_2Cha_CosmicSeed() {
    if (!loaded_HLT_L2Mu23NoVtx_2Cha_CosmicSeed_) counter_uncached_HLT_L2Mu23NoVtx_2Cha_CosmicSeed_++;
    else counter_cached_HLT_L2Mu23NoVtx_2Cha_CosmicSeed_++;
    if (!loaded_HLT_L2Mu23NoVtx_2Cha_CosmicSeed_) {
        if (!b_HLT_L2Mu23NoVtx_2Cha_CosmicSeed_) throw std::runtime_error("HLT_L2Mu23NoVtx_2Cha_CosmicSeed branch doesn't exist");
        b_HLT_L2Mu23NoVtx_2Cha_CosmicSeed_->GetEntry(index);
        loaded_HLT_L2Mu23NoVtx_2Cha_CosmicSeed_ = true;
    }
    return HLT_L2Mu23NoVtx_2Cha_CosmicSeed_;
}
const bool &Nano::HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX() {
    if (!loaded_HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX_) counter_uncached_HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX_++;
    else counter_cached_HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX_++;
    if (!loaded_HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX_) {
        if (!b_HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX_) throw std::runtime_error("HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX branch doesn't exist");
        b_HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX_->GetEntry(index);
        loaded_HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX_ = true;
    }
    return HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX_;
}
const bool &Nano::HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX() {
    if (!loaded_HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_) counter_uncached_HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_++;
    else counter_cached_HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_++;
    if (!loaded_HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_) {
        if (!b_HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_) throw std::runtime_error("HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX branch doesn't exist");
        b_HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_->GetEntry(index);
        loaded_HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_ = true;
    }
    return HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_;
}
const bool &Nano::HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX() {
    if (!loaded_HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_) counter_uncached_HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_++;
    else counter_cached_HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_++;
    if (!loaded_HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_) {
        if (!b_HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_) throw std::runtime_error("HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX branch doesn't exist");
        b_HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_->GetEntry(index);
        loaded_HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_ = true;
    }
    return HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_;
}
const bool &Nano::HLT_L2Mu50() {
    if (!loaded_HLT_L2Mu50_) counter_uncached_HLT_L2Mu50_++;
    else counter_cached_HLT_L2Mu50_++;
    if (!loaded_HLT_L2Mu50_) {
        if (!b_HLT_L2Mu50_) throw std::runtime_error("HLT_L2Mu50 branch doesn't exist");
        b_HLT_L2Mu50_->GetEntry(index);
        loaded_HLT_L2Mu50_ = true;
    }
    return HLT_L2Mu50_;
}
const bool &Nano::HLT_L3Mu10NoVtx() {
    if (!loaded_HLT_L3Mu10NoVtx_) counter_uncached_HLT_L3Mu10NoVtx_++;
    else counter_cached_HLT_L3Mu10NoVtx_++;
    if (!loaded_HLT_L3Mu10NoVtx_) {
        if (!b_HLT_L3Mu10NoVtx_) throw std::runtime_error("HLT_L3Mu10NoVtx branch doesn't exist");
        b_HLT_L3Mu10NoVtx_->GetEntry(index);
        loaded_HLT_L3Mu10NoVtx_ = true;
    }
    return HLT_L3Mu10NoVtx_;
}
const bool &Nano::HLT_L3Mu10NoVtx_DxyMin0p01cm() {
    if (!loaded_HLT_L3Mu10NoVtx_DxyMin0p01cm_) counter_uncached_HLT_L3Mu10NoVtx_DxyMin0p01cm_++;
    else counter_cached_HLT_L3Mu10NoVtx_DxyMin0p01cm_++;
    if (!loaded_HLT_L3Mu10NoVtx_DxyMin0p01cm_) {
        if (!b_HLT_L3Mu10NoVtx_DxyMin0p01cm_) throw std::runtime_error("HLT_L3Mu10NoVtx_DxyMin0p01cm branch doesn't exist");
        b_HLT_L3Mu10NoVtx_DxyMin0p01cm_->GetEntry(index);
        loaded_HLT_L3Mu10NoVtx_DxyMin0p01cm_ = true;
    }
    return HLT_L3Mu10NoVtx_DxyMin0p01cm_;
}
const bool &Nano::HLT_L3dTksMu10_NoVtx_DxyMin0p01cm() {
    if (!loaded_HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_) counter_uncached_HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_++;
    else counter_cached_HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_++;
    if (!loaded_HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_) {
        if (!b_HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_) throw std::runtime_error("HLT_L3dTksMu10_NoVtx_DxyMin0p01cm branch doesn't exist");
        b_HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_->GetEntry(index);
        loaded_HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_ = true;
    }
    return HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_;
}
const bool &Nano::HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1() {
    if (!loaded_HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_) counter_uncached_HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_++;
    else counter_cached_HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_++;
    if (!loaded_HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_) {
        if (!b_HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_) throw std::runtime_error("HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1 branch doesn't exist");
        b_HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_->GetEntry(index);
        loaded_HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_ = true;
    }
    return HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_;
}
const bool &Nano::HLT_LooseIsoPFTau50_Trk30_eta2p1() {
    if (!loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_) counter_uncached_HLT_LooseIsoPFTau50_Trk30_eta2p1_++;
    else counter_cached_HLT_LooseIsoPFTau50_Trk30_eta2p1_++;
    if (!loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_) {
        if (!b_HLT_LooseIsoPFTau50_Trk30_eta2p1_) throw std::runtime_error("HLT_LooseIsoPFTau50_Trk30_eta2p1 branch doesn't exist");
        b_HLT_LooseIsoPFTau50_Trk30_eta2p1_->GetEntry(index);
        loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_ = true;
    }
    return HLT_LooseIsoPFTau50_Trk30_eta2p1_;
}
const bool &Nano::HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110() {
    if (!loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110_) counter_uncached_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110_++;
    else counter_cached_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110_++;
    if (!loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110_) {
        if (!b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110_) throw std::runtime_error("HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110 branch doesn't exist");
        b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110_->GetEntry(index);
        loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110_ = true;
    }
    return HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110_;
}
const bool &Nano::HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120() {
    if (!loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120_) counter_uncached_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120_++;
    else counter_cached_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120_++;
    if (!loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120_) {
        if (!b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120_) throw std::runtime_error("HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120 branch doesn't exist");
        b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120_->GetEntry(index);
        loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120_ = true;
    }
    return HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120_;
}
const bool &Nano::HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80() {
    if (!loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80_) counter_uncached_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80_++;
    else counter_cached_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80_++;
    if (!loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80_) {
        if (!b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80_) throw std::runtime_error("HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80 branch doesn't exist");
        b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80_->GetEntry(index);
        loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80_ = true;
    }
    return HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80_;
}
const bool &Nano::HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90() {
    if (!loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90_) counter_uncached_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90_++;
    else counter_cached_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90_++;
    if (!loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90_) {
        if (!b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90_) throw std::runtime_error("HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90 branch doesn't exist");
        b_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90_->GetEntry(index);
        loaded_HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90_ = true;
    }
    return HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90_;
}
const bool &Nano::HLT_MET100() {
    if (!loaded_HLT_MET100_) counter_uncached_HLT_MET100_++;
    else counter_cached_HLT_MET100_++;
    if (!loaded_HLT_MET100_) {
        if (!b_HLT_MET100_) throw std::runtime_error("HLT_MET100 branch doesn't exist");
        b_HLT_MET100_->GetEntry(index);
        loaded_HLT_MET100_ = true;
    }
    return HLT_MET100_;
}
const bool &Nano::HLT_MET105_IsoTrk50() {
    if (!loaded_HLT_MET105_IsoTrk50_) counter_uncached_HLT_MET105_IsoTrk50_++;
    else counter_cached_HLT_MET105_IsoTrk50_++;
    if (!loaded_HLT_MET105_IsoTrk50_) {
        if (!b_HLT_MET105_IsoTrk50_) throw std::runtime_error("HLT_MET105_IsoTrk50 branch doesn't exist");
        b_HLT_MET105_IsoTrk50_->GetEntry(index);
        loaded_HLT_MET105_IsoTrk50_ = true;
    }
    return HLT_MET105_IsoTrk50_;
}
const bool &Nano::HLT_MET120_IsoTrk50() {
    if (!loaded_HLT_MET120_IsoTrk50_) counter_uncached_HLT_MET120_IsoTrk50_++;
    else counter_cached_HLT_MET120_IsoTrk50_++;
    if (!loaded_HLT_MET120_IsoTrk50_) {
        if (!b_HLT_MET120_IsoTrk50_) throw std::runtime_error("HLT_MET120_IsoTrk50 branch doesn't exist");
        b_HLT_MET120_IsoTrk50_->GetEntry(index);
        loaded_HLT_MET120_IsoTrk50_ = true;
    }
    return HLT_MET120_IsoTrk50_;
}
const bool &Nano::HLT_MET150() {
    if (!loaded_HLT_MET150_) counter_uncached_HLT_MET150_++;
    else counter_cached_HLT_MET150_++;
    if (!loaded_HLT_MET150_) {
        if (!b_HLT_MET150_) throw std::runtime_error("HLT_MET150 branch doesn't exist");
        b_HLT_MET150_->GetEntry(index);
        loaded_HLT_MET150_ = true;
    }
    return HLT_MET150_;
}
const bool &Nano::HLT_MET200() {
    if (!loaded_HLT_MET200_) counter_uncached_HLT_MET200_++;
    else counter_cached_HLT_MET200_++;
    if (!loaded_HLT_MET200_) {
        if (!b_HLT_MET200_) throw std::runtime_error("HLT_MET200 branch doesn't exist");
        b_HLT_MET200_->GetEntry(index);
        loaded_HLT_MET200_ = true;
    }
    return HLT_MET200_;
}
const bool &Nano::HLT_MET250() {
    if (!loaded_HLT_MET250_) counter_uncached_HLT_MET250_++;
    else counter_cached_HLT_MET250_++;
    if (!loaded_HLT_MET250_) {
        if (!b_HLT_MET250_) throw std::runtime_error("HLT_MET250 branch doesn't exist");
        b_HLT_MET250_->GetEntry(index);
        loaded_HLT_MET250_ = true;
    }
    return HLT_MET250_;
}
const bool &Nano::HLT_MET300() {
    if (!loaded_HLT_MET300_) counter_uncached_HLT_MET300_++;
    else counter_cached_HLT_MET300_++;
    if (!loaded_HLT_MET300_) {
        if (!b_HLT_MET300_) throw std::runtime_error("HLT_MET300 branch doesn't exist");
        b_HLT_MET300_->GetEntry(index);
        loaded_HLT_MET300_ = true;
    }
    return HLT_MET300_;
}
const bool &Nano::HLT_MET600() {
    if (!loaded_HLT_MET600_) counter_uncached_HLT_MET600_++;
    else counter_cached_HLT_MET600_++;
    if (!loaded_HLT_MET600_) {
        if (!b_HLT_MET600_) throw std::runtime_error("HLT_MET600 branch doesn't exist");
        b_HLT_MET600_->GetEntry(index);
        loaded_HLT_MET600_ = true;
    }
    return HLT_MET600_;
}
const bool &Nano::HLT_MET60_IsoTrk35_Loose() {
    if (!loaded_HLT_MET60_IsoTrk35_Loose_) counter_uncached_HLT_MET60_IsoTrk35_Loose_++;
    else counter_cached_HLT_MET60_IsoTrk35_Loose_++;
    if (!loaded_HLT_MET60_IsoTrk35_Loose_) {
        if (!b_HLT_MET60_IsoTrk35_Loose_) throw std::runtime_error("HLT_MET60_IsoTrk35_Loose branch doesn't exist");
        b_HLT_MET60_IsoTrk35_Loose_->GetEntry(index);
        loaded_HLT_MET60_IsoTrk35_Loose_ = true;
    }
    return HLT_MET60_IsoTrk35_Loose_;
}
const bool &Nano::HLT_MET700() {
    if (!loaded_HLT_MET700_) counter_uncached_HLT_MET700_++;
    else counter_cached_HLT_MET700_++;
    if (!loaded_HLT_MET700_) {
        if (!b_HLT_MET700_) throw std::runtime_error("HLT_MET700 branch doesn't exist");
        b_HLT_MET700_->GetEntry(index);
        loaded_HLT_MET700_ = true;
    }
    return HLT_MET700_;
}
const bool &Nano::HLT_MET75_IsoTrk50() {
    if (!loaded_HLT_MET75_IsoTrk50_) counter_uncached_HLT_MET75_IsoTrk50_++;
    else counter_cached_HLT_MET75_IsoTrk50_++;
    if (!loaded_HLT_MET75_IsoTrk50_) {
        if (!b_HLT_MET75_IsoTrk50_) throw std::runtime_error("HLT_MET75_IsoTrk50 branch doesn't exist");
        b_HLT_MET75_IsoTrk50_->GetEntry(index);
        loaded_HLT_MET75_IsoTrk50_ = true;
    }
    return HLT_MET75_IsoTrk50_;
}
const bool &Nano::HLT_MET90_IsoTrk50() {
    if (!loaded_HLT_MET90_IsoTrk50_) counter_uncached_HLT_MET90_IsoTrk50_++;
    else counter_cached_HLT_MET90_IsoTrk50_++;
    if (!loaded_HLT_MET90_IsoTrk50_) {
        if (!b_HLT_MET90_IsoTrk50_) throw std::runtime_error("HLT_MET90_IsoTrk50 branch doesn't exist");
        b_HLT_MET90_IsoTrk50_->GetEntry(index);
        loaded_HLT_MET90_IsoTrk50_ = true;
    }
    return HLT_MET90_IsoTrk50_;
}
const bool &Nano::HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr() {
    if (!loaded_HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr_) counter_uncached_HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr_++;
    else counter_cached_HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr_++;
    if (!loaded_HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr_) {
        if (!b_HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr_) throw std::runtime_error("HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr branch doesn't exist");
        b_HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr_->GetEntry(index);
        loaded_HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr_ = true;
    }
    return HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr_;
}
const bool &Nano::HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1() {
    if (!loaded_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_) counter_uncached_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_++;
    else counter_cached_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_++;
    if (!loaded_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_) {
        if (!b_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_) throw std::runtime_error("HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1 branch doesn't exist");
        b_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_->GetEntry(index);
        loaded_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_ = true;
    }
    return HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_;
}
const bool &Nano::HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr() {
    if (!loaded_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_) counter_uncached_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_++;
    else counter_cached_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_++;
    if (!loaded_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_) {
        if (!b_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_) throw std::runtime_error("HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr branch doesn't exist");
        b_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_->GetEntry(index);
        loaded_HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_ = true;
    }
    return HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_;
}
const bool &Nano::HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1() {
    if (!loaded_HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_) counter_uncached_HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_++;
    else counter_cached_HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_++;
    if (!loaded_HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_) {
        if (!b_HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_) throw std::runtime_error("HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1 branch doesn't exist");
        b_HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_->GetEntry(index);
        loaded_HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_ = true;
    }
    return HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_;
}
const bool &Nano::HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1() {
    if (!loaded_HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_) counter_uncached_HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_++;
    else counter_cached_HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_++;
    if (!loaded_HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_) {
        if (!b_HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_) throw std::runtime_error("HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1 branch doesn't exist");
        b_HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_->GetEntry(index);
        loaded_HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_ = true;
    }
    return HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_;
}
const bool &Nano::HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr() {
    if (!loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_) counter_uncached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_++;
    else counter_cached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_++;
    if (!loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_) {
        if (!b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_) throw std::runtime_error("HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr branch doesn't exist");
        b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_->GetEntry(index);
        loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_ = true;
    }
    return HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_;
}
const bool &Nano::HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100() {
    if (!loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_) counter_uncached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_++;
    else counter_cached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_++;
    if (!loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_) {
        if (!b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_) throw std::runtime_error("HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100 branch doesn't exist");
        b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_->GetEntry(index);
        loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_ = true;
    }
    return HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_;
}
const bool &Nano::HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110() {
    if (!loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_) counter_uncached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_++;
    else counter_cached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_++;
    if (!loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_) {
        if (!b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_) throw std::runtime_error("HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110 branch doesn't exist");
        b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_->GetEntry(index);
        loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_ = true;
    }
    return HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_;
}
const bool &Nano::HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120() {
    if (!loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_) counter_uncached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_++;
    else counter_cached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_++;
    if (!loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_) {
        if (!b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_) throw std::runtime_error("HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120 branch doesn't exist");
        b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_->GetEntry(index);
        loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_ = true;
    }
    return HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_;
}
const bool &Nano::HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130() {
    if (!loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_) counter_uncached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_++;
    else counter_cached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_++;
    if (!loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_) {
        if (!b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_) throw std::runtime_error("HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130 branch doesn't exist");
        b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_->GetEntry(index);
        loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_ = true;
    }
    return HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_;
}
const bool &Nano::HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140() {
    if (!loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_) counter_uncached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_++;
    else counter_cached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_++;
    if (!loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_) {
        if (!b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_) throw std::runtime_error("HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140 branch doesn't exist");
        b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_->GetEntry(index);
        loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_ = true;
    }
    return HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_;
}
const bool &Nano::HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90() {
    if (!loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_) counter_uncached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_++;
    else counter_cached_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_++;
    if (!loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_) {
        if (!b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_) throw std::runtime_error("HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90 branch doesn't exist");
        b_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_->GetEntry(index);
        loaded_HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_ = true;
    }
    return HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_;
}
const bool &Nano::HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight() {
    if (!loaded_HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight_) counter_uncached_HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight_++;
    else counter_cached_HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight_++;
    if (!loaded_HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight_) {
        if (!b_HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight_) throw std::runtime_error("HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight branch doesn't exist");
        b_HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight_->GetEntry(index);
        loaded_HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight_ = true;
    }
    return HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight_;
}
const bool &Nano::HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight() {
    if (!loaded_HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_) counter_uncached_HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_++;
    else counter_cached_HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_++;
    if (!loaded_HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_) {
        if (!b_HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_) throw std::runtime_error("HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight branch doesn't exist");
        b_HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_->GetEntry(index);
        loaded_HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_ = true;
    }
    return HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_;
}
const bool &Nano::HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight() {
    if (!loaded_HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_) counter_uncached_HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_++;
    else counter_cached_HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_++;
    if (!loaded_HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_) {
        if (!b_HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_) throw std::runtime_error("HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight branch doesn't exist");
        b_HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_->GetEntry(index);
        loaded_HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_ = true;
    }
    return HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_;
}
const bool &Nano::HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight() {
    if (!loaded_HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_) counter_uncached_HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_++;
    else counter_cached_HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_++;
    if (!loaded_HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_) {
        if (!b_HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_) throw std::runtime_error("HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight branch doesn't exist");
        b_HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_->GetEntry(index);
        loaded_HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_ = true;
    }
    return HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_;
}
const bool &Nano::HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight() {
    if (!loaded_HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_) counter_uncached_HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_++;
    else counter_cached_HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_++;
    if (!loaded_HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_) {
        if (!b_HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_) throw std::runtime_error("HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight branch doesn't exist");
        b_HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_->GetEntry(index);
        loaded_HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_ = true;
    }
    return HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_;
}
const bool &Nano::HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight() {
    if (!loaded_HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight_) counter_uncached_HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight_++;
    else counter_cached_HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight_++;
    if (!loaded_HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight_) {
        if (!b_HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight_) throw std::runtime_error("HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight branch doesn't exist");
        b_HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight_->GetEntry(index);
        loaded_HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight_ = true;
    }
    return HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight_;
}
const bool &Nano::HLT_Mu0_L1DoubleMu() {
    if (!loaded_HLT_Mu0_L1DoubleMu_) counter_uncached_HLT_Mu0_L1DoubleMu_++;
    else counter_cached_HLT_Mu0_L1DoubleMu_++;
    if (!loaded_HLT_Mu0_L1DoubleMu_) {
        if (!b_HLT_Mu0_L1DoubleMu_) throw std::runtime_error("HLT_Mu0_L1DoubleMu branch doesn't exist");
        b_HLT_Mu0_L1DoubleMu_->GetEntry(index);
        loaded_HLT_Mu0_L1DoubleMu_ = true;
    }
    return HLT_Mu0_L1DoubleMu_;
}
const bool &Nano::HLT_Mu10_CentralPFJet30_BTagCSV_p13() {
    if (!loaded_HLT_Mu10_CentralPFJet30_BTagCSV_p13_) counter_uncached_HLT_Mu10_CentralPFJet30_BTagCSV_p13_++;
    else counter_cached_HLT_Mu10_CentralPFJet30_BTagCSV_p13_++;
    if (!loaded_HLT_Mu10_CentralPFJet30_BTagCSV_p13_) {
        if (!b_HLT_Mu10_CentralPFJet30_BTagCSV_p13_) throw std::runtime_error("HLT_Mu10_CentralPFJet30_BTagCSV_p13 branch doesn't exist");
        b_HLT_Mu10_CentralPFJet30_BTagCSV_p13_->GetEntry(index);
        loaded_HLT_Mu10_CentralPFJet30_BTagCSV_p13_ = true;
    }
    return HLT_Mu10_CentralPFJet30_BTagCSV_p13_;
}
const bool &Nano::HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60() {
    if (!loaded_HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_) counter_uncached_HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_++;
    else counter_cached_HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_++;
    if (!loaded_HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_) {
        if (!b_HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_) throw std::runtime_error("HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60 branch doesn't exist");
        b_HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_->GetEntry(index);
        loaded_HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_ = true;
    }
    return HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_;
}
const bool &Nano::HLT_Mu10p5_IP3p5_part0() {
    if (!loaded_HLT_Mu10p5_IP3p5_part0_) counter_uncached_HLT_Mu10p5_IP3p5_part0_++;
    else counter_cached_HLT_Mu10p5_IP3p5_part0_++;
    if (!loaded_HLT_Mu10p5_IP3p5_part0_) {
        if (!b_HLT_Mu10p5_IP3p5_part0_) throw std::runtime_error("HLT_Mu10p5_IP3p5_part0 branch doesn't exist");
        b_HLT_Mu10p5_IP3p5_part0_->GetEntry(index);
        loaded_HLT_Mu10p5_IP3p5_part0_ = true;
    }
    return HLT_Mu10p5_IP3p5_part0_;
}
const bool &Nano::HLT_Mu10p5_IP3p5_part1() {
    if (!loaded_HLT_Mu10p5_IP3p5_part1_) counter_uncached_HLT_Mu10p5_IP3p5_part1_++;
    else counter_cached_HLT_Mu10p5_IP3p5_part1_++;
    if (!loaded_HLT_Mu10p5_IP3p5_part1_) {
        if (!b_HLT_Mu10p5_IP3p5_part1_) throw std::runtime_error("HLT_Mu10p5_IP3p5_part1 branch doesn't exist");
        b_HLT_Mu10p5_IP3p5_part1_->GetEntry(index);
        loaded_HLT_Mu10p5_IP3p5_part1_ = true;
    }
    return HLT_Mu10p5_IP3p5_part1_;
}
const bool &Nano::HLT_Mu10p5_IP3p5_part2() {
    if (!loaded_HLT_Mu10p5_IP3p5_part2_) counter_uncached_HLT_Mu10p5_IP3p5_part2_++;
    else counter_cached_HLT_Mu10p5_IP3p5_part2_++;
    if (!loaded_HLT_Mu10p5_IP3p5_part2_) {
        if (!b_HLT_Mu10p5_IP3p5_part2_) throw std::runtime_error("HLT_Mu10p5_IP3p5_part2 branch doesn't exist");
        b_HLT_Mu10p5_IP3p5_part2_->GetEntry(index);
        loaded_HLT_Mu10p5_IP3p5_part2_ = true;
    }
    return HLT_Mu10p5_IP3p5_part2_;
}
const bool &Nano::HLT_Mu10p5_IP3p5_part3() {
    if (!loaded_HLT_Mu10p5_IP3p5_part3_) counter_uncached_HLT_Mu10p5_IP3p5_part3_++;
    else counter_cached_HLT_Mu10p5_IP3p5_part3_++;
    if (!loaded_HLT_Mu10p5_IP3p5_part3_) {
        if (!b_HLT_Mu10p5_IP3p5_part3_) throw std::runtime_error("HLT_Mu10p5_IP3p5_part3 branch doesn't exist");
        b_HLT_Mu10p5_IP3p5_part3_->GetEntry(index);
        loaded_HLT_Mu10p5_IP3p5_part3_ = true;
    }
    return HLT_Mu10p5_IP3p5_part3_;
}
const bool &Nano::HLT_Mu10p5_IP3p5_part4() {
    if (!loaded_HLT_Mu10p5_IP3p5_part4_) counter_uncached_HLT_Mu10p5_IP3p5_part4_++;
    else counter_cached_HLT_Mu10p5_IP3p5_part4_++;
    if (!loaded_HLT_Mu10p5_IP3p5_part4_) {
        if (!b_HLT_Mu10p5_IP3p5_part4_) throw std::runtime_error("HLT_Mu10p5_IP3p5_part4 branch doesn't exist");
        b_HLT_Mu10p5_IP3p5_part4_->GetEntry(index);
        loaded_HLT_Mu10p5_IP3p5_part4_ = true;
    }
    return HLT_Mu10p5_IP3p5_part4_;
}
const bool &Nano::HLT_Mu10p5_IP3p5_part5() {
    if (!loaded_HLT_Mu10p5_IP3p5_part5_) counter_uncached_HLT_Mu10p5_IP3p5_part5_++;
    else counter_cached_HLT_Mu10p5_IP3p5_part5_++;
    if (!loaded_HLT_Mu10p5_IP3p5_part5_) {
        if (!b_HLT_Mu10p5_IP3p5_part5_) throw std::runtime_error("HLT_Mu10p5_IP3p5_part5 branch doesn't exist");
        b_HLT_Mu10p5_IP3p5_part5_->GetEntry(index);
        loaded_HLT_Mu10p5_IP3p5_part5_ = true;
    }
    return HLT_Mu10p5_IP3p5_part5_;
}
const bool &Nano::HLT_Mu12() {
    if (!loaded_HLT_Mu12_) counter_uncached_HLT_Mu12_++;
    else counter_cached_HLT_Mu12_++;
    if (!loaded_HLT_Mu12_) {
        if (!b_HLT_Mu12_) throw std::runtime_error("HLT_Mu12 branch doesn't exist");
        b_HLT_Mu12_->GetEntry(index);
        loaded_HLT_Mu12_ = true;
    }
    return HLT_Mu12_;
}
const bool &Nano::HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33() {
    if (!loaded_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33_) counter_uncached_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33_++;
    else counter_cached_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33_++;
    if (!loaded_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33_) {
        if (!b_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33_) throw std::runtime_error("HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33_ = true;
    }
    return HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33_;
}
const bool &Nano::HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79() {
    if (!loaded_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79_) counter_uncached_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79_++;
    else counter_cached_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79_++;
    if (!loaded_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79_) {
        if (!b_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79_) throw std::runtime_error("HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79_ = true;
    }
    return HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79_;
}
const bool &Nano::HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_) counter_uncached_HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_) {
        if (!b_HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_) counter_uncached_HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_) {
        if (!b_HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_) counter_uncached_HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_) {
        if (!b_HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33() {
    if (!loaded_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33_) counter_uncached_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33_++;
    else counter_cached_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33_++;
    if (!loaded_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33_) {
        if (!b_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33_) throw std::runtime_error("HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33_ = true;
    }
    return HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33_;
}
const bool &Nano::HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79() {
    if (!loaded_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79_) counter_uncached_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79_++;
    else counter_cached_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79_++;
    if (!loaded_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79_) {
        if (!b_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79_) throw std::runtime_error("HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79_ = true;
    }
    return HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79_;
}
const bool &Nano::HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_) counter_uncached_HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_) {
        if (!b_HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_) counter_uncached_HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_) {
        if (!b_HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_) counter_uncached_HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_) {
        if (!b_HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33() {
    if (!loaded_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33_) counter_uncached_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33_++;
    else counter_cached_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33_++;
    if (!loaded_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33_) {
        if (!b_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33_) throw std::runtime_error("HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33_ = true;
    }
    return HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33_;
}
const bool &Nano::HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79() {
    if (!loaded_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79_) counter_uncached_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79_++;
    else counter_cached_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79_++;
    if (!loaded_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79_) {
        if (!b_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79_) throw std::runtime_error("HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79_ = true;
    }
    return HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79_;
}
const bool &Nano::HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_) counter_uncached_HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_) {
        if (!b_HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_) counter_uncached_HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_) {
        if (!b_HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_) counter_uncached_HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_) {
        if (!b_HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33() {
    if (!loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33_) counter_uncached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33_++;
    else counter_cached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33_++;
    if (!loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33_) {
        if (!b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33_) throw std::runtime_error("HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33_ = true;
    }
    return HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33_;
}
const bool &Nano::HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79() {
    if (!loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79_) counter_uncached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79_++;
    else counter_cached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79_++;
    if (!loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79_) {
        if (!b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79_) throw std::runtime_error("HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79_ = true;
    }
    return HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79_;
}
const bool &Nano::HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) counter_uncached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) {
        if (!b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_) counter_uncached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_) {
        if (!b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_) counter_uncached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_) {
        if (!b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33() {
    if (!loaded_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33_) counter_uncached_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33_++;
    else counter_cached_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33_++;
    if (!loaded_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33_) {
        if (!b_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33_) throw std::runtime_error("HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33_ = true;
    }
    return HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33_;
}
const bool &Nano::HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79() {
    if (!loaded_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79_) counter_uncached_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79_++;
    else counter_cached_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79_++;
    if (!loaded_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79_) {
        if (!b_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79_) throw std::runtime_error("HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79_ = true;
    }
    return HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79_;
}
const bool &Nano::HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_) counter_uncached_HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_) {
        if (!b_HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_) counter_uncached_HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_) {
        if (!b_HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_) counter_uncached_HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_) {
        if (!b_HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33() {
    if (!loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33_) counter_uncached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33_++;
    else counter_cached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33_++;
    if (!loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33_) {
        if (!b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33_) throw std::runtime_error("HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33_ = true;
    }
    return HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33_;
}
const bool &Nano::HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79() {
    if (!loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79_) counter_uncached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79_++;
    else counter_cached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79_++;
    if (!loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79_) {
        if (!b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79_) throw std::runtime_error("HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79_ = true;
    }
    return HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79_;
}
const bool &Nano::HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) counter_uncached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) {
        if (!b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_) counter_uncached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_) {
        if (!b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_) counter_uncached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_) {
        if (!b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_;
}
const bool &Nano::HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33() {
    if (!loaded_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33_) counter_uncached_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33_++;
    else counter_cached_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33_++;
    if (!loaded_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33_) {
        if (!b_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33_) throw std::runtime_error("HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33_ = true;
    }
    return HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33_;
}
const bool &Nano::HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79() {
    if (!loaded_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79_) counter_uncached_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79_++;
    else counter_cached_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79_++;
    if (!loaded_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79_) {
        if (!b_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79_) throw std::runtime_error("HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79_ = true;
    }
    return HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79_;
}
const bool &Nano::HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71() {
    if (!loaded_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) counter_uncached_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_++;
    else counter_cached_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_++;
    if (!loaded_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) {
        if (!b_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_) throw std::runtime_error("HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71 branch doesn't exist");
        b_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_->GetEntry(index);
        loaded_HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_ = true;
    }
    return HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_;
}
const bool &Nano::HLT_Mu12_DoublePhoton20() {
    if (!loaded_HLT_Mu12_DoublePhoton20_) counter_uncached_HLT_Mu12_DoublePhoton20_++;
    else counter_cached_HLT_Mu12_DoublePhoton20_++;
    if (!loaded_HLT_Mu12_DoublePhoton20_) {
        if (!b_HLT_Mu12_DoublePhoton20_) throw std::runtime_error("HLT_Mu12_DoublePhoton20 branch doesn't exist");
        b_HLT_Mu12_DoublePhoton20_->GetEntry(index);
        loaded_HLT_Mu12_DoublePhoton20_ = true;
    }
    return HLT_Mu12_DoublePhoton20_;
}
const bool &Nano::HLT_Mu12_IP6() {
    if (!loaded_HLT_Mu12_IP6_) counter_uncached_HLT_Mu12_IP6_++;
    else counter_cached_HLT_Mu12_IP6_++;
    if (!loaded_HLT_Mu12_IP6_) {
        if (!b_HLT_Mu12_IP6_) throw std::runtime_error("HLT_Mu12_IP6 branch doesn't exist");
        b_HLT_Mu12_IP6_->GetEntry(index);
        loaded_HLT_Mu12_IP6_ = true;
    }
    return HLT_Mu12_IP6_;
}
const bool &Nano::HLT_Mu12_IP6_ToCSCS() {
    if (!loaded_HLT_Mu12_IP6_ToCSCS_) counter_uncached_HLT_Mu12_IP6_ToCSCS_++;
    else counter_cached_HLT_Mu12_IP6_ToCSCS_++;
    if (!loaded_HLT_Mu12_IP6_ToCSCS_) {
        if (!b_HLT_Mu12_IP6_ToCSCS_) throw std::runtime_error("HLT_Mu12_IP6_ToCSCS branch doesn't exist");
        b_HLT_Mu12_IP6_ToCSCS_->GetEntry(index);
        loaded_HLT_Mu12_IP6_ToCSCS_ = true;
    }
    return HLT_Mu12_IP6_ToCSCS_;
}
const bool &Nano::HLT_Mu12_IP6_part0() {
    if (!loaded_HLT_Mu12_IP6_part0_) counter_uncached_HLT_Mu12_IP6_part0_++;
    else counter_cached_HLT_Mu12_IP6_part0_++;
    if (!loaded_HLT_Mu12_IP6_part0_) {
        if (!b_HLT_Mu12_IP6_part0_) throw std::runtime_error("HLT_Mu12_IP6_part0 branch doesn't exist");
        b_HLT_Mu12_IP6_part0_->GetEntry(index);
        loaded_HLT_Mu12_IP6_part0_ = true;
    }
    return HLT_Mu12_IP6_part0_;
}
const bool &Nano::HLT_Mu12_IP6_part1() {
    if (!loaded_HLT_Mu12_IP6_part1_) counter_uncached_HLT_Mu12_IP6_part1_++;
    else counter_cached_HLT_Mu12_IP6_part1_++;
    if (!loaded_HLT_Mu12_IP6_part1_) {
        if (!b_HLT_Mu12_IP6_part1_) throw std::runtime_error("HLT_Mu12_IP6_part1 branch doesn't exist");
        b_HLT_Mu12_IP6_part1_->GetEntry(index);
        loaded_HLT_Mu12_IP6_part1_ = true;
    }
    return HLT_Mu12_IP6_part1_;
}
const bool &Nano::HLT_Mu12_IP6_part2() {
    if (!loaded_HLT_Mu12_IP6_part2_) counter_uncached_HLT_Mu12_IP6_part2_++;
    else counter_cached_HLT_Mu12_IP6_part2_++;
    if (!loaded_HLT_Mu12_IP6_part2_) {
        if (!b_HLT_Mu12_IP6_part2_) throw std::runtime_error("HLT_Mu12_IP6_part2 branch doesn't exist");
        b_HLT_Mu12_IP6_part2_->GetEntry(index);
        loaded_HLT_Mu12_IP6_part2_ = true;
    }
    return HLT_Mu12_IP6_part2_;
}
const bool &Nano::HLT_Mu12_IP6_part3() {
    if (!loaded_HLT_Mu12_IP6_part3_) counter_uncached_HLT_Mu12_IP6_part3_++;
    else counter_cached_HLT_Mu12_IP6_part3_++;
    if (!loaded_HLT_Mu12_IP6_part3_) {
        if (!b_HLT_Mu12_IP6_part3_) throw std::runtime_error("HLT_Mu12_IP6_part3 branch doesn't exist");
        b_HLT_Mu12_IP6_part3_->GetEntry(index);
        loaded_HLT_Mu12_IP6_part3_ = true;
    }
    return HLT_Mu12_IP6_part3_;
}
const bool &Nano::HLT_Mu12_IP6_part4() {
    if (!loaded_HLT_Mu12_IP6_part4_) counter_uncached_HLT_Mu12_IP6_part4_++;
    else counter_cached_HLT_Mu12_IP6_part4_++;
    if (!loaded_HLT_Mu12_IP6_part4_) {
        if (!b_HLT_Mu12_IP6_part4_) throw std::runtime_error("HLT_Mu12_IP6_part4 branch doesn't exist");
        b_HLT_Mu12_IP6_part4_->GetEntry(index);
        loaded_HLT_Mu12_IP6_part4_ = true;
    }
    return HLT_Mu12_IP6_part4_;
}
const bool &Nano::HLT_Mu12_Photon25_CaloIdL() {
    if (!loaded_HLT_Mu12_Photon25_CaloIdL_) counter_uncached_HLT_Mu12_Photon25_CaloIdL_++;
    else counter_cached_HLT_Mu12_Photon25_CaloIdL_++;
    if (!loaded_HLT_Mu12_Photon25_CaloIdL_) {
        if (!b_HLT_Mu12_Photon25_CaloIdL_) throw std::runtime_error("HLT_Mu12_Photon25_CaloIdL branch doesn't exist");
        b_HLT_Mu12_Photon25_CaloIdL_->GetEntry(index);
        loaded_HLT_Mu12_Photon25_CaloIdL_ = true;
    }
    return HLT_Mu12_Photon25_CaloIdL_;
}
const bool &Nano::HLT_Mu12_Photon25_CaloIdL_L1ISO() {
    if (!loaded_HLT_Mu12_Photon25_CaloIdL_L1ISO_) counter_uncached_HLT_Mu12_Photon25_CaloIdL_L1ISO_++;
    else counter_cached_HLT_Mu12_Photon25_CaloIdL_L1ISO_++;
    if (!loaded_HLT_Mu12_Photon25_CaloIdL_L1ISO_) {
        if (!b_HLT_Mu12_Photon25_CaloIdL_L1ISO_) throw std::runtime_error("HLT_Mu12_Photon25_CaloIdL_L1ISO branch doesn't exist");
        b_HLT_Mu12_Photon25_CaloIdL_L1ISO_->GetEntry(index);
        loaded_HLT_Mu12_Photon25_CaloIdL_L1ISO_ = true;
    }
    return HLT_Mu12_Photon25_CaloIdL_L1ISO_;
}
const bool &Nano::HLT_Mu12_Photon25_CaloIdL_L1OR() {
    if (!loaded_HLT_Mu12_Photon25_CaloIdL_L1OR_) counter_uncached_HLT_Mu12_Photon25_CaloIdL_L1OR_++;
    else counter_cached_HLT_Mu12_Photon25_CaloIdL_L1OR_++;
    if (!loaded_HLT_Mu12_Photon25_CaloIdL_L1OR_) {
        if (!b_HLT_Mu12_Photon25_CaloIdL_L1OR_) throw std::runtime_error("HLT_Mu12_Photon25_CaloIdL_L1OR branch doesn't exist");
        b_HLT_Mu12_Photon25_CaloIdL_L1OR_->GetEntry(index);
        loaded_HLT_Mu12_Photon25_CaloIdL_L1OR_ = true;
    }
    return HLT_Mu12_Photon25_CaloIdL_L1OR_;
}
const bool &Nano::HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL() {
    if (!loaded_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_) counter_uncached_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_++;
    else counter_cached_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_++;
    if (!loaded_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_) {
        if (!b_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_) throw std::runtime_error("HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL branch doesn't exist");
        b_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_->GetEntry(index);
        loaded_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_ = true;
    }
    return HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_;
}
const bool &Nano::HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ() {
    if (!loaded_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_) counter_uncached_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_++;
    else counter_cached_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_++;
    if (!loaded_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_) {
        if (!b_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_) throw std::runtime_error("HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ branch doesn't exist");
        b_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_->GetEntry(index);
        loaded_HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_ = true;
    }
    return HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_;
}
const bool &Nano::HLT_Mu12eta2p3() {
    if (!loaded_HLT_Mu12eta2p3_) counter_uncached_HLT_Mu12eta2p3_++;
    else counter_cached_HLT_Mu12eta2p3_++;
    if (!loaded_HLT_Mu12eta2p3_) {
        if (!b_HLT_Mu12eta2p3_) throw std::runtime_error("HLT_Mu12eta2p3 branch doesn't exist");
        b_HLT_Mu12eta2p3_->GetEntry(index);
        loaded_HLT_Mu12eta2p3_ = true;
    }
    return HLT_Mu12eta2p3_;
}
const bool &Nano::HLT_Mu12eta2p3_PFJet40() {
    if (!loaded_HLT_Mu12eta2p3_PFJet40_) counter_uncached_HLT_Mu12eta2p3_PFJet40_++;
    else counter_cached_HLT_Mu12eta2p3_PFJet40_++;
    if (!loaded_HLT_Mu12eta2p3_PFJet40_) {
        if (!b_HLT_Mu12eta2p3_PFJet40_) throw std::runtime_error("HLT_Mu12eta2p3_PFJet40 branch doesn't exist");
        b_HLT_Mu12eta2p3_PFJet40_->GetEntry(index);
        loaded_HLT_Mu12eta2p3_PFJet40_ = true;
    }
    return HLT_Mu12eta2p3_PFJet40_;
}
const bool &Nano::HLT_Mu14er_PFMET100() {
    if (!loaded_HLT_Mu14er_PFMET100_) counter_uncached_HLT_Mu14er_PFMET100_++;
    else counter_cached_HLT_Mu14er_PFMET100_++;
    if (!loaded_HLT_Mu14er_PFMET100_) {
        if (!b_HLT_Mu14er_PFMET100_) throw std::runtime_error("HLT_Mu14er_PFMET100 branch doesn't exist");
        b_HLT_Mu14er_PFMET100_->GetEntry(index);
        loaded_HLT_Mu14er_PFMET100_ = true;
    }
    return HLT_Mu14er_PFMET100_;
}
const bool &Nano::HLT_Mu15() {
    if (!loaded_HLT_Mu15_) counter_uncached_HLT_Mu15_++;
    else counter_cached_HLT_Mu15_++;
    if (!loaded_HLT_Mu15_) {
        if (!b_HLT_Mu15_) throw std::runtime_error("HLT_Mu15 branch doesn't exist");
        b_HLT_Mu15_->GetEntry(index);
        loaded_HLT_Mu15_ = true;
    }
    return HLT_Mu15_;
}
const bool &Nano::HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400() {
    if (!loaded_HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400_) counter_uncached_HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400_++;
    else counter_cached_HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400_++;
    if (!loaded_HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400_) {
        if (!b_HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400_) throw std::runtime_error("HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400 branch doesn't exist");
        b_HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400_->GetEntry(index);
        loaded_HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400_ = true;
    }
    return HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400_;
}
const bool &Nano::HLT_Mu15_IsoVVVL_PFHT350() {
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT350_) counter_uncached_HLT_Mu15_IsoVVVL_PFHT350_++;
    else counter_cached_HLT_Mu15_IsoVVVL_PFHT350_++;
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT350_) {
        if (!b_HLT_Mu15_IsoVVVL_PFHT350_) throw std::runtime_error("HLT_Mu15_IsoVVVL_PFHT350 branch doesn't exist");
        b_HLT_Mu15_IsoVVVL_PFHT350_->GetEntry(index);
        loaded_HLT_Mu15_IsoVVVL_PFHT350_ = true;
    }
    return HLT_Mu15_IsoVVVL_PFHT350_;
}
const bool &Nano::HLT_Mu15_IsoVVVL_PFHT350_PFMET50() {
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT350_PFMET50_) counter_uncached_HLT_Mu15_IsoVVVL_PFHT350_PFMET50_++;
    else counter_cached_HLT_Mu15_IsoVVVL_PFHT350_PFMET50_++;
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT350_PFMET50_) {
        if (!b_HLT_Mu15_IsoVVVL_PFHT350_PFMET50_) throw std::runtime_error("HLT_Mu15_IsoVVVL_PFHT350_PFMET50 branch doesn't exist");
        b_HLT_Mu15_IsoVVVL_PFHT350_PFMET50_->GetEntry(index);
        loaded_HLT_Mu15_IsoVVVL_PFHT350_PFMET50_ = true;
    }
    return HLT_Mu15_IsoVVVL_PFHT350_PFMET50_;
}
const bool &Nano::HLT_Mu15_IsoVVVL_PFHT400() {
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT400_) counter_uncached_HLT_Mu15_IsoVVVL_PFHT400_++;
    else counter_cached_HLT_Mu15_IsoVVVL_PFHT400_++;
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT400_) {
        if (!b_HLT_Mu15_IsoVVVL_PFHT400_) throw std::runtime_error("HLT_Mu15_IsoVVVL_PFHT400 branch doesn't exist");
        b_HLT_Mu15_IsoVVVL_PFHT400_->GetEntry(index);
        loaded_HLT_Mu15_IsoVVVL_PFHT400_ = true;
    }
    return HLT_Mu15_IsoVVVL_PFHT400_;
}
const bool &Nano::HLT_Mu15_IsoVVVL_PFHT400_PFMET50() {
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT400_PFMET50_) counter_uncached_HLT_Mu15_IsoVVVL_PFHT400_PFMET50_++;
    else counter_cached_HLT_Mu15_IsoVVVL_PFHT400_PFMET50_++;
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT400_PFMET50_) {
        if (!b_HLT_Mu15_IsoVVVL_PFHT400_PFMET50_) throw std::runtime_error("HLT_Mu15_IsoVVVL_PFHT400_PFMET50 branch doesn't exist");
        b_HLT_Mu15_IsoVVVL_PFHT400_PFMET50_->GetEntry(index);
        loaded_HLT_Mu15_IsoVVVL_PFHT400_PFMET50_ = true;
    }
    return HLT_Mu15_IsoVVVL_PFHT400_PFMET50_;
}
const bool &Nano::HLT_Mu15_IsoVVVL_PFHT450() {
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT450_) counter_uncached_HLT_Mu15_IsoVVVL_PFHT450_++;
    else counter_cached_HLT_Mu15_IsoVVVL_PFHT450_++;
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT450_) {
        if (!b_HLT_Mu15_IsoVVVL_PFHT450_) throw std::runtime_error("HLT_Mu15_IsoVVVL_PFHT450 branch doesn't exist");
        b_HLT_Mu15_IsoVVVL_PFHT450_->GetEntry(index);
        loaded_HLT_Mu15_IsoVVVL_PFHT450_ = true;
    }
    return HLT_Mu15_IsoVVVL_PFHT450_;
}
const bool &Nano::HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5() {
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_) counter_uncached_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_++;
    else counter_cached_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_++;
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_) {
        if (!b_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_) throw std::runtime_error("HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5 branch doesn't exist");
        b_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_->GetEntry(index);
        loaded_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_ = true;
    }
    return HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5_;
}
const bool &Nano::HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5() {
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_) counter_uncached_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_++;
    else counter_cached_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_++;
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_) {
        if (!b_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_) throw std::runtime_error("HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5 branch doesn't exist");
        b_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_->GetEntry(index);
        loaded_HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_ = true;
    }
    return HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_;
}
const bool &Nano::HLT_Mu15_IsoVVVL_PFHT450_PFMET50() {
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT450_PFMET50_) counter_uncached_HLT_Mu15_IsoVVVL_PFHT450_PFMET50_++;
    else counter_cached_HLT_Mu15_IsoVVVL_PFHT450_PFMET50_++;
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT450_PFMET50_) {
        if (!b_HLT_Mu15_IsoVVVL_PFHT450_PFMET50_) throw std::runtime_error("HLT_Mu15_IsoVVVL_PFHT450_PFMET50 branch doesn't exist");
        b_HLT_Mu15_IsoVVVL_PFHT450_PFMET50_->GetEntry(index);
        loaded_HLT_Mu15_IsoVVVL_PFHT450_PFMET50_ = true;
    }
    return HLT_Mu15_IsoVVVL_PFHT450_PFMET50_;
}
const bool &Nano::HLT_Mu15_IsoVVVL_PFHT600() {
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT600_) counter_uncached_HLT_Mu15_IsoVVVL_PFHT600_++;
    else counter_cached_HLT_Mu15_IsoVVVL_PFHT600_++;
    if (!loaded_HLT_Mu15_IsoVVVL_PFHT600_) {
        if (!b_HLT_Mu15_IsoVVVL_PFHT600_) throw std::runtime_error("HLT_Mu15_IsoVVVL_PFHT600 branch doesn't exist");
        b_HLT_Mu15_IsoVVVL_PFHT600_->GetEntry(index);
        loaded_HLT_Mu15_IsoVVVL_PFHT600_ = true;
    }
    return HLT_Mu15_IsoVVVL_PFHT600_;
}
const bool &Nano::HLT_Mu16_TkMu0_dEta18_Onia() {
    if (!loaded_HLT_Mu16_TkMu0_dEta18_Onia_) counter_uncached_HLT_Mu16_TkMu0_dEta18_Onia_++;
    else counter_cached_HLT_Mu16_TkMu0_dEta18_Onia_++;
    if (!loaded_HLT_Mu16_TkMu0_dEta18_Onia_) {
        if (!b_HLT_Mu16_TkMu0_dEta18_Onia_) throw std::runtime_error("HLT_Mu16_TkMu0_dEta18_Onia branch doesn't exist");
        b_HLT_Mu16_TkMu0_dEta18_Onia_->GetEntry(index);
        loaded_HLT_Mu16_TkMu0_dEta18_Onia_ = true;
    }
    return HLT_Mu16_TkMu0_dEta18_Onia_;
}
const bool &Nano::HLT_Mu16_TkMu0_dEta18_Phi() {
    if (!loaded_HLT_Mu16_TkMu0_dEta18_Phi_) counter_uncached_HLT_Mu16_TkMu0_dEta18_Phi_++;
    else counter_cached_HLT_Mu16_TkMu0_dEta18_Phi_++;
    if (!loaded_HLT_Mu16_TkMu0_dEta18_Phi_) {
        if (!b_HLT_Mu16_TkMu0_dEta18_Phi_) throw std::runtime_error("HLT_Mu16_TkMu0_dEta18_Phi branch doesn't exist");
        b_HLT_Mu16_TkMu0_dEta18_Phi_->GetEntry(index);
        loaded_HLT_Mu16_TkMu0_dEta18_Phi_ = true;
    }
    return HLT_Mu16_TkMu0_dEta18_Phi_;
}
const bool &Nano::HLT_Mu16_eta2p1_MET30() {
    if (!loaded_HLT_Mu16_eta2p1_MET30_) counter_uncached_HLT_Mu16_eta2p1_MET30_++;
    else counter_cached_HLT_Mu16_eta2p1_MET30_++;
    if (!loaded_HLT_Mu16_eta2p1_MET30_) {
        if (!b_HLT_Mu16_eta2p1_MET30_) throw std::runtime_error("HLT_Mu16_eta2p1_MET30 branch doesn't exist");
        b_HLT_Mu16_eta2p1_MET30_->GetEntry(index);
        loaded_HLT_Mu16_eta2p1_MET30_ = true;
    }
    return HLT_Mu16_eta2p1_MET30_;
}
const bool &Nano::HLT_Mu17() {
    if (!loaded_HLT_Mu17_) counter_uncached_HLT_Mu17_++;
    else counter_cached_HLT_Mu17_++;
    if (!loaded_HLT_Mu17_) {
        if (!b_HLT_Mu17_) throw std::runtime_error("HLT_Mu17 branch doesn't exist");
        b_HLT_Mu17_->GetEntry(index);
        loaded_HLT_Mu17_ = true;
    }
    return HLT_Mu17_;
}
const bool &Nano::HLT_Mu17_Mu8() {
    if (!loaded_HLT_Mu17_Mu8_) counter_uncached_HLT_Mu17_Mu8_++;
    else counter_cached_HLT_Mu17_Mu8_++;
    if (!loaded_HLT_Mu17_Mu8_) {
        if (!b_HLT_Mu17_Mu8_) throw std::runtime_error("HLT_Mu17_Mu8 branch doesn't exist");
        b_HLT_Mu17_Mu8_->GetEntry(index);
        loaded_HLT_Mu17_Mu8_ = true;
    }
    return HLT_Mu17_Mu8_;
}
const bool &Nano::HLT_Mu17_Mu8_DZ() {
    if (!loaded_HLT_Mu17_Mu8_DZ_) counter_uncached_HLT_Mu17_Mu8_DZ_++;
    else counter_cached_HLT_Mu17_Mu8_DZ_++;
    if (!loaded_HLT_Mu17_Mu8_DZ_) {
        if (!b_HLT_Mu17_Mu8_DZ_) throw std::runtime_error("HLT_Mu17_Mu8_DZ branch doesn't exist");
        b_HLT_Mu17_Mu8_DZ_->GetEntry(index);
        loaded_HLT_Mu17_Mu8_DZ_ = true;
    }
    return HLT_Mu17_Mu8_DZ_;
}
const bool &Nano::HLT_Mu17_Mu8_SameSign() {
    if (!loaded_HLT_Mu17_Mu8_SameSign_) counter_uncached_HLT_Mu17_Mu8_SameSign_++;
    else counter_cached_HLT_Mu17_Mu8_SameSign_++;
    if (!loaded_HLT_Mu17_Mu8_SameSign_) {
        if (!b_HLT_Mu17_Mu8_SameSign_) throw std::runtime_error("HLT_Mu17_Mu8_SameSign branch doesn't exist");
        b_HLT_Mu17_Mu8_SameSign_->GetEntry(index);
        loaded_HLT_Mu17_Mu8_SameSign_ = true;
    }
    return HLT_Mu17_Mu8_SameSign_;
}
const bool &Nano::HLT_Mu17_Mu8_SameSign_DZ() {
    if (!loaded_HLT_Mu17_Mu8_SameSign_DZ_) counter_uncached_HLT_Mu17_Mu8_SameSign_DZ_++;
    else counter_cached_HLT_Mu17_Mu8_SameSign_DZ_++;
    if (!loaded_HLT_Mu17_Mu8_SameSign_DZ_) {
        if (!b_HLT_Mu17_Mu8_SameSign_DZ_) throw std::runtime_error("HLT_Mu17_Mu8_SameSign_DZ branch doesn't exist");
        b_HLT_Mu17_Mu8_SameSign_DZ_->GetEntry(index);
        loaded_HLT_Mu17_Mu8_SameSign_DZ_ = true;
    }
    return HLT_Mu17_Mu8_SameSign_DZ_;
}
const bool &Nano::HLT_Mu17_Photon22_CaloIdL_L1ISO() {
    if (!loaded_HLT_Mu17_Photon22_CaloIdL_L1ISO_) counter_uncached_HLT_Mu17_Photon22_CaloIdL_L1ISO_++;
    else counter_cached_HLT_Mu17_Photon22_CaloIdL_L1ISO_++;
    if (!loaded_HLT_Mu17_Photon22_CaloIdL_L1ISO_) {
        if (!b_HLT_Mu17_Photon22_CaloIdL_L1ISO_) throw std::runtime_error("HLT_Mu17_Photon22_CaloIdL_L1ISO branch doesn't exist");
        b_HLT_Mu17_Photon22_CaloIdL_L1ISO_->GetEntry(index);
        loaded_HLT_Mu17_Photon22_CaloIdL_L1ISO_ = true;
    }
    return HLT_Mu17_Photon22_CaloIdL_L1ISO_;
}
const bool &Nano::HLT_Mu17_Photon30_CaloIdL_L1ISO() {
    if (!loaded_HLT_Mu17_Photon30_CaloIdL_L1ISO_) counter_uncached_HLT_Mu17_Photon30_CaloIdL_L1ISO_++;
    else counter_cached_HLT_Mu17_Photon30_CaloIdL_L1ISO_++;
    if (!loaded_HLT_Mu17_Photon30_CaloIdL_L1ISO_) {
        if (!b_HLT_Mu17_Photon30_CaloIdL_L1ISO_) throw std::runtime_error("HLT_Mu17_Photon30_CaloIdL_L1ISO branch doesn't exist");
        b_HLT_Mu17_Photon30_CaloIdL_L1ISO_->GetEntry(index);
        loaded_HLT_Mu17_Photon30_CaloIdL_L1ISO_ = true;
    }
    return HLT_Mu17_Photon30_CaloIdL_L1ISO_;
}
const bool &Nano::HLT_Mu17_Photon30_IsoCaloId() {
    if (!loaded_HLT_Mu17_Photon30_IsoCaloId_) counter_uncached_HLT_Mu17_Photon30_IsoCaloId_++;
    else counter_cached_HLT_Mu17_Photon30_IsoCaloId_++;
    if (!loaded_HLT_Mu17_Photon30_IsoCaloId_) {
        if (!b_HLT_Mu17_Photon30_IsoCaloId_) throw std::runtime_error("HLT_Mu17_Photon30_IsoCaloId branch doesn't exist");
        b_HLT_Mu17_Photon30_IsoCaloId_->GetEntry(index);
        loaded_HLT_Mu17_Photon30_IsoCaloId_ = true;
    }
    return HLT_Mu17_Photon30_IsoCaloId_;
}
const bool &Nano::HLT_Mu17_Photon35_CaloIdL_L1ISO() {
    if (!loaded_HLT_Mu17_Photon35_CaloIdL_L1ISO_) counter_uncached_HLT_Mu17_Photon35_CaloIdL_L1ISO_++;
    else counter_cached_HLT_Mu17_Photon35_CaloIdL_L1ISO_++;
    if (!loaded_HLT_Mu17_Photon35_CaloIdL_L1ISO_) {
        if (!b_HLT_Mu17_Photon35_CaloIdL_L1ISO_) throw std::runtime_error("HLT_Mu17_Photon35_CaloIdL_L1ISO branch doesn't exist");
        b_HLT_Mu17_Photon35_CaloIdL_L1ISO_->GetEntry(index);
        loaded_HLT_Mu17_Photon35_CaloIdL_L1ISO_ = true;
    }
    return HLT_Mu17_Photon35_CaloIdL_L1ISO_;
}
const bool &Nano::HLT_Mu17_TkMu8_DZ() {
    if (!loaded_HLT_Mu17_TkMu8_DZ_) counter_uncached_HLT_Mu17_TkMu8_DZ_++;
    else counter_cached_HLT_Mu17_TkMu8_DZ_++;
    if (!loaded_HLT_Mu17_TkMu8_DZ_) {
        if (!b_HLT_Mu17_TkMu8_DZ_) throw std::runtime_error("HLT_Mu17_TkMu8_DZ branch doesn't exist");
        b_HLT_Mu17_TkMu8_DZ_->GetEntry(index);
        loaded_HLT_Mu17_TkMu8_DZ_ = true;
    }
    return HLT_Mu17_TkMu8_DZ_;
}
const bool &Nano::HLT_Mu17_TrkIsoVVL() {
    if (!loaded_HLT_Mu17_TrkIsoVVL_) counter_uncached_HLT_Mu17_TrkIsoVVL_++;
    else counter_cached_HLT_Mu17_TrkIsoVVL_++;
    if (!loaded_HLT_Mu17_TrkIsoVVL_) {
        if (!b_HLT_Mu17_TrkIsoVVL_) throw std::runtime_error("HLT_Mu17_TrkIsoVVL branch doesn't exist");
        b_HLT_Mu17_TrkIsoVVL_->GetEntry(index);
        loaded_HLT_Mu17_TrkIsoVVL_ = true;
    }
    return HLT_Mu17_TrkIsoVVL_;
}
const bool &Nano::HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL() {
    if (!loaded_HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_) counter_uncached_HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_++;
    else counter_cached_HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_++;
    if (!loaded_HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_) {
        if (!b_HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_) throw std::runtime_error("HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL branch doesn't exist");
        b_HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_->GetEntry(index);
        loaded_HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_ = true;
    }
    return HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_;
}
const bool &Nano::HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL() {
    if (!loaded_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_) counter_uncached_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_++;
    else counter_cached_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_++;
    if (!loaded_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_) {
        if (!b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_) throw std::runtime_error("HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL branch doesn't exist");
        b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_->GetEntry(index);
        loaded_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_ = true;
    }
    return HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_;
}
const bool &Nano::HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ() {
    if (!loaded_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_) counter_uncached_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_++;
    else counter_cached_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_++;
    if (!loaded_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_) {
        if (!b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_) throw std::runtime_error("HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ branch doesn't exist");
        b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_->GetEntry(index);
        loaded_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_ = true;
    }
    return HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_;
}
const bool &Nano::HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8() {
    if (!loaded_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_) counter_uncached_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_++;
    else counter_cached_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_++;
    if (!loaded_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_) {
        if (!b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_) throw std::runtime_error("HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8 branch doesn't exist");
        b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_->GetEntry(index);
        loaded_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_ = true;
    }
    return HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_;
}
const bool &Nano::HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8() {
    if (!loaded_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_) counter_uncached_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_++;
    else counter_cached_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_++;
    if (!loaded_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_) {
        if (!b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_) throw std::runtime_error("HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8 branch doesn't exist");
        b_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_->GetEntry(index);
        loaded_HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_ = true;
    }
    return HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_;
}
const bool &Nano::HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL() {
    if (!loaded_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_) counter_uncached_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_++;
    else counter_cached_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_++;
    if (!loaded_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_) {
        if (!b_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_) throw std::runtime_error("HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL branch doesn't exist");
        b_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_->GetEntry(index);
        loaded_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_ = true;
    }
    return HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_;
}
const bool &Nano::HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ() {
    if (!loaded_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_) counter_uncached_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_++;
    else counter_cached_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_++;
    if (!loaded_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_) {
        if (!b_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_) throw std::runtime_error("HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ branch doesn't exist");
        b_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_->GetEntry(index);
        loaded_HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_ = true;
    }
    return HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_;
}
const bool &Nano::HLT_Mu18_Mu9() {
    if (!loaded_HLT_Mu18_Mu9_) counter_uncached_HLT_Mu18_Mu9_++;
    else counter_cached_HLT_Mu18_Mu9_++;
    if (!loaded_HLT_Mu18_Mu9_) {
        if (!b_HLT_Mu18_Mu9_) throw std::runtime_error("HLT_Mu18_Mu9 branch doesn't exist");
        b_HLT_Mu18_Mu9_->GetEntry(index);
        loaded_HLT_Mu18_Mu9_ = true;
    }
    return HLT_Mu18_Mu9_;
}
const bool &Nano::HLT_Mu18_Mu9_DZ() {
    if (!loaded_HLT_Mu18_Mu9_DZ_) counter_uncached_HLT_Mu18_Mu9_DZ_++;
    else counter_cached_HLT_Mu18_Mu9_DZ_++;
    if (!loaded_HLT_Mu18_Mu9_DZ_) {
        if (!b_HLT_Mu18_Mu9_DZ_) throw std::runtime_error("HLT_Mu18_Mu9_DZ branch doesn't exist");
        b_HLT_Mu18_Mu9_DZ_->GetEntry(index);
        loaded_HLT_Mu18_Mu9_DZ_ = true;
    }
    return HLT_Mu18_Mu9_DZ_;
}
const bool &Nano::HLT_Mu18_Mu9_SameSign() {
    if (!loaded_HLT_Mu18_Mu9_SameSign_) counter_uncached_HLT_Mu18_Mu9_SameSign_++;
    else counter_cached_HLT_Mu18_Mu9_SameSign_++;
    if (!loaded_HLT_Mu18_Mu9_SameSign_) {
        if (!b_HLT_Mu18_Mu9_SameSign_) throw std::runtime_error("HLT_Mu18_Mu9_SameSign branch doesn't exist");
        b_HLT_Mu18_Mu9_SameSign_->GetEntry(index);
        loaded_HLT_Mu18_Mu9_SameSign_ = true;
    }
    return HLT_Mu18_Mu9_SameSign_;
}
const bool &Nano::HLT_Mu18_Mu9_SameSign_DZ() {
    if (!loaded_HLT_Mu18_Mu9_SameSign_DZ_) counter_uncached_HLT_Mu18_Mu9_SameSign_DZ_++;
    else counter_cached_HLT_Mu18_Mu9_SameSign_DZ_++;
    if (!loaded_HLT_Mu18_Mu9_SameSign_DZ_) {
        if (!b_HLT_Mu18_Mu9_SameSign_DZ_) throw std::runtime_error("HLT_Mu18_Mu9_SameSign_DZ branch doesn't exist");
        b_HLT_Mu18_Mu9_SameSign_DZ_->GetEntry(index);
        loaded_HLT_Mu18_Mu9_SameSign_DZ_ = true;
    }
    return HLT_Mu18_Mu9_SameSign_DZ_;
}
const bool &Nano::HLT_Mu19() {
    if (!loaded_HLT_Mu19_) counter_uncached_HLT_Mu19_++;
    else counter_cached_HLT_Mu19_++;
    if (!loaded_HLT_Mu19_) {
        if (!b_HLT_Mu19_) throw std::runtime_error("HLT_Mu19 branch doesn't exist");
        b_HLT_Mu19_->GetEntry(index);
        loaded_HLT_Mu19_ = true;
    }
    return HLT_Mu19_;
}
const bool &Nano::HLT_Mu19_TrkIsoVVL() {
    if (!loaded_HLT_Mu19_TrkIsoVVL_) counter_uncached_HLT_Mu19_TrkIsoVVL_++;
    else counter_cached_HLT_Mu19_TrkIsoVVL_++;
    if (!loaded_HLT_Mu19_TrkIsoVVL_) {
        if (!b_HLT_Mu19_TrkIsoVVL_) throw std::runtime_error("HLT_Mu19_TrkIsoVVL branch doesn't exist");
        b_HLT_Mu19_TrkIsoVVL_->GetEntry(index);
        loaded_HLT_Mu19_TrkIsoVVL_ = true;
    }
    return HLT_Mu19_TrkIsoVVL_;
}
const bool &Nano::HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL() {
    if (!loaded_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_) counter_uncached_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_++;
    else counter_cached_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_++;
    if (!loaded_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_) {
        if (!b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_) throw std::runtime_error("HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL branch doesn't exist");
        b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_->GetEntry(index);
        loaded_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_ = true;
    }
    return HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_;
}
const bool &Nano::HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ() {
    if (!loaded_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_) counter_uncached_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_++;
    else counter_cached_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_++;
    if (!loaded_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_) {
        if (!b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_) throw std::runtime_error("HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ branch doesn't exist");
        b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_->GetEntry(index);
        loaded_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_ = true;
    }
    return HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_;
}
const bool &Nano::HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8() {
    if (!loaded_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_) counter_uncached_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_++;
    else counter_cached_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_++;
    if (!loaded_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_) {
        if (!b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_) throw std::runtime_error("HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8 branch doesn't exist");
        b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_->GetEntry(index);
        loaded_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_ = true;
    }
    return HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_;
}
const bool &Nano::HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8() {
    if (!loaded_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_) counter_uncached_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_++;
    else counter_cached_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_++;
    if (!loaded_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_) {
        if (!b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_) throw std::runtime_error("HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8 branch doesn't exist");
        b_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_->GetEntry(index);
        loaded_HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_ = true;
    }
    return HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_;
}
const bool &Nano::HLT_Mu20() {
    if (!loaded_HLT_Mu20_) counter_uncached_HLT_Mu20_++;
    else counter_cached_HLT_Mu20_++;
    if (!loaded_HLT_Mu20_) {
        if (!b_HLT_Mu20_) throw std::runtime_error("HLT_Mu20 branch doesn't exist");
        b_HLT_Mu20_->GetEntry(index);
        loaded_HLT_Mu20_ = true;
    }
    return HLT_Mu20_;
}
const bool &Nano::HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId() {
    if (!loaded_HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_) counter_uncached_HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_++;
    else counter_cached_HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_++;
    if (!loaded_HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_) {
        if (!b_HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_) throw std::runtime_error("HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId branch doesn't exist");
        b_HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_->GetEntry(index);
        loaded_HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_ = true;
    }
    return HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_;
}
const bool &Nano::HLT_Mu20_Mu10() {
    if (!loaded_HLT_Mu20_Mu10_) counter_uncached_HLT_Mu20_Mu10_++;
    else counter_cached_HLT_Mu20_Mu10_++;
    if (!loaded_HLT_Mu20_Mu10_) {
        if (!b_HLT_Mu20_Mu10_) throw std::runtime_error("HLT_Mu20_Mu10 branch doesn't exist");
        b_HLT_Mu20_Mu10_->GetEntry(index);
        loaded_HLT_Mu20_Mu10_ = true;
    }
    return HLT_Mu20_Mu10_;
}
const bool &Nano::HLT_Mu20_Mu10_DZ() {
    if (!loaded_HLT_Mu20_Mu10_DZ_) counter_uncached_HLT_Mu20_Mu10_DZ_++;
    else counter_cached_HLT_Mu20_Mu10_DZ_++;
    if (!loaded_HLT_Mu20_Mu10_DZ_) {
        if (!b_HLT_Mu20_Mu10_DZ_) throw std::runtime_error("HLT_Mu20_Mu10_DZ branch doesn't exist");
        b_HLT_Mu20_Mu10_DZ_->GetEntry(index);
        loaded_HLT_Mu20_Mu10_DZ_ = true;
    }
    return HLT_Mu20_Mu10_DZ_;
}
const bool &Nano::HLT_Mu20_Mu10_SameSign() {
    if (!loaded_HLT_Mu20_Mu10_SameSign_) counter_uncached_HLT_Mu20_Mu10_SameSign_++;
    else counter_cached_HLT_Mu20_Mu10_SameSign_++;
    if (!loaded_HLT_Mu20_Mu10_SameSign_) {
        if (!b_HLT_Mu20_Mu10_SameSign_) throw std::runtime_error("HLT_Mu20_Mu10_SameSign branch doesn't exist");
        b_HLT_Mu20_Mu10_SameSign_->GetEntry(index);
        loaded_HLT_Mu20_Mu10_SameSign_ = true;
    }
    return HLT_Mu20_Mu10_SameSign_;
}
const bool &Nano::HLT_Mu20_Mu10_SameSign_DZ() {
    if (!loaded_HLT_Mu20_Mu10_SameSign_DZ_) counter_uncached_HLT_Mu20_Mu10_SameSign_DZ_++;
    else counter_cached_HLT_Mu20_Mu10_SameSign_DZ_++;
    if (!loaded_HLT_Mu20_Mu10_SameSign_DZ_) {
        if (!b_HLT_Mu20_Mu10_SameSign_DZ_) throw std::runtime_error("HLT_Mu20_Mu10_SameSign_DZ branch doesn't exist");
        b_HLT_Mu20_Mu10_SameSign_DZ_->GetEntry(index);
        loaded_HLT_Mu20_Mu10_SameSign_DZ_ = true;
    }
    return HLT_Mu20_Mu10_SameSign_DZ_;
}
const bool &Nano::HLT_Mu20_TkMu0_Phi() {
    if (!loaded_HLT_Mu20_TkMu0_Phi_) counter_uncached_HLT_Mu20_TkMu0_Phi_++;
    else counter_cached_HLT_Mu20_TkMu0_Phi_++;
    if (!loaded_HLT_Mu20_TkMu0_Phi_) {
        if (!b_HLT_Mu20_TkMu0_Phi_) throw std::runtime_error("HLT_Mu20_TkMu0_Phi branch doesn't exist");
        b_HLT_Mu20_TkMu0_Phi_->GetEntry(index);
        loaded_HLT_Mu20_TkMu0_Phi_ = true;
    }
    return HLT_Mu20_TkMu0_Phi_;
}
const bool &Nano::HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL() {
    if (!loaded_HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL_) counter_uncached_HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL_++;
    else counter_cached_HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL_++;
    if (!loaded_HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL_) {
        if (!b_HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL_) throw std::runtime_error("HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL branch doesn't exist");
        b_HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL_->GetEntry(index);
        loaded_HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL_ = true;
    }
    return HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL_;
}
const bool &Nano::HLT_Mu23_Mu12() {
    if (!loaded_HLT_Mu23_Mu12_) counter_uncached_HLT_Mu23_Mu12_++;
    else counter_cached_HLT_Mu23_Mu12_++;
    if (!loaded_HLT_Mu23_Mu12_) {
        if (!b_HLT_Mu23_Mu12_) throw std::runtime_error("HLT_Mu23_Mu12 branch doesn't exist");
        b_HLT_Mu23_Mu12_->GetEntry(index);
        loaded_HLT_Mu23_Mu12_ = true;
    }
    return HLT_Mu23_Mu12_;
}
const bool &Nano::HLT_Mu23_Mu12_DZ() {
    if (!loaded_HLT_Mu23_Mu12_DZ_) counter_uncached_HLT_Mu23_Mu12_DZ_++;
    else counter_cached_HLT_Mu23_Mu12_DZ_++;
    if (!loaded_HLT_Mu23_Mu12_DZ_) {
        if (!b_HLT_Mu23_Mu12_DZ_) throw std::runtime_error("HLT_Mu23_Mu12_DZ branch doesn't exist");
        b_HLT_Mu23_Mu12_DZ_->GetEntry(index);
        loaded_HLT_Mu23_Mu12_DZ_ = true;
    }
    return HLT_Mu23_Mu12_DZ_;
}
const bool &Nano::HLT_Mu23_Mu12_SameSign() {
    if (!loaded_HLT_Mu23_Mu12_SameSign_) counter_uncached_HLT_Mu23_Mu12_SameSign_++;
    else counter_cached_HLT_Mu23_Mu12_SameSign_++;
    if (!loaded_HLT_Mu23_Mu12_SameSign_) {
        if (!b_HLT_Mu23_Mu12_SameSign_) throw std::runtime_error("HLT_Mu23_Mu12_SameSign branch doesn't exist");
        b_HLT_Mu23_Mu12_SameSign_->GetEntry(index);
        loaded_HLT_Mu23_Mu12_SameSign_ = true;
    }
    return HLT_Mu23_Mu12_SameSign_;
}
const bool &Nano::HLT_Mu23_Mu12_SameSign_DZ() {
    if (!loaded_HLT_Mu23_Mu12_SameSign_DZ_) counter_uncached_HLT_Mu23_Mu12_SameSign_DZ_++;
    else counter_cached_HLT_Mu23_Mu12_SameSign_DZ_++;
    if (!loaded_HLT_Mu23_Mu12_SameSign_DZ_) {
        if (!b_HLT_Mu23_Mu12_SameSign_DZ_) throw std::runtime_error("HLT_Mu23_Mu12_SameSign_DZ branch doesn't exist");
        b_HLT_Mu23_Mu12_SameSign_DZ_->GetEntry(index);
        loaded_HLT_Mu23_Mu12_SameSign_DZ_ = true;
    }
    return HLT_Mu23_Mu12_SameSign_DZ_;
}
const bool &Nano::HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL() {
    if (!loaded_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_) counter_uncached_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_++;
    else counter_cached_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_++;
    if (!loaded_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_) {
        if (!b_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_) throw std::runtime_error("HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL branch doesn't exist");
        b_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_->GetEntry(index);
        loaded_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_ = true;
    }
    return HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_;
}
const bool &Nano::HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ() {
    if (!loaded_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_) counter_uncached_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_++;
    else counter_cached_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_++;
    if (!loaded_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_) {
        if (!b_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_) throw std::runtime_error("HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ branch doesn't exist");
        b_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_->GetEntry(index);
        loaded_HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_ = true;
    }
    return HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_;
}
const bool &Nano::HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL() {
    if (!loaded_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_) counter_uncached_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_++;
    else counter_cached_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_++;
    if (!loaded_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_) {
        if (!b_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_) throw std::runtime_error("HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL branch doesn't exist");
        b_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_->GetEntry(index);
        loaded_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_ = true;
    }
    return HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_;
}
const bool &Nano::HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ() {
    if (!loaded_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_) counter_uncached_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_++;
    else counter_cached_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_++;
    if (!loaded_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_) {
        if (!b_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_) throw std::runtime_error("HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ branch doesn't exist");
        b_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_->GetEntry(index);
        loaded_HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_ = true;
    }
    return HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_;
}
const bool &Nano::HLT_Mu24_eta2p1() {
    if (!loaded_HLT_Mu24_eta2p1_) counter_uncached_HLT_Mu24_eta2p1_++;
    else counter_cached_HLT_Mu24_eta2p1_++;
    if (!loaded_HLT_Mu24_eta2p1_) {
        if (!b_HLT_Mu24_eta2p1_) throw std::runtime_error("HLT_Mu24_eta2p1 branch doesn't exist");
        b_HLT_Mu24_eta2p1_->GetEntry(index);
        loaded_HLT_Mu24_eta2p1_ = true;
    }
    return HLT_Mu24_eta2p1_;
}
const bool &Nano::HLT_Mu25_TkMu0_Onia() {
    if (!loaded_HLT_Mu25_TkMu0_Onia_) counter_uncached_HLT_Mu25_TkMu0_Onia_++;
    else counter_cached_HLT_Mu25_TkMu0_Onia_++;
    if (!loaded_HLT_Mu25_TkMu0_Onia_) {
        if (!b_HLT_Mu25_TkMu0_Onia_) throw std::runtime_error("HLT_Mu25_TkMu0_Onia branch doesn't exist");
        b_HLT_Mu25_TkMu0_Onia_->GetEntry(index);
        loaded_HLT_Mu25_TkMu0_Onia_ = true;
    }
    return HLT_Mu25_TkMu0_Onia_;
}
const bool &Nano::HLT_Mu25_TkMu0_Phi() {
    if (!loaded_HLT_Mu25_TkMu0_Phi_) counter_uncached_HLT_Mu25_TkMu0_Phi_++;
    else counter_cached_HLT_Mu25_TkMu0_Phi_++;
    if (!loaded_HLT_Mu25_TkMu0_Phi_) {
        if (!b_HLT_Mu25_TkMu0_Phi_) throw std::runtime_error("HLT_Mu25_TkMu0_Phi branch doesn't exist");
        b_HLT_Mu25_TkMu0_Phi_->GetEntry(index);
        loaded_HLT_Mu25_TkMu0_Phi_ = true;
    }
    return HLT_Mu25_TkMu0_Phi_;
}
const bool &Nano::HLT_Mu25_TkMu0_dEta18_Onia() {
    if (!loaded_HLT_Mu25_TkMu0_dEta18_Onia_) counter_uncached_HLT_Mu25_TkMu0_dEta18_Onia_++;
    else counter_cached_HLT_Mu25_TkMu0_dEta18_Onia_++;
    if (!loaded_HLT_Mu25_TkMu0_dEta18_Onia_) {
        if (!b_HLT_Mu25_TkMu0_dEta18_Onia_) throw std::runtime_error("HLT_Mu25_TkMu0_dEta18_Onia branch doesn't exist");
        b_HLT_Mu25_TkMu0_dEta18_Onia_->GetEntry(index);
        loaded_HLT_Mu25_TkMu0_dEta18_Onia_ = true;
    }
    return HLT_Mu25_TkMu0_dEta18_Onia_;
}
const bool &Nano::HLT_Mu27() {
    if (!loaded_HLT_Mu27_) counter_uncached_HLT_Mu27_++;
    else counter_cached_HLT_Mu27_++;
    if (!loaded_HLT_Mu27_) {
        if (!b_HLT_Mu27_) throw std::runtime_error("HLT_Mu27 branch doesn't exist");
        b_HLT_Mu27_->GetEntry(index);
        loaded_HLT_Mu27_ = true;
    }
    return HLT_Mu27_;
}
const bool &Nano::HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL() {
    if (!loaded_HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL_) counter_uncached_HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL_++;
    else counter_cached_HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL_++;
    if (!loaded_HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL_) {
        if (!b_HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL_) throw std::runtime_error("HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL branch doesn't exist");
        b_HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL_->GetEntry(index);
        loaded_HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL_ = true;
    }
    return HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL_;
}
const bool &Nano::HLT_Mu27_Ele37_CaloIdL_MW() {
    if (!loaded_HLT_Mu27_Ele37_CaloIdL_MW_) counter_uncached_HLT_Mu27_Ele37_CaloIdL_MW_++;
    else counter_cached_HLT_Mu27_Ele37_CaloIdL_MW_++;
    if (!loaded_HLT_Mu27_Ele37_CaloIdL_MW_) {
        if (!b_HLT_Mu27_Ele37_CaloIdL_MW_) throw std::runtime_error("HLT_Mu27_Ele37_CaloIdL_MW branch doesn't exist");
        b_HLT_Mu27_Ele37_CaloIdL_MW_->GetEntry(index);
        loaded_HLT_Mu27_Ele37_CaloIdL_MW_ = true;
    }
    return HLT_Mu27_Ele37_CaloIdL_MW_;
}
const bool &Nano::HLT_Mu27_TkMu8() {
    if (!loaded_HLT_Mu27_TkMu8_) counter_uncached_HLT_Mu27_TkMu8_++;
    else counter_cached_HLT_Mu27_TkMu8_++;
    if (!loaded_HLT_Mu27_TkMu8_) {
        if (!b_HLT_Mu27_TkMu8_) throw std::runtime_error("HLT_Mu27_TkMu8 branch doesn't exist");
        b_HLT_Mu27_TkMu8_->GetEntry(index);
        loaded_HLT_Mu27_TkMu8_ = true;
    }
    return HLT_Mu27_TkMu8_;
}
const bool &Nano::HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL() {
    if (!loaded_HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL_) counter_uncached_HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL_++;
    else counter_cached_HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL_++;
    if (!loaded_HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL_) {
        if (!b_HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL_) throw std::runtime_error("HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL branch doesn't exist");
        b_HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL_->GetEntry(index);
        loaded_HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL_ = true;
    }
    return HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL_;
}
const bool &Nano::HLT_Mu28NoFiltersNoVtx_CentralCaloJet40() {
    if (!loaded_HLT_Mu28NoFiltersNoVtx_CentralCaloJet40_) counter_uncached_HLT_Mu28NoFiltersNoVtx_CentralCaloJet40_++;
    else counter_cached_HLT_Mu28NoFiltersNoVtx_CentralCaloJet40_++;
    if (!loaded_HLT_Mu28NoFiltersNoVtx_CentralCaloJet40_) {
        if (!b_HLT_Mu28NoFiltersNoVtx_CentralCaloJet40_) throw std::runtime_error("HLT_Mu28NoFiltersNoVtx_CentralCaloJet40 branch doesn't exist");
        b_HLT_Mu28NoFiltersNoVtx_CentralCaloJet40_->GetEntry(index);
        loaded_HLT_Mu28NoFiltersNoVtx_CentralCaloJet40_ = true;
    }
    return HLT_Mu28NoFiltersNoVtx_CentralCaloJet40_;
}
const bool &Nano::HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose() {
    if (!loaded_HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose_) counter_uncached_HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose_++;
    else counter_cached_HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose_++;
    if (!loaded_HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose_) {
        if (!b_HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose_) throw std::runtime_error("HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose branch doesn't exist");
        b_HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose_->GetEntry(index);
        loaded_HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose_ = true;
    }
    return HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose_;
}
const bool &Nano::HLT_Mu300() {
    if (!loaded_HLT_Mu300_) counter_uncached_HLT_Mu300_++;
    else counter_cached_HLT_Mu300_++;
    if (!loaded_HLT_Mu300_) {
        if (!b_HLT_Mu300_) throw std::runtime_error("HLT_Mu300 branch doesn't exist");
        b_HLT_Mu300_->GetEntry(index);
        loaded_HLT_Mu300_ = true;
    }
    return HLT_Mu300_;
}
const bool &Nano::HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL() {
    if (!loaded_HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL_) counter_uncached_HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL_++;
    else counter_cached_HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL_++;
    if (!loaded_HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL_) {
        if (!b_HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL_) throw std::runtime_error("HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL branch doesn't exist");
        b_HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL_->GetEntry(index);
        loaded_HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL_ = true;
    }
    return HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL_;
}
const bool &Nano::HLT_Mu30_TkMu0_Onia() {
    if (!loaded_HLT_Mu30_TkMu0_Onia_) counter_uncached_HLT_Mu30_TkMu0_Onia_++;
    else counter_cached_HLT_Mu30_TkMu0_Onia_++;
    if (!loaded_HLT_Mu30_TkMu0_Onia_) {
        if (!b_HLT_Mu30_TkMu0_Onia_) throw std::runtime_error("HLT_Mu30_TkMu0_Onia branch doesn't exist");
        b_HLT_Mu30_TkMu0_Onia_->GetEntry(index);
        loaded_HLT_Mu30_TkMu0_Onia_ = true;
    }
    return HLT_Mu30_TkMu0_Onia_;
}
const bool &Nano::HLT_Mu30_TkMu0_Psi() {
    if (!loaded_HLT_Mu30_TkMu0_Psi_) counter_uncached_HLT_Mu30_TkMu0_Psi_++;
    else counter_cached_HLT_Mu30_TkMu0_Psi_++;
    if (!loaded_HLT_Mu30_TkMu0_Psi_) {
        if (!b_HLT_Mu30_TkMu0_Psi_) throw std::runtime_error("HLT_Mu30_TkMu0_Psi branch doesn't exist");
        b_HLT_Mu30_TkMu0_Psi_->GetEntry(index);
        loaded_HLT_Mu30_TkMu0_Psi_ = true;
    }
    return HLT_Mu30_TkMu0_Psi_;
}
const bool &Nano::HLT_Mu30_TkMu0_Upsilon() {
    if (!loaded_HLT_Mu30_TkMu0_Upsilon_) counter_uncached_HLT_Mu30_TkMu0_Upsilon_++;
    else counter_cached_HLT_Mu30_TkMu0_Upsilon_++;
    if (!loaded_HLT_Mu30_TkMu0_Upsilon_) {
        if (!b_HLT_Mu30_TkMu0_Upsilon_) throw std::runtime_error("HLT_Mu30_TkMu0_Upsilon branch doesn't exist");
        b_HLT_Mu30_TkMu0_Upsilon_->GetEntry(index);
        loaded_HLT_Mu30_TkMu0_Upsilon_ = true;
    }
    return HLT_Mu30_TkMu0_Upsilon_;
}
const bool &Nano::HLT_Mu30_TkMu11() {
    if (!loaded_HLT_Mu30_TkMu11_) counter_uncached_HLT_Mu30_TkMu11_++;
    else counter_cached_HLT_Mu30_TkMu11_++;
    if (!loaded_HLT_Mu30_TkMu11_) {
        if (!b_HLT_Mu30_TkMu11_) throw std::runtime_error("HLT_Mu30_TkMu11 branch doesn't exist");
        b_HLT_Mu30_TkMu11_->GetEntry(index);
        loaded_HLT_Mu30_TkMu11_ = true;
    }
    return HLT_Mu30_TkMu11_;
}
const bool &Nano::HLT_Mu30_eta2p1_PFJet150_PFJet50() {
    if (!loaded_HLT_Mu30_eta2p1_PFJet150_PFJet50_) counter_uncached_HLT_Mu30_eta2p1_PFJet150_PFJet50_++;
    else counter_cached_HLT_Mu30_eta2p1_PFJet150_PFJet50_++;
    if (!loaded_HLT_Mu30_eta2p1_PFJet150_PFJet50_) {
        if (!b_HLT_Mu30_eta2p1_PFJet150_PFJet50_) throw std::runtime_error("HLT_Mu30_eta2p1_PFJet150_PFJet50 branch doesn't exist");
        b_HLT_Mu30_eta2p1_PFJet150_PFJet50_->GetEntry(index);
        loaded_HLT_Mu30_eta2p1_PFJet150_PFJet50_ = true;
    }
    return HLT_Mu30_eta2p1_PFJet150_PFJet50_;
}
const bool &Nano::HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose() {
    if (!loaded_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose_) counter_uncached_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose_++;
    else counter_cached_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose_++;
    if (!loaded_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose_) {
        if (!b_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose_) throw std::runtime_error("HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose branch doesn't exist");
        b_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose_->GetEntry(index);
        loaded_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose_ = true;
    }
    return HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose_;
}
const bool &Nano::HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight() {
    if (!loaded_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight_) counter_uncached_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight_++;
    else counter_cached_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight_++;
    if (!loaded_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight_) {
        if (!b_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight_) throw std::runtime_error("HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight branch doesn't exist");
        b_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight_->GetEntry(index);
        loaded_HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight_ = true;
    }
    return HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight_;
}
const bool &Nano::HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL() {
    if (!loaded_HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL_) counter_uncached_HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL_++;
    else counter_cached_HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL_++;
    if (!loaded_HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL_) {
        if (!b_HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL_) throw std::runtime_error("HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL branch doesn't exist");
        b_HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL_->GetEntry(index);
        loaded_HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL_ = true;
    }
    return HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL_;
}
const bool &Nano::HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL() {
    if (!loaded_HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL_) counter_uncached_HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL_++;
    else counter_cached_HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL_++;
    if (!loaded_HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL_) {
        if (!b_HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL_) throw std::runtime_error("HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL branch doesn't exist");
        b_HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL_->GetEntry(index);
        loaded_HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL_ = true;
    }
    return HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL_;
}
const bool &Nano::HLT_Mu350() {
    if (!loaded_HLT_Mu350_) counter_uncached_HLT_Mu350_++;
    else counter_cached_HLT_Mu350_++;
    if (!loaded_HLT_Mu350_) {
        if (!b_HLT_Mu350_) throw std::runtime_error("HLT_Mu350 branch doesn't exist");
        b_HLT_Mu350_->GetEntry(index);
        loaded_HLT_Mu350_ = true;
    }
    return HLT_Mu350_;
}
const bool &Nano::HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL() {
    if (!loaded_HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL_) counter_uncached_HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL_++;
    else counter_cached_HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL_++;
    if (!loaded_HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL_) {
        if (!b_HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL_) throw std::runtime_error("HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL branch doesn't exist");
        b_HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL_->GetEntry(index);
        loaded_HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL_ = true;
    }
    return HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL_;
}
const bool &Nano::HLT_Mu37_Ele27_CaloIdL_MW() {
    if (!loaded_HLT_Mu37_Ele27_CaloIdL_MW_) counter_uncached_HLT_Mu37_Ele27_CaloIdL_MW_++;
    else counter_cached_HLT_Mu37_Ele27_CaloIdL_MW_++;
    if (!loaded_HLT_Mu37_Ele27_CaloIdL_MW_) {
        if (!b_HLT_Mu37_Ele27_CaloIdL_MW_) throw std::runtime_error("HLT_Mu37_Ele27_CaloIdL_MW branch doesn't exist");
        b_HLT_Mu37_Ele27_CaloIdL_MW_->GetEntry(index);
        loaded_HLT_Mu37_Ele27_CaloIdL_MW_ = true;
    }
    return HLT_Mu37_Ele27_CaloIdL_MW_;
}
const bool &Nano::HLT_Mu37_TkMu27() {
    if (!loaded_HLT_Mu37_TkMu27_) counter_uncached_HLT_Mu37_TkMu27_++;
    else counter_cached_HLT_Mu37_TkMu27_++;
    if (!loaded_HLT_Mu37_TkMu27_) {
        if (!b_HLT_Mu37_TkMu27_) throw std::runtime_error("HLT_Mu37_TkMu27 branch doesn't exist");
        b_HLT_Mu37_TkMu27_->GetEntry(index);
        loaded_HLT_Mu37_TkMu27_ = true;
    }
    return HLT_Mu37_TkMu27_;
}
const bool &Nano::HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose() {
    if (!loaded_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose_) counter_uncached_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose_++;
    else counter_cached_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose_++;
    if (!loaded_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose_) {
        if (!b_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose_) throw std::runtime_error("HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose branch doesn't exist");
        b_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose_->GetEntry(index);
        loaded_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose_ = true;
    }
    return HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose_;
}
const bool &Nano::HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight() {
    if (!loaded_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight_) counter_uncached_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight_++;
    else counter_cached_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight_++;
    if (!loaded_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight_) {
        if (!b_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight_) throw std::runtime_error("HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight branch doesn't exist");
        b_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight_->GetEntry(index);
        loaded_HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight_ = true;
    }
    return HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight_;
}
const bool &Nano::HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL() {
    if (!loaded_HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_) counter_uncached_HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_++;
    else counter_cached_HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_++;
    if (!loaded_HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_) {
        if (!b_HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_) throw std::runtime_error("HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL branch doesn't exist");
        b_HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_->GetEntry(index);
        loaded_HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_ = true;
    }
    return HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_;
}
const bool &Nano::HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose() {
    if (!loaded_HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose_) counter_uncached_HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose_++;
    else counter_cached_HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose_++;
    if (!loaded_HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose_) {
        if (!b_HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose_) throw std::runtime_error("HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose branch doesn't exist");
        b_HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose_->GetEntry(index);
        loaded_HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose_ = true;
    }
    return HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose_;
}
const bool &Nano::HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL() {
    if (!loaded_HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL_) counter_uncached_HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL_++;
    else counter_cached_HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL_++;
    if (!loaded_HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL_) {
        if (!b_HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL_) throw std::runtime_error("HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL branch doesn't exist");
        b_HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL_->GetEntry(index);
        loaded_HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL_ = true;
    }
    return HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL_;
}
const bool &Nano::HLT_Mu3_L1SingleMu5orSingleMu7() {
    if (!loaded_HLT_Mu3_L1SingleMu5orSingleMu7_) counter_uncached_HLT_Mu3_L1SingleMu5orSingleMu7_++;
    else counter_cached_HLT_Mu3_L1SingleMu5orSingleMu7_++;
    if (!loaded_HLT_Mu3_L1SingleMu5orSingleMu7_) {
        if (!b_HLT_Mu3_L1SingleMu5orSingleMu7_) throw std::runtime_error("HLT_Mu3_L1SingleMu5orSingleMu7 branch doesn't exist");
        b_HLT_Mu3_L1SingleMu5orSingleMu7_->GetEntry(index);
        loaded_HLT_Mu3_L1SingleMu5orSingleMu7_ = true;
    }
    return HLT_Mu3_L1SingleMu5orSingleMu7_;
}
const bool &Nano::HLT_Mu3_PFJet40() {
    if (!loaded_HLT_Mu3_PFJet40_) counter_uncached_HLT_Mu3_PFJet40_++;
    else counter_cached_HLT_Mu3_PFJet40_++;
    if (!loaded_HLT_Mu3_PFJet40_) {
        if (!b_HLT_Mu3_PFJet40_) throw std::runtime_error("HLT_Mu3_PFJet40 branch doesn't exist");
        b_HLT_Mu3_PFJet40_->GetEntry(index);
        loaded_HLT_Mu3_PFJet40_ = true;
    }
    return HLT_Mu3_PFJet40_;
}
const bool &Nano::HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight() {
    if (!loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_) counter_uncached_HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_++;
    else counter_cached_HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_++;
    if (!loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_) {
        if (!b_HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_) throw std::runtime_error("HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight branch doesn't exist");
        b_HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_->GetEntry(index);
        loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_ = true;
    }
    return HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_;
}
const bool &Nano::HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight() {
    if (!loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_) counter_uncached_HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_++;
    else counter_cached_HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_++;
    if (!loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_) {
        if (!b_HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_) throw std::runtime_error("HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight branch doesn't exist");
        b_HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_->GetEntry(index);
        loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_ = true;
    }
    return HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_;
}
const bool &Nano::HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight() {
    if (!loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_) counter_uncached_HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_++;
    else counter_cached_HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_++;
    if (!loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_) {
        if (!b_HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_) throw std::runtime_error("HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight branch doesn't exist");
        b_HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_->GetEntry(index);
        loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_ = true;
    }
    return HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_;
}
const bool &Nano::HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight() {
    if (!loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_) counter_uncached_HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_++;
    else counter_cached_HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_++;
    if (!loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_) {
        if (!b_HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_) throw std::runtime_error("HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight branch doesn't exist");
        b_HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_->GetEntry(index);
        loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_ = true;
    }
    return HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_;
}
const bool &Nano::HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight() {
    if (!loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_) counter_uncached_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_++;
    else counter_cached_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_++;
    if (!loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_) {
        if (!b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_) throw std::runtime_error("HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight branch doesn't exist");
        b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_->GetEntry(index);
        loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_ = true;
    }
    return HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_;
}
const bool &Nano::HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight() {
    if (!loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_) counter_uncached_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_++;
    else counter_cached_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_++;
    if (!loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_) {
        if (!b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_) throw std::runtime_error("HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight branch doesn't exist");
        b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_->GetEntry(index);
        loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_ = true;
    }
    return HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_;
}
const bool &Nano::HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight() {
    if (!loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_) counter_uncached_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_++;
    else counter_cached_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_++;
    if (!loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_) {
        if (!b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_) throw std::runtime_error("HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight branch doesn't exist");
        b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_->GetEntry(index);
        loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_ = true;
    }
    return HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_;
}
const bool &Nano::HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight() {
    if (!loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_) counter_uncached_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_++;
    else counter_cached_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_++;
    if (!loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_) {
        if (!b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_) throw std::runtime_error("HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight branch doesn't exist");
        b_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_->GetEntry(index);
        loaded_HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_ = true;
    }
    return HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_;
}
const bool &Nano::HLT_Mu3er_PFHT140_PFMET125() {
    if (!loaded_HLT_Mu3er_PFHT140_PFMET125_) counter_uncached_HLT_Mu3er_PFHT140_PFMET125_++;
    else counter_cached_HLT_Mu3er_PFHT140_PFMET125_++;
    if (!loaded_HLT_Mu3er_PFHT140_PFMET125_) {
        if (!b_HLT_Mu3er_PFHT140_PFMET125_) throw std::runtime_error("HLT_Mu3er_PFHT140_PFMET125 branch doesn't exist");
        b_HLT_Mu3er_PFHT140_PFMET125_->GetEntry(index);
        loaded_HLT_Mu3er_PFHT140_PFMET125_ = true;
    }
    return HLT_Mu3er_PFHT140_PFMET125_;
}
const bool &Nano::HLT_Mu40_TkMu11() {
    if (!loaded_HLT_Mu40_TkMu11_) counter_uncached_HLT_Mu40_TkMu11_++;
    else counter_cached_HLT_Mu40_TkMu11_++;
    if (!loaded_HLT_Mu40_TkMu11_) {
        if (!b_HLT_Mu40_TkMu11_) throw std::runtime_error("HLT_Mu40_TkMu11 branch doesn't exist");
        b_HLT_Mu40_TkMu11_->GetEntry(index);
        loaded_HLT_Mu40_TkMu11_ = true;
    }
    return HLT_Mu40_TkMu11_;
}
const bool &Nano::HLT_Mu40_eta2p1_PFJet200_PFJet50() {
    if (!loaded_HLT_Mu40_eta2p1_PFJet200_PFJet50_) counter_uncached_HLT_Mu40_eta2p1_PFJet200_PFJet50_++;
    else counter_cached_HLT_Mu40_eta2p1_PFJet200_PFJet50_++;
    if (!loaded_HLT_Mu40_eta2p1_PFJet200_PFJet50_) {
        if (!b_HLT_Mu40_eta2p1_PFJet200_PFJet50_) throw std::runtime_error("HLT_Mu40_eta2p1_PFJet200_PFJet50 branch doesn't exist");
        b_HLT_Mu40_eta2p1_PFJet200_PFJet50_->GetEntry(index);
        loaded_HLT_Mu40_eta2p1_PFJet200_PFJet50_ = true;
    }
    return HLT_Mu40_eta2p1_PFJet200_PFJet50_;
}
const bool &Nano::HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL() {
    if (!loaded_HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL_) counter_uncached_HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL_++;
    else counter_cached_HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL_++;
    if (!loaded_HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL_) {
        if (!b_HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL_) throw std::runtime_error("HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL branch doesn't exist");
        b_HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL_->GetEntry(index);
        loaded_HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL_ = true;
    }
    return HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL_;
}
const bool &Nano::HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL() {
    if (!loaded_HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_) counter_uncached_HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_++;
    else counter_cached_HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_++;
    if (!loaded_HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_) {
        if (!b_HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_) throw std::runtime_error("HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL branch doesn't exist");
        b_HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_->GetEntry(index);
        loaded_HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_ = true;
    }
    return HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_;
}
const bool &Nano::HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL() {
    if (!loaded_HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_) counter_uncached_HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_++;
    else counter_cached_HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_++;
    if (!loaded_HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_) {
        if (!b_HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_) throw std::runtime_error("HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL branch doesn't exist");
        b_HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_->GetEntry(index);
        loaded_HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_ = true;
    }
    return HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_;
}
const bool &Nano::HLT_Mu45_eta2p1() {
    if (!loaded_HLT_Mu45_eta2p1_) counter_uncached_HLT_Mu45_eta2p1_++;
    else counter_cached_HLT_Mu45_eta2p1_++;
    if (!loaded_HLT_Mu45_eta2p1_) {
        if (!b_HLT_Mu45_eta2p1_) throw std::runtime_error("HLT_Mu45_eta2p1 branch doesn't exist");
        b_HLT_Mu45_eta2p1_->GetEntry(index);
        loaded_HLT_Mu45_eta2p1_ = true;
    }
    return HLT_Mu45_eta2p1_;
}
const bool &Nano::HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL() {
    if (!loaded_HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_) counter_uncached_HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_++;
    else counter_cached_HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_++;
    if (!loaded_HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_) {
        if (!b_HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_) throw std::runtime_error("HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL branch doesn't exist");
        b_HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_->GetEntry(index);
        loaded_HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_ = true;
    }
    return HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_;
}
const bool &Nano::HLT_Mu4_L1DoubleMu() {
    if (!loaded_HLT_Mu4_L1DoubleMu_) counter_uncached_HLT_Mu4_L1DoubleMu_++;
    else counter_cached_HLT_Mu4_L1DoubleMu_++;
    if (!loaded_HLT_Mu4_L1DoubleMu_) {
        if (!b_HLT_Mu4_L1DoubleMu_) throw std::runtime_error("HLT_Mu4_L1DoubleMu branch doesn't exist");
        b_HLT_Mu4_L1DoubleMu_->GetEntry(index);
        loaded_HLT_Mu4_L1DoubleMu_ = true;
    }
    return HLT_Mu4_L1DoubleMu_;
}
const bool &Nano::HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60() {
    if (!loaded_HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_) counter_uncached_HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_++;
    else counter_cached_HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_++;
    if (!loaded_HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_) {
        if (!b_HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_) throw std::runtime_error("HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60 branch doesn't exist");
        b_HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_->GetEntry(index);
        loaded_HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_ = true;
    }
    return HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_;
}
const bool &Nano::HLT_Mu50() {
    if (!loaded_HLT_Mu50_) counter_uncached_HLT_Mu50_++;
    else counter_cached_HLT_Mu50_++;
    if (!loaded_HLT_Mu50_) {
        if (!b_HLT_Mu50_) throw std::runtime_error("HLT_Mu50 branch doesn't exist");
        b_HLT_Mu50_->GetEntry(index);
        loaded_HLT_Mu50_ = true;
    }
    return HLT_Mu50_;
}
const bool &Nano::HLT_Mu50_IsoVVVL_PFHT400() {
    if (!loaded_HLT_Mu50_IsoVVVL_PFHT400_) counter_uncached_HLT_Mu50_IsoVVVL_PFHT400_++;
    else counter_cached_HLT_Mu50_IsoVVVL_PFHT400_++;
    if (!loaded_HLT_Mu50_IsoVVVL_PFHT400_) {
        if (!b_HLT_Mu50_IsoVVVL_PFHT400_) throw std::runtime_error("HLT_Mu50_IsoVVVL_PFHT400 branch doesn't exist");
        b_HLT_Mu50_IsoVVVL_PFHT400_->GetEntry(index);
        loaded_HLT_Mu50_IsoVVVL_PFHT400_ = true;
    }
    return HLT_Mu50_IsoVVVL_PFHT400_;
}
const bool &Nano::HLT_Mu50_IsoVVVL_PFHT450() {
    if (!loaded_HLT_Mu50_IsoVVVL_PFHT450_) counter_uncached_HLT_Mu50_IsoVVVL_PFHT450_++;
    else counter_cached_HLT_Mu50_IsoVVVL_PFHT450_++;
    if (!loaded_HLT_Mu50_IsoVVVL_PFHT450_) {
        if (!b_HLT_Mu50_IsoVVVL_PFHT450_) throw std::runtime_error("HLT_Mu50_IsoVVVL_PFHT450 branch doesn't exist");
        b_HLT_Mu50_IsoVVVL_PFHT450_->GetEntry(index);
        loaded_HLT_Mu50_IsoVVVL_PFHT450_ = true;
    }
    return HLT_Mu50_IsoVVVL_PFHT450_;
}
const bool &Nano::HLT_Mu50_L1SingleMuShower() {
    if (!loaded_HLT_Mu50_L1SingleMuShower_) counter_uncached_HLT_Mu50_L1SingleMuShower_++;
    else counter_cached_HLT_Mu50_L1SingleMuShower_++;
    if (!loaded_HLT_Mu50_L1SingleMuShower_) {
        if (!b_HLT_Mu50_L1SingleMuShower_) throw std::runtime_error("HLT_Mu50_L1SingleMuShower branch doesn't exist");
        b_HLT_Mu50_L1SingleMuShower_->GetEntry(index);
        loaded_HLT_Mu50_L1SingleMuShower_ = true;
    }
    return HLT_Mu50_L1SingleMuShower_;
}
const bool &Nano::HLT_Mu55() {
    if (!loaded_HLT_Mu55_) counter_uncached_HLT_Mu55_++;
    else counter_cached_HLT_Mu55_++;
    if (!loaded_HLT_Mu55_) {
        if (!b_HLT_Mu55_) throw std::runtime_error("HLT_Mu55 branch doesn't exist");
        b_HLT_Mu55_->GetEntry(index);
        loaded_HLT_Mu55_ = true;
    }
    return HLT_Mu55_;
}
const bool &Nano::HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5() {
    if (!loaded_HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5_) counter_uncached_HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5_++;
    else counter_cached_HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5_++;
    if (!loaded_HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5_) {
        if (!b_HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5_) throw std::runtime_error("HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5 branch doesn't exist");
        b_HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5_->GetEntry(index);
        loaded_HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5_ = true;
    }
    return HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5_;
}
const bool &Nano::HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose() {
    if (!loaded_HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_) counter_uncached_HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_++;
    else counter_cached_HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_++;
    if (!loaded_HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_) {
        if (!b_HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_) throw std::runtime_error("HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose branch doesn't exist");
        b_HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_->GetEntry(index);
        loaded_HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_ = true;
    }
    return HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_;
}
const bool &Nano::HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5() {
    if (!loaded_HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_) counter_uncached_HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_++;
    else counter_cached_HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_++;
    if (!loaded_HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_) {
        if (!b_HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_) throw std::runtime_error("HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5 branch doesn't exist");
        b_HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_->GetEntry(index);
        loaded_HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_ = true;
    }
    return HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_;
}
const bool &Nano::HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose() {
    if (!loaded_HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_) counter_uncached_HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_++;
    else counter_cached_HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_++;
    if (!loaded_HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_) {
        if (!b_HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_) throw std::runtime_error("HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose branch doesn't exist");
        b_HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_->GetEntry(index);
        loaded_HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_ = true;
    }
    return HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_;
}
const bool &Nano::HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5() {
    if (!loaded_HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_) counter_uncached_HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_++;
    else counter_cached_HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_++;
    if (!loaded_HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_) {
        if (!b_HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_) throw std::runtime_error("HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5 branch doesn't exist");
        b_HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_->GetEntry(index);
        loaded_HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_ = true;
    }
    return HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_;
}
const bool &Nano::HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose() {
    if (!loaded_HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_) counter_uncached_HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_++;
    else counter_cached_HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_++;
    if (!loaded_HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_) {
        if (!b_HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_) throw std::runtime_error("HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose branch doesn't exist");
        b_HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_->GetEntry(index);
        loaded_HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_ = true;
    }
    return HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_;
}
const bool &Nano::HLT_Mu6_PFHT200_PFMET100() {
    if (!loaded_HLT_Mu6_PFHT200_PFMET100_) counter_uncached_HLT_Mu6_PFHT200_PFMET100_++;
    else counter_cached_HLT_Mu6_PFHT200_PFMET100_++;
    if (!loaded_HLT_Mu6_PFHT200_PFMET100_) {
        if (!b_HLT_Mu6_PFHT200_PFMET100_) throw std::runtime_error("HLT_Mu6_PFHT200_PFMET100 branch doesn't exist");
        b_HLT_Mu6_PFHT200_PFMET100_->GetEntry(index);
        loaded_HLT_Mu6_PFHT200_PFMET100_ = true;
    }
    return HLT_Mu6_PFHT200_PFMET100_;
}
const bool &Nano::HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067() {
    if (!loaded_HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067_) counter_uncached_HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067_++;
    else counter_cached_HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067_++;
    if (!loaded_HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067_) {
        if (!b_HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067_) throw std::runtime_error("HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067 branch doesn't exist");
        b_HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067_->GetEntry(index);
        loaded_HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067_ = true;
    }
    return HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067_;
}
const bool &Nano::HLT_Mu7_IP4_ToCSCS() {
    if (!loaded_HLT_Mu7_IP4_ToCSCS_) counter_uncached_HLT_Mu7_IP4_ToCSCS_++;
    else counter_cached_HLT_Mu7_IP4_ToCSCS_++;
    if (!loaded_HLT_Mu7_IP4_ToCSCS_) {
        if (!b_HLT_Mu7_IP4_ToCSCS_) throw std::runtime_error("HLT_Mu7_IP4_ToCSCS branch doesn't exist");
        b_HLT_Mu7_IP4_ToCSCS_->GetEntry(index);
        loaded_HLT_Mu7_IP4_ToCSCS_ = true;
    }
    return HLT_Mu7_IP4_ToCSCS_;
}
const bool &Nano::HLT_Mu7_IP4_part0() {
    if (!loaded_HLT_Mu7_IP4_part0_) counter_uncached_HLT_Mu7_IP4_part0_++;
    else counter_cached_HLT_Mu7_IP4_part0_++;
    if (!loaded_HLT_Mu7_IP4_part0_) {
        if (!b_HLT_Mu7_IP4_part0_) throw std::runtime_error("HLT_Mu7_IP4_part0 branch doesn't exist");
        b_HLT_Mu7_IP4_part0_->GetEntry(index);
        loaded_HLT_Mu7_IP4_part0_ = true;
    }
    return HLT_Mu7_IP4_part0_;
}
const bool &Nano::HLT_Mu7_IP4_part1() {
    if (!loaded_HLT_Mu7_IP4_part1_) counter_uncached_HLT_Mu7_IP4_part1_++;
    else counter_cached_HLT_Mu7_IP4_part1_++;
    if (!loaded_HLT_Mu7_IP4_part1_) {
        if (!b_HLT_Mu7_IP4_part1_) throw std::runtime_error("HLT_Mu7_IP4_part1 branch doesn't exist");
        b_HLT_Mu7_IP4_part1_->GetEntry(index);
        loaded_HLT_Mu7_IP4_part1_ = true;
    }
    return HLT_Mu7_IP4_part1_;
}
const bool &Nano::HLT_Mu7_IP4_part2() {
    if (!loaded_HLT_Mu7_IP4_part2_) counter_uncached_HLT_Mu7_IP4_part2_++;
    else counter_cached_HLT_Mu7_IP4_part2_++;
    if (!loaded_HLT_Mu7_IP4_part2_) {
        if (!b_HLT_Mu7_IP4_part2_) throw std::runtime_error("HLT_Mu7_IP4_part2 branch doesn't exist");
        b_HLT_Mu7_IP4_part2_->GetEntry(index);
        loaded_HLT_Mu7_IP4_part2_ = true;
    }
    return HLT_Mu7_IP4_part2_;
}
const bool &Nano::HLT_Mu7_IP4_part3() {
    if (!loaded_HLT_Mu7_IP4_part3_) counter_uncached_HLT_Mu7_IP4_part3_++;
    else counter_cached_HLT_Mu7_IP4_part3_++;
    if (!loaded_HLT_Mu7_IP4_part3_) {
        if (!b_HLT_Mu7_IP4_part3_) throw std::runtime_error("HLT_Mu7_IP4_part3 branch doesn't exist");
        b_HLT_Mu7_IP4_part3_->GetEntry(index);
        loaded_HLT_Mu7_IP4_part3_ = true;
    }
    return HLT_Mu7_IP4_part3_;
}
const bool &Nano::HLT_Mu7_IP4_part4() {
    if (!loaded_HLT_Mu7_IP4_part4_) counter_uncached_HLT_Mu7_IP4_part4_++;
    else counter_cached_HLT_Mu7_IP4_part4_++;
    if (!loaded_HLT_Mu7_IP4_part4_) {
        if (!b_HLT_Mu7_IP4_part4_) throw std::runtime_error("HLT_Mu7_IP4_part4 branch doesn't exist");
        b_HLT_Mu7_IP4_part4_->GetEntry(index);
        loaded_HLT_Mu7_IP4_part4_ = true;
    }
    return HLT_Mu7_IP4_part4_;
}
const bool &Nano::HLT_Mu7p5_L2Mu2_Jpsi() {
    if (!loaded_HLT_Mu7p5_L2Mu2_Jpsi_) counter_uncached_HLT_Mu7p5_L2Mu2_Jpsi_++;
    else counter_cached_HLT_Mu7p5_L2Mu2_Jpsi_++;
    if (!loaded_HLT_Mu7p5_L2Mu2_Jpsi_) {
        if (!b_HLT_Mu7p5_L2Mu2_Jpsi_) throw std::runtime_error("HLT_Mu7p5_L2Mu2_Jpsi branch doesn't exist");
        b_HLT_Mu7p5_L2Mu2_Jpsi_->GetEntry(index);
        loaded_HLT_Mu7p5_L2Mu2_Jpsi_ = true;
    }
    return HLT_Mu7p5_L2Mu2_Jpsi_;
}
const bool &Nano::HLT_Mu7p5_L2Mu2_Upsilon() {
    if (!loaded_HLT_Mu7p5_L2Mu2_Upsilon_) counter_uncached_HLT_Mu7p5_L2Mu2_Upsilon_++;
    else counter_cached_HLT_Mu7p5_L2Mu2_Upsilon_++;
    if (!loaded_HLT_Mu7p5_L2Mu2_Upsilon_) {
        if (!b_HLT_Mu7p5_L2Mu2_Upsilon_) throw std::runtime_error("HLT_Mu7p5_L2Mu2_Upsilon branch doesn't exist");
        b_HLT_Mu7p5_L2Mu2_Upsilon_->GetEntry(index);
        loaded_HLT_Mu7p5_L2Mu2_Upsilon_ = true;
    }
    return HLT_Mu7p5_L2Mu2_Upsilon_;
}
const bool &Nano::HLT_Mu7p5_Track2_Jpsi() {
    if (!loaded_HLT_Mu7p5_Track2_Jpsi_) counter_uncached_HLT_Mu7p5_Track2_Jpsi_++;
    else counter_cached_HLT_Mu7p5_Track2_Jpsi_++;
    if (!loaded_HLT_Mu7p5_Track2_Jpsi_) {
        if (!b_HLT_Mu7p5_Track2_Jpsi_) throw std::runtime_error("HLT_Mu7p5_Track2_Jpsi branch doesn't exist");
        b_HLT_Mu7p5_Track2_Jpsi_->GetEntry(index);
        loaded_HLT_Mu7p5_Track2_Jpsi_ = true;
    }
    return HLT_Mu7p5_Track2_Jpsi_;
}
const bool &Nano::HLT_Mu7p5_Track2_Upsilon() {
    if (!loaded_HLT_Mu7p5_Track2_Upsilon_) counter_uncached_HLT_Mu7p5_Track2_Upsilon_++;
    else counter_cached_HLT_Mu7p5_Track2_Upsilon_++;
    if (!loaded_HLT_Mu7p5_Track2_Upsilon_) {
        if (!b_HLT_Mu7p5_Track2_Upsilon_) throw std::runtime_error("HLT_Mu7p5_Track2_Upsilon branch doesn't exist");
        b_HLT_Mu7p5_Track2_Upsilon_->GetEntry(index);
        loaded_HLT_Mu7p5_Track2_Upsilon_ = true;
    }
    return HLT_Mu7p5_Track2_Upsilon_;
}
const bool &Nano::HLT_Mu7p5_Track3p5_Jpsi() {
    if (!loaded_HLT_Mu7p5_Track3p5_Jpsi_) counter_uncached_HLT_Mu7p5_Track3p5_Jpsi_++;
    else counter_cached_HLT_Mu7p5_Track3p5_Jpsi_++;
    if (!loaded_HLT_Mu7p5_Track3p5_Jpsi_) {
        if (!b_HLT_Mu7p5_Track3p5_Jpsi_) throw std::runtime_error("HLT_Mu7p5_Track3p5_Jpsi branch doesn't exist");
        b_HLT_Mu7p5_Track3p5_Jpsi_->GetEntry(index);
        loaded_HLT_Mu7p5_Track3p5_Jpsi_ = true;
    }
    return HLT_Mu7p5_Track3p5_Jpsi_;
}
const bool &Nano::HLT_Mu7p5_Track3p5_Upsilon() {
    if (!loaded_HLT_Mu7p5_Track3p5_Upsilon_) counter_uncached_HLT_Mu7p5_Track3p5_Upsilon_++;
    else counter_cached_HLT_Mu7p5_Track3p5_Upsilon_++;
    if (!loaded_HLT_Mu7p5_Track3p5_Upsilon_) {
        if (!b_HLT_Mu7p5_Track3p5_Upsilon_) throw std::runtime_error("HLT_Mu7p5_Track3p5_Upsilon branch doesn't exist");
        b_HLT_Mu7p5_Track3p5_Upsilon_->GetEntry(index);
        loaded_HLT_Mu7p5_Track3p5_Upsilon_ = true;
    }
    return HLT_Mu7p5_Track3p5_Upsilon_;
}
const bool &Nano::HLT_Mu7p5_Track7_Jpsi() {
    if (!loaded_HLT_Mu7p5_Track7_Jpsi_) counter_uncached_HLT_Mu7p5_Track7_Jpsi_++;
    else counter_cached_HLT_Mu7p5_Track7_Jpsi_++;
    if (!loaded_HLT_Mu7p5_Track7_Jpsi_) {
        if (!b_HLT_Mu7p5_Track7_Jpsi_) throw std::runtime_error("HLT_Mu7p5_Track7_Jpsi branch doesn't exist");
        b_HLT_Mu7p5_Track7_Jpsi_->GetEntry(index);
        loaded_HLT_Mu7p5_Track7_Jpsi_ = true;
    }
    return HLT_Mu7p5_Track7_Jpsi_;
}
const bool &Nano::HLT_Mu7p5_Track7_Upsilon() {
    if (!loaded_HLT_Mu7p5_Track7_Upsilon_) counter_uncached_HLT_Mu7p5_Track7_Upsilon_++;
    else counter_cached_HLT_Mu7p5_Track7_Upsilon_++;
    if (!loaded_HLT_Mu7p5_Track7_Upsilon_) {
        if (!b_HLT_Mu7p5_Track7_Upsilon_) throw std::runtime_error("HLT_Mu7p5_Track7_Upsilon branch doesn't exist");
        b_HLT_Mu7p5_Track7_Upsilon_->GetEntry(index);
        loaded_HLT_Mu7p5_Track7_Upsilon_ = true;
    }
    return HLT_Mu7p5_Track7_Upsilon_;
}
const bool &Nano::HLT_Mu8() {
    if (!loaded_HLT_Mu8_) counter_uncached_HLT_Mu8_++;
    else counter_cached_HLT_Mu8_++;
    if (!loaded_HLT_Mu8_) {
        if (!b_HLT_Mu8_) throw std::runtime_error("HLT_Mu8 branch doesn't exist");
        b_HLT_Mu8_->GetEntry(index);
        loaded_HLT_Mu8_ = true;
    }
    return HLT_Mu8_;
}
const bool &Nano::HLT_Mu8_DiEle12_CaloIdL_TrackIdL() {
    if (!loaded_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_) counter_uncached_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_++;
    else counter_cached_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_++;
    if (!loaded_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_) {
        if (!b_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_) throw std::runtime_error("HLT_Mu8_DiEle12_CaloIdL_TrackIdL branch doesn't exist");
        b_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_->GetEntry(index);
        loaded_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_ = true;
    }
    return HLT_Mu8_DiEle12_CaloIdL_TrackIdL_;
}
const bool &Nano::HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ() {
    if (!loaded_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_) counter_uncached_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_++;
    else counter_cached_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_++;
    if (!loaded_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_) {
        if (!b_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_) throw std::runtime_error("HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ branch doesn't exist");
        b_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_->GetEntry(index);
        loaded_HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_ = true;
    }
    return HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_;
}
const bool &Nano::HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250() {
    if (!loaded_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250_) counter_uncached_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250_++;
    else counter_cached_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250_++;
    if (!loaded_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250_) {
        if (!b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250_) throw std::runtime_error("HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250 branch doesn't exist");
        b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250_->GetEntry(index);
        loaded_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250_ = true;
    }
    return HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250_;
}
const bool &Nano::HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300() {
    if (!loaded_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300_) counter_uncached_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300_++;
    else counter_cached_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300_++;
    if (!loaded_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300_) {
        if (!b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300_) throw std::runtime_error("HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300 branch doesn't exist");
        b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300_->GetEntry(index);
        loaded_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300_ = true;
    }
    return HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300_;
}
const bool &Nano::HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350() {
    if (!loaded_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_) counter_uncached_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_++;
    else counter_cached_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_++;
    if (!loaded_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_) {
        if (!b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_) throw std::runtime_error("HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350 branch doesn't exist");
        b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_->GetEntry(index);
        loaded_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_ = true;
    }
    return HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_;
}
const bool &Nano::HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ() {
    if (!loaded_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_) counter_uncached_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_++;
    else counter_cached_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_++;
    if (!loaded_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_) {
        if (!b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_) throw std::runtime_error("HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ branch doesn't exist");
        b_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_->GetEntry(index);
        loaded_HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_ = true;
    }
    return HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_;
}
const bool &Nano::HLT_Mu8_IP3_ToCSCS() {
    if (!loaded_HLT_Mu8_IP3_ToCSCS_) counter_uncached_HLT_Mu8_IP3_ToCSCS_++;
    else counter_cached_HLT_Mu8_IP3_ToCSCS_++;
    if (!loaded_HLT_Mu8_IP3_ToCSCS_) {
        if (!b_HLT_Mu8_IP3_ToCSCS_) throw std::runtime_error("HLT_Mu8_IP3_ToCSCS branch doesn't exist");
        b_HLT_Mu8_IP3_ToCSCS_->GetEntry(index);
        loaded_HLT_Mu8_IP3_ToCSCS_ = true;
    }
    return HLT_Mu8_IP3_ToCSCS_;
}
const bool &Nano::HLT_Mu8_IP3_part0() {
    if (!loaded_HLT_Mu8_IP3_part0_) counter_uncached_HLT_Mu8_IP3_part0_++;
    else counter_cached_HLT_Mu8_IP3_part0_++;
    if (!loaded_HLT_Mu8_IP3_part0_) {
        if (!b_HLT_Mu8_IP3_part0_) throw std::runtime_error("HLT_Mu8_IP3_part0 branch doesn't exist");
        b_HLT_Mu8_IP3_part0_->GetEntry(index);
        loaded_HLT_Mu8_IP3_part0_ = true;
    }
    return HLT_Mu8_IP3_part0_;
}
const bool &Nano::HLT_Mu8_IP3_part1() {
    if (!loaded_HLT_Mu8_IP3_part1_) counter_uncached_HLT_Mu8_IP3_part1_++;
    else counter_cached_HLT_Mu8_IP3_part1_++;
    if (!loaded_HLT_Mu8_IP3_part1_) {
        if (!b_HLT_Mu8_IP3_part1_) throw std::runtime_error("HLT_Mu8_IP3_part1 branch doesn't exist");
        b_HLT_Mu8_IP3_part1_->GetEntry(index);
        loaded_HLT_Mu8_IP3_part1_ = true;
    }
    return HLT_Mu8_IP3_part1_;
}
const bool &Nano::HLT_Mu8_IP3_part2() {
    if (!loaded_HLT_Mu8_IP3_part2_) counter_uncached_HLT_Mu8_IP3_part2_++;
    else counter_cached_HLT_Mu8_IP3_part2_++;
    if (!loaded_HLT_Mu8_IP3_part2_) {
        if (!b_HLT_Mu8_IP3_part2_) throw std::runtime_error("HLT_Mu8_IP3_part2 branch doesn't exist");
        b_HLT_Mu8_IP3_part2_->GetEntry(index);
        loaded_HLT_Mu8_IP3_part2_ = true;
    }
    return HLT_Mu8_IP3_part2_;
}
const bool &Nano::HLT_Mu8_IP3_part3() {
    if (!loaded_HLT_Mu8_IP3_part3_) counter_uncached_HLT_Mu8_IP3_part3_++;
    else counter_cached_HLT_Mu8_IP3_part3_++;
    if (!loaded_HLT_Mu8_IP3_part3_) {
        if (!b_HLT_Mu8_IP3_part3_) throw std::runtime_error("HLT_Mu8_IP3_part3 branch doesn't exist");
        b_HLT_Mu8_IP3_part3_->GetEntry(index);
        loaded_HLT_Mu8_IP3_part3_ = true;
    }
    return HLT_Mu8_IP3_part3_;
}
const bool &Nano::HLT_Mu8_IP3_part4() {
    if (!loaded_HLT_Mu8_IP3_part4_) counter_uncached_HLT_Mu8_IP3_part4_++;
    else counter_cached_HLT_Mu8_IP3_part4_++;
    if (!loaded_HLT_Mu8_IP3_part4_) {
        if (!b_HLT_Mu8_IP3_part4_) throw std::runtime_error("HLT_Mu8_IP3_part4 branch doesn't exist");
        b_HLT_Mu8_IP3_part4_->GetEntry(index);
        loaded_HLT_Mu8_IP3_part4_ = true;
    }
    return HLT_Mu8_IP3_part4_;
}
const bool &Nano::HLT_Mu8_IP3_part5() {
    if (!loaded_HLT_Mu8_IP3_part5_) counter_uncached_HLT_Mu8_IP3_part5_++;
    else counter_cached_HLT_Mu8_IP3_part5_++;
    if (!loaded_HLT_Mu8_IP3_part5_) {
        if (!b_HLT_Mu8_IP3_part5_) throw std::runtime_error("HLT_Mu8_IP3_part5 branch doesn't exist");
        b_HLT_Mu8_IP3_part5_->GetEntry(index);
        loaded_HLT_Mu8_IP3_part5_ = true;
    }
    return HLT_Mu8_IP3_part5_;
}
const bool &Nano::HLT_Mu8_IP5_ToCSCS() {
    if (!loaded_HLT_Mu8_IP5_ToCSCS_) counter_uncached_HLT_Mu8_IP5_ToCSCS_++;
    else counter_cached_HLT_Mu8_IP5_ToCSCS_++;
    if (!loaded_HLT_Mu8_IP5_ToCSCS_) {
        if (!b_HLT_Mu8_IP5_ToCSCS_) throw std::runtime_error("HLT_Mu8_IP5_ToCSCS branch doesn't exist");
        b_HLT_Mu8_IP5_ToCSCS_->GetEntry(index);
        loaded_HLT_Mu8_IP5_ToCSCS_ = true;
    }
    return HLT_Mu8_IP5_ToCSCS_;
}
const bool &Nano::HLT_Mu8_IP5_part0() {
    if (!loaded_HLT_Mu8_IP5_part0_) counter_uncached_HLT_Mu8_IP5_part0_++;
    else counter_cached_HLT_Mu8_IP5_part0_++;
    if (!loaded_HLT_Mu8_IP5_part0_) {
        if (!b_HLT_Mu8_IP5_part0_) throw std::runtime_error("HLT_Mu8_IP5_part0 branch doesn't exist");
        b_HLT_Mu8_IP5_part0_->GetEntry(index);
        loaded_HLT_Mu8_IP5_part0_ = true;
    }
    return HLT_Mu8_IP5_part0_;
}
const bool &Nano::HLT_Mu8_IP5_part1() {
    if (!loaded_HLT_Mu8_IP5_part1_) counter_uncached_HLT_Mu8_IP5_part1_++;
    else counter_cached_HLT_Mu8_IP5_part1_++;
    if (!loaded_HLT_Mu8_IP5_part1_) {
        if (!b_HLT_Mu8_IP5_part1_) throw std::runtime_error("HLT_Mu8_IP5_part1 branch doesn't exist");
        b_HLT_Mu8_IP5_part1_->GetEntry(index);
        loaded_HLT_Mu8_IP5_part1_ = true;
    }
    return HLT_Mu8_IP5_part1_;
}
const bool &Nano::HLT_Mu8_IP5_part2() {
    if (!loaded_HLT_Mu8_IP5_part2_) counter_uncached_HLT_Mu8_IP5_part2_++;
    else counter_cached_HLT_Mu8_IP5_part2_++;
    if (!loaded_HLT_Mu8_IP5_part2_) {
        if (!b_HLT_Mu8_IP5_part2_) throw std::runtime_error("HLT_Mu8_IP5_part2 branch doesn't exist");
        b_HLT_Mu8_IP5_part2_->GetEntry(index);
        loaded_HLT_Mu8_IP5_part2_ = true;
    }
    return HLT_Mu8_IP5_part2_;
}
const bool &Nano::HLT_Mu8_IP5_part3() {
    if (!loaded_HLT_Mu8_IP5_part3_) counter_uncached_HLT_Mu8_IP5_part3_++;
    else counter_cached_HLT_Mu8_IP5_part3_++;
    if (!loaded_HLT_Mu8_IP5_part3_) {
        if (!b_HLT_Mu8_IP5_part3_) throw std::runtime_error("HLT_Mu8_IP5_part3 branch doesn't exist");
        b_HLT_Mu8_IP5_part3_->GetEntry(index);
        loaded_HLT_Mu8_IP5_part3_ = true;
    }
    return HLT_Mu8_IP5_part3_;
}
const bool &Nano::HLT_Mu8_IP5_part4() {
    if (!loaded_HLT_Mu8_IP5_part4_) counter_uncached_HLT_Mu8_IP5_part4_++;
    else counter_cached_HLT_Mu8_IP5_part4_++;
    if (!loaded_HLT_Mu8_IP5_part4_) {
        if (!b_HLT_Mu8_IP5_part4_) throw std::runtime_error("HLT_Mu8_IP5_part4 branch doesn't exist");
        b_HLT_Mu8_IP5_part4_->GetEntry(index);
        loaded_HLT_Mu8_IP5_part4_ = true;
    }
    return HLT_Mu8_IP5_part4_;
}
const bool &Nano::HLT_Mu8_IP6_ToCSCS() {
    if (!loaded_HLT_Mu8_IP6_ToCSCS_) counter_uncached_HLT_Mu8_IP6_ToCSCS_++;
    else counter_cached_HLT_Mu8_IP6_ToCSCS_++;
    if (!loaded_HLT_Mu8_IP6_ToCSCS_) {
        if (!b_HLT_Mu8_IP6_ToCSCS_) throw std::runtime_error("HLT_Mu8_IP6_ToCSCS branch doesn't exist");
        b_HLT_Mu8_IP6_ToCSCS_->GetEntry(index);
        loaded_HLT_Mu8_IP6_ToCSCS_ = true;
    }
    return HLT_Mu8_IP6_ToCSCS_;
}
const bool &Nano::HLT_Mu8_IP6_part0() {
    if (!loaded_HLT_Mu8_IP6_part0_) counter_uncached_HLT_Mu8_IP6_part0_++;
    else counter_cached_HLT_Mu8_IP6_part0_++;
    if (!loaded_HLT_Mu8_IP6_part0_) {
        if (!b_HLT_Mu8_IP6_part0_) throw std::runtime_error("HLT_Mu8_IP6_part0 branch doesn't exist");
        b_HLT_Mu8_IP6_part0_->GetEntry(index);
        loaded_HLT_Mu8_IP6_part0_ = true;
    }
    return HLT_Mu8_IP6_part0_;
}
const bool &Nano::HLT_Mu8_IP6_part1() {
    if (!loaded_HLT_Mu8_IP6_part1_) counter_uncached_HLT_Mu8_IP6_part1_++;
    else counter_cached_HLT_Mu8_IP6_part1_++;
    if (!loaded_HLT_Mu8_IP6_part1_) {
        if (!b_HLT_Mu8_IP6_part1_) throw std::runtime_error("HLT_Mu8_IP6_part1 branch doesn't exist");
        b_HLT_Mu8_IP6_part1_->GetEntry(index);
        loaded_HLT_Mu8_IP6_part1_ = true;
    }
    return HLT_Mu8_IP6_part1_;
}
const bool &Nano::HLT_Mu8_IP6_part2() {
    if (!loaded_HLT_Mu8_IP6_part2_) counter_uncached_HLT_Mu8_IP6_part2_++;
    else counter_cached_HLT_Mu8_IP6_part2_++;
    if (!loaded_HLT_Mu8_IP6_part2_) {
        if (!b_HLT_Mu8_IP6_part2_) throw std::runtime_error("HLT_Mu8_IP6_part2 branch doesn't exist");
        b_HLT_Mu8_IP6_part2_->GetEntry(index);
        loaded_HLT_Mu8_IP6_part2_ = true;
    }
    return HLT_Mu8_IP6_part2_;
}
const bool &Nano::HLT_Mu8_IP6_part3() {
    if (!loaded_HLT_Mu8_IP6_part3_) counter_uncached_HLT_Mu8_IP6_part3_++;
    else counter_cached_HLT_Mu8_IP6_part3_++;
    if (!loaded_HLT_Mu8_IP6_part3_) {
        if (!b_HLT_Mu8_IP6_part3_) throw std::runtime_error("HLT_Mu8_IP6_part3 branch doesn't exist");
        b_HLT_Mu8_IP6_part3_->GetEntry(index);
        loaded_HLT_Mu8_IP6_part3_ = true;
    }
    return HLT_Mu8_IP6_part3_;
}
const bool &Nano::HLT_Mu8_IP6_part4() {
    if (!loaded_HLT_Mu8_IP6_part4_) counter_uncached_HLT_Mu8_IP6_part4_++;
    else counter_cached_HLT_Mu8_IP6_part4_++;
    if (!loaded_HLT_Mu8_IP6_part4_) {
        if (!b_HLT_Mu8_IP6_part4_) throw std::runtime_error("HLT_Mu8_IP6_part4 branch doesn't exist");
        b_HLT_Mu8_IP6_part4_->GetEntry(index);
        loaded_HLT_Mu8_IP6_part4_ = true;
    }
    return HLT_Mu8_IP6_part4_;
}
const bool &Nano::HLT_Mu8_TrkIsoVVL() {
    if (!loaded_HLT_Mu8_TrkIsoVVL_) counter_uncached_HLT_Mu8_TrkIsoVVL_++;
    else counter_cached_HLT_Mu8_TrkIsoVVL_++;
    if (!loaded_HLT_Mu8_TrkIsoVVL_) {
        if (!b_HLT_Mu8_TrkIsoVVL_) throw std::runtime_error("HLT_Mu8_TrkIsoVVL branch doesn't exist");
        b_HLT_Mu8_TrkIsoVVL_->GetEntry(index);
        loaded_HLT_Mu8_TrkIsoVVL_ = true;
    }
    return HLT_Mu8_TrkIsoVVL_;
}
const bool &Nano::HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60() {
    if (!loaded_HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_) counter_uncached_HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_++;
    else counter_cached_HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_++;
    if (!loaded_HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_) {
        if (!b_HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_) throw std::runtime_error("HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60 branch doesn't exist");
        b_HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_->GetEntry(index);
        loaded_HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_ = true;
    }
    return HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_;
}
const bool &Nano::HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL() {
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL_) counter_uncached_HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL_++;
    else counter_cached_HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL_++;
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL_) {
        if (!b_HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL_) throw std::runtime_error("HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL branch doesn't exist");
        b_HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL_->GetEntry(index);
        loaded_HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL_ = true;
    }
    return HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL_;
}
const bool &Nano::HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL() {
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_) counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_++;
    else counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_++;
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_) {
        if (!b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_) throw std::runtime_error("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL branch doesn't exist");
        b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_->GetEntry(index);
        loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_ = true;
    }
    return HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_;
}
const bool &Nano::HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ() {
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_) counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_++;
    else counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_++;
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_) {
        if (!b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_) throw std::runtime_error("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ branch doesn't exist");
        b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_->GetEntry(index);
        loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_ = true;
    }
    return HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_;
}
const bool &Nano::HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30() {
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_) counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_++;
    else counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_++;
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_) {
        if (!b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_) throw std::runtime_error("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30 branch doesn't exist");
        b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_->GetEntry(index);
        loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_ = true;
    }
    return HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_;
}
const bool &Nano::HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5() {
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_) counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_++;
    else counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_++;
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_) {
        if (!b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_) throw std::runtime_error("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5 branch doesn't exist");
        b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_->GetEntry(index);
        loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_ = true;
    }
    return HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_;
}
const bool &Nano::HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30() {
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_) counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_++;
    else counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_++;
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_) {
        if (!b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_) throw std::runtime_error("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30 branch doesn't exist");
        b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_->GetEntry(index);
        loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_ = true;
    }
    return HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_;
}
const bool &Nano::HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65() {
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_) counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_++;
    else counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_++;
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_) {
        if (!b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_) throw std::runtime_error("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65 branch doesn't exist");
        b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_->GetEntry(index);
        loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_ = true;
    }
    return HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_;
}
const bool &Nano::HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5() {
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_) counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_++;
    else counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_++;
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_) {
        if (!b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_) throw std::runtime_error("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5 branch doesn't exist");
        b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_->GetEntry(index);
        loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_ = true;
    }
    return HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_;
}
const bool &Nano::HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5() {
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_) counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_++;
    else counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_++;
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_) {
        if (!b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_) throw std::runtime_error("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5 branch doesn't exist");
        b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_->GetEntry(index);
        loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_ = true;
    }
    return HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_;
}
const bool &Nano::HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30() {
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_) counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_++;
    else counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_++;
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_) {
        if (!b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_) throw std::runtime_error("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30 branch doesn't exist");
        b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_->GetEntry(index);
        loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_ = true;
    }
    return HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_;
}
const bool &Nano::HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65() {
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_) counter_uncached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_++;
    else counter_cached_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_++;
    if (!loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_) {
        if (!b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_) throw std::runtime_error("HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65 branch doesn't exist");
        b_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_->GetEntry(index);
        loaded_HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_ = true;
    }
    return HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_;
}
const bool &Nano::HLT_Mu8p5_IP3p5_part0() {
    if (!loaded_HLT_Mu8p5_IP3p5_part0_) counter_uncached_HLT_Mu8p5_IP3p5_part0_++;
    else counter_cached_HLT_Mu8p5_IP3p5_part0_++;
    if (!loaded_HLT_Mu8p5_IP3p5_part0_) {
        if (!b_HLT_Mu8p5_IP3p5_part0_) throw std::runtime_error("HLT_Mu8p5_IP3p5_part0 branch doesn't exist");
        b_HLT_Mu8p5_IP3p5_part0_->GetEntry(index);
        loaded_HLT_Mu8p5_IP3p5_part0_ = true;
    }
    return HLT_Mu8p5_IP3p5_part0_;
}
const bool &Nano::HLT_Mu8p5_IP3p5_part1() {
    if (!loaded_HLT_Mu8p5_IP3p5_part1_) counter_uncached_HLT_Mu8p5_IP3p5_part1_++;
    else counter_cached_HLT_Mu8p5_IP3p5_part1_++;
    if (!loaded_HLT_Mu8p5_IP3p5_part1_) {
        if (!b_HLT_Mu8p5_IP3p5_part1_) throw std::runtime_error("HLT_Mu8p5_IP3p5_part1 branch doesn't exist");
        b_HLT_Mu8p5_IP3p5_part1_->GetEntry(index);
        loaded_HLT_Mu8p5_IP3p5_part1_ = true;
    }
    return HLT_Mu8p5_IP3p5_part1_;
}
const bool &Nano::HLT_Mu8p5_IP3p5_part2() {
    if (!loaded_HLT_Mu8p5_IP3p5_part2_) counter_uncached_HLT_Mu8p5_IP3p5_part2_++;
    else counter_cached_HLT_Mu8p5_IP3p5_part2_++;
    if (!loaded_HLT_Mu8p5_IP3p5_part2_) {
        if (!b_HLT_Mu8p5_IP3p5_part2_) throw std::runtime_error("HLT_Mu8p5_IP3p5_part2 branch doesn't exist");
        b_HLT_Mu8p5_IP3p5_part2_->GetEntry(index);
        loaded_HLT_Mu8p5_IP3p5_part2_ = true;
    }
    return HLT_Mu8p5_IP3p5_part2_;
}
const bool &Nano::HLT_Mu8p5_IP3p5_part3() {
    if (!loaded_HLT_Mu8p5_IP3p5_part3_) counter_uncached_HLT_Mu8p5_IP3p5_part3_++;
    else counter_cached_HLT_Mu8p5_IP3p5_part3_++;
    if (!loaded_HLT_Mu8p5_IP3p5_part3_) {
        if (!b_HLT_Mu8p5_IP3p5_part3_) throw std::runtime_error("HLT_Mu8p5_IP3p5_part3 branch doesn't exist");
        b_HLT_Mu8p5_IP3p5_part3_->GetEntry(index);
        loaded_HLT_Mu8p5_IP3p5_part3_ = true;
    }
    return HLT_Mu8p5_IP3p5_part3_;
}
const bool &Nano::HLT_Mu8p5_IP3p5_part4() {
    if (!loaded_HLT_Mu8p5_IP3p5_part4_) counter_uncached_HLT_Mu8p5_IP3p5_part4_++;
    else counter_cached_HLT_Mu8p5_IP3p5_part4_++;
    if (!loaded_HLT_Mu8p5_IP3p5_part4_) {
        if (!b_HLT_Mu8p5_IP3p5_part4_) throw std::runtime_error("HLT_Mu8p5_IP3p5_part4 branch doesn't exist");
        b_HLT_Mu8p5_IP3p5_part4_->GetEntry(index);
        loaded_HLT_Mu8p5_IP3p5_part4_ = true;
    }
    return HLT_Mu8p5_IP3p5_part4_;
}
const bool &Nano::HLT_Mu8p5_IP3p5_part5() {
    if (!loaded_HLT_Mu8p5_IP3p5_part5_) counter_uncached_HLT_Mu8p5_IP3p5_part5_++;
    else counter_cached_HLT_Mu8p5_IP3p5_part5_++;
    if (!loaded_HLT_Mu8p5_IP3p5_part5_) {
        if (!b_HLT_Mu8p5_IP3p5_part5_) throw std::runtime_error("HLT_Mu8p5_IP3p5_part5 branch doesn't exist");
        b_HLT_Mu8p5_IP3p5_part5_->GetEntry(index);
        loaded_HLT_Mu8p5_IP3p5_part5_ = true;
    }
    return HLT_Mu8p5_IP3p5_part5_;
}
const bool &Nano::HLT_Mu9_IP0_part0() {
    if (!loaded_HLT_Mu9_IP0_part0_) counter_uncached_HLT_Mu9_IP0_part0_++;
    else counter_cached_HLT_Mu9_IP0_part0_++;
    if (!loaded_HLT_Mu9_IP0_part0_) {
        if (!b_HLT_Mu9_IP0_part0_) throw std::runtime_error("HLT_Mu9_IP0_part0 branch doesn't exist");
        b_HLT_Mu9_IP0_part0_->GetEntry(index);
        loaded_HLT_Mu9_IP0_part0_ = true;
    }
    return HLT_Mu9_IP0_part0_;
}
const bool &Nano::HLT_Mu9_IP3_part0() {
    if (!loaded_HLT_Mu9_IP3_part0_) counter_uncached_HLT_Mu9_IP3_part0_++;
    else counter_cached_HLT_Mu9_IP3_part0_++;
    if (!loaded_HLT_Mu9_IP3_part0_) {
        if (!b_HLT_Mu9_IP3_part0_) throw std::runtime_error("HLT_Mu9_IP3_part0 branch doesn't exist");
        b_HLT_Mu9_IP3_part0_->GetEntry(index);
        loaded_HLT_Mu9_IP3_part0_ = true;
    }
    return HLT_Mu9_IP3_part0_;
}
const bool &Nano::HLT_Mu9_IP4_ToCSCS() {
    if (!loaded_HLT_Mu9_IP4_ToCSCS_) counter_uncached_HLT_Mu9_IP4_ToCSCS_++;
    else counter_cached_HLT_Mu9_IP4_ToCSCS_++;
    if (!loaded_HLT_Mu9_IP4_ToCSCS_) {
        if (!b_HLT_Mu9_IP4_ToCSCS_) throw std::runtime_error("HLT_Mu9_IP4_ToCSCS branch doesn't exist");
        b_HLT_Mu9_IP4_ToCSCS_->GetEntry(index);
        loaded_HLT_Mu9_IP4_ToCSCS_ = true;
    }
    return HLT_Mu9_IP4_ToCSCS_;
}
const bool &Nano::HLT_Mu9_IP4_part0() {
    if (!loaded_HLT_Mu9_IP4_part0_) counter_uncached_HLT_Mu9_IP4_part0_++;
    else counter_cached_HLT_Mu9_IP4_part0_++;
    if (!loaded_HLT_Mu9_IP4_part0_) {
        if (!b_HLT_Mu9_IP4_part0_) throw std::runtime_error("HLT_Mu9_IP4_part0 branch doesn't exist");
        b_HLT_Mu9_IP4_part0_->GetEntry(index);
        loaded_HLT_Mu9_IP4_part0_ = true;
    }
    return HLT_Mu9_IP4_part0_;
}
const bool &Nano::HLT_Mu9_IP4_part1() {
    if (!loaded_HLT_Mu9_IP4_part1_) counter_uncached_HLT_Mu9_IP4_part1_++;
    else counter_cached_HLT_Mu9_IP4_part1_++;
    if (!loaded_HLT_Mu9_IP4_part1_) {
        if (!b_HLT_Mu9_IP4_part1_) throw std::runtime_error("HLT_Mu9_IP4_part1 branch doesn't exist");
        b_HLT_Mu9_IP4_part1_->GetEntry(index);
        loaded_HLT_Mu9_IP4_part1_ = true;
    }
    return HLT_Mu9_IP4_part1_;
}
const bool &Nano::HLT_Mu9_IP4_part2() {
    if (!loaded_HLT_Mu9_IP4_part2_) counter_uncached_HLT_Mu9_IP4_part2_++;
    else counter_cached_HLT_Mu9_IP4_part2_++;
    if (!loaded_HLT_Mu9_IP4_part2_) {
        if (!b_HLT_Mu9_IP4_part2_) throw std::runtime_error("HLT_Mu9_IP4_part2 branch doesn't exist");
        b_HLT_Mu9_IP4_part2_->GetEntry(index);
        loaded_HLT_Mu9_IP4_part2_ = true;
    }
    return HLT_Mu9_IP4_part2_;
}
const bool &Nano::HLT_Mu9_IP4_part3() {
    if (!loaded_HLT_Mu9_IP4_part3_) counter_uncached_HLT_Mu9_IP4_part3_++;
    else counter_cached_HLT_Mu9_IP4_part3_++;
    if (!loaded_HLT_Mu9_IP4_part3_) {
        if (!b_HLT_Mu9_IP4_part3_) throw std::runtime_error("HLT_Mu9_IP4_part3 branch doesn't exist");
        b_HLT_Mu9_IP4_part3_->GetEntry(index);
        loaded_HLT_Mu9_IP4_part3_ = true;
    }
    return HLT_Mu9_IP4_part3_;
}
const bool &Nano::HLT_Mu9_IP4_part4() {
    if (!loaded_HLT_Mu9_IP4_part4_) counter_uncached_HLT_Mu9_IP4_part4_++;
    else counter_cached_HLT_Mu9_IP4_part4_++;
    if (!loaded_HLT_Mu9_IP4_part4_) {
        if (!b_HLT_Mu9_IP4_part4_) throw std::runtime_error("HLT_Mu9_IP4_part4 branch doesn't exist");
        b_HLT_Mu9_IP4_part4_->GetEntry(index);
        loaded_HLT_Mu9_IP4_part4_ = true;
    }
    return HLT_Mu9_IP4_part4_;
}
const bool &Nano::HLT_Mu9_IP5_ToCSCS() {
    if (!loaded_HLT_Mu9_IP5_ToCSCS_) counter_uncached_HLT_Mu9_IP5_ToCSCS_++;
    else counter_cached_HLT_Mu9_IP5_ToCSCS_++;
    if (!loaded_HLT_Mu9_IP5_ToCSCS_) {
        if (!b_HLT_Mu9_IP5_ToCSCS_) throw std::runtime_error("HLT_Mu9_IP5_ToCSCS branch doesn't exist");
        b_HLT_Mu9_IP5_ToCSCS_->GetEntry(index);
        loaded_HLT_Mu9_IP5_ToCSCS_ = true;
    }
    return HLT_Mu9_IP5_ToCSCS_;
}
const bool &Nano::HLT_Mu9_IP5_part0() {
    if (!loaded_HLT_Mu9_IP5_part0_) counter_uncached_HLT_Mu9_IP5_part0_++;
    else counter_cached_HLT_Mu9_IP5_part0_++;
    if (!loaded_HLT_Mu9_IP5_part0_) {
        if (!b_HLT_Mu9_IP5_part0_) throw std::runtime_error("HLT_Mu9_IP5_part0 branch doesn't exist");
        b_HLT_Mu9_IP5_part0_->GetEntry(index);
        loaded_HLT_Mu9_IP5_part0_ = true;
    }
    return HLT_Mu9_IP5_part0_;
}
const bool &Nano::HLT_Mu9_IP5_part1() {
    if (!loaded_HLT_Mu9_IP5_part1_) counter_uncached_HLT_Mu9_IP5_part1_++;
    else counter_cached_HLT_Mu9_IP5_part1_++;
    if (!loaded_HLT_Mu9_IP5_part1_) {
        if (!b_HLT_Mu9_IP5_part1_) throw std::runtime_error("HLT_Mu9_IP5_part1 branch doesn't exist");
        b_HLT_Mu9_IP5_part1_->GetEntry(index);
        loaded_HLT_Mu9_IP5_part1_ = true;
    }
    return HLT_Mu9_IP5_part1_;
}
const bool &Nano::HLT_Mu9_IP5_part2() {
    if (!loaded_HLT_Mu9_IP5_part2_) counter_uncached_HLT_Mu9_IP5_part2_++;
    else counter_cached_HLT_Mu9_IP5_part2_++;
    if (!loaded_HLT_Mu9_IP5_part2_) {
        if (!b_HLT_Mu9_IP5_part2_) throw std::runtime_error("HLT_Mu9_IP5_part2 branch doesn't exist");
        b_HLT_Mu9_IP5_part2_->GetEntry(index);
        loaded_HLT_Mu9_IP5_part2_ = true;
    }
    return HLT_Mu9_IP5_part2_;
}
const bool &Nano::HLT_Mu9_IP5_part3() {
    if (!loaded_HLT_Mu9_IP5_part3_) counter_uncached_HLT_Mu9_IP5_part3_++;
    else counter_cached_HLT_Mu9_IP5_part3_++;
    if (!loaded_HLT_Mu9_IP5_part3_) {
        if (!b_HLT_Mu9_IP5_part3_) throw std::runtime_error("HLT_Mu9_IP5_part3 branch doesn't exist");
        b_HLT_Mu9_IP5_part3_->GetEntry(index);
        loaded_HLT_Mu9_IP5_part3_ = true;
    }
    return HLT_Mu9_IP5_part3_;
}
const bool &Nano::HLT_Mu9_IP5_part4() {
    if (!loaded_HLT_Mu9_IP5_part4_) counter_uncached_HLT_Mu9_IP5_part4_++;
    else counter_cached_HLT_Mu9_IP5_part4_++;
    if (!loaded_HLT_Mu9_IP5_part4_) {
        if (!b_HLT_Mu9_IP5_part4_) throw std::runtime_error("HLT_Mu9_IP5_part4 branch doesn't exist");
        b_HLT_Mu9_IP5_part4_->GetEntry(index);
        loaded_HLT_Mu9_IP5_part4_ = true;
    }
    return HLT_Mu9_IP5_part4_;
}
const bool &Nano::HLT_Mu9_IP6_ToCSCS() {
    if (!loaded_HLT_Mu9_IP6_ToCSCS_) counter_uncached_HLT_Mu9_IP6_ToCSCS_++;
    else counter_cached_HLT_Mu9_IP6_ToCSCS_++;
    if (!loaded_HLT_Mu9_IP6_ToCSCS_) {
        if (!b_HLT_Mu9_IP6_ToCSCS_) throw std::runtime_error("HLT_Mu9_IP6_ToCSCS branch doesn't exist");
        b_HLT_Mu9_IP6_ToCSCS_->GetEntry(index);
        loaded_HLT_Mu9_IP6_ToCSCS_ = true;
    }
    return HLT_Mu9_IP6_ToCSCS_;
}
const bool &Nano::HLT_Mu9_IP6_part0() {
    if (!loaded_HLT_Mu9_IP6_part0_) counter_uncached_HLT_Mu9_IP6_part0_++;
    else counter_cached_HLT_Mu9_IP6_part0_++;
    if (!loaded_HLT_Mu9_IP6_part0_) {
        if (!b_HLT_Mu9_IP6_part0_) throw std::runtime_error("HLT_Mu9_IP6_part0 branch doesn't exist");
        b_HLT_Mu9_IP6_part0_->GetEntry(index);
        loaded_HLT_Mu9_IP6_part0_ = true;
    }
    return HLT_Mu9_IP6_part0_;
}
const bool &Nano::HLT_Mu9_IP6_part1() {
    if (!loaded_HLT_Mu9_IP6_part1_) counter_uncached_HLT_Mu9_IP6_part1_++;
    else counter_cached_HLT_Mu9_IP6_part1_++;
    if (!loaded_HLT_Mu9_IP6_part1_) {
        if (!b_HLT_Mu9_IP6_part1_) throw std::runtime_error("HLT_Mu9_IP6_part1 branch doesn't exist");
        b_HLT_Mu9_IP6_part1_->GetEntry(index);
        loaded_HLT_Mu9_IP6_part1_ = true;
    }
    return HLT_Mu9_IP6_part1_;
}
const bool &Nano::HLT_Mu9_IP6_part2() {
    if (!loaded_HLT_Mu9_IP6_part2_) counter_uncached_HLT_Mu9_IP6_part2_++;
    else counter_cached_HLT_Mu9_IP6_part2_++;
    if (!loaded_HLT_Mu9_IP6_part2_) {
        if (!b_HLT_Mu9_IP6_part2_) throw std::runtime_error("HLT_Mu9_IP6_part2 branch doesn't exist");
        b_HLT_Mu9_IP6_part2_->GetEntry(index);
        loaded_HLT_Mu9_IP6_part2_ = true;
    }
    return HLT_Mu9_IP6_part2_;
}
const bool &Nano::HLT_Mu9_IP6_part3() {
    if (!loaded_HLT_Mu9_IP6_part3_) counter_uncached_HLT_Mu9_IP6_part3_++;
    else counter_cached_HLT_Mu9_IP6_part3_++;
    if (!loaded_HLT_Mu9_IP6_part3_) {
        if (!b_HLT_Mu9_IP6_part3_) throw std::runtime_error("HLT_Mu9_IP6_part3 branch doesn't exist");
        b_HLT_Mu9_IP6_part3_->GetEntry(index);
        loaded_HLT_Mu9_IP6_part3_ = true;
    }
    return HLT_Mu9_IP6_part3_;
}
const bool &Nano::HLT_Mu9_IP6_part4() {
    if (!loaded_HLT_Mu9_IP6_part4_) counter_uncached_HLT_Mu9_IP6_part4_++;
    else counter_cached_HLT_Mu9_IP6_part4_++;
    if (!loaded_HLT_Mu9_IP6_part4_) {
        if (!b_HLT_Mu9_IP6_part4_) throw std::runtime_error("HLT_Mu9_IP6_part4 branch doesn't exist");
        b_HLT_Mu9_IP6_part4_->GetEntry(index);
        loaded_HLT_Mu9_IP6_part4_ = true;
    }
    return HLT_Mu9_IP6_part4_;
}
const bool &Nano::HLT_Mu9_IP6_part5() {
    if (!loaded_HLT_Mu9_IP6_part5_) counter_uncached_HLT_Mu9_IP6_part5_++;
    else counter_cached_HLT_Mu9_IP6_part5_++;
    if (!loaded_HLT_Mu9_IP6_part5_) {
        if (!b_HLT_Mu9_IP6_part5_) throw std::runtime_error("HLT_Mu9_IP6_part5 branch doesn't exist");
        b_HLT_Mu9_IP6_part5_->GetEntry(index);
        loaded_HLT_Mu9_IP6_part5_ = true;
    }
    return HLT_Mu9_IP6_part5_;
}
const bool &Nano::HLT_OldMu100() {
    if (!loaded_HLT_OldMu100_) counter_uncached_HLT_OldMu100_++;
    else counter_cached_HLT_OldMu100_++;
    if (!loaded_HLT_OldMu100_) {
        if (!b_HLT_OldMu100_) throw std::runtime_error("HLT_OldMu100 branch doesn't exist");
        b_HLT_OldMu100_->GetEntry(index);
        loaded_HLT_OldMu100_ = true;
    }
    return HLT_OldMu100_;
}
const bool &Nano::HLT_OnlineMonitorGroup() {
    if (!loaded_HLT_OnlineMonitorGroup_) counter_uncached_HLT_OnlineMonitorGroup_++;
    else counter_cached_HLT_OnlineMonitorGroup_++;
    if (!loaded_HLT_OnlineMonitorGroup_) {
        if (!b_HLT_OnlineMonitorGroup_) throw std::runtime_error("HLT_OnlineMonitorGroup branch doesn't exist");
        b_HLT_OnlineMonitorGroup_->GetEntry(index);
        loaded_HLT_OnlineMonitorGroup_ = true;
    }
    return HLT_OnlineMonitorGroup_;
}
const bool &Nano::HLT_PFHT1050() {
    if (!loaded_HLT_PFHT1050_) counter_uncached_HLT_PFHT1050_++;
    else counter_cached_HLT_PFHT1050_++;
    if (!loaded_HLT_PFHT1050_) {
        if (!b_HLT_PFHT1050_) throw std::runtime_error("HLT_PFHT1050 branch doesn't exist");
        b_HLT_PFHT1050_->GetEntry(index);
        loaded_HLT_PFHT1050_ = true;
    }
    return HLT_PFHT1050_;
}
const bool &Nano::HLT_PFHT125() {
    if (!loaded_HLT_PFHT125_) counter_uncached_HLT_PFHT125_++;
    else counter_cached_HLT_PFHT125_++;
    if (!loaded_HLT_PFHT125_) {
        if (!b_HLT_PFHT125_) throw std::runtime_error("HLT_PFHT125 branch doesn't exist");
        b_HLT_PFHT125_->GetEntry(index);
        loaded_HLT_PFHT125_ = true;
    }
    return HLT_PFHT125_;
}
const bool &Nano::HLT_PFHT180() {
    if (!loaded_HLT_PFHT180_) counter_uncached_HLT_PFHT180_++;
    else counter_cached_HLT_PFHT180_++;
    if (!loaded_HLT_PFHT180_) {
        if (!b_HLT_PFHT180_) throw std::runtime_error("HLT_PFHT180 branch doesn't exist");
        b_HLT_PFHT180_->GetEntry(index);
        loaded_HLT_PFHT180_ = true;
    }
    return HLT_PFHT180_;
}
const bool &Nano::HLT_PFHT200() {
    if (!loaded_HLT_PFHT200_) counter_uncached_HLT_PFHT200_++;
    else counter_cached_HLT_PFHT200_++;
    if (!loaded_HLT_PFHT200_) {
        if (!b_HLT_PFHT200_) throw std::runtime_error("HLT_PFHT200 branch doesn't exist");
        b_HLT_PFHT200_->GetEntry(index);
        loaded_HLT_PFHT200_ = true;
    }
    return HLT_PFHT200_;
}
const bool &Nano::HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57() {
    if (!loaded_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57_) counter_uncached_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57_++;
    else counter_cached_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57_++;
    if (!loaded_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57_) {
        if (!b_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57_) throw std::runtime_error("HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57 branch doesn't exist");
        b_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57_->GetEntry(index);
        loaded_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57_ = true;
    }
    return HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57_;
}
const bool &Nano::HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63() {
    if (!loaded_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63_) counter_uncached_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63_++;
    else counter_cached_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63_++;
    if (!loaded_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63_) {
        if (!b_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63_) throw std::runtime_error("HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63 branch doesn't exist");
        b_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63_->GetEntry(index);
        loaded_HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63_ = true;
    }
    return HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63_;
}
const bool &Nano::HLT_PFHT200_PFAlphaT0p51() {
    if (!loaded_HLT_PFHT200_PFAlphaT0p51_) counter_uncached_HLT_PFHT200_PFAlphaT0p51_++;
    else counter_cached_HLT_PFHT200_PFAlphaT0p51_++;
    if (!loaded_HLT_PFHT200_PFAlphaT0p51_) {
        if (!b_HLT_PFHT200_PFAlphaT0p51_) throw std::runtime_error("HLT_PFHT200_PFAlphaT0p51 branch doesn't exist");
        b_HLT_PFHT200_PFAlphaT0p51_->GetEntry(index);
        loaded_HLT_PFHT200_PFAlphaT0p51_ = true;
    }
    return HLT_PFHT200_PFAlphaT0p51_;
}
const bool &Nano::HLT_PFHT250() {
    if (!loaded_HLT_PFHT250_) counter_uncached_HLT_PFHT250_++;
    else counter_cached_HLT_PFHT250_++;
    if (!loaded_HLT_PFHT250_) {
        if (!b_HLT_PFHT250_) throw std::runtime_error("HLT_PFHT250 branch doesn't exist");
        b_HLT_PFHT250_->GetEntry(index);
        loaded_HLT_PFHT250_ = true;
    }
    return HLT_PFHT250_;
}
const bool &Nano::HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55() {
    if (!loaded_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55_) counter_uncached_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55_++;
    else counter_cached_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55_++;
    if (!loaded_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55_) {
        if (!b_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55_) throw std::runtime_error("HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55 branch doesn't exist");
        b_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55_->GetEntry(index);
        loaded_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55_ = true;
    }
    return HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55_;
}
const bool &Nano::HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58() {
    if (!loaded_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58_) counter_uncached_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58_++;
    else counter_cached_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58_++;
    if (!loaded_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58_) {
        if (!b_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58_) throw std::runtime_error("HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58 branch doesn't exist");
        b_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58_->GetEntry(index);
        loaded_HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58_ = true;
    }
    return HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58_;
}
const bool &Nano::HLT_PFHT300() {
    if (!loaded_HLT_PFHT300_) counter_uncached_HLT_PFHT300_++;
    else counter_cached_HLT_PFHT300_++;
    if (!loaded_HLT_PFHT300_) {
        if (!b_HLT_PFHT300_) throw std::runtime_error("HLT_PFHT300 branch doesn't exist");
        b_HLT_PFHT300_->GetEntry(index);
        loaded_HLT_PFHT300_ = true;
    }
    return HLT_PFHT300_;
}
const bool &Nano::HLT_PFHT300PT30_QuadPFJet_75_60_45_40() {
    if (!loaded_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_) counter_uncached_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_++;
    else counter_cached_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_++;
    if (!loaded_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_) {
        if (!b_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_) throw std::runtime_error("HLT_PFHT300PT30_QuadPFJet_75_60_45_40 branch doesn't exist");
        b_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_->GetEntry(index);
        loaded_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_ = true;
    }
    return HLT_PFHT300PT30_QuadPFJet_75_60_45_40_;
}
const bool &Nano::HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0() {
    if (!loaded_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0_) counter_uncached_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0_++;
    else counter_cached_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0_++;
    if (!loaded_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0_) {
        if (!b_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0_) throw std::runtime_error("HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0 branch doesn't exist");
        b_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0_->GetEntry(index);
        loaded_HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0_ = true;
    }
    return HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0_;
}
const bool &Nano::HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53() {
    if (!loaded_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53_) counter_uncached_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53_++;
    else counter_cached_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53_++;
    if (!loaded_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53_) {
        if (!b_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53_) throw std::runtime_error("HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53 branch doesn't exist");
        b_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53_->GetEntry(index);
        loaded_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53_ = true;
    }
    return HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53_;
}
const bool &Nano::HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54() {
    if (!loaded_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54_) counter_uncached_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54_++;
    else counter_cached_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54_++;
    if (!loaded_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54_) {
        if (!b_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54_) throw std::runtime_error("HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54 branch doesn't exist");
        b_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54_->GetEntry(index);
        loaded_HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54_ = true;
    }
    return HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54_;
}
const bool &Nano::HLT_PFHT300_PFMET100() {
    if (!loaded_HLT_PFHT300_PFMET100_) counter_uncached_HLT_PFHT300_PFMET100_++;
    else counter_cached_HLT_PFHT300_PFMET100_++;
    if (!loaded_HLT_PFHT300_PFMET100_) {
        if (!b_HLT_PFHT300_PFMET100_) throw std::runtime_error("HLT_PFHT300_PFMET100 branch doesn't exist");
        b_HLT_PFHT300_PFMET100_->GetEntry(index);
        loaded_HLT_PFHT300_PFMET100_ = true;
    }
    return HLT_PFHT300_PFMET100_;
}
const bool &Nano::HLT_PFHT300_PFMET110() {
    if (!loaded_HLT_PFHT300_PFMET110_) counter_uncached_HLT_PFHT300_PFMET110_++;
    else counter_cached_HLT_PFHT300_PFMET110_++;
    if (!loaded_HLT_PFHT300_PFMET110_) {
        if (!b_HLT_PFHT300_PFMET110_) throw std::runtime_error("HLT_PFHT300_PFMET110 branch doesn't exist");
        b_HLT_PFHT300_PFMET110_->GetEntry(index);
        loaded_HLT_PFHT300_PFMET110_ = true;
    }
    return HLT_PFHT300_PFMET110_;
}
const bool &Nano::HLT_PFHT330PT30_QuadPFJet_75_60_45_40() {
    if (!loaded_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_) counter_uncached_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_++;
    else counter_cached_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_++;
    if (!loaded_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_) {
        if (!b_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_) throw std::runtime_error("HLT_PFHT330PT30_QuadPFJet_75_60_45_40 branch doesn't exist");
        b_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_->GetEntry(index);
        loaded_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_ = true;
    }
    return HLT_PFHT330PT30_QuadPFJet_75_60_45_40_;
}
const bool &Nano::HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5() {
    if (!loaded_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_) counter_uncached_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_++;
    else counter_cached_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_++;
    if (!loaded_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_) {
        if (!b_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_) throw std::runtime_error("HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5 branch doesn't exist");
        b_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_->GetEntry(index);
        loaded_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_ = true;
    }
    return HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_;
}
const bool &Nano::HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5() {
    if (!loaded_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_) counter_uncached_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_++;
    else counter_cached_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_++;
    if (!loaded_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_) {
        if (!b_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_) throw std::runtime_error("HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5 branch doesn't exist");
        b_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_->GetEntry(index);
        loaded_HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_ = true;
    }
    return HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_;
}
const bool &Nano::HLT_PFHT350() {
    if (!loaded_HLT_PFHT350_) counter_uncached_HLT_PFHT350_++;
    else counter_cached_HLT_PFHT350_++;
    if (!loaded_HLT_PFHT350_) {
        if (!b_HLT_PFHT350_) throw std::runtime_error("HLT_PFHT350 branch doesn't exist");
        b_HLT_PFHT350_->GetEntry(index);
        loaded_HLT_PFHT350_ = true;
    }
    return HLT_PFHT350_;
}
const bool &Nano::HLT_PFHT350MinPFJet15() {
    if (!loaded_HLT_PFHT350MinPFJet15_) counter_uncached_HLT_PFHT350MinPFJet15_++;
    else counter_cached_HLT_PFHT350MinPFJet15_++;
    if (!loaded_HLT_PFHT350MinPFJet15_) {
        if (!b_HLT_PFHT350MinPFJet15_) throw std::runtime_error("HLT_PFHT350MinPFJet15 branch doesn't exist");
        b_HLT_PFHT350MinPFJet15_->GetEntry(index);
        loaded_HLT_PFHT350MinPFJet15_ = true;
    }
    return HLT_PFHT350MinPFJet15_;
}
const bool &Nano::HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52() {
    if (!loaded_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52_) counter_uncached_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52_++;
    else counter_cached_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52_++;
    if (!loaded_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52_) {
        if (!b_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52_) throw std::runtime_error("HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52 branch doesn't exist");
        b_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52_->GetEntry(index);
        loaded_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52_ = true;
    }
    return HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52_;
}
const bool &Nano::HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53() {
    if (!loaded_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53_) counter_uncached_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53_++;
    else counter_cached_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53_++;
    if (!loaded_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53_) {
        if (!b_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53_) throw std::runtime_error("HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53 branch doesn't exist");
        b_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53_->GetEntry(index);
        loaded_HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53_ = true;
    }
    return HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53_;
}
const bool &Nano::HLT_PFHT370() {
    if (!loaded_HLT_PFHT370_) counter_uncached_HLT_PFHT370_++;
    else counter_cached_HLT_PFHT370_++;
    if (!loaded_HLT_PFHT370_) {
        if (!b_HLT_PFHT370_) throw std::runtime_error("HLT_PFHT370 branch doesn't exist");
        b_HLT_PFHT370_->GetEntry(index);
        loaded_HLT_PFHT370_ = true;
    }
    return HLT_PFHT370_;
}
const bool &Nano::HLT_PFHT380_SixJet32_DoubleBTagCSV_p075() {
    if (!loaded_HLT_PFHT380_SixJet32_DoubleBTagCSV_p075_) counter_uncached_HLT_PFHT380_SixJet32_DoubleBTagCSV_p075_++;
    else counter_cached_HLT_PFHT380_SixJet32_DoubleBTagCSV_p075_++;
    if (!loaded_HLT_PFHT380_SixJet32_DoubleBTagCSV_p075_) {
        if (!b_HLT_PFHT380_SixJet32_DoubleBTagCSV_p075_) throw std::runtime_error("HLT_PFHT380_SixJet32_DoubleBTagCSV_p075 branch doesn't exist");
        b_HLT_PFHT380_SixJet32_DoubleBTagCSV_p075_->GetEntry(index);
        loaded_HLT_PFHT380_SixJet32_DoubleBTagCSV_p075_ = true;
    }
    return HLT_PFHT380_SixJet32_DoubleBTagCSV_p075_;
}
const bool &Nano::HLT_PFHT380_SixPFJet32() {
    if (!loaded_HLT_PFHT380_SixPFJet32_) counter_uncached_HLT_PFHT380_SixPFJet32_++;
    else counter_cached_HLT_PFHT380_SixPFJet32_++;
    if (!loaded_HLT_PFHT380_SixPFJet32_) {
        if (!b_HLT_PFHT380_SixPFJet32_) throw std::runtime_error("HLT_PFHT380_SixPFJet32 branch doesn't exist");
        b_HLT_PFHT380_SixPFJet32_->GetEntry(index);
        loaded_HLT_PFHT380_SixPFJet32_ = true;
    }
    return HLT_PFHT380_SixPFJet32_;
}
const bool &Nano::HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2() {
    if (!loaded_HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2_) counter_uncached_HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2_++;
    else counter_cached_HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2_++;
    if (!loaded_HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2_) {
        if (!b_HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2_) throw std::runtime_error("HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2 branch doesn't exist");
        b_HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2_->GetEntry(index);
        loaded_HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2_ = true;
    }
    return HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2_;
}
const bool &Nano::HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2() {
    if (!loaded_HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2_) counter_uncached_HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2_++;
    else counter_cached_HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2_++;
    if (!loaded_HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2_) {
        if (!b_HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2_) throw std::runtime_error("HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2 branch doesn't exist");
        b_HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2_->GetEntry(index);
        loaded_HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2_ = true;
    }
    return HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2_;
}
const bool &Nano::HLT_PFHT400() {
    if (!loaded_HLT_PFHT400_) counter_uncached_HLT_PFHT400_++;
    else counter_cached_HLT_PFHT400_++;
    if (!loaded_HLT_PFHT400_) {
        if (!b_HLT_PFHT400_) throw std::runtime_error("HLT_PFHT400 branch doesn't exist");
        b_HLT_PFHT400_->GetEntry(index);
        loaded_HLT_PFHT400_ = true;
    }
    return HLT_PFHT400_;
}
const bool &Nano::HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51() {
    if (!loaded_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51_) counter_uncached_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51_++;
    else counter_cached_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51_++;
    if (!loaded_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51_) {
        if (!b_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51_) throw std::runtime_error("HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51 branch doesn't exist");
        b_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51_->GetEntry(index);
        loaded_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51_ = true;
    }
    return HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51_;
}
const bool &Nano::HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52() {
    if (!loaded_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52_) counter_uncached_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52_++;
    else counter_cached_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52_++;
    if (!loaded_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52_) {
        if (!b_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52_) throw std::runtime_error("HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52 branch doesn't exist");
        b_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52_->GetEntry(index);
        loaded_HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52_ = true;
    }
    return HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52_;
}
const bool &Nano::HLT_PFHT400_FivePFJet_100_100_60_30_30() {
    if (!loaded_HLT_PFHT400_FivePFJet_100_100_60_30_30_) counter_uncached_HLT_PFHT400_FivePFJet_100_100_60_30_30_++;
    else counter_cached_HLT_PFHT400_FivePFJet_100_100_60_30_30_++;
    if (!loaded_HLT_PFHT400_FivePFJet_100_100_60_30_30_) {
        if (!b_HLT_PFHT400_FivePFJet_100_100_60_30_30_) throw std::runtime_error("HLT_PFHT400_FivePFJet_100_100_60_30_30 branch doesn't exist");
        b_HLT_PFHT400_FivePFJet_100_100_60_30_30_->GetEntry(index);
        loaded_HLT_PFHT400_FivePFJet_100_100_60_30_30_ = true;
    }
    return HLT_PFHT400_FivePFJet_100_100_60_30_30_;
}
const bool &Nano::HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5() {
    if (!loaded_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_) counter_uncached_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_++;
    else counter_cached_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_++;
    if (!loaded_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_) {
        if (!b_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_) throw std::runtime_error("HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5 branch doesn't exist");
        b_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_->GetEntry(index);
        loaded_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_ = true;
    }
    return HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_;
}
const bool &Nano::HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5() {
    if (!loaded_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_) counter_uncached_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_++;
    else counter_cached_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_++;
    if (!loaded_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_) {
        if (!b_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_) throw std::runtime_error("HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5 branch doesn't exist");
        b_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_->GetEntry(index);
        loaded_HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_ = true;
    }
    return HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_;
}
const bool &Nano::HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5() {
    if (!loaded_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_) counter_uncached_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_++;
    else counter_cached_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_++;
    if (!loaded_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_) {
        if (!b_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_) throw std::runtime_error("HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5 branch doesn't exist");
        b_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_->GetEntry(index);
        loaded_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_ = true;
    }
    return HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_;
}
const bool &Nano::HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5() {
    if (!loaded_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_) counter_uncached_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_++;
    else counter_cached_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_++;
    if (!loaded_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_) {
        if (!b_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_) throw std::runtime_error("HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5 branch doesn't exist");
        b_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_->GetEntry(index);
        loaded_HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_ = true;
    }
    return HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_;
}
const bool &Nano::HLT_PFHT400_SixJet30() {
    if (!loaded_HLT_PFHT400_SixJet30_) counter_uncached_HLT_PFHT400_SixJet30_++;
    else counter_cached_HLT_PFHT400_SixJet30_++;
    if (!loaded_HLT_PFHT400_SixJet30_) {
        if (!b_HLT_PFHT400_SixJet30_) throw std::runtime_error("HLT_PFHT400_SixJet30 branch doesn't exist");
        b_HLT_PFHT400_SixJet30_->GetEntry(index);
        loaded_HLT_PFHT400_SixJet30_ = true;
    }
    return HLT_PFHT400_SixJet30_;
}
const bool &Nano::HLT_PFHT400_SixJet30_DoubleBTagCSV_p056() {
    if (!loaded_HLT_PFHT400_SixJet30_DoubleBTagCSV_p056_) counter_uncached_HLT_PFHT400_SixJet30_DoubleBTagCSV_p056_++;
    else counter_cached_HLT_PFHT400_SixJet30_DoubleBTagCSV_p056_++;
    if (!loaded_HLT_PFHT400_SixJet30_DoubleBTagCSV_p056_) {
        if (!b_HLT_PFHT400_SixJet30_DoubleBTagCSV_p056_) throw std::runtime_error("HLT_PFHT400_SixJet30_DoubleBTagCSV_p056 branch doesn't exist");
        b_HLT_PFHT400_SixJet30_DoubleBTagCSV_p056_->GetEntry(index);
        loaded_HLT_PFHT400_SixJet30_DoubleBTagCSV_p056_ = true;
    }
    return HLT_PFHT400_SixJet30_DoubleBTagCSV_p056_;
}
const bool &Nano::HLT_PFHT400_SixPFJet32() {
    if (!loaded_HLT_PFHT400_SixPFJet32_) counter_uncached_HLT_PFHT400_SixPFJet32_++;
    else counter_cached_HLT_PFHT400_SixPFJet32_++;
    if (!loaded_HLT_PFHT400_SixPFJet32_) {
        if (!b_HLT_PFHT400_SixPFJet32_) throw std::runtime_error("HLT_PFHT400_SixPFJet32 branch doesn't exist");
        b_HLT_PFHT400_SixPFJet32_->GetEntry(index);
        loaded_HLT_PFHT400_SixPFJet32_ = true;
    }
    return HLT_PFHT400_SixPFJet32_;
}
const bool &Nano::HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94() {
    if (!loaded_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_) counter_uncached_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_++;
    else counter_cached_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_++;
    if (!loaded_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_) {
        if (!b_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_) throw std::runtime_error("HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94 branch doesn't exist");
        b_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_->GetEntry(index);
        loaded_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_ = true;
    }
    return HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_;
}
const bool &Nano::HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94() {
    if (!loaded_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_) counter_uncached_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_++;
    else counter_cached_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_++;
    if (!loaded_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_) {
        if (!b_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_) throw std::runtime_error("HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94 branch doesn't exist");
        b_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_->GetEntry(index);
        loaded_HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_ = true;
    }
    return HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_;
}
const bool &Nano::HLT_PFHT430() {
    if (!loaded_HLT_PFHT430_) counter_uncached_HLT_PFHT430_++;
    else counter_cached_HLT_PFHT430_++;
    if (!loaded_HLT_PFHT430_) {
        if (!b_HLT_PFHT430_) throw std::runtime_error("HLT_PFHT430 branch doesn't exist");
        b_HLT_PFHT430_->GetEntry(index);
        loaded_HLT_PFHT430_ = true;
    }
    return HLT_PFHT430_;
}
const bool &Nano::HLT_PFHT430_SixJet40_BTagCSV_p080() {
    if (!loaded_HLT_PFHT430_SixJet40_BTagCSV_p080_) counter_uncached_HLT_PFHT430_SixJet40_BTagCSV_p080_++;
    else counter_cached_HLT_PFHT430_SixJet40_BTagCSV_p080_++;
    if (!loaded_HLT_PFHT430_SixJet40_BTagCSV_p080_) {
        if (!b_HLT_PFHT430_SixJet40_BTagCSV_p080_) throw std::runtime_error("HLT_PFHT430_SixJet40_BTagCSV_p080 branch doesn't exist");
        b_HLT_PFHT430_SixJet40_BTagCSV_p080_->GetEntry(index);
        loaded_HLT_PFHT430_SixJet40_BTagCSV_p080_ = true;
    }
    return HLT_PFHT430_SixJet40_BTagCSV_p080_;
}
const bool &Nano::HLT_PFHT430_SixPFJet40() {
    if (!loaded_HLT_PFHT430_SixPFJet40_) counter_uncached_HLT_PFHT430_SixPFJet40_++;
    else counter_cached_HLT_PFHT430_SixPFJet40_++;
    if (!loaded_HLT_PFHT430_SixPFJet40_) {
        if (!b_HLT_PFHT430_SixPFJet40_) throw std::runtime_error("HLT_PFHT430_SixPFJet40 branch doesn't exist");
        b_HLT_PFHT430_SixPFJet40_->GetEntry(index);
        loaded_HLT_PFHT430_SixPFJet40_ = true;
    }
    return HLT_PFHT430_SixPFJet40_;
}
const bool &Nano::HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5() {
    if (!loaded_HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5_) counter_uncached_HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5_++;
    else counter_cached_HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5_++;
    if (!loaded_HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5_) {
        if (!b_HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5_) throw std::runtime_error("HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5 branch doesn't exist");
        b_HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5_->GetEntry(index);
        loaded_HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5_ = true;
    }
    return HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5_;
}
const bool &Nano::HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5() {
    if (!loaded_HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5_) counter_uncached_HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5_++;
    else counter_cached_HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5_++;
    if (!loaded_HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5_) {
        if (!b_HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5_) throw std::runtime_error("HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5 branch doesn't exist");
        b_HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5_->GetEntry(index);
        loaded_HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5_ = true;
    }
    return HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5_;
}
const bool &Nano::HLT_PFHT450_SixJet40() {
    if (!loaded_HLT_PFHT450_SixJet40_) counter_uncached_HLT_PFHT450_SixJet40_++;
    else counter_cached_HLT_PFHT450_SixJet40_++;
    if (!loaded_HLT_PFHT450_SixJet40_) {
        if (!b_HLT_PFHT450_SixJet40_) throw std::runtime_error("HLT_PFHT450_SixJet40 branch doesn't exist");
        b_HLT_PFHT450_SixJet40_->GetEntry(index);
        loaded_HLT_PFHT450_SixJet40_ = true;
    }
    return HLT_PFHT450_SixJet40_;
}
const bool &Nano::HLT_PFHT450_SixJet40_BTagCSV_p056() {
    if (!loaded_HLT_PFHT450_SixJet40_BTagCSV_p056_) counter_uncached_HLT_PFHT450_SixJet40_BTagCSV_p056_++;
    else counter_cached_HLT_PFHT450_SixJet40_BTagCSV_p056_++;
    if (!loaded_HLT_PFHT450_SixJet40_BTagCSV_p056_) {
        if (!b_HLT_PFHT450_SixJet40_BTagCSV_p056_) throw std::runtime_error("HLT_PFHT450_SixJet40_BTagCSV_p056 branch doesn't exist");
        b_HLT_PFHT450_SixJet40_BTagCSV_p056_->GetEntry(index);
        loaded_HLT_PFHT450_SixJet40_BTagCSV_p056_ = true;
    }
    return HLT_PFHT450_SixJet40_BTagCSV_p056_;
}
const bool &Nano::HLT_PFHT450_SixPFJet36() {
    if (!loaded_HLT_PFHT450_SixPFJet36_) counter_uncached_HLT_PFHT450_SixPFJet36_++;
    else counter_cached_HLT_PFHT450_SixPFJet36_++;
    if (!loaded_HLT_PFHT450_SixPFJet36_) {
        if (!b_HLT_PFHT450_SixPFJet36_) throw std::runtime_error("HLT_PFHT450_SixPFJet36 branch doesn't exist");
        b_HLT_PFHT450_SixPFJet36_->GetEntry(index);
        loaded_HLT_PFHT450_SixPFJet36_ = true;
    }
    return HLT_PFHT450_SixPFJet36_;
}
const bool &Nano::HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59() {
    if (!loaded_HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_) counter_uncached_HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_++;
    else counter_cached_HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_++;
    if (!loaded_HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_) {
        if (!b_HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_) throw std::runtime_error("HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59 branch doesn't exist");
        b_HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_->GetEntry(index);
        loaded_HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_ = true;
    }
    return HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_;
}
const bool &Nano::HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59() {
    if (!loaded_HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_) counter_uncached_HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_++;
    else counter_cached_HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_++;
    if (!loaded_HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_) {
        if (!b_HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_) throw std::runtime_error("HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59 branch doesn't exist");
        b_HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_->GetEntry(index);
        loaded_HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_ = true;
    }
    return HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_;
}
const bool &Nano::HLT_PFHT475() {
    if (!loaded_HLT_PFHT475_) counter_uncached_HLT_PFHT475_++;
    else counter_cached_HLT_PFHT475_++;
    if (!loaded_HLT_PFHT475_) {
        if (!b_HLT_PFHT475_) throw std::runtime_error("HLT_PFHT475 branch doesn't exist");
        b_HLT_PFHT475_->GetEntry(index);
        loaded_HLT_PFHT475_ = true;
    }
    return HLT_PFHT475_;
}
const bool &Nano::HLT_PFHT500_PFMET100_PFMHT100_IDTight() {
    if (!loaded_HLT_PFHT500_PFMET100_PFMHT100_IDTight_) counter_uncached_HLT_PFHT500_PFMET100_PFMHT100_IDTight_++;
    else counter_cached_HLT_PFHT500_PFMET100_PFMHT100_IDTight_++;
    if (!loaded_HLT_PFHT500_PFMET100_PFMHT100_IDTight_) {
        if (!b_HLT_PFHT500_PFMET100_PFMHT100_IDTight_) throw std::runtime_error("HLT_PFHT500_PFMET100_PFMHT100_IDTight branch doesn't exist");
        b_HLT_PFHT500_PFMET100_PFMHT100_IDTight_->GetEntry(index);
        loaded_HLT_PFHT500_PFMET100_PFMHT100_IDTight_ = true;
    }
    return HLT_PFHT500_PFMET100_PFMHT100_IDTight_;
}
const bool &Nano::HLT_PFHT500_PFMET110_PFMHT110_IDTight() {
    if (!loaded_HLT_PFHT500_PFMET110_PFMHT110_IDTight_) counter_uncached_HLT_PFHT500_PFMET110_PFMHT110_IDTight_++;
    else counter_cached_HLT_PFHT500_PFMET110_PFMHT110_IDTight_++;
    if (!loaded_HLT_PFHT500_PFMET110_PFMHT110_IDTight_) {
        if (!b_HLT_PFHT500_PFMET110_PFMHT110_IDTight_) throw std::runtime_error("HLT_PFHT500_PFMET110_PFMHT110_IDTight branch doesn't exist");
        b_HLT_PFHT500_PFMET110_PFMHT110_IDTight_->GetEntry(index);
        loaded_HLT_PFHT500_PFMET110_PFMHT110_IDTight_ = true;
    }
    return HLT_PFHT500_PFMET110_PFMHT110_IDTight_;
}
const bool &Nano::HLT_PFHT510() {
    if (!loaded_HLT_PFHT510_) counter_uncached_HLT_PFHT510_++;
    else counter_cached_HLT_PFHT510_++;
    if (!loaded_HLT_PFHT510_) {
        if (!b_HLT_PFHT510_) throw std::runtime_error("HLT_PFHT510 branch doesn't exist");
        b_HLT_PFHT510_->GetEntry(index);
        loaded_HLT_PFHT510_ = true;
    }
    return HLT_PFHT510_;
}
const bool &Nano::HLT_PFHT550_4JetPt50() {
    if (!loaded_HLT_PFHT550_4JetPt50_) counter_uncached_HLT_PFHT550_4JetPt50_++;
    else counter_cached_HLT_PFHT550_4JetPt50_++;
    if (!loaded_HLT_PFHT550_4JetPt50_) {
        if (!b_HLT_PFHT550_4JetPt50_) throw std::runtime_error("HLT_PFHT550_4JetPt50 branch doesn't exist");
        b_HLT_PFHT550_4JetPt50_->GetEntry(index);
        loaded_HLT_PFHT550_4JetPt50_ = true;
    }
    return HLT_PFHT550_4JetPt50_;
}
const bool &Nano::HLT_PFHT590() {
    if (!loaded_HLT_PFHT590_) counter_uncached_HLT_PFHT590_++;
    else counter_cached_HLT_PFHT590_++;
    if (!loaded_HLT_PFHT590_) {
        if (!b_HLT_PFHT590_) throw std::runtime_error("HLT_PFHT590 branch doesn't exist");
        b_HLT_PFHT590_->GetEntry(index);
        loaded_HLT_PFHT590_ = true;
    }
    return HLT_PFHT590_;
}
const bool &Nano::HLT_PFHT600() {
    if (!loaded_HLT_PFHT600_) counter_uncached_HLT_PFHT600_++;
    else counter_cached_HLT_PFHT600_++;
    if (!loaded_HLT_PFHT600_) {
        if (!b_HLT_PFHT600_) throw std::runtime_error("HLT_PFHT600 branch doesn't exist");
        b_HLT_PFHT600_->GetEntry(index);
        loaded_HLT_PFHT600_ = true;
    }
    return HLT_PFHT600_;
}
const bool &Nano::HLT_PFHT650() {
    if (!loaded_HLT_PFHT650_) counter_uncached_HLT_PFHT650_++;
    else counter_cached_HLT_PFHT650_++;
    if (!loaded_HLT_PFHT650_) {
        if (!b_HLT_PFHT650_) throw std::runtime_error("HLT_PFHT650 branch doesn't exist");
        b_HLT_PFHT650_->GetEntry(index);
        loaded_HLT_PFHT650_ = true;
    }
    return HLT_PFHT650_;
}
const bool &Nano::HLT_PFHT650_4JetPt50() {
    if (!loaded_HLT_PFHT650_4JetPt50_) counter_uncached_HLT_PFHT650_4JetPt50_++;
    else counter_cached_HLT_PFHT650_4JetPt50_++;
    if (!loaded_HLT_PFHT650_4JetPt50_) {
        if (!b_HLT_PFHT650_4JetPt50_) throw std::runtime_error("HLT_PFHT650_4JetPt50 branch doesn't exist");
        b_HLT_PFHT650_4JetPt50_->GetEntry(index);
        loaded_HLT_PFHT650_4JetPt50_ = true;
    }
    return HLT_PFHT650_4JetPt50_;
}
const bool &Nano::HLT_PFHT650_WideJetMJJ900DEtaJJ1p5() {
    if (!loaded_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_) counter_uncached_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_++;
    else counter_cached_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_++;
    if (!loaded_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_) {
        if (!b_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_) throw std::runtime_error("HLT_PFHT650_WideJetMJJ900DEtaJJ1p5 branch doesn't exist");
        b_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_->GetEntry(index);
        loaded_HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_ = true;
    }
    return HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_;
}
const bool &Nano::HLT_PFHT650_WideJetMJJ950DEtaJJ1p5() {
    if (!loaded_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_) counter_uncached_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_++;
    else counter_cached_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_++;
    if (!loaded_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_) {
        if (!b_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_) throw std::runtime_error("HLT_PFHT650_WideJetMJJ950DEtaJJ1p5 branch doesn't exist");
        b_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_->GetEntry(index);
        loaded_HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_ = true;
    }
    return HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_;
}
const bool &Nano::HLT_PFHT680() {
    if (!loaded_HLT_PFHT680_) counter_uncached_HLT_PFHT680_++;
    else counter_cached_HLT_PFHT680_++;
    if (!loaded_HLT_PFHT680_) {
        if (!b_HLT_PFHT680_) throw std::runtime_error("HLT_PFHT680 branch doesn't exist");
        b_HLT_PFHT680_->GetEntry(index);
        loaded_HLT_PFHT680_ = true;
    }
    return HLT_PFHT680_;
}
const bool &Nano::HLT_PFHT700_PFMET85_PFMHT85_IDTight() {
    if (!loaded_HLT_PFHT700_PFMET85_PFMHT85_IDTight_) counter_uncached_HLT_PFHT700_PFMET85_PFMHT85_IDTight_++;
    else counter_cached_HLT_PFHT700_PFMET85_PFMHT85_IDTight_++;
    if (!loaded_HLT_PFHT700_PFMET85_PFMHT85_IDTight_) {
        if (!b_HLT_PFHT700_PFMET85_PFMHT85_IDTight_) throw std::runtime_error("HLT_PFHT700_PFMET85_PFMHT85_IDTight branch doesn't exist");
        b_HLT_PFHT700_PFMET85_PFMHT85_IDTight_->GetEntry(index);
        loaded_HLT_PFHT700_PFMET85_PFMHT85_IDTight_ = true;
    }
    return HLT_PFHT700_PFMET85_PFMHT85_IDTight_;
}
const bool &Nano::HLT_PFHT700_PFMET95_PFMHT95_IDTight() {
    if (!loaded_HLT_PFHT700_PFMET95_PFMHT95_IDTight_) counter_uncached_HLT_PFHT700_PFMET95_PFMHT95_IDTight_++;
    else counter_cached_HLT_PFHT700_PFMET95_PFMHT95_IDTight_++;
    if (!loaded_HLT_PFHT700_PFMET95_PFMHT95_IDTight_) {
        if (!b_HLT_PFHT700_PFMET95_PFMHT95_IDTight_) throw std::runtime_error("HLT_PFHT700_PFMET95_PFMHT95_IDTight branch doesn't exist");
        b_HLT_PFHT700_PFMET95_PFMHT95_IDTight_->GetEntry(index);
        loaded_HLT_PFHT700_PFMET95_PFMHT95_IDTight_ = true;
    }
    return HLT_PFHT700_PFMET95_PFMHT95_IDTight_;
}
const bool &Nano::HLT_PFHT750_4JetPt50() {
    if (!loaded_HLT_PFHT750_4JetPt50_) counter_uncached_HLT_PFHT750_4JetPt50_++;
    else counter_cached_HLT_PFHT750_4JetPt50_++;
    if (!loaded_HLT_PFHT750_4JetPt50_) {
        if (!b_HLT_PFHT750_4JetPt50_) throw std::runtime_error("HLT_PFHT750_4JetPt50 branch doesn't exist");
        b_HLT_PFHT750_4JetPt50_->GetEntry(index);
        loaded_HLT_PFHT750_4JetPt50_ = true;
    }
    return HLT_PFHT750_4JetPt50_;
}
const bool &Nano::HLT_PFHT750_4JetPt70() {
    if (!loaded_HLT_PFHT750_4JetPt70_) counter_uncached_HLT_PFHT750_4JetPt70_++;
    else counter_cached_HLT_PFHT750_4JetPt70_++;
    if (!loaded_HLT_PFHT750_4JetPt70_) {
        if (!b_HLT_PFHT750_4JetPt70_) throw std::runtime_error("HLT_PFHT750_4JetPt70 branch doesn't exist");
        b_HLT_PFHT750_4JetPt70_->GetEntry(index);
        loaded_HLT_PFHT750_4JetPt70_ = true;
    }
    return HLT_PFHT750_4JetPt70_;
}
const bool &Nano::HLT_PFHT750_4JetPt80() {
    if (!loaded_HLT_PFHT750_4JetPt80_) counter_uncached_HLT_PFHT750_4JetPt80_++;
    else counter_cached_HLT_PFHT750_4JetPt80_++;
    if (!loaded_HLT_PFHT750_4JetPt80_) {
        if (!b_HLT_PFHT750_4JetPt80_) throw std::runtime_error("HLT_PFHT750_4JetPt80 branch doesn't exist");
        b_HLT_PFHT750_4JetPt80_->GetEntry(index);
        loaded_HLT_PFHT750_4JetPt80_ = true;
    }
    return HLT_PFHT750_4JetPt80_;
}
const bool &Nano::HLT_PFHT780() {
    if (!loaded_HLT_PFHT780_) counter_uncached_HLT_PFHT780_++;
    else counter_cached_HLT_PFHT780_++;
    if (!loaded_HLT_PFHT780_) {
        if (!b_HLT_PFHT780_) throw std::runtime_error("HLT_PFHT780 branch doesn't exist");
        b_HLT_PFHT780_->GetEntry(index);
        loaded_HLT_PFHT780_ = true;
    }
    return HLT_PFHT780_;
}
const bool &Nano::HLT_PFHT800() {
    if (!loaded_HLT_PFHT800_) counter_uncached_HLT_PFHT800_++;
    else counter_cached_HLT_PFHT800_++;
    if (!loaded_HLT_PFHT800_) {
        if (!b_HLT_PFHT800_) throw std::runtime_error("HLT_PFHT800 branch doesn't exist");
        b_HLT_PFHT800_->GetEntry(index);
        loaded_HLT_PFHT800_ = true;
    }
    return HLT_PFHT800_;
}
const bool &Nano::HLT_PFHT800_4JetPt50() {
    if (!loaded_HLT_PFHT800_4JetPt50_) counter_uncached_HLT_PFHT800_4JetPt50_++;
    else counter_cached_HLT_PFHT800_4JetPt50_++;
    if (!loaded_HLT_PFHT800_4JetPt50_) {
        if (!b_HLT_PFHT800_4JetPt50_) throw std::runtime_error("HLT_PFHT800_4JetPt50 branch doesn't exist");
        b_HLT_PFHT800_4JetPt50_->GetEntry(index);
        loaded_HLT_PFHT800_4JetPt50_ = true;
    }
    return HLT_PFHT800_4JetPt50_;
}
const bool &Nano::HLT_PFHT800_PFMET75_PFMHT75_IDTight() {
    if (!loaded_HLT_PFHT800_PFMET75_PFMHT75_IDTight_) counter_uncached_HLT_PFHT800_PFMET75_PFMHT75_IDTight_++;
    else counter_cached_HLT_PFHT800_PFMET75_PFMHT75_IDTight_++;
    if (!loaded_HLT_PFHT800_PFMET75_PFMHT75_IDTight_) {
        if (!b_HLT_PFHT800_PFMET75_PFMHT75_IDTight_) throw std::runtime_error("HLT_PFHT800_PFMET75_PFMHT75_IDTight branch doesn't exist");
        b_HLT_PFHT800_PFMET75_PFMHT75_IDTight_->GetEntry(index);
        loaded_HLT_PFHT800_PFMET75_PFMHT75_IDTight_ = true;
    }
    return HLT_PFHT800_PFMET75_PFMHT75_IDTight_;
}
const bool &Nano::HLT_PFHT800_PFMET85_PFMHT85_IDTight() {
    if (!loaded_HLT_PFHT800_PFMET85_PFMHT85_IDTight_) counter_uncached_HLT_PFHT800_PFMET85_PFMHT85_IDTight_++;
    else counter_cached_HLT_PFHT800_PFMET85_PFMHT85_IDTight_++;
    if (!loaded_HLT_PFHT800_PFMET85_PFMHT85_IDTight_) {
        if (!b_HLT_PFHT800_PFMET85_PFMHT85_IDTight_) throw std::runtime_error("HLT_PFHT800_PFMET85_PFMHT85_IDTight branch doesn't exist");
        b_HLT_PFHT800_PFMET85_PFMHT85_IDTight_->GetEntry(index);
        loaded_HLT_PFHT800_PFMET85_PFMHT85_IDTight_ = true;
    }
    return HLT_PFHT800_PFMET85_PFMHT85_IDTight_;
}
const bool &Nano::HLT_PFHT850_4JetPt50() {
    if (!loaded_HLT_PFHT850_4JetPt50_) counter_uncached_HLT_PFHT850_4JetPt50_++;
    else counter_cached_HLT_PFHT850_4JetPt50_++;
    if (!loaded_HLT_PFHT850_4JetPt50_) {
        if (!b_HLT_PFHT850_4JetPt50_) throw std::runtime_error("HLT_PFHT850_4JetPt50 branch doesn't exist");
        b_HLT_PFHT850_4JetPt50_->GetEntry(index);
        loaded_HLT_PFHT850_4JetPt50_ = true;
    }
    return HLT_PFHT850_4JetPt50_;
}
const bool &Nano::HLT_PFHT890() {
    if (!loaded_HLT_PFHT890_) counter_uncached_HLT_PFHT890_++;
    else counter_cached_HLT_PFHT890_++;
    if (!loaded_HLT_PFHT890_) {
        if (!b_HLT_PFHT890_) throw std::runtime_error("HLT_PFHT890 branch doesn't exist");
        b_HLT_PFHT890_->GetEntry(index);
        loaded_HLT_PFHT890_ = true;
    }
    return HLT_PFHT890_;
}
const bool &Nano::HLT_PFHT900() {
    if (!loaded_HLT_PFHT900_) counter_uncached_HLT_PFHT900_++;
    else counter_cached_HLT_PFHT900_++;
    if (!loaded_HLT_PFHT900_) {
        if (!b_HLT_PFHT900_) throw std::runtime_error("HLT_PFHT900 branch doesn't exist");
        b_HLT_PFHT900_->GetEntry(index);
        loaded_HLT_PFHT900_ = true;
    }
    return HLT_PFHT900_;
}
const bool &Nano::HLT_PFJet110() {
    if (!loaded_HLT_PFJet110_) counter_uncached_HLT_PFJet110_++;
    else counter_cached_HLT_PFJet110_++;
    if (!loaded_HLT_PFJet110_) {
        if (!b_HLT_PFJet110_) throw std::runtime_error("HLT_PFJet110 branch doesn't exist");
        b_HLT_PFJet110_->GetEntry(index);
        loaded_HLT_PFJet110_ = true;
    }
    return HLT_PFJet110_;
}
const bool &Nano::HLT_PFJet140() {
    if (!loaded_HLT_PFJet140_) counter_uncached_HLT_PFJet140_++;
    else counter_cached_HLT_PFJet140_++;
    if (!loaded_HLT_PFJet140_) {
        if (!b_HLT_PFJet140_) throw std::runtime_error("HLT_PFJet140 branch doesn't exist");
        b_HLT_PFJet140_->GetEntry(index);
        loaded_HLT_PFJet140_ = true;
    }
    return HLT_PFJet140_;
}
const bool &Nano::HLT_PFJet15() {
    if (!loaded_HLT_PFJet15_) counter_uncached_HLT_PFJet15_++;
    else counter_cached_HLT_PFJet15_++;
    if (!loaded_HLT_PFJet15_) {
        if (!b_HLT_PFJet15_) throw std::runtime_error("HLT_PFJet15 branch doesn't exist");
        b_HLT_PFJet15_->GetEntry(index);
        loaded_HLT_PFJet15_ = true;
    }
    return HLT_PFJet15_;
}
const bool &Nano::HLT_PFJet15_NoCaloMatched() {
    if (!loaded_HLT_PFJet15_NoCaloMatched_) counter_uncached_HLT_PFJet15_NoCaloMatched_++;
    else counter_cached_HLT_PFJet15_NoCaloMatched_++;
    if (!loaded_HLT_PFJet15_NoCaloMatched_) {
        if (!b_HLT_PFJet15_NoCaloMatched_) throw std::runtime_error("HLT_PFJet15_NoCaloMatched branch doesn't exist");
        b_HLT_PFJet15_NoCaloMatched_->GetEntry(index);
        loaded_HLT_PFJet15_NoCaloMatched_ = true;
    }
    return HLT_PFJet15_NoCaloMatched_;
}
const bool &Nano::HLT_PFJet200() {
    if (!loaded_HLT_PFJet200_) counter_uncached_HLT_PFJet200_++;
    else counter_cached_HLT_PFJet200_++;
    if (!loaded_HLT_PFJet200_) {
        if (!b_HLT_PFJet200_) throw std::runtime_error("HLT_PFJet200 branch doesn't exist");
        b_HLT_PFJet200_->GetEntry(index);
        loaded_HLT_PFJet200_ = true;
    }
    return HLT_PFJet200_;
}
const bool &Nano::HLT_PFJet25() {
    if (!loaded_HLT_PFJet25_) counter_uncached_HLT_PFJet25_++;
    else counter_cached_HLT_PFJet25_++;
    if (!loaded_HLT_PFJet25_) {
        if (!b_HLT_PFJet25_) throw std::runtime_error("HLT_PFJet25 branch doesn't exist");
        b_HLT_PFJet25_->GetEntry(index);
        loaded_HLT_PFJet25_ = true;
    }
    return HLT_PFJet25_;
}
const bool &Nano::HLT_PFJet25_NoCaloMatched() {
    if (!loaded_HLT_PFJet25_NoCaloMatched_) counter_uncached_HLT_PFJet25_NoCaloMatched_++;
    else counter_cached_HLT_PFJet25_NoCaloMatched_++;
    if (!loaded_HLT_PFJet25_NoCaloMatched_) {
        if (!b_HLT_PFJet25_NoCaloMatched_) throw std::runtime_error("HLT_PFJet25_NoCaloMatched branch doesn't exist");
        b_HLT_PFJet25_NoCaloMatched_->GetEntry(index);
        loaded_HLT_PFJet25_NoCaloMatched_ = true;
    }
    return HLT_PFJet25_NoCaloMatched_;
}
const bool &Nano::HLT_PFJet260() {
    if (!loaded_HLT_PFJet260_) counter_uncached_HLT_PFJet260_++;
    else counter_cached_HLT_PFJet260_++;
    if (!loaded_HLT_PFJet260_) {
        if (!b_HLT_PFJet260_) throw std::runtime_error("HLT_PFJet260 branch doesn't exist");
        b_HLT_PFJet260_->GetEntry(index);
        loaded_HLT_PFJet260_ = true;
    }
    return HLT_PFJet260_;
}
const bool &Nano::HLT_PFJet320() {
    if (!loaded_HLT_PFJet320_) counter_uncached_HLT_PFJet320_++;
    else counter_cached_HLT_PFJet320_++;
    if (!loaded_HLT_PFJet320_) {
        if (!b_HLT_PFJet320_) throw std::runtime_error("HLT_PFJet320 branch doesn't exist");
        b_HLT_PFJet320_->GetEntry(index);
        loaded_HLT_PFJet320_ = true;
    }
    return HLT_PFJet320_;
}
const bool &Nano::HLT_PFJet40() {
    if (!loaded_HLT_PFJet40_) counter_uncached_HLT_PFJet40_++;
    else counter_cached_HLT_PFJet40_++;
    if (!loaded_HLT_PFJet40_) {
        if (!b_HLT_PFJet40_) throw std::runtime_error("HLT_PFJet40 branch doesn't exist");
        b_HLT_PFJet40_->GetEntry(index);
        loaded_HLT_PFJet40_ = true;
    }
    return HLT_PFJet40_;
}
const bool &Nano::HLT_PFJet400() {
    if (!loaded_HLT_PFJet400_) counter_uncached_HLT_PFJet400_++;
    else counter_cached_HLT_PFJet400_++;
    if (!loaded_HLT_PFJet400_) {
        if (!b_HLT_PFJet400_) throw std::runtime_error("HLT_PFJet400 branch doesn't exist");
        b_HLT_PFJet400_->GetEntry(index);
        loaded_HLT_PFJet400_ = true;
    }
    return HLT_PFJet400_;
}
const bool &Nano::HLT_PFJet40_GPUvsCPU() {
    if (!loaded_HLT_PFJet40_GPUvsCPU_) counter_uncached_HLT_PFJet40_GPUvsCPU_++;
    else counter_cached_HLT_PFJet40_GPUvsCPU_++;
    if (!loaded_HLT_PFJet40_GPUvsCPU_) {
        if (!b_HLT_PFJet40_GPUvsCPU_) throw std::runtime_error("HLT_PFJet40_GPUvsCPU branch doesn't exist");
        b_HLT_PFJet40_GPUvsCPU_->GetEntry(index);
        loaded_HLT_PFJet40_GPUvsCPU_ = true;
    }
    return HLT_PFJet40_GPUvsCPU_;
}
const bool &Nano::HLT_PFJet450() {
    if (!loaded_HLT_PFJet450_) counter_uncached_HLT_PFJet450_++;
    else counter_cached_HLT_PFJet450_++;
    if (!loaded_HLT_PFJet450_) {
        if (!b_HLT_PFJet450_) throw std::runtime_error("HLT_PFJet450 branch doesn't exist");
        b_HLT_PFJet450_->GetEntry(index);
        loaded_HLT_PFJet450_ = true;
    }
    return HLT_PFJet450_;
}
const bool &Nano::HLT_PFJet500() {
    if (!loaded_HLT_PFJet500_) counter_uncached_HLT_PFJet500_++;
    else counter_cached_HLT_PFJet500_++;
    if (!loaded_HLT_PFJet500_) {
        if (!b_HLT_PFJet500_) throw std::runtime_error("HLT_PFJet500 branch doesn't exist");
        b_HLT_PFJet500_->GetEntry(index);
        loaded_HLT_PFJet500_ = true;
    }
    return HLT_PFJet500_;
}
const bool &Nano::HLT_PFJet550() {
    if (!loaded_HLT_PFJet550_) counter_uncached_HLT_PFJet550_++;
    else counter_cached_HLT_PFJet550_++;
    if (!loaded_HLT_PFJet550_) {
        if (!b_HLT_PFJet550_) throw std::runtime_error("HLT_PFJet550 branch doesn't exist");
        b_HLT_PFJet550_->GetEntry(index);
        loaded_HLT_PFJet550_ = true;
    }
    return HLT_PFJet550_;
}
const bool &Nano::HLT_PFJet60() {
    if (!loaded_HLT_PFJet60_) counter_uncached_HLT_PFJet60_++;
    else counter_cached_HLT_PFJet60_++;
    if (!loaded_HLT_PFJet60_) {
        if (!b_HLT_PFJet60_) throw std::runtime_error("HLT_PFJet60 branch doesn't exist");
        b_HLT_PFJet60_->GetEntry(index);
        loaded_HLT_PFJet60_ = true;
    }
    return HLT_PFJet60_;
}
const bool &Nano::HLT_PFJet80() {
    if (!loaded_HLT_PFJet80_) counter_uncached_HLT_PFJet80_++;
    else counter_cached_HLT_PFJet80_++;
    if (!loaded_HLT_PFJet80_) {
        if (!b_HLT_PFJet80_) throw std::runtime_error("HLT_PFJet80 branch doesn't exist");
        b_HLT_PFJet80_->GetEntry(index);
        loaded_HLT_PFJet80_ = true;
    }
    return HLT_PFJet80_;
}
const bool &Nano::HLT_PFJetFwd140() {
    if (!loaded_HLT_PFJetFwd140_) counter_uncached_HLT_PFJetFwd140_++;
    else counter_cached_HLT_PFJetFwd140_++;
    if (!loaded_HLT_PFJetFwd140_) {
        if (!b_HLT_PFJetFwd140_) throw std::runtime_error("HLT_PFJetFwd140 branch doesn't exist");
        b_HLT_PFJetFwd140_->GetEntry(index);
        loaded_HLT_PFJetFwd140_ = true;
    }
    return HLT_PFJetFwd140_;
}
const bool &Nano::HLT_PFJetFwd15() {
    if (!loaded_HLT_PFJetFwd15_) counter_uncached_HLT_PFJetFwd15_++;
    else counter_cached_HLT_PFJetFwd15_++;
    if (!loaded_HLT_PFJetFwd15_) {
        if (!b_HLT_PFJetFwd15_) throw std::runtime_error("HLT_PFJetFwd15 branch doesn't exist");
        b_HLT_PFJetFwd15_->GetEntry(index);
        loaded_HLT_PFJetFwd15_ = true;
    }
    return HLT_PFJetFwd15_;
}
const bool &Nano::HLT_PFJetFwd200() {
    if (!loaded_HLT_PFJetFwd200_) counter_uncached_HLT_PFJetFwd200_++;
    else counter_cached_HLT_PFJetFwd200_++;
    if (!loaded_HLT_PFJetFwd200_) {
        if (!b_HLT_PFJetFwd200_) throw std::runtime_error("HLT_PFJetFwd200 branch doesn't exist");
        b_HLT_PFJetFwd200_->GetEntry(index);
        loaded_HLT_PFJetFwd200_ = true;
    }
    return HLT_PFJetFwd200_;
}
const bool &Nano::HLT_PFJetFwd25() {
    if (!loaded_HLT_PFJetFwd25_) counter_uncached_HLT_PFJetFwd25_++;
    else counter_cached_HLT_PFJetFwd25_++;
    if (!loaded_HLT_PFJetFwd25_) {
        if (!b_HLT_PFJetFwd25_) throw std::runtime_error("HLT_PFJetFwd25 branch doesn't exist");
        b_HLT_PFJetFwd25_->GetEntry(index);
        loaded_HLT_PFJetFwd25_ = true;
    }
    return HLT_PFJetFwd25_;
}
const bool &Nano::HLT_PFJetFwd260() {
    if (!loaded_HLT_PFJetFwd260_) counter_uncached_HLT_PFJetFwd260_++;
    else counter_cached_HLT_PFJetFwd260_++;
    if (!loaded_HLT_PFJetFwd260_) {
        if (!b_HLT_PFJetFwd260_) throw std::runtime_error("HLT_PFJetFwd260 branch doesn't exist");
        b_HLT_PFJetFwd260_->GetEntry(index);
        loaded_HLT_PFJetFwd260_ = true;
    }
    return HLT_PFJetFwd260_;
}
const bool &Nano::HLT_PFJetFwd320() {
    if (!loaded_HLT_PFJetFwd320_) counter_uncached_HLT_PFJetFwd320_++;
    else counter_cached_HLT_PFJetFwd320_++;
    if (!loaded_HLT_PFJetFwd320_) {
        if (!b_HLT_PFJetFwd320_) throw std::runtime_error("HLT_PFJetFwd320 branch doesn't exist");
        b_HLT_PFJetFwd320_->GetEntry(index);
        loaded_HLT_PFJetFwd320_ = true;
    }
    return HLT_PFJetFwd320_;
}
const bool &Nano::HLT_PFJetFwd40() {
    if (!loaded_HLT_PFJetFwd40_) counter_uncached_HLT_PFJetFwd40_++;
    else counter_cached_HLT_PFJetFwd40_++;
    if (!loaded_HLT_PFJetFwd40_) {
        if (!b_HLT_PFJetFwd40_) throw std::runtime_error("HLT_PFJetFwd40 branch doesn't exist");
        b_HLT_PFJetFwd40_->GetEntry(index);
        loaded_HLT_PFJetFwd40_ = true;
    }
    return HLT_PFJetFwd40_;
}
const bool &Nano::HLT_PFJetFwd400() {
    if (!loaded_HLT_PFJetFwd400_) counter_uncached_HLT_PFJetFwd400_++;
    else counter_cached_HLT_PFJetFwd400_++;
    if (!loaded_HLT_PFJetFwd400_) {
        if (!b_HLT_PFJetFwd400_) throw std::runtime_error("HLT_PFJetFwd400 branch doesn't exist");
        b_HLT_PFJetFwd400_->GetEntry(index);
        loaded_HLT_PFJetFwd400_ = true;
    }
    return HLT_PFJetFwd400_;
}
const bool &Nano::HLT_PFJetFwd450() {
    if (!loaded_HLT_PFJetFwd450_) counter_uncached_HLT_PFJetFwd450_++;
    else counter_cached_HLT_PFJetFwd450_++;
    if (!loaded_HLT_PFJetFwd450_) {
        if (!b_HLT_PFJetFwd450_) throw std::runtime_error("HLT_PFJetFwd450 branch doesn't exist");
        b_HLT_PFJetFwd450_->GetEntry(index);
        loaded_HLT_PFJetFwd450_ = true;
    }
    return HLT_PFJetFwd450_;
}
const bool &Nano::HLT_PFJetFwd500() {
    if (!loaded_HLT_PFJetFwd500_) counter_uncached_HLT_PFJetFwd500_++;
    else counter_cached_HLT_PFJetFwd500_++;
    if (!loaded_HLT_PFJetFwd500_) {
        if (!b_HLT_PFJetFwd500_) throw std::runtime_error("HLT_PFJetFwd500 branch doesn't exist");
        b_HLT_PFJetFwd500_->GetEntry(index);
        loaded_HLT_PFJetFwd500_ = true;
    }
    return HLT_PFJetFwd500_;
}
const bool &Nano::HLT_PFJetFwd60() {
    if (!loaded_HLT_PFJetFwd60_) counter_uncached_HLT_PFJetFwd60_++;
    else counter_cached_HLT_PFJetFwd60_++;
    if (!loaded_HLT_PFJetFwd60_) {
        if (!b_HLT_PFJetFwd60_) throw std::runtime_error("HLT_PFJetFwd60 branch doesn't exist");
        b_HLT_PFJetFwd60_->GetEntry(index);
        loaded_HLT_PFJetFwd60_ = true;
    }
    return HLT_PFJetFwd60_;
}
const bool &Nano::HLT_PFJetFwd80() {
    if (!loaded_HLT_PFJetFwd80_) counter_uncached_HLT_PFJetFwd80_++;
    else counter_cached_HLT_PFJetFwd80_++;
    if (!loaded_HLT_PFJetFwd80_) {
        if (!b_HLT_PFJetFwd80_) throw std::runtime_error("HLT_PFJetFwd80 branch doesn't exist");
        b_HLT_PFJetFwd80_->GetEntry(index);
        loaded_HLT_PFJetFwd80_ = true;
    }
    return HLT_PFJetFwd80_;
}
const bool &Nano::HLT_PFMET100_PFMHT100_IDTight() {
    if (!loaded_HLT_PFMET100_PFMHT100_IDTight_) counter_uncached_HLT_PFMET100_PFMHT100_IDTight_++;
    else counter_cached_HLT_PFMET100_PFMHT100_IDTight_++;
    if (!loaded_HLT_PFMET100_PFMHT100_IDTight_) {
        if (!b_HLT_PFMET100_PFMHT100_IDTight_) throw std::runtime_error("HLT_PFMET100_PFMHT100_IDTight branch doesn't exist");
        b_HLT_PFMET100_PFMHT100_IDTight_->GetEntry(index);
        loaded_HLT_PFMET100_PFMHT100_IDTight_ = true;
    }
    return HLT_PFMET100_PFMHT100_IDTight_;
}
const bool &Nano::HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned() {
    if (!loaded_HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned_) counter_uncached_HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned_++;
    else counter_cached_HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned_++;
    if (!loaded_HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned_) {
        if (!b_HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned_) throw std::runtime_error("HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned branch doesn't exist");
        b_HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned_->GetEntry(index);
        loaded_HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned_ = true;
    }
    return HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned_;
}
const bool &Nano::HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1() {
    if (!loaded_HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1_) counter_uncached_HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1_++;
    else counter_cached_HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1_++;
    if (!loaded_HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1_) {
        if (!b_HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1_) throw std::runtime_error("HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1 branch doesn't exist");
        b_HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1_->GetEntry(index);
        loaded_HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1_ = true;
    }
    return HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1_;
}
const bool &Nano::HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1() {
    if (!loaded_HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_) counter_uncached_HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_++;
    else counter_cached_HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_++;
    if (!loaded_HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_) {
        if (!b_HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_) throw std::runtime_error("HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1 branch doesn't exist");
        b_HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_->GetEntry(index);
        loaded_HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_ = true;
    }
    return HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_;
}
const bool &Nano::HLT_PFMET100_PFMHT100_IDTight_PFHT60() {
    if (!loaded_HLT_PFMET100_PFMHT100_IDTight_PFHT60_) counter_uncached_HLT_PFMET100_PFMHT100_IDTight_PFHT60_++;
    else counter_cached_HLT_PFMET100_PFMHT100_IDTight_PFHT60_++;
    if (!loaded_HLT_PFMET100_PFMHT100_IDTight_PFHT60_) {
        if (!b_HLT_PFMET100_PFMHT100_IDTight_PFHT60_) throw std::runtime_error("HLT_PFMET100_PFMHT100_IDTight_PFHT60 branch doesn't exist");
        b_HLT_PFMET100_PFMHT100_IDTight_PFHT60_->GetEntry(index);
        loaded_HLT_PFMET100_PFMHT100_IDTight_PFHT60_ = true;
    }
    return HLT_PFMET100_PFMHT100_IDTight_PFHT60_;
}
const bool &Nano::HLT_PFMET105_IsoTrk50() {
    if (!loaded_HLT_PFMET105_IsoTrk50_) counter_uncached_HLT_PFMET105_IsoTrk50_++;
    else counter_cached_HLT_PFMET105_IsoTrk50_++;
    if (!loaded_HLT_PFMET105_IsoTrk50_) {
        if (!b_HLT_PFMET105_IsoTrk50_) throw std::runtime_error("HLT_PFMET105_IsoTrk50 branch doesn't exist");
        b_HLT_PFMET105_IsoTrk50_->GetEntry(index);
        loaded_HLT_PFMET105_IsoTrk50_ = true;
    }
    return HLT_PFMET105_IsoTrk50_;
}
const bool &Nano::HLT_PFMET110_PFJet100() {
    if (!loaded_HLT_PFMET110_PFJet100_) counter_uncached_HLT_PFMET110_PFJet100_++;
    else counter_cached_HLT_PFMET110_PFJet100_++;
    if (!loaded_HLT_PFMET110_PFJet100_) {
        if (!b_HLT_PFMET110_PFJet100_) throw std::runtime_error("HLT_PFMET110_PFJet100 branch doesn't exist");
        b_HLT_PFMET110_PFJet100_->GetEntry(index);
        loaded_HLT_PFMET110_PFJet100_ = true;
    }
    return HLT_PFMET110_PFJet100_;
}
const bool &Nano::HLT_PFMET110_PFMHT110_IDTight() {
    if (!loaded_HLT_PFMET110_PFMHT110_IDTight_) counter_uncached_HLT_PFMET110_PFMHT110_IDTight_++;
    else counter_cached_HLT_PFMET110_PFMHT110_IDTight_++;
    if (!loaded_HLT_PFMET110_PFMHT110_IDTight_) {
        if (!b_HLT_PFMET110_PFMHT110_IDTight_) throw std::runtime_error("HLT_PFMET110_PFMHT110_IDTight branch doesn't exist");
        b_HLT_PFMET110_PFMHT110_IDTight_->GetEntry(index);
        loaded_HLT_PFMET110_PFMHT110_IDTight_ = true;
    }
    return HLT_PFMET110_PFMHT110_IDTight_;
}
const bool &Nano::HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1() {
    if (!loaded_HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1_) counter_uncached_HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1_++;
    else counter_cached_HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1_++;
    if (!loaded_HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1_) {
        if (!b_HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1_) throw std::runtime_error("HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1 branch doesn't exist");
        b_HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1_->GetEntry(index);
        loaded_HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1_ = true;
    }
    return HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1_;
}
const bool &Nano::HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1() {
    if (!loaded_HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_) counter_uncached_HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_++;
    else counter_cached_HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_++;
    if (!loaded_HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_) {
        if (!b_HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_) throw std::runtime_error("HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1 branch doesn't exist");
        b_HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_->GetEntry(index);
        loaded_HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_ = true;
    }
    return HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_;
}
const bool &Nano::HLT_PFMET120_BTagCSV_p067() {
    if (!loaded_HLT_PFMET120_BTagCSV_p067_) counter_uncached_HLT_PFMET120_BTagCSV_p067_++;
    else counter_cached_HLT_PFMET120_BTagCSV_p067_++;
    if (!loaded_HLT_PFMET120_BTagCSV_p067_) {
        if (!b_HLT_PFMET120_BTagCSV_p067_) throw std::runtime_error("HLT_PFMET120_BTagCSV_p067 branch doesn't exist");
        b_HLT_PFMET120_BTagCSV_p067_->GetEntry(index);
        loaded_HLT_PFMET120_BTagCSV_p067_ = true;
    }
    return HLT_PFMET120_BTagCSV_p067_;
}
const bool &Nano::HLT_PFMET120_Mu5() {
    if (!loaded_HLT_PFMET120_Mu5_) counter_uncached_HLT_PFMET120_Mu5_++;
    else counter_cached_HLT_PFMET120_Mu5_++;
    if (!loaded_HLT_PFMET120_Mu5_) {
        if (!b_HLT_PFMET120_Mu5_) throw std::runtime_error("HLT_PFMET120_Mu5 branch doesn't exist");
        b_HLT_PFMET120_Mu5_->GetEntry(index);
        loaded_HLT_PFMET120_Mu5_ = true;
    }
    return HLT_PFMET120_Mu5_;
}
const bool &Nano::HLT_PFMET120_PFMHT120_IDTight() {
    if (!loaded_HLT_PFMET120_PFMHT120_IDTight_) counter_uncached_HLT_PFMET120_PFMHT120_IDTight_++;
    else counter_cached_HLT_PFMET120_PFMHT120_IDTight_++;
    if (!loaded_HLT_PFMET120_PFMHT120_IDTight_) {
        if (!b_HLT_PFMET120_PFMHT120_IDTight_) throw std::runtime_error("HLT_PFMET120_PFMHT120_IDTight branch doesn't exist");
        b_HLT_PFMET120_PFMHT120_IDTight_->GetEntry(index);
        loaded_HLT_PFMET120_PFMHT120_IDTight_ = true;
    }
    return HLT_PFMET120_PFMHT120_IDTight_;
}
const bool &Nano::HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1() {
    if (!loaded_HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1_) counter_uncached_HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1_++;
    else counter_cached_HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1_++;
    if (!loaded_HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1_) {
        if (!b_HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1_) throw std::runtime_error("HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1 branch doesn't exist");
        b_HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1_->GetEntry(index);
        loaded_HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1_ = true;
    }
    return HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1_;
}
const bool &Nano::HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1() {
    if (!loaded_HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_) counter_uncached_HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_++;
    else counter_cached_HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_++;
    if (!loaded_HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_) {
        if (!b_HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_) throw std::runtime_error("HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1 branch doesn't exist");
        b_HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_->GetEntry(index);
        loaded_HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_ = true;
    }
    return HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_;
}
const bool &Nano::HLT_PFMET120_PFMHT120_IDTight_HFCleaned() {
    if (!loaded_HLT_PFMET120_PFMHT120_IDTight_HFCleaned_) counter_uncached_HLT_PFMET120_PFMHT120_IDTight_HFCleaned_++;
    else counter_cached_HLT_PFMET120_PFMHT120_IDTight_HFCleaned_++;
    if (!loaded_HLT_PFMET120_PFMHT120_IDTight_HFCleaned_) {
        if (!b_HLT_PFMET120_PFMHT120_IDTight_HFCleaned_) throw std::runtime_error("HLT_PFMET120_PFMHT120_IDTight_HFCleaned branch doesn't exist");
        b_HLT_PFMET120_PFMHT120_IDTight_HFCleaned_->GetEntry(index);
        loaded_HLT_PFMET120_PFMHT120_IDTight_HFCleaned_ = true;
    }
    return HLT_PFMET120_PFMHT120_IDTight_HFCleaned_;
}
const bool &Nano::HLT_PFMET120_PFMHT120_IDTight_PFHT60() {
    if (!loaded_HLT_PFMET120_PFMHT120_IDTight_PFHT60_) counter_uncached_HLT_PFMET120_PFMHT120_IDTight_PFHT60_++;
    else counter_cached_HLT_PFMET120_PFMHT120_IDTight_PFHT60_++;
    if (!loaded_HLT_PFMET120_PFMHT120_IDTight_PFHT60_) {
        if (!b_HLT_PFMET120_PFMHT120_IDTight_PFHT60_) throw std::runtime_error("HLT_PFMET120_PFMHT120_IDTight_PFHT60 branch doesn't exist");
        b_HLT_PFMET120_PFMHT120_IDTight_PFHT60_->GetEntry(index);
        loaded_HLT_PFMET120_PFMHT120_IDTight_PFHT60_ = true;
    }
    return HLT_PFMET120_PFMHT120_IDTight_PFHT60_;
}
const bool &Nano::HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned() {
    if (!loaded_HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned_) counter_uncached_HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned_++;
    else counter_cached_HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned_++;
    if (!loaded_HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned_) {
        if (!b_HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned_) throw std::runtime_error("HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned branch doesn't exist");
        b_HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned_->GetEntry(index);
        loaded_HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned_ = true;
    }
    return HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned_;
}
const bool &Nano::HLT_PFMET130_PFMHT130_IDTight() {
    if (!loaded_HLT_PFMET130_PFMHT130_IDTight_) counter_uncached_HLT_PFMET130_PFMHT130_IDTight_++;
    else counter_cached_HLT_PFMET130_PFMHT130_IDTight_++;
    if (!loaded_HLT_PFMET130_PFMHT130_IDTight_) {
        if (!b_HLT_PFMET130_PFMHT130_IDTight_) throw std::runtime_error("HLT_PFMET130_PFMHT130_IDTight branch doesn't exist");
        b_HLT_PFMET130_PFMHT130_IDTight_->GetEntry(index);
        loaded_HLT_PFMET130_PFMHT130_IDTight_ = true;
    }
    return HLT_PFMET130_PFMHT130_IDTight_;
}
const bool &Nano::HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1() {
    if (!loaded_HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1_) counter_uncached_HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1_++;
    else counter_cached_HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1_++;
    if (!loaded_HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1_) {
        if (!b_HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1_) throw std::runtime_error("HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1 branch doesn't exist");
        b_HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1_->GetEntry(index);
        loaded_HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1_ = true;
    }
    return HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1_;
}
const bool &Nano::HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1() {
    if (!loaded_HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_) counter_uncached_HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_++;
    else counter_cached_HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_++;
    if (!loaded_HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_) {
        if (!b_HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_) throw std::runtime_error("HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1 branch doesn't exist");
        b_HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_->GetEntry(index);
        loaded_HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_ = true;
    }
    return HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_;
}
const bool &Nano::HLT_PFMET140_PFMHT140_IDTight() {
    if (!loaded_HLT_PFMET140_PFMHT140_IDTight_) counter_uncached_HLT_PFMET140_PFMHT140_IDTight_++;
    else counter_cached_HLT_PFMET140_PFMHT140_IDTight_++;
    if (!loaded_HLT_PFMET140_PFMHT140_IDTight_) {
        if (!b_HLT_PFMET140_PFMHT140_IDTight_) throw std::runtime_error("HLT_PFMET140_PFMHT140_IDTight branch doesn't exist");
        b_HLT_PFMET140_PFMHT140_IDTight_->GetEntry(index);
        loaded_HLT_PFMET140_PFMHT140_IDTight_ = true;
    }
    return HLT_PFMET140_PFMHT140_IDTight_;
}
const bool &Nano::HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1() {
    if (!loaded_HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1_) counter_uncached_HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1_++;
    else counter_cached_HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1_++;
    if (!loaded_HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1_) {
        if (!b_HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1_) throw std::runtime_error("HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1 branch doesn't exist");
        b_HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1_->GetEntry(index);
        loaded_HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1_ = true;
    }
    return HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1_;
}
const bool &Nano::HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1() {
    if (!loaded_HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_) counter_uncached_HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_++;
    else counter_cached_HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_++;
    if (!loaded_HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_) {
        if (!b_HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_) throw std::runtime_error("HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1 branch doesn't exist");
        b_HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_->GetEntry(index);
        loaded_HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_ = true;
    }
    return HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_;
}
const bool &Nano::HLT_PFMET170_BeamHaloCleaned() {
    if (!loaded_HLT_PFMET170_BeamHaloCleaned_) counter_uncached_HLT_PFMET170_BeamHaloCleaned_++;
    else counter_cached_HLT_PFMET170_BeamHaloCleaned_++;
    if (!loaded_HLT_PFMET170_BeamHaloCleaned_) {
        if (!b_HLT_PFMET170_BeamHaloCleaned_) throw std::runtime_error("HLT_PFMET170_BeamHaloCleaned branch doesn't exist");
        b_HLT_PFMET170_BeamHaloCleaned_->GetEntry(index);
        loaded_HLT_PFMET170_BeamHaloCleaned_ = true;
    }
    return HLT_PFMET170_BeamHaloCleaned_;
}
const bool &Nano::HLT_PFMET170_HBHECleaned() {
    if (!loaded_HLT_PFMET170_HBHECleaned_) counter_uncached_HLT_PFMET170_HBHECleaned_++;
    else counter_cached_HLT_PFMET170_HBHECleaned_++;
    if (!loaded_HLT_PFMET170_HBHECleaned_) {
        if (!b_HLT_PFMET170_HBHECleaned_) throw std::runtime_error("HLT_PFMET170_HBHECleaned branch doesn't exist");
        b_HLT_PFMET170_HBHECleaned_->GetEntry(index);
        loaded_HLT_PFMET170_HBHECleaned_ = true;
    }
    return HLT_PFMET170_HBHECleaned_;
}
const bool &Nano::HLT_PFMET170_HBHE_BeamHaloCleaned() {
    if (!loaded_HLT_PFMET170_HBHE_BeamHaloCleaned_) counter_uncached_HLT_PFMET170_HBHE_BeamHaloCleaned_++;
    else counter_cached_HLT_PFMET170_HBHE_BeamHaloCleaned_++;
    if (!loaded_HLT_PFMET170_HBHE_BeamHaloCleaned_) {
        if (!b_HLT_PFMET170_HBHE_BeamHaloCleaned_) throw std::runtime_error("HLT_PFMET170_HBHE_BeamHaloCleaned branch doesn't exist");
        b_HLT_PFMET170_HBHE_BeamHaloCleaned_->GetEntry(index);
        loaded_HLT_PFMET170_HBHE_BeamHaloCleaned_ = true;
    }
    return HLT_PFMET170_HBHE_BeamHaloCleaned_;
}
const bool &Nano::HLT_PFMET170_JetIdCleaned() {
    if (!loaded_HLT_PFMET170_JetIdCleaned_) counter_uncached_HLT_PFMET170_JetIdCleaned_++;
    else counter_cached_HLT_PFMET170_JetIdCleaned_++;
    if (!loaded_HLT_PFMET170_JetIdCleaned_) {
        if (!b_HLT_PFMET170_JetIdCleaned_) throw std::runtime_error("HLT_PFMET170_JetIdCleaned branch doesn't exist");
        b_HLT_PFMET170_JetIdCleaned_->GetEntry(index);
        loaded_HLT_PFMET170_JetIdCleaned_ = true;
    }
    return HLT_PFMET170_JetIdCleaned_;
}
const bool &Nano::HLT_PFMET170_NoiseCleaned() {
    if (!loaded_HLT_PFMET170_NoiseCleaned_) counter_uncached_HLT_PFMET170_NoiseCleaned_++;
    else counter_cached_HLT_PFMET170_NoiseCleaned_++;
    if (!loaded_HLT_PFMET170_NoiseCleaned_) {
        if (!b_HLT_PFMET170_NoiseCleaned_) throw std::runtime_error("HLT_PFMET170_NoiseCleaned branch doesn't exist");
        b_HLT_PFMET170_NoiseCleaned_->GetEntry(index);
        loaded_HLT_PFMET170_NoiseCleaned_ = true;
    }
    return HLT_PFMET170_NoiseCleaned_;
}
const bool &Nano::HLT_PFMET170_NotCleaned() {
    if (!loaded_HLT_PFMET170_NotCleaned_) counter_uncached_HLT_PFMET170_NotCleaned_++;
    else counter_cached_HLT_PFMET170_NotCleaned_++;
    if (!loaded_HLT_PFMET170_NotCleaned_) {
        if (!b_HLT_PFMET170_NotCleaned_) throw std::runtime_error("HLT_PFMET170_NotCleaned branch doesn't exist");
        b_HLT_PFMET170_NotCleaned_->GetEntry(index);
        loaded_HLT_PFMET170_NotCleaned_ = true;
    }
    return HLT_PFMET170_NotCleaned_;
}
const bool &Nano::HLT_PFMET200_BeamHaloCleaned() {
    if (!loaded_HLT_PFMET200_BeamHaloCleaned_) counter_uncached_HLT_PFMET200_BeamHaloCleaned_++;
    else counter_cached_HLT_PFMET200_BeamHaloCleaned_++;
    if (!loaded_HLT_PFMET200_BeamHaloCleaned_) {
        if (!b_HLT_PFMET200_BeamHaloCleaned_) throw std::runtime_error("HLT_PFMET200_BeamHaloCleaned branch doesn't exist");
        b_HLT_PFMET200_BeamHaloCleaned_->GetEntry(index);
        loaded_HLT_PFMET200_BeamHaloCleaned_ = true;
    }
    return HLT_PFMET200_BeamHaloCleaned_;
}
const bool &Nano::HLT_PFMET200_HBHECleaned() {
    if (!loaded_HLT_PFMET200_HBHECleaned_) counter_uncached_HLT_PFMET200_HBHECleaned_++;
    else counter_cached_HLT_PFMET200_HBHECleaned_++;
    if (!loaded_HLT_PFMET200_HBHECleaned_) {
        if (!b_HLT_PFMET200_HBHECleaned_) throw std::runtime_error("HLT_PFMET200_HBHECleaned branch doesn't exist");
        b_HLT_PFMET200_HBHECleaned_->GetEntry(index);
        loaded_HLT_PFMET200_HBHECleaned_ = true;
    }
    return HLT_PFMET200_HBHECleaned_;
}
const bool &Nano::HLT_PFMET200_HBHE_BeamHaloCleaned() {
    if (!loaded_HLT_PFMET200_HBHE_BeamHaloCleaned_) counter_uncached_HLT_PFMET200_HBHE_BeamHaloCleaned_++;
    else counter_cached_HLT_PFMET200_HBHE_BeamHaloCleaned_++;
    if (!loaded_HLT_PFMET200_HBHE_BeamHaloCleaned_) {
        if (!b_HLT_PFMET200_HBHE_BeamHaloCleaned_) throw std::runtime_error("HLT_PFMET200_HBHE_BeamHaloCleaned branch doesn't exist");
        b_HLT_PFMET200_HBHE_BeamHaloCleaned_->GetEntry(index);
        loaded_HLT_PFMET200_HBHE_BeamHaloCleaned_ = true;
    }
    return HLT_PFMET200_HBHE_BeamHaloCleaned_;
}
const bool &Nano::HLT_PFMET200_NotCleaned() {
    if (!loaded_HLT_PFMET200_NotCleaned_) counter_uncached_HLT_PFMET200_NotCleaned_++;
    else counter_cached_HLT_PFMET200_NotCleaned_++;
    if (!loaded_HLT_PFMET200_NotCleaned_) {
        if (!b_HLT_PFMET200_NotCleaned_) throw std::runtime_error("HLT_PFMET200_NotCleaned branch doesn't exist");
        b_HLT_PFMET200_NotCleaned_->GetEntry(index);
        loaded_HLT_PFMET200_NotCleaned_ = true;
    }
    return HLT_PFMET200_NotCleaned_;
}
const bool &Nano::HLT_PFMET250_HBHECleaned() {
    if (!loaded_HLT_PFMET250_HBHECleaned_) counter_uncached_HLT_PFMET250_HBHECleaned_++;
    else counter_cached_HLT_PFMET250_HBHECleaned_++;
    if (!loaded_HLT_PFMET250_HBHECleaned_) {
        if (!b_HLT_PFMET250_HBHECleaned_) throw std::runtime_error("HLT_PFMET250_HBHECleaned branch doesn't exist");
        b_HLT_PFMET250_HBHECleaned_->GetEntry(index);
        loaded_HLT_PFMET250_HBHECleaned_ = true;
    }
    return HLT_PFMET250_HBHECleaned_;
}
const bool &Nano::HLT_PFMET250_NotCleaned() {
    if (!loaded_HLT_PFMET250_NotCleaned_) counter_uncached_HLT_PFMET250_NotCleaned_++;
    else counter_cached_HLT_PFMET250_NotCleaned_++;
    if (!loaded_HLT_PFMET250_NotCleaned_) {
        if (!b_HLT_PFMET250_NotCleaned_) throw std::runtime_error("HLT_PFMET250_NotCleaned branch doesn't exist");
        b_HLT_PFMET250_NotCleaned_->GetEntry(index);
        loaded_HLT_PFMET250_NotCleaned_ = true;
    }
    return HLT_PFMET250_NotCleaned_;
}
const bool &Nano::HLT_PFMET300() {
    if (!loaded_HLT_PFMET300_) counter_uncached_HLT_PFMET300_++;
    else counter_cached_HLT_PFMET300_++;
    if (!loaded_HLT_PFMET300_) {
        if (!b_HLT_PFMET300_) throw std::runtime_error("HLT_PFMET300 branch doesn't exist");
        b_HLT_PFMET300_->GetEntry(index);
        loaded_HLT_PFMET300_ = true;
    }
    return HLT_PFMET300_;
}
const bool &Nano::HLT_PFMET300_HBHECleaned() {
    if (!loaded_HLT_PFMET300_HBHECleaned_) counter_uncached_HLT_PFMET300_HBHECleaned_++;
    else counter_cached_HLT_PFMET300_HBHECleaned_++;
    if (!loaded_HLT_PFMET300_HBHECleaned_) {
        if (!b_HLT_PFMET300_HBHECleaned_) throw std::runtime_error("HLT_PFMET300_HBHECleaned branch doesn't exist");
        b_HLT_PFMET300_HBHECleaned_->GetEntry(index);
        loaded_HLT_PFMET300_HBHECleaned_ = true;
    }
    return HLT_PFMET300_HBHECleaned_;
}
const bool &Nano::HLT_PFMET300_NotCleaned() {
    if (!loaded_HLT_PFMET300_NotCleaned_) counter_uncached_HLT_PFMET300_NotCleaned_++;
    else counter_cached_HLT_PFMET300_NotCleaned_++;
    if (!loaded_HLT_PFMET300_NotCleaned_) {
        if (!b_HLT_PFMET300_NotCleaned_) throw std::runtime_error("HLT_PFMET300_NotCleaned branch doesn't exist");
        b_HLT_PFMET300_NotCleaned_->GetEntry(index);
        loaded_HLT_PFMET300_NotCleaned_ = true;
    }
    return HLT_PFMET300_NotCleaned_;
}
const bool &Nano::HLT_PFMET400() {
    if (!loaded_HLT_PFMET400_) counter_uncached_HLT_PFMET400_++;
    else counter_cached_HLT_PFMET400_++;
    if (!loaded_HLT_PFMET400_) {
        if (!b_HLT_PFMET400_) throw std::runtime_error("HLT_PFMET400 branch doesn't exist");
        b_HLT_PFMET400_->GetEntry(index);
        loaded_HLT_PFMET400_ = true;
    }
    return HLT_PFMET400_;
}
const bool &Nano::HLT_PFMET500() {
    if (!loaded_HLT_PFMET500_) counter_uncached_HLT_PFMET500_++;
    else counter_cached_HLT_PFMET500_++;
    if (!loaded_HLT_PFMET500_) {
        if (!b_HLT_PFMET500_) throw std::runtime_error("HLT_PFMET500 branch doesn't exist");
        b_HLT_PFMET500_->GetEntry(index);
        loaded_HLT_PFMET500_ = true;
    }
    return HLT_PFMET500_;
}
const bool &Nano::HLT_PFMET600() {
    if (!loaded_HLT_PFMET600_) counter_uncached_HLT_PFMET600_++;
    else counter_cached_HLT_PFMET600_++;
    if (!loaded_HLT_PFMET600_) {
        if (!b_HLT_PFMET600_) throw std::runtime_error("HLT_PFMET600 branch doesn't exist");
        b_HLT_PFMET600_->GetEntry(index);
        loaded_HLT_PFMET600_ = true;
    }
    return HLT_PFMET600_;
}
const bool &Nano::HLT_PFMET90_PFMHT90_IDTight() {
    if (!loaded_HLT_PFMET90_PFMHT90_IDTight_) counter_uncached_HLT_PFMET90_PFMHT90_IDTight_++;
    else counter_cached_HLT_PFMET90_PFMHT90_IDTight_++;
    if (!loaded_HLT_PFMET90_PFMHT90_IDTight_) {
        if (!b_HLT_PFMET90_PFMHT90_IDTight_) throw std::runtime_error("HLT_PFMET90_PFMHT90_IDTight branch doesn't exist");
        b_HLT_PFMET90_PFMHT90_IDTight_->GetEntry(index);
        loaded_HLT_PFMET90_PFMHT90_IDTight_ = true;
    }
    return HLT_PFMET90_PFMHT90_IDTight_;
}
const bool &Nano::HLT_PFMETNoMu100_PFMHTNoMu100_IDTight() {
    if (!loaded_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_) counter_uncached_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_++;
    else counter_cached_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_++;
    if (!loaded_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_) {
        if (!b_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_) throw std::runtime_error("HLT_PFMETNoMu100_PFMHTNoMu100_IDTight branch doesn't exist");
        b_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_->GetEntry(index);
        loaded_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_ = true;
    }
    return HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_;
}
const bool &Nano::HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60() {
    if (!loaded_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_) counter_uncached_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_++;
    else counter_cached_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_++;
    if (!loaded_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_) {
        if (!b_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_) throw std::runtime_error("HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60 branch doesn't exist");
        b_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_->GetEntry(index);
        loaded_HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_ = true;
    }
    return HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_;
}
const bool &Nano::HLT_PFMETNoMu110_PFMHTNoMu110_IDTight() {
    if (!loaded_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_) counter_uncached_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_++;
    else counter_cached_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_++;
    if (!loaded_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_) {
        if (!b_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_) throw std::runtime_error("HLT_PFMETNoMu110_PFMHTNoMu110_IDTight branch doesn't exist");
        b_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_->GetEntry(index);
        loaded_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_ = true;
    }
    return HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_;
}
const bool &Nano::HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF() {
    if (!loaded_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_) counter_uncached_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_++;
    else counter_cached_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_++;
    if (!loaded_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_) {
        if (!b_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_) throw std::runtime_error("HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF branch doesn't exist");
        b_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_->GetEntry(index);
        loaded_HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_ = true;
    }
    return HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_;
}
const bool &Nano::HLT_PFMETNoMu120_PFMHTNoMu120_IDTight() {
    if (!loaded_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_) counter_uncached_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_++;
    else counter_cached_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_++;
    if (!loaded_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_) {
        if (!b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_) throw std::runtime_error("HLT_PFMETNoMu120_PFMHTNoMu120_IDTight branch doesn't exist");
        b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_->GetEntry(index);
        loaded_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_ = true;
    }
    return HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_;
}
const bool &Nano::HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF() {
    if (!loaded_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_) counter_uncached_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_++;
    else counter_cached_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_++;
    if (!loaded_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_) {
        if (!b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_) throw std::runtime_error("HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF branch doesn't exist");
        b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_->GetEntry(index);
        loaded_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_ = true;
    }
    return HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_;
}
const bool &Nano::HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned() {
    if (!loaded_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned_) counter_uncached_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned_++;
    else counter_cached_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned_++;
    if (!loaded_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned_) {
        if (!b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned_) throw std::runtime_error("HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned branch doesn't exist");
        b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned_->GetEntry(index);
        loaded_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned_ = true;
    }
    return HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned_;
}
const bool &Nano::HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60() {
    if (!loaded_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_) counter_uncached_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_++;
    else counter_cached_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_++;
    if (!loaded_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_) {
        if (!b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_) throw std::runtime_error("HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60 branch doesn't exist");
        b_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_->GetEntry(index);
        loaded_HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_ = true;
    }
    return HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_;
}
const bool &Nano::HLT_PFMETNoMu130_PFMHTNoMu130_IDTight() {
    if (!loaded_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_) counter_uncached_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_++;
    else counter_cached_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_++;
    if (!loaded_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_) {
        if (!b_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_) throw std::runtime_error("HLT_PFMETNoMu130_PFMHTNoMu130_IDTight branch doesn't exist");
        b_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_->GetEntry(index);
        loaded_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_ = true;
    }
    return HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_;
}
const bool &Nano::HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF() {
    if (!loaded_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_) counter_uncached_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_++;
    else counter_cached_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_++;
    if (!loaded_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_) {
        if (!b_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_) throw std::runtime_error("HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF branch doesn't exist");
        b_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_->GetEntry(index);
        loaded_HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_ = true;
    }
    return HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_;
}
const bool &Nano::HLT_PFMETNoMu140_PFMHTNoMu140_IDTight() {
    if (!loaded_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_) counter_uncached_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_++;
    else counter_cached_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_++;
    if (!loaded_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_) {
        if (!b_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_) throw std::runtime_error("HLT_PFMETNoMu140_PFMHTNoMu140_IDTight branch doesn't exist");
        b_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_->GetEntry(index);
        loaded_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_ = true;
    }
    return HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_;
}
const bool &Nano::HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF() {
    if (!loaded_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_) counter_uncached_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_++;
    else counter_cached_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_++;
    if (!loaded_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_) {
        if (!b_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_) throw std::runtime_error("HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF branch doesn't exist");
        b_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_->GetEntry(index);
        loaded_HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_ = true;
    }
    return HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_;
}
const bool &Nano::HLT_PFMETNoMu90_PFMHTNoMu90_IDTight() {
    if (!loaded_HLT_PFMETNoMu90_PFMHTNoMu90_IDTight_) counter_uncached_HLT_PFMETNoMu90_PFMHTNoMu90_IDTight_++;
    else counter_cached_HLT_PFMETNoMu90_PFMHTNoMu90_IDTight_++;
    if (!loaded_HLT_PFMETNoMu90_PFMHTNoMu90_IDTight_) {
        if (!b_HLT_PFMETNoMu90_PFMHTNoMu90_IDTight_) throw std::runtime_error("HLT_PFMETNoMu90_PFMHTNoMu90_IDTight branch doesn't exist");
        b_HLT_PFMETNoMu90_PFMHTNoMu90_IDTight_->GetEntry(index);
        loaded_HLT_PFMETNoMu90_PFMHTNoMu90_IDTight_ = true;
    }
    return HLT_PFMETNoMu90_PFMHTNoMu90_IDTight_;
}
const bool &Nano::HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60() {
    if (!loaded_HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_) counter_uncached_HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_++;
    else counter_cached_HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_++;
    if (!loaded_HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_) {
        if (!b_HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_) throw std::runtime_error("HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60 branch doesn't exist");
        b_HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_->GetEntry(index);
        loaded_HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_ = true;
    }
    return HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_;
}
const bool &Nano::HLT_PFMETTypeOne110_PFMHT110_IDTight() {
    if (!loaded_HLT_PFMETTypeOne110_PFMHT110_IDTight_) counter_uncached_HLT_PFMETTypeOne110_PFMHT110_IDTight_++;
    else counter_cached_HLT_PFMETTypeOne110_PFMHT110_IDTight_++;
    if (!loaded_HLT_PFMETTypeOne110_PFMHT110_IDTight_) {
        if (!b_HLT_PFMETTypeOne110_PFMHT110_IDTight_) throw std::runtime_error("HLT_PFMETTypeOne110_PFMHT110_IDTight branch doesn't exist");
        b_HLT_PFMETTypeOne110_PFMHT110_IDTight_->GetEntry(index);
        loaded_HLT_PFMETTypeOne110_PFMHT110_IDTight_ = true;
    }
    return HLT_PFMETTypeOne110_PFMHT110_IDTight_;
}
const bool &Nano::HLT_PFMETTypeOne120_PFMHT120_IDTight() {
    if (!loaded_HLT_PFMETTypeOne120_PFMHT120_IDTight_) counter_uncached_HLT_PFMETTypeOne120_PFMHT120_IDTight_++;
    else counter_cached_HLT_PFMETTypeOne120_PFMHT120_IDTight_++;
    if (!loaded_HLT_PFMETTypeOne120_PFMHT120_IDTight_) {
        if (!b_HLT_PFMETTypeOne120_PFMHT120_IDTight_) throw std::runtime_error("HLT_PFMETTypeOne120_PFMHT120_IDTight branch doesn't exist");
        b_HLT_PFMETTypeOne120_PFMHT120_IDTight_->GetEntry(index);
        loaded_HLT_PFMETTypeOne120_PFMHT120_IDTight_ = true;
    }
    return HLT_PFMETTypeOne120_PFMHT120_IDTight_;
}
const bool &Nano::HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned() {
    if (!loaded_HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned_) counter_uncached_HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned_++;
    else counter_cached_HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned_++;
    if (!loaded_HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned_) {
        if (!b_HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned_) throw std::runtime_error("HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned branch doesn't exist");
        b_HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned_->GetEntry(index);
        loaded_HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned_ = true;
    }
    return HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned_;
}
const bool &Nano::HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60() {
    if (!loaded_HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_) counter_uncached_HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_++;
    else counter_cached_HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_++;
    if (!loaded_HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_) {
        if (!b_HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_) throw std::runtime_error("HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60 branch doesn't exist");
        b_HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_->GetEntry(index);
        loaded_HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_ = true;
    }
    return HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_;
}
const bool &Nano::HLT_PFMETTypeOne130_PFMHT130_IDTight() {
    if (!loaded_HLT_PFMETTypeOne130_PFMHT130_IDTight_) counter_uncached_HLT_PFMETTypeOne130_PFMHT130_IDTight_++;
    else counter_cached_HLT_PFMETTypeOne130_PFMHT130_IDTight_++;
    if (!loaded_HLT_PFMETTypeOne130_PFMHT130_IDTight_) {
        if (!b_HLT_PFMETTypeOne130_PFMHT130_IDTight_) throw std::runtime_error("HLT_PFMETTypeOne130_PFMHT130_IDTight branch doesn't exist");
        b_HLT_PFMETTypeOne130_PFMHT130_IDTight_->GetEntry(index);
        loaded_HLT_PFMETTypeOne130_PFMHT130_IDTight_ = true;
    }
    return HLT_PFMETTypeOne130_PFMHT130_IDTight_;
}
const bool &Nano::HLT_PFMETTypeOne140_PFMHT140_IDTight() {
    if (!loaded_HLT_PFMETTypeOne140_PFMHT140_IDTight_) counter_uncached_HLT_PFMETTypeOne140_PFMHT140_IDTight_++;
    else counter_cached_HLT_PFMETTypeOne140_PFMHT140_IDTight_++;
    if (!loaded_HLT_PFMETTypeOne140_PFMHT140_IDTight_) {
        if (!b_HLT_PFMETTypeOne140_PFMHT140_IDTight_) throw std::runtime_error("HLT_PFMETTypeOne140_PFMHT140_IDTight branch doesn't exist");
        b_HLT_PFMETTypeOne140_PFMHT140_IDTight_->GetEntry(index);
        loaded_HLT_PFMETTypeOne140_PFMHT140_IDTight_ = true;
    }
    return HLT_PFMETTypeOne140_PFMHT140_IDTight_;
}
const bool &Nano::HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned() {
    if (!loaded_HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned_) counter_uncached_HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned_++;
    else counter_cached_HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned_++;
    if (!loaded_HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned_) {
        if (!b_HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned_) throw std::runtime_error("HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned branch doesn't exist");
        b_HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned_->GetEntry(index);
        loaded_HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned_ = true;
    }
    return HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned_;
}
const bool &Nano::HLT_PFMETTypeOne200_BeamHaloCleaned() {
    if (!loaded_HLT_PFMETTypeOne200_BeamHaloCleaned_) counter_uncached_HLT_PFMETTypeOne200_BeamHaloCleaned_++;
    else counter_cached_HLT_PFMETTypeOne200_BeamHaloCleaned_++;
    if (!loaded_HLT_PFMETTypeOne200_BeamHaloCleaned_) {
        if (!b_HLT_PFMETTypeOne200_BeamHaloCleaned_) throw std::runtime_error("HLT_PFMETTypeOne200_BeamHaloCleaned branch doesn't exist");
        b_HLT_PFMETTypeOne200_BeamHaloCleaned_->GetEntry(index);
        loaded_HLT_PFMETTypeOne200_BeamHaloCleaned_ = true;
    }
    return HLT_PFMETTypeOne200_BeamHaloCleaned_;
}
const bool &Nano::HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned() {
    if (!loaded_HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_) counter_uncached_HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_++;
    else counter_cached_HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_++;
    if (!loaded_HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_) {
        if (!b_HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_) throw std::runtime_error("HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned branch doesn't exist");
        b_HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_->GetEntry(index);
        loaded_HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_ = true;
    }
    return HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_;
}
const bool &Nano::HLT_PFTau120_eta2p1() {
    if (!loaded_HLT_PFTau120_eta2p1_) counter_uncached_HLT_PFTau120_eta2p1_++;
    else counter_cached_HLT_PFTau120_eta2p1_++;
    if (!loaded_HLT_PFTau120_eta2p1_) {
        if (!b_HLT_PFTau120_eta2p1_) throw std::runtime_error("HLT_PFTau120_eta2p1 branch doesn't exist");
        b_HLT_PFTau120_eta2p1_->GetEntry(index);
        loaded_HLT_PFTau120_eta2p1_ = true;
    }
    return HLT_PFTau120_eta2p1_;
}
const bool &Nano::HLT_PFTau140_eta2p1() {
    if (!loaded_HLT_PFTau140_eta2p1_) counter_uncached_HLT_PFTau140_eta2p1_++;
    else counter_cached_HLT_PFTau140_eta2p1_++;
    if (!loaded_HLT_PFTau140_eta2p1_) {
        if (!b_HLT_PFTau140_eta2p1_) throw std::runtime_error("HLT_PFTau140_eta2p1 branch doesn't exist");
        b_HLT_PFTau140_eta2p1_->GetEntry(index);
        loaded_HLT_PFTau140_eta2p1_ = true;
    }
    return HLT_PFTau140_eta2p1_;
}
const bool &Nano::HLT_PPSMaxTracksPerArm1() {
    if (!loaded_HLT_PPSMaxTracksPerArm1_) counter_uncached_HLT_PPSMaxTracksPerArm1_++;
    else counter_cached_HLT_PPSMaxTracksPerArm1_++;
    if (!loaded_HLT_PPSMaxTracksPerArm1_) {
        if (!b_HLT_PPSMaxTracksPerArm1_) throw std::runtime_error("HLT_PPSMaxTracksPerArm1 branch doesn't exist");
        b_HLT_PPSMaxTracksPerArm1_->GetEntry(index);
        loaded_HLT_PPSMaxTracksPerArm1_ = true;
    }
    return HLT_PPSMaxTracksPerArm1_;
}
const bool &Nano::HLT_PPSMaxTracksPerRP4() {
    if (!loaded_HLT_PPSMaxTracksPerRP4_) counter_uncached_HLT_PPSMaxTracksPerRP4_++;
    else counter_cached_HLT_PPSMaxTracksPerRP4_++;
    if (!loaded_HLT_PPSMaxTracksPerRP4_) {
        if (!b_HLT_PPSMaxTracksPerRP4_) throw std::runtime_error("HLT_PPSMaxTracksPerRP4 branch doesn't exist");
        b_HLT_PPSMaxTracksPerRP4_->GetEntry(index);
        loaded_HLT_PPSMaxTracksPerRP4_ = true;
    }
    return HLT_PPSMaxTracksPerRP4_;
}
const bool &Nano::HLT_Photon100EBHE10() {
    if (!loaded_HLT_Photon100EBHE10_) counter_uncached_HLT_Photon100EBHE10_++;
    else counter_cached_HLT_Photon100EBHE10_++;
    if (!loaded_HLT_Photon100EBHE10_) {
        if (!b_HLT_Photon100EBHE10_) throw std::runtime_error("HLT_Photon100EBHE10 branch doesn't exist");
        b_HLT_Photon100EBHE10_->GetEntry(index);
        loaded_HLT_Photon100EBHE10_ = true;
    }
    return HLT_Photon100EBHE10_;
}
const bool &Nano::HLT_Photon100EB_TightID_TightIso() {
    if (!loaded_HLT_Photon100EB_TightID_TightIso_) counter_uncached_HLT_Photon100EB_TightID_TightIso_++;
    else counter_cached_HLT_Photon100EB_TightID_TightIso_++;
    if (!loaded_HLT_Photon100EB_TightID_TightIso_) {
        if (!b_HLT_Photon100EB_TightID_TightIso_) throw std::runtime_error("HLT_Photon100EB_TightID_TightIso branch doesn't exist");
        b_HLT_Photon100EB_TightID_TightIso_->GetEntry(index);
        loaded_HLT_Photon100EB_TightID_TightIso_ = true;
    }
    return HLT_Photon100EB_TightID_TightIso_;
}
const bool &Nano::HLT_Photon100EEHE10() {
    if (!loaded_HLT_Photon100EEHE10_) counter_uncached_HLT_Photon100EEHE10_++;
    else counter_cached_HLT_Photon100EEHE10_++;
    if (!loaded_HLT_Photon100EEHE10_) {
        if (!b_HLT_Photon100EEHE10_) throw std::runtime_error("HLT_Photon100EEHE10 branch doesn't exist");
        b_HLT_Photon100EEHE10_->GetEntry(index);
        loaded_HLT_Photon100EEHE10_ = true;
    }
    return HLT_Photon100EEHE10_;
}
const bool &Nano::HLT_Photon100EE_TightID_TightIso() {
    if (!loaded_HLT_Photon100EE_TightID_TightIso_) counter_uncached_HLT_Photon100EE_TightID_TightIso_++;
    else counter_cached_HLT_Photon100EE_TightID_TightIso_++;
    if (!loaded_HLT_Photon100EE_TightID_TightIso_) {
        if (!b_HLT_Photon100EE_TightID_TightIso_) throw std::runtime_error("HLT_Photon100EE_TightID_TightIso branch doesn't exist");
        b_HLT_Photon100EE_TightID_TightIso_->GetEntry(index);
        loaded_HLT_Photon100EE_TightID_TightIso_ = true;
    }
    return HLT_Photon100EE_TightID_TightIso_;
}
const bool &Nano::HLT_Photon110EB_TightID_TightIso() {
    if (!loaded_HLT_Photon110EB_TightID_TightIso_) counter_uncached_HLT_Photon110EB_TightID_TightIso_++;
    else counter_cached_HLT_Photon110EB_TightID_TightIso_++;
    if (!loaded_HLT_Photon110EB_TightID_TightIso_) {
        if (!b_HLT_Photon110EB_TightID_TightIso_) throw std::runtime_error("HLT_Photon110EB_TightID_TightIso branch doesn't exist");
        b_HLT_Photon110EB_TightID_TightIso_->GetEntry(index);
        loaded_HLT_Photon110EB_TightID_TightIso_ = true;
    }
    return HLT_Photon110EB_TightID_TightIso_;
}
const bool &Nano::HLT_Photon120() {
    if (!loaded_HLT_Photon120_) counter_uncached_HLT_Photon120_++;
    else counter_cached_HLT_Photon120_++;
    if (!loaded_HLT_Photon120_) {
        if (!b_HLT_Photon120_) throw std::runtime_error("HLT_Photon120 branch doesn't exist");
        b_HLT_Photon120_->GetEntry(index);
        loaded_HLT_Photon120_ = true;
    }
    return HLT_Photon120_;
}
const bool &Nano::HLT_Photon120EB_TightID_TightIso() {
    if (!loaded_HLT_Photon120EB_TightID_TightIso_) counter_uncached_HLT_Photon120EB_TightID_TightIso_++;
    else counter_cached_HLT_Photon120EB_TightID_TightIso_++;
    if (!loaded_HLT_Photon120EB_TightID_TightIso_) {
        if (!b_HLT_Photon120EB_TightID_TightIso_) throw std::runtime_error("HLT_Photon120EB_TightID_TightIso branch doesn't exist");
        b_HLT_Photon120EB_TightID_TightIso_->GetEntry(index);
        loaded_HLT_Photon120EB_TightID_TightIso_ = true;
    }
    return HLT_Photon120EB_TightID_TightIso_;
}
const bool &Nano::HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40() {
    if (!loaded_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40_) counter_uncached_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40_++;
    else counter_cached_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40_++;
    if (!loaded_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40_) {
        if (!b_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40_) throw std::runtime_error("HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40 branch doesn't exist");
        b_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40_->GetEntry(index);
        loaded_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = true;
    }
    return HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40_;
}
const bool &Nano::HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF() {
    if (!loaded_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF_) counter_uncached_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF_++;
    else counter_cached_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF_++;
    if (!loaded_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF_) {
        if (!b_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF_) throw std::runtime_error("HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF branch doesn't exist");
        b_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF_->GetEntry(index);
        loaded_HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF_ = true;
    }
    return HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF_;
}
const bool &Nano::HLT_Photon120_R9Id90_HE10_IsoM() {
    if (!loaded_HLT_Photon120_R9Id90_HE10_IsoM_) counter_uncached_HLT_Photon120_R9Id90_HE10_IsoM_++;
    else counter_cached_HLT_Photon120_R9Id90_HE10_IsoM_++;
    if (!loaded_HLT_Photon120_R9Id90_HE10_IsoM_) {
        if (!b_HLT_Photon120_R9Id90_HE10_IsoM_) throw std::runtime_error("HLT_Photon120_R9Id90_HE10_IsoM branch doesn't exist");
        b_HLT_Photon120_R9Id90_HE10_IsoM_->GetEntry(index);
        loaded_HLT_Photon120_R9Id90_HE10_IsoM_ = true;
    }
    return HLT_Photon120_R9Id90_HE10_IsoM_;
}
const bool &Nano::HLT_Photon125() {
    if (!loaded_HLT_Photon125_) counter_uncached_HLT_Photon125_++;
    else counter_cached_HLT_Photon125_++;
    if (!loaded_HLT_Photon125_) {
        if (!b_HLT_Photon125_) throw std::runtime_error("HLT_Photon125 branch doesn't exist");
        b_HLT_Photon125_->GetEntry(index);
        loaded_HLT_Photon125_ = true;
    }
    return HLT_Photon125_;
}
const bool &Nano::HLT_Photon135_PFMET100() {
    if (!loaded_HLT_Photon135_PFMET100_) counter_uncached_HLT_Photon135_PFMET100_++;
    else counter_cached_HLT_Photon135_PFMET100_++;
    if (!loaded_HLT_Photon135_PFMET100_) {
        if (!b_HLT_Photon135_PFMET100_) throw std::runtime_error("HLT_Photon135_PFMET100 branch doesn't exist");
        b_HLT_Photon135_PFMET100_->GetEntry(index);
        loaded_HLT_Photon135_PFMET100_ = true;
    }
    return HLT_Photon135_PFMET100_;
}
const bool &Nano::HLT_Photon150() {
    if (!loaded_HLT_Photon150_) counter_uncached_HLT_Photon150_++;
    else counter_cached_HLT_Photon150_++;
    if (!loaded_HLT_Photon150_) {
        if (!b_HLT_Photon150_) throw std::runtime_error("HLT_Photon150 branch doesn't exist");
        b_HLT_Photon150_->GetEntry(index);
        loaded_HLT_Photon150_ = true;
    }
    return HLT_Photon150_;
}
const bool &Nano::HLT_Photon165_HE10() {
    if (!loaded_HLT_Photon165_HE10_) counter_uncached_HLT_Photon165_HE10_++;
    else counter_cached_HLT_Photon165_HE10_++;
    if (!loaded_HLT_Photon165_HE10_) {
        if (!b_HLT_Photon165_HE10_) throw std::runtime_error("HLT_Photon165_HE10 branch doesn't exist");
        b_HLT_Photon165_HE10_->GetEntry(index);
        loaded_HLT_Photon165_HE10_ = true;
    }
    return HLT_Photon165_HE10_;
}
const bool &Nano::HLT_Photon165_R9Id90_HE10_IsoM() {
    if (!loaded_HLT_Photon165_R9Id90_HE10_IsoM_) counter_uncached_HLT_Photon165_R9Id90_HE10_IsoM_++;
    else counter_cached_HLT_Photon165_R9Id90_HE10_IsoM_++;
    if (!loaded_HLT_Photon165_R9Id90_HE10_IsoM_) {
        if (!b_HLT_Photon165_R9Id90_HE10_IsoM_) throw std::runtime_error("HLT_Photon165_R9Id90_HE10_IsoM branch doesn't exist");
        b_HLT_Photon165_R9Id90_HE10_IsoM_->GetEntry(index);
        loaded_HLT_Photon165_R9Id90_HE10_IsoM_ = true;
    }
    return HLT_Photon165_R9Id90_HE10_IsoM_;
}
const bool &Nano::HLT_Photon175() {
    if (!loaded_HLT_Photon175_) counter_uncached_HLT_Photon175_++;
    else counter_cached_HLT_Photon175_++;
    if (!loaded_HLT_Photon175_) {
        if (!b_HLT_Photon175_) throw std::runtime_error("HLT_Photon175 branch doesn't exist");
        b_HLT_Photon175_->GetEntry(index);
        loaded_HLT_Photon175_ = true;
    }
    return HLT_Photon175_;
}
const bool &Nano::HLT_Photon20() {
    if (!loaded_HLT_Photon20_) counter_uncached_HLT_Photon20_++;
    else counter_cached_HLT_Photon20_++;
    if (!loaded_HLT_Photon20_) {
        if (!b_HLT_Photon20_) throw std::runtime_error("HLT_Photon20 branch doesn't exist");
        b_HLT_Photon20_->GetEntry(index);
        loaded_HLT_Photon20_ = true;
    }
    return HLT_Photon20_;
}
const bool &Nano::HLT_Photon200() {
    if (!loaded_HLT_Photon200_) counter_uncached_HLT_Photon200_++;
    else counter_cached_HLT_Photon200_++;
    if (!loaded_HLT_Photon200_) {
        if (!b_HLT_Photon200_) throw std::runtime_error("HLT_Photon200 branch doesn't exist");
        b_HLT_Photon200_->GetEntry(index);
        loaded_HLT_Photon200_ = true;
    }
    return HLT_Photon200_;
}
const bool &Nano::HLT_Photon20_CaloIdVL_IsoL() {
    if (!loaded_HLT_Photon20_CaloIdVL_IsoL_) counter_uncached_HLT_Photon20_CaloIdVL_IsoL_++;
    else counter_cached_HLT_Photon20_CaloIdVL_IsoL_++;
    if (!loaded_HLT_Photon20_CaloIdVL_IsoL_) {
        if (!b_HLT_Photon20_CaloIdVL_IsoL_) throw std::runtime_error("HLT_Photon20_CaloIdVL_IsoL branch doesn't exist");
        b_HLT_Photon20_CaloIdVL_IsoL_->GetEntry(index);
        loaded_HLT_Photon20_CaloIdVL_IsoL_ = true;
    }
    return HLT_Photon20_CaloIdVL_IsoL_;
}
const bool &Nano::HLT_Photon20_HoverELoose() {
    if (!loaded_HLT_Photon20_HoverELoose_) counter_uncached_HLT_Photon20_HoverELoose_++;
    else counter_cached_HLT_Photon20_HoverELoose_++;
    if (!loaded_HLT_Photon20_HoverELoose_) {
        if (!b_HLT_Photon20_HoverELoose_) throw std::runtime_error("HLT_Photon20_HoverELoose branch doesn't exist");
        b_HLT_Photon20_HoverELoose_->GetEntry(index);
        loaded_HLT_Photon20_HoverELoose_ = true;
    }
    return HLT_Photon20_HoverELoose_;
}
const bool &Nano::HLT_Photon22() {
    if (!loaded_HLT_Photon22_) counter_uncached_HLT_Photon22_++;
    else counter_cached_HLT_Photon22_++;
    if (!loaded_HLT_Photon22_) {
        if (!b_HLT_Photon22_) throw std::runtime_error("HLT_Photon22 branch doesn't exist");
        b_HLT_Photon22_->GetEntry(index);
        loaded_HLT_Photon22_ = true;
    }
    return HLT_Photon22_;
}
const bool &Nano::HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40() {
    if (!loaded_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40_) counter_uncached_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40_++;
    else counter_cached_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40_++;
    if (!loaded_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40_) {
        if (!b_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40_) throw std::runtime_error("HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40 branch doesn't exist");
        b_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40_->GetEntry(index);
        loaded_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = true;
    }
    return HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40_;
}
const bool &Nano::HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF() {
    if (!loaded_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF_) counter_uncached_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF_++;
    else counter_cached_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF_++;
    if (!loaded_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF_) {
        if (!b_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF_) throw std::runtime_error("HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF branch doesn't exist");
        b_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF_->GetEntry(index);
        loaded_HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF_ = true;
    }
    return HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF_;
}
const bool &Nano::HLT_Photon22_R9Id90_HE10_IsoM() {
    if (!loaded_HLT_Photon22_R9Id90_HE10_IsoM_) counter_uncached_HLT_Photon22_R9Id90_HE10_IsoM_++;
    else counter_cached_HLT_Photon22_R9Id90_HE10_IsoM_++;
    if (!loaded_HLT_Photon22_R9Id90_HE10_IsoM_) {
        if (!b_HLT_Photon22_R9Id90_HE10_IsoM_) throw std::runtime_error("HLT_Photon22_R9Id90_HE10_IsoM branch doesn't exist");
        b_HLT_Photon22_R9Id90_HE10_IsoM_->GetEntry(index);
        loaded_HLT_Photon22_R9Id90_HE10_IsoM_ = true;
    }
    return HLT_Photon22_R9Id90_HE10_IsoM_;
}
const bool &Nano::HLT_Photon25() {
    if (!loaded_HLT_Photon25_) counter_uncached_HLT_Photon25_++;
    else counter_cached_HLT_Photon25_++;
    if (!loaded_HLT_Photon25_) {
        if (!b_HLT_Photon25_) throw std::runtime_error("HLT_Photon25 branch doesn't exist");
        b_HLT_Photon25_->GetEntry(index);
        loaded_HLT_Photon25_ = true;
    }
    return HLT_Photon25_;
}
const bool &Nano::HLT_Photon250_NoHE() {
    if (!loaded_HLT_Photon250_NoHE_) counter_uncached_HLT_Photon250_NoHE_++;
    else counter_cached_HLT_Photon250_NoHE_++;
    if (!loaded_HLT_Photon250_NoHE_) {
        if (!b_HLT_Photon250_NoHE_) throw std::runtime_error("HLT_Photon250_NoHE branch doesn't exist");
        b_HLT_Photon250_NoHE_->GetEntry(index);
        loaded_HLT_Photon250_NoHE_ = true;
    }
    return HLT_Photon250_NoHE_;
}
const bool &Nano::HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60() {
    if (!loaded_HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60_) counter_uncached_HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60_++;
    else counter_cached_HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60_++;
    if (!loaded_HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60_) {
        if (!b_HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60_) throw std::runtime_error("HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60 branch doesn't exist");
        b_HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60_->GetEntry(index);
        loaded_HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60_ = true;
    }
    return HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60_;
}
const bool &Nano::HLT_Photon30() {
    if (!loaded_HLT_Photon30_) counter_uncached_HLT_Photon30_++;
    else counter_cached_HLT_Photon30_++;
    if (!loaded_HLT_Photon30_) {
        if (!b_HLT_Photon30_) throw std::runtime_error("HLT_Photon30 branch doesn't exist");
        b_HLT_Photon30_->GetEntry(index);
        loaded_HLT_Photon30_ = true;
    }
    return HLT_Photon30_;
}
const bool &Nano::HLT_Photon300_NoHE() {
    if (!loaded_HLT_Photon300_NoHE_) counter_uncached_HLT_Photon300_NoHE_++;
    else counter_cached_HLT_Photon300_NoHE_++;
    if (!loaded_HLT_Photon300_NoHE_) {
        if (!b_HLT_Photon300_NoHE_) throw std::runtime_error("HLT_Photon300_NoHE branch doesn't exist");
        b_HLT_Photon300_NoHE_->GetEntry(index);
        loaded_HLT_Photon300_NoHE_ = true;
    }
    return HLT_Photon300_NoHE_;
}
const bool &Nano::HLT_Photon30EB_TightID_TightIso() {
    if (!loaded_HLT_Photon30EB_TightID_TightIso_) counter_uncached_HLT_Photon30EB_TightID_TightIso_++;
    else counter_cached_HLT_Photon30EB_TightID_TightIso_++;
    if (!loaded_HLT_Photon30EB_TightID_TightIso_) {
        if (!b_HLT_Photon30EB_TightID_TightIso_) throw std::runtime_error("HLT_Photon30EB_TightID_TightIso branch doesn't exist");
        b_HLT_Photon30EB_TightID_TightIso_->GetEntry(index);
        loaded_HLT_Photon30EB_TightID_TightIso_ = true;
    }
    return HLT_Photon30EB_TightID_TightIso_;
}
const bool &Nano::HLT_Photon30_HoverELoose() {
    if (!loaded_HLT_Photon30_HoverELoose_) counter_uncached_HLT_Photon30_HoverELoose_++;
    else counter_cached_HLT_Photon30_HoverELoose_++;
    if (!loaded_HLT_Photon30_HoverELoose_) {
        if (!b_HLT_Photon30_HoverELoose_) throw std::runtime_error("HLT_Photon30_HoverELoose branch doesn't exist");
        b_HLT_Photon30_HoverELoose_->GetEntry(index);
        loaded_HLT_Photon30_HoverELoose_ = true;
    }
    return HLT_Photon30_HoverELoose_;
}
const bool &Nano::HLT_Photon30_R9Id90_HE10_IsoM() {
    if (!loaded_HLT_Photon30_R9Id90_HE10_IsoM_) counter_uncached_HLT_Photon30_R9Id90_HE10_IsoM_++;
    else counter_cached_HLT_Photon30_R9Id90_HE10_IsoM_++;
    if (!loaded_HLT_Photon30_R9Id90_HE10_IsoM_) {
        if (!b_HLT_Photon30_R9Id90_HE10_IsoM_) throw std::runtime_error("HLT_Photon30_R9Id90_HE10_IsoM branch doesn't exist");
        b_HLT_Photon30_R9Id90_HE10_IsoM_->GetEntry(index);
        loaded_HLT_Photon30_R9Id90_HE10_IsoM_ = true;
    }
    return HLT_Photon30_R9Id90_HE10_IsoM_;
}
const bool &Nano::HLT_Photon33() {
    if (!loaded_HLT_Photon33_) counter_uncached_HLT_Photon33_++;
    else counter_cached_HLT_Photon33_++;
    if (!loaded_HLT_Photon33_) {
        if (!b_HLT_Photon33_) throw std::runtime_error("HLT_Photon33 branch doesn't exist");
        b_HLT_Photon33_->GetEntry(index);
        loaded_HLT_Photon33_ = true;
    }
    return HLT_Photon33_;
}
const bool &Nano::HLT_Photon35_TwoProngs35() {
    if (!loaded_HLT_Photon35_TwoProngs35_) counter_uncached_HLT_Photon35_TwoProngs35_++;
    else counter_cached_HLT_Photon35_TwoProngs35_++;
    if (!loaded_HLT_Photon35_TwoProngs35_) {
        if (!b_HLT_Photon35_TwoProngs35_) throw std::runtime_error("HLT_Photon35_TwoProngs35 branch doesn't exist");
        b_HLT_Photon35_TwoProngs35_->GetEntry(index);
        loaded_HLT_Photon35_TwoProngs35_ = true;
    }
    return HLT_Photon35_TwoProngs35_;
}
const bool &Nano::HLT_Photon36() {
    if (!loaded_HLT_Photon36_) counter_uncached_HLT_Photon36_++;
    else counter_cached_HLT_Photon36_++;
    if (!loaded_HLT_Photon36_) {
        if (!b_HLT_Photon36_) throw std::runtime_error("HLT_Photon36 branch doesn't exist");
        b_HLT_Photon36_->GetEntry(index);
        loaded_HLT_Photon36_ = true;
    }
    return HLT_Photon36_;
}
const bool &Nano::HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15() {
    if (!loaded_HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15_) counter_uncached_HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15_++;
    else counter_cached_HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15_++;
    if (!loaded_HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15_) {
        if (!b_HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15_) throw std::runtime_error("HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15 branch doesn't exist");
        b_HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15_->GetEntry(index);
        loaded_HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15_ = true;
    }
    return HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15_;
}
const bool &Nano::HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40() {
    if (!loaded_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40_) counter_uncached_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40_++;
    else counter_cached_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40_++;
    if (!loaded_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40_) {
        if (!b_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40_) throw std::runtime_error("HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40 branch doesn't exist");
        b_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40_->GetEntry(index);
        loaded_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = true;
    }
    return HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40_;
}
const bool &Nano::HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF() {
    if (!loaded_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF_) counter_uncached_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF_++;
    else counter_cached_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF_++;
    if (!loaded_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF_) {
        if (!b_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF_) throw std::runtime_error("HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF branch doesn't exist");
        b_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF_->GetEntry(index);
        loaded_HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF_ = true;
    }
    return HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF_;
}
const bool &Nano::HLT_Photon36_R9Id90_HE10_IsoM() {
    if (!loaded_HLT_Photon36_R9Id90_HE10_IsoM_) counter_uncached_HLT_Photon36_R9Id90_HE10_IsoM_++;
    else counter_cached_HLT_Photon36_R9Id90_HE10_IsoM_++;
    if (!loaded_HLT_Photon36_R9Id90_HE10_IsoM_) {
        if (!b_HLT_Photon36_R9Id90_HE10_IsoM_) throw std::runtime_error("HLT_Photon36_R9Id90_HE10_IsoM branch doesn't exist");
        b_HLT_Photon36_R9Id90_HE10_IsoM_->GetEntry(index);
        loaded_HLT_Photon36_R9Id90_HE10_IsoM_ = true;
    }
    return HLT_Photon36_R9Id90_HE10_IsoM_;
}
const bool &Nano::HLT_Photon40_HoverELoose() {
    if (!loaded_HLT_Photon40_HoverELoose_) counter_uncached_HLT_Photon40_HoverELoose_++;
    else counter_cached_HLT_Photon40_HoverELoose_++;
    if (!loaded_HLT_Photon40_HoverELoose_) {
        if (!b_HLT_Photon40_HoverELoose_) throw std::runtime_error("HLT_Photon40_HoverELoose branch doesn't exist");
        b_HLT_Photon40_HoverELoose_->GetEntry(index);
        loaded_HLT_Photon40_HoverELoose_ = true;
    }
    return HLT_Photon40_HoverELoose_;
}
const bool &Nano::HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15() {
    if (!loaded_HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15_) counter_uncached_HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15_++;
    else counter_cached_HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15_++;
    if (!loaded_HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15_) {
        if (!b_HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15_) throw std::runtime_error("HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15 branch doesn't exist");
        b_HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15_->GetEntry(index);
        loaded_HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15_ = true;
    }
    return HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15_;
}
const bool &Nano::HLT_Photon50() {
    if (!loaded_HLT_Photon50_) counter_uncached_HLT_Photon50_++;
    else counter_cached_HLT_Photon50_++;
    if (!loaded_HLT_Photon50_) {
        if (!b_HLT_Photon50_) throw std::runtime_error("HLT_Photon50 branch doesn't exist");
        b_HLT_Photon50_->GetEntry(index);
        loaded_HLT_Photon50_ = true;
    }
    return HLT_Photon50_;
}
const bool &Nano::HLT_Photon500() {
    if (!loaded_HLT_Photon500_) counter_uncached_HLT_Photon500_++;
    else counter_cached_HLT_Photon500_++;
    if (!loaded_HLT_Photon500_) {
        if (!b_HLT_Photon500_) throw std::runtime_error("HLT_Photon500 branch doesn't exist");
        b_HLT_Photon500_->GetEntry(index);
        loaded_HLT_Photon500_ = true;
    }
    return HLT_Photon500_;
}
const bool &Nano::HLT_Photon50_HoverELoose() {
    if (!loaded_HLT_Photon50_HoverELoose_) counter_uncached_HLT_Photon50_HoverELoose_++;
    else counter_cached_HLT_Photon50_HoverELoose_++;
    if (!loaded_HLT_Photon50_HoverELoose_) {
        if (!b_HLT_Photon50_HoverELoose_) throw std::runtime_error("HLT_Photon50_HoverELoose branch doesn't exist");
        b_HLT_Photon50_HoverELoose_->GetEntry(index);
        loaded_HLT_Photon50_HoverELoose_ = true;
    }
    return HLT_Photon50_HoverELoose_;
}
const bool &Nano::HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40() {
    if (!loaded_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40_) counter_uncached_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40_++;
    else counter_cached_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40_++;
    if (!loaded_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40_) {
        if (!b_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40_) throw std::runtime_error("HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40 branch doesn't exist");
        b_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40_->GetEntry(index);
        loaded_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = true;
    }
    return HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40_;
}
const bool &Nano::HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF() {
    if (!loaded_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF_) counter_uncached_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF_++;
    else counter_cached_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF_++;
    if (!loaded_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF_) {
        if (!b_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF_) throw std::runtime_error("HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF branch doesn't exist");
        b_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF_->GetEntry(index);
        loaded_HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF_ = true;
    }
    return HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF_;
}
const bool &Nano::HLT_Photon50_R9Id90_HE10_IsoM() {
    if (!loaded_HLT_Photon50_R9Id90_HE10_IsoM_) counter_uncached_HLT_Photon50_R9Id90_HE10_IsoM_++;
    else counter_cached_HLT_Photon50_R9Id90_HE10_IsoM_++;
    if (!loaded_HLT_Photon50_R9Id90_HE10_IsoM_) {
        if (!b_HLT_Photon50_R9Id90_HE10_IsoM_) throw std::runtime_error("HLT_Photon50_R9Id90_HE10_IsoM branch doesn't exist");
        b_HLT_Photon50_R9Id90_HE10_IsoM_->GetEntry(index);
        loaded_HLT_Photon50_R9Id90_HE10_IsoM_ = true;
    }
    return HLT_Photon50_R9Id90_HE10_IsoM_;
}
const bool &Nano::HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50() {
    if (!loaded_HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_) counter_uncached_HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_++;
    else counter_cached_HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_++;
    if (!loaded_HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_) {
        if (!b_HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_) throw std::runtime_error("HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50 branch doesn't exist");
        b_HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_->GetEntry(index);
        loaded_HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_ = true;
    }
    return HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_;
}
const bool &Nano::HLT_Photon600() {
    if (!loaded_HLT_Photon600_) counter_uncached_HLT_Photon600_++;
    else counter_cached_HLT_Photon600_++;
    if (!loaded_HLT_Photon600_) {
        if (!b_HLT_Photon600_) throw std::runtime_error("HLT_Photon600 branch doesn't exist");
        b_HLT_Photon600_->GetEntry(index);
        loaded_HLT_Photon600_ = true;
    }
    return HLT_Photon600_;
}
const bool &Nano::HLT_Photon60_HoverELoose() {
    if (!loaded_HLT_Photon60_HoverELoose_) counter_uncached_HLT_Photon60_HoverELoose_++;
    else counter_cached_HLT_Photon60_HoverELoose_++;
    if (!loaded_HLT_Photon60_HoverELoose_) {
        if (!b_HLT_Photon60_HoverELoose_) throw std::runtime_error("HLT_Photon60_HoverELoose branch doesn't exist");
        b_HLT_Photon60_HoverELoose_->GetEntry(index);
        loaded_HLT_Photon60_HoverELoose_ = true;
    }
    return HLT_Photon60_HoverELoose_;
}
const bool &Nano::HLT_Photon60_R9Id90_CaloIdL_IsoL() {
    if (!loaded_HLT_Photon60_R9Id90_CaloIdL_IsoL_) counter_uncached_HLT_Photon60_R9Id90_CaloIdL_IsoL_++;
    else counter_cached_HLT_Photon60_R9Id90_CaloIdL_IsoL_++;
    if (!loaded_HLT_Photon60_R9Id90_CaloIdL_IsoL_) {
        if (!b_HLT_Photon60_R9Id90_CaloIdL_IsoL_) throw std::runtime_error("HLT_Photon60_R9Id90_CaloIdL_IsoL branch doesn't exist");
        b_HLT_Photon60_R9Id90_CaloIdL_IsoL_->GetEntry(index);
        loaded_HLT_Photon60_R9Id90_CaloIdL_IsoL_ = true;
    }
    return HLT_Photon60_R9Id90_CaloIdL_IsoL_;
}
const bool &Nano::HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL() {
    if (!loaded_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_) counter_uncached_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_++;
    else counter_cached_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_++;
    if (!loaded_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_) {
        if (!b_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_) throw std::runtime_error("HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL branch doesn't exist");
        b_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_->GetEntry(index);
        loaded_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_ = true;
    }
    return HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_;
}
const bool &Nano::HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15() {
    if (!loaded_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_) counter_uncached_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_++;
    else counter_cached_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_++;
    if (!loaded_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_) {
        if (!b_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_) throw std::runtime_error("HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15 branch doesn't exist");
        b_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_->GetEntry(index);
        loaded_HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_ = true;
    }
    return HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_;
}
const bool &Nano::HLT_Photon75() {
    if (!loaded_HLT_Photon75_) counter_uncached_HLT_Photon75_++;
    else counter_cached_HLT_Photon75_++;
    if (!loaded_HLT_Photon75_) {
        if (!b_HLT_Photon75_) throw std::runtime_error("HLT_Photon75 branch doesn't exist");
        b_HLT_Photon75_->GetEntry(index);
        loaded_HLT_Photon75_ = true;
    }
    return HLT_Photon75_;
}
const bool &Nano::HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40() {
    if (!loaded_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40_) counter_uncached_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40_++;
    else counter_cached_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40_++;
    if (!loaded_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40_) {
        if (!b_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40_) throw std::runtime_error("HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40 branch doesn't exist");
        b_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40_->GetEntry(index);
        loaded_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = true;
    }
    return HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40_;
}
const bool &Nano::HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF() {
    if (!loaded_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF_) counter_uncached_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF_++;
    else counter_cached_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF_++;
    if (!loaded_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF_) {
        if (!b_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF_) throw std::runtime_error("HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF branch doesn't exist");
        b_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF_->GetEntry(index);
        loaded_HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF_ = true;
    }
    return HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF_;
}
const bool &Nano::HLT_Photon75_R9Id90_HE10_IsoM() {
    if (!loaded_HLT_Photon75_R9Id90_HE10_IsoM_) counter_uncached_HLT_Photon75_R9Id90_HE10_IsoM_++;
    else counter_cached_HLT_Photon75_R9Id90_HE10_IsoM_++;
    if (!loaded_HLT_Photon75_R9Id90_HE10_IsoM_) {
        if (!b_HLT_Photon75_R9Id90_HE10_IsoM_) throw std::runtime_error("HLT_Photon75_R9Id90_HE10_IsoM branch doesn't exist");
        b_HLT_Photon75_R9Id90_HE10_IsoM_->GetEntry(index);
        loaded_HLT_Photon75_R9Id90_HE10_IsoM_ = true;
    }
    return HLT_Photon75_R9Id90_HE10_IsoM_;
}
const bool &Nano::HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3() {
    if (!loaded_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_) counter_uncached_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_++;
    else counter_cached_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_++;
    if (!loaded_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_) {
        if (!b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_) throw std::runtime_error("HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3 branch doesn't exist");
        b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_->GetEntry(index);
        loaded_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_ = true;
    }
    return HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_;
}
const bool &Nano::HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3() {
    if (!loaded_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_) counter_uncached_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_++;
    else counter_cached_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_++;
    if (!loaded_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_) {
        if (!b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_) throw std::runtime_error("HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3 branch doesn't exist");
        b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_->GetEntry(index);
        loaded_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_ = true;
    }
    return HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_;
}
const bool &Nano::HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3() {
    if (!loaded_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_) counter_uncached_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_++;
    else counter_cached_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_++;
    if (!loaded_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_) {
        if (!b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_) throw std::runtime_error("HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3 branch doesn't exist");
        b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_->GetEntry(index);
        loaded_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_ = true;
    }
    return HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_;
}
const bool &Nano::HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3() {
    if (!loaded_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_) counter_uncached_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_++;
    else counter_cached_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_++;
    if (!loaded_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_) {
        if (!b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_) throw std::runtime_error("HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3 branch doesn't exist");
        b_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_->GetEntry(index);
        loaded_HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_ = true;
    }
    return HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_;
}
const bool &Nano::HLT_Photon90() {
    if (!loaded_HLT_Photon90_) counter_uncached_HLT_Photon90_++;
    else counter_cached_HLT_Photon90_++;
    if (!loaded_HLT_Photon90_) {
        if (!b_HLT_Photon90_) throw std::runtime_error("HLT_Photon90 branch doesn't exist");
        b_HLT_Photon90_->GetEntry(index);
        loaded_HLT_Photon90_ = true;
    }
    return HLT_Photon90_;
}
const bool &Nano::HLT_Photon90_CaloIdL_HT300() {
    if (!loaded_HLT_Photon90_CaloIdL_HT300_) counter_uncached_HLT_Photon90_CaloIdL_HT300_++;
    else counter_cached_HLT_Photon90_CaloIdL_HT300_++;
    if (!loaded_HLT_Photon90_CaloIdL_HT300_) {
        if (!b_HLT_Photon90_CaloIdL_HT300_) throw std::runtime_error("HLT_Photon90_CaloIdL_HT300 branch doesn't exist");
        b_HLT_Photon90_CaloIdL_HT300_->GetEntry(index);
        loaded_HLT_Photon90_CaloIdL_HT300_ = true;
    }
    return HLT_Photon90_CaloIdL_HT300_;
}
const bool &Nano::HLT_Photon90_CaloIdL_PFHT500() {
    if (!loaded_HLT_Photon90_CaloIdL_PFHT500_) counter_uncached_HLT_Photon90_CaloIdL_PFHT500_++;
    else counter_cached_HLT_Photon90_CaloIdL_PFHT500_++;
    if (!loaded_HLT_Photon90_CaloIdL_PFHT500_) {
        if (!b_HLT_Photon90_CaloIdL_PFHT500_) throw std::runtime_error("HLT_Photon90_CaloIdL_PFHT500 branch doesn't exist");
        b_HLT_Photon90_CaloIdL_PFHT500_->GetEntry(index);
        loaded_HLT_Photon90_CaloIdL_PFHT500_ = true;
    }
    return HLT_Photon90_CaloIdL_PFHT500_;
}
const bool &Nano::HLT_Photon90_CaloIdL_PFHT600() {
    if (!loaded_HLT_Photon90_CaloIdL_PFHT600_) counter_uncached_HLT_Photon90_CaloIdL_PFHT600_++;
    else counter_cached_HLT_Photon90_CaloIdL_PFHT600_++;
    if (!loaded_HLT_Photon90_CaloIdL_PFHT600_) {
        if (!b_HLT_Photon90_CaloIdL_PFHT600_) throw std::runtime_error("HLT_Photon90_CaloIdL_PFHT600 branch doesn't exist");
        b_HLT_Photon90_CaloIdL_PFHT600_->GetEntry(index);
        loaded_HLT_Photon90_CaloIdL_PFHT600_ = true;
    }
    return HLT_Photon90_CaloIdL_PFHT600_;
}
const bool &Nano::HLT_Photon90_CaloIdL_PFHT700() {
    if (!loaded_HLT_Photon90_CaloIdL_PFHT700_) counter_uncached_HLT_Photon90_CaloIdL_PFHT700_++;
    else counter_cached_HLT_Photon90_CaloIdL_PFHT700_++;
    if (!loaded_HLT_Photon90_CaloIdL_PFHT700_) {
        if (!b_HLT_Photon90_CaloIdL_PFHT700_) throw std::runtime_error("HLT_Photon90_CaloIdL_PFHT700 branch doesn't exist");
        b_HLT_Photon90_CaloIdL_PFHT700_->GetEntry(index);
        loaded_HLT_Photon90_CaloIdL_PFHT700_ = true;
    }
    return HLT_Photon90_CaloIdL_PFHT700_;
}
const bool &Nano::HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40() {
    if (!loaded_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40_) counter_uncached_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40_++;
    else counter_cached_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40_++;
    if (!loaded_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40_) {
        if (!b_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40_) throw std::runtime_error("HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40 branch doesn't exist");
        b_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40_->GetEntry(index);
        loaded_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40_ = true;
    }
    return HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40_;
}
const bool &Nano::HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF() {
    if (!loaded_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF_) counter_uncached_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF_++;
    else counter_cached_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF_++;
    if (!loaded_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF_) {
        if (!b_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF_) throw std::runtime_error("HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF branch doesn't exist");
        b_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF_->GetEntry(index);
        loaded_HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF_ = true;
    }
    return HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF_;
}
const bool &Nano::HLT_Photon90_R9Id90_HE10_IsoM() {
    if (!loaded_HLT_Photon90_R9Id90_HE10_IsoM_) counter_uncached_HLT_Photon90_R9Id90_HE10_IsoM_++;
    else counter_cached_HLT_Photon90_R9Id90_HE10_IsoM_++;
    if (!loaded_HLT_Photon90_R9Id90_HE10_IsoM_) {
        if (!b_HLT_Photon90_R9Id90_HE10_IsoM_) throw std::runtime_error("HLT_Photon90_R9Id90_HE10_IsoM branch doesn't exist");
        b_HLT_Photon90_R9Id90_HE10_IsoM_->GetEntry(index);
        loaded_HLT_Photon90_R9Id90_HE10_IsoM_ = true;
    }
    return HLT_Photon90_R9Id90_HE10_IsoM_;
}
const bool &Nano::HLT_Physics() {
    if (!loaded_HLT_Physics_) counter_uncached_HLT_Physics_++;
    else counter_cached_HLT_Physics_++;
    if (!loaded_HLT_Physics_) {
        if (!b_HLT_Physics_) throw std::runtime_error("HLT_Physics branch doesn't exist");
        b_HLT_Physics_->GetEntry(index);
        loaded_HLT_Physics_ = true;
    }
    return HLT_Physics_;
}
const bool &Nano::HLT_Physics_part0() {
    if (!loaded_HLT_Physics_part0_) counter_uncached_HLT_Physics_part0_++;
    else counter_cached_HLT_Physics_part0_++;
    if (!loaded_HLT_Physics_part0_) {
        if (!b_HLT_Physics_part0_) throw std::runtime_error("HLT_Physics_part0 branch doesn't exist");
        b_HLT_Physics_part0_->GetEntry(index);
        loaded_HLT_Physics_part0_ = true;
    }
    return HLT_Physics_part0_;
}
const bool &Nano::HLT_Physics_part1() {
    if (!loaded_HLT_Physics_part1_) counter_uncached_HLT_Physics_part1_++;
    else counter_cached_HLT_Physics_part1_++;
    if (!loaded_HLT_Physics_part1_) {
        if (!b_HLT_Physics_part1_) throw std::runtime_error("HLT_Physics_part1 branch doesn't exist");
        b_HLT_Physics_part1_->GetEntry(index);
        loaded_HLT_Physics_part1_ = true;
    }
    return HLT_Physics_part1_;
}
const bool &Nano::HLT_Physics_part2() {
    if (!loaded_HLT_Physics_part2_) counter_uncached_HLT_Physics_part2_++;
    else counter_cached_HLT_Physics_part2_++;
    if (!loaded_HLT_Physics_part2_) {
        if (!b_HLT_Physics_part2_) throw std::runtime_error("HLT_Physics_part2 branch doesn't exist");
        b_HLT_Physics_part2_->GetEntry(index);
        loaded_HLT_Physics_part2_ = true;
    }
    return HLT_Physics_part2_;
}
const bool &Nano::HLT_Physics_part3() {
    if (!loaded_HLT_Physics_part3_) counter_uncached_HLT_Physics_part3_++;
    else counter_cached_HLT_Physics_part3_++;
    if (!loaded_HLT_Physics_part3_) {
        if (!b_HLT_Physics_part3_) throw std::runtime_error("HLT_Physics_part3 branch doesn't exist");
        b_HLT_Physics_part3_->GetEntry(index);
        loaded_HLT_Physics_part3_ = true;
    }
    return HLT_Physics_part3_;
}
const bool &Nano::HLT_Physics_part4() {
    if (!loaded_HLT_Physics_part4_) counter_uncached_HLT_Physics_part4_++;
    else counter_cached_HLT_Physics_part4_++;
    if (!loaded_HLT_Physics_part4_) {
        if (!b_HLT_Physics_part4_) throw std::runtime_error("HLT_Physics_part4 branch doesn't exist");
        b_HLT_Physics_part4_->GetEntry(index);
        loaded_HLT_Physics_part4_ = true;
    }
    return HLT_Physics_part4_;
}
const bool &Nano::HLT_Physics_part5() {
    if (!loaded_HLT_Physics_part5_) counter_uncached_HLT_Physics_part5_++;
    else counter_cached_HLT_Physics_part5_++;
    if (!loaded_HLT_Physics_part5_) {
        if (!b_HLT_Physics_part5_) throw std::runtime_error("HLT_Physics_part5 branch doesn't exist");
        b_HLT_Physics_part5_->GetEntry(index);
        loaded_HLT_Physics_part5_ = true;
    }
    return HLT_Physics_part5_;
}
const bool &Nano::HLT_Physics_part6() {
    if (!loaded_HLT_Physics_part6_) counter_uncached_HLT_Physics_part6_++;
    else counter_cached_HLT_Physics_part6_++;
    if (!loaded_HLT_Physics_part6_) {
        if (!b_HLT_Physics_part6_) throw std::runtime_error("HLT_Physics_part6 branch doesn't exist");
        b_HLT_Physics_part6_->GetEntry(index);
        loaded_HLT_Physics_part6_ = true;
    }
    return HLT_Physics_part6_;
}
const bool &Nano::HLT_Physics_part7() {
    if (!loaded_HLT_Physics_part7_) counter_uncached_HLT_Physics_part7_++;
    else counter_cached_HLT_Physics_part7_++;
    if (!loaded_HLT_Physics_part7_) {
        if (!b_HLT_Physics_part7_) throw std::runtime_error("HLT_Physics_part7 branch doesn't exist");
        b_HLT_Physics_part7_->GetEntry(index);
        loaded_HLT_Physics_part7_ = true;
    }
    return HLT_Physics_part7_;
}
const bool &Nano::HLT_PixelTracks_Multiplicity110ForEndOfFill() {
    if (!loaded_HLT_PixelTracks_Multiplicity110ForEndOfFill_) counter_uncached_HLT_PixelTracks_Multiplicity110ForEndOfFill_++;
    else counter_cached_HLT_PixelTracks_Multiplicity110ForEndOfFill_++;
    if (!loaded_HLT_PixelTracks_Multiplicity110ForEndOfFill_) {
        if (!b_HLT_PixelTracks_Multiplicity110ForEndOfFill_) throw std::runtime_error("HLT_PixelTracks_Multiplicity110ForEndOfFill branch doesn't exist");
        b_HLT_PixelTracks_Multiplicity110ForEndOfFill_->GetEntry(index);
        loaded_HLT_PixelTracks_Multiplicity110ForEndOfFill_ = true;
    }
    return HLT_PixelTracks_Multiplicity110ForEndOfFill_;
}
const bool &Nano::HLT_PixelTracks_Multiplicity135ForEndOfFill() {
    if (!loaded_HLT_PixelTracks_Multiplicity135ForEndOfFill_) counter_uncached_HLT_PixelTracks_Multiplicity135ForEndOfFill_++;
    else counter_cached_HLT_PixelTracks_Multiplicity135ForEndOfFill_++;
    if (!loaded_HLT_PixelTracks_Multiplicity135ForEndOfFill_) {
        if (!b_HLT_PixelTracks_Multiplicity135ForEndOfFill_) throw std::runtime_error("HLT_PixelTracks_Multiplicity135ForEndOfFill branch doesn't exist");
        b_HLT_PixelTracks_Multiplicity135ForEndOfFill_->GetEntry(index);
        loaded_HLT_PixelTracks_Multiplicity135ForEndOfFill_ = true;
    }
    return HLT_PixelTracks_Multiplicity135ForEndOfFill_;
}
const bool &Nano::HLT_PixelTracks_Multiplicity160ForEndOfFill() {
    if (!loaded_HLT_PixelTracks_Multiplicity160ForEndOfFill_) counter_uncached_HLT_PixelTracks_Multiplicity160ForEndOfFill_++;
    else counter_cached_HLT_PixelTracks_Multiplicity160ForEndOfFill_++;
    if (!loaded_HLT_PixelTracks_Multiplicity160ForEndOfFill_) {
        if (!b_HLT_PixelTracks_Multiplicity160ForEndOfFill_) throw std::runtime_error("HLT_PixelTracks_Multiplicity160ForEndOfFill branch doesn't exist");
        b_HLT_PixelTracks_Multiplicity160ForEndOfFill_->GetEntry(index);
        loaded_HLT_PixelTracks_Multiplicity160ForEndOfFill_ = true;
    }
    return HLT_PixelTracks_Multiplicity160ForEndOfFill_;
}
const bool &Nano::HLT_PixelTracks_Multiplicity60ForEndOfFill() {
    if (!loaded_HLT_PixelTracks_Multiplicity60ForEndOfFill_) counter_uncached_HLT_PixelTracks_Multiplicity60ForEndOfFill_++;
    else counter_cached_HLT_PixelTracks_Multiplicity60ForEndOfFill_++;
    if (!loaded_HLT_PixelTracks_Multiplicity60ForEndOfFill_) {
        if (!b_HLT_PixelTracks_Multiplicity60ForEndOfFill_) throw std::runtime_error("HLT_PixelTracks_Multiplicity60ForEndOfFill branch doesn't exist");
        b_HLT_PixelTracks_Multiplicity60ForEndOfFill_->GetEntry(index);
        loaded_HLT_PixelTracks_Multiplicity60ForEndOfFill_ = true;
    }
    return HLT_PixelTracks_Multiplicity60ForEndOfFill_;
}
const bool &Nano::HLT_PixelTracks_Multiplicity85ForEndOfFill() {
    if (!loaded_HLT_PixelTracks_Multiplicity85ForEndOfFill_) counter_uncached_HLT_PixelTracks_Multiplicity85ForEndOfFill_++;
    else counter_cached_HLT_PixelTracks_Multiplicity85ForEndOfFill_++;
    if (!loaded_HLT_PixelTracks_Multiplicity85ForEndOfFill_) {
        if (!b_HLT_PixelTracks_Multiplicity85ForEndOfFill_) throw std::runtime_error("HLT_PixelTracks_Multiplicity85ForEndOfFill branch doesn't exist");
        b_HLT_PixelTracks_Multiplicity85ForEndOfFill_->GetEntry(index);
        loaded_HLT_PixelTracks_Multiplicity85ForEndOfFill_ = true;
    }
    return HLT_PixelTracks_Multiplicity85ForEndOfFill_;
}
const bool &Nano::HLT_QuadJet45_DoubleBTagCSV_p087() {
    if (!loaded_HLT_QuadJet45_DoubleBTagCSV_p087_) counter_uncached_HLT_QuadJet45_DoubleBTagCSV_p087_++;
    else counter_cached_HLT_QuadJet45_DoubleBTagCSV_p087_++;
    if (!loaded_HLT_QuadJet45_DoubleBTagCSV_p087_) {
        if (!b_HLT_QuadJet45_DoubleBTagCSV_p087_) throw std::runtime_error("HLT_QuadJet45_DoubleBTagCSV_p087 branch doesn't exist");
        b_HLT_QuadJet45_DoubleBTagCSV_p087_->GetEntry(index);
        loaded_HLT_QuadJet45_DoubleBTagCSV_p087_ = true;
    }
    return HLT_QuadJet45_DoubleBTagCSV_p087_;
}
const bool &Nano::HLT_QuadJet45_TripleBTagCSV_p087() {
    if (!loaded_HLT_QuadJet45_TripleBTagCSV_p087_) counter_uncached_HLT_QuadJet45_TripleBTagCSV_p087_++;
    else counter_cached_HLT_QuadJet45_TripleBTagCSV_p087_++;
    if (!loaded_HLT_QuadJet45_TripleBTagCSV_p087_) {
        if (!b_HLT_QuadJet45_TripleBTagCSV_p087_) throw std::runtime_error("HLT_QuadJet45_TripleBTagCSV_p087 branch doesn't exist");
        b_HLT_QuadJet45_TripleBTagCSV_p087_->GetEntry(index);
        loaded_HLT_QuadJet45_TripleBTagCSV_p087_ = true;
    }
    return HLT_QuadJet45_TripleBTagCSV_p087_;
}
const bool &Nano::HLT_QuadMuon0_Dimuon0_Jpsi() {
    if (!loaded_HLT_QuadMuon0_Dimuon0_Jpsi_) counter_uncached_HLT_QuadMuon0_Dimuon0_Jpsi_++;
    else counter_cached_HLT_QuadMuon0_Dimuon0_Jpsi_++;
    if (!loaded_HLT_QuadMuon0_Dimuon0_Jpsi_) {
        if (!b_HLT_QuadMuon0_Dimuon0_Jpsi_) throw std::runtime_error("HLT_QuadMuon0_Dimuon0_Jpsi branch doesn't exist");
        b_HLT_QuadMuon0_Dimuon0_Jpsi_->GetEntry(index);
        loaded_HLT_QuadMuon0_Dimuon0_Jpsi_ = true;
    }
    return HLT_QuadMuon0_Dimuon0_Jpsi_;
}
const bool &Nano::HLT_QuadMuon0_Dimuon0_Upsilon() {
    if (!loaded_HLT_QuadMuon0_Dimuon0_Upsilon_) counter_uncached_HLT_QuadMuon0_Dimuon0_Upsilon_++;
    else counter_cached_HLT_QuadMuon0_Dimuon0_Upsilon_++;
    if (!loaded_HLT_QuadMuon0_Dimuon0_Upsilon_) {
        if (!b_HLT_QuadMuon0_Dimuon0_Upsilon_) throw std::runtime_error("HLT_QuadMuon0_Dimuon0_Upsilon branch doesn't exist");
        b_HLT_QuadMuon0_Dimuon0_Upsilon_->GetEntry(index);
        loaded_HLT_QuadMuon0_Dimuon0_Upsilon_ = true;
    }
    return HLT_QuadMuon0_Dimuon0_Upsilon_;
}
const bool &Nano::HLT_QuadPFJet103_88_75_15() {
    if (!loaded_HLT_QuadPFJet103_88_75_15_) counter_uncached_HLT_QuadPFJet103_88_75_15_++;
    else counter_cached_HLT_QuadPFJet103_88_75_15_++;
    if (!loaded_HLT_QuadPFJet103_88_75_15_) {
        if (!b_HLT_QuadPFJet103_88_75_15_) throw std::runtime_error("HLT_QuadPFJet103_88_75_15 branch doesn't exist");
        b_HLT_QuadPFJet103_88_75_15_->GetEntry(index);
        loaded_HLT_QuadPFJet103_88_75_15_ = true;
    }
    return HLT_QuadPFJet103_88_75_15_;
}
const bool &Nano::HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2() {
    if (!loaded_HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2_) counter_uncached_HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2_++;
    else counter_cached_HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2_++;
    if (!loaded_HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2_) {
        if (!b_HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2_) throw std::runtime_error("HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2 branch doesn't exist");
        b_HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2_->GetEntry(index);
        loaded_HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2_ = true;
    }
    return HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2_;
}
const bool &Nano::HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1() {
    if (!loaded_HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1_) counter_uncached_HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1_++;
    else counter_cached_HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1_++;
    if (!loaded_HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1_) {
        if (!b_HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1_) throw std::runtime_error("HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1 branch doesn't exist");
        b_HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1_->GetEntry(index);
        loaded_HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1_ = true;
    }
    return HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1_;
}
const bool &Nano::HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1() {
    if (!loaded_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) counter_uncached_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_++;
    else counter_cached_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_++;
    if (!loaded_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) {
        if (!b_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) throw std::runtime_error("HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1 branch doesn't exist");
        b_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_->GetEntry(index);
        loaded_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ = true;
    }
    return HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_;
}
const bool &Nano::HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1() {
    if (!loaded_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_) counter_uncached_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_++;
    else counter_cached_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_++;
    if (!loaded_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_) {
        if (!b_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_) throw std::runtime_error("HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1 branch doesn't exist");
        b_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_->GetEntry(index);
        loaded_HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_ = true;
    }
    return HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_;
}
const bool &Nano::HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2() {
    if (!loaded_HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_) counter_uncached_HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_++;
    else counter_cached_HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_++;
    if (!loaded_HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_) {
        if (!b_HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_) throw std::runtime_error("HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2 branch doesn't exist");
        b_HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_->GetEntry(index);
        loaded_HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_ = true;
    }
    return HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_;
}
const bool &Nano::HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2() {
    if (!loaded_HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_) counter_uncached_HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_++;
    else counter_cached_HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_++;
    if (!loaded_HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_) {
        if (!b_HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_) throw std::runtime_error("HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2 branch doesn't exist");
        b_HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_->GetEntry(index);
        loaded_HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_ = true;
    }
    return HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_;
}
const bool &Nano::HLT_QuadPFJet105_88_76_15() {
    if (!loaded_HLT_QuadPFJet105_88_76_15_) counter_uncached_HLT_QuadPFJet105_88_76_15_++;
    else counter_cached_HLT_QuadPFJet105_88_76_15_++;
    if (!loaded_HLT_QuadPFJet105_88_76_15_) {
        if (!b_HLT_QuadPFJet105_88_76_15_) throw std::runtime_error("HLT_QuadPFJet105_88_76_15 branch doesn't exist");
        b_HLT_QuadPFJet105_88_76_15_->GetEntry(index);
        loaded_HLT_QuadPFJet105_88_76_15_ = true;
    }
    return HLT_QuadPFJet105_88_76_15_;
}
const bool &Nano::HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2() {
    if (!loaded_HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2_) counter_uncached_HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2_++;
    else counter_cached_HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2_++;
    if (!loaded_HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2_) {
        if (!b_HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2_) throw std::runtime_error("HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2 branch doesn't exist");
        b_HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2_->GetEntry(index);
        loaded_HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2_ = true;
    }
    return HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2_;
}
const bool &Nano::HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1() {
    if (!loaded_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) counter_uncached_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_++;
    else counter_cached_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_++;
    if (!loaded_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) {
        if (!b_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) throw std::runtime_error("HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1 branch doesn't exist");
        b_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_->GetEntry(index);
        loaded_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ = true;
    }
    return HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_;
}
const bool &Nano::HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1() {
    if (!loaded_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_) counter_uncached_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_++;
    else counter_cached_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_++;
    if (!loaded_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_) {
        if (!b_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_) throw std::runtime_error("HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1 branch doesn't exist");
        b_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_->GetEntry(index);
        loaded_HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_ = true;
    }
    return HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_;
}
const bool &Nano::HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2() {
    if (!loaded_HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_) counter_uncached_HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_++;
    else counter_cached_HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_++;
    if (!loaded_HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_) {
        if (!b_HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_) throw std::runtime_error("HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2 branch doesn't exist");
        b_HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_->GetEntry(index);
        loaded_HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_ = true;
    }
    return HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_;
}
const bool &Nano::HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2() {
    if (!loaded_HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_) counter_uncached_HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_++;
    else counter_cached_HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_++;
    if (!loaded_HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_) {
        if (!b_HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_) throw std::runtime_error("HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2 branch doesn't exist");
        b_HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_->GetEntry(index);
        loaded_HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_ = true;
    }
    return HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_;
}
const bool &Nano::HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1() {
    if (!loaded_HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1_) counter_uncached_HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1_++;
    else counter_cached_HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1_++;
    if (!loaded_HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1_) {
        if (!b_HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1_) throw std::runtime_error("HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1 branch doesn't exist");
        b_HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1_->GetEntry(index);
        loaded_HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1_ = true;
    }
    return HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1_;
}
const bool &Nano::HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1() {
    if (!loaded_HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) counter_uncached_HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_++;
    else counter_cached_HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_++;
    if (!loaded_HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) {
        if (!b_HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) throw std::runtime_error("HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1 branch doesn't exist");
        b_HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_->GetEntry(index);
        loaded_HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ = true;
    }
    return HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_;
}
const bool &Nano::HLT_QuadPFJet111_90_80_15() {
    if (!loaded_HLT_QuadPFJet111_90_80_15_) counter_uncached_HLT_QuadPFJet111_90_80_15_++;
    else counter_cached_HLT_QuadPFJet111_90_80_15_++;
    if (!loaded_HLT_QuadPFJet111_90_80_15_) {
        if (!b_HLT_QuadPFJet111_90_80_15_) throw std::runtime_error("HLT_QuadPFJet111_90_80_15 branch doesn't exist");
        b_HLT_QuadPFJet111_90_80_15_->GetEntry(index);
        loaded_HLT_QuadPFJet111_90_80_15_ = true;
    }
    return HLT_QuadPFJet111_90_80_15_;
}
const bool &Nano::HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2() {
    if (!loaded_HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2_) counter_uncached_HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2_++;
    else counter_cached_HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2_++;
    if (!loaded_HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2_) {
        if (!b_HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2_) throw std::runtime_error("HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2 branch doesn't exist");
        b_HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2_->GetEntry(index);
        loaded_HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2_ = true;
    }
    return HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2_;
}
const bool &Nano::HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1() {
    if (!loaded_HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1_) counter_uncached_HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1_++;
    else counter_cached_HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1_++;
    if (!loaded_HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1_) {
        if (!b_HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1_) throw std::runtime_error("HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1 branch doesn't exist");
        b_HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1_->GetEntry(index);
        loaded_HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1_ = true;
    }
    return HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1_;
}
const bool &Nano::HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1() {
    if (!loaded_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) counter_uncached_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_++;
    else counter_cached_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_++;
    if (!loaded_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) {
        if (!b_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) throw std::runtime_error("HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1 branch doesn't exist");
        b_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_->GetEntry(index);
        loaded_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ = true;
    }
    return HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_;
}
const bool &Nano::HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1() {
    if (!loaded_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_) counter_uncached_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_++;
    else counter_cached_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_++;
    if (!loaded_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_) {
        if (!b_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_) throw std::runtime_error("HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1 branch doesn't exist");
        b_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_->GetEntry(index);
        loaded_HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_ = true;
    }
    return HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_;
}
const bool &Nano::HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2() {
    if (!loaded_HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_) counter_uncached_HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_++;
    else counter_cached_HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_++;
    if (!loaded_HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_) {
        if (!b_HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_) throw std::runtime_error("HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2 branch doesn't exist");
        b_HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_->GetEntry(index);
        loaded_HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_ = true;
    }
    return HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_;
}
const bool &Nano::HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2() {
    if (!loaded_HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_) counter_uncached_HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_++;
    else counter_cached_HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_++;
    if (!loaded_HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_) {
        if (!b_HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_) throw std::runtime_error("HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2 branch doesn't exist");
        b_HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_->GetEntry(index);
        loaded_HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_ = true;
    }
    return HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_;
}
const bool &Nano::HLT_QuadPFJet70_50_40_30() {
    if (!loaded_HLT_QuadPFJet70_50_40_30_) counter_uncached_HLT_QuadPFJet70_50_40_30_++;
    else counter_cached_HLT_QuadPFJet70_50_40_30_++;
    if (!loaded_HLT_QuadPFJet70_50_40_30_) {
        if (!b_HLT_QuadPFJet70_50_40_30_) throw std::runtime_error("HLT_QuadPFJet70_50_40_30 branch doesn't exist");
        b_HLT_QuadPFJet70_50_40_30_->GetEntry(index);
        loaded_HLT_QuadPFJet70_50_40_30_ = true;
    }
    return HLT_QuadPFJet70_50_40_30_;
}
const bool &Nano::HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65() {
    if (!loaded_HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_) counter_uncached_HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_++;
    else counter_cached_HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_++;
    if (!loaded_HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_) {
        if (!b_HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_) throw std::runtime_error("HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65 branch doesn't exist");
        b_HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_->GetEntry(index);
        loaded_HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_ = true;
    }
    return HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_;
}
const bool &Nano::HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65() {
    if (!loaded_HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_) counter_uncached_HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_++;
    else counter_cached_HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_++;
    if (!loaded_HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_) {
        if (!b_HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_) throw std::runtime_error("HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65 branch doesn't exist");
        b_HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_->GetEntry(index);
        loaded_HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_ = true;
    }
    return HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_;
}
const bool &Nano::HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65() {
    if (!loaded_HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_) counter_uncached_HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_++;
    else counter_cached_HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_++;
    if (!loaded_HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_) {
        if (!b_HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_) throw std::runtime_error("HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65 branch doesn't exist");
        b_HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_->GetEntry(index);
        loaded_HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_ = true;
    }
    return HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_;
}
const bool &Nano::HLT_QuadPFJet98_83_71_15() {
    if (!loaded_HLT_QuadPFJet98_83_71_15_) counter_uncached_HLT_QuadPFJet98_83_71_15_++;
    else counter_cached_HLT_QuadPFJet98_83_71_15_++;
    if (!loaded_HLT_QuadPFJet98_83_71_15_) {
        if (!b_HLT_QuadPFJet98_83_71_15_) throw std::runtime_error("HLT_QuadPFJet98_83_71_15 branch doesn't exist");
        b_HLT_QuadPFJet98_83_71_15_->GetEntry(index);
        loaded_HLT_QuadPFJet98_83_71_15_ = true;
    }
    return HLT_QuadPFJet98_83_71_15_;
}
const bool &Nano::HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2() {
    if (!loaded_HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2_) counter_uncached_HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2_++;
    else counter_cached_HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2_++;
    if (!loaded_HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2_) {
        if (!b_HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2_) throw std::runtime_error("HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2 branch doesn't exist");
        b_HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2_->GetEntry(index);
        loaded_HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2_ = true;
    }
    return HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2_;
}
const bool &Nano::HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1() {
    if (!loaded_HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1_) counter_uncached_HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1_++;
    else counter_cached_HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1_++;
    if (!loaded_HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1_) {
        if (!b_HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1_) throw std::runtime_error("HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1 branch doesn't exist");
        b_HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1_->GetEntry(index);
        loaded_HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1_ = true;
    }
    return HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1_;
}
const bool &Nano::HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1() {
    if (!loaded_HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) counter_uncached_HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_++;
    else counter_cached_HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_++;
    if (!loaded_HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) {
        if (!b_HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_) throw std::runtime_error("HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1 branch doesn't exist");
        b_HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_->GetEntry(index);
        loaded_HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_ = true;
    }
    return HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_;
}
const bool &Nano::HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2() {
    if (!loaded_HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_) counter_uncached_HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_++;
    else counter_cached_HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_++;
    if (!loaded_HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_) {
        if (!b_HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_) throw std::runtime_error("HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2 branch doesn't exist");
        b_HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_->GetEntry(index);
        loaded_HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_ = true;
    }
    return HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_;
}
const bool &Nano::HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460() {
    if (!loaded_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460_) counter_uncached_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460_++;
    else counter_cached_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460_++;
    if (!loaded_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460_) {
        if (!b_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460_) throw std::runtime_error("HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460 branch doesn't exist");
        b_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460_->GetEntry(index);
        loaded_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460_ = true;
    }
    return HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460_;
}
const bool &Nano::HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500() {
    if (!loaded_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500_) counter_uncached_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500_++;
    else counter_cached_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500_++;
    if (!loaded_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500_) {
        if (!b_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500_) throw std::runtime_error("HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500 branch doesn't exist");
        b_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500_->GetEntry(index);
        loaded_HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500_ = true;
    }
    return HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500_;
}
const bool &Nano::HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200() {
    if (!loaded_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200_) counter_uncached_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200_++;
    else counter_cached_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200_++;
    if (!loaded_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200_) {
        if (!b_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200_) throw std::runtime_error("HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200 branch doesn't exist");
        b_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200_->GetEntry(index);
        loaded_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200_ = true;
    }
    return HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200_;
}
const bool &Nano::HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240() {
    if (!loaded_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240_) counter_uncached_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240_++;
    else counter_cached_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240_++;
    if (!loaded_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240_) {
        if (!b_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240_) throw std::runtime_error("HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240 branch doesn't exist");
        b_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240_->GetEntry(index);
        loaded_HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240_ = true;
    }
    return HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240_;
}
const bool &Nano::HLT_QuadPFJet_VBF() {
    if (!loaded_HLT_QuadPFJet_VBF_) counter_uncached_HLT_QuadPFJet_VBF_++;
    else counter_cached_HLT_QuadPFJet_VBF_++;
    if (!loaded_HLT_QuadPFJet_VBF_) {
        if (!b_HLT_QuadPFJet_VBF_) throw std::runtime_error("HLT_QuadPFJet_VBF branch doesn't exist");
        b_HLT_QuadPFJet_VBF_->GetEntry(index);
        loaded_HLT_QuadPFJet_VBF_ = true;
    }
    return HLT_QuadPFJet_VBF_;
}
const bool &Nano::HLT_Random() {
    if (!loaded_HLT_Random_) counter_uncached_HLT_Random_++;
    else counter_cached_HLT_Random_++;
    if (!loaded_HLT_Random_) {
        if (!b_HLT_Random_) throw std::runtime_error("HLT_Random branch doesn't exist");
        b_HLT_Random_->GetEntry(index);
        loaded_HLT_Random_ = true;
    }
    return HLT_Random_;
}
const bool &Nano::HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200() {
    if (!loaded_HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200_) counter_uncached_HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200_++;
    else counter_cached_HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200_++;
    if (!loaded_HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200_) {
        if (!b_HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200_) throw std::runtime_error("HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200 branch doesn't exist");
        b_HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200_->GetEntry(index);
        loaded_HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200_ = true;
    }
    return HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200_;
}
const bool &Nano::HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200() {
    if (!loaded_HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) counter_uncached_HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_++;
    else counter_cached_HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_++;
    if (!loaded_HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) {
        if (!b_HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) throw std::runtime_error("HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200 branch doesn't exist");
        b_HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_->GetEntry(index);
        loaded_HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ = true;
    }
    return HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_;
}
const bool &Nano::HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200() {
    if (!loaded_HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) counter_uncached_HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_++;
    else counter_cached_HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_++;
    if (!loaded_HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) {
        if (!b_HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) throw std::runtime_error("HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200 branch doesn't exist");
        b_HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_->GetEntry(index);
        loaded_HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ = true;
    }
    return HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_;
}
const bool &Nano::HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200() {
    if (!loaded_HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) counter_uncached_HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_++;
    else counter_cached_HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_++;
    if (!loaded_HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) {
        if (!b_HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) throw std::runtime_error("HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200 branch doesn't exist");
        b_HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_->GetEntry(index);
        loaded_HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ = true;
    }
    return HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_;
}
const bool &Nano::HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200() {
    if (!loaded_HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) counter_uncached_HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_++;
    else counter_cached_HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_++;
    if (!loaded_HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) {
        if (!b_HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) throw std::runtime_error("HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200 branch doesn't exist");
        b_HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_->GetEntry(index);
        loaded_HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ = true;
    }
    return HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_;
}
const bool &Nano::HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200() {
    if (!loaded_HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) counter_uncached_HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_++;
    else counter_cached_HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_++;
    if (!loaded_HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) {
        if (!b_HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_) throw std::runtime_error("HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200 branch doesn't exist");
        b_HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_->GetEntry(index);
        loaded_HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_ = true;
    }
    return HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200_;
}
const bool &Nano::HLT_Rsq0p25() {
    if (!loaded_HLT_Rsq0p25_) counter_uncached_HLT_Rsq0p25_++;
    else counter_cached_HLT_Rsq0p25_++;
    if (!loaded_HLT_Rsq0p25_) {
        if (!b_HLT_Rsq0p25_) throw std::runtime_error("HLT_Rsq0p25 branch doesn't exist");
        b_HLT_Rsq0p25_->GetEntry(index);
        loaded_HLT_Rsq0p25_ = true;
    }
    return HLT_Rsq0p25_;
}
const bool &Nano::HLT_Rsq0p25_Calo() {
    if (!loaded_HLT_Rsq0p25_Calo_) counter_uncached_HLT_Rsq0p25_Calo_++;
    else counter_cached_HLT_Rsq0p25_Calo_++;
    if (!loaded_HLT_Rsq0p25_Calo_) {
        if (!b_HLT_Rsq0p25_Calo_) throw std::runtime_error("HLT_Rsq0p25_Calo branch doesn't exist");
        b_HLT_Rsq0p25_Calo_->GetEntry(index);
        loaded_HLT_Rsq0p25_Calo_ = true;
    }
    return HLT_Rsq0p25_Calo_;
}
const bool &Nano::HLT_Rsq0p30() {
    if (!loaded_HLT_Rsq0p30_) counter_uncached_HLT_Rsq0p30_++;
    else counter_cached_HLT_Rsq0p30_++;
    if (!loaded_HLT_Rsq0p30_) {
        if (!b_HLT_Rsq0p30_) throw std::runtime_error("HLT_Rsq0p30 branch doesn't exist");
        b_HLT_Rsq0p30_->GetEntry(index);
        loaded_HLT_Rsq0p30_ = true;
    }
    return HLT_Rsq0p30_;
}
const bool &Nano::HLT_Rsq0p35() {
    if (!loaded_HLT_Rsq0p35_) counter_uncached_HLT_Rsq0p35_++;
    else counter_cached_HLT_Rsq0p35_++;
    if (!loaded_HLT_Rsq0p35_) {
        if (!b_HLT_Rsq0p35_) throw std::runtime_error("HLT_Rsq0p35 branch doesn't exist");
        b_HLT_Rsq0p35_->GetEntry(index);
        loaded_HLT_Rsq0p35_ = true;
    }
    return HLT_Rsq0p35_;
}
const bool &Nano::HLT_Rsq0p40() {
    if (!loaded_HLT_Rsq0p40_) counter_uncached_HLT_Rsq0p40_++;
    else counter_cached_HLT_Rsq0p40_++;
    if (!loaded_HLT_Rsq0p40_) {
        if (!b_HLT_Rsq0p40_) throw std::runtime_error("HLT_Rsq0p40 branch doesn't exist");
        b_HLT_Rsq0p40_->GetEntry(index);
        loaded_HLT_Rsq0p40_ = true;
    }
    return HLT_Rsq0p40_;
}
const bool &Nano::HLT_RsqMR240_Rsq0p09_MR200() {
    if (!loaded_HLT_RsqMR240_Rsq0p09_MR200_) counter_uncached_HLT_RsqMR240_Rsq0p09_MR200_++;
    else counter_cached_HLT_RsqMR240_Rsq0p09_MR200_++;
    if (!loaded_HLT_RsqMR240_Rsq0p09_MR200_) {
        if (!b_HLT_RsqMR240_Rsq0p09_MR200_) throw std::runtime_error("HLT_RsqMR240_Rsq0p09_MR200 branch doesn't exist");
        b_HLT_RsqMR240_Rsq0p09_MR200_->GetEntry(index);
        loaded_HLT_RsqMR240_Rsq0p09_MR200_ = true;
    }
    return HLT_RsqMR240_Rsq0p09_MR200_;
}
const bool &Nano::HLT_RsqMR240_Rsq0p09_MR200_4jet() {
    if (!loaded_HLT_RsqMR240_Rsq0p09_MR200_4jet_) counter_uncached_HLT_RsqMR240_Rsq0p09_MR200_4jet_++;
    else counter_cached_HLT_RsqMR240_Rsq0p09_MR200_4jet_++;
    if (!loaded_HLT_RsqMR240_Rsq0p09_MR200_4jet_) {
        if (!b_HLT_RsqMR240_Rsq0p09_MR200_4jet_) throw std::runtime_error("HLT_RsqMR240_Rsq0p09_MR200_4jet branch doesn't exist");
        b_HLT_RsqMR240_Rsq0p09_MR200_4jet_->GetEntry(index);
        loaded_HLT_RsqMR240_Rsq0p09_MR200_4jet_ = true;
    }
    return HLT_RsqMR240_Rsq0p09_MR200_4jet_;
}
const bool &Nano::HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo() {
    if (!loaded_HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo_) counter_uncached_HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo_++;
    else counter_cached_HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo_++;
    if (!loaded_HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo_) {
        if (!b_HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo_) throw std::runtime_error("HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo branch doesn't exist");
        b_HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo_->GetEntry(index);
        loaded_HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo_ = true;
    }
    return HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo_;
}
const bool &Nano::HLT_RsqMR240_Rsq0p09_MR200_Calo() {
    if (!loaded_HLT_RsqMR240_Rsq0p09_MR200_Calo_) counter_uncached_HLT_RsqMR240_Rsq0p09_MR200_Calo_++;
    else counter_cached_HLT_RsqMR240_Rsq0p09_MR200_Calo_++;
    if (!loaded_HLT_RsqMR240_Rsq0p09_MR200_Calo_) {
        if (!b_HLT_RsqMR240_Rsq0p09_MR200_Calo_) throw std::runtime_error("HLT_RsqMR240_Rsq0p09_MR200_Calo branch doesn't exist");
        b_HLT_RsqMR240_Rsq0p09_MR200_Calo_->GetEntry(index);
        loaded_HLT_RsqMR240_Rsq0p09_MR200_Calo_ = true;
    }
    return HLT_RsqMR240_Rsq0p09_MR200_Calo_;
}
const bool &Nano::HLT_RsqMR270_Rsq0p09_MR200() {
    if (!loaded_HLT_RsqMR270_Rsq0p09_MR200_) counter_uncached_HLT_RsqMR270_Rsq0p09_MR200_++;
    else counter_cached_HLT_RsqMR270_Rsq0p09_MR200_++;
    if (!loaded_HLT_RsqMR270_Rsq0p09_MR200_) {
        if (!b_HLT_RsqMR270_Rsq0p09_MR200_) throw std::runtime_error("HLT_RsqMR270_Rsq0p09_MR200 branch doesn't exist");
        b_HLT_RsqMR270_Rsq0p09_MR200_->GetEntry(index);
        loaded_HLT_RsqMR270_Rsq0p09_MR200_ = true;
    }
    return HLT_RsqMR270_Rsq0p09_MR200_;
}
const bool &Nano::HLT_RsqMR270_Rsq0p09_MR200_4jet() {
    if (!loaded_HLT_RsqMR270_Rsq0p09_MR200_4jet_) counter_uncached_HLT_RsqMR270_Rsq0p09_MR200_4jet_++;
    else counter_cached_HLT_RsqMR270_Rsq0p09_MR200_4jet_++;
    if (!loaded_HLT_RsqMR270_Rsq0p09_MR200_4jet_) {
        if (!b_HLT_RsqMR270_Rsq0p09_MR200_4jet_) throw std::runtime_error("HLT_RsqMR270_Rsq0p09_MR200_4jet branch doesn't exist");
        b_HLT_RsqMR270_Rsq0p09_MR200_4jet_->GetEntry(index);
        loaded_HLT_RsqMR270_Rsq0p09_MR200_4jet_ = true;
    }
    return HLT_RsqMR270_Rsq0p09_MR200_4jet_;
}
const bool &Nano::HLT_RsqMR300_Rsq0p09_MR200() {
    if (!loaded_HLT_RsqMR300_Rsq0p09_MR200_) counter_uncached_HLT_RsqMR300_Rsq0p09_MR200_++;
    else counter_cached_HLT_RsqMR300_Rsq0p09_MR200_++;
    if (!loaded_HLT_RsqMR300_Rsq0p09_MR200_) {
        if (!b_HLT_RsqMR300_Rsq0p09_MR200_) throw std::runtime_error("HLT_RsqMR300_Rsq0p09_MR200 branch doesn't exist");
        b_HLT_RsqMR300_Rsq0p09_MR200_->GetEntry(index);
        loaded_HLT_RsqMR300_Rsq0p09_MR200_ = true;
    }
    return HLT_RsqMR300_Rsq0p09_MR200_;
}
const bool &Nano::HLT_RsqMR300_Rsq0p09_MR200_4jet() {
    if (!loaded_HLT_RsqMR300_Rsq0p09_MR200_4jet_) counter_uncached_HLT_RsqMR300_Rsq0p09_MR200_4jet_++;
    else counter_cached_HLT_RsqMR300_Rsq0p09_MR200_4jet_++;
    if (!loaded_HLT_RsqMR300_Rsq0p09_MR200_4jet_) {
        if (!b_HLT_RsqMR300_Rsq0p09_MR200_4jet_) throw std::runtime_error("HLT_RsqMR300_Rsq0p09_MR200_4jet branch doesn't exist");
        b_HLT_RsqMR300_Rsq0p09_MR200_4jet_->GetEntry(index);
        loaded_HLT_RsqMR300_Rsq0p09_MR200_4jet_ = true;
    }
    return HLT_RsqMR300_Rsq0p09_MR200_4jet_;
}
const bool &Nano::HLT_RsqMR320_Rsq0p09_MR200() {
    if (!loaded_HLT_RsqMR320_Rsq0p09_MR200_) counter_uncached_HLT_RsqMR320_Rsq0p09_MR200_++;
    else counter_cached_HLT_RsqMR320_Rsq0p09_MR200_++;
    if (!loaded_HLT_RsqMR320_Rsq0p09_MR200_) {
        if (!b_HLT_RsqMR320_Rsq0p09_MR200_) throw std::runtime_error("HLT_RsqMR320_Rsq0p09_MR200 branch doesn't exist");
        b_HLT_RsqMR320_Rsq0p09_MR200_->GetEntry(index);
        loaded_HLT_RsqMR320_Rsq0p09_MR200_ = true;
    }
    return HLT_RsqMR320_Rsq0p09_MR200_;
}
const bool &Nano::HLT_RsqMR320_Rsq0p09_MR200_4jet() {
    if (!loaded_HLT_RsqMR320_Rsq0p09_MR200_4jet_) counter_uncached_HLT_RsqMR320_Rsq0p09_MR200_4jet_++;
    else counter_cached_HLT_RsqMR320_Rsq0p09_MR200_4jet_++;
    if (!loaded_HLT_RsqMR320_Rsq0p09_MR200_4jet_) {
        if (!b_HLT_RsqMR320_Rsq0p09_MR200_4jet_) throw std::runtime_error("HLT_RsqMR320_Rsq0p09_MR200_4jet branch doesn't exist");
        b_HLT_RsqMR320_Rsq0p09_MR200_4jet_->GetEntry(index);
        loaded_HLT_RsqMR320_Rsq0p09_MR200_4jet_ = true;
    }
    return HLT_RsqMR320_Rsq0p09_MR200_4jet_;
}
const bool &Nano::HLT_SingleCentralPFJet170_CFMax0p1() {
    if (!loaded_HLT_SingleCentralPFJet170_CFMax0p1_) counter_uncached_HLT_SingleCentralPFJet170_CFMax0p1_++;
    else counter_cached_HLT_SingleCentralPFJet170_CFMax0p1_++;
    if (!loaded_HLT_SingleCentralPFJet170_CFMax0p1_) {
        if (!b_HLT_SingleCentralPFJet170_CFMax0p1_) throw std::runtime_error("HLT_SingleCentralPFJet170_CFMax0p1 branch doesn't exist");
        b_HLT_SingleCentralPFJet170_CFMax0p1_->GetEntry(index);
        loaded_HLT_SingleCentralPFJet170_CFMax0p1_ = true;
    }
    return HLT_SingleCentralPFJet170_CFMax0p1_;
}
const bool &Nano::HLT_SingleJet30_Mu12_SinglePFJet40() {
    if (!loaded_HLT_SingleJet30_Mu12_SinglePFJet40_) counter_uncached_HLT_SingleJet30_Mu12_SinglePFJet40_++;
    else counter_cached_HLT_SingleJet30_Mu12_SinglePFJet40_++;
    if (!loaded_HLT_SingleJet30_Mu12_SinglePFJet40_) {
        if (!b_HLT_SingleJet30_Mu12_SinglePFJet40_) throw std::runtime_error("HLT_SingleJet30_Mu12_SinglePFJet40 branch doesn't exist");
        b_HLT_SingleJet30_Mu12_SinglePFJet40_->GetEntry(index);
        loaded_HLT_SingleJet30_Mu12_SinglePFJet40_ = true;
    }
    return HLT_SingleJet30_Mu12_SinglePFJet40_;
}
const bool &Nano::HLT_SinglePhoton10_Eta3p1ForPPRef() {
    if (!loaded_HLT_SinglePhoton10_Eta3p1ForPPRef_) counter_uncached_HLT_SinglePhoton10_Eta3p1ForPPRef_++;
    else counter_cached_HLT_SinglePhoton10_Eta3p1ForPPRef_++;
    if (!loaded_HLT_SinglePhoton10_Eta3p1ForPPRef_) {
        if (!b_HLT_SinglePhoton10_Eta3p1ForPPRef_) throw std::runtime_error("HLT_SinglePhoton10_Eta3p1ForPPRef branch doesn't exist");
        b_HLT_SinglePhoton10_Eta3p1ForPPRef_->GetEntry(index);
        loaded_HLT_SinglePhoton10_Eta3p1ForPPRef_ = true;
    }
    return HLT_SinglePhoton10_Eta3p1ForPPRef_;
}
const bool &Nano::HLT_SinglePhoton20_Eta3p1ForPPRef() {
    if (!loaded_HLT_SinglePhoton20_Eta3p1ForPPRef_) counter_uncached_HLT_SinglePhoton20_Eta3p1ForPPRef_++;
    else counter_cached_HLT_SinglePhoton20_Eta3p1ForPPRef_++;
    if (!loaded_HLT_SinglePhoton20_Eta3p1ForPPRef_) {
        if (!b_HLT_SinglePhoton20_Eta3p1ForPPRef_) throw std::runtime_error("HLT_SinglePhoton20_Eta3p1ForPPRef branch doesn't exist");
        b_HLT_SinglePhoton20_Eta3p1ForPPRef_->GetEntry(index);
        loaded_HLT_SinglePhoton20_Eta3p1ForPPRef_ = true;
    }
    return HLT_SinglePhoton20_Eta3p1ForPPRef_;
}
const bool &Nano::HLT_SinglePhoton30_Eta3p1ForPPRef() {
    if (!loaded_HLT_SinglePhoton30_Eta3p1ForPPRef_) counter_uncached_HLT_SinglePhoton30_Eta3p1ForPPRef_++;
    else counter_cached_HLT_SinglePhoton30_Eta3p1ForPPRef_++;
    if (!loaded_HLT_SinglePhoton30_Eta3p1ForPPRef_) {
        if (!b_HLT_SinglePhoton30_Eta3p1ForPPRef_) throw std::runtime_error("HLT_SinglePhoton30_Eta3p1ForPPRef branch doesn't exist");
        b_HLT_SinglePhoton30_Eta3p1ForPPRef_->GetEntry(index);
        loaded_HLT_SinglePhoton30_Eta3p1ForPPRef_ = true;
    }
    return HLT_SinglePhoton30_Eta3p1ForPPRef_;
}
const bool &Nano::HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10() {
    if (!loaded_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_) counter_uncached_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_++;
    else counter_cached_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_++;
    if (!loaded_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_) {
        if (!b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_) throw std::runtime_error("HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10 branch doesn't exist");
        b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_->GetEntry(index);
        loaded_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_ = true;
    }
    return HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_;
}
const bool &Nano::HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1() {
    if (!loaded_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1_) counter_uncached_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1_++;
    else counter_cached_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1_++;
    if (!loaded_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1_) {
        if (!b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1_) throw std::runtime_error("HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1 branch doesn't exist");
        b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1_->GetEntry(index);
        loaded_HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1_ = true;
    }
    return HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1_;
}
const bool &Nano::HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10() {
    if (!loaded_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_) counter_uncached_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_++;
    else counter_cached_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_++;
    if (!loaded_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_) {
        if (!b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_) throw std::runtime_error("HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10 branch doesn't exist");
        b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_->GetEntry(index);
        loaded_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_ = true;
    }
    return HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_;
}
const bool &Nano::HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1() {
    if (!loaded_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1_) counter_uncached_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1_++;
    else counter_cached_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1_++;
    if (!loaded_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1_) {
        if (!b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1_) throw std::runtime_error("HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1 branch doesn't exist");
        b_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1_->GetEntry(index);
        loaded_HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1_ = true;
    }
    return HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1_;
}
const bool &Nano::HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15() {
    if (!loaded_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_) counter_uncached_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_++;
    else counter_cached_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_++;
    if (!loaded_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_) {
        if (!b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_) throw std::runtime_error("HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15 branch doesn't exist");
        b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_->GetEntry(index);
        loaded_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_ = true;
    }
    return HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_;
}
const bool &Nano::HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1() {
    if (!loaded_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_) counter_uncached_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_++;
    else counter_cached_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_++;
    if (!loaded_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_) {
        if (!b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_) throw std::runtime_error("HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1 branch doesn't exist");
        b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_->GetEntry(index);
        loaded_HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_ = true;
    }
    return HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_;
}
const bool &Nano::HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15() {
    if (!loaded_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_) counter_uncached_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_++;
    else counter_cached_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_++;
    if (!loaded_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_) {
        if (!b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_) throw std::runtime_error("HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15 branch doesn't exist");
        b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_->GetEntry(index);
        loaded_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_ = true;
    }
    return HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_;
}
const bool &Nano::HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1() {
    if (!loaded_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_) counter_uncached_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_++;
    else counter_cached_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_++;
    if (!loaded_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_) {
        if (!b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_) throw std::runtime_error("HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1 branch doesn't exist");
        b_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_->GetEntry(index);
        loaded_HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_ = true;
    }
    return HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_;
}
const bool &Nano::HLT_TkMu100() {
    if (!loaded_HLT_TkMu100_) counter_uncached_HLT_TkMu100_++;
    else counter_cached_HLT_TkMu100_++;
    if (!loaded_HLT_TkMu100_) {
        if (!b_HLT_TkMu100_) throw std::runtime_error("HLT_TkMu100 branch doesn't exist");
        b_HLT_TkMu100_->GetEntry(index);
        loaded_HLT_TkMu100_ = true;
    }
    return HLT_TkMu100_;
}
const bool &Nano::HLT_TkMu17() {
    if (!loaded_HLT_TkMu17_) counter_uncached_HLT_TkMu17_++;
    else counter_cached_HLT_TkMu17_++;
    if (!loaded_HLT_TkMu17_) {
        if (!b_HLT_TkMu17_) throw std::runtime_error("HLT_TkMu17 branch doesn't exist");
        b_HLT_TkMu17_->GetEntry(index);
        loaded_HLT_TkMu17_ = true;
    }
    return HLT_TkMu17_;
}
const bool &Nano::HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL() {
    if (!loaded_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_) counter_uncached_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_++;
    else counter_cached_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_++;
    if (!loaded_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_) {
        if (!b_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_) throw std::runtime_error("HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL branch doesn't exist");
        b_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_->GetEntry(index);
        loaded_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_ = true;
    }
    return HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_;
}
const bool &Nano::HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ() {
    if (!loaded_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_) counter_uncached_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_++;
    else counter_cached_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_++;
    if (!loaded_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_) {
        if (!b_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_) throw std::runtime_error("HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ branch doesn't exist");
        b_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_->GetEntry(index);
        loaded_HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_ = true;
    }
    return HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_;
}
const bool &Nano::HLT_TkMu20() {
    if (!loaded_HLT_TkMu20_) counter_uncached_HLT_TkMu20_++;
    else counter_cached_HLT_TkMu20_++;
    if (!loaded_HLT_TkMu20_) {
        if (!b_HLT_TkMu20_) throw std::runtime_error("HLT_TkMu20 branch doesn't exist");
        b_HLT_TkMu20_->GetEntry(index);
        loaded_HLT_TkMu20_ = true;
    }
    return HLT_TkMu20_;
}
const bool &Nano::HLT_TkMu24_eta2p1() {
    if (!loaded_HLT_TkMu24_eta2p1_) counter_uncached_HLT_TkMu24_eta2p1_++;
    else counter_cached_HLT_TkMu24_eta2p1_++;
    if (!loaded_HLT_TkMu24_eta2p1_) {
        if (!b_HLT_TkMu24_eta2p1_) throw std::runtime_error("HLT_TkMu24_eta2p1 branch doesn't exist");
        b_HLT_TkMu24_eta2p1_->GetEntry(index);
        loaded_HLT_TkMu24_eta2p1_ = true;
    }
    return HLT_TkMu24_eta2p1_;
}
const bool &Nano::HLT_TkMu27() {
    if (!loaded_HLT_TkMu27_) counter_uncached_HLT_TkMu27_++;
    else counter_cached_HLT_TkMu27_++;
    if (!loaded_HLT_TkMu27_) {
        if (!b_HLT_TkMu27_) throw std::runtime_error("HLT_TkMu27 branch doesn't exist");
        b_HLT_TkMu27_->GetEntry(index);
        loaded_HLT_TkMu27_ = true;
    }
    return HLT_TkMu27_;
}
const bool &Nano::HLT_TkMu50() {
    if (!loaded_HLT_TkMu50_) counter_uncached_HLT_TkMu50_++;
    else counter_cached_HLT_TkMu50_++;
    if (!loaded_HLT_TkMu50_) {
        if (!b_HLT_TkMu50_) throw std::runtime_error("HLT_TkMu50 branch doesn't exist");
        b_HLT_TkMu50_->GetEntry(index);
        loaded_HLT_TkMu50_ = true;
    }
    return HLT_TkMu50_;
}
const bool &Nano::HLT_Trimuon2_Upsilon5_Muon() {
    if (!loaded_HLT_Trimuon2_Upsilon5_Muon_) counter_uncached_HLT_Trimuon2_Upsilon5_Muon_++;
    else counter_cached_HLT_Trimuon2_Upsilon5_Muon_++;
    if (!loaded_HLT_Trimuon2_Upsilon5_Muon_) {
        if (!b_HLT_Trimuon2_Upsilon5_Muon_) throw std::runtime_error("HLT_Trimuon2_Upsilon5_Muon branch doesn't exist");
        b_HLT_Trimuon2_Upsilon5_Muon_->GetEntry(index);
        loaded_HLT_Trimuon2_Upsilon5_Muon_ = true;
    }
    return HLT_Trimuon2_Upsilon5_Muon_;
}
const bool &Nano::HLT_Trimuon5_3p5_2_Upsilon_Muon() {
    if (!loaded_HLT_Trimuon5_3p5_2_Upsilon_Muon_) counter_uncached_HLT_Trimuon5_3p5_2_Upsilon_Muon_++;
    else counter_cached_HLT_Trimuon5_3p5_2_Upsilon_Muon_++;
    if (!loaded_HLT_Trimuon5_3p5_2_Upsilon_Muon_) {
        if (!b_HLT_Trimuon5_3p5_2_Upsilon_Muon_) throw std::runtime_error("HLT_Trimuon5_3p5_2_Upsilon_Muon branch doesn't exist");
        b_HLT_Trimuon5_3p5_2_Upsilon_Muon_->GetEntry(index);
        loaded_HLT_Trimuon5_3p5_2_Upsilon_Muon_ = true;
    }
    return HLT_Trimuon5_3p5_2_Upsilon_Muon_;
}
const bool &Nano::HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon() {
    if (!loaded_HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_) counter_uncached_HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_++;
    else counter_cached_HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_++;
    if (!loaded_HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_) {
        if (!b_HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_) throw std::runtime_error("HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon branch doesn't exist");
        b_HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_->GetEntry(index);
        loaded_HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_ = true;
    }
    return HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_;
}
const bool &Nano::HLT_TripleJet110_35_35_Mjj650_PFMET110() {
    if (!loaded_HLT_TripleJet110_35_35_Mjj650_PFMET110_) counter_uncached_HLT_TripleJet110_35_35_Mjj650_PFMET110_++;
    else counter_cached_HLT_TripleJet110_35_35_Mjj650_PFMET110_++;
    if (!loaded_HLT_TripleJet110_35_35_Mjj650_PFMET110_) {
        if (!b_HLT_TripleJet110_35_35_Mjj650_PFMET110_) throw std::runtime_error("HLT_TripleJet110_35_35_Mjj650_PFMET110 branch doesn't exist");
        b_HLT_TripleJet110_35_35_Mjj650_PFMET110_->GetEntry(index);
        loaded_HLT_TripleJet110_35_35_Mjj650_PFMET110_ = true;
    }
    return HLT_TripleJet110_35_35_Mjj650_PFMET110_;
}
const bool &Nano::HLT_TripleJet110_35_35_Mjj650_PFMET120() {
    if (!loaded_HLT_TripleJet110_35_35_Mjj650_PFMET120_) counter_uncached_HLT_TripleJet110_35_35_Mjj650_PFMET120_++;
    else counter_cached_HLT_TripleJet110_35_35_Mjj650_PFMET120_++;
    if (!loaded_HLT_TripleJet110_35_35_Mjj650_PFMET120_) {
        if (!b_HLT_TripleJet110_35_35_Mjj650_PFMET120_) throw std::runtime_error("HLT_TripleJet110_35_35_Mjj650_PFMET120 branch doesn't exist");
        b_HLT_TripleJet110_35_35_Mjj650_PFMET120_->GetEntry(index);
        loaded_HLT_TripleJet110_35_35_Mjj650_PFMET120_ = true;
    }
    return HLT_TripleJet110_35_35_Mjj650_PFMET120_;
}
const bool &Nano::HLT_TripleJet110_35_35_Mjj650_PFMET130() {
    if (!loaded_HLT_TripleJet110_35_35_Mjj650_PFMET130_) counter_uncached_HLT_TripleJet110_35_35_Mjj650_PFMET130_++;
    else counter_cached_HLT_TripleJet110_35_35_Mjj650_PFMET130_++;
    if (!loaded_HLT_TripleJet110_35_35_Mjj650_PFMET130_) {
        if (!b_HLT_TripleJet110_35_35_Mjj650_PFMET130_) throw std::runtime_error("HLT_TripleJet110_35_35_Mjj650_PFMET130 branch doesn't exist");
        b_HLT_TripleJet110_35_35_Mjj650_PFMET130_->GetEntry(index);
        loaded_HLT_TripleJet110_35_35_Mjj650_PFMET130_ = true;
    }
    return HLT_TripleJet110_35_35_Mjj650_PFMET130_;
}
const bool &Nano::HLT_TripleMu_10_5_5_DZ() {
    if (!loaded_HLT_TripleMu_10_5_5_DZ_) counter_uncached_HLT_TripleMu_10_5_5_DZ_++;
    else counter_cached_HLT_TripleMu_10_5_5_DZ_++;
    if (!loaded_HLT_TripleMu_10_5_5_DZ_) {
        if (!b_HLT_TripleMu_10_5_5_DZ_) throw std::runtime_error("HLT_TripleMu_10_5_5_DZ branch doesn't exist");
        b_HLT_TripleMu_10_5_5_DZ_->GetEntry(index);
        loaded_HLT_TripleMu_10_5_5_DZ_ = true;
    }
    return HLT_TripleMu_10_5_5_DZ_;
}
const bool &Nano::HLT_TripleMu_12_10_5() {
    if (!loaded_HLT_TripleMu_12_10_5_) counter_uncached_HLT_TripleMu_12_10_5_++;
    else counter_cached_HLT_TripleMu_12_10_5_++;
    if (!loaded_HLT_TripleMu_12_10_5_) {
        if (!b_HLT_TripleMu_12_10_5_) throw std::runtime_error("HLT_TripleMu_12_10_5 branch doesn't exist");
        b_HLT_TripleMu_12_10_5_->GetEntry(index);
        loaded_HLT_TripleMu_12_10_5_ = true;
    }
    return HLT_TripleMu_12_10_5_;
}
const bool &Nano::HLT_TripleMu_5_3_3() {
    if (!loaded_HLT_TripleMu_5_3_3_) counter_uncached_HLT_TripleMu_5_3_3_++;
    else counter_cached_HLT_TripleMu_5_3_3_++;
    if (!loaded_HLT_TripleMu_5_3_3_) {
        if (!b_HLT_TripleMu_5_3_3_) throw std::runtime_error("HLT_TripleMu_5_3_3 branch doesn't exist");
        b_HLT_TripleMu_5_3_3_->GetEntry(index);
        loaded_HLT_TripleMu_5_3_3_ = true;
    }
    return HLT_TripleMu_5_3_3_;
}
const bool &Nano::HLT_TripleMu_5_3_3_DZ_Mass3p8() {
    if (!loaded_HLT_TripleMu_5_3_3_DZ_Mass3p8_) counter_uncached_HLT_TripleMu_5_3_3_DZ_Mass3p8_++;
    else counter_cached_HLT_TripleMu_5_3_3_DZ_Mass3p8_++;
    if (!loaded_HLT_TripleMu_5_3_3_DZ_Mass3p8_) {
        if (!b_HLT_TripleMu_5_3_3_DZ_Mass3p8_) throw std::runtime_error("HLT_TripleMu_5_3_3_DZ_Mass3p8 branch doesn't exist");
        b_HLT_TripleMu_5_3_3_DZ_Mass3p8_->GetEntry(index);
        loaded_HLT_TripleMu_5_3_3_DZ_Mass3p8_ = true;
    }
    return HLT_TripleMu_5_3_3_DZ_Mass3p8_;
}
const bool &Nano::HLT_TripleMu_5_3_3_Mass3p8_DCA() {
    if (!loaded_HLT_TripleMu_5_3_3_Mass3p8_DCA_) counter_uncached_HLT_TripleMu_5_3_3_Mass3p8_DCA_++;
    else counter_cached_HLT_TripleMu_5_3_3_Mass3p8_DCA_++;
    if (!loaded_HLT_TripleMu_5_3_3_Mass3p8_DCA_) {
        if (!b_HLT_TripleMu_5_3_3_Mass3p8_DCA_) throw std::runtime_error("HLT_TripleMu_5_3_3_Mass3p8_DCA branch doesn't exist");
        b_HLT_TripleMu_5_3_3_Mass3p8_DCA_->GetEntry(index);
        loaded_HLT_TripleMu_5_3_3_Mass3p8_DCA_ = true;
    }
    return HLT_TripleMu_5_3_3_Mass3p8_DCA_;
}
const bool &Nano::HLT_TripleMu_5_3_3_Mass3p8_DZ() {
    if (!loaded_HLT_TripleMu_5_3_3_Mass3p8_DZ_) counter_uncached_HLT_TripleMu_5_3_3_Mass3p8_DZ_++;
    else counter_cached_HLT_TripleMu_5_3_3_Mass3p8_DZ_++;
    if (!loaded_HLT_TripleMu_5_3_3_Mass3p8_DZ_) {
        if (!b_HLT_TripleMu_5_3_3_Mass3p8_DZ_) throw std::runtime_error("HLT_TripleMu_5_3_3_Mass3p8_DZ branch doesn't exist");
        b_HLT_TripleMu_5_3_3_Mass3p8_DZ_->GetEntry(index);
        loaded_HLT_TripleMu_5_3_3_Mass3p8_DZ_ = true;
    }
    return HLT_TripleMu_5_3_3_Mass3p8_DZ_;
}
const bool &Nano::HLT_TripleMu_5_3_3_Mass3p8to60_DCA() {
    if (!loaded_HLT_TripleMu_5_3_3_Mass3p8to60_DCA_) counter_uncached_HLT_TripleMu_5_3_3_Mass3p8to60_DCA_++;
    else counter_cached_HLT_TripleMu_5_3_3_Mass3p8to60_DCA_++;
    if (!loaded_HLT_TripleMu_5_3_3_Mass3p8to60_DCA_) {
        if (!b_HLT_TripleMu_5_3_3_Mass3p8to60_DCA_) throw std::runtime_error("HLT_TripleMu_5_3_3_Mass3p8to60_DCA branch doesn't exist");
        b_HLT_TripleMu_5_3_3_Mass3p8to60_DCA_->GetEntry(index);
        loaded_HLT_TripleMu_5_3_3_Mass3p8to60_DCA_ = true;
    }
    return HLT_TripleMu_5_3_3_Mass3p8to60_DCA_;
}
const bool &Nano::HLT_TripleMu_5_3_3_Mass3p8to60_DZ() {
    if (!loaded_HLT_TripleMu_5_3_3_Mass3p8to60_DZ_) counter_uncached_HLT_TripleMu_5_3_3_Mass3p8to60_DZ_++;
    else counter_cached_HLT_TripleMu_5_3_3_Mass3p8to60_DZ_++;
    if (!loaded_HLT_TripleMu_5_3_3_Mass3p8to60_DZ_) {
        if (!b_HLT_TripleMu_5_3_3_Mass3p8to60_DZ_) throw std::runtime_error("HLT_TripleMu_5_3_3_Mass3p8to60_DZ branch doesn't exist");
        b_HLT_TripleMu_5_3_3_Mass3p8to60_DZ_->GetEntry(index);
        loaded_HLT_TripleMu_5_3_3_Mass3p8to60_DZ_ = true;
    }
    return HLT_TripleMu_5_3_3_Mass3p8to60_DZ_;
}
const bool &Nano::HLT_TriplePhoton_20_20_20_CaloIdLV2() {
    if (!loaded_HLT_TriplePhoton_20_20_20_CaloIdLV2_) counter_uncached_HLT_TriplePhoton_20_20_20_CaloIdLV2_++;
    else counter_cached_HLT_TriplePhoton_20_20_20_CaloIdLV2_++;
    if (!loaded_HLT_TriplePhoton_20_20_20_CaloIdLV2_) {
        if (!b_HLT_TriplePhoton_20_20_20_CaloIdLV2_) throw std::runtime_error("HLT_TriplePhoton_20_20_20_CaloIdLV2 branch doesn't exist");
        b_HLT_TriplePhoton_20_20_20_CaloIdLV2_->GetEntry(index);
        loaded_HLT_TriplePhoton_20_20_20_CaloIdLV2_ = true;
    }
    return HLT_TriplePhoton_20_20_20_CaloIdLV2_;
}
const bool &Nano::HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL() {
    if (!loaded_HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_) counter_uncached_HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_++;
    else counter_cached_HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_++;
    if (!loaded_HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_) {
        if (!b_HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_) throw std::runtime_error("HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL branch doesn't exist");
        b_HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_->GetEntry(index);
        loaded_HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_ = true;
    }
    return HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_;
}
const bool &Nano::HLT_TriplePhoton_30_30_10_CaloIdLV2() {
    if (!loaded_HLT_TriplePhoton_30_30_10_CaloIdLV2_) counter_uncached_HLT_TriplePhoton_30_30_10_CaloIdLV2_++;
    else counter_cached_HLT_TriplePhoton_30_30_10_CaloIdLV2_++;
    if (!loaded_HLT_TriplePhoton_30_30_10_CaloIdLV2_) {
        if (!b_HLT_TriplePhoton_30_30_10_CaloIdLV2_) throw std::runtime_error("HLT_TriplePhoton_30_30_10_CaloIdLV2 branch doesn't exist");
        b_HLT_TriplePhoton_30_30_10_CaloIdLV2_->GetEntry(index);
        loaded_HLT_TriplePhoton_30_30_10_CaloIdLV2_ = true;
    }
    return HLT_TriplePhoton_30_30_10_CaloIdLV2_;
}
const bool &Nano::HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL() {
    if (!loaded_HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_) counter_uncached_HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_++;
    else counter_cached_HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_++;
    if (!loaded_HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_) {
        if (!b_HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_) throw std::runtime_error("HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL branch doesn't exist");
        b_HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_->GetEntry(index);
        loaded_HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_ = true;
    }
    return HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_;
}
const bool &Nano::HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL() {
    if (!loaded_HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_) counter_uncached_HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_++;
    else counter_cached_HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_++;
    if (!loaded_HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_) {
        if (!b_HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_) throw std::runtime_error("HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL branch doesn't exist");
        b_HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_->GetEntry(index);
        loaded_HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_ = true;
    }
    return HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_;
}
const bool &Nano::HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx() {
    if (!loaded_HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_) counter_uncached_HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_++;
    else counter_cached_HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_++;
    if (!loaded_HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_) {
        if (!b_HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_) throw std::runtime_error("HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx branch doesn't exist");
        b_HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_->GetEntry(index);
        loaded_HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_ = true;
    }
    return HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_;
}
const bool &Nano::HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx() {
    if (!loaded_HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx_) counter_uncached_HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx_++;
    else counter_cached_HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx_++;
    if (!loaded_HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx_) {
        if (!b_HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx_) throw std::runtime_error("HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx branch doesn't exist");
        b_HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx_->GetEntry(index);
        loaded_HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx_ = true;
    }
    return HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx_;
}
const bool &Nano::HLT_TrkMu16NoFiltersNoVtx() {
    if (!loaded_HLT_TrkMu16NoFiltersNoVtx_) counter_uncached_HLT_TrkMu16NoFiltersNoVtx_++;
    else counter_cached_HLT_TrkMu16NoFiltersNoVtx_++;
    if (!loaded_HLT_TrkMu16NoFiltersNoVtx_) {
        if (!b_HLT_TrkMu16NoFiltersNoVtx_) throw std::runtime_error("HLT_TrkMu16NoFiltersNoVtx branch doesn't exist");
        b_HLT_TrkMu16NoFiltersNoVtx_->GetEntry(index);
        loaded_HLT_TrkMu16NoFiltersNoVtx_ = true;
    }
    return HLT_TrkMu16NoFiltersNoVtx_;
}
const bool &Nano::HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx() {
    if (!loaded_HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_) counter_uncached_HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_++;
    else counter_cached_HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_++;
    if (!loaded_HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_) {
        if (!b_HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_) throw std::runtime_error("HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx branch doesn't exist");
        b_HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_->GetEntry(index);
        loaded_HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_ = true;
    }
    return HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_;
}
const bool &Nano::HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx() {
    if (!loaded_HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_) counter_uncached_HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_++;
    else counter_cached_HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_++;
    if (!loaded_HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_) {
        if (!b_HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_) throw std::runtime_error("HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx branch doesn't exist");
        b_HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_->GetEntry(index);
        loaded_HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_ = true;
    }
    return HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_;
}
const bool &Nano::HLT_TrkMu6NoFiltersNoVtx() {
    if (!loaded_HLT_TrkMu6NoFiltersNoVtx_) counter_uncached_HLT_TrkMu6NoFiltersNoVtx_++;
    else counter_cached_HLT_TrkMu6NoFiltersNoVtx_++;
    if (!loaded_HLT_TrkMu6NoFiltersNoVtx_) {
        if (!b_HLT_TrkMu6NoFiltersNoVtx_) throw std::runtime_error("HLT_TrkMu6NoFiltersNoVtx branch doesn't exist");
        b_HLT_TrkMu6NoFiltersNoVtx_->GetEntry(index);
        loaded_HLT_TrkMu6NoFiltersNoVtx_ = true;
    }
    return HLT_TrkMu6NoFiltersNoVtx_;
}
const bool &Nano::HLT_UncorrectedJetE30_NoBPTX() {
    if (!loaded_HLT_UncorrectedJetE30_NoBPTX_) counter_uncached_HLT_UncorrectedJetE30_NoBPTX_++;
    else counter_cached_HLT_UncorrectedJetE30_NoBPTX_++;
    if (!loaded_HLT_UncorrectedJetE30_NoBPTX_) {
        if (!b_HLT_UncorrectedJetE30_NoBPTX_) throw std::runtime_error("HLT_UncorrectedJetE30_NoBPTX branch doesn't exist");
        b_HLT_UncorrectedJetE30_NoBPTX_->GetEntry(index);
        loaded_HLT_UncorrectedJetE30_NoBPTX_ = true;
    }
    return HLT_UncorrectedJetE30_NoBPTX_;
}
const bool &Nano::HLT_UncorrectedJetE30_NoBPTX3BX() {
    if (!loaded_HLT_UncorrectedJetE30_NoBPTX3BX_) counter_uncached_HLT_UncorrectedJetE30_NoBPTX3BX_++;
    else counter_cached_HLT_UncorrectedJetE30_NoBPTX3BX_++;
    if (!loaded_HLT_UncorrectedJetE30_NoBPTX3BX_) {
        if (!b_HLT_UncorrectedJetE30_NoBPTX3BX_) throw std::runtime_error("HLT_UncorrectedJetE30_NoBPTX3BX branch doesn't exist");
        b_HLT_UncorrectedJetE30_NoBPTX3BX_->GetEntry(index);
        loaded_HLT_UncorrectedJetE30_NoBPTX3BX_ = true;
    }
    return HLT_UncorrectedJetE30_NoBPTX3BX_;
}
const bool &Nano::HLT_UncorrectedJetE60_NoBPTX3BX() {
    if (!loaded_HLT_UncorrectedJetE60_NoBPTX3BX_) counter_uncached_HLT_UncorrectedJetE60_NoBPTX3BX_++;
    else counter_cached_HLT_UncorrectedJetE60_NoBPTX3BX_++;
    if (!loaded_HLT_UncorrectedJetE60_NoBPTX3BX_) {
        if (!b_HLT_UncorrectedJetE60_NoBPTX3BX_) throw std::runtime_error("HLT_UncorrectedJetE60_NoBPTX3BX branch doesn't exist");
        b_HLT_UncorrectedJetE60_NoBPTX3BX_->GetEntry(index);
        loaded_HLT_UncorrectedJetE60_NoBPTX3BX_ = true;
    }
    return HLT_UncorrectedJetE60_NoBPTX3BX_;
}
const bool &Nano::HLT_UncorrectedJetE70_NoBPTX3BX() {
    if (!loaded_HLT_UncorrectedJetE70_NoBPTX3BX_) counter_uncached_HLT_UncorrectedJetE70_NoBPTX3BX_++;
    else counter_cached_HLT_UncorrectedJetE70_NoBPTX3BX_++;
    if (!loaded_HLT_UncorrectedJetE70_NoBPTX3BX_) {
        if (!b_HLT_UncorrectedJetE70_NoBPTX3BX_) throw std::runtime_error("HLT_UncorrectedJetE70_NoBPTX3BX branch doesn't exist");
        b_HLT_UncorrectedJetE70_NoBPTX3BX_->GetEntry(index);
        loaded_HLT_UncorrectedJetE70_NoBPTX3BX_ = true;
    }
    return HLT_UncorrectedJetE70_NoBPTX3BX_;
}
const bool &Nano::HLT_VBF_DisplacedJet40_DisplacedTrack() {
    if (!loaded_HLT_VBF_DisplacedJet40_DisplacedTrack_) counter_uncached_HLT_VBF_DisplacedJet40_DisplacedTrack_++;
    else counter_cached_HLT_VBF_DisplacedJet40_DisplacedTrack_++;
    if (!loaded_HLT_VBF_DisplacedJet40_DisplacedTrack_) {
        if (!b_HLT_VBF_DisplacedJet40_DisplacedTrack_) throw std::runtime_error("HLT_VBF_DisplacedJet40_DisplacedTrack branch doesn't exist");
        b_HLT_VBF_DisplacedJet40_DisplacedTrack_->GetEntry(index);
        loaded_HLT_VBF_DisplacedJet40_DisplacedTrack_ = true;
    }
    return HLT_VBF_DisplacedJet40_DisplacedTrack_;
}
const bool &Nano::HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5() {
    if (!loaded_HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5_) counter_uncached_HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5_++;
    else counter_cached_HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5_++;
    if (!loaded_HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5_) {
        if (!b_HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5_) throw std::runtime_error("HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5 branch doesn't exist");
        b_HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5_->GetEntry(index);
        loaded_HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5_ = true;
    }
    return HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5_;
}
const bool &Nano::HLT_VBF_DisplacedJet40_Hadronic() {
    if (!loaded_HLT_VBF_DisplacedJet40_Hadronic_) counter_uncached_HLT_VBF_DisplacedJet40_Hadronic_++;
    else counter_cached_HLT_VBF_DisplacedJet40_Hadronic_++;
    if (!loaded_HLT_VBF_DisplacedJet40_Hadronic_) {
        if (!b_HLT_VBF_DisplacedJet40_Hadronic_) throw std::runtime_error("HLT_VBF_DisplacedJet40_Hadronic branch doesn't exist");
        b_HLT_VBF_DisplacedJet40_Hadronic_->GetEntry(index);
        loaded_HLT_VBF_DisplacedJet40_Hadronic_ = true;
    }
    return HLT_VBF_DisplacedJet40_Hadronic_;
}
const bool &Nano::HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack() {
    if (!loaded_HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack_) counter_uncached_HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack_++;
    else counter_cached_HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack_++;
    if (!loaded_HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack_) {
        if (!b_HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack_) throw std::runtime_error("HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack branch doesn't exist");
        b_HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack_->GetEntry(index);
        loaded_HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack_ = true;
    }
    return HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack_;
}
const bool &Nano::HLT_VBF_DisplacedJet40_TightID_DisplacedTrack() {
    if (!loaded_HLT_VBF_DisplacedJet40_TightID_DisplacedTrack_) counter_uncached_HLT_VBF_DisplacedJet40_TightID_DisplacedTrack_++;
    else counter_cached_HLT_VBF_DisplacedJet40_TightID_DisplacedTrack_++;
    if (!loaded_HLT_VBF_DisplacedJet40_TightID_DisplacedTrack_) {
        if (!b_HLT_VBF_DisplacedJet40_TightID_DisplacedTrack_) throw std::runtime_error("HLT_VBF_DisplacedJet40_TightID_DisplacedTrack branch doesn't exist");
        b_HLT_VBF_DisplacedJet40_TightID_DisplacedTrack_->GetEntry(index);
        loaded_HLT_VBF_DisplacedJet40_TightID_DisplacedTrack_ = true;
    }
    return HLT_VBF_DisplacedJet40_TightID_DisplacedTrack_;
}
const bool &Nano::HLT_VBF_DisplacedJet40_TightID_Hadronic() {
    if (!loaded_HLT_VBF_DisplacedJet40_TightID_Hadronic_) counter_uncached_HLT_VBF_DisplacedJet40_TightID_Hadronic_++;
    else counter_cached_HLT_VBF_DisplacedJet40_TightID_Hadronic_++;
    if (!loaded_HLT_VBF_DisplacedJet40_TightID_Hadronic_) {
        if (!b_HLT_VBF_DisplacedJet40_TightID_Hadronic_) throw std::runtime_error("HLT_VBF_DisplacedJet40_TightID_Hadronic branch doesn't exist");
        b_HLT_VBF_DisplacedJet40_TightID_Hadronic_->GetEntry(index);
        loaded_HLT_VBF_DisplacedJet40_TightID_Hadronic_ = true;
    }
    return HLT_VBF_DisplacedJet40_TightID_Hadronic_;
}
const bool &Nano::HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack() {
    if (!loaded_HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack_) counter_uncached_HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack_++;
    else counter_cached_HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack_++;
    if (!loaded_HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack_) {
        if (!b_HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack_) throw std::runtime_error("HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack branch doesn't exist");
        b_HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack_->GetEntry(index);
        loaded_HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack_ = true;
    }
    return HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack_;
}
const bool &Nano::HLT_VBF_DisplacedJet40_VTightID_Hadronic() {
    if (!loaded_HLT_VBF_DisplacedJet40_VTightID_Hadronic_) counter_uncached_HLT_VBF_DisplacedJet40_VTightID_Hadronic_++;
    else counter_cached_HLT_VBF_DisplacedJet40_VTightID_Hadronic_++;
    if (!loaded_HLT_VBF_DisplacedJet40_VTightID_Hadronic_) {
        if (!b_HLT_VBF_DisplacedJet40_VTightID_Hadronic_) throw std::runtime_error("HLT_VBF_DisplacedJet40_VTightID_Hadronic branch doesn't exist");
        b_HLT_VBF_DisplacedJet40_VTightID_Hadronic_->GetEntry(index);
        loaded_HLT_VBF_DisplacedJet40_VTightID_Hadronic_ = true;
    }
    return HLT_VBF_DisplacedJet40_VTightID_Hadronic_;
}
const bool &Nano::HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack() {
    if (!loaded_HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack_) counter_uncached_HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack_++;
    else counter_cached_HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack_++;
    if (!loaded_HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack_) {
        if (!b_HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack_) throw std::runtime_error("HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack branch doesn't exist");
        b_HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack_->GetEntry(index);
        loaded_HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack_ = true;
    }
    return HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack_;
}
const bool &Nano::HLT_VBF_DisplacedJet40_VVTightID_Hadronic() {
    if (!loaded_HLT_VBF_DisplacedJet40_VVTightID_Hadronic_) counter_uncached_HLT_VBF_DisplacedJet40_VVTightID_Hadronic_++;
    else counter_cached_HLT_VBF_DisplacedJet40_VVTightID_Hadronic_++;
    if (!loaded_HLT_VBF_DisplacedJet40_VVTightID_Hadronic_) {
        if (!b_HLT_VBF_DisplacedJet40_VVTightID_Hadronic_) throw std::runtime_error("HLT_VBF_DisplacedJet40_VVTightID_Hadronic branch doesn't exist");
        b_HLT_VBF_DisplacedJet40_VVTightID_Hadronic_->GetEntry(index);
        loaded_HLT_VBF_DisplacedJet40_VVTightID_Hadronic_ = true;
    }
    return HLT_VBF_DisplacedJet40_VVTightID_Hadronic_;
}
const bool &Nano::HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1() {
    if (!loaded_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_) counter_uncached_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_++;
    else counter_cached_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_++;
    if (!loaded_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_) {
        if (!b_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_) throw std::runtime_error("HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1 branch doesn't exist");
        b_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_->GetEntry(index);
        loaded_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_ = true;
    }
    return HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_;
}
const bool &Nano::HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg_) counter_uncached_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg_) {
        if (!b_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1() {
    if (!loaded_HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_) counter_uncached_HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_++;
    else counter_cached_HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_++;
    if (!loaded_HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_) {
        if (!b_HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_) throw std::runtime_error("HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1 branch doesn't exist");
        b_HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_->GetEntry(index);
        loaded_HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_ = true;
    }
    return HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_;
}
const bool &Nano::HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1() {
    if (!loaded_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_) counter_uncached_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_++;
    else counter_cached_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_++;
    if (!loaded_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_) {
        if (!b_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_) throw std::runtime_error("HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1 branch doesn't exist");
        b_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_->GetEntry(index);
        loaded_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_ = true;
    }
    return HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_;
}
const bool &Nano::HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg_) counter_uncached_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg_) {
        if (!b_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1() {
    if (!loaded_HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_) counter_uncached_HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_++;
    else counter_cached_HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_++;
    if (!loaded_HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_) {
        if (!b_HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_) throw std::runtime_error("HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1 branch doesn't exist");
        b_HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_->GetEntry(index);
        loaded_HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_ = true;
    }
    return HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_;
}
const bool &Nano::HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1() {
    if (!loaded_HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_) counter_uncached_HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_++;
    else counter_cached_HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_++;
    if (!loaded_HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_) {
        if (!b_HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_) throw std::runtime_error("HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1 branch doesn't exist");
        b_HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_->GetEntry(index);
        loaded_HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_ = true;
    }
    return HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_;
}
const bool &Nano::HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1() {
    if (!loaded_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_) counter_uncached_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_++;
    else counter_cached_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_++;
    if (!loaded_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_) {
        if (!b_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_) throw std::runtime_error("HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1 branch doesn't exist");
        b_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_->GetEntry(index);
        loaded_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_ = true;
    }
    return HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_;
}
const bool &Nano::HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg() {
    if (!loaded_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg_) counter_uncached_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg_++;
    else counter_cached_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg_++;
    if (!loaded_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg_) {
        if (!b_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg_) throw std::runtime_error("HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg branch doesn't exist");
        b_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg_->GetEntry(index);
        loaded_HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg_ = true;
    }
    return HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg_;
}
const bool &Nano::HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1() {
    if (!loaded_HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_) counter_uncached_HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_++;
    else counter_cached_HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_++;
    if (!loaded_HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_) {
        if (!b_HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_) throw std::runtime_error("HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1 branch doesn't exist");
        b_HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_->GetEntry(index);
        loaded_HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_ = true;
    }
    return HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_;
}
const bool &Nano::HLT_VLooseIsoPFTau120_Trk50_eta2p1() {
    if (!loaded_HLT_VLooseIsoPFTau120_Trk50_eta2p1_) counter_uncached_HLT_VLooseIsoPFTau120_Trk50_eta2p1_++;
    else counter_cached_HLT_VLooseIsoPFTau120_Trk50_eta2p1_++;
    if (!loaded_HLT_VLooseIsoPFTau120_Trk50_eta2p1_) {
        if (!b_HLT_VLooseIsoPFTau120_Trk50_eta2p1_) throw std::runtime_error("HLT_VLooseIsoPFTau120_Trk50_eta2p1 branch doesn't exist");
        b_HLT_VLooseIsoPFTau120_Trk50_eta2p1_->GetEntry(index);
        loaded_HLT_VLooseIsoPFTau120_Trk50_eta2p1_ = true;
    }
    return HLT_VLooseIsoPFTau120_Trk50_eta2p1_;
}
const bool &Nano::HLT_VLooseIsoPFTau140_Trk50_eta2p1() {
    if (!loaded_HLT_VLooseIsoPFTau140_Trk50_eta2p1_) counter_uncached_HLT_VLooseIsoPFTau140_Trk50_eta2p1_++;
    else counter_cached_HLT_VLooseIsoPFTau140_Trk50_eta2p1_++;
    if (!loaded_HLT_VLooseIsoPFTau140_Trk50_eta2p1_) {
        if (!b_HLT_VLooseIsoPFTau140_Trk50_eta2p1_) throw std::runtime_error("HLT_VLooseIsoPFTau140_Trk50_eta2p1 branch doesn't exist");
        b_HLT_VLooseIsoPFTau140_Trk50_eta2p1_->GetEntry(index);
        loaded_HLT_VLooseIsoPFTau140_Trk50_eta2p1_ = true;
    }
    return HLT_VLooseIsoPFTau140_Trk50_eta2p1_;
}
const bool &Nano::HLT_ZeroBias() {
    if (!loaded_HLT_ZeroBias_) counter_uncached_HLT_ZeroBias_++;
    else counter_cached_HLT_ZeroBias_++;
    if (!loaded_HLT_ZeroBias_) {
        if (!b_HLT_ZeroBias_) throw std::runtime_error("HLT_ZeroBias branch doesn't exist");
        b_HLT_ZeroBias_->GetEntry(index);
        loaded_HLT_ZeroBias_ = true;
    }
    return HLT_ZeroBias_;
}
const bool &Nano::HLT_ZeroBias_Alignment() {
    if (!loaded_HLT_ZeroBias_Alignment_) counter_uncached_HLT_ZeroBias_Alignment_++;
    else counter_cached_HLT_ZeroBias_Alignment_++;
    if (!loaded_HLT_ZeroBias_Alignment_) {
        if (!b_HLT_ZeroBias_Alignment_) throw std::runtime_error("HLT_ZeroBias_Alignment branch doesn't exist");
        b_HLT_ZeroBias_Alignment_->GetEntry(index);
        loaded_HLT_ZeroBias_Alignment_ = true;
    }
    return HLT_ZeroBias_Alignment_;
}
const bool &Nano::HLT_ZeroBias_Beamspot() {
    if (!loaded_HLT_ZeroBias_Beamspot_) counter_uncached_HLT_ZeroBias_Beamspot_++;
    else counter_cached_HLT_ZeroBias_Beamspot_++;
    if (!loaded_HLT_ZeroBias_Beamspot_) {
        if (!b_HLT_ZeroBias_Beamspot_) throw std::runtime_error("HLT_ZeroBias_Beamspot branch doesn't exist");
        b_HLT_ZeroBias_Beamspot_->GetEntry(index);
        loaded_HLT_ZeroBias_Beamspot_ = true;
    }
    return HLT_ZeroBias_Beamspot_;
}
const bool &Nano::HLT_ZeroBias_FirstBXAfterTrain() {
    if (!loaded_HLT_ZeroBias_FirstBXAfterTrain_) counter_uncached_HLT_ZeroBias_FirstBXAfterTrain_++;
    else counter_cached_HLT_ZeroBias_FirstBXAfterTrain_++;
    if (!loaded_HLT_ZeroBias_FirstBXAfterTrain_) {
        if (!b_HLT_ZeroBias_FirstBXAfterTrain_) throw std::runtime_error("HLT_ZeroBias_FirstBXAfterTrain branch doesn't exist");
        b_HLT_ZeroBias_FirstBXAfterTrain_->GetEntry(index);
        loaded_HLT_ZeroBias_FirstBXAfterTrain_ = true;
    }
    return HLT_ZeroBias_FirstBXAfterTrain_;
}
const bool &Nano::HLT_ZeroBias_FirstCollisionAfterAbortGap() {
    if (!loaded_HLT_ZeroBias_FirstCollisionAfterAbortGap_) counter_uncached_HLT_ZeroBias_FirstCollisionAfterAbortGap_++;
    else counter_cached_HLT_ZeroBias_FirstCollisionAfterAbortGap_++;
    if (!loaded_HLT_ZeroBias_FirstCollisionAfterAbortGap_) {
        if (!b_HLT_ZeroBias_FirstCollisionAfterAbortGap_) throw std::runtime_error("HLT_ZeroBias_FirstCollisionAfterAbortGap branch doesn't exist");
        b_HLT_ZeroBias_FirstCollisionAfterAbortGap_->GetEntry(index);
        loaded_HLT_ZeroBias_FirstCollisionAfterAbortGap_ = true;
    }
    return HLT_ZeroBias_FirstCollisionAfterAbortGap_;
}
const bool &Nano::HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS() {
    if (!loaded_HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS_) counter_uncached_HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS_++;
    else counter_cached_HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS_++;
    if (!loaded_HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS_) {
        if (!b_HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS_) throw std::runtime_error("HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS branch doesn't exist");
        b_HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS_->GetEntry(index);
        loaded_HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS_ = true;
    }
    return HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS_;
}
const bool &Nano::HLT_ZeroBias_FirstCollisionAfterAbortGap_copy() {
    if (!loaded_HLT_ZeroBias_FirstCollisionAfterAbortGap_copy_) counter_uncached_HLT_ZeroBias_FirstCollisionAfterAbortGap_copy_++;
    else counter_cached_HLT_ZeroBias_FirstCollisionAfterAbortGap_copy_++;
    if (!loaded_HLT_ZeroBias_FirstCollisionAfterAbortGap_copy_) {
        if (!b_HLT_ZeroBias_FirstCollisionAfterAbortGap_copy_) throw std::runtime_error("HLT_ZeroBias_FirstCollisionAfterAbortGap_copy branch doesn't exist");
        b_HLT_ZeroBias_FirstCollisionAfterAbortGap_copy_->GetEntry(index);
        loaded_HLT_ZeroBias_FirstCollisionAfterAbortGap_copy_ = true;
    }
    return HLT_ZeroBias_FirstCollisionAfterAbortGap_copy_;
}
const bool &Nano::HLT_ZeroBias_FirstCollisionInTrain() {
    if (!loaded_HLT_ZeroBias_FirstCollisionInTrain_) counter_uncached_HLT_ZeroBias_FirstCollisionInTrain_++;
    else counter_cached_HLT_ZeroBias_FirstCollisionInTrain_++;
    if (!loaded_HLT_ZeroBias_FirstCollisionInTrain_) {
        if (!b_HLT_ZeroBias_FirstCollisionInTrain_) throw std::runtime_error("HLT_ZeroBias_FirstCollisionInTrain branch doesn't exist");
        b_HLT_ZeroBias_FirstCollisionInTrain_->GetEntry(index);
        loaded_HLT_ZeroBias_FirstCollisionInTrain_ = true;
    }
    return HLT_ZeroBias_FirstCollisionInTrain_;
}
const bool &Nano::HLT_ZeroBias_IsolatedBunches() {
    if (!loaded_HLT_ZeroBias_IsolatedBunches_) counter_uncached_HLT_ZeroBias_IsolatedBunches_++;
    else counter_cached_HLT_ZeroBias_IsolatedBunches_++;
    if (!loaded_HLT_ZeroBias_IsolatedBunches_) {
        if (!b_HLT_ZeroBias_IsolatedBunches_) throw std::runtime_error("HLT_ZeroBias_IsolatedBunches branch doesn't exist");
        b_HLT_ZeroBias_IsolatedBunches_->GetEntry(index);
        loaded_HLT_ZeroBias_IsolatedBunches_ = true;
    }
    return HLT_ZeroBias_IsolatedBunches_;
}
const bool &Nano::HLT_ZeroBias_LastCollisionInTrain() {
    if (!loaded_HLT_ZeroBias_LastCollisionInTrain_) counter_uncached_HLT_ZeroBias_LastCollisionInTrain_++;
    else counter_cached_HLT_ZeroBias_LastCollisionInTrain_++;
    if (!loaded_HLT_ZeroBias_LastCollisionInTrain_) {
        if (!b_HLT_ZeroBias_LastCollisionInTrain_) throw std::runtime_error("HLT_ZeroBias_LastCollisionInTrain branch doesn't exist");
        b_HLT_ZeroBias_LastCollisionInTrain_->GetEntry(index);
        loaded_HLT_ZeroBias_LastCollisionInTrain_ = true;
    }
    return HLT_ZeroBias_LastCollisionInTrain_;
}
const bool &Nano::HLT_ZeroBias_part0() {
    if (!loaded_HLT_ZeroBias_part0_) counter_uncached_HLT_ZeroBias_part0_++;
    else counter_cached_HLT_ZeroBias_part0_++;
    if (!loaded_HLT_ZeroBias_part0_) {
        if (!b_HLT_ZeroBias_part0_) throw std::runtime_error("HLT_ZeroBias_part0 branch doesn't exist");
        b_HLT_ZeroBias_part0_->GetEntry(index);
        loaded_HLT_ZeroBias_part0_ = true;
    }
    return HLT_ZeroBias_part0_;
}
const bool &Nano::HLT_ZeroBias_part1() {
    if (!loaded_HLT_ZeroBias_part1_) counter_uncached_HLT_ZeroBias_part1_++;
    else counter_cached_HLT_ZeroBias_part1_++;
    if (!loaded_HLT_ZeroBias_part1_) {
        if (!b_HLT_ZeroBias_part1_) throw std::runtime_error("HLT_ZeroBias_part1 branch doesn't exist");
        b_HLT_ZeroBias_part1_->GetEntry(index);
        loaded_HLT_ZeroBias_part1_ = true;
    }
    return HLT_ZeroBias_part1_;
}
const bool &Nano::HLT_ZeroBias_part2() {
    if (!loaded_HLT_ZeroBias_part2_) counter_uncached_HLT_ZeroBias_part2_++;
    else counter_cached_HLT_ZeroBias_part2_++;
    if (!loaded_HLT_ZeroBias_part2_) {
        if (!b_HLT_ZeroBias_part2_) throw std::runtime_error("HLT_ZeroBias_part2 branch doesn't exist");
        b_HLT_ZeroBias_part2_->GetEntry(index);
        loaded_HLT_ZeroBias_part2_ = true;
    }
    return HLT_ZeroBias_part2_;
}
const bool &Nano::HLT_ZeroBias_part3() {
    if (!loaded_HLT_ZeroBias_part3_) counter_uncached_HLT_ZeroBias_part3_++;
    else counter_cached_HLT_ZeroBias_part3_++;
    if (!loaded_HLT_ZeroBias_part3_) {
        if (!b_HLT_ZeroBias_part3_) throw std::runtime_error("HLT_ZeroBias_part3 branch doesn't exist");
        b_HLT_ZeroBias_part3_->GetEntry(index);
        loaded_HLT_ZeroBias_part3_ = true;
    }
    return HLT_ZeroBias_part3_;
}
const bool &Nano::HLT_ZeroBias_part4() {
    if (!loaded_HLT_ZeroBias_part4_) counter_uncached_HLT_ZeroBias_part4_++;
    else counter_cached_HLT_ZeroBias_part4_++;
    if (!loaded_HLT_ZeroBias_part4_) {
        if (!b_HLT_ZeroBias_part4_) throw std::runtime_error("HLT_ZeroBias_part4 branch doesn't exist");
        b_HLT_ZeroBias_part4_->GetEntry(index);
        loaded_HLT_ZeroBias_part4_ = true;
    }
    return HLT_ZeroBias_part4_;
}
const bool &Nano::HLT_ZeroBias_part5() {
    if (!loaded_HLT_ZeroBias_part5_) counter_uncached_HLT_ZeroBias_part5_++;
    else counter_cached_HLT_ZeroBias_part5_++;
    if (!loaded_HLT_ZeroBias_part5_) {
        if (!b_HLT_ZeroBias_part5_) throw std::runtime_error("HLT_ZeroBias_part5 branch doesn't exist");
        b_HLT_ZeroBias_part5_->GetEntry(index);
        loaded_HLT_ZeroBias_part5_ = true;
    }
    return HLT_ZeroBias_part5_;
}
const bool &Nano::HLT_ZeroBias_part6() {
    if (!loaded_HLT_ZeroBias_part6_) counter_uncached_HLT_ZeroBias_part6_++;
    else counter_cached_HLT_ZeroBias_part6_++;
    if (!loaded_HLT_ZeroBias_part6_) {
        if (!b_HLT_ZeroBias_part6_) throw std::runtime_error("HLT_ZeroBias_part6 branch doesn't exist");
        b_HLT_ZeroBias_part6_->GetEntry(index);
        loaded_HLT_ZeroBias_part6_ = true;
    }
    return HLT_ZeroBias_part6_;
}
const bool &Nano::HLT_ZeroBias_part7() {
    if (!loaded_HLT_ZeroBias_part7_) counter_uncached_HLT_ZeroBias_part7_++;
    else counter_cached_HLT_ZeroBias_part7_++;
    if (!loaded_HLT_ZeroBias_part7_) {
        if (!b_HLT_ZeroBias_part7_) throw std::runtime_error("HLT_ZeroBias_part7 branch doesn't exist");
        b_HLT_ZeroBias_part7_->GetEntry(index);
        loaded_HLT_ZeroBias_part7_ = true;
    }
    return HLT_ZeroBias_part7_;
}
const bool &Nano::HLT_ZeroBias_part8() {
    if (!loaded_HLT_ZeroBias_part8_) counter_uncached_HLT_ZeroBias_part8_++;
    else counter_cached_HLT_ZeroBias_part8_++;
    if (!loaded_HLT_ZeroBias_part8_) {
        if (!b_HLT_ZeroBias_part8_) throw std::runtime_error("HLT_ZeroBias_part8 branch doesn't exist");
        b_HLT_ZeroBias_part8_->GetEntry(index);
        loaded_HLT_ZeroBias_part8_ = true;
    }
    return HLT_ZeroBias_part8_;
}
const bool &Nano::HLT_ZeroBias_part9() {
    if (!loaded_HLT_ZeroBias_part9_) counter_uncached_HLT_ZeroBias_part9_++;
    else counter_cached_HLT_ZeroBias_part9_++;
    if (!loaded_HLT_ZeroBias_part9_) {
        if (!b_HLT_ZeroBias_part9_) throw std::runtime_error("HLT_ZeroBias_part9 branch doesn't exist");
        b_HLT_ZeroBias_part9_->GetEntry(index);
        loaded_HLT_ZeroBias_part9_ = true;
    }
    return HLT_ZeroBias_part9_;
}
const bool &Nano::HLTriggerFinalPath() {
    if (!loaded_HLTriggerFinalPath_) counter_uncached_HLTriggerFinalPath_++;
    else counter_cached_HLTriggerFinalPath_++;
    if (!loaded_HLTriggerFinalPath_) {
        if (!b_HLTriggerFinalPath_) throw std::runtime_error("HLTriggerFinalPath branch doesn't exist");
        b_HLTriggerFinalPath_->GetEntry(index);
        loaded_HLTriggerFinalPath_ = true;
    }
    return HLTriggerFinalPath_;
}
const bool &Nano::HLTriggerFirstPath() {
    if (!loaded_HLTriggerFirstPath_) counter_uncached_HLTriggerFirstPath_++;
    else counter_cached_HLTriggerFirstPath_++;
    if (!loaded_HLTriggerFirstPath_) {
        if (!b_HLTriggerFirstPath_) throw std::runtime_error("HLTriggerFirstPath branch doesn't exist");
        b_HLTriggerFirstPath_->GetEntry(index);
        loaded_HLTriggerFirstPath_ = true;
    }
    return HLTriggerFirstPath_;
}
const float &Nano::HTXS_Higgs_pt() {
    if (!loaded_HTXS_Higgs_pt_) counter_uncached_HTXS_Higgs_pt_++;
    else counter_cached_HTXS_Higgs_pt_++;
    if (!loaded_HTXS_Higgs_pt_) {
        if (!b_HTXS_Higgs_pt_) throw std::runtime_error("HTXS_Higgs_pt branch doesn't exist");
        b_HTXS_Higgs_pt_->GetEntry(index);
        loaded_HTXS_Higgs_pt_ = true;
    }
    return HTXS_Higgs_pt_;
}
const float &Nano::HTXS_Higgs_y() {
    if (!loaded_HTXS_Higgs_y_) counter_uncached_HTXS_Higgs_y_++;
    else counter_cached_HTXS_Higgs_y_++;
    if (!loaded_HTXS_Higgs_y_) {
        if (!b_HTXS_Higgs_y_) throw std::runtime_error("HTXS_Higgs_y branch doesn't exist");
        b_HTXS_Higgs_y_->GetEntry(index);
        loaded_HTXS_Higgs_y_ = true;
    }
    return HTXS_Higgs_y_;
}
const UChar_t &Nano::HTXS_njets25() {
    if (!loaded_HTXS_njets25_) counter_uncached_HTXS_njets25_++;
    else counter_cached_HTXS_njets25_++;
    if (!loaded_HTXS_njets25_) {
        if (!b_HTXS_njets25_) throw std::runtime_error("HTXS_njets25 branch doesn't exist");
        b_HTXS_njets25_->GetEntry(index);
        loaded_HTXS_njets25_ = true;
    }
    return HTXS_njets25_;
}
const UChar_t &Nano::HTXS_njets30() {
    if (!loaded_HTXS_njets30_) counter_uncached_HTXS_njets30_++;
    else counter_cached_HTXS_njets30_++;
    if (!loaded_HTXS_njets30_) {
        if (!b_HTXS_njets30_) throw std::runtime_error("HTXS_njets30 branch doesn't exist");
        b_HTXS_njets30_->GetEntry(index);
        loaded_HTXS_njets30_ = true;
    }
    return HTXS_njets30_;
}
const int &Nano::HTXS_stage1_1_cat_pTjet25GeV() {
    if (!loaded_HTXS_stage1_1_cat_pTjet25GeV_) counter_uncached_HTXS_stage1_1_cat_pTjet25GeV_++;
    else counter_cached_HTXS_stage1_1_cat_pTjet25GeV_++;
    if (!loaded_HTXS_stage1_1_cat_pTjet25GeV_) {
        if (!b_HTXS_stage1_1_cat_pTjet25GeV_) throw std::runtime_error("HTXS_stage1_1_cat_pTjet25GeV branch doesn't exist");
        b_HTXS_stage1_1_cat_pTjet25GeV_->GetEntry(index);
        loaded_HTXS_stage1_1_cat_pTjet25GeV_ = true;
    }
    return HTXS_stage1_1_cat_pTjet25GeV_;
}
const int &Nano::HTXS_stage1_1_cat_pTjet30GeV() {
    if (!loaded_HTXS_stage1_1_cat_pTjet30GeV_) counter_uncached_HTXS_stage1_1_cat_pTjet30GeV_++;
    else counter_cached_HTXS_stage1_1_cat_pTjet30GeV_++;
    if (!loaded_HTXS_stage1_1_cat_pTjet30GeV_) {
        if (!b_HTXS_stage1_1_cat_pTjet30GeV_) throw std::runtime_error("HTXS_stage1_1_cat_pTjet30GeV branch doesn't exist");
        b_HTXS_stage1_1_cat_pTjet30GeV_->GetEntry(index);
        loaded_HTXS_stage1_1_cat_pTjet30GeV_ = true;
    }
    return HTXS_stage1_1_cat_pTjet30GeV_;
}
const int &Nano::HTXS_stage1_1_fine_cat_pTjet25GeV() {
    if (!loaded_HTXS_stage1_1_fine_cat_pTjet25GeV_) counter_uncached_HTXS_stage1_1_fine_cat_pTjet25GeV_++;
    else counter_cached_HTXS_stage1_1_fine_cat_pTjet25GeV_++;
    if (!loaded_HTXS_stage1_1_fine_cat_pTjet25GeV_) {
        if (!b_HTXS_stage1_1_fine_cat_pTjet25GeV_) throw std::runtime_error("HTXS_stage1_1_fine_cat_pTjet25GeV branch doesn't exist");
        b_HTXS_stage1_1_fine_cat_pTjet25GeV_->GetEntry(index);
        loaded_HTXS_stage1_1_fine_cat_pTjet25GeV_ = true;
    }
    return HTXS_stage1_1_fine_cat_pTjet25GeV_;
}
const int &Nano::HTXS_stage1_1_fine_cat_pTjet30GeV() {
    if (!loaded_HTXS_stage1_1_fine_cat_pTjet30GeV_) counter_uncached_HTXS_stage1_1_fine_cat_pTjet30GeV_++;
    else counter_cached_HTXS_stage1_1_fine_cat_pTjet30GeV_++;
    if (!loaded_HTXS_stage1_1_fine_cat_pTjet30GeV_) {
        if (!b_HTXS_stage1_1_fine_cat_pTjet30GeV_) throw std::runtime_error("HTXS_stage1_1_fine_cat_pTjet30GeV branch doesn't exist");
        b_HTXS_stage1_1_fine_cat_pTjet30GeV_->GetEntry(index);
        loaded_HTXS_stage1_1_fine_cat_pTjet30GeV_ = true;
    }
    return HTXS_stage1_1_fine_cat_pTjet30GeV_;
}
const int &Nano::HTXS_stage1_2_cat_pTjet25GeV() {
    if (!loaded_HTXS_stage1_2_cat_pTjet25GeV_) counter_uncached_HTXS_stage1_2_cat_pTjet25GeV_++;
    else counter_cached_HTXS_stage1_2_cat_pTjet25GeV_++;
    if (!loaded_HTXS_stage1_2_cat_pTjet25GeV_) {
        if (!b_HTXS_stage1_2_cat_pTjet25GeV_) throw std::runtime_error("HTXS_stage1_2_cat_pTjet25GeV branch doesn't exist");
        b_HTXS_stage1_2_cat_pTjet25GeV_->GetEntry(index);
        loaded_HTXS_stage1_2_cat_pTjet25GeV_ = true;
    }
    return HTXS_stage1_2_cat_pTjet25GeV_;
}
const int &Nano::HTXS_stage1_2_cat_pTjet30GeV() {
    if (!loaded_HTXS_stage1_2_cat_pTjet30GeV_) counter_uncached_HTXS_stage1_2_cat_pTjet30GeV_++;
    else counter_cached_HTXS_stage1_2_cat_pTjet30GeV_++;
    if (!loaded_HTXS_stage1_2_cat_pTjet30GeV_) {
        if (!b_HTXS_stage1_2_cat_pTjet30GeV_) throw std::runtime_error("HTXS_stage1_2_cat_pTjet30GeV branch doesn't exist");
        b_HTXS_stage1_2_cat_pTjet30GeV_->GetEntry(index);
        loaded_HTXS_stage1_2_cat_pTjet30GeV_ = true;
    }
    return HTXS_stage1_2_cat_pTjet30GeV_;
}
const int &Nano::HTXS_stage1_2_fine_cat_pTjet25GeV() {
    if (!loaded_HTXS_stage1_2_fine_cat_pTjet25GeV_) counter_uncached_HTXS_stage1_2_fine_cat_pTjet25GeV_++;
    else counter_cached_HTXS_stage1_2_fine_cat_pTjet25GeV_++;
    if (!loaded_HTXS_stage1_2_fine_cat_pTjet25GeV_) {
        if (!b_HTXS_stage1_2_fine_cat_pTjet25GeV_) throw std::runtime_error("HTXS_stage1_2_fine_cat_pTjet25GeV branch doesn't exist");
        b_HTXS_stage1_2_fine_cat_pTjet25GeV_->GetEntry(index);
        loaded_HTXS_stage1_2_fine_cat_pTjet25GeV_ = true;
    }
    return HTXS_stage1_2_fine_cat_pTjet25GeV_;
}
const int &Nano::HTXS_stage1_2_fine_cat_pTjet30GeV() {
    if (!loaded_HTXS_stage1_2_fine_cat_pTjet30GeV_) counter_uncached_HTXS_stage1_2_fine_cat_pTjet30GeV_++;
    else counter_cached_HTXS_stage1_2_fine_cat_pTjet30GeV_++;
    if (!loaded_HTXS_stage1_2_fine_cat_pTjet30GeV_) {
        if (!b_HTXS_stage1_2_fine_cat_pTjet30GeV_) throw std::runtime_error("HTXS_stage1_2_fine_cat_pTjet30GeV branch doesn't exist");
        b_HTXS_stage1_2_fine_cat_pTjet30GeV_->GetEntry(index);
        loaded_HTXS_stage1_2_fine_cat_pTjet30GeV_ = true;
    }
    return HTXS_stage1_2_fine_cat_pTjet30GeV_;
}
const int &Nano::HTXS_stage_0() {
    if (!loaded_HTXS_stage_0_) counter_uncached_HTXS_stage_0_++;
    else counter_cached_HTXS_stage_0_++;
    if (!loaded_HTXS_stage_0_) {
        if (!b_HTXS_stage_0_) throw std::runtime_error("HTXS_stage_0 branch doesn't exist");
        b_HTXS_stage_0_->GetEntry(index);
        loaded_HTXS_stage_0_ = true;
    }
    return HTXS_stage_0_;
}
const int &Nano::HTXS_stage_1_pTjet25() {
    if (!loaded_HTXS_stage_1_pTjet25_) counter_uncached_HTXS_stage_1_pTjet25_++;
    else counter_cached_HTXS_stage_1_pTjet25_++;
    if (!loaded_HTXS_stage_1_pTjet25_) {
        if (!b_HTXS_stage_1_pTjet25_) throw std::runtime_error("HTXS_stage_1_pTjet25 branch doesn't exist");
        b_HTXS_stage_1_pTjet25_->GetEntry(index);
        loaded_HTXS_stage_1_pTjet25_ = true;
    }
    return HTXS_stage_1_pTjet25_;
}
const int &Nano::HTXS_stage_1_pTjet30() {
    if (!loaded_HTXS_stage_1_pTjet30_) counter_uncached_HTXS_stage_1_pTjet30_++;
    else counter_cached_HTXS_stage_1_pTjet30_++;
    if (!loaded_HTXS_stage_1_pTjet30_) {
        if (!b_HTXS_stage_1_pTjet30_) throw std::runtime_error("HTXS_stage_1_pTjet30 branch doesn't exist");
        b_HTXS_stage_1_pTjet30_->GetEntry(index);
        loaded_HTXS_stage_1_pTjet30_ = true;
    }
    return HTXS_stage_1_pTjet30_;
}
const vector<int> &Nano::IsoTrack_charge() {
    if (!loaded_IsoTrack_charge_) counter_uncached_IsoTrack_charge_++;
    else counter_cached_IsoTrack_charge_++;
    if (!loaded_IsoTrack_charge_) {
        if (!b_IsoTrack_charge_) throw std::runtime_error("IsoTrack_charge branch doesn't exist");
        int bytes = b_IsoTrack_charge_->GetEntry(index);
        v_IsoTrack_charge_ = vector<int>(IsoTrack_charge_,IsoTrack_charge_+bytes/sizeof(IsoTrack_charge_[0]));
        loaded_IsoTrack_charge_ = true;
    }
    return v_IsoTrack_charge_;
}
const vector<float> &Nano::IsoTrack_dxy() {
    if (!loaded_IsoTrack_dxy_) counter_uncached_IsoTrack_dxy_++;
    else counter_cached_IsoTrack_dxy_++;
    if (!loaded_IsoTrack_dxy_) {
        if (!b_IsoTrack_dxy_) throw std::runtime_error("IsoTrack_dxy branch doesn't exist");
        int bytes = b_IsoTrack_dxy_->GetEntry(index);
        v_IsoTrack_dxy_ = vector<float>(IsoTrack_dxy_,IsoTrack_dxy_+bytes/sizeof(IsoTrack_dxy_[0]));
        loaded_IsoTrack_dxy_ = true;
    }
    return v_IsoTrack_dxy_;
}
const vector<float> &Nano::IsoTrack_dz() {
    if (!loaded_IsoTrack_dz_) counter_uncached_IsoTrack_dz_++;
    else counter_cached_IsoTrack_dz_++;
    if (!loaded_IsoTrack_dz_) {
        if (!b_IsoTrack_dz_) throw std::runtime_error("IsoTrack_dz branch doesn't exist");
        int bytes = b_IsoTrack_dz_->GetEntry(index);
        v_IsoTrack_dz_ = vector<float>(IsoTrack_dz_,IsoTrack_dz_+bytes/sizeof(IsoTrack_dz_[0]));
        loaded_IsoTrack_dz_ = true;
    }
    return v_IsoTrack_dz_;
}
const vector<float> &Nano::IsoTrack_eta() {
    if (!loaded_IsoTrack_eta_) counter_uncached_IsoTrack_eta_++;
    else counter_cached_IsoTrack_eta_++;
    if (!loaded_IsoTrack_eta_) {
        if (!b_IsoTrack_eta_) throw std::runtime_error("IsoTrack_eta branch doesn't exist");
        int bytes = b_IsoTrack_eta_->GetEntry(index);
        v_IsoTrack_eta_ = vector<float>(IsoTrack_eta_,IsoTrack_eta_+bytes/sizeof(IsoTrack_eta_[0]));
        loaded_IsoTrack_eta_ = true;
    }
    return v_IsoTrack_eta_;
}
const vector<int> &Nano::IsoTrack_fromPV() {
    if (!loaded_IsoTrack_fromPV_) counter_uncached_IsoTrack_fromPV_++;
    else counter_cached_IsoTrack_fromPV_++;
    if (!loaded_IsoTrack_fromPV_) {
        if (!b_IsoTrack_fromPV_) throw std::runtime_error("IsoTrack_fromPV branch doesn't exist");
        int bytes = b_IsoTrack_fromPV_->GetEntry(index);
        v_IsoTrack_fromPV_ = vector<int>(IsoTrack_fromPV_,IsoTrack_fromPV_+bytes/sizeof(IsoTrack_fromPV_[0]));
        loaded_IsoTrack_fromPV_ = true;
    }
    return v_IsoTrack_fromPV_;
}
const vector<bool> &Nano::IsoTrack_isFromLostTrack() {
    if (!loaded_IsoTrack_isFromLostTrack_) counter_uncached_IsoTrack_isFromLostTrack_++;
    else counter_cached_IsoTrack_isFromLostTrack_++;
    if (!loaded_IsoTrack_isFromLostTrack_) {
        if (!b_IsoTrack_isFromLostTrack_) throw std::runtime_error("IsoTrack_isFromLostTrack branch doesn't exist");
        int bytes = b_IsoTrack_isFromLostTrack_->GetEntry(index);
        v_IsoTrack_isFromLostTrack_ = vector<bool>(IsoTrack_isFromLostTrack_,IsoTrack_isFromLostTrack_+bytes/sizeof(IsoTrack_isFromLostTrack_[0]));
        loaded_IsoTrack_isFromLostTrack_ = true;
    }
    return v_IsoTrack_isFromLostTrack_;
}
const vector<bool> &Nano::IsoTrack_isHighPurityTrack() {
    if (!loaded_IsoTrack_isHighPurityTrack_) counter_uncached_IsoTrack_isHighPurityTrack_++;
    else counter_cached_IsoTrack_isHighPurityTrack_++;
    if (!loaded_IsoTrack_isHighPurityTrack_) {
        if (!b_IsoTrack_isHighPurityTrack_) throw std::runtime_error("IsoTrack_isHighPurityTrack branch doesn't exist");
        int bytes = b_IsoTrack_isHighPurityTrack_->GetEntry(index);
        v_IsoTrack_isHighPurityTrack_ = vector<bool>(IsoTrack_isHighPurityTrack_,IsoTrack_isHighPurityTrack_+bytes/sizeof(IsoTrack_isHighPurityTrack_[0]));
        loaded_IsoTrack_isHighPurityTrack_ = true;
    }
    return v_IsoTrack_isHighPurityTrack_;
}
const vector<bool> &Nano::IsoTrack_isPFcand() {
    if (!loaded_IsoTrack_isPFcand_) counter_uncached_IsoTrack_isPFcand_++;
    else counter_cached_IsoTrack_isPFcand_++;
    if (!loaded_IsoTrack_isPFcand_) {
        if (!b_IsoTrack_isPFcand_) throw std::runtime_error("IsoTrack_isPFcand branch doesn't exist");
        int bytes = b_IsoTrack_isPFcand_->GetEntry(index);
        v_IsoTrack_isPFcand_ = vector<bool>(IsoTrack_isPFcand_,IsoTrack_isPFcand_+bytes/sizeof(IsoTrack_isPFcand_[0]));
        loaded_IsoTrack_isPFcand_ = true;
    }
    return v_IsoTrack_isPFcand_;
}
const vector<float> &Nano::IsoTrack_miniPFRelIso_all() {
    if (!loaded_IsoTrack_miniPFRelIso_all_) counter_uncached_IsoTrack_miniPFRelIso_all_++;
    else counter_cached_IsoTrack_miniPFRelIso_all_++;
    if (!loaded_IsoTrack_miniPFRelIso_all_) {
        if (!b_IsoTrack_miniPFRelIso_all_) throw std::runtime_error("IsoTrack_miniPFRelIso_all branch doesn't exist");
        int bytes = b_IsoTrack_miniPFRelIso_all_->GetEntry(index);
        v_IsoTrack_miniPFRelIso_all_ = vector<float>(IsoTrack_miniPFRelIso_all_,IsoTrack_miniPFRelIso_all_+bytes/sizeof(IsoTrack_miniPFRelIso_all_[0]));
        loaded_IsoTrack_miniPFRelIso_all_ = true;
    }
    return v_IsoTrack_miniPFRelIso_all_;
}
const vector<float> &Nano::IsoTrack_miniPFRelIso_chg() {
    if (!loaded_IsoTrack_miniPFRelIso_chg_) counter_uncached_IsoTrack_miniPFRelIso_chg_++;
    else counter_cached_IsoTrack_miniPFRelIso_chg_++;
    if (!loaded_IsoTrack_miniPFRelIso_chg_) {
        if (!b_IsoTrack_miniPFRelIso_chg_) throw std::runtime_error("IsoTrack_miniPFRelIso_chg branch doesn't exist");
        int bytes = b_IsoTrack_miniPFRelIso_chg_->GetEntry(index);
        v_IsoTrack_miniPFRelIso_chg_ = vector<float>(IsoTrack_miniPFRelIso_chg_,IsoTrack_miniPFRelIso_chg_+bytes/sizeof(IsoTrack_miniPFRelIso_chg_[0]));
        loaded_IsoTrack_miniPFRelIso_chg_ = true;
    }
    return v_IsoTrack_miniPFRelIso_chg_;
}
const vector<int> &Nano::IsoTrack_pdgId() {
    if (!loaded_IsoTrack_pdgId_) counter_uncached_IsoTrack_pdgId_++;
    else counter_cached_IsoTrack_pdgId_++;
    if (!loaded_IsoTrack_pdgId_) {
        if (!b_IsoTrack_pdgId_) throw std::runtime_error("IsoTrack_pdgId branch doesn't exist");
        int bytes = b_IsoTrack_pdgId_->GetEntry(index);
        v_IsoTrack_pdgId_ = vector<int>(IsoTrack_pdgId_,IsoTrack_pdgId_+bytes/sizeof(IsoTrack_pdgId_[0]));
        loaded_IsoTrack_pdgId_ = true;
    }
    return v_IsoTrack_pdgId_;
}
const vector<float> &Nano::IsoTrack_pfRelIso03_all() {
    if (!loaded_IsoTrack_pfRelIso03_all_) counter_uncached_IsoTrack_pfRelIso03_all_++;
    else counter_cached_IsoTrack_pfRelIso03_all_++;
    if (!loaded_IsoTrack_pfRelIso03_all_) {
        if (!b_IsoTrack_pfRelIso03_all_) throw std::runtime_error("IsoTrack_pfRelIso03_all branch doesn't exist");
        int bytes = b_IsoTrack_pfRelIso03_all_->GetEntry(index);
        v_IsoTrack_pfRelIso03_all_ = vector<float>(IsoTrack_pfRelIso03_all_,IsoTrack_pfRelIso03_all_+bytes/sizeof(IsoTrack_pfRelIso03_all_[0]));
        loaded_IsoTrack_pfRelIso03_all_ = true;
    }
    return v_IsoTrack_pfRelIso03_all_;
}
const vector<float> &Nano::IsoTrack_pfRelIso03_chg() {
    if (!loaded_IsoTrack_pfRelIso03_chg_) counter_uncached_IsoTrack_pfRelIso03_chg_++;
    else counter_cached_IsoTrack_pfRelIso03_chg_++;
    if (!loaded_IsoTrack_pfRelIso03_chg_) {
        if (!b_IsoTrack_pfRelIso03_chg_) throw std::runtime_error("IsoTrack_pfRelIso03_chg branch doesn't exist");
        int bytes = b_IsoTrack_pfRelIso03_chg_->GetEntry(index);
        v_IsoTrack_pfRelIso03_chg_ = vector<float>(IsoTrack_pfRelIso03_chg_,IsoTrack_pfRelIso03_chg_+bytes/sizeof(IsoTrack_pfRelIso03_chg_[0]));
        loaded_IsoTrack_pfRelIso03_chg_ = true;
    }
    return v_IsoTrack_pfRelIso03_chg_;
}
const vector<float> &Nano::IsoTrack_phi() {
    if (!loaded_IsoTrack_phi_) counter_uncached_IsoTrack_phi_++;
    else counter_cached_IsoTrack_phi_++;
    if (!loaded_IsoTrack_phi_) {
        if (!b_IsoTrack_phi_) throw std::runtime_error("IsoTrack_phi branch doesn't exist");
        int bytes = b_IsoTrack_phi_->GetEntry(index);
        v_IsoTrack_phi_ = vector<float>(IsoTrack_phi_,IsoTrack_phi_+bytes/sizeof(IsoTrack_phi_[0]));
        loaded_IsoTrack_phi_ = true;
    }
    return v_IsoTrack_phi_;
}
const vector<float> &Nano::IsoTrack_pt() {
    if (!loaded_IsoTrack_pt_) counter_uncached_IsoTrack_pt_++;
    else counter_cached_IsoTrack_pt_++;
    if (!loaded_IsoTrack_pt_) {
        if (!b_IsoTrack_pt_) throw std::runtime_error("IsoTrack_pt branch doesn't exist");
        int bytes = b_IsoTrack_pt_->GetEntry(index);
        v_IsoTrack_pt_ = vector<float>(IsoTrack_pt_,IsoTrack_pt_+bytes/sizeof(IsoTrack_pt_[0]));
        loaded_IsoTrack_pt_ = true;
    }
    return v_IsoTrack_pt_;
}
const vector<float> &Nano::Jet_area() {
    if (!loaded_Jet_area_) counter_uncached_Jet_area_++;
    else counter_cached_Jet_area_++;
    if (!loaded_Jet_area_) {
        if (!b_Jet_area_) throw std::runtime_error("Jet_area branch doesn't exist");
        int bytes = b_Jet_area_->GetEntry(index);
        v_Jet_area_ = vector<float>(Jet_area_,Jet_area_+bytes/sizeof(Jet_area_[0]));
        loaded_Jet_area_ = true;
    }
    return v_Jet_area_;
}
const vector<float> &Nano::Jet_bReg() {
    if (!loaded_Jet_bReg_) counter_uncached_Jet_bReg_++;
    else counter_cached_Jet_bReg_++;
    if (!loaded_Jet_bReg_) {
        if (!b_Jet_bReg_) throw std::runtime_error("Jet_bReg branch doesn't exist");
        int bytes = b_Jet_bReg_->GetEntry(index);
        v_Jet_bReg_ = vector<float>(Jet_bReg_,Jet_bReg_+bytes/sizeof(Jet_bReg_[0]));
        loaded_Jet_bReg_ = true;
    }
    return v_Jet_bReg_;
}
const vector<float> &Nano::Jet_bRegCorr() {
    if (!loaded_Jet_bRegCorr_) counter_uncached_Jet_bRegCorr_++;
    else counter_cached_Jet_bRegCorr_++;
    if (!loaded_Jet_bRegCorr_) {
        if (!b_Jet_bRegCorr_) throw std::runtime_error("Jet_bRegCorr branch doesn't exist");
        int bytes = b_Jet_bRegCorr_->GetEntry(index);
        v_Jet_bRegCorr_ = vector<float>(Jet_bRegCorr_,Jet_bRegCorr_+bytes/sizeof(Jet_bRegCorr_[0]));
        loaded_Jet_bRegCorr_ = true;
    }
    return v_Jet_bRegCorr_;
}
const vector<float> &Nano::Jet_bRegRes() {
    if (!loaded_Jet_bRegRes_) counter_uncached_Jet_bRegRes_++;
    else counter_cached_Jet_bRegRes_++;
    if (!loaded_Jet_bRegRes_) {
        if (!b_Jet_bRegRes_) throw std::runtime_error("Jet_bRegRes branch doesn't exist");
        int bytes = b_Jet_bRegRes_->GetEntry(index);
        v_Jet_bRegRes_ = vector<float>(Jet_bRegRes_,Jet_bRegRes_+bytes/sizeof(Jet_bRegRes_[0]));
        loaded_Jet_bRegRes_ = true;
    }
    return v_Jet_bRegRes_;
}
const vector<float> &Nano::Jet_btagCMVA() {
    if (!loaded_Jet_btagCMVA_) counter_uncached_Jet_btagCMVA_++;
    else counter_cached_Jet_btagCMVA_++;
    if (!loaded_Jet_btagCMVA_) {
        if (!b_Jet_btagCMVA_) throw std::runtime_error("Jet_btagCMVA branch doesn't exist");
        int bytes = b_Jet_btagCMVA_->GetEntry(index);
        v_Jet_btagCMVA_ = vector<float>(Jet_btagCMVA_,Jet_btagCMVA_+bytes/sizeof(Jet_btagCMVA_[0]));
        loaded_Jet_btagCMVA_ = true;
    }
    return v_Jet_btagCMVA_;
}
const vector<float> &Nano::Jet_btagCSVV2() {
    if (!loaded_Jet_btagCSVV2_) counter_uncached_Jet_btagCSVV2_++;
    else counter_cached_Jet_btagCSVV2_++;
    if (!loaded_Jet_btagCSVV2_) {
        if (!b_Jet_btagCSVV2_) throw std::runtime_error("Jet_btagCSVV2 branch doesn't exist");
        int bytes = b_Jet_btagCSVV2_->GetEntry(index);
        v_Jet_btagCSVV2_ = vector<float>(Jet_btagCSVV2_,Jet_btagCSVV2_+bytes/sizeof(Jet_btagCSVV2_[0]));
        loaded_Jet_btagCSVV2_ = true;
    }
    return v_Jet_btagCSVV2_;
}
const vector<float> &Nano::Jet_btagDeepB() {
    if (!loaded_Jet_btagDeepB_) counter_uncached_Jet_btagDeepB_++;
    else counter_cached_Jet_btagDeepB_++;
    if (!loaded_Jet_btagDeepB_) {
        if (!b_Jet_btagDeepB_) throw std::runtime_error("Jet_btagDeepB branch doesn't exist");
        int bytes = b_Jet_btagDeepB_->GetEntry(index);
        v_Jet_btagDeepB_ = vector<float>(Jet_btagDeepB_,Jet_btagDeepB_+bytes/sizeof(Jet_btagDeepB_[0]));
        loaded_Jet_btagDeepB_ = true;
    }
    return v_Jet_btagDeepB_;
}
const vector<float> &Nano::Jet_btagDeepC() {
    if (!loaded_Jet_btagDeepC_) counter_uncached_Jet_btagDeepC_++;
    else counter_cached_Jet_btagDeepC_++;
    if (!loaded_Jet_btagDeepC_) {
        if (!b_Jet_btagDeepC_) throw std::runtime_error("Jet_btagDeepC branch doesn't exist");
        int bytes = b_Jet_btagDeepC_->GetEntry(index);
        v_Jet_btagDeepC_ = vector<float>(Jet_btagDeepC_,Jet_btagDeepC_+bytes/sizeof(Jet_btagDeepC_[0]));
        loaded_Jet_btagDeepC_ = true;
    }
    return v_Jet_btagDeepC_;
}
const vector<float> &Nano::Jet_btagDeepCvB() {
    if (!loaded_Jet_btagDeepCvB_) counter_uncached_Jet_btagDeepCvB_++;
    else counter_cached_Jet_btagDeepCvB_++;
    if (!loaded_Jet_btagDeepCvB_) {
        if (!b_Jet_btagDeepCvB_) throw std::runtime_error("Jet_btagDeepCvB branch doesn't exist");
        int bytes = b_Jet_btagDeepCvB_->GetEntry(index);
        v_Jet_btagDeepCvB_ = vector<float>(Jet_btagDeepCvB_,Jet_btagDeepCvB_+bytes/sizeof(Jet_btagDeepCvB_[0]));
        loaded_Jet_btagDeepCvB_ = true;
    }
    return v_Jet_btagDeepCvB_;
}
const vector<float> &Nano::Jet_btagDeepCvL() {
    if (!loaded_Jet_btagDeepCvL_) counter_uncached_Jet_btagDeepCvL_++;
    else counter_cached_Jet_btagDeepCvL_++;
    if (!loaded_Jet_btagDeepCvL_) {
        if (!b_Jet_btagDeepCvL_) throw std::runtime_error("Jet_btagDeepCvL branch doesn't exist");
        int bytes = b_Jet_btagDeepCvL_->GetEntry(index);
        v_Jet_btagDeepCvL_ = vector<float>(Jet_btagDeepCvL_,Jet_btagDeepCvL_+bytes/sizeof(Jet_btagDeepCvL_[0]));
        loaded_Jet_btagDeepCvL_ = true;
    }
    return v_Jet_btagDeepCvL_;
}
const vector<float> &Nano::Jet_btagDeepFlavB() {
    if (!loaded_Jet_btagDeepFlavB_) counter_uncached_Jet_btagDeepFlavB_++;
    else counter_cached_Jet_btagDeepFlavB_++;
    if (!loaded_Jet_btagDeepFlavB_) {
        if (!b_Jet_btagDeepFlavB_) throw std::runtime_error("Jet_btagDeepFlavB branch doesn't exist");
        int bytes = b_Jet_btagDeepFlavB_->GetEntry(index);
        v_Jet_btagDeepFlavB_ = vector<float>(Jet_btagDeepFlavB_,Jet_btagDeepFlavB_+bytes/sizeof(Jet_btagDeepFlavB_[0]));
        loaded_Jet_btagDeepFlavB_ = true;
    }
    return v_Jet_btagDeepFlavB_;
}
const vector<float> &Nano::Jet_btagDeepFlavC() {
    if (!loaded_Jet_btagDeepFlavC_) counter_uncached_Jet_btagDeepFlavC_++;
    else counter_cached_Jet_btagDeepFlavC_++;
    if (!loaded_Jet_btagDeepFlavC_) {
        if (!b_Jet_btagDeepFlavC_) throw std::runtime_error("Jet_btagDeepFlavC branch doesn't exist");
        int bytes = b_Jet_btagDeepFlavC_->GetEntry(index);
        v_Jet_btagDeepFlavC_ = vector<float>(Jet_btagDeepFlavC_,Jet_btagDeepFlavC_+bytes/sizeof(Jet_btagDeepFlavC_[0]));
        loaded_Jet_btagDeepFlavC_ = true;
    }
    return v_Jet_btagDeepFlavC_;
}
const vector<float> &Nano::Jet_btagDeepFlavCvB() {
    if (!loaded_Jet_btagDeepFlavCvB_) counter_uncached_Jet_btagDeepFlavCvB_++;
    else counter_cached_Jet_btagDeepFlavCvB_++;
    if (!loaded_Jet_btagDeepFlavCvB_) {
        if (!b_Jet_btagDeepFlavCvB_) throw std::runtime_error("Jet_btagDeepFlavCvB branch doesn't exist");
        int bytes = b_Jet_btagDeepFlavCvB_->GetEntry(index);
        v_Jet_btagDeepFlavCvB_ = vector<float>(Jet_btagDeepFlavCvB_,Jet_btagDeepFlavCvB_+bytes/sizeof(Jet_btagDeepFlavCvB_[0]));
        loaded_Jet_btagDeepFlavCvB_ = true;
    }
    return v_Jet_btagDeepFlavCvB_;
}
const vector<float> &Nano::Jet_btagDeepFlavCvL() {
    if (!loaded_Jet_btagDeepFlavCvL_) counter_uncached_Jet_btagDeepFlavCvL_++;
    else counter_cached_Jet_btagDeepFlavCvL_++;
    if (!loaded_Jet_btagDeepFlavCvL_) {
        if (!b_Jet_btagDeepFlavCvL_) throw std::runtime_error("Jet_btagDeepFlavCvL branch doesn't exist");
        int bytes = b_Jet_btagDeepFlavCvL_->GetEntry(index);
        v_Jet_btagDeepFlavCvL_ = vector<float>(Jet_btagDeepFlavCvL_,Jet_btagDeepFlavCvL_+bytes/sizeof(Jet_btagDeepFlavCvL_[0]));
        loaded_Jet_btagDeepFlavCvL_ = true;
    }
    return v_Jet_btagDeepFlavCvL_;
}
const vector<float> &Nano::Jet_btagDeepFlavQG() {
    if (!loaded_Jet_btagDeepFlavQG_) counter_uncached_Jet_btagDeepFlavQG_++;
    else counter_cached_Jet_btagDeepFlavQG_++;
    if (!loaded_Jet_btagDeepFlavQG_) {
        if (!b_Jet_btagDeepFlavQG_) throw std::runtime_error("Jet_btagDeepFlavQG branch doesn't exist");
        int bytes = b_Jet_btagDeepFlavQG_->GetEntry(index);
        v_Jet_btagDeepFlavQG_ = vector<float>(Jet_btagDeepFlavQG_,Jet_btagDeepFlavQG_+bytes/sizeof(Jet_btagDeepFlavQG_[0]));
        loaded_Jet_btagDeepFlavQG_ = true;
    }
    return v_Jet_btagDeepFlavQG_;
}
const vector<float> &Nano::Jet_cRegCorr() {
    if (!loaded_Jet_cRegCorr_) counter_uncached_Jet_cRegCorr_++;
    else counter_cached_Jet_cRegCorr_++;
    if (!loaded_Jet_cRegCorr_) {
        if (!b_Jet_cRegCorr_) throw std::runtime_error("Jet_cRegCorr branch doesn't exist");
        int bytes = b_Jet_cRegCorr_->GetEntry(index);
        v_Jet_cRegCorr_ = vector<float>(Jet_cRegCorr_,Jet_cRegCorr_+bytes/sizeof(Jet_cRegCorr_[0]));
        loaded_Jet_cRegCorr_ = true;
    }
    return v_Jet_cRegCorr_;
}
const vector<float> &Nano::Jet_cRegRes() {
    if (!loaded_Jet_cRegRes_) counter_uncached_Jet_cRegRes_++;
    else counter_cached_Jet_cRegRes_++;
    if (!loaded_Jet_cRegRes_) {
        if (!b_Jet_cRegRes_) throw std::runtime_error("Jet_cRegRes branch doesn't exist");
        int bytes = b_Jet_cRegRes_->GetEntry(index);
        v_Jet_cRegRes_ = vector<float>(Jet_cRegRes_,Jet_cRegRes_+bytes/sizeof(Jet_cRegRes_[0]));
        loaded_Jet_cRegRes_ = true;
    }
    return v_Jet_cRegRes_;
}
const vector<float> &Nano::Jet_chEmEF() {
    if (!loaded_Jet_chEmEF_) counter_uncached_Jet_chEmEF_++;
    else counter_cached_Jet_chEmEF_++;
    if (!loaded_Jet_chEmEF_) {
        if (!b_Jet_chEmEF_) throw std::runtime_error("Jet_chEmEF branch doesn't exist");
        int bytes = b_Jet_chEmEF_->GetEntry(index);
        v_Jet_chEmEF_ = vector<float>(Jet_chEmEF_,Jet_chEmEF_+bytes/sizeof(Jet_chEmEF_[0]));
        loaded_Jet_chEmEF_ = true;
    }
    return v_Jet_chEmEF_;
}
const vector<float> &Nano::Jet_chFPV0EF() {
    if (!loaded_Jet_chFPV0EF_) counter_uncached_Jet_chFPV0EF_++;
    else counter_cached_Jet_chFPV0EF_++;
    if (!loaded_Jet_chFPV0EF_) {
        if (!b_Jet_chFPV0EF_) throw std::runtime_error("Jet_chFPV0EF branch doesn't exist");
        int bytes = b_Jet_chFPV0EF_->GetEntry(index);
        v_Jet_chFPV0EF_ = vector<float>(Jet_chFPV0EF_,Jet_chFPV0EF_+bytes/sizeof(Jet_chFPV0EF_[0]));
        loaded_Jet_chFPV0EF_ = true;
    }
    return v_Jet_chFPV0EF_;
}
const vector<float> &Nano::Jet_chFPV1EF() {
    if (!loaded_Jet_chFPV1EF_) counter_uncached_Jet_chFPV1EF_++;
    else counter_cached_Jet_chFPV1EF_++;
    if (!loaded_Jet_chFPV1EF_) {
        if (!b_Jet_chFPV1EF_) throw std::runtime_error("Jet_chFPV1EF branch doesn't exist");
        int bytes = b_Jet_chFPV1EF_->GetEntry(index);
        v_Jet_chFPV1EF_ = vector<float>(Jet_chFPV1EF_,Jet_chFPV1EF_+bytes/sizeof(Jet_chFPV1EF_[0]));
        loaded_Jet_chFPV1EF_ = true;
    }
    return v_Jet_chFPV1EF_;
}
const vector<float> &Nano::Jet_chFPV2EF() {
    if (!loaded_Jet_chFPV2EF_) counter_uncached_Jet_chFPV2EF_++;
    else counter_cached_Jet_chFPV2EF_++;
    if (!loaded_Jet_chFPV2EF_) {
        if (!b_Jet_chFPV2EF_) throw std::runtime_error("Jet_chFPV2EF branch doesn't exist");
        int bytes = b_Jet_chFPV2EF_->GetEntry(index);
        v_Jet_chFPV2EF_ = vector<float>(Jet_chFPV2EF_,Jet_chFPV2EF_+bytes/sizeof(Jet_chFPV2EF_[0]));
        loaded_Jet_chFPV2EF_ = true;
    }
    return v_Jet_chFPV2EF_;
}
const vector<float> &Nano::Jet_chFPV3EF() {
    if (!loaded_Jet_chFPV3EF_) counter_uncached_Jet_chFPV3EF_++;
    else counter_cached_Jet_chFPV3EF_++;
    if (!loaded_Jet_chFPV3EF_) {
        if (!b_Jet_chFPV3EF_) throw std::runtime_error("Jet_chFPV3EF branch doesn't exist");
        int bytes = b_Jet_chFPV3EF_->GetEntry(index);
        v_Jet_chFPV3EF_ = vector<float>(Jet_chFPV3EF_,Jet_chFPV3EF_+bytes/sizeof(Jet_chFPV3EF_[0]));
        loaded_Jet_chFPV3EF_ = true;
    }
    return v_Jet_chFPV3EF_;
}
const vector<float> &Nano::Jet_chHEF() {
    if (!loaded_Jet_chHEF_) counter_uncached_Jet_chHEF_++;
    else counter_cached_Jet_chHEF_++;
    if (!loaded_Jet_chHEF_) {
        if (!b_Jet_chHEF_) throw std::runtime_error("Jet_chHEF branch doesn't exist");
        int bytes = b_Jet_chHEF_->GetEntry(index);
        v_Jet_chHEF_ = vector<float>(Jet_chHEF_,Jet_chHEF_+bytes/sizeof(Jet_chHEF_[0]));
        loaded_Jet_chHEF_ = true;
    }
    return v_Jet_chHEF_;
}
const vector<UChar_t> &Nano::Jet_cleanmask() {
    if (!loaded_Jet_cleanmask_) counter_uncached_Jet_cleanmask_++;
    else counter_cached_Jet_cleanmask_++;
    if (!loaded_Jet_cleanmask_) {
        if (!b_Jet_cleanmask_) throw std::runtime_error("Jet_cleanmask branch doesn't exist");
        int bytes = b_Jet_cleanmask_->GetEntry(index);
        v_Jet_cleanmask_ = vector<UChar_t>(Jet_cleanmask_,Jet_cleanmask_+bytes/sizeof(Jet_cleanmask_[0]));
        loaded_Jet_cleanmask_ = true;
    }
    return v_Jet_cleanmask_;
}
const vector<float> &Nano::Jet_corr_JEC() {
    if (!loaded_Jet_corr_JEC_) counter_uncached_Jet_corr_JEC_++;
    else counter_cached_Jet_corr_JEC_++;
    if (!loaded_Jet_corr_JEC_) {
        if (!b_Jet_corr_JEC_) throw std::runtime_error("Jet_corr_JEC branch doesn't exist");
        int bytes = b_Jet_corr_JEC_->GetEntry(index);
        v_Jet_corr_JEC_ = vector<float>(Jet_corr_JEC_,Jet_corr_JEC_+bytes/sizeof(Jet_corr_JEC_[0]));
        loaded_Jet_corr_JEC_ = true;
    }
    return v_Jet_corr_JEC_;
}
const vector<float> &Nano::Jet_corr_JER() {
    if (!loaded_Jet_corr_JER_) counter_uncached_Jet_corr_JER_++;
    else counter_cached_Jet_corr_JER_++;
    if (!loaded_Jet_corr_JER_) {
        if (!b_Jet_corr_JER_) throw std::runtime_error("Jet_corr_JER branch doesn't exist");
        int bytes = b_Jet_corr_JER_->GetEntry(index);
        v_Jet_corr_JER_ = vector<float>(Jet_corr_JER_,Jet_corr_JER_+bytes/sizeof(Jet_corr_JER_[0]));
        loaded_Jet_corr_JER_ = true;
    }
    return v_Jet_corr_JER_;
}
const vector<int> &Nano::Jet_electronIdx1() {
    if (!loaded_Jet_electronIdx1_) counter_uncached_Jet_electronIdx1_++;
    else counter_cached_Jet_electronIdx1_++;
    if (!loaded_Jet_electronIdx1_) {
        if (!b_Jet_electronIdx1_) throw std::runtime_error("Jet_electronIdx1 branch doesn't exist");
        int bytes = b_Jet_electronIdx1_->GetEntry(index);
        v_Jet_electronIdx1_ = vector<int>(Jet_electronIdx1_,Jet_electronIdx1_+bytes/sizeof(Jet_electronIdx1_[0]));
        loaded_Jet_electronIdx1_ = true;
    }
    return v_Jet_electronIdx1_;
}
const vector<int> &Nano::Jet_electronIdx2() {
    if (!loaded_Jet_electronIdx2_) counter_uncached_Jet_electronIdx2_++;
    else counter_cached_Jet_electronIdx2_++;
    if (!loaded_Jet_electronIdx2_) {
        if (!b_Jet_electronIdx2_) throw std::runtime_error("Jet_electronIdx2 branch doesn't exist");
        int bytes = b_Jet_electronIdx2_->GetEntry(index);
        v_Jet_electronIdx2_ = vector<int>(Jet_electronIdx2_,Jet_electronIdx2_+bytes/sizeof(Jet_electronIdx2_[0]));
        loaded_Jet_electronIdx2_ = true;
    }
    return v_Jet_electronIdx2_;
}
const vector<float> &Nano::Jet_eta() {
    if (!loaded_Jet_eta_) counter_uncached_Jet_eta_++;
    else counter_cached_Jet_eta_++;
    if (!loaded_Jet_eta_) {
        if (!b_Jet_eta_) throw std::runtime_error("Jet_eta branch doesn't exist");
        int bytes = b_Jet_eta_->GetEntry(index);
        v_Jet_eta_ = vector<float>(Jet_eta_,Jet_eta_+bytes/sizeof(Jet_eta_[0]));
        loaded_Jet_eta_ = true;
    }
    return v_Jet_eta_;
}
const vector<int> &Nano::Jet_genJetIdx() {
    if (!loaded_Jet_genJetIdx_) counter_uncached_Jet_genJetIdx_++;
    else counter_cached_Jet_genJetIdx_++;
    if (!loaded_Jet_genJetIdx_) {
        if (!b_Jet_genJetIdx_) throw std::runtime_error("Jet_genJetIdx branch doesn't exist");
        int bytes = b_Jet_genJetIdx_->GetEntry(index);
        v_Jet_genJetIdx_ = vector<int>(Jet_genJetIdx_,Jet_genJetIdx_+bytes/sizeof(Jet_genJetIdx_[0]));
        loaded_Jet_genJetIdx_ = true;
    }
    return v_Jet_genJetIdx_;
}
const vector<int> &Nano::Jet_hadronFlavour() {
    if (!loaded_Jet_hadronFlavour_) counter_uncached_Jet_hadronFlavour_++;
    else counter_cached_Jet_hadronFlavour_++;
    if (!loaded_Jet_hadronFlavour_) {
        if (!b_Jet_hadronFlavour_) throw std::runtime_error("Jet_hadronFlavour branch doesn't exist");
        int bytes = b_Jet_hadronFlavour_->GetEntry(index);
        v_Jet_hadronFlavour_ = vector<int>(Jet_hadronFlavour_,Jet_hadronFlavour_+bytes/sizeof(Jet_hadronFlavour_[0]));
        loaded_Jet_hadronFlavour_ = true;
    }
    return v_Jet_hadronFlavour_;
}
const vector<int> &Nano::Jet_hfadjacentEtaStripsSize() {
    if (!loaded_Jet_hfadjacentEtaStripsSize_) counter_uncached_Jet_hfadjacentEtaStripsSize_++;
    else counter_cached_Jet_hfadjacentEtaStripsSize_++;
    if (!loaded_Jet_hfadjacentEtaStripsSize_) {
        if (!b_Jet_hfadjacentEtaStripsSize_) throw std::runtime_error("Jet_hfadjacentEtaStripsSize branch doesn't exist");
        int bytes = b_Jet_hfadjacentEtaStripsSize_->GetEntry(index);
        v_Jet_hfadjacentEtaStripsSize_ = vector<int>(Jet_hfadjacentEtaStripsSize_,Jet_hfadjacentEtaStripsSize_+bytes/sizeof(Jet_hfadjacentEtaStripsSize_[0]));
        loaded_Jet_hfadjacentEtaStripsSize_ = true;
    }
    return v_Jet_hfadjacentEtaStripsSize_;
}
const vector<int> &Nano::Jet_hfcentralEtaStripSize() {
    if (!loaded_Jet_hfcentralEtaStripSize_) counter_uncached_Jet_hfcentralEtaStripSize_++;
    else counter_cached_Jet_hfcentralEtaStripSize_++;
    if (!loaded_Jet_hfcentralEtaStripSize_) {
        if (!b_Jet_hfcentralEtaStripSize_) throw std::runtime_error("Jet_hfcentralEtaStripSize branch doesn't exist");
        int bytes = b_Jet_hfcentralEtaStripSize_->GetEntry(index);
        v_Jet_hfcentralEtaStripSize_ = vector<int>(Jet_hfcentralEtaStripSize_,Jet_hfcentralEtaStripSize_+bytes/sizeof(Jet_hfcentralEtaStripSize_[0]));
        loaded_Jet_hfcentralEtaStripSize_ = true;
    }
    return v_Jet_hfcentralEtaStripSize_;
}
const vector<float> &Nano::Jet_hfsigmaEtaEta() {
    if (!loaded_Jet_hfsigmaEtaEta_) counter_uncached_Jet_hfsigmaEtaEta_++;
    else counter_cached_Jet_hfsigmaEtaEta_++;
    if (!loaded_Jet_hfsigmaEtaEta_) {
        if (!b_Jet_hfsigmaEtaEta_) throw std::runtime_error("Jet_hfsigmaEtaEta branch doesn't exist");
        int bytes = b_Jet_hfsigmaEtaEta_->GetEntry(index);
        v_Jet_hfsigmaEtaEta_ = vector<float>(Jet_hfsigmaEtaEta_,Jet_hfsigmaEtaEta_+bytes/sizeof(Jet_hfsigmaEtaEta_[0]));
        loaded_Jet_hfsigmaEtaEta_ = true;
    }
    return v_Jet_hfsigmaEtaEta_;
}
const vector<float> &Nano::Jet_hfsigmaPhiPhi() {
    if (!loaded_Jet_hfsigmaPhiPhi_) counter_uncached_Jet_hfsigmaPhiPhi_++;
    else counter_cached_Jet_hfsigmaPhiPhi_++;
    if (!loaded_Jet_hfsigmaPhiPhi_) {
        if (!b_Jet_hfsigmaPhiPhi_) throw std::runtime_error("Jet_hfsigmaPhiPhi branch doesn't exist");
        int bytes = b_Jet_hfsigmaPhiPhi_->GetEntry(index);
        v_Jet_hfsigmaPhiPhi_ = vector<float>(Jet_hfsigmaPhiPhi_,Jet_hfsigmaPhiPhi_+bytes/sizeof(Jet_hfsigmaPhiPhi_[0]));
        loaded_Jet_hfsigmaPhiPhi_ = true;
    }
    return v_Jet_hfsigmaPhiPhi_;
}
const vector<int> &Nano::Jet_jetId() {
    if (!loaded_Jet_jetId_) counter_uncached_Jet_jetId_++;
    else counter_cached_Jet_jetId_++;
    if (!loaded_Jet_jetId_) {
        if (!b_Jet_jetId_) throw std::runtime_error("Jet_jetId branch doesn't exist");
        int bytes = b_Jet_jetId_->GetEntry(index);
        v_Jet_jetId_ = vector<int>(Jet_jetId_,Jet_jetId_+bytes/sizeof(Jet_jetId_[0]));
        loaded_Jet_jetId_ = true;
    }
    return v_Jet_jetId_;
}
const vector<float> &Nano::Jet_mass() {
    if (!loaded_Jet_mass_) counter_uncached_Jet_mass_++;
    else counter_cached_Jet_mass_++;
    if (!loaded_Jet_mass_) {
        if (!b_Jet_mass_) throw std::runtime_error("Jet_mass branch doesn't exist");
        int bytes = b_Jet_mass_->GetEntry(index);
        v_Jet_mass_ = vector<float>(Jet_mass_,Jet_mass_+bytes/sizeof(Jet_mass_[0]));
        loaded_Jet_mass_ = true;
    }
    return v_Jet_mass_;
}
const vector<float> &Nano::Jet_mass_jerDown() {
    if (!loaded_Jet_mass_jerDown_) counter_uncached_Jet_mass_jerDown_++;
    else counter_cached_Jet_mass_jerDown_++;
    if (!loaded_Jet_mass_jerDown_) {
        if (!b_Jet_mass_jerDown_) throw std::runtime_error("Jet_mass_jerDown branch doesn't exist");
        int bytes = b_Jet_mass_jerDown_->GetEntry(index);
        v_Jet_mass_jerDown_ = vector<float>(Jet_mass_jerDown_,Jet_mass_jerDown_+bytes/sizeof(Jet_mass_jerDown_[0]));
        loaded_Jet_mass_jerDown_ = true;
    }
    return v_Jet_mass_jerDown_;
}
const vector<float> &Nano::Jet_mass_jerUp() {
    if (!loaded_Jet_mass_jerUp_) counter_uncached_Jet_mass_jerUp_++;
    else counter_cached_Jet_mass_jerUp_++;
    if (!loaded_Jet_mass_jerUp_) {
        if (!b_Jet_mass_jerUp_) throw std::runtime_error("Jet_mass_jerUp branch doesn't exist");
        int bytes = b_Jet_mass_jerUp_->GetEntry(index);
        v_Jet_mass_jerUp_ = vector<float>(Jet_mass_jerUp_,Jet_mass_jerUp_+bytes/sizeof(Jet_mass_jerUp_[0]));
        loaded_Jet_mass_jerUp_ = true;
    }
    return v_Jet_mass_jerUp_;
}
const vector<float> &Nano::Jet_mass_jesHEMIssueDown() {
    if (!loaded_Jet_mass_jesHEMIssueDown_) counter_uncached_Jet_mass_jesHEMIssueDown_++;
    else counter_cached_Jet_mass_jesHEMIssueDown_++;
    if (!loaded_Jet_mass_jesHEMIssueDown_) {
        if (!b_Jet_mass_jesHEMIssueDown_) throw std::runtime_error("Jet_mass_jesHEMIssueDown branch doesn't exist");
        int bytes = b_Jet_mass_jesHEMIssueDown_->GetEntry(index);
        v_Jet_mass_jesHEMIssueDown_ = vector<float>(Jet_mass_jesHEMIssueDown_,Jet_mass_jesHEMIssueDown_+bytes/sizeof(Jet_mass_jesHEMIssueDown_[0]));
        loaded_Jet_mass_jesHEMIssueDown_ = true;
    }
    return v_Jet_mass_jesHEMIssueDown_;
}
const vector<float> &Nano::Jet_mass_jesHEMIssueUp() {
    if (!loaded_Jet_mass_jesHEMIssueUp_) counter_uncached_Jet_mass_jesHEMIssueUp_++;
    else counter_cached_Jet_mass_jesHEMIssueUp_++;
    if (!loaded_Jet_mass_jesHEMIssueUp_) {
        if (!b_Jet_mass_jesHEMIssueUp_) throw std::runtime_error("Jet_mass_jesHEMIssueUp branch doesn't exist");
        int bytes = b_Jet_mass_jesHEMIssueUp_->GetEntry(index);
        v_Jet_mass_jesHEMIssueUp_ = vector<float>(Jet_mass_jesHEMIssueUp_,Jet_mass_jesHEMIssueUp_+bytes/sizeof(Jet_mass_jesHEMIssueUp_[0]));
        loaded_Jet_mass_jesHEMIssueUp_ = true;
    }
    return v_Jet_mass_jesHEMIssueUp_;
}
const vector<float> &Nano::Jet_mass_jesTotalDown() {
    if (!loaded_Jet_mass_jesTotalDown_) counter_uncached_Jet_mass_jesTotalDown_++;
    else counter_cached_Jet_mass_jesTotalDown_++;
    if (!loaded_Jet_mass_jesTotalDown_) {
        if (!b_Jet_mass_jesTotalDown_) throw std::runtime_error("Jet_mass_jesTotalDown branch doesn't exist");
        int bytes = b_Jet_mass_jesTotalDown_->GetEntry(index);
        v_Jet_mass_jesTotalDown_ = vector<float>(Jet_mass_jesTotalDown_,Jet_mass_jesTotalDown_+bytes/sizeof(Jet_mass_jesTotalDown_[0]));
        loaded_Jet_mass_jesTotalDown_ = true;
    }
    return v_Jet_mass_jesTotalDown_;
}
const vector<float> &Nano::Jet_mass_jesTotalUp() {
    if (!loaded_Jet_mass_jesTotalUp_) counter_uncached_Jet_mass_jesTotalUp_++;
    else counter_cached_Jet_mass_jesTotalUp_++;
    if (!loaded_Jet_mass_jesTotalUp_) {
        if (!b_Jet_mass_jesTotalUp_) throw std::runtime_error("Jet_mass_jesTotalUp branch doesn't exist");
        int bytes = b_Jet_mass_jesTotalUp_->GetEntry(index);
        v_Jet_mass_jesTotalUp_ = vector<float>(Jet_mass_jesTotalUp_,Jet_mass_jesTotalUp_+bytes/sizeof(Jet_mass_jesTotalUp_[0]));
        loaded_Jet_mass_jesTotalUp_ = true;
    }
    return v_Jet_mass_jesTotalUp_;
}
const vector<float> &Nano::Jet_mass_nom() {
    if (!loaded_Jet_mass_nom_) counter_uncached_Jet_mass_nom_++;
    else counter_cached_Jet_mass_nom_++;
    if (!loaded_Jet_mass_nom_) {
        if (!b_Jet_mass_nom_) throw std::runtime_error("Jet_mass_nom branch doesn't exist");
        int bytes = b_Jet_mass_nom_->GetEntry(index);
        v_Jet_mass_nom_ = vector<float>(Jet_mass_nom_,Jet_mass_nom_+bytes/sizeof(Jet_mass_nom_[0]));
        loaded_Jet_mass_nom_ = true;
    }
    return v_Jet_mass_nom_;
}
const vector<float> &Nano::Jet_mass_raw() {
    if (!loaded_Jet_mass_raw_) counter_uncached_Jet_mass_raw_++;
    else counter_cached_Jet_mass_raw_++;
    if (!loaded_Jet_mass_raw_) {
        if (!b_Jet_mass_raw_) throw std::runtime_error("Jet_mass_raw branch doesn't exist");
        int bytes = b_Jet_mass_raw_->GetEntry(index);
        v_Jet_mass_raw_ = vector<float>(Jet_mass_raw_,Jet_mass_raw_+bytes/sizeof(Jet_mass_raw_[0]));
        loaded_Jet_mass_raw_ = true;
    }
    return v_Jet_mass_raw_;
}
const vector<float> &Nano::Jet_muEF() {
    if (!loaded_Jet_muEF_) counter_uncached_Jet_muEF_++;
    else counter_cached_Jet_muEF_++;
    if (!loaded_Jet_muEF_) {
        if (!b_Jet_muEF_) throw std::runtime_error("Jet_muEF branch doesn't exist");
        int bytes = b_Jet_muEF_->GetEntry(index);
        v_Jet_muEF_ = vector<float>(Jet_muEF_,Jet_muEF_+bytes/sizeof(Jet_muEF_[0]));
        loaded_Jet_muEF_ = true;
    }
    return v_Jet_muEF_;
}
const vector<int> &Nano::Jet_muonIdx1() {
    if (!loaded_Jet_muonIdx1_) counter_uncached_Jet_muonIdx1_++;
    else counter_cached_Jet_muonIdx1_++;
    if (!loaded_Jet_muonIdx1_) {
        if (!b_Jet_muonIdx1_) throw std::runtime_error("Jet_muonIdx1 branch doesn't exist");
        int bytes = b_Jet_muonIdx1_->GetEntry(index);
        v_Jet_muonIdx1_ = vector<int>(Jet_muonIdx1_,Jet_muonIdx1_+bytes/sizeof(Jet_muonIdx1_[0]));
        loaded_Jet_muonIdx1_ = true;
    }
    return v_Jet_muonIdx1_;
}
const vector<int> &Nano::Jet_muonIdx2() {
    if (!loaded_Jet_muonIdx2_) counter_uncached_Jet_muonIdx2_++;
    else counter_cached_Jet_muonIdx2_++;
    if (!loaded_Jet_muonIdx2_) {
        if (!b_Jet_muonIdx2_) throw std::runtime_error("Jet_muonIdx2 branch doesn't exist");
        int bytes = b_Jet_muonIdx2_->GetEntry(index);
        v_Jet_muonIdx2_ = vector<int>(Jet_muonIdx2_,Jet_muonIdx2_+bytes/sizeof(Jet_muonIdx2_[0]));
        loaded_Jet_muonIdx2_ = true;
    }
    return v_Jet_muonIdx2_;
}
const vector<float> &Nano::Jet_muonSubtrFactor() {
    if (!loaded_Jet_muonSubtrFactor_) counter_uncached_Jet_muonSubtrFactor_++;
    else counter_cached_Jet_muonSubtrFactor_++;
    if (!loaded_Jet_muonSubtrFactor_) {
        if (!b_Jet_muonSubtrFactor_) throw std::runtime_error("Jet_muonSubtrFactor branch doesn't exist");
        int bytes = b_Jet_muonSubtrFactor_->GetEntry(index);
        v_Jet_muonSubtrFactor_ = vector<float>(Jet_muonSubtrFactor_,Jet_muonSubtrFactor_+bytes/sizeof(Jet_muonSubtrFactor_[0]));
        loaded_Jet_muonSubtrFactor_ = true;
    }
    return v_Jet_muonSubtrFactor_;
}
const vector<UChar_t> &Nano::Jet_nConstituents() {
    if (!loaded_Jet_nConstituents_) counter_uncached_Jet_nConstituents_++;
    else counter_cached_Jet_nConstituents_++;
    if (!loaded_Jet_nConstituents_) {
        if (!b_Jet_nConstituents_) throw std::runtime_error("Jet_nConstituents branch doesn't exist");
        int bytes = b_Jet_nConstituents_->GetEntry(index);
        v_Jet_nConstituents_ = vector<UChar_t>(Jet_nConstituents_,Jet_nConstituents_+bytes/sizeof(Jet_nConstituents_[0]));
        loaded_Jet_nConstituents_ = true;
    }
    return v_Jet_nConstituents_;
}
const vector<int> &Nano::Jet_nElectrons() {
    if (!loaded_Jet_nElectrons_) counter_uncached_Jet_nElectrons_++;
    else counter_cached_Jet_nElectrons_++;
    if (!loaded_Jet_nElectrons_) {
        if (!b_Jet_nElectrons_) throw std::runtime_error("Jet_nElectrons branch doesn't exist");
        int bytes = b_Jet_nElectrons_->GetEntry(index);
        v_Jet_nElectrons_ = vector<int>(Jet_nElectrons_,Jet_nElectrons_+bytes/sizeof(Jet_nElectrons_[0]));
        loaded_Jet_nElectrons_ = true;
    }
    return v_Jet_nElectrons_;
}
const vector<int> &Nano::Jet_nMuons() {
    if (!loaded_Jet_nMuons_) counter_uncached_Jet_nMuons_++;
    else counter_cached_Jet_nMuons_++;
    if (!loaded_Jet_nMuons_) {
        if (!b_Jet_nMuons_) throw std::runtime_error("Jet_nMuons branch doesn't exist");
        int bytes = b_Jet_nMuons_->GetEntry(index);
        v_Jet_nMuons_ = vector<int>(Jet_nMuons_,Jet_nMuons_+bytes/sizeof(Jet_nMuons_[0]));
        loaded_Jet_nMuons_ = true;
    }
    return v_Jet_nMuons_;
}
const vector<int> &Nano::Jet_nSVs() {
    if (!loaded_Jet_nSVs_) counter_uncached_Jet_nSVs_++;
    else counter_cached_Jet_nSVs_++;
    if (!loaded_Jet_nSVs_) {
        if (!b_Jet_nSVs_) throw std::runtime_error("Jet_nSVs branch doesn't exist");
        int bytes = b_Jet_nSVs_->GetEntry(index);
        v_Jet_nSVs_ = vector<int>(Jet_nSVs_,Jet_nSVs_+bytes/sizeof(Jet_nSVs_[0]));
        loaded_Jet_nSVs_ = true;
    }
    return v_Jet_nSVs_;
}
const vector<float> &Nano::Jet_neEmEF() {
    if (!loaded_Jet_neEmEF_) counter_uncached_Jet_neEmEF_++;
    else counter_cached_Jet_neEmEF_++;
    if (!loaded_Jet_neEmEF_) {
        if (!b_Jet_neEmEF_) throw std::runtime_error("Jet_neEmEF branch doesn't exist");
        int bytes = b_Jet_neEmEF_->GetEntry(index);
        v_Jet_neEmEF_ = vector<float>(Jet_neEmEF_,Jet_neEmEF_+bytes/sizeof(Jet_neEmEF_[0]));
        loaded_Jet_neEmEF_ = true;
    }
    return v_Jet_neEmEF_;
}
const vector<float> &Nano::Jet_neHEF() {
    if (!loaded_Jet_neHEF_) counter_uncached_Jet_neHEF_++;
    else counter_cached_Jet_neHEF_++;
    if (!loaded_Jet_neHEF_) {
        if (!b_Jet_neHEF_) throw std::runtime_error("Jet_neHEF branch doesn't exist");
        int bytes = b_Jet_neHEF_->GetEntry(index);
        v_Jet_neHEF_ = vector<float>(Jet_neHEF_,Jet_neHEF_+bytes/sizeof(Jet_neHEF_[0]));
        loaded_Jet_neHEF_ = true;
    }
    return v_Jet_neHEF_;
}
const vector<LorentzVector> &Nano::Jet_p4() {
    if (!loaded_Jet_p4_) counter_uncached_Jet_p4_++;
    else counter_cached_Jet_p4_++;
    if (!loaded_Jet_p4_) {
        v_Jet_p4_.clear();
        vector<float> pts = Nano::Jet_pt();
        vector<float> etas = Nano::Jet_eta();
        vector<float> phis = Nano::Jet_phi();
        vector<float> masses = Nano::Jet_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_Jet_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_Jet_p4_ = true;
    }
    return v_Jet_p4_;
}
const vector<int> &Nano::Jet_partonFlavour() {
    if (!loaded_Jet_partonFlavour_) counter_uncached_Jet_partonFlavour_++;
    else counter_cached_Jet_partonFlavour_++;
    if (!loaded_Jet_partonFlavour_) {
        if (!b_Jet_partonFlavour_) throw std::runtime_error("Jet_partonFlavour branch doesn't exist");
        int bytes = b_Jet_partonFlavour_->GetEntry(index);
        v_Jet_partonFlavour_ = vector<int>(Jet_partonFlavour_,Jet_partonFlavour_+bytes/sizeof(Jet_partonFlavour_[0]));
        loaded_Jet_partonFlavour_ = true;
    }
    return v_Jet_partonFlavour_;
}
const vector<float> &Nano::Jet_phi() {
    if (!loaded_Jet_phi_) counter_uncached_Jet_phi_++;
    else counter_cached_Jet_phi_++;
    if (!loaded_Jet_phi_) {
        if (!b_Jet_phi_) throw std::runtime_error("Jet_phi branch doesn't exist");
        int bytes = b_Jet_phi_->GetEntry(index);
        v_Jet_phi_ = vector<float>(Jet_phi_,Jet_phi_+bytes/sizeof(Jet_phi_[0]));
        loaded_Jet_phi_ = true;
    }
    return v_Jet_phi_;
}
const vector<float> &Nano::Jet_pt() {
    if (!loaded_Jet_pt_) counter_uncached_Jet_pt_++;
    else counter_cached_Jet_pt_++;
    if (!loaded_Jet_pt_) {
        if (!b_Jet_pt_) throw std::runtime_error("Jet_pt branch doesn't exist");
        int bytes = b_Jet_pt_->GetEntry(index);
        v_Jet_pt_ = vector<float>(Jet_pt_,Jet_pt_+bytes/sizeof(Jet_pt_[0]));
        loaded_Jet_pt_ = true;
    }
    return v_Jet_pt_;
}
const vector<float> &Nano::Jet_pt_jerDown() {
    if (!loaded_Jet_pt_jerDown_) counter_uncached_Jet_pt_jerDown_++;
    else counter_cached_Jet_pt_jerDown_++;
    if (!loaded_Jet_pt_jerDown_) {
        if (!b_Jet_pt_jerDown_) throw std::runtime_error("Jet_pt_jerDown branch doesn't exist");
        int bytes = b_Jet_pt_jerDown_->GetEntry(index);
        v_Jet_pt_jerDown_ = vector<float>(Jet_pt_jerDown_,Jet_pt_jerDown_+bytes/sizeof(Jet_pt_jerDown_[0]));
        loaded_Jet_pt_jerDown_ = true;
    }
    return v_Jet_pt_jerDown_;
}
const vector<float> &Nano::Jet_pt_jerUp() {
    if (!loaded_Jet_pt_jerUp_) counter_uncached_Jet_pt_jerUp_++;
    else counter_cached_Jet_pt_jerUp_++;
    if (!loaded_Jet_pt_jerUp_) {
        if (!b_Jet_pt_jerUp_) throw std::runtime_error("Jet_pt_jerUp branch doesn't exist");
        int bytes = b_Jet_pt_jerUp_->GetEntry(index);
        v_Jet_pt_jerUp_ = vector<float>(Jet_pt_jerUp_,Jet_pt_jerUp_+bytes/sizeof(Jet_pt_jerUp_[0]));
        loaded_Jet_pt_jerUp_ = true;
    }
    return v_Jet_pt_jerUp_;
}
const vector<float> &Nano::Jet_pt_jesHEMIssueDown() {
    if (!loaded_Jet_pt_jesHEMIssueDown_) counter_uncached_Jet_pt_jesHEMIssueDown_++;
    else counter_cached_Jet_pt_jesHEMIssueDown_++;
    if (!loaded_Jet_pt_jesHEMIssueDown_) {
        if (!b_Jet_pt_jesHEMIssueDown_) throw std::runtime_error("Jet_pt_jesHEMIssueDown branch doesn't exist");
        int bytes = b_Jet_pt_jesHEMIssueDown_->GetEntry(index);
        v_Jet_pt_jesHEMIssueDown_ = vector<float>(Jet_pt_jesHEMIssueDown_,Jet_pt_jesHEMIssueDown_+bytes/sizeof(Jet_pt_jesHEMIssueDown_[0]));
        loaded_Jet_pt_jesHEMIssueDown_ = true;
    }
    return v_Jet_pt_jesHEMIssueDown_;
}
const vector<float> &Nano::Jet_pt_jesHEMIssueUp() {
    if (!loaded_Jet_pt_jesHEMIssueUp_) counter_uncached_Jet_pt_jesHEMIssueUp_++;
    else counter_cached_Jet_pt_jesHEMIssueUp_++;
    if (!loaded_Jet_pt_jesHEMIssueUp_) {
        if (!b_Jet_pt_jesHEMIssueUp_) throw std::runtime_error("Jet_pt_jesHEMIssueUp branch doesn't exist");
        int bytes = b_Jet_pt_jesHEMIssueUp_->GetEntry(index);
        v_Jet_pt_jesHEMIssueUp_ = vector<float>(Jet_pt_jesHEMIssueUp_,Jet_pt_jesHEMIssueUp_+bytes/sizeof(Jet_pt_jesHEMIssueUp_[0]));
        loaded_Jet_pt_jesHEMIssueUp_ = true;
    }
    return v_Jet_pt_jesHEMIssueUp_;
}
const vector<float> &Nano::Jet_pt_jesTotalDown() {
    if (!loaded_Jet_pt_jesTotalDown_) counter_uncached_Jet_pt_jesTotalDown_++;
    else counter_cached_Jet_pt_jesTotalDown_++;
    if (!loaded_Jet_pt_jesTotalDown_) {
        if (!b_Jet_pt_jesTotalDown_) throw std::runtime_error("Jet_pt_jesTotalDown branch doesn't exist");
        int bytes = b_Jet_pt_jesTotalDown_->GetEntry(index);
        v_Jet_pt_jesTotalDown_ = vector<float>(Jet_pt_jesTotalDown_,Jet_pt_jesTotalDown_+bytes/sizeof(Jet_pt_jesTotalDown_[0]));
        loaded_Jet_pt_jesTotalDown_ = true;
    }
    return v_Jet_pt_jesTotalDown_;
}
const vector<float> &Nano::Jet_pt_jesTotalUp() {
    if (!loaded_Jet_pt_jesTotalUp_) counter_uncached_Jet_pt_jesTotalUp_++;
    else counter_cached_Jet_pt_jesTotalUp_++;
    if (!loaded_Jet_pt_jesTotalUp_) {
        if (!b_Jet_pt_jesTotalUp_) throw std::runtime_error("Jet_pt_jesTotalUp branch doesn't exist");
        int bytes = b_Jet_pt_jesTotalUp_->GetEntry(index);
        v_Jet_pt_jesTotalUp_ = vector<float>(Jet_pt_jesTotalUp_,Jet_pt_jesTotalUp_+bytes/sizeof(Jet_pt_jesTotalUp_[0]));
        loaded_Jet_pt_jesTotalUp_ = true;
    }
    return v_Jet_pt_jesTotalUp_;
}
const vector<float> &Nano::Jet_pt_nom() {
    if (!loaded_Jet_pt_nom_) counter_uncached_Jet_pt_nom_++;
    else counter_cached_Jet_pt_nom_++;
    if (!loaded_Jet_pt_nom_) {
        if (!b_Jet_pt_nom_) throw std::runtime_error("Jet_pt_nom branch doesn't exist");
        int bytes = b_Jet_pt_nom_->GetEntry(index);
        v_Jet_pt_nom_ = vector<float>(Jet_pt_nom_,Jet_pt_nom_+bytes/sizeof(Jet_pt_nom_[0]));
        loaded_Jet_pt_nom_ = true;
    }
    return v_Jet_pt_nom_;
}
const vector<float> &Nano::Jet_pt_raw() {
    if (!loaded_Jet_pt_raw_) counter_uncached_Jet_pt_raw_++;
    else counter_cached_Jet_pt_raw_++;
    if (!loaded_Jet_pt_raw_) {
        if (!b_Jet_pt_raw_) throw std::runtime_error("Jet_pt_raw branch doesn't exist");
        int bytes = b_Jet_pt_raw_->GetEntry(index);
        v_Jet_pt_raw_ = vector<float>(Jet_pt_raw_,Jet_pt_raw_+bytes/sizeof(Jet_pt_raw_[0]));
        loaded_Jet_pt_raw_ = true;
    }
    return v_Jet_pt_raw_;
}
const vector<int> &Nano::Jet_puId() {
    if (!loaded_Jet_puId_) counter_uncached_Jet_puId_++;
    else counter_cached_Jet_puId_++;
    if (!loaded_Jet_puId_) {
        if (!b_Jet_puId_) throw std::runtime_error("Jet_puId branch doesn't exist");
        int bytes = b_Jet_puId_->GetEntry(index);
        v_Jet_puId_ = vector<int>(Jet_puId_,Jet_puId_+bytes/sizeof(Jet_puId_[0]));
        loaded_Jet_puId_ = true;
    }
    return v_Jet_puId_;
}
const vector<float> &Nano::Jet_puIdDisc() {
    if (!loaded_Jet_puIdDisc_) counter_uncached_Jet_puIdDisc_++;
    else counter_cached_Jet_puIdDisc_++;
    if (!loaded_Jet_puIdDisc_) {
        if (!b_Jet_puIdDisc_) throw std::runtime_error("Jet_puIdDisc branch doesn't exist");
        int bytes = b_Jet_puIdDisc_->GetEntry(index);
        v_Jet_puIdDisc_ = vector<float>(Jet_puIdDisc_,Jet_puIdDisc_+bytes/sizeof(Jet_puIdDisc_[0]));
        loaded_Jet_puIdDisc_ = true;
    }
    return v_Jet_puIdDisc_;
}
const vector<float> &Nano::Jet_qgl() {
    if (!loaded_Jet_qgl_) counter_uncached_Jet_qgl_++;
    else counter_cached_Jet_qgl_++;
    if (!loaded_Jet_qgl_) {
        if (!b_Jet_qgl_) throw std::runtime_error("Jet_qgl branch doesn't exist");
        int bytes = b_Jet_qgl_->GetEntry(index);
        v_Jet_qgl_ = vector<float>(Jet_qgl_,Jet_qgl_+bytes/sizeof(Jet_qgl_[0]));
        loaded_Jet_qgl_ = true;
    }
    return v_Jet_qgl_;
}
const vector<float> &Nano::Jet_rawFactor() {
    if (!loaded_Jet_rawFactor_) counter_uncached_Jet_rawFactor_++;
    else counter_cached_Jet_rawFactor_++;
    if (!loaded_Jet_rawFactor_) {
        if (!b_Jet_rawFactor_) throw std::runtime_error("Jet_rawFactor branch doesn't exist");
        int bytes = b_Jet_rawFactor_->GetEntry(index);
        v_Jet_rawFactor_ = vector<float>(Jet_rawFactor_,Jet_rawFactor_+bytes/sizeof(Jet_rawFactor_[0]));
        loaded_Jet_rawFactor_ = true;
    }
    return v_Jet_rawFactor_;
}
const vector<int> &Nano::Jet_svIdx1() {
    if (!loaded_Jet_svIdx1_) counter_uncached_Jet_svIdx1_++;
    else counter_cached_Jet_svIdx1_++;
    if (!loaded_Jet_svIdx1_) {
        if (!b_Jet_svIdx1_) throw std::runtime_error("Jet_svIdx1 branch doesn't exist");
        int bytes = b_Jet_svIdx1_->GetEntry(index);
        v_Jet_svIdx1_ = vector<int>(Jet_svIdx1_,Jet_svIdx1_+bytes/sizeof(Jet_svIdx1_[0]));
        loaded_Jet_svIdx1_ = true;
    }
    return v_Jet_svIdx1_;
}
const vector<int> &Nano::Jet_svIdx2() {
    if (!loaded_Jet_svIdx2_) counter_uncached_Jet_svIdx2_++;
    else counter_cached_Jet_svIdx2_++;
    if (!loaded_Jet_svIdx2_) {
        if (!b_Jet_svIdx2_) throw std::runtime_error("Jet_svIdx2 branch doesn't exist");
        int bytes = b_Jet_svIdx2_->GetEntry(index);
        v_Jet_svIdx2_ = vector<int>(Jet_svIdx2_,Jet_svIdx2_+bytes/sizeof(Jet_svIdx2_[0]));
        loaded_Jet_svIdx2_ = true;
    }
    return v_Jet_svIdx2_;
}
const float &Nano::L1PreFiringWeight_Dn() {
    if (!loaded_L1PreFiringWeight_Dn_) counter_uncached_L1PreFiringWeight_Dn_++;
    else counter_cached_L1PreFiringWeight_Dn_++;
    if (!loaded_L1PreFiringWeight_Dn_) {
        if (!b_L1PreFiringWeight_Dn_) throw std::runtime_error("L1PreFiringWeight_Dn branch doesn't exist");
        b_L1PreFiringWeight_Dn_->GetEntry(index);
        loaded_L1PreFiringWeight_Dn_ = true;
    }
    return L1PreFiringWeight_Dn_;
}
const float &Nano::L1PreFiringWeight_ECAL_Dn() {
    if (!loaded_L1PreFiringWeight_ECAL_Dn_) counter_uncached_L1PreFiringWeight_ECAL_Dn_++;
    else counter_cached_L1PreFiringWeight_ECAL_Dn_++;
    if (!loaded_L1PreFiringWeight_ECAL_Dn_) {
        if (!b_L1PreFiringWeight_ECAL_Dn_) throw std::runtime_error("L1PreFiringWeight_ECAL_Dn branch doesn't exist");
        b_L1PreFiringWeight_ECAL_Dn_->GetEntry(index);
        loaded_L1PreFiringWeight_ECAL_Dn_ = true;
    }
    return L1PreFiringWeight_ECAL_Dn_;
}
const float &Nano::L1PreFiringWeight_ECAL_Nom() {
    if (!loaded_L1PreFiringWeight_ECAL_Nom_) counter_uncached_L1PreFiringWeight_ECAL_Nom_++;
    else counter_cached_L1PreFiringWeight_ECAL_Nom_++;
    if (!loaded_L1PreFiringWeight_ECAL_Nom_) {
        if (!b_L1PreFiringWeight_ECAL_Nom_) throw std::runtime_error("L1PreFiringWeight_ECAL_Nom branch doesn't exist");
        b_L1PreFiringWeight_ECAL_Nom_->GetEntry(index);
        loaded_L1PreFiringWeight_ECAL_Nom_ = true;
    }
    return L1PreFiringWeight_ECAL_Nom_;
}
const float &Nano::L1PreFiringWeight_ECAL_Up() {
    if (!loaded_L1PreFiringWeight_ECAL_Up_) counter_uncached_L1PreFiringWeight_ECAL_Up_++;
    else counter_cached_L1PreFiringWeight_ECAL_Up_++;
    if (!loaded_L1PreFiringWeight_ECAL_Up_) {
        if (!b_L1PreFiringWeight_ECAL_Up_) throw std::runtime_error("L1PreFiringWeight_ECAL_Up branch doesn't exist");
        b_L1PreFiringWeight_ECAL_Up_->GetEntry(index);
        loaded_L1PreFiringWeight_ECAL_Up_ = true;
    }
    return L1PreFiringWeight_ECAL_Up_;
}
const float &Nano::L1PreFiringWeight_Muon_Nom() {
    if (!loaded_L1PreFiringWeight_Muon_Nom_) counter_uncached_L1PreFiringWeight_Muon_Nom_++;
    else counter_cached_L1PreFiringWeight_Muon_Nom_++;
    if (!loaded_L1PreFiringWeight_Muon_Nom_) {
        if (!b_L1PreFiringWeight_Muon_Nom_) throw std::runtime_error("L1PreFiringWeight_Muon_Nom branch doesn't exist");
        b_L1PreFiringWeight_Muon_Nom_->GetEntry(index);
        loaded_L1PreFiringWeight_Muon_Nom_ = true;
    }
    return L1PreFiringWeight_Muon_Nom_;
}
const float &Nano::L1PreFiringWeight_Muon_StatDn() {
    if (!loaded_L1PreFiringWeight_Muon_StatDn_) counter_uncached_L1PreFiringWeight_Muon_StatDn_++;
    else counter_cached_L1PreFiringWeight_Muon_StatDn_++;
    if (!loaded_L1PreFiringWeight_Muon_StatDn_) {
        if (!b_L1PreFiringWeight_Muon_StatDn_) throw std::runtime_error("L1PreFiringWeight_Muon_StatDn branch doesn't exist");
        b_L1PreFiringWeight_Muon_StatDn_->GetEntry(index);
        loaded_L1PreFiringWeight_Muon_StatDn_ = true;
    }
    return L1PreFiringWeight_Muon_StatDn_;
}
const float &Nano::L1PreFiringWeight_Muon_StatUp() {
    if (!loaded_L1PreFiringWeight_Muon_StatUp_) counter_uncached_L1PreFiringWeight_Muon_StatUp_++;
    else counter_cached_L1PreFiringWeight_Muon_StatUp_++;
    if (!loaded_L1PreFiringWeight_Muon_StatUp_) {
        if (!b_L1PreFiringWeight_Muon_StatUp_) throw std::runtime_error("L1PreFiringWeight_Muon_StatUp branch doesn't exist");
        b_L1PreFiringWeight_Muon_StatUp_->GetEntry(index);
        loaded_L1PreFiringWeight_Muon_StatUp_ = true;
    }
    return L1PreFiringWeight_Muon_StatUp_;
}
const float &Nano::L1PreFiringWeight_Muon_SystDn() {
    if (!loaded_L1PreFiringWeight_Muon_SystDn_) counter_uncached_L1PreFiringWeight_Muon_SystDn_++;
    else counter_cached_L1PreFiringWeight_Muon_SystDn_++;
    if (!loaded_L1PreFiringWeight_Muon_SystDn_) {
        if (!b_L1PreFiringWeight_Muon_SystDn_) throw std::runtime_error("L1PreFiringWeight_Muon_SystDn branch doesn't exist");
        b_L1PreFiringWeight_Muon_SystDn_->GetEntry(index);
        loaded_L1PreFiringWeight_Muon_SystDn_ = true;
    }
    return L1PreFiringWeight_Muon_SystDn_;
}
const float &Nano::L1PreFiringWeight_Muon_SystUp() {
    if (!loaded_L1PreFiringWeight_Muon_SystUp_) counter_uncached_L1PreFiringWeight_Muon_SystUp_++;
    else counter_cached_L1PreFiringWeight_Muon_SystUp_++;
    if (!loaded_L1PreFiringWeight_Muon_SystUp_) {
        if (!b_L1PreFiringWeight_Muon_SystUp_) throw std::runtime_error("L1PreFiringWeight_Muon_SystUp branch doesn't exist");
        b_L1PreFiringWeight_Muon_SystUp_->GetEntry(index);
        loaded_L1PreFiringWeight_Muon_SystUp_ = true;
    }
    return L1PreFiringWeight_Muon_SystUp_;
}
const float &Nano::L1PreFiringWeight_Nom() {
    if (!loaded_L1PreFiringWeight_Nom_) counter_uncached_L1PreFiringWeight_Nom_++;
    else counter_cached_L1PreFiringWeight_Nom_++;
    if (!loaded_L1PreFiringWeight_Nom_) {
        if (!b_L1PreFiringWeight_Nom_) throw std::runtime_error("L1PreFiringWeight_Nom branch doesn't exist");
        b_L1PreFiringWeight_Nom_->GetEntry(index);
        loaded_L1PreFiringWeight_Nom_ = true;
    }
    return L1PreFiringWeight_Nom_;
}
const float &Nano::L1PreFiringWeight_Up() {
    if (!loaded_L1PreFiringWeight_Up_) counter_uncached_L1PreFiringWeight_Up_++;
    else counter_cached_L1PreFiringWeight_Up_++;
    if (!loaded_L1PreFiringWeight_Up_) {
        if (!b_L1PreFiringWeight_Up_) throw std::runtime_error("L1PreFiringWeight_Up branch doesn't exist");
        b_L1PreFiringWeight_Up_->GetEntry(index);
        loaded_L1PreFiringWeight_Up_ = true;
    }
    return L1PreFiringWeight_Up_;
}
const bool &Nano::L1Reco_step() {
    if (!loaded_L1Reco_step_) counter_uncached_L1Reco_step_++;
    else counter_cached_L1Reco_step_++;
    if (!loaded_L1Reco_step_) {
        if (!b_L1Reco_step_) throw std::runtime_error("L1Reco_step branch doesn't exist");
        b_L1Reco_step_->GetEntry(index);
        loaded_L1Reco_step_ = true;
    }
    return L1Reco_step_;
}
const bool &Nano::L1_AlwaysTrue() {
    if (!loaded_L1_AlwaysTrue_) counter_uncached_L1_AlwaysTrue_++;
    else counter_cached_L1_AlwaysTrue_++;
    if (!loaded_L1_AlwaysTrue_) {
        if (!b_L1_AlwaysTrue_) throw std::runtime_error("L1_AlwaysTrue branch doesn't exist");
        b_L1_AlwaysTrue_->GetEntry(index);
        loaded_L1_AlwaysTrue_ = true;
    }
    return L1_AlwaysTrue_;
}
const bool &Nano::L1_BPTX_AND_NIM() {
    if (!loaded_L1_BPTX_AND_NIM_) counter_uncached_L1_BPTX_AND_NIM_++;
    else counter_cached_L1_BPTX_AND_NIM_++;
    if (!loaded_L1_BPTX_AND_NIM_) {
        if (!b_L1_BPTX_AND_NIM_) throw std::runtime_error("L1_BPTX_AND_NIM branch doesn't exist");
        b_L1_BPTX_AND_NIM_->GetEntry(index);
        loaded_L1_BPTX_AND_NIM_ = true;
    }
    return L1_BPTX_AND_NIM_;
}
const bool &Nano::L1_BPTX_AND_Ref1_VME() {
    if (!loaded_L1_BPTX_AND_Ref1_VME_) counter_uncached_L1_BPTX_AND_Ref1_VME_++;
    else counter_cached_L1_BPTX_AND_Ref1_VME_++;
    if (!loaded_L1_BPTX_AND_Ref1_VME_) {
        if (!b_L1_BPTX_AND_Ref1_VME_) throw std::runtime_error("L1_BPTX_AND_Ref1_VME branch doesn't exist");
        b_L1_BPTX_AND_Ref1_VME_->GetEntry(index);
        loaded_L1_BPTX_AND_Ref1_VME_ = true;
    }
    return L1_BPTX_AND_Ref1_VME_;
}
const bool &Nano::L1_BPTX_AND_Ref2_NIM() {
    if (!loaded_L1_BPTX_AND_Ref2_NIM_) counter_uncached_L1_BPTX_AND_Ref2_NIM_++;
    else counter_cached_L1_BPTX_AND_Ref2_NIM_++;
    if (!loaded_L1_BPTX_AND_Ref2_NIM_) {
        if (!b_L1_BPTX_AND_Ref2_NIM_) throw std::runtime_error("L1_BPTX_AND_Ref2_NIM branch doesn't exist");
        b_L1_BPTX_AND_Ref2_NIM_->GetEntry(index);
        loaded_L1_BPTX_AND_Ref2_NIM_ = true;
    }
    return L1_BPTX_AND_Ref2_NIM_;
}
const bool &Nano::L1_BPTX_AND_Ref3_VME() {
    if (!loaded_L1_BPTX_AND_Ref3_VME_) counter_uncached_L1_BPTX_AND_Ref3_VME_++;
    else counter_cached_L1_BPTX_AND_Ref3_VME_++;
    if (!loaded_L1_BPTX_AND_Ref3_VME_) {
        if (!b_L1_BPTX_AND_Ref3_VME_) throw std::runtime_error("L1_BPTX_AND_Ref3_VME branch doesn't exist");
        b_L1_BPTX_AND_Ref3_VME_->GetEntry(index);
        loaded_L1_BPTX_AND_Ref3_VME_ = true;
    }
    return L1_BPTX_AND_Ref3_VME_;
}
const bool &Nano::L1_BPTX_AND_Ref4_VME() {
    if (!loaded_L1_BPTX_AND_Ref4_VME_) counter_uncached_L1_BPTX_AND_Ref4_VME_++;
    else counter_cached_L1_BPTX_AND_Ref4_VME_++;
    if (!loaded_L1_BPTX_AND_Ref4_VME_) {
        if (!b_L1_BPTX_AND_Ref4_VME_) throw std::runtime_error("L1_BPTX_AND_Ref4_VME branch doesn't exist");
        b_L1_BPTX_AND_Ref4_VME_->GetEntry(index);
        loaded_L1_BPTX_AND_Ref4_VME_ = true;
    }
    return L1_BPTX_AND_Ref4_VME_;
}
const bool &Nano::L1_BPTX_B1NotB2_NIM() {
    if (!loaded_L1_BPTX_B1NotB2_NIM_) counter_uncached_L1_BPTX_B1NotB2_NIM_++;
    else counter_cached_L1_BPTX_B1NotB2_NIM_++;
    if (!loaded_L1_BPTX_B1NotB2_NIM_) {
        if (!b_L1_BPTX_B1NotB2_NIM_) throw std::runtime_error("L1_BPTX_B1NotB2_NIM branch doesn't exist");
        b_L1_BPTX_B1NotB2_NIM_->GetEntry(index);
        loaded_L1_BPTX_B1NotB2_NIM_ = true;
    }
    return L1_BPTX_B1NotB2_NIM_;
}
const bool &Nano::L1_BPTX_B1NotB2_VME() {
    if (!loaded_L1_BPTX_B1NotB2_VME_) counter_uncached_L1_BPTX_B1NotB2_VME_++;
    else counter_cached_L1_BPTX_B1NotB2_VME_++;
    if (!loaded_L1_BPTX_B1NotB2_VME_) {
        if (!b_L1_BPTX_B1NotB2_VME_) throw std::runtime_error("L1_BPTX_B1NotB2_VME branch doesn't exist");
        b_L1_BPTX_B1NotB2_VME_->GetEntry(index);
        loaded_L1_BPTX_B1NotB2_VME_ = true;
    }
    return L1_BPTX_B1NotB2_VME_;
}
const bool &Nano::L1_BPTX_B1_NIM() {
    if (!loaded_L1_BPTX_B1_NIM_) counter_uncached_L1_BPTX_B1_NIM_++;
    else counter_cached_L1_BPTX_B1_NIM_++;
    if (!loaded_L1_BPTX_B1_NIM_) {
        if (!b_L1_BPTX_B1_NIM_) throw std::runtime_error("L1_BPTX_B1_NIM branch doesn't exist");
        b_L1_BPTX_B1_NIM_->GetEntry(index);
        loaded_L1_BPTX_B1_NIM_ = true;
    }
    return L1_BPTX_B1_NIM_;
}
const bool &Nano::L1_BPTX_B2NotB1_NIM() {
    if (!loaded_L1_BPTX_B2NotB1_NIM_) counter_uncached_L1_BPTX_B2NotB1_NIM_++;
    else counter_cached_L1_BPTX_B2NotB1_NIM_++;
    if (!loaded_L1_BPTX_B2NotB1_NIM_) {
        if (!b_L1_BPTX_B2NotB1_NIM_) throw std::runtime_error("L1_BPTX_B2NotB1_NIM branch doesn't exist");
        b_L1_BPTX_B2NotB1_NIM_->GetEntry(index);
        loaded_L1_BPTX_B2NotB1_NIM_ = true;
    }
    return L1_BPTX_B2NotB1_NIM_;
}
const bool &Nano::L1_BPTX_B2NotB1_VME() {
    if (!loaded_L1_BPTX_B2NotB1_VME_) counter_uncached_L1_BPTX_B2NotB1_VME_++;
    else counter_cached_L1_BPTX_B2NotB1_VME_++;
    if (!loaded_L1_BPTX_B2NotB1_VME_) {
        if (!b_L1_BPTX_B2NotB1_VME_) throw std::runtime_error("L1_BPTX_B2NotB1_VME branch doesn't exist");
        b_L1_BPTX_B2NotB1_VME_->GetEntry(index);
        loaded_L1_BPTX_B2NotB1_VME_ = true;
    }
    return L1_BPTX_B2NotB1_VME_;
}
const bool &Nano::L1_BPTX_B2_NIM() {
    if (!loaded_L1_BPTX_B2_NIM_) counter_uncached_L1_BPTX_B2_NIM_++;
    else counter_cached_L1_BPTX_B2_NIM_++;
    if (!loaded_L1_BPTX_B2_NIM_) {
        if (!b_L1_BPTX_B2_NIM_) throw std::runtime_error("L1_BPTX_B2_NIM branch doesn't exist");
        b_L1_BPTX_B2_NIM_->GetEntry(index);
        loaded_L1_BPTX_B2_NIM_ = true;
    }
    return L1_BPTX_B2_NIM_;
}
const bool &Nano::L1_BPTX_BeamGas_B1_VME() {
    if (!loaded_L1_BPTX_BeamGas_B1_VME_) counter_uncached_L1_BPTX_BeamGas_B1_VME_++;
    else counter_cached_L1_BPTX_BeamGas_B1_VME_++;
    if (!loaded_L1_BPTX_BeamGas_B1_VME_) {
        if (!b_L1_BPTX_BeamGas_B1_VME_) throw std::runtime_error("L1_BPTX_BeamGas_B1_VME branch doesn't exist");
        b_L1_BPTX_BeamGas_B1_VME_->GetEntry(index);
        loaded_L1_BPTX_BeamGas_B1_VME_ = true;
    }
    return L1_BPTX_BeamGas_B1_VME_;
}
const bool &Nano::L1_BPTX_BeamGas_B2_VME() {
    if (!loaded_L1_BPTX_BeamGas_B2_VME_) counter_uncached_L1_BPTX_BeamGas_B2_VME_++;
    else counter_cached_L1_BPTX_BeamGas_B2_VME_++;
    if (!loaded_L1_BPTX_BeamGas_B2_VME_) {
        if (!b_L1_BPTX_BeamGas_B2_VME_) throw std::runtime_error("L1_BPTX_BeamGas_B2_VME branch doesn't exist");
        b_L1_BPTX_BeamGas_B2_VME_->GetEntry(index);
        loaded_L1_BPTX_BeamGas_B2_VME_ = true;
    }
    return L1_BPTX_BeamGas_B2_VME_;
}
const bool &Nano::L1_BPTX_BeamGas_Ref1_VME() {
    if (!loaded_L1_BPTX_BeamGas_Ref1_VME_) counter_uncached_L1_BPTX_BeamGas_Ref1_VME_++;
    else counter_cached_L1_BPTX_BeamGas_Ref1_VME_++;
    if (!loaded_L1_BPTX_BeamGas_Ref1_VME_) {
        if (!b_L1_BPTX_BeamGas_Ref1_VME_) throw std::runtime_error("L1_BPTX_BeamGas_Ref1_VME branch doesn't exist");
        b_L1_BPTX_BeamGas_Ref1_VME_->GetEntry(index);
        loaded_L1_BPTX_BeamGas_Ref1_VME_ = true;
    }
    return L1_BPTX_BeamGas_Ref1_VME_;
}
const bool &Nano::L1_BPTX_BeamGas_Ref2_VME() {
    if (!loaded_L1_BPTX_BeamGas_Ref2_VME_) counter_uncached_L1_BPTX_BeamGas_Ref2_VME_++;
    else counter_cached_L1_BPTX_BeamGas_Ref2_VME_++;
    if (!loaded_L1_BPTX_BeamGas_Ref2_VME_) {
        if (!b_L1_BPTX_BeamGas_Ref2_VME_) throw std::runtime_error("L1_BPTX_BeamGas_Ref2_VME branch doesn't exist");
        b_L1_BPTX_BeamGas_Ref2_VME_->GetEntry(index);
        loaded_L1_BPTX_BeamGas_Ref2_VME_ = true;
    }
    return L1_BPTX_BeamGas_Ref2_VME_;
}
const bool &Nano::L1_BPTX_LUT1_AND() {
    if (!loaded_L1_BPTX_LUT1_AND_) counter_uncached_L1_BPTX_LUT1_AND_++;
    else counter_cached_L1_BPTX_LUT1_AND_++;
    if (!loaded_L1_BPTX_LUT1_AND_) {
        if (!b_L1_BPTX_LUT1_AND_) throw std::runtime_error("L1_BPTX_LUT1_AND branch doesn't exist");
        b_L1_BPTX_LUT1_AND_->GetEntry(index);
        loaded_L1_BPTX_LUT1_AND_ = true;
    }
    return L1_BPTX_LUT1_AND_;
}
const bool &Nano::L1_BPTX_LUT1_B1() {
    if (!loaded_L1_BPTX_LUT1_B1_) counter_uncached_L1_BPTX_LUT1_B1_++;
    else counter_cached_L1_BPTX_LUT1_B1_++;
    if (!loaded_L1_BPTX_LUT1_B1_) {
        if (!b_L1_BPTX_LUT1_B1_) throw std::runtime_error("L1_BPTX_LUT1_B1 branch doesn't exist");
        b_L1_BPTX_LUT1_B1_->GetEntry(index);
        loaded_L1_BPTX_LUT1_B1_ = true;
    }
    return L1_BPTX_LUT1_B1_;
}
const bool &Nano::L1_BPTX_LUT1_B2() {
    if (!loaded_L1_BPTX_LUT1_B2_) counter_uncached_L1_BPTX_LUT1_B2_++;
    else counter_cached_L1_BPTX_LUT1_B2_++;
    if (!loaded_L1_BPTX_LUT1_B2_) {
        if (!b_L1_BPTX_LUT1_B2_) throw std::runtime_error("L1_BPTX_LUT1_B2 branch doesn't exist");
        b_L1_BPTX_LUT1_B2_->GetEntry(index);
        loaded_L1_BPTX_LUT1_B2_ = true;
    }
    return L1_BPTX_LUT1_B2_;
}
const bool &Nano::L1_BPTX_LUT1_OR() {
    if (!loaded_L1_BPTX_LUT1_OR_) counter_uncached_L1_BPTX_LUT1_OR_++;
    else counter_cached_L1_BPTX_LUT1_OR_++;
    if (!loaded_L1_BPTX_LUT1_OR_) {
        if (!b_L1_BPTX_LUT1_OR_) throw std::runtime_error("L1_BPTX_LUT1_OR branch doesn't exist");
        b_L1_BPTX_LUT1_OR_->GetEntry(index);
        loaded_L1_BPTX_LUT1_OR_ = true;
    }
    return L1_BPTX_LUT1_OR_;
}
const bool &Nano::L1_BPTX_LUT2_AND() {
    if (!loaded_L1_BPTX_LUT2_AND_) counter_uncached_L1_BPTX_LUT2_AND_++;
    else counter_cached_L1_BPTX_LUT2_AND_++;
    if (!loaded_L1_BPTX_LUT2_AND_) {
        if (!b_L1_BPTX_LUT2_AND_) throw std::runtime_error("L1_BPTX_LUT2_AND branch doesn't exist");
        b_L1_BPTX_LUT2_AND_->GetEntry(index);
        loaded_L1_BPTX_LUT2_AND_ = true;
    }
    return L1_BPTX_LUT2_AND_;
}
const bool &Nano::L1_BPTX_LUT2_B1NotB2() {
    if (!loaded_L1_BPTX_LUT2_B1NotB2_) counter_uncached_L1_BPTX_LUT2_B1NotB2_++;
    else counter_cached_L1_BPTX_LUT2_B1NotB2_++;
    if (!loaded_L1_BPTX_LUT2_B1NotB2_) {
        if (!b_L1_BPTX_LUT2_B1NotB2_) throw std::runtime_error("L1_BPTX_LUT2_B1NotB2 branch doesn't exist");
        b_L1_BPTX_LUT2_B1NotB2_->GetEntry(index);
        loaded_L1_BPTX_LUT2_B1NotB2_ = true;
    }
    return L1_BPTX_LUT2_B1NotB2_;
}
const bool &Nano::L1_BPTX_LUT2_B2NotB1() {
    if (!loaded_L1_BPTX_LUT2_B2NotB1_) counter_uncached_L1_BPTX_LUT2_B2NotB1_++;
    else counter_cached_L1_BPTX_LUT2_B2NotB1_++;
    if (!loaded_L1_BPTX_LUT2_B2NotB1_) {
        if (!b_L1_BPTX_LUT2_B2NotB1_) throw std::runtime_error("L1_BPTX_LUT2_B2NotB1 branch doesn't exist");
        b_L1_BPTX_LUT2_B2NotB1_->GetEntry(index);
        loaded_L1_BPTX_LUT2_B2NotB1_ = true;
    }
    return L1_BPTX_LUT2_B2NotB1_;
}
const bool &Nano::L1_BPTX_LUT2_NotOR() {
    if (!loaded_L1_BPTX_LUT2_NotOR_) counter_uncached_L1_BPTX_LUT2_NotOR_++;
    else counter_cached_L1_BPTX_LUT2_NotOR_++;
    if (!loaded_L1_BPTX_LUT2_NotOR_) {
        if (!b_L1_BPTX_LUT2_NotOR_) throw std::runtime_error("L1_BPTX_LUT2_NotOR branch doesn't exist");
        b_L1_BPTX_LUT2_NotOR_->GetEntry(index);
        loaded_L1_BPTX_LUT2_NotOR_ = true;
    }
    return L1_BPTX_LUT2_NotOR_;
}
const bool &Nano::L1_BPTX_NotOR_NIM() {
    if (!loaded_L1_BPTX_NotOR_NIM_) counter_uncached_L1_BPTX_NotOR_NIM_++;
    else counter_cached_L1_BPTX_NotOR_NIM_++;
    if (!loaded_L1_BPTX_NotOR_NIM_) {
        if (!b_L1_BPTX_NotOR_NIM_) throw std::runtime_error("L1_BPTX_NotOR_NIM branch doesn't exist");
        b_L1_BPTX_NotOR_NIM_->GetEntry(index);
        loaded_L1_BPTX_NotOR_NIM_ = true;
    }
    return L1_BPTX_NotOR_NIM_;
}
const bool &Nano::L1_BPTX_NotOR_VME() {
    if (!loaded_L1_BPTX_NotOR_VME_) counter_uncached_L1_BPTX_NotOR_VME_++;
    else counter_cached_L1_BPTX_NotOR_VME_++;
    if (!loaded_L1_BPTX_NotOR_VME_) {
        if (!b_L1_BPTX_NotOR_VME_) throw std::runtime_error("L1_BPTX_NotOR_VME branch doesn't exist");
        b_L1_BPTX_NotOR_VME_->GetEntry(index);
        loaded_L1_BPTX_NotOR_VME_ = true;
    }
    return L1_BPTX_NotOR_VME_;
}
const bool &Nano::L1_BPTX_OR_NIM() {
    if (!loaded_L1_BPTX_OR_NIM_) counter_uncached_L1_BPTX_OR_NIM_++;
    else counter_cached_L1_BPTX_OR_NIM_++;
    if (!loaded_L1_BPTX_OR_NIM_) {
        if (!b_L1_BPTX_OR_NIM_) throw std::runtime_error("L1_BPTX_OR_NIM branch doesn't exist");
        b_L1_BPTX_OR_NIM_->GetEntry(index);
        loaded_L1_BPTX_OR_NIM_ = true;
    }
    return L1_BPTX_OR_NIM_;
}
const bool &Nano::L1_BPTX_OR_Ref3_VME() {
    if (!loaded_L1_BPTX_OR_Ref3_VME_) counter_uncached_L1_BPTX_OR_Ref3_VME_++;
    else counter_cached_L1_BPTX_OR_Ref3_VME_++;
    if (!loaded_L1_BPTX_OR_Ref3_VME_) {
        if (!b_L1_BPTX_OR_Ref3_VME_) throw std::runtime_error("L1_BPTX_OR_Ref3_VME branch doesn't exist");
        b_L1_BPTX_OR_Ref3_VME_->GetEntry(index);
        loaded_L1_BPTX_OR_Ref3_VME_ = true;
    }
    return L1_BPTX_OR_Ref3_VME_;
}
const bool &Nano::L1_BPTX_OR_Ref4_VME() {
    if (!loaded_L1_BPTX_OR_Ref4_VME_) counter_uncached_L1_BPTX_OR_Ref4_VME_++;
    else counter_cached_L1_BPTX_OR_Ref4_VME_++;
    if (!loaded_L1_BPTX_OR_Ref4_VME_) {
        if (!b_L1_BPTX_OR_Ref4_VME_) throw std::runtime_error("L1_BPTX_OR_Ref4_VME branch doesn't exist");
        b_L1_BPTX_OR_Ref4_VME_->GetEntry(index);
        loaded_L1_BPTX_OR_Ref4_VME_ = true;
    }
    return L1_BPTX_OR_Ref4_VME_;
}
const bool &Nano::L1_BPTX_RefAND_VME() {
    if (!loaded_L1_BPTX_RefAND_VME_) counter_uncached_L1_BPTX_RefAND_VME_++;
    else counter_cached_L1_BPTX_RefAND_VME_++;
    if (!loaded_L1_BPTX_RefAND_VME_) {
        if (!b_L1_BPTX_RefAND_VME_) throw std::runtime_error("L1_BPTX_RefAND_VME branch doesn't exist");
        b_L1_BPTX_RefAND_VME_->GetEntry(index);
        loaded_L1_BPTX_RefAND_VME_ = true;
    }
    return L1_BPTX_RefAND_VME_;
}
const bool &Nano::L1_BPTX_TRIG2_AND() {
    if (!loaded_L1_BPTX_TRIG2_AND_) counter_uncached_L1_BPTX_TRIG2_AND_++;
    else counter_cached_L1_BPTX_TRIG2_AND_++;
    if (!loaded_L1_BPTX_TRIG2_AND_) {
        if (!b_L1_BPTX_TRIG2_AND_) throw std::runtime_error("L1_BPTX_TRIG2_AND branch doesn't exist");
        b_L1_BPTX_TRIG2_AND_->GetEntry(index);
        loaded_L1_BPTX_TRIG2_AND_ = true;
    }
    return L1_BPTX_TRIG2_AND_;
}
const bool &Nano::L1_BPTX_TRIG2_B1NotB2() {
    if (!loaded_L1_BPTX_TRIG2_B1NotB2_) counter_uncached_L1_BPTX_TRIG2_B1NotB2_++;
    else counter_cached_L1_BPTX_TRIG2_B1NotB2_++;
    if (!loaded_L1_BPTX_TRIG2_B1NotB2_) {
        if (!b_L1_BPTX_TRIG2_B1NotB2_) throw std::runtime_error("L1_BPTX_TRIG2_B1NotB2 branch doesn't exist");
        b_L1_BPTX_TRIG2_B1NotB2_->GetEntry(index);
        loaded_L1_BPTX_TRIG2_B1NotB2_ = true;
    }
    return L1_BPTX_TRIG2_B1NotB2_;
}
const bool &Nano::L1_BPTX_TRIG2_B2NotB1() {
    if (!loaded_L1_BPTX_TRIG2_B2NotB1_) counter_uncached_L1_BPTX_TRIG2_B2NotB1_++;
    else counter_cached_L1_BPTX_TRIG2_B2NotB1_++;
    if (!loaded_L1_BPTX_TRIG2_B2NotB1_) {
        if (!b_L1_BPTX_TRIG2_B2NotB1_) throw std::runtime_error("L1_BPTX_TRIG2_B2NotB1 branch doesn't exist");
        b_L1_BPTX_TRIG2_B2NotB1_->GetEntry(index);
        loaded_L1_BPTX_TRIG2_B2NotB1_ = true;
    }
    return L1_BPTX_TRIG2_B2NotB1_;
}
const bool &Nano::L1_BPTX_TRIG2_NotOR() {
    if (!loaded_L1_BPTX_TRIG2_NotOR_) counter_uncached_L1_BPTX_TRIG2_NotOR_++;
    else counter_cached_L1_BPTX_TRIG2_NotOR_++;
    if (!loaded_L1_BPTX_TRIG2_NotOR_) {
        if (!b_L1_BPTX_TRIG2_NotOR_) throw std::runtime_error("L1_BPTX_TRIG2_NotOR branch doesn't exist");
        b_L1_BPTX_TRIG2_NotOR_->GetEntry(index);
        loaded_L1_BPTX_TRIG2_NotOR_ = true;
    }
    return L1_BPTX_TRIG2_NotOR_;
}
const bool &Nano::L1_BRIL_TRIG0_AND() {
    if (!loaded_L1_BRIL_TRIG0_AND_) counter_uncached_L1_BRIL_TRIG0_AND_++;
    else counter_cached_L1_BRIL_TRIG0_AND_++;
    if (!loaded_L1_BRIL_TRIG0_AND_) {
        if (!b_L1_BRIL_TRIG0_AND_) throw std::runtime_error("L1_BRIL_TRIG0_AND branch doesn't exist");
        b_L1_BRIL_TRIG0_AND_->GetEntry(index);
        loaded_L1_BRIL_TRIG0_AND_ = true;
    }
    return L1_BRIL_TRIG0_AND_;
}
const bool &Nano::L1_BRIL_TRIG0_FstBunchInTrain() {
    if (!loaded_L1_BRIL_TRIG0_FstBunchInTrain_) counter_uncached_L1_BRIL_TRIG0_FstBunchInTrain_++;
    else counter_cached_L1_BRIL_TRIG0_FstBunchInTrain_++;
    if (!loaded_L1_BRIL_TRIG0_FstBunchInTrain_) {
        if (!b_L1_BRIL_TRIG0_FstBunchInTrain_) throw std::runtime_error("L1_BRIL_TRIG0_FstBunchInTrain branch doesn't exist");
        b_L1_BRIL_TRIG0_FstBunchInTrain_->GetEntry(index);
        loaded_L1_BRIL_TRIG0_FstBunchInTrain_ = true;
    }
    return L1_BRIL_TRIG0_FstBunchInTrain_;
}
const bool &Nano::L1_BRIL_TRIG0_OR() {
    if (!loaded_L1_BRIL_TRIG0_OR_) counter_uncached_L1_BRIL_TRIG0_OR_++;
    else counter_cached_L1_BRIL_TRIG0_OR_++;
    if (!loaded_L1_BRIL_TRIG0_OR_) {
        if (!b_L1_BRIL_TRIG0_OR_) throw std::runtime_error("L1_BRIL_TRIG0_OR branch doesn't exist");
        b_L1_BRIL_TRIG0_OR_->GetEntry(index);
        loaded_L1_BRIL_TRIG0_OR_ = true;
    }
    return L1_BRIL_TRIG0_OR_;
}
const bool &Nano::L1_BRIL_TRIG0_delayedAND() {
    if (!loaded_L1_BRIL_TRIG0_delayedAND_) counter_uncached_L1_BRIL_TRIG0_delayedAND_++;
    else counter_cached_L1_BRIL_TRIG0_delayedAND_++;
    if (!loaded_L1_BRIL_TRIG0_delayedAND_) {
        if (!b_L1_BRIL_TRIG0_delayedAND_) throw std::runtime_error("L1_BRIL_TRIG0_delayedAND branch doesn't exist");
        b_L1_BRIL_TRIG0_delayedAND_->GetEntry(index);
        loaded_L1_BRIL_TRIG0_delayedAND_ = true;
    }
    return L1_BRIL_TRIG0_delayedAND_;
}
const bool &Nano::L1_BRIL_TRIG3_AND() {
    if (!loaded_L1_BRIL_TRIG3_AND_) counter_uncached_L1_BRIL_TRIG3_AND_++;
    else counter_cached_L1_BRIL_TRIG3_AND_++;
    if (!loaded_L1_BRIL_TRIG3_AND_) {
        if (!b_L1_BRIL_TRIG3_AND_) throw std::runtime_error("L1_BRIL_TRIG3_AND branch doesn't exist");
        b_L1_BRIL_TRIG3_AND_->GetEntry(index);
        loaded_L1_BRIL_TRIG3_AND_ = true;
    }
    return L1_BRIL_TRIG3_AND_;
}
const bool &Nano::L1_BRIL_TRIG3_delayedAND() {
    if (!loaded_L1_BRIL_TRIG3_delayedAND_) counter_uncached_L1_BRIL_TRIG3_delayedAND_++;
    else counter_cached_L1_BRIL_TRIG3_delayedAND_++;
    if (!loaded_L1_BRIL_TRIG3_delayedAND_) {
        if (!b_L1_BRIL_TRIG3_delayedAND_) throw std::runtime_error("L1_BRIL_TRIG3_delayedAND branch doesn't exist");
        b_L1_BRIL_TRIG3_delayedAND_->GetEntry(index);
        loaded_L1_BRIL_TRIG3_delayedAND_ = true;
    }
    return L1_BRIL_TRIG3_delayedAND_;
}
const bool &Nano::L1_BRIL_TRIG3_ref() {
    if (!loaded_L1_BRIL_TRIG3_ref_) counter_uncached_L1_BRIL_TRIG3_ref_++;
    else counter_cached_L1_BRIL_TRIG3_ref_++;
    if (!loaded_L1_BRIL_TRIG3_ref_) {
        if (!b_L1_BRIL_TRIG3_ref_) throw std::runtime_error("L1_BRIL_TRIG3_ref branch doesn't exist");
        b_L1_BRIL_TRIG3_ref_->GetEntry(index);
        loaded_L1_BRIL_TRIG3_ref_ = true;
    }
    return L1_BRIL_TRIG3_ref_;
}
const bool &Nano::L1_BeamGasB1() {
    if (!loaded_L1_BeamGasB1_) counter_uncached_L1_BeamGasB1_++;
    else counter_cached_L1_BeamGasB1_++;
    if (!loaded_L1_BeamGasB1_) {
        if (!b_L1_BeamGasB1_) throw std::runtime_error("L1_BeamGasB1 branch doesn't exist");
        b_L1_BeamGasB1_->GetEntry(index);
        loaded_L1_BeamGasB1_ = true;
    }
    return L1_BeamGasB1_;
}
const bool &Nano::L1_BeamGasB2() {
    if (!loaded_L1_BeamGasB2_) counter_uncached_L1_BeamGasB2_++;
    else counter_cached_L1_BeamGasB2_++;
    if (!loaded_L1_BeamGasB2_) {
        if (!b_L1_BeamGasB2_) throw std::runtime_error("L1_BeamGasB2 branch doesn't exist");
        b_L1_BeamGasB2_->GetEntry(index);
        loaded_L1_BeamGasB2_ = true;
    }
    return L1_BeamGasB2_;
}
const bool &Nano::L1_BeamGasMinus() {
    if (!loaded_L1_BeamGasMinus_) counter_uncached_L1_BeamGasMinus_++;
    else counter_cached_L1_BeamGasMinus_++;
    if (!loaded_L1_BeamGasMinus_) {
        if (!b_L1_BeamGasMinus_) throw std::runtime_error("L1_BeamGasMinus branch doesn't exist");
        b_L1_BeamGasMinus_->GetEntry(index);
        loaded_L1_BeamGasMinus_ = true;
    }
    return L1_BeamGasMinus_;
}
const bool &Nano::L1_BeamGasPlus() {
    if (!loaded_L1_BeamGasPlus_) counter_uncached_L1_BeamGasPlus_++;
    else counter_cached_L1_BeamGasPlus_++;
    if (!loaded_L1_BeamGasPlus_) {
        if (!b_L1_BeamGasPlus_) throw std::runtime_error("L1_BeamGasPlus branch doesn't exist");
        b_L1_BeamGasPlus_->GetEntry(index);
        loaded_L1_BeamGasPlus_ = true;
    }
    return L1_BeamGasPlus_;
}
const bool &Nano::L1_BptxMinus() {
    if (!loaded_L1_BptxMinus_) counter_uncached_L1_BptxMinus_++;
    else counter_cached_L1_BptxMinus_++;
    if (!loaded_L1_BptxMinus_) {
        if (!b_L1_BptxMinus_) throw std::runtime_error("L1_BptxMinus branch doesn't exist");
        b_L1_BptxMinus_->GetEntry(index);
        loaded_L1_BptxMinus_ = true;
    }
    return L1_BptxMinus_;
}
const bool &Nano::L1_BptxOR() {
    if (!loaded_L1_BptxOR_) counter_uncached_L1_BptxOR_++;
    else counter_cached_L1_BptxOR_++;
    if (!loaded_L1_BptxOR_) {
        if (!b_L1_BptxOR_) throw std::runtime_error("L1_BptxOR branch doesn't exist");
        b_L1_BptxOR_->GetEntry(index);
        loaded_L1_BptxOR_ = true;
    }
    return L1_BptxOR_;
}
const bool &Nano::L1_BptxPlus() {
    if (!loaded_L1_BptxPlus_) counter_uncached_L1_BptxPlus_++;
    else counter_cached_L1_BptxPlus_++;
    if (!loaded_L1_BptxPlus_) {
        if (!b_L1_BptxPlus_) throw std::runtime_error("L1_BptxPlus branch doesn't exist");
        b_L1_BptxPlus_->GetEntry(index);
        loaded_L1_BptxPlus_ = true;
    }
    return L1_BptxPlus_;
}
const bool &Nano::L1_BptxXOR() {
    if (!loaded_L1_BptxXOR_) counter_uncached_L1_BptxXOR_++;
    else counter_cached_L1_BptxXOR_++;
    if (!loaded_L1_BptxXOR_) {
        if (!b_L1_BptxXOR_) throw std::runtime_error("L1_BptxXOR branch doesn't exist");
        b_L1_BptxXOR_->GetEntry(index);
        loaded_L1_BptxXOR_ = true;
    }
    return L1_BptxXOR_;
}
const bool &Nano::L1_CDC_3_TOP120_DPHI1p570_3p142() {
    if (!loaded_L1_CDC_3_TOP120_DPHI1p570_3p142_) counter_uncached_L1_CDC_3_TOP120_DPHI1p570_3p142_++;
    else counter_cached_L1_CDC_3_TOP120_DPHI1p570_3p142_++;
    if (!loaded_L1_CDC_3_TOP120_DPHI1p570_3p142_) {
        if (!b_L1_CDC_3_TOP120_DPHI1p570_3p142_) throw std::runtime_error("L1_CDC_3_TOP120_DPHI1p570_3p142 branch doesn't exist");
        b_L1_CDC_3_TOP120_DPHI1p570_3p142_->GetEntry(index);
        loaded_L1_CDC_3_TOP120_DPHI1p570_3p142_ = true;
    }
    return L1_CDC_3_TOP120_DPHI1p570_3p142_;
}
const bool &Nano::L1_CDC_3_TOP120_DPHI2p094_3p142() {
    if (!loaded_L1_CDC_3_TOP120_DPHI2p094_3p142_) counter_uncached_L1_CDC_3_TOP120_DPHI2p094_3p142_++;
    else counter_cached_L1_CDC_3_TOP120_DPHI2p094_3p142_++;
    if (!loaded_L1_CDC_3_TOP120_DPHI2p094_3p142_) {
        if (!b_L1_CDC_3_TOP120_DPHI2p094_3p142_) throw std::runtime_error("L1_CDC_3_TOP120_DPHI2p094_3p142 branch doesn't exist");
        b_L1_CDC_3_TOP120_DPHI2p094_3p142_->GetEntry(index);
        loaded_L1_CDC_3_TOP120_DPHI2p094_3p142_ = true;
    }
    return L1_CDC_3_TOP120_DPHI2p094_3p142_;
}
const bool &Nano::L1_CDC_3_TOP120_DPHI2p618_3p142() {
    if (!loaded_L1_CDC_3_TOP120_DPHI2p618_3p142_) counter_uncached_L1_CDC_3_TOP120_DPHI2p618_3p142_++;
    else counter_cached_L1_CDC_3_TOP120_DPHI2p618_3p142_++;
    if (!loaded_L1_CDC_3_TOP120_DPHI2p618_3p142_) {
        if (!b_L1_CDC_3_TOP120_DPHI2p618_3p142_) throw std::runtime_error("L1_CDC_3_TOP120_DPHI2p618_3p142 branch doesn't exist");
        b_L1_CDC_3_TOP120_DPHI2p618_3p142_->GetEntry(index);
        loaded_L1_CDC_3_TOP120_DPHI2p618_3p142_ = true;
    }
    return L1_CDC_3_TOP120_DPHI2p618_3p142_;
}
const bool &Nano::L1_CDC_3_TOP_DPHI2p618_3p142() {
    if (!loaded_L1_CDC_3_TOP_DPHI2p618_3p142_) counter_uncached_L1_CDC_3_TOP_DPHI2p618_3p142_++;
    else counter_cached_L1_CDC_3_TOP_DPHI2p618_3p142_++;
    if (!loaded_L1_CDC_3_TOP_DPHI2p618_3p142_) {
        if (!b_L1_CDC_3_TOP_DPHI2p618_3p142_) throw std::runtime_error("L1_CDC_3_TOP_DPHI2p618_3p142 branch doesn't exist");
        b_L1_CDC_3_TOP_DPHI2p618_3p142_->GetEntry(index);
        loaded_L1_CDC_3_TOP_DPHI2p618_3p142_ = true;
    }
    return L1_CDC_3_TOP_DPHI2p618_3p142_;
}
const bool &Nano::L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142() {
    if (!loaded_L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142_) counter_uncached_L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142_++;
    else counter_cached_L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142_++;
    if (!loaded_L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142_) {
        if (!b_L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142_) throw std::runtime_error("L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142 branch doesn't exist");
        b_L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142_->GetEntry(index);
        loaded_L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142_ = true;
    }
    return L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142_;
}
const bool &Nano::L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142() {
    if (!loaded_L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142_) counter_uncached_L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142_++;
    else counter_cached_L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142_++;
    if (!loaded_L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142_) {
        if (!b_L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142_) throw std::runtime_error("L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142 branch doesn't exist");
        b_L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142_->GetEntry(index);
        loaded_L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142_ = true;
    }
    return L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142_;
}
const bool &Nano::L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142() {
    if (!loaded_L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142_) counter_uncached_L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142_++;
    else counter_cached_L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142_++;
    if (!loaded_L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142_) {
        if (!b_L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142_) throw std::runtime_error("L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142 branch doesn't exist");
        b_L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142_->GetEntry(index);
        loaded_L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142_ = true;
    }
    return L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142_;
}
const bool &Nano::L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142() {
    if (!loaded_L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142_) counter_uncached_L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142_++;
    else counter_cached_L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142_++;
    if (!loaded_L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142_) {
        if (!b_L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142_) throw std::runtime_error("L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142 branch doesn't exist");
        b_L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142_->GetEntry(index);
        loaded_L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142_ = true;
    }
    return L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142_;
}
const bool &Nano::L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142() {
    if (!loaded_L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142_) counter_uncached_L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142_++;
    else counter_cached_L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142_++;
    if (!loaded_L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142_) {
        if (!b_L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142_) throw std::runtime_error("L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142 branch doesn't exist");
        b_L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142_->GetEntry(index);
        loaded_L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142_ = true;
    }
    return L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142_;
}
const bool &Nano::L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142() {
    if (!loaded_L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142_) counter_uncached_L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142_++;
    else counter_cached_L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142_++;
    if (!loaded_L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142_) {
        if (!b_L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142_) throw std::runtime_error("L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142 branch doesn't exist");
        b_L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142_->GetEntry(index);
        loaded_L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142_ = true;
    }
    return L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142_;
}
const bool &Nano::L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142() {
    if (!loaded_L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142_) counter_uncached_L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142_++;
    else counter_cached_L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142_++;
    if (!loaded_L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142_) {
        if (!b_L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142_) throw std::runtime_error("L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142 branch doesn't exist");
        b_L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142_->GetEntry(index);
        loaded_L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142_ = true;
    }
    return L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142_;
}
const bool &Nano::L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142() {
    if (!loaded_L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142_) counter_uncached_L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142_++;
    else counter_cached_L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142_++;
    if (!loaded_L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142_) {
        if (!b_L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142_) throw std::runtime_error("L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142 branch doesn't exist");
        b_L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142_->GetEntry(index);
        loaded_L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142_ = true;
    }
    return L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142_;
}
const bool &Nano::L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142() {
    if (!loaded_L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142_) counter_uncached_L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142_++;
    else counter_cached_L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142_++;
    if (!loaded_L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142_) {
        if (!b_L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142_) throw std::runtime_error("L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142 branch doesn't exist");
        b_L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142_->GetEntry(index);
        loaded_L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142_ = true;
    }
    return L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142_;
}
const bool &Nano::L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142() {
    if (!loaded_L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142_) counter_uncached_L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142_++;
    else counter_cached_L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142_++;
    if (!loaded_L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142_) {
        if (!b_L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142_) throw std::runtime_error("L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142 branch doesn't exist");
        b_L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142_->GetEntry(index);
        loaded_L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142_ = true;
    }
    return L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142_;
}
const bool &Nano::L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142() {
    if (!loaded_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_) counter_uncached_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_++;
    else counter_cached_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_++;
    if (!loaded_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_) {
        if (!b_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_) throw std::runtime_error("L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142 branch doesn't exist");
        b_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_->GetEntry(index);
        loaded_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_ = true;
    }
    return L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_;
}
const bool &Nano::L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142() {
    if (!loaded_L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142_) counter_uncached_L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142_++;
    else counter_cached_L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142_++;
    if (!loaded_L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142_) {
        if (!b_L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142_) throw std::runtime_error("L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142 branch doesn't exist");
        b_L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142_->GetEntry(index);
        loaded_L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142_ = true;
    }
    return L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142_;
}
const bool &Nano::L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142() {
    if (!loaded_L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142_) counter_uncached_L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142_++;
    else counter_cached_L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142_++;
    if (!loaded_L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142_) {
        if (!b_L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142_) throw std::runtime_error("L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142 branch doesn't exist");
        b_L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142_->GetEntry(index);
        loaded_L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142_ = true;
    }
    return L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142_;
}
const bool &Nano::L1_CDCp1_3_TOP120_DPHI2p618_3p142() {
    if (!loaded_L1_CDCp1_3_TOP120_DPHI2p618_3p142_) counter_uncached_L1_CDCp1_3_TOP120_DPHI2p618_3p142_++;
    else counter_cached_L1_CDCp1_3_TOP120_DPHI2p618_3p142_++;
    if (!loaded_L1_CDCp1_3_TOP120_DPHI2p618_3p142_) {
        if (!b_L1_CDCp1_3_TOP120_DPHI2p618_3p142_) throw std::runtime_error("L1_CDCp1_3_TOP120_DPHI2p618_3p142 branch doesn't exist");
        b_L1_CDCp1_3_TOP120_DPHI2p618_3p142_->GetEntry(index);
        loaded_L1_CDCp1_3_TOP120_DPHI2p618_3p142_ = true;
    }
    return L1_CDCp1_3_TOP120_DPHI2p618_3p142_;
}
const bool &Nano::L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142() {
    if (!loaded_L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142_) counter_uncached_L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142_++;
    else counter_cached_L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142_++;
    if (!loaded_L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142_) {
        if (!b_L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142_) throw std::runtime_error("L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142 branch doesn't exist");
        b_L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142_->GetEntry(index);
        loaded_L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142_ = true;
    }
    return L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142_;
}
const bool &Nano::L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142() {
    if (!loaded_L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142_) counter_uncached_L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142_++;
    else counter_cached_L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142_++;
    if (!loaded_L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142_) {
        if (!b_L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142_) throw std::runtime_error("L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142 branch doesn't exist");
        b_L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142_->GetEntry(index);
        loaded_L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142_ = true;
    }
    return L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142_;
}
const bool &Nano::L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142() {
    if (!loaded_L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142_) counter_uncached_L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142_++;
    else counter_cached_L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142_++;
    if (!loaded_L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142_) {
        if (!b_L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142_) throw std::runtime_error("L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142 branch doesn't exist");
        b_L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142_->GetEntry(index);
        loaded_L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142_ = true;
    }
    return L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142_;
}
const bool &Nano::L1_CastorGap_BptxAND() {
    if (!loaded_L1_CastorGap_BptxAND_) counter_uncached_L1_CastorGap_BptxAND_++;
    else counter_cached_L1_CastorGap_BptxAND_++;
    if (!loaded_L1_CastorGap_BptxAND_) {
        if (!b_L1_CastorGap_BptxAND_) throw std::runtime_error("L1_CastorGap_BptxAND branch doesn't exist");
        b_L1_CastorGap_BptxAND_->GetEntry(index);
        loaded_L1_CastorGap_BptxAND_ = true;
    }
    return L1_CastorGap_BptxAND_;
}
const bool &Nano::L1_CastorHaloMuon() {
    if (!loaded_L1_CastorHaloMuon_) counter_uncached_L1_CastorHaloMuon_++;
    else counter_cached_L1_CastorHaloMuon_++;
    if (!loaded_L1_CastorHaloMuon_) {
        if (!b_L1_CastorHaloMuon_) throw std::runtime_error("L1_CastorHaloMuon branch doesn't exist");
        b_L1_CastorHaloMuon_->GetEntry(index);
        loaded_L1_CastorHaloMuon_ = true;
    }
    return L1_CastorHaloMuon_;
}
const bool &Nano::L1_CastorHaloMuon_BptxAND() {
    if (!loaded_L1_CastorHaloMuon_BptxAND_) counter_uncached_L1_CastorHaloMuon_BptxAND_++;
    else counter_cached_L1_CastorHaloMuon_BptxAND_++;
    if (!loaded_L1_CastorHaloMuon_BptxAND_) {
        if (!b_L1_CastorHaloMuon_BptxAND_) throw std::runtime_error("L1_CastorHaloMuon_BptxAND branch doesn't exist");
        b_L1_CastorHaloMuon_BptxAND_->GetEntry(index);
        loaded_L1_CastorHaloMuon_BptxAND_ = true;
    }
    return L1_CastorHaloMuon_BptxAND_;
}
const bool &Nano::L1_CastorHighJet_BptxAND() {
    if (!loaded_L1_CastorHighJet_BptxAND_) counter_uncached_L1_CastorHighJet_BptxAND_++;
    else counter_cached_L1_CastorHighJet_BptxAND_++;
    if (!loaded_L1_CastorHighJet_BptxAND_) {
        if (!b_L1_CastorHighJet_BptxAND_) throw std::runtime_error("L1_CastorHighJet_BptxAND branch doesn't exist");
        b_L1_CastorHighJet_BptxAND_->GetEntry(index);
        loaded_L1_CastorHighJet_BptxAND_ = true;
    }
    return L1_CastorHighJet_BptxAND_;
}
const bool &Nano::L1_CastorMediumJet_BptxAND() {
    if (!loaded_L1_CastorMediumJet_BptxAND_) counter_uncached_L1_CastorMediumJet_BptxAND_++;
    else counter_cached_L1_CastorMediumJet_BptxAND_++;
    if (!loaded_L1_CastorMediumJet_BptxAND_) {
        if (!b_L1_CastorMediumJet_BptxAND_) throw std::runtime_error("L1_CastorMediumJet_BptxAND branch doesn't exist");
        b_L1_CastorMediumJet_BptxAND_->GetEntry(index);
        loaded_L1_CastorMediumJet_BptxAND_ = true;
    }
    return L1_CastorMediumJet_BptxAND_;
}
const bool &Nano::L1_DoubleEG10_er1p2_dR_Max0p6() {
    if (!loaded_L1_DoubleEG10_er1p2_dR_Max0p6_) counter_uncached_L1_DoubleEG10_er1p2_dR_Max0p6_++;
    else counter_cached_L1_DoubleEG10_er1p2_dR_Max0p6_++;
    if (!loaded_L1_DoubleEG10_er1p2_dR_Max0p6_) {
        if (!b_L1_DoubleEG10_er1p2_dR_Max0p6_) throw std::runtime_error("L1_DoubleEG10_er1p2_dR_Max0p6 branch doesn't exist");
        b_L1_DoubleEG10_er1p2_dR_Max0p6_->GetEntry(index);
        loaded_L1_DoubleEG10_er1p2_dR_Max0p6_ = true;
    }
    return L1_DoubleEG10_er1p2_dR_Max0p6_;
}
const bool &Nano::L1_DoubleEG10p5_er1p2_dR_Max0p6() {
    if (!loaded_L1_DoubleEG10p5_er1p2_dR_Max0p6_) counter_uncached_L1_DoubleEG10p5_er1p2_dR_Max0p6_++;
    else counter_cached_L1_DoubleEG10p5_er1p2_dR_Max0p6_++;
    if (!loaded_L1_DoubleEG10p5_er1p2_dR_Max0p6_) {
        if (!b_L1_DoubleEG10p5_er1p2_dR_Max0p6_) throw std::runtime_error("L1_DoubleEG10p5_er1p2_dR_Max0p6 branch doesn't exist");
        b_L1_DoubleEG10p5_er1p2_dR_Max0p6_->GetEntry(index);
        loaded_L1_DoubleEG10p5_er1p2_dR_Max0p6_ = true;
    }
    return L1_DoubleEG10p5_er1p2_dR_Max0p6_;
}
const bool &Nano::L1_DoubleEG11_er1p2_dR_Max0p6() {
    if (!loaded_L1_DoubleEG11_er1p2_dR_Max0p6_) counter_uncached_L1_DoubleEG11_er1p2_dR_Max0p6_++;
    else counter_cached_L1_DoubleEG11_er1p2_dR_Max0p6_++;
    if (!loaded_L1_DoubleEG11_er1p2_dR_Max0p6_) {
        if (!b_L1_DoubleEG11_er1p2_dR_Max0p6_) throw std::runtime_error("L1_DoubleEG11_er1p2_dR_Max0p6 branch doesn't exist");
        b_L1_DoubleEG11_er1p2_dR_Max0p6_->GetEntry(index);
        loaded_L1_DoubleEG11_er1p2_dR_Max0p6_ = true;
    }
    return L1_DoubleEG11_er1p2_dR_Max0p6_;
}
const bool &Nano::L1_DoubleEG4_er1p2_dR_Max0p9() {
    if (!loaded_L1_DoubleEG4_er1p2_dR_Max0p9_) counter_uncached_L1_DoubleEG4_er1p2_dR_Max0p9_++;
    else counter_cached_L1_DoubleEG4_er1p2_dR_Max0p9_++;
    if (!loaded_L1_DoubleEG4_er1p2_dR_Max0p9_) {
        if (!b_L1_DoubleEG4_er1p2_dR_Max0p9_) throw std::runtime_error("L1_DoubleEG4_er1p2_dR_Max0p9 branch doesn't exist");
        b_L1_DoubleEG4_er1p2_dR_Max0p9_->GetEntry(index);
        loaded_L1_DoubleEG4_er1p2_dR_Max0p9_ = true;
    }
    return L1_DoubleEG4_er1p2_dR_Max0p9_;
}
const bool &Nano::L1_DoubleEG4p5_er1p2_dR_Max0p9() {
    if (!loaded_L1_DoubleEG4p5_er1p2_dR_Max0p9_) counter_uncached_L1_DoubleEG4p5_er1p2_dR_Max0p9_++;
    else counter_cached_L1_DoubleEG4p5_er1p2_dR_Max0p9_++;
    if (!loaded_L1_DoubleEG4p5_er1p2_dR_Max0p9_) {
        if (!b_L1_DoubleEG4p5_er1p2_dR_Max0p9_) throw std::runtime_error("L1_DoubleEG4p5_er1p2_dR_Max0p9 branch doesn't exist");
        b_L1_DoubleEG4p5_er1p2_dR_Max0p9_->GetEntry(index);
        loaded_L1_DoubleEG4p5_er1p2_dR_Max0p9_ = true;
    }
    return L1_DoubleEG4p5_er1p2_dR_Max0p9_;
}
const bool &Nano::L1_DoubleEG5_er1p2_dR_Max0p9() {
    if (!loaded_L1_DoubleEG5_er1p2_dR_Max0p9_) counter_uncached_L1_DoubleEG5_er1p2_dR_Max0p9_++;
    else counter_cached_L1_DoubleEG5_er1p2_dR_Max0p9_++;
    if (!loaded_L1_DoubleEG5_er1p2_dR_Max0p9_) {
        if (!b_L1_DoubleEG5_er1p2_dR_Max0p9_) throw std::runtime_error("L1_DoubleEG5_er1p2_dR_Max0p9 branch doesn't exist");
        b_L1_DoubleEG5_er1p2_dR_Max0p9_->GetEntry(index);
        loaded_L1_DoubleEG5_er1p2_dR_Max0p9_ = true;
    }
    return L1_DoubleEG5_er1p2_dR_Max0p9_;
}
const bool &Nano::L1_DoubleEG5p5_er1p2_dR_Max0p8() {
    if (!loaded_L1_DoubleEG5p5_er1p2_dR_Max0p8_) counter_uncached_L1_DoubleEG5p5_er1p2_dR_Max0p8_++;
    else counter_cached_L1_DoubleEG5p5_er1p2_dR_Max0p8_++;
    if (!loaded_L1_DoubleEG5p5_er1p2_dR_Max0p8_) {
        if (!b_L1_DoubleEG5p5_er1p2_dR_Max0p8_) throw std::runtime_error("L1_DoubleEG5p5_er1p2_dR_Max0p8 branch doesn't exist");
        b_L1_DoubleEG5p5_er1p2_dR_Max0p8_->GetEntry(index);
        loaded_L1_DoubleEG5p5_er1p2_dR_Max0p8_ = true;
    }
    return L1_DoubleEG5p5_er1p2_dR_Max0p8_;
}
const bool &Nano::L1_DoubleEG6_HTT240er() {
    if (!loaded_L1_DoubleEG6_HTT240er_) counter_uncached_L1_DoubleEG6_HTT240er_++;
    else counter_cached_L1_DoubleEG6_HTT240er_++;
    if (!loaded_L1_DoubleEG6_HTT240er_) {
        if (!b_L1_DoubleEG6_HTT240er_) throw std::runtime_error("L1_DoubleEG6_HTT240er branch doesn't exist");
        b_L1_DoubleEG6_HTT240er_->GetEntry(index);
        loaded_L1_DoubleEG6_HTT240er_ = true;
    }
    return L1_DoubleEG6_HTT240er_;
}
const bool &Nano::L1_DoubleEG6_HTT250er() {
    if (!loaded_L1_DoubleEG6_HTT250er_) counter_uncached_L1_DoubleEG6_HTT250er_++;
    else counter_cached_L1_DoubleEG6_HTT250er_++;
    if (!loaded_L1_DoubleEG6_HTT250er_) {
        if (!b_L1_DoubleEG6_HTT250er_) throw std::runtime_error("L1_DoubleEG6_HTT250er branch doesn't exist");
        b_L1_DoubleEG6_HTT250er_->GetEntry(index);
        loaded_L1_DoubleEG6_HTT250er_ = true;
    }
    return L1_DoubleEG6_HTT250er_;
}
const bool &Nano::L1_DoubleEG6_HTT255() {
    if (!loaded_L1_DoubleEG6_HTT255_) counter_uncached_L1_DoubleEG6_HTT255_++;
    else counter_cached_L1_DoubleEG6_HTT255_++;
    if (!loaded_L1_DoubleEG6_HTT255_) {
        if (!b_L1_DoubleEG6_HTT255_) throw std::runtime_error("L1_DoubleEG6_HTT255 branch doesn't exist");
        b_L1_DoubleEG6_HTT255_->GetEntry(index);
        loaded_L1_DoubleEG6_HTT255_ = true;
    }
    return L1_DoubleEG6_HTT255_;
}
const bool &Nano::L1_DoubleEG6_HTT255er() {
    if (!loaded_L1_DoubleEG6_HTT255er_) counter_uncached_L1_DoubleEG6_HTT255er_++;
    else counter_cached_L1_DoubleEG6_HTT255er_++;
    if (!loaded_L1_DoubleEG6_HTT255er_) {
        if (!b_L1_DoubleEG6_HTT255er_) throw std::runtime_error("L1_DoubleEG6_HTT255er branch doesn't exist");
        b_L1_DoubleEG6_HTT255er_->GetEntry(index);
        loaded_L1_DoubleEG6_HTT255er_ = true;
    }
    return L1_DoubleEG6_HTT255er_;
}
const bool &Nano::L1_DoubleEG6_HTT270er() {
    if (!loaded_L1_DoubleEG6_HTT270er_) counter_uncached_L1_DoubleEG6_HTT270er_++;
    else counter_cached_L1_DoubleEG6_HTT270er_++;
    if (!loaded_L1_DoubleEG6_HTT270er_) {
        if (!b_L1_DoubleEG6_HTT270er_) throw std::runtime_error("L1_DoubleEG6_HTT270er branch doesn't exist");
        b_L1_DoubleEG6_HTT270er_->GetEntry(index);
        loaded_L1_DoubleEG6_HTT270er_ = true;
    }
    return L1_DoubleEG6_HTT270er_;
}
const bool &Nano::L1_DoubleEG6_HTT300er() {
    if (!loaded_L1_DoubleEG6_HTT300er_) counter_uncached_L1_DoubleEG6_HTT300er_++;
    else counter_cached_L1_DoubleEG6_HTT300er_++;
    if (!loaded_L1_DoubleEG6_HTT300er_) {
        if (!b_L1_DoubleEG6_HTT300er_) throw std::runtime_error("L1_DoubleEG6_HTT300er branch doesn't exist");
        b_L1_DoubleEG6_HTT300er_->GetEntry(index);
        loaded_L1_DoubleEG6_HTT300er_ = true;
    }
    return L1_DoubleEG6_HTT300er_;
}
const bool &Nano::L1_DoubleEG6_er1p2_dR_Max0p8() {
    if (!loaded_L1_DoubleEG6_er1p2_dR_Max0p8_) counter_uncached_L1_DoubleEG6_er1p2_dR_Max0p8_++;
    else counter_cached_L1_DoubleEG6_er1p2_dR_Max0p8_++;
    if (!loaded_L1_DoubleEG6_er1p2_dR_Max0p8_) {
        if (!b_L1_DoubleEG6_er1p2_dR_Max0p8_) throw std::runtime_error("L1_DoubleEG6_er1p2_dR_Max0p8 branch doesn't exist");
        b_L1_DoubleEG6_er1p2_dR_Max0p8_->GetEntry(index);
        loaded_L1_DoubleEG6_er1p2_dR_Max0p8_ = true;
    }
    return L1_DoubleEG6_er1p2_dR_Max0p8_;
}
const bool &Nano::L1_DoubleEG6p5_er1p2_dR_Max0p8() {
    if (!loaded_L1_DoubleEG6p5_er1p2_dR_Max0p8_) counter_uncached_L1_DoubleEG6p5_er1p2_dR_Max0p8_++;
    else counter_cached_L1_DoubleEG6p5_er1p2_dR_Max0p8_++;
    if (!loaded_L1_DoubleEG6p5_er1p2_dR_Max0p8_) {
        if (!b_L1_DoubleEG6p5_er1p2_dR_Max0p8_) throw std::runtime_error("L1_DoubleEG6p5_er1p2_dR_Max0p8 branch doesn't exist");
        b_L1_DoubleEG6p5_er1p2_dR_Max0p8_->GetEntry(index);
        loaded_L1_DoubleEG6p5_er1p2_dR_Max0p8_ = true;
    }
    return L1_DoubleEG6p5_er1p2_dR_Max0p8_;
}
const bool &Nano::L1_DoubleEG7_er1p2_dR_Max0p8() {
    if (!loaded_L1_DoubleEG7_er1p2_dR_Max0p8_) counter_uncached_L1_DoubleEG7_er1p2_dR_Max0p8_++;
    else counter_cached_L1_DoubleEG7_er1p2_dR_Max0p8_++;
    if (!loaded_L1_DoubleEG7_er1p2_dR_Max0p8_) {
        if (!b_L1_DoubleEG7_er1p2_dR_Max0p8_) throw std::runtime_error("L1_DoubleEG7_er1p2_dR_Max0p8 branch doesn't exist");
        b_L1_DoubleEG7_er1p2_dR_Max0p8_->GetEntry(index);
        loaded_L1_DoubleEG7_er1p2_dR_Max0p8_ = true;
    }
    return L1_DoubleEG7_er1p2_dR_Max0p8_;
}
const bool &Nano::L1_DoubleEG7p5_er1p2_dR_Max0p7() {
    if (!loaded_L1_DoubleEG7p5_er1p2_dR_Max0p7_) counter_uncached_L1_DoubleEG7p5_er1p2_dR_Max0p7_++;
    else counter_cached_L1_DoubleEG7p5_er1p2_dR_Max0p7_++;
    if (!loaded_L1_DoubleEG7p5_er1p2_dR_Max0p7_) {
        if (!b_L1_DoubleEG7p5_er1p2_dR_Max0p7_) throw std::runtime_error("L1_DoubleEG7p5_er1p2_dR_Max0p7 branch doesn't exist");
        b_L1_DoubleEG7p5_er1p2_dR_Max0p7_->GetEntry(index);
        loaded_L1_DoubleEG7p5_er1p2_dR_Max0p7_ = true;
    }
    return L1_DoubleEG7p5_er1p2_dR_Max0p7_;
}
const bool &Nano::L1_DoubleEG8_er1p2_dR_Max0p7() {
    if (!loaded_L1_DoubleEG8_er1p2_dR_Max0p7_) counter_uncached_L1_DoubleEG8_er1p2_dR_Max0p7_++;
    else counter_cached_L1_DoubleEG8_er1p2_dR_Max0p7_++;
    if (!loaded_L1_DoubleEG8_er1p2_dR_Max0p7_) {
        if (!b_L1_DoubleEG8_er1p2_dR_Max0p7_) throw std::runtime_error("L1_DoubleEG8_er1p2_dR_Max0p7 branch doesn't exist");
        b_L1_DoubleEG8_er1p2_dR_Max0p7_->GetEntry(index);
        loaded_L1_DoubleEG8_er1p2_dR_Max0p7_ = true;
    }
    return L1_DoubleEG8_er1p2_dR_Max0p7_;
}
const bool &Nano::L1_DoubleEG8er2p5_HTT260er() {
    if (!loaded_L1_DoubleEG8er2p5_HTT260er_) counter_uncached_L1_DoubleEG8er2p5_HTT260er_++;
    else counter_cached_L1_DoubleEG8er2p5_HTT260er_++;
    if (!loaded_L1_DoubleEG8er2p5_HTT260er_) {
        if (!b_L1_DoubleEG8er2p5_HTT260er_) throw std::runtime_error("L1_DoubleEG8er2p5_HTT260er branch doesn't exist");
        b_L1_DoubleEG8er2p5_HTT260er_->GetEntry(index);
        loaded_L1_DoubleEG8er2p5_HTT260er_ = true;
    }
    return L1_DoubleEG8er2p5_HTT260er_;
}
const bool &Nano::L1_DoubleEG8er2p5_HTT280er() {
    if (!loaded_L1_DoubleEG8er2p5_HTT280er_) counter_uncached_L1_DoubleEG8er2p5_HTT280er_++;
    else counter_cached_L1_DoubleEG8er2p5_HTT280er_++;
    if (!loaded_L1_DoubleEG8er2p5_HTT280er_) {
        if (!b_L1_DoubleEG8er2p5_HTT280er_) throw std::runtime_error("L1_DoubleEG8er2p5_HTT280er branch doesn't exist");
        b_L1_DoubleEG8er2p5_HTT280er_->GetEntry(index);
        loaded_L1_DoubleEG8er2p5_HTT280er_ = true;
    }
    return L1_DoubleEG8er2p5_HTT280er_;
}
const bool &Nano::L1_DoubleEG8er2p5_HTT300er() {
    if (!loaded_L1_DoubleEG8er2p5_HTT300er_) counter_uncached_L1_DoubleEG8er2p5_HTT300er_++;
    else counter_cached_L1_DoubleEG8er2p5_HTT300er_++;
    if (!loaded_L1_DoubleEG8er2p5_HTT300er_) {
        if (!b_L1_DoubleEG8er2p5_HTT300er_) throw std::runtime_error("L1_DoubleEG8er2p5_HTT300er branch doesn't exist");
        b_L1_DoubleEG8er2p5_HTT300er_->GetEntry(index);
        loaded_L1_DoubleEG8er2p5_HTT300er_ = true;
    }
    return L1_DoubleEG8er2p5_HTT300er_;
}
const bool &Nano::L1_DoubleEG8er2p5_HTT320er() {
    if (!loaded_L1_DoubleEG8er2p5_HTT320er_) counter_uncached_L1_DoubleEG8er2p5_HTT320er_++;
    else counter_cached_L1_DoubleEG8er2p5_HTT320er_++;
    if (!loaded_L1_DoubleEG8er2p5_HTT320er_) {
        if (!b_L1_DoubleEG8er2p5_HTT320er_) throw std::runtime_error("L1_DoubleEG8er2p5_HTT320er branch doesn't exist");
        b_L1_DoubleEG8er2p5_HTT320er_->GetEntry(index);
        loaded_L1_DoubleEG8er2p5_HTT320er_ = true;
    }
    return L1_DoubleEG8er2p5_HTT320er_;
}
const bool &Nano::L1_DoubleEG8er2p5_HTT340er() {
    if (!loaded_L1_DoubleEG8er2p5_HTT340er_) counter_uncached_L1_DoubleEG8er2p5_HTT340er_++;
    else counter_cached_L1_DoubleEG8er2p5_HTT340er_++;
    if (!loaded_L1_DoubleEG8er2p5_HTT340er_) {
        if (!b_L1_DoubleEG8er2p5_HTT340er_) throw std::runtime_error("L1_DoubleEG8er2p5_HTT340er branch doesn't exist");
        b_L1_DoubleEG8er2p5_HTT340er_->GetEntry(index);
        loaded_L1_DoubleEG8er2p5_HTT340er_ = true;
    }
    return L1_DoubleEG8er2p5_HTT340er_;
}
const bool &Nano::L1_DoubleEG8er2p6_HTT255er() {
    if (!loaded_L1_DoubleEG8er2p6_HTT255er_) counter_uncached_L1_DoubleEG8er2p6_HTT255er_++;
    else counter_cached_L1_DoubleEG8er2p6_HTT255er_++;
    if (!loaded_L1_DoubleEG8er2p6_HTT255er_) {
        if (!b_L1_DoubleEG8er2p6_HTT255er_) throw std::runtime_error("L1_DoubleEG8er2p6_HTT255er branch doesn't exist");
        b_L1_DoubleEG8er2p6_HTT255er_->GetEntry(index);
        loaded_L1_DoubleEG8er2p6_HTT255er_ = true;
    }
    return L1_DoubleEG8er2p6_HTT255er_;
}
const bool &Nano::L1_DoubleEG8er2p6_HTT270er() {
    if (!loaded_L1_DoubleEG8er2p6_HTT270er_) counter_uncached_L1_DoubleEG8er2p6_HTT270er_++;
    else counter_cached_L1_DoubleEG8er2p6_HTT270er_++;
    if (!loaded_L1_DoubleEG8er2p6_HTT270er_) {
        if (!b_L1_DoubleEG8er2p6_HTT270er_) throw std::runtime_error("L1_DoubleEG8er2p6_HTT270er branch doesn't exist");
        b_L1_DoubleEG8er2p6_HTT270er_->GetEntry(index);
        loaded_L1_DoubleEG8er2p6_HTT270er_ = true;
    }
    return L1_DoubleEG8er2p6_HTT270er_;
}
const bool &Nano::L1_DoubleEG8er2p6_HTT300er() {
    if (!loaded_L1_DoubleEG8er2p6_HTT300er_) counter_uncached_L1_DoubleEG8er2p6_HTT300er_++;
    else counter_cached_L1_DoubleEG8er2p6_HTT300er_++;
    if (!loaded_L1_DoubleEG8er2p6_HTT300er_) {
        if (!b_L1_DoubleEG8er2p6_HTT300er_) throw std::runtime_error("L1_DoubleEG8er2p6_HTT300er branch doesn't exist");
        b_L1_DoubleEG8er2p6_HTT300er_->GetEntry(index);
        loaded_L1_DoubleEG8er2p6_HTT300er_ = true;
    }
    return L1_DoubleEG8er2p6_HTT300er_;
}
const bool &Nano::L1_DoubleEG8p5_er1p2_dR_Max0p7() {
    if (!loaded_L1_DoubleEG8p5_er1p2_dR_Max0p7_) counter_uncached_L1_DoubleEG8p5_er1p2_dR_Max0p7_++;
    else counter_cached_L1_DoubleEG8p5_er1p2_dR_Max0p7_++;
    if (!loaded_L1_DoubleEG8p5_er1p2_dR_Max0p7_) {
        if (!b_L1_DoubleEG8p5_er1p2_dR_Max0p7_) throw std::runtime_error("L1_DoubleEG8p5_er1p2_dR_Max0p7 branch doesn't exist");
        b_L1_DoubleEG8p5_er1p2_dR_Max0p7_->GetEntry(index);
        loaded_L1_DoubleEG8p5_er1p2_dR_Max0p7_ = true;
    }
    return L1_DoubleEG8p5_er1p2_dR_Max0p7_;
}
const bool &Nano::L1_DoubleEG9_er1p2_dR_Max0p7() {
    if (!loaded_L1_DoubleEG9_er1p2_dR_Max0p7_) counter_uncached_L1_DoubleEG9_er1p2_dR_Max0p7_++;
    else counter_cached_L1_DoubleEG9_er1p2_dR_Max0p7_++;
    if (!loaded_L1_DoubleEG9_er1p2_dR_Max0p7_) {
        if (!b_L1_DoubleEG9_er1p2_dR_Max0p7_) throw std::runtime_error("L1_DoubleEG9_er1p2_dR_Max0p7 branch doesn't exist");
        b_L1_DoubleEG9_er1p2_dR_Max0p7_->GetEntry(index);
        loaded_L1_DoubleEG9_er1p2_dR_Max0p7_ = true;
    }
    return L1_DoubleEG9_er1p2_dR_Max0p7_;
}
const bool &Nano::L1_DoubleEG9p5_er1p2_dR_Max0p6() {
    if (!loaded_L1_DoubleEG9p5_er1p2_dR_Max0p6_) counter_uncached_L1_DoubleEG9p5_er1p2_dR_Max0p6_++;
    else counter_cached_L1_DoubleEG9p5_er1p2_dR_Max0p6_++;
    if (!loaded_L1_DoubleEG9p5_er1p2_dR_Max0p6_) {
        if (!b_L1_DoubleEG9p5_er1p2_dR_Max0p6_) throw std::runtime_error("L1_DoubleEG9p5_er1p2_dR_Max0p6 branch doesn't exist");
        b_L1_DoubleEG9p5_er1p2_dR_Max0p6_->GetEntry(index);
        loaded_L1_DoubleEG9p5_er1p2_dR_Max0p6_ = true;
    }
    return L1_DoubleEG9p5_er1p2_dR_Max0p6_;
}
const bool &Nano::L1_DoubleEG_15_10() {
    if (!loaded_L1_DoubleEG_15_10_) counter_uncached_L1_DoubleEG_15_10_++;
    else counter_cached_L1_DoubleEG_15_10_++;
    if (!loaded_L1_DoubleEG_15_10_) {
        if (!b_L1_DoubleEG_15_10_) throw std::runtime_error("L1_DoubleEG_15_10 branch doesn't exist");
        b_L1_DoubleEG_15_10_->GetEntry(index);
        loaded_L1_DoubleEG_15_10_ = true;
    }
    return L1_DoubleEG_15_10_;
}
const bool &Nano::L1_DoubleEG_15_10_er2p5() {
    if (!loaded_L1_DoubleEG_15_10_er2p5_) counter_uncached_L1_DoubleEG_15_10_er2p5_++;
    else counter_cached_L1_DoubleEG_15_10_er2p5_++;
    if (!loaded_L1_DoubleEG_15_10_er2p5_) {
        if (!b_L1_DoubleEG_15_10_er2p5_) throw std::runtime_error("L1_DoubleEG_15_10_er2p5 branch doesn't exist");
        b_L1_DoubleEG_15_10_er2p5_->GetEntry(index);
        loaded_L1_DoubleEG_15_10_er2p5_ = true;
    }
    return L1_DoubleEG_15_10_er2p5_;
}
const bool &Nano::L1_DoubleEG_18_17() {
    if (!loaded_L1_DoubleEG_18_17_) counter_uncached_L1_DoubleEG_18_17_++;
    else counter_cached_L1_DoubleEG_18_17_++;
    if (!loaded_L1_DoubleEG_18_17_) {
        if (!b_L1_DoubleEG_18_17_) throw std::runtime_error("L1_DoubleEG_18_17 branch doesn't exist");
        b_L1_DoubleEG_18_17_->GetEntry(index);
        loaded_L1_DoubleEG_18_17_ = true;
    }
    return L1_DoubleEG_18_17_;
}
const bool &Nano::L1_DoubleEG_20_10_er2p5() {
    if (!loaded_L1_DoubleEG_20_10_er2p5_) counter_uncached_L1_DoubleEG_20_10_er2p5_++;
    else counter_cached_L1_DoubleEG_20_10_er2p5_++;
    if (!loaded_L1_DoubleEG_20_10_er2p5_) {
        if (!b_L1_DoubleEG_20_10_er2p5_) throw std::runtime_error("L1_DoubleEG_20_10_er2p5 branch doesn't exist");
        b_L1_DoubleEG_20_10_er2p5_->GetEntry(index);
        loaded_L1_DoubleEG_20_10_er2p5_ = true;
    }
    return L1_DoubleEG_20_10_er2p5_;
}
const bool &Nano::L1_DoubleEG_20_18() {
    if (!loaded_L1_DoubleEG_20_18_) counter_uncached_L1_DoubleEG_20_18_++;
    else counter_cached_L1_DoubleEG_20_18_++;
    if (!loaded_L1_DoubleEG_20_18_) {
        if (!b_L1_DoubleEG_20_18_) throw std::runtime_error("L1_DoubleEG_20_18 branch doesn't exist");
        b_L1_DoubleEG_20_18_->GetEntry(index);
        loaded_L1_DoubleEG_20_18_ = true;
    }
    return L1_DoubleEG_20_18_;
}
const bool &Nano::L1_DoubleEG_22_10() {
    if (!loaded_L1_DoubleEG_22_10_) counter_uncached_L1_DoubleEG_22_10_++;
    else counter_cached_L1_DoubleEG_22_10_++;
    if (!loaded_L1_DoubleEG_22_10_) {
        if (!b_L1_DoubleEG_22_10_) throw std::runtime_error("L1_DoubleEG_22_10 branch doesn't exist");
        b_L1_DoubleEG_22_10_->GetEntry(index);
        loaded_L1_DoubleEG_22_10_ = true;
    }
    return L1_DoubleEG_22_10_;
}
const bool &Nano::L1_DoubleEG_22_10_er2p5() {
    if (!loaded_L1_DoubleEG_22_10_er2p5_) counter_uncached_L1_DoubleEG_22_10_er2p5_++;
    else counter_cached_L1_DoubleEG_22_10_er2p5_++;
    if (!loaded_L1_DoubleEG_22_10_er2p5_) {
        if (!b_L1_DoubleEG_22_10_er2p5_) throw std::runtime_error("L1_DoubleEG_22_10_er2p5 branch doesn't exist");
        b_L1_DoubleEG_22_10_er2p5_->GetEntry(index);
        loaded_L1_DoubleEG_22_10_er2p5_ = true;
    }
    return L1_DoubleEG_22_10_er2p5_;
}
const bool &Nano::L1_DoubleEG_22_12() {
    if (!loaded_L1_DoubleEG_22_12_) counter_uncached_L1_DoubleEG_22_12_++;
    else counter_cached_L1_DoubleEG_22_12_++;
    if (!loaded_L1_DoubleEG_22_12_) {
        if (!b_L1_DoubleEG_22_12_) throw std::runtime_error("L1_DoubleEG_22_12 branch doesn't exist");
        b_L1_DoubleEG_22_12_->GetEntry(index);
        loaded_L1_DoubleEG_22_12_ = true;
    }
    return L1_DoubleEG_22_12_;
}
const bool &Nano::L1_DoubleEG_22_15() {
    if (!loaded_L1_DoubleEG_22_15_) counter_uncached_L1_DoubleEG_22_15_++;
    else counter_cached_L1_DoubleEG_22_15_++;
    if (!loaded_L1_DoubleEG_22_15_) {
        if (!b_L1_DoubleEG_22_15_) throw std::runtime_error("L1_DoubleEG_22_15 branch doesn't exist");
        b_L1_DoubleEG_22_15_->GetEntry(index);
        loaded_L1_DoubleEG_22_15_ = true;
    }
    return L1_DoubleEG_22_15_;
}
const bool &Nano::L1_DoubleEG_23_10() {
    if (!loaded_L1_DoubleEG_23_10_) counter_uncached_L1_DoubleEG_23_10_++;
    else counter_cached_L1_DoubleEG_23_10_++;
    if (!loaded_L1_DoubleEG_23_10_) {
        if (!b_L1_DoubleEG_23_10_) throw std::runtime_error("L1_DoubleEG_23_10 branch doesn't exist");
        b_L1_DoubleEG_23_10_->GetEntry(index);
        loaded_L1_DoubleEG_23_10_ = true;
    }
    return L1_DoubleEG_23_10_;
}
const bool &Nano::L1_DoubleEG_24_17() {
    if (!loaded_L1_DoubleEG_24_17_) counter_uncached_L1_DoubleEG_24_17_++;
    else counter_cached_L1_DoubleEG_24_17_++;
    if (!loaded_L1_DoubleEG_24_17_) {
        if (!b_L1_DoubleEG_24_17_) throw std::runtime_error("L1_DoubleEG_24_17 branch doesn't exist");
        b_L1_DoubleEG_24_17_->GetEntry(index);
        loaded_L1_DoubleEG_24_17_ = true;
    }
    return L1_DoubleEG_24_17_;
}
const bool &Nano::L1_DoubleEG_25_12() {
    if (!loaded_L1_DoubleEG_25_12_) counter_uncached_L1_DoubleEG_25_12_++;
    else counter_cached_L1_DoubleEG_25_12_++;
    if (!loaded_L1_DoubleEG_25_12_) {
        if (!b_L1_DoubleEG_25_12_) throw std::runtime_error("L1_DoubleEG_25_12 branch doesn't exist");
        b_L1_DoubleEG_25_12_->GetEntry(index);
        loaded_L1_DoubleEG_25_12_ = true;
    }
    return L1_DoubleEG_25_12_;
}
const bool &Nano::L1_DoubleEG_25_12_er2p5() {
    if (!loaded_L1_DoubleEG_25_12_er2p5_) counter_uncached_L1_DoubleEG_25_12_er2p5_++;
    else counter_cached_L1_DoubleEG_25_12_er2p5_++;
    if (!loaded_L1_DoubleEG_25_12_er2p5_) {
        if (!b_L1_DoubleEG_25_12_er2p5_) throw std::runtime_error("L1_DoubleEG_25_12_er2p5 branch doesn't exist");
        b_L1_DoubleEG_25_12_er2p5_->GetEntry(index);
        loaded_L1_DoubleEG_25_12_er2p5_ = true;
    }
    return L1_DoubleEG_25_12_er2p5_;
}
const bool &Nano::L1_DoubleEG_25_13() {
    if (!loaded_L1_DoubleEG_25_13_) counter_uncached_L1_DoubleEG_25_13_++;
    else counter_cached_L1_DoubleEG_25_13_++;
    if (!loaded_L1_DoubleEG_25_13_) {
        if (!b_L1_DoubleEG_25_13_) throw std::runtime_error("L1_DoubleEG_25_13 branch doesn't exist");
        b_L1_DoubleEG_25_13_->GetEntry(index);
        loaded_L1_DoubleEG_25_13_ = true;
    }
    return L1_DoubleEG_25_13_;
}
const bool &Nano::L1_DoubleEG_25_14() {
    if (!loaded_L1_DoubleEG_25_14_) counter_uncached_L1_DoubleEG_25_14_++;
    else counter_cached_L1_DoubleEG_25_14_++;
    if (!loaded_L1_DoubleEG_25_14_) {
        if (!b_L1_DoubleEG_25_14_) throw std::runtime_error("L1_DoubleEG_25_14 branch doesn't exist");
        b_L1_DoubleEG_25_14_->GetEntry(index);
        loaded_L1_DoubleEG_25_14_ = true;
    }
    return L1_DoubleEG_25_14_;
}
const bool &Nano::L1_DoubleEG_25_14_er2p5() {
    if (!loaded_L1_DoubleEG_25_14_er2p5_) counter_uncached_L1_DoubleEG_25_14_er2p5_++;
    else counter_cached_L1_DoubleEG_25_14_er2p5_++;
    if (!loaded_L1_DoubleEG_25_14_er2p5_) {
        if (!b_L1_DoubleEG_25_14_er2p5_) throw std::runtime_error("L1_DoubleEG_25_14_er2p5 branch doesn't exist");
        b_L1_DoubleEG_25_14_er2p5_->GetEntry(index);
        loaded_L1_DoubleEG_25_14_er2p5_ = true;
    }
    return L1_DoubleEG_25_14_er2p5_;
}
const bool &Nano::L1_DoubleEG_27_14_er2p5() {
    if (!loaded_L1_DoubleEG_27_14_er2p5_) counter_uncached_L1_DoubleEG_27_14_er2p5_++;
    else counter_cached_L1_DoubleEG_27_14_er2p5_++;
    if (!loaded_L1_DoubleEG_27_14_er2p5_) {
        if (!b_L1_DoubleEG_27_14_er2p5_) throw std::runtime_error("L1_DoubleEG_27_14_er2p5 branch doesn't exist");
        b_L1_DoubleEG_27_14_er2p5_->GetEntry(index);
        loaded_L1_DoubleEG_27_14_er2p5_ = true;
    }
    return L1_DoubleEG_27_14_er2p5_;
}
const bool &Nano::L1_DoubleEG_Iso23_10() {
    if (!loaded_L1_DoubleEG_Iso23_10_) counter_uncached_L1_DoubleEG_Iso23_10_++;
    else counter_cached_L1_DoubleEG_Iso23_10_++;
    if (!loaded_L1_DoubleEG_Iso23_10_) {
        if (!b_L1_DoubleEG_Iso23_10_) throw std::runtime_error("L1_DoubleEG_Iso23_10 branch doesn't exist");
        b_L1_DoubleEG_Iso23_10_->GetEntry(index);
        loaded_L1_DoubleEG_Iso23_10_ = true;
    }
    return L1_DoubleEG_Iso23_10_;
}
const bool &Nano::L1_DoubleEG_Iso24_10() {
    if (!loaded_L1_DoubleEG_Iso24_10_) counter_uncached_L1_DoubleEG_Iso24_10_++;
    else counter_cached_L1_DoubleEG_Iso24_10_++;
    if (!loaded_L1_DoubleEG_Iso24_10_) {
        if (!b_L1_DoubleEG_Iso24_10_) throw std::runtime_error("L1_DoubleEG_Iso24_10 branch doesn't exist");
        b_L1_DoubleEG_Iso24_10_->GetEntry(index);
        loaded_L1_DoubleEG_Iso24_10_ = true;
    }
    return L1_DoubleEG_Iso24_10_;
}
const bool &Nano::L1_DoubleEG_LooseIso16_LooseIso12_er1p5() {
    if (!loaded_L1_DoubleEG_LooseIso16_LooseIso12_er1p5_) counter_uncached_L1_DoubleEG_LooseIso16_LooseIso12_er1p5_++;
    else counter_cached_L1_DoubleEG_LooseIso16_LooseIso12_er1p5_++;
    if (!loaded_L1_DoubleEG_LooseIso16_LooseIso12_er1p5_) {
        if (!b_L1_DoubleEG_LooseIso16_LooseIso12_er1p5_) throw std::runtime_error("L1_DoubleEG_LooseIso16_LooseIso12_er1p5 branch doesn't exist");
        b_L1_DoubleEG_LooseIso16_LooseIso12_er1p5_->GetEntry(index);
        loaded_L1_DoubleEG_LooseIso16_LooseIso12_er1p5_ = true;
    }
    return L1_DoubleEG_LooseIso16_LooseIso12_er1p5_;
}
const bool &Nano::L1_DoubleEG_LooseIso18_LooseIso12_er1p5() {
    if (!loaded_L1_DoubleEG_LooseIso18_LooseIso12_er1p5_) counter_uncached_L1_DoubleEG_LooseIso18_LooseIso12_er1p5_++;
    else counter_cached_L1_DoubleEG_LooseIso18_LooseIso12_er1p5_++;
    if (!loaded_L1_DoubleEG_LooseIso18_LooseIso12_er1p5_) {
        if (!b_L1_DoubleEG_LooseIso18_LooseIso12_er1p5_) throw std::runtime_error("L1_DoubleEG_LooseIso18_LooseIso12_er1p5 branch doesn't exist");
        b_L1_DoubleEG_LooseIso18_LooseIso12_er1p5_->GetEntry(index);
        loaded_L1_DoubleEG_LooseIso18_LooseIso12_er1p5_ = true;
    }
    return L1_DoubleEG_LooseIso18_LooseIso12_er1p5_;
}
const bool &Nano::L1_DoubleEG_LooseIso20_10_er2p5() {
    if (!loaded_L1_DoubleEG_LooseIso20_10_er2p5_) counter_uncached_L1_DoubleEG_LooseIso20_10_er2p5_++;
    else counter_cached_L1_DoubleEG_LooseIso20_10_er2p5_++;
    if (!loaded_L1_DoubleEG_LooseIso20_10_er2p5_) {
        if (!b_L1_DoubleEG_LooseIso20_10_er2p5_) throw std::runtime_error("L1_DoubleEG_LooseIso20_10_er2p5 branch doesn't exist");
        b_L1_DoubleEG_LooseIso20_10_er2p5_->GetEntry(index);
        loaded_L1_DoubleEG_LooseIso20_10_er2p5_ = true;
    }
    return L1_DoubleEG_LooseIso20_10_er2p5_;
}
const bool &Nano::L1_DoubleEG_LooseIso20_LooseIso12_er1p5() {
    if (!loaded_L1_DoubleEG_LooseIso20_LooseIso12_er1p5_) counter_uncached_L1_DoubleEG_LooseIso20_LooseIso12_er1p5_++;
    else counter_cached_L1_DoubleEG_LooseIso20_LooseIso12_er1p5_++;
    if (!loaded_L1_DoubleEG_LooseIso20_LooseIso12_er1p5_) {
        if (!b_L1_DoubleEG_LooseIso20_LooseIso12_er1p5_) throw std::runtime_error("L1_DoubleEG_LooseIso20_LooseIso12_er1p5 branch doesn't exist");
        b_L1_DoubleEG_LooseIso20_LooseIso12_er1p5_->GetEntry(index);
        loaded_L1_DoubleEG_LooseIso20_LooseIso12_er1p5_ = true;
    }
    return L1_DoubleEG_LooseIso20_LooseIso12_er1p5_;
}
const bool &Nano::L1_DoubleEG_LooseIso22_10_er2p5() {
    if (!loaded_L1_DoubleEG_LooseIso22_10_er2p5_) counter_uncached_L1_DoubleEG_LooseIso22_10_er2p5_++;
    else counter_cached_L1_DoubleEG_LooseIso22_10_er2p5_++;
    if (!loaded_L1_DoubleEG_LooseIso22_10_er2p5_) {
        if (!b_L1_DoubleEG_LooseIso22_10_er2p5_) throw std::runtime_error("L1_DoubleEG_LooseIso22_10_er2p5 branch doesn't exist");
        b_L1_DoubleEG_LooseIso22_10_er2p5_->GetEntry(index);
        loaded_L1_DoubleEG_LooseIso22_10_er2p5_ = true;
    }
    return L1_DoubleEG_LooseIso22_10_er2p5_;
}
const bool &Nano::L1_DoubleEG_LooseIso22_12_er2p5() {
    if (!loaded_L1_DoubleEG_LooseIso22_12_er2p5_) counter_uncached_L1_DoubleEG_LooseIso22_12_er2p5_++;
    else counter_cached_L1_DoubleEG_LooseIso22_12_er2p5_++;
    if (!loaded_L1_DoubleEG_LooseIso22_12_er2p5_) {
        if (!b_L1_DoubleEG_LooseIso22_12_er2p5_) throw std::runtime_error("L1_DoubleEG_LooseIso22_12_er2p5 branch doesn't exist");
        b_L1_DoubleEG_LooseIso22_12_er2p5_->GetEntry(index);
        loaded_L1_DoubleEG_LooseIso22_12_er2p5_ = true;
    }
    return L1_DoubleEG_LooseIso22_12_er2p5_;
}
const bool &Nano::L1_DoubleEG_LooseIso22_LooseIso12_er1p5() {
    if (!loaded_L1_DoubleEG_LooseIso22_LooseIso12_er1p5_) counter_uncached_L1_DoubleEG_LooseIso22_LooseIso12_er1p5_++;
    else counter_cached_L1_DoubleEG_LooseIso22_LooseIso12_er1p5_++;
    if (!loaded_L1_DoubleEG_LooseIso22_LooseIso12_er1p5_) {
        if (!b_L1_DoubleEG_LooseIso22_LooseIso12_er1p5_) throw std::runtime_error("L1_DoubleEG_LooseIso22_LooseIso12_er1p5 branch doesn't exist");
        b_L1_DoubleEG_LooseIso22_LooseIso12_er1p5_->GetEntry(index);
        loaded_L1_DoubleEG_LooseIso22_LooseIso12_er1p5_ = true;
    }
    return L1_DoubleEG_LooseIso22_LooseIso12_er1p5_;
}
const bool &Nano::L1_DoubleEG_LooseIso23_10() {
    if (!loaded_L1_DoubleEG_LooseIso23_10_) counter_uncached_L1_DoubleEG_LooseIso23_10_++;
    else counter_cached_L1_DoubleEG_LooseIso23_10_++;
    if (!loaded_L1_DoubleEG_LooseIso23_10_) {
        if (!b_L1_DoubleEG_LooseIso23_10_) throw std::runtime_error("L1_DoubleEG_LooseIso23_10 branch doesn't exist");
        b_L1_DoubleEG_LooseIso23_10_->GetEntry(index);
        loaded_L1_DoubleEG_LooseIso23_10_ = true;
    }
    return L1_DoubleEG_LooseIso23_10_;
}
const bool &Nano::L1_DoubleEG_LooseIso24_10() {
    if (!loaded_L1_DoubleEG_LooseIso24_10_) counter_uncached_L1_DoubleEG_LooseIso24_10_++;
    else counter_cached_L1_DoubleEG_LooseIso24_10_++;
    if (!loaded_L1_DoubleEG_LooseIso24_10_) {
        if (!b_L1_DoubleEG_LooseIso24_10_) throw std::runtime_error("L1_DoubleEG_LooseIso24_10 branch doesn't exist");
        b_L1_DoubleEG_LooseIso24_10_->GetEntry(index);
        loaded_L1_DoubleEG_LooseIso24_10_ = true;
    }
    return L1_DoubleEG_LooseIso24_10_;
}
const bool &Nano::L1_DoubleEG_LooseIso25_12_er2p5() {
    if (!loaded_L1_DoubleEG_LooseIso25_12_er2p5_) counter_uncached_L1_DoubleEG_LooseIso25_12_er2p5_++;
    else counter_cached_L1_DoubleEG_LooseIso25_12_er2p5_++;
    if (!loaded_L1_DoubleEG_LooseIso25_12_er2p5_) {
        if (!b_L1_DoubleEG_LooseIso25_12_er2p5_) throw std::runtime_error("L1_DoubleEG_LooseIso25_12_er2p5 branch doesn't exist");
        b_L1_DoubleEG_LooseIso25_12_er2p5_->GetEntry(index);
        loaded_L1_DoubleEG_LooseIso25_12_er2p5_ = true;
    }
    return L1_DoubleEG_LooseIso25_12_er2p5_;
}
const bool &Nano::L1_DoubleEG_LooseIso25_LooseIso12_er1p5() {
    if (!loaded_L1_DoubleEG_LooseIso25_LooseIso12_er1p5_) counter_uncached_L1_DoubleEG_LooseIso25_LooseIso12_er1p5_++;
    else counter_cached_L1_DoubleEG_LooseIso25_LooseIso12_er1p5_++;
    if (!loaded_L1_DoubleEG_LooseIso25_LooseIso12_er1p5_) {
        if (!b_L1_DoubleEG_LooseIso25_LooseIso12_er1p5_) throw std::runtime_error("L1_DoubleEG_LooseIso25_LooseIso12_er1p5 branch doesn't exist");
        b_L1_DoubleEG_LooseIso25_LooseIso12_er1p5_->GetEntry(index);
        loaded_L1_DoubleEG_LooseIso25_LooseIso12_er1p5_ = true;
    }
    return L1_DoubleEG_LooseIso25_LooseIso12_er1p5_;
}
const bool &Nano::L1_DoubleIsoTau26er() {
    if (!loaded_L1_DoubleIsoTau26er_) counter_uncached_L1_DoubleIsoTau26er_++;
    else counter_cached_L1_DoubleIsoTau26er_++;
    if (!loaded_L1_DoubleIsoTau26er_) {
        if (!b_L1_DoubleIsoTau26er_) throw std::runtime_error("L1_DoubleIsoTau26er branch doesn't exist");
        b_L1_DoubleIsoTau26er_->GetEntry(index);
        loaded_L1_DoubleIsoTau26er_ = true;
    }
    return L1_DoubleIsoTau26er_;
}
const bool &Nano::L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5() {
    if (!loaded_L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5_) counter_uncached_L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5_++;
    else counter_cached_L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5_++;
    if (!loaded_L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5_) {
        if (!b_L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5_) throw std::runtime_error("L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5 branch doesn't exist");
        b_L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5_->GetEntry(index);
        loaded_L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5_ = true;
    }
    return L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5_;
}
const bool &Nano::L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5() {
    if (!loaded_L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5_) counter_uncached_L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5_++;
    else counter_cached_L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5_++;
    if (!loaded_L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5_) {
        if (!b_L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5_) throw std::runtime_error("L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5 branch doesn't exist");
        b_L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5_->GetEntry(index);
        loaded_L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5_ = true;
    }
    return L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5_;
}
const bool &Nano::L1_DoubleIsoTau27er() {
    if (!loaded_L1_DoubleIsoTau27er_) counter_uncached_L1_DoubleIsoTau27er_++;
    else counter_cached_L1_DoubleIsoTau27er_++;
    if (!loaded_L1_DoubleIsoTau27er_) {
        if (!b_L1_DoubleIsoTau27er_) throw std::runtime_error("L1_DoubleIsoTau27er branch doesn't exist");
        b_L1_DoubleIsoTau27er_->GetEntry(index);
        loaded_L1_DoubleIsoTau27er_ = true;
    }
    return L1_DoubleIsoTau27er_;
}
const bool &Nano::L1_DoubleIsoTau28er() {
    if (!loaded_L1_DoubleIsoTau28er_) counter_uncached_L1_DoubleIsoTau28er_++;
    else counter_cached_L1_DoubleIsoTau28er_++;
    if (!loaded_L1_DoubleIsoTau28er_) {
        if (!b_L1_DoubleIsoTau28er_) throw std::runtime_error("L1_DoubleIsoTau28er branch doesn't exist");
        b_L1_DoubleIsoTau28er_->GetEntry(index);
        loaded_L1_DoubleIsoTau28er_ = true;
    }
    return L1_DoubleIsoTau28er_;
}
const bool &Nano::L1_DoubleIsoTau28er2p1() {
    if (!loaded_L1_DoubleIsoTau28er2p1_) counter_uncached_L1_DoubleIsoTau28er2p1_++;
    else counter_cached_L1_DoubleIsoTau28er2p1_++;
    if (!loaded_L1_DoubleIsoTau28er2p1_) {
        if (!b_L1_DoubleIsoTau28er2p1_) throw std::runtime_error("L1_DoubleIsoTau28er2p1 branch doesn't exist");
        b_L1_DoubleIsoTau28er2p1_->GetEntry(index);
        loaded_L1_DoubleIsoTau28er2p1_ = true;
    }
    return L1_DoubleIsoTau28er2p1_;
}
const bool &Nano::L1_DoubleIsoTau28er2p1_Mass_Max80() {
    if (!loaded_L1_DoubleIsoTau28er2p1_Mass_Max80_) counter_uncached_L1_DoubleIsoTau28er2p1_Mass_Max80_++;
    else counter_cached_L1_DoubleIsoTau28er2p1_Mass_Max80_++;
    if (!loaded_L1_DoubleIsoTau28er2p1_Mass_Max80_) {
        if (!b_L1_DoubleIsoTau28er2p1_Mass_Max80_) throw std::runtime_error("L1_DoubleIsoTau28er2p1_Mass_Max80 branch doesn't exist");
        b_L1_DoubleIsoTau28er2p1_Mass_Max80_->GetEntry(index);
        loaded_L1_DoubleIsoTau28er2p1_Mass_Max80_ = true;
    }
    return L1_DoubleIsoTau28er2p1_Mass_Max80_;
}
const bool &Nano::L1_DoubleIsoTau28er2p1_Mass_Max90() {
    if (!loaded_L1_DoubleIsoTau28er2p1_Mass_Max90_) counter_uncached_L1_DoubleIsoTau28er2p1_Mass_Max90_++;
    else counter_cached_L1_DoubleIsoTau28er2p1_Mass_Max90_++;
    if (!loaded_L1_DoubleIsoTau28er2p1_Mass_Max90_) {
        if (!b_L1_DoubleIsoTau28er2p1_Mass_Max90_) throw std::runtime_error("L1_DoubleIsoTau28er2p1_Mass_Max90 branch doesn't exist");
        b_L1_DoubleIsoTau28er2p1_Mass_Max90_->GetEntry(index);
        loaded_L1_DoubleIsoTau28er2p1_Mass_Max90_ = true;
    }
    return L1_DoubleIsoTau28er2p1_Mass_Max90_;
}
const bool &Nano::L1_DoubleIsoTau29er() {
    if (!loaded_L1_DoubleIsoTau29er_) counter_uncached_L1_DoubleIsoTau29er_++;
    else counter_cached_L1_DoubleIsoTau29er_++;
    if (!loaded_L1_DoubleIsoTau29er_) {
        if (!b_L1_DoubleIsoTau29er_) throw std::runtime_error("L1_DoubleIsoTau29er branch doesn't exist");
        b_L1_DoubleIsoTau29er_->GetEntry(index);
        loaded_L1_DoubleIsoTau29er_ = true;
    }
    return L1_DoubleIsoTau29er_;
}
const bool &Nano::L1_DoubleIsoTau30er() {
    if (!loaded_L1_DoubleIsoTau30er_) counter_uncached_L1_DoubleIsoTau30er_++;
    else counter_cached_L1_DoubleIsoTau30er_++;
    if (!loaded_L1_DoubleIsoTau30er_) {
        if (!b_L1_DoubleIsoTau30er_) throw std::runtime_error("L1_DoubleIsoTau30er branch doesn't exist");
        b_L1_DoubleIsoTau30er_->GetEntry(index);
        loaded_L1_DoubleIsoTau30er_ = true;
    }
    return L1_DoubleIsoTau30er_;
}
const bool &Nano::L1_DoubleIsoTau30er2p1() {
    if (!loaded_L1_DoubleIsoTau30er2p1_) counter_uncached_L1_DoubleIsoTau30er2p1_++;
    else counter_cached_L1_DoubleIsoTau30er2p1_++;
    if (!loaded_L1_DoubleIsoTau30er2p1_) {
        if (!b_L1_DoubleIsoTau30er2p1_) throw std::runtime_error("L1_DoubleIsoTau30er2p1 branch doesn't exist");
        b_L1_DoubleIsoTau30er2p1_->GetEntry(index);
        loaded_L1_DoubleIsoTau30er2p1_ = true;
    }
    return L1_DoubleIsoTau30er2p1_;
}
const bool &Nano::L1_DoubleIsoTau30er2p1_Mass_Max80() {
    if (!loaded_L1_DoubleIsoTau30er2p1_Mass_Max80_) counter_uncached_L1_DoubleIsoTau30er2p1_Mass_Max80_++;
    else counter_cached_L1_DoubleIsoTau30er2p1_Mass_Max80_++;
    if (!loaded_L1_DoubleIsoTau30er2p1_Mass_Max80_) {
        if (!b_L1_DoubleIsoTau30er2p1_Mass_Max80_) throw std::runtime_error("L1_DoubleIsoTau30er2p1_Mass_Max80 branch doesn't exist");
        b_L1_DoubleIsoTau30er2p1_Mass_Max80_->GetEntry(index);
        loaded_L1_DoubleIsoTau30er2p1_Mass_Max80_ = true;
    }
    return L1_DoubleIsoTau30er2p1_Mass_Max80_;
}
const bool &Nano::L1_DoubleIsoTau30er2p1_Mass_Max90() {
    if (!loaded_L1_DoubleIsoTau30er2p1_Mass_Max90_) counter_uncached_L1_DoubleIsoTau30er2p1_Mass_Max90_++;
    else counter_cached_L1_DoubleIsoTau30er2p1_Mass_Max90_++;
    if (!loaded_L1_DoubleIsoTau30er2p1_Mass_Max90_) {
        if (!b_L1_DoubleIsoTau30er2p1_Mass_Max90_) throw std::runtime_error("L1_DoubleIsoTau30er2p1_Mass_Max90 branch doesn't exist");
        b_L1_DoubleIsoTau30er2p1_Mass_Max90_->GetEntry(index);
        loaded_L1_DoubleIsoTau30er2p1_Mass_Max90_ = true;
    }
    return L1_DoubleIsoTau30er2p1_Mass_Max90_;
}
const bool &Nano::L1_DoubleIsoTau32er() {
    if (!loaded_L1_DoubleIsoTau32er_) counter_uncached_L1_DoubleIsoTau32er_++;
    else counter_cached_L1_DoubleIsoTau32er_++;
    if (!loaded_L1_DoubleIsoTau32er_) {
        if (!b_L1_DoubleIsoTau32er_) throw std::runtime_error("L1_DoubleIsoTau32er branch doesn't exist");
        b_L1_DoubleIsoTau32er_->GetEntry(index);
        loaded_L1_DoubleIsoTau32er_ = true;
    }
    return L1_DoubleIsoTau32er_;
}
const bool &Nano::L1_DoubleIsoTau32er2p1() {
    if (!loaded_L1_DoubleIsoTau32er2p1_) counter_uncached_L1_DoubleIsoTau32er2p1_++;
    else counter_cached_L1_DoubleIsoTau32er2p1_++;
    if (!loaded_L1_DoubleIsoTau32er2p1_) {
        if (!b_L1_DoubleIsoTau32er2p1_) throw std::runtime_error("L1_DoubleIsoTau32er2p1 branch doesn't exist");
        b_L1_DoubleIsoTau32er2p1_->GetEntry(index);
        loaded_L1_DoubleIsoTau32er2p1_ = true;
    }
    return L1_DoubleIsoTau32er2p1_;
}
const bool &Nano::L1_DoubleIsoTau33er() {
    if (!loaded_L1_DoubleIsoTau33er_) counter_uncached_L1_DoubleIsoTau33er_++;
    else counter_cached_L1_DoubleIsoTau33er_++;
    if (!loaded_L1_DoubleIsoTau33er_) {
        if (!b_L1_DoubleIsoTau33er_) throw std::runtime_error("L1_DoubleIsoTau33er branch doesn't exist");
        b_L1_DoubleIsoTau33er_->GetEntry(index);
        loaded_L1_DoubleIsoTau33er_ = true;
    }
    return L1_DoubleIsoTau33er_;
}
const bool &Nano::L1_DoubleIsoTau33er2p1() {
    if (!loaded_L1_DoubleIsoTau33er2p1_) counter_uncached_L1_DoubleIsoTau33er2p1_++;
    else counter_cached_L1_DoubleIsoTau33er2p1_++;
    if (!loaded_L1_DoubleIsoTau33er2p1_) {
        if (!b_L1_DoubleIsoTau33er2p1_) throw std::runtime_error("L1_DoubleIsoTau33er2p1 branch doesn't exist");
        b_L1_DoubleIsoTau33er2p1_->GetEntry(index);
        loaded_L1_DoubleIsoTau33er2p1_ = true;
    }
    return L1_DoubleIsoTau33er2p1_;
}
const bool &Nano::L1_DoubleIsoTau34er() {
    if (!loaded_L1_DoubleIsoTau34er_) counter_uncached_L1_DoubleIsoTau34er_++;
    else counter_cached_L1_DoubleIsoTau34er_++;
    if (!loaded_L1_DoubleIsoTau34er_) {
        if (!b_L1_DoubleIsoTau34er_) throw std::runtime_error("L1_DoubleIsoTau34er branch doesn't exist");
        b_L1_DoubleIsoTau34er_->GetEntry(index);
        loaded_L1_DoubleIsoTau34er_ = true;
    }
    return L1_DoubleIsoTau34er_;
}
const bool &Nano::L1_DoubleIsoTau34er2p1() {
    if (!loaded_L1_DoubleIsoTau34er2p1_) counter_uncached_L1_DoubleIsoTau34er2p1_++;
    else counter_cached_L1_DoubleIsoTau34er2p1_++;
    if (!loaded_L1_DoubleIsoTau34er2p1_) {
        if (!b_L1_DoubleIsoTau34er2p1_) throw std::runtime_error("L1_DoubleIsoTau34er2p1 branch doesn't exist");
        b_L1_DoubleIsoTau34er2p1_->GetEntry(index);
        loaded_L1_DoubleIsoTau34er2p1_ = true;
    }
    return L1_DoubleIsoTau34er2p1_;
}
const bool &Nano::L1_DoubleIsoTau35er() {
    if (!loaded_L1_DoubleIsoTau35er_) counter_uncached_L1_DoubleIsoTau35er_++;
    else counter_cached_L1_DoubleIsoTau35er_++;
    if (!loaded_L1_DoubleIsoTau35er_) {
        if (!b_L1_DoubleIsoTau35er_) throw std::runtime_error("L1_DoubleIsoTau35er branch doesn't exist");
        b_L1_DoubleIsoTau35er_->GetEntry(index);
        loaded_L1_DoubleIsoTau35er_ = true;
    }
    return L1_DoubleIsoTau35er_;
}
const bool &Nano::L1_DoubleIsoTau35er2p1() {
    if (!loaded_L1_DoubleIsoTau35er2p1_) counter_uncached_L1_DoubleIsoTau35er2p1_++;
    else counter_cached_L1_DoubleIsoTau35er2p1_++;
    if (!loaded_L1_DoubleIsoTau35er2p1_) {
        if (!b_L1_DoubleIsoTau35er2p1_) throw std::runtime_error("L1_DoubleIsoTau35er2p1 branch doesn't exist");
        b_L1_DoubleIsoTau35er2p1_->GetEntry(index);
        loaded_L1_DoubleIsoTau35er2p1_ = true;
    }
    return L1_DoubleIsoTau35er2p1_;
}
const bool &Nano::L1_DoubleIsoTau36er() {
    if (!loaded_L1_DoubleIsoTau36er_) counter_uncached_L1_DoubleIsoTau36er_++;
    else counter_cached_L1_DoubleIsoTau36er_++;
    if (!loaded_L1_DoubleIsoTau36er_) {
        if (!b_L1_DoubleIsoTau36er_) throw std::runtime_error("L1_DoubleIsoTau36er branch doesn't exist");
        b_L1_DoubleIsoTau36er_->GetEntry(index);
        loaded_L1_DoubleIsoTau36er_ = true;
    }
    return L1_DoubleIsoTau36er_;
}
const bool &Nano::L1_DoubleIsoTau36er2p1() {
    if (!loaded_L1_DoubleIsoTau36er2p1_) counter_uncached_L1_DoubleIsoTau36er2p1_++;
    else counter_cached_L1_DoubleIsoTau36er2p1_++;
    if (!loaded_L1_DoubleIsoTau36er2p1_) {
        if (!b_L1_DoubleIsoTau36er2p1_) throw std::runtime_error("L1_DoubleIsoTau36er2p1 branch doesn't exist");
        b_L1_DoubleIsoTau36er2p1_->GetEntry(index);
        loaded_L1_DoubleIsoTau36er2p1_ = true;
    }
    return L1_DoubleIsoTau36er2p1_;
}
const bool &Nano::L1_DoubleIsoTau38er2p1() {
    if (!loaded_L1_DoubleIsoTau38er2p1_) counter_uncached_L1_DoubleIsoTau38er2p1_++;
    else counter_cached_L1_DoubleIsoTau38er2p1_++;
    if (!loaded_L1_DoubleIsoTau38er2p1_) {
        if (!b_L1_DoubleIsoTau38er2p1_) throw std::runtime_error("L1_DoubleIsoTau38er2p1 branch doesn't exist");
        b_L1_DoubleIsoTau38er2p1_->GetEntry(index);
        loaded_L1_DoubleIsoTau38er2p1_ = true;
    }
    return L1_DoubleIsoTau38er2p1_;
}
const bool &Nano::L1_DoubleJet100er2p3_dEta_Max1p6() {
    if (!loaded_L1_DoubleJet100er2p3_dEta_Max1p6_) counter_uncached_L1_DoubleJet100er2p3_dEta_Max1p6_++;
    else counter_cached_L1_DoubleJet100er2p3_dEta_Max1p6_++;
    if (!loaded_L1_DoubleJet100er2p3_dEta_Max1p6_) {
        if (!b_L1_DoubleJet100er2p3_dEta_Max1p6_) throw std::runtime_error("L1_DoubleJet100er2p3_dEta_Max1p6 branch doesn't exist");
        b_L1_DoubleJet100er2p3_dEta_Max1p6_->GetEntry(index);
        loaded_L1_DoubleJet100er2p3_dEta_Max1p6_ = true;
    }
    return L1_DoubleJet100er2p3_dEta_Max1p6_;
}
const bool &Nano::L1_DoubleJet100er2p5() {
    if (!loaded_L1_DoubleJet100er2p5_) counter_uncached_L1_DoubleJet100er2p5_++;
    else counter_cached_L1_DoubleJet100er2p5_++;
    if (!loaded_L1_DoubleJet100er2p5_) {
        if (!b_L1_DoubleJet100er2p5_) throw std::runtime_error("L1_DoubleJet100er2p5 branch doesn't exist");
        b_L1_DoubleJet100er2p5_->GetEntry(index);
        loaded_L1_DoubleJet100er2p5_ = true;
    }
    return L1_DoubleJet100er2p5_;
}
const bool &Nano::L1_DoubleJet100er2p7() {
    if (!loaded_L1_DoubleJet100er2p7_) counter_uncached_L1_DoubleJet100er2p7_++;
    else counter_cached_L1_DoubleJet100er2p7_++;
    if (!loaded_L1_DoubleJet100er2p7_) {
        if (!b_L1_DoubleJet100er2p7_) throw std::runtime_error("L1_DoubleJet100er2p7 branch doesn't exist");
        b_L1_DoubleJet100er2p7_->GetEntry(index);
        loaded_L1_DoubleJet100er2p7_ = true;
    }
    return L1_DoubleJet100er2p7_;
}
const bool &Nano::L1_DoubleJet100er3p0() {
    if (!loaded_L1_DoubleJet100er3p0_) counter_uncached_L1_DoubleJet100er3p0_++;
    else counter_cached_L1_DoubleJet100er3p0_++;
    if (!loaded_L1_DoubleJet100er3p0_) {
        if (!b_L1_DoubleJet100er3p0_) throw std::runtime_error("L1_DoubleJet100er3p0 branch doesn't exist");
        b_L1_DoubleJet100er3p0_->GetEntry(index);
        loaded_L1_DoubleJet100er3p0_ = true;
    }
    return L1_DoubleJet100er3p0_;
}
const bool &Nano::L1_DoubleJet112er2p3_dEta_Max1p6() {
    if (!loaded_L1_DoubleJet112er2p3_dEta_Max1p6_) counter_uncached_L1_DoubleJet112er2p3_dEta_Max1p6_++;
    else counter_cached_L1_DoubleJet112er2p3_dEta_Max1p6_++;
    if (!loaded_L1_DoubleJet112er2p3_dEta_Max1p6_) {
        if (!b_L1_DoubleJet112er2p3_dEta_Max1p6_) throw std::runtime_error("L1_DoubleJet112er2p3_dEta_Max1p6 branch doesn't exist");
        b_L1_DoubleJet112er2p3_dEta_Max1p6_->GetEntry(index);
        loaded_L1_DoubleJet112er2p3_dEta_Max1p6_ = true;
    }
    return L1_DoubleJet112er2p3_dEta_Max1p6_;
}
const bool &Nano::L1_DoubleJet112er2p7() {
    if (!loaded_L1_DoubleJet112er2p7_) counter_uncached_L1_DoubleJet112er2p7_++;
    else counter_cached_L1_DoubleJet112er2p7_++;
    if (!loaded_L1_DoubleJet112er2p7_) {
        if (!b_L1_DoubleJet112er2p7_) throw std::runtime_error("L1_DoubleJet112er2p7 branch doesn't exist");
        b_L1_DoubleJet112er2p7_->GetEntry(index);
        loaded_L1_DoubleJet112er2p7_ = true;
    }
    return L1_DoubleJet112er2p7_;
}
const bool &Nano::L1_DoubleJet112er3p0() {
    if (!loaded_L1_DoubleJet112er3p0_) counter_uncached_L1_DoubleJet112er3p0_++;
    else counter_cached_L1_DoubleJet112er3p0_++;
    if (!loaded_L1_DoubleJet112er3p0_) {
        if (!b_L1_DoubleJet112er3p0_) throw std::runtime_error("L1_DoubleJet112er3p0 branch doesn't exist");
        b_L1_DoubleJet112er3p0_->GetEntry(index);
        loaded_L1_DoubleJet112er3p0_ = true;
    }
    return L1_DoubleJet112er3p0_;
}
const bool &Nano::L1_DoubleJet120er2p5() {
    if (!loaded_L1_DoubleJet120er2p5_) counter_uncached_L1_DoubleJet120er2p5_++;
    else counter_cached_L1_DoubleJet120er2p5_++;
    if (!loaded_L1_DoubleJet120er2p5_) {
        if (!b_L1_DoubleJet120er2p5_) throw std::runtime_error("L1_DoubleJet120er2p5 branch doesn't exist");
        b_L1_DoubleJet120er2p5_->GetEntry(index);
        loaded_L1_DoubleJet120er2p5_ = true;
    }
    return L1_DoubleJet120er2p5_;
}
const bool &Nano::L1_DoubleJet120er2p7() {
    if (!loaded_L1_DoubleJet120er2p7_) counter_uncached_L1_DoubleJet120er2p7_++;
    else counter_cached_L1_DoubleJet120er2p7_++;
    if (!loaded_L1_DoubleJet120er2p7_) {
        if (!b_L1_DoubleJet120er2p7_) throw std::runtime_error("L1_DoubleJet120er2p7 branch doesn't exist");
        b_L1_DoubleJet120er2p7_->GetEntry(index);
        loaded_L1_DoubleJet120er2p7_ = true;
    }
    return L1_DoubleJet120er2p7_;
}
const bool &Nano::L1_DoubleJet120er3p0() {
    if (!loaded_L1_DoubleJet120er3p0_) counter_uncached_L1_DoubleJet120er3p0_++;
    else counter_cached_L1_DoubleJet120er3p0_++;
    if (!loaded_L1_DoubleJet120er3p0_) {
        if (!b_L1_DoubleJet120er3p0_) throw std::runtime_error("L1_DoubleJet120er3p0 branch doesn't exist");
        b_L1_DoubleJet120er3p0_->GetEntry(index);
        loaded_L1_DoubleJet120er3p0_ = true;
    }
    return L1_DoubleJet120er3p0_;
}
const bool &Nano::L1_DoubleJet12_ForwardBackward() {
    if (!loaded_L1_DoubleJet12_ForwardBackward_) counter_uncached_L1_DoubleJet12_ForwardBackward_++;
    else counter_cached_L1_DoubleJet12_ForwardBackward_++;
    if (!loaded_L1_DoubleJet12_ForwardBackward_) {
        if (!b_L1_DoubleJet12_ForwardBackward_) throw std::runtime_error("L1_DoubleJet12_ForwardBackward branch doesn't exist");
        b_L1_DoubleJet12_ForwardBackward_->GetEntry(index);
        loaded_L1_DoubleJet12_ForwardBackward_ = true;
    }
    return L1_DoubleJet12_ForwardBackward_;
}
const bool &Nano::L1_DoubleJet150er2p5() {
    if (!loaded_L1_DoubleJet150er2p5_) counter_uncached_L1_DoubleJet150er2p5_++;
    else counter_cached_L1_DoubleJet150er2p5_++;
    if (!loaded_L1_DoubleJet150er2p5_) {
        if (!b_L1_DoubleJet150er2p5_) throw std::runtime_error("L1_DoubleJet150er2p5 branch doesn't exist");
        b_L1_DoubleJet150er2p5_->GetEntry(index);
        loaded_L1_DoubleJet150er2p5_ = true;
    }
    return L1_DoubleJet150er2p5_;
}
const bool &Nano::L1_DoubleJet150er2p7() {
    if (!loaded_L1_DoubleJet150er2p7_) counter_uncached_L1_DoubleJet150er2p7_++;
    else counter_cached_L1_DoubleJet150er2p7_++;
    if (!loaded_L1_DoubleJet150er2p7_) {
        if (!b_L1_DoubleJet150er2p7_) throw std::runtime_error("L1_DoubleJet150er2p7 branch doesn't exist");
        b_L1_DoubleJet150er2p7_->GetEntry(index);
        loaded_L1_DoubleJet150er2p7_ = true;
    }
    return L1_DoubleJet150er2p7_;
}
const bool &Nano::L1_DoubleJet150er3p0() {
    if (!loaded_L1_DoubleJet150er3p0_) counter_uncached_L1_DoubleJet150er3p0_++;
    else counter_cached_L1_DoubleJet150er3p0_++;
    if (!loaded_L1_DoubleJet150er3p0_) {
        if (!b_L1_DoubleJet150er3p0_) throw std::runtime_error("L1_DoubleJet150er3p0 branch doesn't exist");
        b_L1_DoubleJet150er3p0_->GetEntry(index);
        loaded_L1_DoubleJet150er3p0_ = true;
    }
    return L1_DoubleJet150er3p0_;
}
const bool &Nano::L1_DoubleJet16_ForwardBackward() {
    if (!loaded_L1_DoubleJet16_ForwardBackward_) counter_uncached_L1_DoubleJet16_ForwardBackward_++;
    else counter_cached_L1_DoubleJet16_ForwardBackward_++;
    if (!loaded_L1_DoubleJet16_ForwardBackward_) {
        if (!b_L1_DoubleJet16_ForwardBackward_) throw std::runtime_error("L1_DoubleJet16_ForwardBackward branch doesn't exist");
        b_L1_DoubleJet16_ForwardBackward_->GetEntry(index);
        loaded_L1_DoubleJet16_ForwardBackward_ = true;
    }
    return L1_DoubleJet16_ForwardBackward_;
}
const bool &Nano::L1_DoubleJet30_Mass_Min300_dEta_Max1p5() {
    if (!loaded_L1_DoubleJet30_Mass_Min300_dEta_Max1p5_) counter_uncached_L1_DoubleJet30_Mass_Min300_dEta_Max1p5_++;
    else counter_cached_L1_DoubleJet30_Mass_Min300_dEta_Max1p5_++;
    if (!loaded_L1_DoubleJet30_Mass_Min300_dEta_Max1p5_) {
        if (!b_L1_DoubleJet30_Mass_Min300_dEta_Max1p5_) throw std::runtime_error("L1_DoubleJet30_Mass_Min300_dEta_Max1p5 branch doesn't exist");
        b_L1_DoubleJet30_Mass_Min300_dEta_Max1p5_->GetEntry(index);
        loaded_L1_DoubleJet30_Mass_Min300_dEta_Max1p5_ = true;
    }
    return L1_DoubleJet30_Mass_Min300_dEta_Max1p5_;
}
const bool &Nano::L1_DoubleJet30_Mass_Min320_dEta_Max1p5() {
    if (!loaded_L1_DoubleJet30_Mass_Min320_dEta_Max1p5_) counter_uncached_L1_DoubleJet30_Mass_Min320_dEta_Max1p5_++;
    else counter_cached_L1_DoubleJet30_Mass_Min320_dEta_Max1p5_++;
    if (!loaded_L1_DoubleJet30_Mass_Min320_dEta_Max1p5_) {
        if (!b_L1_DoubleJet30_Mass_Min320_dEta_Max1p5_) throw std::runtime_error("L1_DoubleJet30_Mass_Min320_dEta_Max1p5 branch doesn't exist");
        b_L1_DoubleJet30_Mass_Min320_dEta_Max1p5_->GetEntry(index);
        loaded_L1_DoubleJet30_Mass_Min320_dEta_Max1p5_ = true;
    }
    return L1_DoubleJet30_Mass_Min320_dEta_Max1p5_;
}
const bool &Nano::L1_DoubleJet30_Mass_Min340_dEta_Max1p5() {
    if (!loaded_L1_DoubleJet30_Mass_Min340_dEta_Max1p5_) counter_uncached_L1_DoubleJet30_Mass_Min340_dEta_Max1p5_++;
    else counter_cached_L1_DoubleJet30_Mass_Min340_dEta_Max1p5_++;
    if (!loaded_L1_DoubleJet30_Mass_Min340_dEta_Max1p5_) {
        if (!b_L1_DoubleJet30_Mass_Min340_dEta_Max1p5_) throw std::runtime_error("L1_DoubleJet30_Mass_Min340_dEta_Max1p5 branch doesn't exist");
        b_L1_DoubleJet30_Mass_Min340_dEta_Max1p5_->GetEntry(index);
        loaded_L1_DoubleJet30_Mass_Min340_dEta_Max1p5_ = true;
    }
    return L1_DoubleJet30_Mass_Min340_dEta_Max1p5_;
}
const bool &Nano::L1_DoubleJet30_Mass_Min360_dEta_Max1p5() {
    if (!loaded_L1_DoubleJet30_Mass_Min360_dEta_Max1p5_) counter_uncached_L1_DoubleJet30_Mass_Min360_dEta_Max1p5_++;
    else counter_cached_L1_DoubleJet30_Mass_Min360_dEta_Max1p5_++;
    if (!loaded_L1_DoubleJet30_Mass_Min360_dEta_Max1p5_) {
        if (!b_L1_DoubleJet30_Mass_Min360_dEta_Max1p5_) throw std::runtime_error("L1_DoubleJet30_Mass_Min360_dEta_Max1p5 branch doesn't exist");
        b_L1_DoubleJet30_Mass_Min360_dEta_Max1p5_->GetEntry(index);
        loaded_L1_DoubleJet30_Mass_Min360_dEta_Max1p5_ = true;
    }
    return L1_DoubleJet30_Mass_Min360_dEta_Max1p5_;
}
const bool &Nano::L1_DoubleJet30_Mass_Min380_dEta_Max1p5() {
    if (!loaded_L1_DoubleJet30_Mass_Min380_dEta_Max1p5_) counter_uncached_L1_DoubleJet30_Mass_Min380_dEta_Max1p5_++;
    else counter_cached_L1_DoubleJet30_Mass_Min380_dEta_Max1p5_++;
    if (!loaded_L1_DoubleJet30_Mass_Min380_dEta_Max1p5_) {
        if (!b_L1_DoubleJet30_Mass_Min380_dEta_Max1p5_) throw std::runtime_error("L1_DoubleJet30_Mass_Min380_dEta_Max1p5 branch doesn't exist");
        b_L1_DoubleJet30_Mass_Min380_dEta_Max1p5_->GetEntry(index);
        loaded_L1_DoubleJet30_Mass_Min380_dEta_Max1p5_ = true;
    }
    return L1_DoubleJet30_Mass_Min380_dEta_Max1p5_;
}
const bool &Nano::L1_DoubleJet30_Mass_Min400_Mu10() {
    if (!loaded_L1_DoubleJet30_Mass_Min400_Mu10_) counter_uncached_L1_DoubleJet30_Mass_Min400_Mu10_++;
    else counter_cached_L1_DoubleJet30_Mass_Min400_Mu10_++;
    if (!loaded_L1_DoubleJet30_Mass_Min400_Mu10_) {
        if (!b_L1_DoubleJet30_Mass_Min400_Mu10_) throw std::runtime_error("L1_DoubleJet30_Mass_Min400_Mu10 branch doesn't exist");
        b_L1_DoubleJet30_Mass_Min400_Mu10_->GetEntry(index);
        loaded_L1_DoubleJet30_Mass_Min400_Mu10_ = true;
    }
    return L1_DoubleJet30_Mass_Min400_Mu10_;
}
const bool &Nano::L1_DoubleJet30_Mass_Min400_Mu6() {
    if (!loaded_L1_DoubleJet30_Mass_Min400_Mu6_) counter_uncached_L1_DoubleJet30_Mass_Min400_Mu6_++;
    else counter_cached_L1_DoubleJet30_Mass_Min400_Mu6_++;
    if (!loaded_L1_DoubleJet30_Mass_Min400_Mu6_) {
        if (!b_L1_DoubleJet30_Mass_Min400_Mu6_) throw std::runtime_error("L1_DoubleJet30_Mass_Min400_Mu6 branch doesn't exist");
        b_L1_DoubleJet30_Mass_Min400_Mu6_->GetEntry(index);
        loaded_L1_DoubleJet30_Mass_Min400_Mu6_ = true;
    }
    return L1_DoubleJet30_Mass_Min400_Mu6_;
}
const bool &Nano::L1_DoubleJet30_Mass_Min400_dEta_Max1p5() {
    if (!loaded_L1_DoubleJet30_Mass_Min400_dEta_Max1p5_) counter_uncached_L1_DoubleJet30_Mass_Min400_dEta_Max1p5_++;
    else counter_cached_L1_DoubleJet30_Mass_Min400_dEta_Max1p5_++;
    if (!loaded_L1_DoubleJet30_Mass_Min400_dEta_Max1p5_) {
        if (!b_L1_DoubleJet30_Mass_Min400_dEta_Max1p5_) throw std::runtime_error("L1_DoubleJet30_Mass_Min400_dEta_Max1p5 branch doesn't exist");
        b_L1_DoubleJet30_Mass_Min400_dEta_Max1p5_->GetEntry(index);
        loaded_L1_DoubleJet30_Mass_Min400_dEta_Max1p5_ = true;
    }
    return L1_DoubleJet30_Mass_Min400_dEta_Max1p5_;
}
const bool &Nano::L1_DoubleJet30_Mj30j30_400_Mu10() {
    if (!loaded_L1_DoubleJet30_Mj30j30_400_Mu10_) counter_uncached_L1_DoubleJet30_Mj30j30_400_Mu10_++;
    else counter_cached_L1_DoubleJet30_Mj30j30_400_Mu10_++;
    if (!loaded_L1_DoubleJet30_Mj30j30_400_Mu10_) {
        if (!b_L1_DoubleJet30_Mj30j30_400_Mu10_) throw std::runtime_error("L1_DoubleJet30_Mj30j30_400_Mu10 branch doesn't exist");
        b_L1_DoubleJet30_Mj30j30_400_Mu10_->GetEntry(index);
        loaded_L1_DoubleJet30_Mj30j30_400_Mu10_ = true;
    }
    return L1_DoubleJet30_Mj30j30_400_Mu10_;
}
const bool &Nano::L1_DoubleJet30_Mj30j30_400_Mu6() {
    if (!loaded_L1_DoubleJet30_Mj30j30_400_Mu6_) counter_uncached_L1_DoubleJet30_Mj30j30_400_Mu6_++;
    else counter_cached_L1_DoubleJet30_Mj30j30_400_Mu6_++;
    if (!loaded_L1_DoubleJet30_Mj30j30_400_Mu6_) {
        if (!b_L1_DoubleJet30_Mj30j30_400_Mu6_) throw std::runtime_error("L1_DoubleJet30_Mj30j30_400_Mu6 branch doesn't exist");
        b_L1_DoubleJet30_Mj30j30_400_Mu6_->GetEntry(index);
        loaded_L1_DoubleJet30_Mj30j30_400_Mu6_ = true;
    }
    return L1_DoubleJet30_Mj30j30_400_Mu6_;
}
const bool &Nano::L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5() {
    if (!loaded_L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5_) counter_uncached_L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5_++;
    else counter_cached_L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5_++;
    if (!loaded_L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5_) {
        if (!b_L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5_) throw std::runtime_error("L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5 branch doesn't exist");
        b_L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5_->GetEntry(index);
        loaded_L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5_ = true;
    }
    return L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5_;
}
const bool &Nano::L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5() {
    if (!loaded_L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5_) counter_uncached_L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5_++;
    else counter_cached_L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5_++;
    if (!loaded_L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5_) {
        if (!b_L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5_) throw std::runtime_error("L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5 branch doesn't exist");
        b_L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5_->GetEntry(index);
        loaded_L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5_ = true;
    }
    return L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5_;
}
const bool &Nano::L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5() {
    if (!loaded_L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5_) counter_uncached_L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5_++;
    else counter_cached_L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5_++;
    if (!loaded_L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5_) {
        if (!b_L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5_) throw std::runtime_error("L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5 branch doesn't exist");
        b_L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5_->GetEntry(index);
        loaded_L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5_ = true;
    }
    return L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5_;
}
const bool &Nano::L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5() {
    if (!loaded_L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5_) counter_uncached_L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5_++;
    else counter_cached_L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5_++;
    if (!loaded_L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5_) {
        if (!b_L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5_) throw std::runtime_error("L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5 branch doesn't exist");
        b_L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5_->GetEntry(index);
        loaded_L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5_ = true;
    }
    return L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5_;
}
const bool &Nano::L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5() {
    if (!loaded_L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5_) counter_uncached_L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5_++;
    else counter_cached_L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5_++;
    if (!loaded_L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5_) {
        if (!b_L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5_) throw std::runtime_error("L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5 branch doesn't exist");
        b_L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5_->GetEntry(index);
        loaded_L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5_ = true;
    }
    return L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5_;
}
const bool &Nano::L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5() {
    if (!loaded_L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5_) counter_uncached_L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5_++;
    else counter_cached_L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5_++;
    if (!loaded_L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5_) {
        if (!b_L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5_) throw std::runtime_error("L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5 branch doesn't exist");
        b_L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5_->GetEntry(index);
        loaded_L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5_ = true;
    }
    return L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5_;
}
const bool &Nano::L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp() {
    if (!loaded_L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp_) counter_uncached_L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp_++;
    else counter_cached_L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp_++;
    if (!loaded_L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp_) {
        if (!b_L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp_) throw std::runtime_error("L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp branch doesn't exist");
        b_L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp_->GetEntry(index);
        loaded_L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp_ = true;
    }
    return L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp_;
}
const bool &Nano::L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5() {
    if (!loaded_L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5_) counter_uncached_L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5_++;
    else counter_cached_L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5_++;
    if (!loaded_L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5_) {
        if (!b_L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5_) throw std::runtime_error("L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5 branch doesn't exist");
        b_L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5_->GetEntry(index);
        loaded_L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5_ = true;
    }
    return L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5_;
}
const bool &Nano::L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450() {
    if (!loaded_L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450_) counter_uncached_L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450_++;
    else counter_cached_L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450_++;
    if (!loaded_L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450_) {
        if (!b_L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450_) throw std::runtime_error("L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450 branch doesn't exist");
        b_L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450_->GetEntry(index);
        loaded_L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450_ = true;
    }
    return L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450_;
}
const bool &Nano::L1_DoubleJet40er2p5() {
    if (!loaded_L1_DoubleJet40er2p5_) counter_uncached_L1_DoubleJet40er2p5_++;
    else counter_cached_L1_DoubleJet40er2p5_++;
    if (!loaded_L1_DoubleJet40er2p5_) {
        if (!b_L1_DoubleJet40er2p5_) throw std::runtime_error("L1_DoubleJet40er2p5 branch doesn't exist");
        b_L1_DoubleJet40er2p5_->GetEntry(index);
        loaded_L1_DoubleJet40er2p5_ = true;
    }
    return L1_DoubleJet40er2p5_;
}
const bool &Nano::L1_DoubleJet40er2p7() {
    if (!loaded_L1_DoubleJet40er2p7_) counter_uncached_L1_DoubleJet40er2p7_++;
    else counter_cached_L1_DoubleJet40er2p7_++;
    if (!loaded_L1_DoubleJet40er2p7_) {
        if (!b_L1_DoubleJet40er2p7_) throw std::runtime_error("L1_DoubleJet40er2p7 branch doesn't exist");
        b_L1_DoubleJet40er2p7_->GetEntry(index);
        loaded_L1_DoubleJet40er2p7_ = true;
    }
    return L1_DoubleJet40er2p7_;
}
const bool &Nano::L1_DoubleJet40er3p0() {
    if (!loaded_L1_DoubleJet40er3p0_) counter_uncached_L1_DoubleJet40er3p0_++;
    else counter_cached_L1_DoubleJet40er3p0_++;
    if (!loaded_L1_DoubleJet40er3p0_) {
        if (!b_L1_DoubleJet40er3p0_) throw std::runtime_error("L1_DoubleJet40er3p0 branch doesn't exist");
        b_L1_DoubleJet40er3p0_->GetEntry(index);
        loaded_L1_DoubleJet40er3p0_ = true;
    }
    return L1_DoubleJet40er3p0_;
}
const bool &Nano::L1_DoubleJet50er2p7() {
    if (!loaded_L1_DoubleJet50er2p7_) counter_uncached_L1_DoubleJet50er2p7_++;
    else counter_cached_L1_DoubleJet50er2p7_++;
    if (!loaded_L1_DoubleJet50er2p7_) {
        if (!b_L1_DoubleJet50er2p7_) throw std::runtime_error("L1_DoubleJet50er2p7 branch doesn't exist");
        b_L1_DoubleJet50er2p7_->GetEntry(index);
        loaded_L1_DoubleJet50er2p7_ = true;
    }
    return L1_DoubleJet50er2p7_;
}
const bool &Nano::L1_DoubleJet50er3p0() {
    if (!loaded_L1_DoubleJet50er3p0_) counter_uncached_L1_DoubleJet50er3p0_++;
    else counter_cached_L1_DoubleJet50er3p0_++;
    if (!loaded_L1_DoubleJet50er3p0_) {
        if (!b_L1_DoubleJet50er3p0_) throw std::runtime_error("L1_DoubleJet50er3p0 branch doesn't exist");
        b_L1_DoubleJet50er3p0_->GetEntry(index);
        loaded_L1_DoubleJet50er3p0_ = true;
    }
    return L1_DoubleJet50er3p0_;
}
const bool &Nano::L1_DoubleJet60er2p7() {
    if (!loaded_L1_DoubleJet60er2p7_) counter_uncached_L1_DoubleJet60er2p7_++;
    else counter_cached_L1_DoubleJet60er2p7_++;
    if (!loaded_L1_DoubleJet60er2p7_) {
        if (!b_L1_DoubleJet60er2p7_) throw std::runtime_error("L1_DoubleJet60er2p7 branch doesn't exist");
        b_L1_DoubleJet60er2p7_->GetEntry(index);
        loaded_L1_DoubleJet60er2p7_ = true;
    }
    return L1_DoubleJet60er2p7_;
}
const bool &Nano::L1_DoubleJet60er2p7_ETM100() {
    if (!loaded_L1_DoubleJet60er2p7_ETM100_) counter_uncached_L1_DoubleJet60er2p7_ETM100_++;
    else counter_cached_L1_DoubleJet60er2p7_ETM100_++;
    if (!loaded_L1_DoubleJet60er2p7_ETM100_) {
        if (!b_L1_DoubleJet60er2p7_ETM100_) throw std::runtime_error("L1_DoubleJet60er2p7_ETM100 branch doesn't exist");
        b_L1_DoubleJet60er2p7_ETM100_->GetEntry(index);
        loaded_L1_DoubleJet60er2p7_ETM100_ = true;
    }
    return L1_DoubleJet60er2p7_ETM100_;
}
const bool &Nano::L1_DoubleJet60er2p7_ETM60() {
    if (!loaded_L1_DoubleJet60er2p7_ETM60_) counter_uncached_L1_DoubleJet60er2p7_ETM60_++;
    else counter_cached_L1_DoubleJet60er2p7_ETM60_++;
    if (!loaded_L1_DoubleJet60er2p7_ETM60_) {
        if (!b_L1_DoubleJet60er2p7_ETM60_) throw std::runtime_error("L1_DoubleJet60er2p7_ETM60 branch doesn't exist");
        b_L1_DoubleJet60er2p7_ETM60_->GetEntry(index);
        loaded_L1_DoubleJet60er2p7_ETM60_ = true;
    }
    return L1_DoubleJet60er2p7_ETM60_;
}
const bool &Nano::L1_DoubleJet60er2p7_ETM70() {
    if (!loaded_L1_DoubleJet60er2p7_ETM70_) counter_uncached_L1_DoubleJet60er2p7_ETM70_++;
    else counter_cached_L1_DoubleJet60er2p7_ETM70_++;
    if (!loaded_L1_DoubleJet60er2p7_ETM70_) {
        if (!b_L1_DoubleJet60er2p7_ETM70_) throw std::runtime_error("L1_DoubleJet60er2p7_ETM70 branch doesn't exist");
        b_L1_DoubleJet60er2p7_ETM70_->GetEntry(index);
        loaded_L1_DoubleJet60er2p7_ETM70_ = true;
    }
    return L1_DoubleJet60er2p7_ETM70_;
}
const bool &Nano::L1_DoubleJet60er2p7_ETM80() {
    if (!loaded_L1_DoubleJet60er2p7_ETM80_) counter_uncached_L1_DoubleJet60er2p7_ETM80_++;
    else counter_cached_L1_DoubleJet60er2p7_ETM80_++;
    if (!loaded_L1_DoubleJet60er2p7_ETM80_) {
        if (!b_L1_DoubleJet60er2p7_ETM80_) throw std::runtime_error("L1_DoubleJet60er2p7_ETM80 branch doesn't exist");
        b_L1_DoubleJet60er2p7_ETM80_->GetEntry(index);
        loaded_L1_DoubleJet60er2p7_ETM80_ = true;
    }
    return L1_DoubleJet60er2p7_ETM80_;
}
const bool &Nano::L1_DoubleJet60er2p7_ETM90() {
    if (!loaded_L1_DoubleJet60er2p7_ETM90_) counter_uncached_L1_DoubleJet60er2p7_ETM90_++;
    else counter_cached_L1_DoubleJet60er2p7_ETM90_++;
    if (!loaded_L1_DoubleJet60er2p7_ETM90_) {
        if (!b_L1_DoubleJet60er2p7_ETM90_) throw std::runtime_error("L1_DoubleJet60er2p7_ETM90 branch doesn't exist");
        b_L1_DoubleJet60er2p7_ETM90_->GetEntry(index);
        loaded_L1_DoubleJet60er2p7_ETM90_ = true;
    }
    return L1_DoubleJet60er2p7_ETM90_;
}
const bool &Nano::L1_DoubleJet60er3p0() {
    if (!loaded_L1_DoubleJet60er3p0_) counter_uncached_L1_DoubleJet60er3p0_++;
    else counter_cached_L1_DoubleJet60er3p0_++;
    if (!loaded_L1_DoubleJet60er3p0_) {
        if (!b_L1_DoubleJet60er3p0_) throw std::runtime_error("L1_DoubleJet60er3p0 branch doesn't exist");
        b_L1_DoubleJet60er3p0_->GetEntry(index);
        loaded_L1_DoubleJet60er3p0_ = true;
    }
    return L1_DoubleJet60er3p0_;
}
const bool &Nano::L1_DoubleJet60er3p0_ETM100() {
    if (!loaded_L1_DoubleJet60er3p0_ETM100_) counter_uncached_L1_DoubleJet60er3p0_ETM100_++;
    else counter_cached_L1_DoubleJet60er3p0_ETM100_++;
    if (!loaded_L1_DoubleJet60er3p0_ETM100_) {
        if (!b_L1_DoubleJet60er3p0_ETM100_) throw std::runtime_error("L1_DoubleJet60er3p0_ETM100 branch doesn't exist");
        b_L1_DoubleJet60er3p0_ETM100_->GetEntry(index);
        loaded_L1_DoubleJet60er3p0_ETM100_ = true;
    }
    return L1_DoubleJet60er3p0_ETM100_;
}
const bool &Nano::L1_DoubleJet60er3p0_ETM60() {
    if (!loaded_L1_DoubleJet60er3p0_ETM60_) counter_uncached_L1_DoubleJet60er3p0_ETM60_++;
    else counter_cached_L1_DoubleJet60er3p0_ETM60_++;
    if (!loaded_L1_DoubleJet60er3p0_ETM60_) {
        if (!b_L1_DoubleJet60er3p0_ETM60_) throw std::runtime_error("L1_DoubleJet60er3p0_ETM60 branch doesn't exist");
        b_L1_DoubleJet60er3p0_ETM60_->GetEntry(index);
        loaded_L1_DoubleJet60er3p0_ETM60_ = true;
    }
    return L1_DoubleJet60er3p0_ETM60_;
}
const bool &Nano::L1_DoubleJet60er3p0_ETM70() {
    if (!loaded_L1_DoubleJet60er3p0_ETM70_) counter_uncached_L1_DoubleJet60er3p0_ETM70_++;
    else counter_cached_L1_DoubleJet60er3p0_ETM70_++;
    if (!loaded_L1_DoubleJet60er3p0_ETM70_) {
        if (!b_L1_DoubleJet60er3p0_ETM70_) throw std::runtime_error("L1_DoubleJet60er3p0_ETM70 branch doesn't exist");
        b_L1_DoubleJet60er3p0_ETM70_->GetEntry(index);
        loaded_L1_DoubleJet60er3p0_ETM70_ = true;
    }
    return L1_DoubleJet60er3p0_ETM70_;
}
const bool &Nano::L1_DoubleJet60er3p0_ETM80() {
    if (!loaded_L1_DoubleJet60er3p0_ETM80_) counter_uncached_L1_DoubleJet60er3p0_ETM80_++;
    else counter_cached_L1_DoubleJet60er3p0_ETM80_++;
    if (!loaded_L1_DoubleJet60er3p0_ETM80_) {
        if (!b_L1_DoubleJet60er3p0_ETM80_) throw std::runtime_error("L1_DoubleJet60er3p0_ETM80 branch doesn't exist");
        b_L1_DoubleJet60er3p0_ETM80_->GetEntry(index);
        loaded_L1_DoubleJet60er3p0_ETM80_ = true;
    }
    return L1_DoubleJet60er3p0_ETM80_;
}
const bool &Nano::L1_DoubleJet60er3p0_ETM90() {
    if (!loaded_L1_DoubleJet60er3p0_ETM90_) counter_uncached_L1_DoubleJet60er3p0_ETM90_++;
    else counter_cached_L1_DoubleJet60er3p0_ETM90_++;
    if (!loaded_L1_DoubleJet60er3p0_ETM90_) {
        if (!b_L1_DoubleJet60er3p0_ETM90_) throw std::runtime_error("L1_DoubleJet60er3p0_ETM90 branch doesn't exist");
        b_L1_DoubleJet60er3p0_ETM90_->GetEntry(index);
        loaded_L1_DoubleJet60er3p0_ETM90_ = true;
    }
    return L1_DoubleJet60er3p0_ETM90_;
}
const bool &Nano::L1_DoubleJet80er2p7() {
    if (!loaded_L1_DoubleJet80er2p7_) counter_uncached_L1_DoubleJet80er2p7_++;
    else counter_cached_L1_DoubleJet80er2p7_++;
    if (!loaded_L1_DoubleJet80er2p7_) {
        if (!b_L1_DoubleJet80er2p7_) throw std::runtime_error("L1_DoubleJet80er2p7 branch doesn't exist");
        b_L1_DoubleJet80er2p7_->GetEntry(index);
        loaded_L1_DoubleJet80er2p7_ = true;
    }
    return L1_DoubleJet80er2p7_;
}
const bool &Nano::L1_DoubleJet80er3p0() {
    if (!loaded_L1_DoubleJet80er3p0_) counter_uncached_L1_DoubleJet80er3p0_++;
    else counter_cached_L1_DoubleJet80er3p0_++;
    if (!loaded_L1_DoubleJet80er3p0_) {
        if (!b_L1_DoubleJet80er3p0_) throw std::runtime_error("L1_DoubleJet80er3p0 branch doesn't exist");
        b_L1_DoubleJet80er3p0_->GetEntry(index);
        loaded_L1_DoubleJet80er3p0_ = true;
    }
    return L1_DoubleJet80er3p0_;
}
const bool &Nano::L1_DoubleJet8_ForwardBackward() {
    if (!loaded_L1_DoubleJet8_ForwardBackward_) counter_uncached_L1_DoubleJet8_ForwardBackward_++;
    else counter_cached_L1_DoubleJet8_ForwardBackward_++;
    if (!loaded_L1_DoubleJet8_ForwardBackward_) {
        if (!b_L1_DoubleJet8_ForwardBackward_) throw std::runtime_error("L1_DoubleJet8_ForwardBackward branch doesn't exist");
        b_L1_DoubleJet8_ForwardBackward_->GetEntry(index);
        loaded_L1_DoubleJet8_ForwardBackward_ = true;
    }
    return L1_DoubleJet8_ForwardBackward_;
}
const bool &Nano::L1_DoubleJetC100() {
    if (!loaded_L1_DoubleJetC100_) counter_uncached_L1_DoubleJetC100_++;
    else counter_cached_L1_DoubleJetC100_++;
    if (!loaded_L1_DoubleJetC100_) {
        if (!b_L1_DoubleJetC100_) throw std::runtime_error("L1_DoubleJetC100 branch doesn't exist");
        b_L1_DoubleJetC100_->GetEntry(index);
        loaded_L1_DoubleJetC100_ = true;
    }
    return L1_DoubleJetC100_;
}
const bool &Nano::L1_DoubleJetC112() {
    if (!loaded_L1_DoubleJetC112_) counter_uncached_L1_DoubleJetC112_++;
    else counter_cached_L1_DoubleJetC112_++;
    if (!loaded_L1_DoubleJetC112_) {
        if (!b_L1_DoubleJetC112_) throw std::runtime_error("L1_DoubleJetC112 branch doesn't exist");
        b_L1_DoubleJetC112_->GetEntry(index);
        loaded_L1_DoubleJetC112_ = true;
    }
    return L1_DoubleJetC112_;
}
const bool &Nano::L1_DoubleJetC120() {
    if (!loaded_L1_DoubleJetC120_) counter_uncached_L1_DoubleJetC120_++;
    else counter_cached_L1_DoubleJetC120_++;
    if (!loaded_L1_DoubleJetC120_) {
        if (!b_L1_DoubleJetC120_) throw std::runtime_error("L1_DoubleJetC120 branch doesn't exist");
        b_L1_DoubleJetC120_->GetEntry(index);
        loaded_L1_DoubleJetC120_ = true;
    }
    return L1_DoubleJetC120_;
}
const bool &Nano::L1_DoubleJetC40() {
    if (!loaded_L1_DoubleJetC40_) counter_uncached_L1_DoubleJetC40_++;
    else counter_cached_L1_DoubleJetC40_++;
    if (!loaded_L1_DoubleJetC40_) {
        if (!b_L1_DoubleJetC40_) throw std::runtime_error("L1_DoubleJetC40 branch doesn't exist");
        b_L1_DoubleJetC40_->GetEntry(index);
        loaded_L1_DoubleJetC40_ = true;
    }
    return L1_DoubleJetC40_;
}
const bool &Nano::L1_DoubleJetC50() {
    if (!loaded_L1_DoubleJetC50_) counter_uncached_L1_DoubleJetC50_++;
    else counter_cached_L1_DoubleJetC50_++;
    if (!loaded_L1_DoubleJetC50_) {
        if (!b_L1_DoubleJetC50_) throw std::runtime_error("L1_DoubleJetC50 branch doesn't exist");
        b_L1_DoubleJetC50_->GetEntry(index);
        loaded_L1_DoubleJetC50_ = true;
    }
    return L1_DoubleJetC50_;
}
const bool &Nano::L1_DoubleJetC60() {
    if (!loaded_L1_DoubleJetC60_) counter_uncached_L1_DoubleJetC60_++;
    else counter_cached_L1_DoubleJetC60_++;
    if (!loaded_L1_DoubleJetC60_) {
        if (!b_L1_DoubleJetC60_) throw std::runtime_error("L1_DoubleJetC60 branch doesn't exist");
        b_L1_DoubleJetC60_->GetEntry(index);
        loaded_L1_DoubleJetC60_ = true;
    }
    return L1_DoubleJetC60_;
}
const bool &Nano::L1_DoubleJetC60_ETM60() {
    if (!loaded_L1_DoubleJetC60_ETM60_) counter_uncached_L1_DoubleJetC60_ETM60_++;
    else counter_cached_L1_DoubleJetC60_ETM60_++;
    if (!loaded_L1_DoubleJetC60_ETM60_) {
        if (!b_L1_DoubleJetC60_ETM60_) throw std::runtime_error("L1_DoubleJetC60_ETM60 branch doesn't exist");
        b_L1_DoubleJetC60_ETM60_->GetEntry(index);
        loaded_L1_DoubleJetC60_ETM60_ = true;
    }
    return L1_DoubleJetC60_ETM60_;
}
const bool &Nano::L1_DoubleJetC80() {
    if (!loaded_L1_DoubleJetC80_) counter_uncached_L1_DoubleJetC80_++;
    else counter_cached_L1_DoubleJetC80_++;
    if (!loaded_L1_DoubleJetC80_) {
        if (!b_L1_DoubleJetC80_) throw std::runtime_error("L1_DoubleJetC80 branch doesn't exist");
        b_L1_DoubleJetC80_->GetEntry(index);
        loaded_L1_DoubleJetC80_ = true;
    }
    return L1_DoubleJetC80_;
}
const bool &Nano::L1_DoubleJet_100_30_DoubleJet30_Mass_Min620() {
    if (!loaded_L1_DoubleJet_100_30_DoubleJet30_Mass_Min620_) counter_uncached_L1_DoubleJet_100_30_DoubleJet30_Mass_Min620_++;
    else counter_cached_L1_DoubleJet_100_30_DoubleJet30_Mass_Min620_++;
    if (!loaded_L1_DoubleJet_100_30_DoubleJet30_Mass_Min620_) {
        if (!b_L1_DoubleJet_100_30_DoubleJet30_Mass_Min620_) throw std::runtime_error("L1_DoubleJet_100_30_DoubleJet30_Mass_Min620 branch doesn't exist");
        b_L1_DoubleJet_100_30_DoubleJet30_Mass_Min620_->GetEntry(index);
        loaded_L1_DoubleJet_100_30_DoubleJet30_Mass_Min620_ = true;
    }
    return L1_DoubleJet_100_30_DoubleJet30_Mass_Min620_;
}
const bool &Nano::L1_DoubleJet_100_30_Mj30j30_620() {
    if (!loaded_L1_DoubleJet_100_30_Mj30j30_620_) counter_uncached_L1_DoubleJet_100_30_Mj30j30_620_++;
    else counter_cached_L1_DoubleJet_100_30_Mj30j30_620_++;
    if (!loaded_L1_DoubleJet_100_30_Mj30j30_620_) {
        if (!b_L1_DoubleJet_100_30_Mj30j30_620_) throw std::runtime_error("L1_DoubleJet_100_30_Mj30j30_620 branch doesn't exist");
        b_L1_DoubleJet_100_30_Mj30j30_620_->GetEntry(index);
        loaded_L1_DoubleJet_100_30_Mj30j30_620_ = true;
    }
    return L1_DoubleJet_100_30_Mj30j30_620_;
}
const bool &Nano::L1_DoubleJet_100_35_DoubleJet35_Mass_Min620() {
    if (!loaded_L1_DoubleJet_100_35_DoubleJet35_Mass_Min620_) counter_uncached_L1_DoubleJet_100_35_DoubleJet35_Mass_Min620_++;
    else counter_cached_L1_DoubleJet_100_35_DoubleJet35_Mass_Min620_++;
    if (!loaded_L1_DoubleJet_100_35_DoubleJet35_Mass_Min620_) {
        if (!b_L1_DoubleJet_100_35_DoubleJet35_Mass_Min620_) throw std::runtime_error("L1_DoubleJet_100_35_DoubleJet35_Mass_Min620 branch doesn't exist");
        b_L1_DoubleJet_100_35_DoubleJet35_Mass_Min620_->GetEntry(index);
        loaded_L1_DoubleJet_100_35_DoubleJet35_Mass_Min620_ = true;
    }
    return L1_DoubleJet_100_35_DoubleJet35_Mass_Min620_;
}
const bool &Nano::L1_DoubleJet_110_35_DoubleJet35_Mass_Min620() {
    if (!loaded_L1_DoubleJet_110_35_DoubleJet35_Mass_Min620_) counter_uncached_L1_DoubleJet_110_35_DoubleJet35_Mass_Min620_++;
    else counter_cached_L1_DoubleJet_110_35_DoubleJet35_Mass_Min620_++;
    if (!loaded_L1_DoubleJet_110_35_DoubleJet35_Mass_Min620_) {
        if (!b_L1_DoubleJet_110_35_DoubleJet35_Mass_Min620_) throw std::runtime_error("L1_DoubleJet_110_35_DoubleJet35_Mass_Min620 branch doesn't exist");
        b_L1_DoubleJet_110_35_DoubleJet35_Mass_Min620_->GetEntry(index);
        loaded_L1_DoubleJet_110_35_DoubleJet35_Mass_Min620_ = true;
    }
    return L1_DoubleJet_110_35_DoubleJet35_Mass_Min620_;
}
const bool &Nano::L1_DoubleJet_110_40_DoubleJet40_Mass_Min620() {
    if (!loaded_L1_DoubleJet_110_40_DoubleJet40_Mass_Min620_) counter_uncached_L1_DoubleJet_110_40_DoubleJet40_Mass_Min620_++;
    else counter_cached_L1_DoubleJet_110_40_DoubleJet40_Mass_Min620_++;
    if (!loaded_L1_DoubleJet_110_40_DoubleJet40_Mass_Min620_) {
        if (!b_L1_DoubleJet_110_40_DoubleJet40_Mass_Min620_) throw std::runtime_error("L1_DoubleJet_110_40_DoubleJet40_Mass_Min620 branch doesn't exist");
        b_L1_DoubleJet_110_40_DoubleJet40_Mass_Min620_->GetEntry(index);
        loaded_L1_DoubleJet_110_40_DoubleJet40_Mass_Min620_ = true;
    }
    return L1_DoubleJet_110_40_DoubleJet40_Mass_Min620_;
}
const bool &Nano::L1_DoubleJet_115_35_DoubleJet35_Mass_Min620() {
    if (!loaded_L1_DoubleJet_115_35_DoubleJet35_Mass_Min620_) counter_uncached_L1_DoubleJet_115_35_DoubleJet35_Mass_Min620_++;
    else counter_cached_L1_DoubleJet_115_35_DoubleJet35_Mass_Min620_++;
    if (!loaded_L1_DoubleJet_115_35_DoubleJet35_Mass_Min620_) {
        if (!b_L1_DoubleJet_115_35_DoubleJet35_Mass_Min620_) throw std::runtime_error("L1_DoubleJet_115_35_DoubleJet35_Mass_Min620 branch doesn't exist");
        b_L1_DoubleJet_115_35_DoubleJet35_Mass_Min620_->GetEntry(index);
        loaded_L1_DoubleJet_115_35_DoubleJet35_Mass_Min620_ = true;
    }
    return L1_DoubleJet_115_35_DoubleJet35_Mass_Min620_;
}
const bool &Nano::L1_DoubleJet_115_40_DoubleJet40_Mass_Min620() {
    if (!loaded_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_) counter_uncached_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_++;
    else counter_cached_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_++;
    if (!loaded_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_) {
        if (!b_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_) throw std::runtime_error("L1_DoubleJet_115_40_DoubleJet40_Mass_Min620 branch doesn't exist");
        b_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_->GetEntry(index);
        loaded_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_ = true;
    }
    return L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_;
}
const bool &Nano::L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28() {
    if (!loaded_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28_) counter_uncached_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28_++;
    else counter_cached_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28_++;
    if (!loaded_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28_) {
        if (!b_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28_) throw std::runtime_error("L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28 branch doesn't exist");
        b_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28_->GetEntry(index);
        loaded_L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28_ = true;
    }
    return L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28_;
}
const bool &Nano::L1_DoubleJet_120_45_DoubleJet45_Mass_Min620() {
    if (!loaded_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_) counter_uncached_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_++;
    else counter_cached_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_++;
    if (!loaded_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_) {
        if (!b_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_) throw std::runtime_error("L1_DoubleJet_120_45_DoubleJet45_Mass_Min620 branch doesn't exist");
        b_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_->GetEntry(index);
        loaded_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_ = true;
    }
    return L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_;
}
const bool &Nano::L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28() {
    if (!loaded_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28_) counter_uncached_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28_++;
    else counter_cached_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28_++;
    if (!loaded_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28_) {
        if (!b_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28_) throw std::runtime_error("L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28 branch doesn't exist");
        b_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28_->GetEntry(index);
        loaded_L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28_ = true;
    }
    return L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28_;
}
const bool &Nano::L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ() {
    if (!loaded_L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ_) counter_uncached_L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ_++;
    else counter_cached_L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ_++;
    if (!loaded_L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ_) {
        if (!b_L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ_) throw std::runtime_error("L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ branch doesn't exist");
        b_L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ_->GetEntry(index);
        loaded_L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ_ = true;
    }
    return L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ_;
}
const bool &Nano::L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp() {
    if (!loaded_L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp_) counter_uncached_L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp_++;
    else counter_cached_L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp_++;
    if (!loaded_L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp_) {
        if (!b_L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp_) throw std::runtime_error("L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp branch doesn't exist");
        b_L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp_->GetEntry(index);
        loaded_L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp_ = true;
    }
    return L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp_;
}
const bool &Nano::L1_DoubleJet_80_30_Mass_Min420_Mu8() {
    if (!loaded_L1_DoubleJet_80_30_Mass_Min420_Mu8_) counter_uncached_L1_DoubleJet_80_30_Mass_Min420_Mu8_++;
    else counter_cached_L1_DoubleJet_80_30_Mass_Min420_Mu8_++;
    if (!loaded_L1_DoubleJet_80_30_Mass_Min420_Mu8_) {
        if (!b_L1_DoubleJet_80_30_Mass_Min420_Mu8_) throw std::runtime_error("L1_DoubleJet_80_30_Mass_Min420_Mu8 branch doesn't exist");
        b_L1_DoubleJet_80_30_Mass_Min420_Mu8_->GetEntry(index);
        loaded_L1_DoubleJet_80_30_Mass_Min420_Mu8_ = true;
    }
    return L1_DoubleJet_80_30_Mass_Min420_Mu8_;
}
const bool &Nano::L1_DoubleJet_90_30_DoubleJet30_Mass_Min620() {
    if (!loaded_L1_DoubleJet_90_30_DoubleJet30_Mass_Min620_) counter_uncached_L1_DoubleJet_90_30_DoubleJet30_Mass_Min620_++;
    else counter_cached_L1_DoubleJet_90_30_DoubleJet30_Mass_Min620_++;
    if (!loaded_L1_DoubleJet_90_30_DoubleJet30_Mass_Min620_) {
        if (!b_L1_DoubleJet_90_30_DoubleJet30_Mass_Min620_) throw std::runtime_error("L1_DoubleJet_90_30_DoubleJet30_Mass_Min620 branch doesn't exist");
        b_L1_DoubleJet_90_30_DoubleJet30_Mass_Min620_->GetEntry(index);
        loaded_L1_DoubleJet_90_30_DoubleJet30_Mass_Min620_ = true;
    }
    return L1_DoubleJet_90_30_DoubleJet30_Mass_Min620_;
}
const bool &Nano::L1_DoubleJet_90_30_Mj30j30_620() {
    if (!loaded_L1_DoubleJet_90_30_Mj30j30_620_) counter_uncached_L1_DoubleJet_90_30_Mj30j30_620_++;
    else counter_cached_L1_DoubleJet_90_30_Mj30j30_620_++;
    if (!loaded_L1_DoubleJet_90_30_Mj30j30_620_) {
        if (!b_L1_DoubleJet_90_30_Mj30j30_620_) throw std::runtime_error("L1_DoubleJet_90_30_Mj30j30_620 branch doesn't exist");
        b_L1_DoubleJet_90_30_Mj30j30_620_->GetEntry(index);
        loaded_L1_DoubleJet_90_30_Mj30j30_620_ = true;
    }
    return L1_DoubleJet_90_30_Mj30j30_620_;
}
const bool &Nano::L1_DoubleLLPJet40() {
    if (!loaded_L1_DoubleLLPJet40_) counter_uncached_L1_DoubleLLPJet40_++;
    else counter_cached_L1_DoubleLLPJet40_++;
    if (!loaded_L1_DoubleLLPJet40_) {
        if (!b_L1_DoubleLLPJet40_) throw std::runtime_error("L1_DoubleLLPJet40 branch doesn't exist");
        b_L1_DoubleLLPJet40_->GetEntry(index);
        loaded_L1_DoubleLLPJet40_ = true;
    }
    return L1_DoubleLLPJet40_;
}
const bool &Nano::L1_DoubleLooseIsoEG22er2p1() {
    if (!loaded_L1_DoubleLooseIsoEG22er2p1_) counter_uncached_L1_DoubleLooseIsoEG22er2p1_++;
    else counter_cached_L1_DoubleLooseIsoEG22er2p1_++;
    if (!loaded_L1_DoubleLooseIsoEG22er2p1_) {
        if (!b_L1_DoubleLooseIsoEG22er2p1_) throw std::runtime_error("L1_DoubleLooseIsoEG22er2p1 branch doesn't exist");
        b_L1_DoubleLooseIsoEG22er2p1_->GetEntry(index);
        loaded_L1_DoubleLooseIsoEG22er2p1_ = true;
    }
    return L1_DoubleLooseIsoEG22er2p1_;
}
const bool &Nano::L1_DoubleLooseIsoEG24er2p1() {
    if (!loaded_L1_DoubleLooseIsoEG24er2p1_) counter_uncached_L1_DoubleLooseIsoEG24er2p1_++;
    else counter_cached_L1_DoubleLooseIsoEG24er2p1_++;
    if (!loaded_L1_DoubleLooseIsoEG24er2p1_) {
        if (!b_L1_DoubleLooseIsoEG24er2p1_) throw std::runtime_error("L1_DoubleLooseIsoEG24er2p1 branch doesn't exist");
        b_L1_DoubleLooseIsoEG24er2p1_->GetEntry(index);
        loaded_L1_DoubleLooseIsoEG24er2p1_ = true;
    }
    return L1_DoubleLooseIsoEG24er2p1_;
}
const bool &Nano::L1_DoubleMu0() {
    if (!loaded_L1_DoubleMu0_) counter_uncached_L1_DoubleMu0_++;
    else counter_cached_L1_DoubleMu0_++;
    if (!loaded_L1_DoubleMu0_) {
        if (!b_L1_DoubleMu0_) throw std::runtime_error("L1_DoubleMu0 branch doesn't exist");
        b_L1_DoubleMu0_->GetEntry(index);
        loaded_L1_DoubleMu0_ = true;
    }
    return L1_DoubleMu0_;
}
const bool &Nano::L1_DoubleMu0_ETM40() {
    if (!loaded_L1_DoubleMu0_ETM40_) counter_uncached_L1_DoubleMu0_ETM40_++;
    else counter_cached_L1_DoubleMu0_ETM40_++;
    if (!loaded_L1_DoubleMu0_ETM40_) {
        if (!b_L1_DoubleMu0_ETM40_) throw std::runtime_error("L1_DoubleMu0_ETM40 branch doesn't exist");
        b_L1_DoubleMu0_ETM40_->GetEntry(index);
        loaded_L1_DoubleMu0_ETM40_ = true;
    }
    return L1_DoubleMu0_ETM40_;
}
const bool &Nano::L1_DoubleMu0_ETM55() {
    if (!loaded_L1_DoubleMu0_ETM55_) counter_uncached_L1_DoubleMu0_ETM55_++;
    else counter_cached_L1_DoubleMu0_ETM55_++;
    if (!loaded_L1_DoubleMu0_ETM55_) {
        if (!b_L1_DoubleMu0_ETM55_) throw std::runtime_error("L1_DoubleMu0_ETM55 branch doesn't exist");
        b_L1_DoubleMu0_ETM55_->GetEntry(index);
        loaded_L1_DoubleMu0_ETM55_ = true;
    }
    return L1_DoubleMu0_ETM55_;
}
const bool &Nano::L1_DoubleMu0_ETM60() {
    if (!loaded_L1_DoubleMu0_ETM60_) counter_uncached_L1_DoubleMu0_ETM60_++;
    else counter_cached_L1_DoubleMu0_ETM60_++;
    if (!loaded_L1_DoubleMu0_ETM60_) {
        if (!b_L1_DoubleMu0_ETM60_) throw std::runtime_error("L1_DoubleMu0_ETM60 branch doesn't exist");
        b_L1_DoubleMu0_ETM60_->GetEntry(index);
        loaded_L1_DoubleMu0_ETM60_ = true;
    }
    return L1_DoubleMu0_ETM60_;
}
const bool &Nano::L1_DoubleMu0_ETM65() {
    if (!loaded_L1_DoubleMu0_ETM65_) counter_uncached_L1_DoubleMu0_ETM65_++;
    else counter_cached_L1_DoubleMu0_ETM65_++;
    if (!loaded_L1_DoubleMu0_ETM65_) {
        if (!b_L1_DoubleMu0_ETM65_) throw std::runtime_error("L1_DoubleMu0_ETM65 branch doesn't exist");
        b_L1_DoubleMu0_ETM65_->GetEntry(index);
        loaded_L1_DoubleMu0_ETM65_ = true;
    }
    return L1_DoubleMu0_ETM65_;
}
const bool &Nano::L1_DoubleMu0_ETM70() {
    if (!loaded_L1_DoubleMu0_ETM70_) counter_uncached_L1_DoubleMu0_ETM70_++;
    else counter_cached_L1_DoubleMu0_ETM70_++;
    if (!loaded_L1_DoubleMu0_ETM70_) {
        if (!b_L1_DoubleMu0_ETM70_) throw std::runtime_error("L1_DoubleMu0_ETM70 branch doesn't exist");
        b_L1_DoubleMu0_ETM70_->GetEntry(index);
        loaded_L1_DoubleMu0_ETM70_ = true;
    }
    return L1_DoubleMu0_ETM70_;
}
const bool &Nano::L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30_) counter_uncached_L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30_) {
        if (!b_L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30_) counter_uncached_L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30_) {
        if (!b_L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30_) counter_uncached_L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30_) {
        if (!b_L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30_) counter_uncached_L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30_) {
        if (!b_L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30_) counter_uncached_L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30_) {
        if (!b_L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_DoubleMu0_Mass_Min1() {
    if (!loaded_L1_DoubleMu0_Mass_Min1_) counter_uncached_L1_DoubleMu0_Mass_Min1_++;
    else counter_cached_L1_DoubleMu0_Mass_Min1_++;
    if (!loaded_L1_DoubleMu0_Mass_Min1_) {
        if (!b_L1_DoubleMu0_Mass_Min1_) throw std::runtime_error("L1_DoubleMu0_Mass_Min1 branch doesn't exist");
        b_L1_DoubleMu0_Mass_Min1_->GetEntry(index);
        loaded_L1_DoubleMu0_Mass_Min1_ = true;
    }
    return L1_DoubleMu0_Mass_Min1_;
}
const bool &Nano::L1_DoubleMu0_OQ() {
    if (!loaded_L1_DoubleMu0_OQ_) counter_uncached_L1_DoubleMu0_OQ_++;
    else counter_cached_L1_DoubleMu0_OQ_++;
    if (!loaded_L1_DoubleMu0_OQ_) {
        if (!b_L1_DoubleMu0_OQ_) throw std::runtime_error("L1_DoubleMu0_OQ branch doesn't exist");
        b_L1_DoubleMu0_OQ_->GetEntry(index);
        loaded_L1_DoubleMu0_OQ_ = true;
    }
    return L1_DoubleMu0_OQ_;
}
const bool &Nano::L1_DoubleMu0_SQ() {
    if (!loaded_L1_DoubleMu0_SQ_) counter_uncached_L1_DoubleMu0_SQ_++;
    else counter_cached_L1_DoubleMu0_SQ_++;
    if (!loaded_L1_DoubleMu0_SQ_) {
        if (!b_L1_DoubleMu0_SQ_) throw std::runtime_error("L1_DoubleMu0_SQ branch doesn't exist");
        b_L1_DoubleMu0_SQ_->GetEntry(index);
        loaded_L1_DoubleMu0_SQ_ = true;
    }
    return L1_DoubleMu0_SQ_;
}
const bool &Nano::L1_DoubleMu0_SQ_OS() {
    if (!loaded_L1_DoubleMu0_SQ_OS_) counter_uncached_L1_DoubleMu0_SQ_OS_++;
    else counter_cached_L1_DoubleMu0_SQ_OS_++;
    if (!loaded_L1_DoubleMu0_SQ_OS_) {
        if (!b_L1_DoubleMu0_SQ_OS_) throw std::runtime_error("L1_DoubleMu0_SQ_OS branch doesn't exist");
        b_L1_DoubleMu0_SQ_OS_->GetEntry(index);
        loaded_L1_DoubleMu0_SQ_OS_ = true;
    }
    return L1_DoubleMu0_SQ_OS_;
}
const bool &Nano::L1_DoubleMu0_Upt15_Upt7() {
    if (!loaded_L1_DoubleMu0_Upt15_Upt7_) counter_uncached_L1_DoubleMu0_Upt15_Upt7_++;
    else counter_cached_L1_DoubleMu0_Upt15_Upt7_++;
    if (!loaded_L1_DoubleMu0_Upt15_Upt7_) {
        if (!b_L1_DoubleMu0_Upt15_Upt7_) throw std::runtime_error("L1_DoubleMu0_Upt15_Upt7 branch doesn't exist");
        b_L1_DoubleMu0_Upt15_Upt7_->GetEntry(index);
        loaded_L1_DoubleMu0_Upt15_Upt7_ = true;
    }
    return L1_DoubleMu0_Upt15_Upt7_;
}
const bool &Nano::L1_DoubleMu0_Upt5_Upt5() {
    if (!loaded_L1_DoubleMu0_Upt5_Upt5_) counter_uncached_L1_DoubleMu0_Upt5_Upt5_++;
    else counter_cached_L1_DoubleMu0_Upt5_Upt5_++;
    if (!loaded_L1_DoubleMu0_Upt5_Upt5_) {
        if (!b_L1_DoubleMu0_Upt5_Upt5_) throw std::runtime_error("L1_DoubleMu0_Upt5_Upt5 branch doesn't exist");
        b_L1_DoubleMu0_Upt5_Upt5_->GetEntry(index);
        loaded_L1_DoubleMu0_Upt5_Upt5_ = true;
    }
    return L1_DoubleMu0_Upt5_Upt5_;
}
const bool &Nano::L1_DoubleMu0_Upt6_IP_Min1_Upt4() {
    if (!loaded_L1_DoubleMu0_Upt6_IP_Min1_Upt4_) counter_uncached_L1_DoubleMu0_Upt6_IP_Min1_Upt4_++;
    else counter_cached_L1_DoubleMu0_Upt6_IP_Min1_Upt4_++;
    if (!loaded_L1_DoubleMu0_Upt6_IP_Min1_Upt4_) {
        if (!b_L1_DoubleMu0_Upt6_IP_Min1_Upt4_) throw std::runtime_error("L1_DoubleMu0_Upt6_IP_Min1_Upt4 branch doesn't exist");
        b_L1_DoubleMu0_Upt6_IP_Min1_Upt4_->GetEntry(index);
        loaded_L1_DoubleMu0_Upt6_IP_Min1_Upt4_ = true;
    }
    return L1_DoubleMu0_Upt6_IP_Min1_Upt4_;
}
const bool &Nano::L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8() {
    if (!loaded_L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8_) counter_uncached_L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8_++;
    else counter_cached_L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8_++;
    if (!loaded_L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8_) {
        if (!b_L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8_) throw std::runtime_error("L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8 branch doesn't exist");
        b_L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8_->GetEntry(index);
        loaded_L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8_ = true;
    }
    return L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8_;
}
const bool &Nano::L1_DoubleMu0er1p25_dEta_Max1p8_OS() {
    if (!loaded_L1_DoubleMu0er1p25_dEta_Max1p8_OS_) counter_uncached_L1_DoubleMu0er1p25_dEta_Max1p8_OS_++;
    else counter_cached_L1_DoubleMu0er1p25_dEta_Max1p8_OS_++;
    if (!loaded_L1_DoubleMu0er1p25_dEta_Max1p8_OS_) {
        if (!b_L1_DoubleMu0er1p25_dEta_Max1p8_OS_) throw std::runtime_error("L1_DoubleMu0er1p25_dEta_Max1p8_OS branch doesn't exist");
        b_L1_DoubleMu0er1p25_dEta_Max1p8_OS_->GetEntry(index);
        loaded_L1_DoubleMu0er1p25_dEta_Max1p8_OS_ = true;
    }
    return L1_DoubleMu0er1p25_dEta_Max1p8_OS_;
}
const bool &Nano::L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6() {
    if (!loaded_L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6_) counter_uncached_L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6_++;
    else counter_cached_L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6_++;
    if (!loaded_L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6_) {
        if (!b_L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6_) throw std::runtime_error("L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6 branch doesn't exist");
        b_L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6_->GetEntry(index);
        loaded_L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6_ = true;
    }
    return L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6_;
}
const bool &Nano::L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4() {
    if (!loaded_L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4_) counter_uncached_L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4_++;
    else counter_cached_L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4_++;
    if (!loaded_L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4_) {
        if (!b_L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4_) throw std::runtime_error("L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4 branch doesn't exist");
        b_L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4_->GetEntry(index);
        loaded_L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4_ = true;
    }
    return L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4_;
}
const bool &Nano::L1_DoubleMu0er1p4_dEta_Max1p8_OS() {
    if (!loaded_L1_DoubleMu0er1p4_dEta_Max1p8_OS_) counter_uncached_L1_DoubleMu0er1p4_dEta_Max1p8_OS_++;
    else counter_cached_L1_DoubleMu0er1p4_dEta_Max1p8_OS_++;
    if (!loaded_L1_DoubleMu0er1p4_dEta_Max1p8_OS_) {
        if (!b_L1_DoubleMu0er1p4_dEta_Max1p8_OS_) throw std::runtime_error("L1_DoubleMu0er1p4_dEta_Max1p8_OS branch doesn't exist");
        b_L1_DoubleMu0er1p4_dEta_Max1p8_OS_->GetEntry(index);
        loaded_L1_DoubleMu0er1p4_dEta_Max1p8_OS_ = true;
    }
    return L1_DoubleMu0er1p4_dEta_Max1p8_OS_;
}
const bool &Nano::L1_DoubleMu0er1p5_SQ() {
    if (!loaded_L1_DoubleMu0er1p5_SQ_) counter_uncached_L1_DoubleMu0er1p5_SQ_++;
    else counter_cached_L1_DoubleMu0er1p5_SQ_++;
    if (!loaded_L1_DoubleMu0er1p5_SQ_) {
        if (!b_L1_DoubleMu0er1p5_SQ_) throw std::runtime_error("L1_DoubleMu0er1p5_SQ branch doesn't exist");
        b_L1_DoubleMu0er1p5_SQ_->GetEntry(index);
        loaded_L1_DoubleMu0er1p5_SQ_ = true;
    }
    return L1_DoubleMu0er1p5_SQ_;
}
const bool &Nano::L1_DoubleMu0er1p5_SQ_OS() {
    if (!loaded_L1_DoubleMu0er1p5_SQ_OS_) counter_uncached_L1_DoubleMu0er1p5_SQ_OS_++;
    else counter_cached_L1_DoubleMu0er1p5_SQ_OS_++;
    if (!loaded_L1_DoubleMu0er1p5_SQ_OS_) {
        if (!b_L1_DoubleMu0er1p5_SQ_OS_) throw std::runtime_error("L1_DoubleMu0er1p5_SQ_OS branch doesn't exist");
        b_L1_DoubleMu0er1p5_SQ_OS_->GetEntry(index);
        loaded_L1_DoubleMu0er1p5_SQ_OS_ = true;
    }
    return L1_DoubleMu0er1p5_SQ_OS_;
}
const bool &Nano::L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4() {
    if (!loaded_L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4_) counter_uncached_L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4_++;
    else counter_cached_L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4_++;
    if (!loaded_L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4_) {
        if (!b_L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4_) throw std::runtime_error("L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4 branch doesn't exist");
        b_L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4_->GetEntry(index);
        loaded_L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4_ = true;
    }
    return L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4_;
}
const bool &Nano::L1_DoubleMu0er1p5_SQ_dR_Max1p4() {
    if (!loaded_L1_DoubleMu0er1p5_SQ_dR_Max1p4_) counter_uncached_L1_DoubleMu0er1p5_SQ_dR_Max1p4_++;
    else counter_cached_L1_DoubleMu0er1p5_SQ_dR_Max1p4_++;
    if (!loaded_L1_DoubleMu0er1p5_SQ_dR_Max1p4_) {
        if (!b_L1_DoubleMu0er1p5_SQ_dR_Max1p4_) throw std::runtime_error("L1_DoubleMu0er1p5_SQ_dR_Max1p4 branch doesn't exist");
        b_L1_DoubleMu0er1p5_SQ_dR_Max1p4_->GetEntry(index);
        loaded_L1_DoubleMu0er1p5_SQ_dR_Max1p4_ = true;
    }
    return L1_DoubleMu0er1p5_SQ_dR_Max1p4_;
}
const bool &Nano::L1_DoubleMu0er1p6_dEta_Max1p8() {
    if (!loaded_L1_DoubleMu0er1p6_dEta_Max1p8_) counter_uncached_L1_DoubleMu0er1p6_dEta_Max1p8_++;
    else counter_cached_L1_DoubleMu0er1p6_dEta_Max1p8_++;
    if (!loaded_L1_DoubleMu0er1p6_dEta_Max1p8_) {
        if (!b_L1_DoubleMu0er1p6_dEta_Max1p8_) throw std::runtime_error("L1_DoubleMu0er1p6_dEta_Max1p8 branch doesn't exist");
        b_L1_DoubleMu0er1p6_dEta_Max1p8_->GetEntry(index);
        loaded_L1_DoubleMu0er1p6_dEta_Max1p8_ = true;
    }
    return L1_DoubleMu0er1p6_dEta_Max1p8_;
}
const bool &Nano::L1_DoubleMu0er1p6_dEta_Max1p8_OS() {
    if (!loaded_L1_DoubleMu0er1p6_dEta_Max1p8_OS_) counter_uncached_L1_DoubleMu0er1p6_dEta_Max1p8_OS_++;
    else counter_cached_L1_DoubleMu0er1p6_dEta_Max1p8_OS_++;
    if (!loaded_L1_DoubleMu0er1p6_dEta_Max1p8_OS_) {
        if (!b_L1_DoubleMu0er1p6_dEta_Max1p8_OS_) throw std::runtime_error("L1_DoubleMu0er1p6_dEta_Max1p8_OS branch doesn't exist");
        b_L1_DoubleMu0er1p6_dEta_Max1p8_OS_->GetEntry(index);
        loaded_L1_DoubleMu0er1p6_dEta_Max1p8_OS_ = true;
    }
    return L1_DoubleMu0er1p6_dEta_Max1p8_OS_;
}
const bool &Nano::L1_DoubleMu0er2_SQ_dR_Max1p4() {
    if (!loaded_L1_DoubleMu0er2_SQ_dR_Max1p4_) counter_uncached_L1_DoubleMu0er2_SQ_dR_Max1p4_++;
    else counter_cached_L1_DoubleMu0er2_SQ_dR_Max1p4_++;
    if (!loaded_L1_DoubleMu0er2_SQ_dR_Max1p4_) {
        if (!b_L1_DoubleMu0er2_SQ_dR_Max1p4_) throw std::runtime_error("L1_DoubleMu0er2_SQ_dR_Max1p4 branch doesn't exist");
        b_L1_DoubleMu0er2_SQ_dR_Max1p4_->GetEntry(index);
        loaded_L1_DoubleMu0er2_SQ_dR_Max1p4_ = true;
    }
    return L1_DoubleMu0er2_SQ_dR_Max1p4_;
}
const bool &Nano::L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5() {
    if (!loaded_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5_) counter_uncached_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5_++;
    else counter_cached_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5_++;
    if (!loaded_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5_) {
        if (!b_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5_) throw std::runtime_error("L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5 branch doesn't exist");
        b_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5_->GetEntry(index);
        loaded_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5_ = true;
    }
    return L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5_;
}
const bool &Nano::L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6() {
    if (!loaded_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6_) counter_uncached_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6_++;
    else counter_cached_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6_++;
    if (!loaded_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6_) {
        if (!b_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6_) throw std::runtime_error("L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6 branch doesn't exist");
        b_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6_->GetEntry(index);
        loaded_L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6_ = true;
    }
    return L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6_;
}
const bool &Nano::L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4() {
    if (!loaded_L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4_) counter_uncached_L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4_++;
    else counter_cached_L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4_++;
    if (!loaded_L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4_) {
        if (!b_L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4_) throw std::runtime_error("L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4 branch doesn't exist");
        b_L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4_->GetEntry(index);
        loaded_L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4_ = true;
    }
    return L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4_;
}
const bool &Nano::L1_DoubleMu0er2p0_SQ_dEta_Max1p5() {
    if (!loaded_L1_DoubleMu0er2p0_SQ_dEta_Max1p5_) counter_uncached_L1_DoubleMu0er2p0_SQ_dEta_Max1p5_++;
    else counter_cached_L1_DoubleMu0er2p0_SQ_dEta_Max1p5_++;
    if (!loaded_L1_DoubleMu0er2p0_SQ_dEta_Max1p5_) {
        if (!b_L1_DoubleMu0er2p0_SQ_dEta_Max1p5_) throw std::runtime_error("L1_DoubleMu0er2p0_SQ_dEta_Max1p5 branch doesn't exist");
        b_L1_DoubleMu0er2p0_SQ_dEta_Max1p5_->GetEntry(index);
        loaded_L1_DoubleMu0er2p0_SQ_dEta_Max1p5_ = true;
    }
    return L1_DoubleMu0er2p0_SQ_dEta_Max1p5_;
}
const bool &Nano::L1_DoubleMu0er2p0_SQ_dEta_Max1p6() {
    if (!loaded_L1_DoubleMu0er2p0_SQ_dEta_Max1p6_) counter_uncached_L1_DoubleMu0er2p0_SQ_dEta_Max1p6_++;
    else counter_cached_L1_DoubleMu0er2p0_SQ_dEta_Max1p6_++;
    if (!loaded_L1_DoubleMu0er2p0_SQ_dEta_Max1p6_) {
        if (!b_L1_DoubleMu0er2p0_SQ_dEta_Max1p6_) throw std::runtime_error("L1_DoubleMu0er2p0_SQ_dEta_Max1p6 branch doesn't exist");
        b_L1_DoubleMu0er2p0_SQ_dEta_Max1p6_->GetEntry(index);
        loaded_L1_DoubleMu0er2p0_SQ_dEta_Max1p6_ = true;
    }
    return L1_DoubleMu0er2p0_SQ_dEta_Max1p6_;
}
const bool &Nano::L1_DoubleMu0er2p0_SQ_dR_Max1p4() {
    if (!loaded_L1_DoubleMu0er2p0_SQ_dR_Max1p4_) counter_uncached_L1_DoubleMu0er2p0_SQ_dR_Max1p4_++;
    else counter_cached_L1_DoubleMu0er2p0_SQ_dR_Max1p4_++;
    if (!loaded_L1_DoubleMu0er2p0_SQ_dR_Max1p4_) {
        if (!b_L1_DoubleMu0er2p0_SQ_dR_Max1p4_) throw std::runtime_error("L1_DoubleMu0er2p0_SQ_dR_Max1p4 branch doesn't exist");
        b_L1_DoubleMu0er2p0_SQ_dR_Max1p4_->GetEntry(index);
        loaded_L1_DoubleMu0er2p0_SQ_dR_Max1p4_ = true;
    }
    return L1_DoubleMu0er2p0_SQ_dR_Max1p4_;
}
const bool &Nano::L1_DoubleMu10_SQ() {
    if (!loaded_L1_DoubleMu10_SQ_) counter_uncached_L1_DoubleMu10_SQ_++;
    else counter_cached_L1_DoubleMu10_SQ_++;
    if (!loaded_L1_DoubleMu10_SQ_) {
        if (!b_L1_DoubleMu10_SQ_) throw std::runtime_error("L1_DoubleMu10_SQ branch doesn't exist");
        b_L1_DoubleMu10_SQ_->GetEntry(index);
        loaded_L1_DoubleMu10_SQ_ = true;
    }
    return L1_DoubleMu10_SQ_;
}
const bool &Nano::L1_DoubleMu18er2p1() {
    if (!loaded_L1_DoubleMu18er2p1_) counter_uncached_L1_DoubleMu18er2p1_++;
    else counter_cached_L1_DoubleMu18er2p1_++;
    if (!loaded_L1_DoubleMu18er2p1_) {
        if (!b_L1_DoubleMu18er2p1_) throw std::runtime_error("L1_DoubleMu18er2p1 branch doesn't exist");
        b_L1_DoubleMu18er2p1_->GetEntry(index);
        loaded_L1_DoubleMu18er2p1_ = true;
    }
    return L1_DoubleMu18er2p1_;
}
const bool &Nano::L1_DoubleMu18er2p1_SQ() {
    if (!loaded_L1_DoubleMu18er2p1_SQ_) counter_uncached_L1_DoubleMu18er2p1_SQ_++;
    else counter_cached_L1_DoubleMu18er2p1_SQ_++;
    if (!loaded_L1_DoubleMu18er2p1_SQ_) {
        if (!b_L1_DoubleMu18er2p1_SQ_) throw std::runtime_error("L1_DoubleMu18er2p1_SQ branch doesn't exist");
        b_L1_DoubleMu18er2p1_SQ_->GetEntry(index);
        loaded_L1_DoubleMu18er2p1_SQ_ = true;
    }
    return L1_DoubleMu18er2p1_SQ_;
}
const bool &Nano::L1_DoubleMu22er2p1() {
    if (!loaded_L1_DoubleMu22er2p1_) counter_uncached_L1_DoubleMu22er2p1_++;
    else counter_cached_L1_DoubleMu22er2p1_++;
    if (!loaded_L1_DoubleMu22er2p1_) {
        if (!b_L1_DoubleMu22er2p1_) throw std::runtime_error("L1_DoubleMu22er2p1 branch doesn't exist");
        b_L1_DoubleMu22er2p1_->GetEntry(index);
        loaded_L1_DoubleMu22er2p1_ = true;
    }
    return L1_DoubleMu22er2p1_;
}
const bool &Nano::L1_DoubleMu3_OS_DoubleEG7p5Upsilon() {
    if (!loaded_L1_DoubleMu3_OS_DoubleEG7p5Upsilon_) counter_uncached_L1_DoubleMu3_OS_DoubleEG7p5Upsilon_++;
    else counter_cached_L1_DoubleMu3_OS_DoubleEG7p5Upsilon_++;
    if (!loaded_L1_DoubleMu3_OS_DoubleEG7p5Upsilon_) {
        if (!b_L1_DoubleMu3_OS_DoubleEG7p5Upsilon_) throw std::runtime_error("L1_DoubleMu3_OS_DoubleEG7p5Upsilon branch doesn't exist");
        b_L1_DoubleMu3_OS_DoubleEG7p5Upsilon_->GetEntry(index);
        loaded_L1_DoubleMu3_OS_DoubleEG7p5Upsilon_ = true;
    }
    return L1_DoubleMu3_OS_DoubleEG7p5Upsilon_;
}
const bool &Nano::L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20() {
    if (!loaded_L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20_) counter_uncached_L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20_++;
    else counter_cached_L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20_++;
    if (!loaded_L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20_) {
        if (!b_L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20_) throw std::runtime_error("L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20 branch doesn't exist");
        b_L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20_->GetEntry(index);
        loaded_L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20_ = true;
    }
    return L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20_;
}
const bool &Nano::L1_DoubleMu3_SQ_ETMHF30_HTT60er() {
    if (!loaded_L1_DoubleMu3_SQ_ETMHF30_HTT60er_) counter_uncached_L1_DoubleMu3_SQ_ETMHF30_HTT60er_++;
    else counter_cached_L1_DoubleMu3_SQ_ETMHF30_HTT60er_++;
    if (!loaded_L1_DoubleMu3_SQ_ETMHF30_HTT60er_) {
        if (!b_L1_DoubleMu3_SQ_ETMHF30_HTT60er_) throw std::runtime_error("L1_DoubleMu3_SQ_ETMHF30_HTT60er branch doesn't exist");
        b_L1_DoubleMu3_SQ_ETMHF30_HTT60er_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_ETMHF30_HTT60er_ = true;
    }
    return L1_DoubleMu3_SQ_ETMHF30_HTT60er_;
}
const bool &Nano::L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5() {
    if (!loaded_L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5_) counter_uncached_L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5_++;
    else counter_cached_L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5_++;
    if (!loaded_L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5_) {
        if (!b_L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5_) throw std::runtime_error("L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5 branch doesn't exist");
        b_L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5_ = true;
    }
    return L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5_;
}
const bool &Nano::L1_DoubleMu3_SQ_ETMHF40_HTT60er() {
    if (!loaded_L1_DoubleMu3_SQ_ETMHF40_HTT60er_) counter_uncached_L1_DoubleMu3_SQ_ETMHF40_HTT60er_++;
    else counter_cached_L1_DoubleMu3_SQ_ETMHF40_HTT60er_++;
    if (!loaded_L1_DoubleMu3_SQ_ETMHF40_HTT60er_) {
        if (!b_L1_DoubleMu3_SQ_ETMHF40_HTT60er_) throw std::runtime_error("L1_DoubleMu3_SQ_ETMHF40_HTT60er branch doesn't exist");
        b_L1_DoubleMu3_SQ_ETMHF40_HTT60er_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_ETMHF40_HTT60er_ = true;
    }
    return L1_DoubleMu3_SQ_ETMHF40_HTT60er_;
}
const bool &Nano::L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30_) counter_uncached_L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30_) {
        if (!b_L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5() {
    if (!loaded_L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5_) counter_uncached_L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5_++;
    else counter_cached_L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5_++;
    if (!loaded_L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5_) {
        if (!b_L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5_) throw std::runtime_error("L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5 branch doesn't exist");
        b_L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5_ = true;
    }
    return L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5_;
}
const bool &Nano::L1_DoubleMu3_SQ_ETMHF50_HTT60er() {
    if (!loaded_L1_DoubleMu3_SQ_ETMHF50_HTT60er_) counter_uncached_L1_DoubleMu3_SQ_ETMHF50_HTT60er_++;
    else counter_cached_L1_DoubleMu3_SQ_ETMHF50_HTT60er_++;
    if (!loaded_L1_DoubleMu3_SQ_ETMHF50_HTT60er_) {
        if (!b_L1_DoubleMu3_SQ_ETMHF50_HTT60er_) throw std::runtime_error("L1_DoubleMu3_SQ_ETMHF50_HTT60er branch doesn't exist");
        b_L1_DoubleMu3_SQ_ETMHF50_HTT60er_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_ETMHF50_HTT60er_ = true;
    }
    return L1_DoubleMu3_SQ_ETMHF50_HTT60er_;
}
const bool &Nano::L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30_) counter_uncached_L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30_) {
        if (!b_L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5() {
    if (!loaded_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_) counter_uncached_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_++;
    else counter_cached_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_++;
    if (!loaded_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_) {
        if (!b_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_) throw std::runtime_error("L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5 branch doesn't exist");
        b_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_ = true;
    }
    return L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_;
}
const bool &Nano::L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5() {
    if (!loaded_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5_) counter_uncached_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5_++;
    else counter_cached_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5_++;
    if (!loaded_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5_) {
        if (!b_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5_) throw std::runtime_error("L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5 branch doesn't exist");
        b_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5_ = true;
    }
    return L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5_;
}
const bool &Nano::L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30_) counter_uncached_L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30_) {
        if (!b_L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5() {
    if (!loaded_L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5_) counter_uncached_L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5_++;
    else counter_cached_L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5_++;
    if (!loaded_L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5_) {
        if (!b_L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5_) throw std::runtime_error("L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5 branch doesn't exist");
        b_L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5_ = true;
    }
    return L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5_;
}
const bool &Nano::L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30_) counter_uncached_L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30_) {
        if (!b_L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30_) counter_uncached_L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30_) {
        if (!b_L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_DoubleMu3_SQ_HTT100er() {
    if (!loaded_L1_DoubleMu3_SQ_HTT100er_) counter_uncached_L1_DoubleMu3_SQ_HTT100er_++;
    else counter_cached_L1_DoubleMu3_SQ_HTT100er_++;
    if (!loaded_L1_DoubleMu3_SQ_HTT100er_) {
        if (!b_L1_DoubleMu3_SQ_HTT100er_) throw std::runtime_error("L1_DoubleMu3_SQ_HTT100er branch doesn't exist");
        b_L1_DoubleMu3_SQ_HTT100er_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_HTT100er_ = true;
    }
    return L1_DoubleMu3_SQ_HTT100er_;
}
const bool &Nano::L1_DoubleMu3_SQ_HTT200er() {
    if (!loaded_L1_DoubleMu3_SQ_HTT200er_) counter_uncached_L1_DoubleMu3_SQ_HTT200er_++;
    else counter_cached_L1_DoubleMu3_SQ_HTT200er_++;
    if (!loaded_L1_DoubleMu3_SQ_HTT200er_) {
        if (!b_L1_DoubleMu3_SQ_HTT200er_) throw std::runtime_error("L1_DoubleMu3_SQ_HTT200er branch doesn't exist");
        b_L1_DoubleMu3_SQ_HTT200er_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_HTT200er_ = true;
    }
    return L1_DoubleMu3_SQ_HTT200er_;
}
const bool &Nano::L1_DoubleMu3_SQ_HTT220er() {
    if (!loaded_L1_DoubleMu3_SQ_HTT220er_) counter_uncached_L1_DoubleMu3_SQ_HTT220er_++;
    else counter_cached_L1_DoubleMu3_SQ_HTT220er_++;
    if (!loaded_L1_DoubleMu3_SQ_HTT220er_) {
        if (!b_L1_DoubleMu3_SQ_HTT220er_) throw std::runtime_error("L1_DoubleMu3_SQ_HTT220er branch doesn't exist");
        b_L1_DoubleMu3_SQ_HTT220er_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_HTT220er_ = true;
    }
    return L1_DoubleMu3_SQ_HTT220er_;
}
const bool &Nano::L1_DoubleMu3_SQ_HTT240er() {
    if (!loaded_L1_DoubleMu3_SQ_HTT240er_) counter_uncached_L1_DoubleMu3_SQ_HTT240er_++;
    else counter_cached_L1_DoubleMu3_SQ_HTT240er_++;
    if (!loaded_L1_DoubleMu3_SQ_HTT240er_) {
        if (!b_L1_DoubleMu3_SQ_HTT240er_) throw std::runtime_error("L1_DoubleMu3_SQ_HTT240er branch doesn't exist");
        b_L1_DoubleMu3_SQ_HTT240er_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_HTT240er_ = true;
    }
    return L1_DoubleMu3_SQ_HTT240er_;
}
const bool &Nano::L1_DoubleMu3_SQ_HTT260er() {
    if (!loaded_L1_DoubleMu3_SQ_HTT260er_) counter_uncached_L1_DoubleMu3_SQ_HTT260er_++;
    else counter_cached_L1_DoubleMu3_SQ_HTT260er_++;
    if (!loaded_L1_DoubleMu3_SQ_HTT260er_) {
        if (!b_L1_DoubleMu3_SQ_HTT260er_) throw std::runtime_error("L1_DoubleMu3_SQ_HTT260er branch doesn't exist");
        b_L1_DoubleMu3_SQ_HTT260er_->GetEntry(index);
        loaded_L1_DoubleMu3_SQ_HTT260er_ = true;
    }
    return L1_DoubleMu3_SQ_HTT260er_;
}
const bool &Nano::L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8() {
    if (!loaded_L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8_) counter_uncached_L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8_++;
    else counter_cached_L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8_++;
    if (!loaded_L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8_) {
        if (!b_L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8_) throw std::runtime_error("L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8 branch doesn't exist");
        b_L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8_->GetEntry(index);
        loaded_L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8_ = true;
    }
    return L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8_;
}
const bool &Nano::L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4() {
    if (!loaded_L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4_) counter_uncached_L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4_++;
    else counter_cached_L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4_++;
    if (!loaded_L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4_) {
        if (!b_L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4_) throw std::runtime_error("L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4 branch doesn't exist");
        b_L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4_->GetEntry(index);
        loaded_L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4_ = true;
    }
    return L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4_;
}
const bool &Nano::L1_DoubleMu4_OS_EG12() {
    if (!loaded_L1_DoubleMu4_OS_EG12_) counter_uncached_L1_DoubleMu4_OS_EG12_++;
    else counter_cached_L1_DoubleMu4_OS_EG12_++;
    if (!loaded_L1_DoubleMu4_OS_EG12_) {
        if (!b_L1_DoubleMu4_OS_EG12_) throw std::runtime_error("L1_DoubleMu4_OS_EG12 branch doesn't exist");
        b_L1_DoubleMu4_OS_EG12_->GetEntry(index);
        loaded_L1_DoubleMu4_OS_EG12_ = true;
    }
    return L1_DoubleMu4_OS_EG12_;
}
const bool &Nano::L1_DoubleMu4_SQ_EG9er2p5() {
    if (!loaded_L1_DoubleMu4_SQ_EG9er2p5_) counter_uncached_L1_DoubleMu4_SQ_EG9er2p5_++;
    else counter_cached_L1_DoubleMu4_SQ_EG9er2p5_++;
    if (!loaded_L1_DoubleMu4_SQ_EG9er2p5_) {
        if (!b_L1_DoubleMu4_SQ_EG9er2p5_) throw std::runtime_error("L1_DoubleMu4_SQ_EG9er2p5 branch doesn't exist");
        b_L1_DoubleMu4_SQ_EG9er2p5_->GetEntry(index);
        loaded_L1_DoubleMu4_SQ_EG9er2p5_ = true;
    }
    return L1_DoubleMu4_SQ_EG9er2p5_;
}
const bool &Nano::L1_DoubleMu4_SQ_OS() {
    if (!loaded_L1_DoubleMu4_SQ_OS_) counter_uncached_L1_DoubleMu4_SQ_OS_++;
    else counter_cached_L1_DoubleMu4_SQ_OS_++;
    if (!loaded_L1_DoubleMu4_SQ_OS_) {
        if (!b_L1_DoubleMu4_SQ_OS_) throw std::runtime_error("L1_DoubleMu4_SQ_OS branch doesn't exist");
        b_L1_DoubleMu4_SQ_OS_->GetEntry(index);
        loaded_L1_DoubleMu4_SQ_OS_ = true;
    }
    return L1_DoubleMu4_SQ_OS_;
}
const bool &Nano::L1_DoubleMu4_SQ_OS_dR_Max1p2() {
    if (!loaded_L1_DoubleMu4_SQ_OS_dR_Max1p2_) counter_uncached_L1_DoubleMu4_SQ_OS_dR_Max1p2_++;
    else counter_cached_L1_DoubleMu4_SQ_OS_dR_Max1p2_++;
    if (!loaded_L1_DoubleMu4_SQ_OS_dR_Max1p2_) {
        if (!b_L1_DoubleMu4_SQ_OS_dR_Max1p2_) throw std::runtime_error("L1_DoubleMu4_SQ_OS_dR_Max1p2 branch doesn't exist");
        b_L1_DoubleMu4_SQ_OS_dR_Max1p2_->GetEntry(index);
        loaded_L1_DoubleMu4_SQ_OS_dR_Max1p2_ = true;
    }
    return L1_DoubleMu4_SQ_OS_dR_Max1p2_;
}
const bool &Nano::L1_DoubleMu4p5_SQ() {
    if (!loaded_L1_DoubleMu4p5_SQ_) counter_uncached_L1_DoubleMu4p5_SQ_++;
    else counter_cached_L1_DoubleMu4p5_SQ_++;
    if (!loaded_L1_DoubleMu4p5_SQ_) {
        if (!b_L1_DoubleMu4p5_SQ_) throw std::runtime_error("L1_DoubleMu4p5_SQ branch doesn't exist");
        b_L1_DoubleMu4p5_SQ_->GetEntry(index);
        loaded_L1_DoubleMu4p5_SQ_ = true;
    }
    return L1_DoubleMu4p5_SQ_;
}
const bool &Nano::L1_DoubleMu4p5_SQ_OS() {
    if (!loaded_L1_DoubleMu4p5_SQ_OS_) counter_uncached_L1_DoubleMu4p5_SQ_OS_++;
    else counter_cached_L1_DoubleMu4p5_SQ_OS_++;
    if (!loaded_L1_DoubleMu4p5_SQ_OS_) {
        if (!b_L1_DoubleMu4p5_SQ_OS_) throw std::runtime_error("L1_DoubleMu4p5_SQ_OS branch doesn't exist");
        b_L1_DoubleMu4p5_SQ_OS_->GetEntry(index);
        loaded_L1_DoubleMu4p5_SQ_OS_ = true;
    }
    return L1_DoubleMu4p5_SQ_OS_;
}
const bool &Nano::L1_DoubleMu4p5_SQ_OS_dR_Max1p2() {
    if (!loaded_L1_DoubleMu4p5_SQ_OS_dR_Max1p2_) counter_uncached_L1_DoubleMu4p5_SQ_OS_dR_Max1p2_++;
    else counter_cached_L1_DoubleMu4p5_SQ_OS_dR_Max1p2_++;
    if (!loaded_L1_DoubleMu4p5_SQ_OS_dR_Max1p2_) {
        if (!b_L1_DoubleMu4p5_SQ_OS_dR_Max1p2_) throw std::runtime_error("L1_DoubleMu4p5_SQ_OS_dR_Max1p2 branch doesn't exist");
        b_L1_DoubleMu4p5_SQ_OS_dR_Max1p2_->GetEntry(index);
        loaded_L1_DoubleMu4p5_SQ_OS_dR_Max1p2_ = true;
    }
    return L1_DoubleMu4p5_SQ_OS_dR_Max1p2_;
}
const bool &Nano::L1_DoubleMu4p5er2p0_SQ_OS() {
    if (!loaded_L1_DoubleMu4p5er2p0_SQ_OS_) counter_uncached_L1_DoubleMu4p5er2p0_SQ_OS_++;
    else counter_cached_L1_DoubleMu4p5er2p0_SQ_OS_++;
    if (!loaded_L1_DoubleMu4p5er2p0_SQ_OS_) {
        if (!b_L1_DoubleMu4p5er2p0_SQ_OS_) throw std::runtime_error("L1_DoubleMu4p5er2p0_SQ_OS branch doesn't exist");
        b_L1_DoubleMu4p5er2p0_SQ_OS_->GetEntry(index);
        loaded_L1_DoubleMu4p5er2p0_SQ_OS_ = true;
    }
    return L1_DoubleMu4p5er2p0_SQ_OS_;
}
const bool &Nano::L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18() {
    if (!loaded_L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18_) counter_uncached_L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18_++;
    else counter_cached_L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18_++;
    if (!loaded_L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18_) {
        if (!b_L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18_) throw std::runtime_error("L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18 branch doesn't exist");
        b_L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18_->GetEntry(index);
        loaded_L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18_ = true;
    }
    return L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18_;
}
const bool &Nano::L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18() {
    if (!loaded_L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18_) counter_uncached_L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18_++;
    else counter_cached_L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18_++;
    if (!loaded_L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18_) {
        if (!b_L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18_) throw std::runtime_error("L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18 branch doesn't exist");
        b_L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18_->GetEntry(index);
        loaded_L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18_ = true;
    }
    return L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18_;
}
const bool &Nano::L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7() {
    if (!loaded_L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7_) counter_uncached_L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7_++;
    else counter_cached_L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7_++;
    if (!loaded_L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7_) {
        if (!b_L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7_) throw std::runtime_error("L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7 branch doesn't exist");
        b_L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7_->GetEntry(index);
        loaded_L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7_ = true;
    }
    return L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7_;
}
const bool &Nano::L1_DoubleMu5Upsilon_OS_DoubleEG3() {
    if (!loaded_L1_DoubleMu5Upsilon_OS_DoubleEG3_) counter_uncached_L1_DoubleMu5Upsilon_OS_DoubleEG3_++;
    else counter_cached_L1_DoubleMu5Upsilon_OS_DoubleEG3_++;
    if (!loaded_L1_DoubleMu5Upsilon_OS_DoubleEG3_) {
        if (!b_L1_DoubleMu5Upsilon_OS_DoubleEG3_) throw std::runtime_error("L1_DoubleMu5Upsilon_OS_DoubleEG3 branch doesn't exist");
        b_L1_DoubleMu5Upsilon_OS_DoubleEG3_->GetEntry(index);
        loaded_L1_DoubleMu5Upsilon_OS_DoubleEG3_ = true;
    }
    return L1_DoubleMu5Upsilon_OS_DoubleEG3_;
}
const bool &Nano::L1_DoubleMu5_OS_EG12() {
    if (!loaded_L1_DoubleMu5_OS_EG12_) counter_uncached_L1_DoubleMu5_OS_EG12_++;
    else counter_cached_L1_DoubleMu5_OS_EG12_++;
    if (!loaded_L1_DoubleMu5_OS_EG12_) {
        if (!b_L1_DoubleMu5_OS_EG12_) throw std::runtime_error("L1_DoubleMu5_OS_EG12 branch doesn't exist");
        b_L1_DoubleMu5_OS_EG12_->GetEntry(index);
        loaded_L1_DoubleMu5_OS_EG12_ = true;
    }
    return L1_DoubleMu5_OS_EG12_;
}
const bool &Nano::L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20() {
    if (!loaded_L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20_) counter_uncached_L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20_++;
    else counter_cached_L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20_++;
    if (!loaded_L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20_) {
        if (!b_L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20_) throw std::runtime_error("L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20 branch doesn't exist");
        b_L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20_->GetEntry(index);
        loaded_L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20_ = true;
    }
    return L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20_;
}
const bool &Nano::L1_DoubleMu5_SQ_EG9er2p5() {
    if (!loaded_L1_DoubleMu5_SQ_EG9er2p5_) counter_uncached_L1_DoubleMu5_SQ_EG9er2p5_++;
    else counter_cached_L1_DoubleMu5_SQ_EG9er2p5_++;
    if (!loaded_L1_DoubleMu5_SQ_EG9er2p5_) {
        if (!b_L1_DoubleMu5_SQ_EG9er2p5_) throw std::runtime_error("L1_DoubleMu5_SQ_EG9er2p5 branch doesn't exist");
        b_L1_DoubleMu5_SQ_EG9er2p5_->GetEntry(index);
        loaded_L1_DoubleMu5_SQ_EG9er2p5_ = true;
    }
    return L1_DoubleMu5_SQ_EG9er2p5_;
}
const bool &Nano::L1_DoubleMu5_SQ_OS() {
    if (!loaded_L1_DoubleMu5_SQ_OS_) counter_uncached_L1_DoubleMu5_SQ_OS_++;
    else counter_cached_L1_DoubleMu5_SQ_OS_++;
    if (!loaded_L1_DoubleMu5_SQ_OS_) {
        if (!b_L1_DoubleMu5_SQ_OS_) throw std::runtime_error("L1_DoubleMu5_SQ_OS branch doesn't exist");
        b_L1_DoubleMu5_SQ_OS_->GetEntry(index);
        loaded_L1_DoubleMu5_SQ_OS_ = true;
    }
    return L1_DoubleMu5_SQ_OS_;
}
const bool &Nano::L1_DoubleMu5_SQ_OS_Mass7to18() {
    if (!loaded_L1_DoubleMu5_SQ_OS_Mass7to18_) counter_uncached_L1_DoubleMu5_SQ_OS_Mass7to18_++;
    else counter_cached_L1_DoubleMu5_SQ_OS_Mass7to18_++;
    if (!loaded_L1_DoubleMu5_SQ_OS_Mass7to18_) {
        if (!b_L1_DoubleMu5_SQ_OS_Mass7to18_) throw std::runtime_error("L1_DoubleMu5_SQ_OS_Mass7to18 branch doesn't exist");
        b_L1_DoubleMu5_SQ_OS_Mass7to18_->GetEntry(index);
        loaded_L1_DoubleMu5_SQ_OS_Mass7to18_ = true;
    }
    return L1_DoubleMu5_SQ_OS_Mass7to18_;
}
const bool &Nano::L1_DoubleMu6_SQ_OS() {
    if (!loaded_L1_DoubleMu6_SQ_OS_) counter_uncached_L1_DoubleMu6_SQ_OS_++;
    else counter_cached_L1_DoubleMu6_SQ_OS_++;
    if (!loaded_L1_DoubleMu6_SQ_OS_) {
        if (!b_L1_DoubleMu6_SQ_OS_) throw std::runtime_error("L1_DoubleMu6_SQ_OS branch doesn't exist");
        b_L1_DoubleMu6_SQ_OS_->GetEntry(index);
        loaded_L1_DoubleMu6_SQ_OS_ = true;
    }
    return L1_DoubleMu6_SQ_OS_;
}
const bool &Nano::L1_DoubleMu7_EG14() {
    if (!loaded_L1_DoubleMu7_EG14_) counter_uncached_L1_DoubleMu7_EG14_++;
    else counter_cached_L1_DoubleMu7_EG14_++;
    if (!loaded_L1_DoubleMu7_EG14_) {
        if (!b_L1_DoubleMu7_EG14_) throw std::runtime_error("L1_DoubleMu7_EG14 branch doesn't exist");
        b_L1_DoubleMu7_EG14_->GetEntry(index);
        loaded_L1_DoubleMu7_EG14_ = true;
    }
    return L1_DoubleMu7_EG14_;
}
const bool &Nano::L1_DoubleMu7_EG7() {
    if (!loaded_L1_DoubleMu7_EG7_) counter_uncached_L1_DoubleMu7_EG7_++;
    else counter_cached_L1_DoubleMu7_EG7_++;
    if (!loaded_L1_DoubleMu7_EG7_) {
        if (!b_L1_DoubleMu7_EG7_) throw std::runtime_error("L1_DoubleMu7_EG7 branch doesn't exist");
        b_L1_DoubleMu7_EG7_->GetEntry(index);
        loaded_L1_DoubleMu7_EG7_ = true;
    }
    return L1_DoubleMu7_EG7_;
}
const bool &Nano::L1_DoubleMu7_SQ_EG7() {
    if (!loaded_L1_DoubleMu7_SQ_EG7_) counter_uncached_L1_DoubleMu7_SQ_EG7_++;
    else counter_cached_L1_DoubleMu7_SQ_EG7_++;
    if (!loaded_L1_DoubleMu7_SQ_EG7_) {
        if (!b_L1_DoubleMu7_SQ_EG7_) throw std::runtime_error("L1_DoubleMu7_SQ_EG7 branch doesn't exist");
        b_L1_DoubleMu7_SQ_EG7_->GetEntry(index);
        loaded_L1_DoubleMu7_SQ_EG7_ = true;
    }
    return L1_DoubleMu7_SQ_EG7_;
}
const bool &Nano::L1_DoubleMu8_SQ() {
    if (!loaded_L1_DoubleMu8_SQ_) counter_uncached_L1_DoubleMu8_SQ_++;
    else counter_cached_L1_DoubleMu8_SQ_++;
    if (!loaded_L1_DoubleMu8_SQ_) {
        if (!b_L1_DoubleMu8_SQ_) throw std::runtime_error("L1_DoubleMu8_SQ branch doesn't exist");
        b_L1_DoubleMu8_SQ_->GetEntry(index);
        loaded_L1_DoubleMu8_SQ_ = true;
    }
    return L1_DoubleMu8_SQ_;
}
const bool &Nano::L1_DoubleMu9_SQ() {
    if (!loaded_L1_DoubleMu9_SQ_) counter_uncached_L1_DoubleMu9_SQ_++;
    else counter_cached_L1_DoubleMu9_SQ_++;
    if (!loaded_L1_DoubleMu9_SQ_) {
        if (!b_L1_DoubleMu9_SQ_) throw std::runtime_error("L1_DoubleMu9_SQ branch doesn't exist");
        b_L1_DoubleMu9_SQ_->GetEntry(index);
        loaded_L1_DoubleMu9_SQ_ = true;
    }
    return L1_DoubleMu9_SQ_;
}
const bool &Nano::L1_DoubleMuOpen() {
    if (!loaded_L1_DoubleMuOpen_) counter_uncached_L1_DoubleMuOpen_++;
    else counter_cached_L1_DoubleMuOpen_++;
    if (!loaded_L1_DoubleMuOpen_) {
        if (!b_L1_DoubleMuOpen_) throw std::runtime_error("L1_DoubleMuOpen branch doesn't exist");
        b_L1_DoubleMuOpen_->GetEntry(index);
        loaded_L1_DoubleMuOpen_ = true;
    }
    return L1_DoubleMuOpen_;
}
const bool &Nano::L1_DoubleMu_10_0_dEta_Max1p8() {
    if (!loaded_L1_DoubleMu_10_0_dEta_Max1p8_) counter_uncached_L1_DoubleMu_10_0_dEta_Max1p8_++;
    else counter_cached_L1_DoubleMu_10_0_dEta_Max1p8_++;
    if (!loaded_L1_DoubleMu_10_0_dEta_Max1p8_) {
        if (!b_L1_DoubleMu_10_0_dEta_Max1p8_) throw std::runtime_error("L1_DoubleMu_10_0_dEta_Max1p8 branch doesn't exist");
        b_L1_DoubleMu_10_0_dEta_Max1p8_->GetEntry(index);
        loaded_L1_DoubleMu_10_0_dEta_Max1p8_ = true;
    }
    return L1_DoubleMu_10_0_dEta_Max1p8_;
}
const bool &Nano::L1_DoubleMu_10_3p5() {
    if (!loaded_L1_DoubleMu_10_3p5_) counter_uncached_L1_DoubleMu_10_3p5_++;
    else counter_cached_L1_DoubleMu_10_3p5_++;
    if (!loaded_L1_DoubleMu_10_3p5_) {
        if (!b_L1_DoubleMu_10_3p5_) throw std::runtime_error("L1_DoubleMu_10_3p5 branch doesn't exist");
        b_L1_DoubleMu_10_3p5_->GetEntry(index);
        loaded_L1_DoubleMu_10_3p5_ = true;
    }
    return L1_DoubleMu_10_3p5_;
}
const bool &Nano::L1_DoubleMu_10_Open() {
    if (!loaded_L1_DoubleMu_10_Open_) counter_uncached_L1_DoubleMu_10_Open_++;
    else counter_cached_L1_DoubleMu_10_Open_++;
    if (!loaded_L1_DoubleMu_10_Open_) {
        if (!b_L1_DoubleMu_10_Open_) throw std::runtime_error("L1_DoubleMu_10_Open branch doesn't exist");
        b_L1_DoubleMu_10_Open_->GetEntry(index);
        loaded_L1_DoubleMu_10_Open_ = true;
    }
    return L1_DoubleMu_10_Open_;
}
const bool &Nano::L1_DoubleMu_11_4() {
    if (!loaded_L1_DoubleMu_11_4_) counter_uncached_L1_DoubleMu_11_4_++;
    else counter_cached_L1_DoubleMu_11_4_++;
    if (!loaded_L1_DoubleMu_11_4_) {
        if (!b_L1_DoubleMu_11_4_) throw std::runtime_error("L1_DoubleMu_11_4 branch doesn't exist");
        b_L1_DoubleMu_11_4_->GetEntry(index);
        loaded_L1_DoubleMu_11_4_ = true;
    }
    return L1_DoubleMu_11_4_;
}
const bool &Nano::L1_DoubleMu_12_5() {
    if (!loaded_L1_DoubleMu_12_5_) counter_uncached_L1_DoubleMu_12_5_++;
    else counter_cached_L1_DoubleMu_12_5_++;
    if (!loaded_L1_DoubleMu_12_5_) {
        if (!b_L1_DoubleMu_12_5_) throw std::runtime_error("L1_DoubleMu_12_5 branch doesn't exist");
        b_L1_DoubleMu_12_5_->GetEntry(index);
        loaded_L1_DoubleMu_12_5_ = true;
    }
    return L1_DoubleMu_12_5_;
}
const bool &Nano::L1_DoubleMu_12_8() {
    if (!loaded_L1_DoubleMu_12_8_) counter_uncached_L1_DoubleMu_12_8_++;
    else counter_cached_L1_DoubleMu_12_8_++;
    if (!loaded_L1_DoubleMu_12_8_) {
        if (!b_L1_DoubleMu_12_8_) throw std::runtime_error("L1_DoubleMu_12_8 branch doesn't exist");
        b_L1_DoubleMu_12_8_->GetEntry(index);
        loaded_L1_DoubleMu_12_8_ = true;
    }
    return L1_DoubleMu_12_8_;
}
const bool &Nano::L1_DoubleMu_13_6() {
    if (!loaded_L1_DoubleMu_13_6_) counter_uncached_L1_DoubleMu_13_6_++;
    else counter_cached_L1_DoubleMu_13_6_++;
    if (!loaded_L1_DoubleMu_13_6_) {
        if (!b_L1_DoubleMu_13_6_) throw std::runtime_error("L1_DoubleMu_13_6 branch doesn't exist");
        b_L1_DoubleMu_13_6_->GetEntry(index);
        loaded_L1_DoubleMu_13_6_ = true;
    }
    return L1_DoubleMu_13_6_;
}
const bool &Nano::L1_DoubleMu_15_5() {
    if (!loaded_L1_DoubleMu_15_5_) counter_uncached_L1_DoubleMu_15_5_++;
    else counter_cached_L1_DoubleMu_15_5_++;
    if (!loaded_L1_DoubleMu_15_5_) {
        if (!b_L1_DoubleMu_15_5_) throw std::runtime_error("L1_DoubleMu_15_5 branch doesn't exist");
        b_L1_DoubleMu_15_5_->GetEntry(index);
        loaded_L1_DoubleMu_15_5_ = true;
    }
    return L1_DoubleMu_15_5_;
}
const bool &Nano::L1_DoubleMu_15_5_SQ() {
    if (!loaded_L1_DoubleMu_15_5_SQ_) counter_uncached_L1_DoubleMu_15_5_SQ_++;
    else counter_cached_L1_DoubleMu_15_5_SQ_++;
    if (!loaded_L1_DoubleMu_15_5_SQ_) {
        if (!b_L1_DoubleMu_15_5_SQ_) throw std::runtime_error("L1_DoubleMu_15_5_SQ branch doesn't exist");
        b_L1_DoubleMu_15_5_SQ_->GetEntry(index);
        loaded_L1_DoubleMu_15_5_SQ_ = true;
    }
    return L1_DoubleMu_15_5_SQ_;
}
const bool &Nano::L1_DoubleMu_15_7() {
    if (!loaded_L1_DoubleMu_15_7_) counter_uncached_L1_DoubleMu_15_7_++;
    else counter_cached_L1_DoubleMu_15_7_++;
    if (!loaded_L1_DoubleMu_15_7_) {
        if (!b_L1_DoubleMu_15_7_) throw std::runtime_error("L1_DoubleMu_15_7 branch doesn't exist");
        b_L1_DoubleMu_15_7_->GetEntry(index);
        loaded_L1_DoubleMu_15_7_ = true;
    }
    return L1_DoubleMu_15_7_;
}
const bool &Nano::L1_DoubleMu_15_7_Mass_Min1() {
    if (!loaded_L1_DoubleMu_15_7_Mass_Min1_) counter_uncached_L1_DoubleMu_15_7_Mass_Min1_++;
    else counter_cached_L1_DoubleMu_15_7_Mass_Min1_++;
    if (!loaded_L1_DoubleMu_15_7_Mass_Min1_) {
        if (!b_L1_DoubleMu_15_7_Mass_Min1_) throw std::runtime_error("L1_DoubleMu_15_7_Mass_Min1 branch doesn't exist");
        b_L1_DoubleMu_15_7_Mass_Min1_->GetEntry(index);
        loaded_L1_DoubleMu_15_7_Mass_Min1_ = true;
    }
    return L1_DoubleMu_15_7_Mass_Min1_;
}
const bool &Nano::L1_DoubleMu_15_7_SQ() {
    if (!loaded_L1_DoubleMu_15_7_SQ_) counter_uncached_L1_DoubleMu_15_7_SQ_++;
    else counter_cached_L1_DoubleMu_15_7_SQ_++;
    if (!loaded_L1_DoubleMu_15_7_SQ_) {
        if (!b_L1_DoubleMu_15_7_SQ_) throw std::runtime_error("L1_DoubleMu_15_7_SQ branch doesn't exist");
        b_L1_DoubleMu_15_7_SQ_->GetEntry(index);
        loaded_L1_DoubleMu_15_7_SQ_ = true;
    }
    return L1_DoubleMu_15_7_SQ_;
}
const bool &Nano::L1_DoubleMu_15_7_SQ_Mass_Min4() {
    if (!loaded_L1_DoubleMu_15_7_SQ_Mass_Min4_) counter_uncached_L1_DoubleMu_15_7_SQ_Mass_Min4_++;
    else counter_cached_L1_DoubleMu_15_7_SQ_Mass_Min4_++;
    if (!loaded_L1_DoubleMu_15_7_SQ_Mass_Min4_) {
        if (!b_L1_DoubleMu_15_7_SQ_Mass_Min4_) throw std::runtime_error("L1_DoubleMu_15_7_SQ_Mass_Min4 branch doesn't exist");
        b_L1_DoubleMu_15_7_SQ_Mass_Min4_->GetEntry(index);
        loaded_L1_DoubleMu_15_7_SQ_Mass_Min4_ = true;
    }
    return L1_DoubleMu_15_7_SQ_Mass_Min4_;
}
const bool &Nano::L1_DoubleMu_20_2_SQ_Mass_Max20() {
    if (!loaded_L1_DoubleMu_20_2_SQ_Mass_Max20_) counter_uncached_L1_DoubleMu_20_2_SQ_Mass_Max20_++;
    else counter_cached_L1_DoubleMu_20_2_SQ_Mass_Max20_++;
    if (!loaded_L1_DoubleMu_20_2_SQ_Mass_Max20_) {
        if (!b_L1_DoubleMu_20_2_SQ_Mass_Max20_) throw std::runtime_error("L1_DoubleMu_20_2_SQ_Mass_Max20 branch doesn't exist");
        b_L1_DoubleMu_20_2_SQ_Mass_Max20_->GetEntry(index);
        loaded_L1_DoubleMu_20_2_SQ_Mass_Max20_ = true;
    }
    return L1_DoubleMu_20_2_SQ_Mass_Max20_;
}
const bool &Nano::L1_DoubleTau50er() {
    if (!loaded_L1_DoubleTau50er_) counter_uncached_L1_DoubleTau50er_++;
    else counter_cached_L1_DoubleTau50er_++;
    if (!loaded_L1_DoubleTau50er_) {
        if (!b_L1_DoubleTau50er_) throw std::runtime_error("L1_DoubleTau50er branch doesn't exist");
        b_L1_DoubleTau50er_->GetEntry(index);
        loaded_L1_DoubleTau50er_ = true;
    }
    return L1_DoubleTau50er_;
}
const bool &Nano::L1_DoubleTau50er2p1() {
    if (!loaded_L1_DoubleTau50er2p1_) counter_uncached_L1_DoubleTau50er2p1_++;
    else counter_cached_L1_DoubleTau50er2p1_++;
    if (!loaded_L1_DoubleTau50er2p1_) {
        if (!b_L1_DoubleTau50er2p1_) throw std::runtime_error("L1_DoubleTau50er2p1 branch doesn't exist");
        b_L1_DoubleTau50er2p1_->GetEntry(index);
        loaded_L1_DoubleTau50er2p1_ = true;
    }
    return L1_DoubleTau50er2p1_;
}
const bool &Nano::L1_DoubleTau70er() {
    if (!loaded_L1_DoubleTau70er_) counter_uncached_L1_DoubleTau70er_++;
    else counter_cached_L1_DoubleTau70er_++;
    if (!loaded_L1_DoubleTau70er_) {
        if (!b_L1_DoubleTau70er_) throw std::runtime_error("L1_DoubleTau70er branch doesn't exist");
        b_L1_DoubleTau70er_->GetEntry(index);
        loaded_L1_DoubleTau70er_ = true;
    }
    return L1_DoubleTau70er_;
}
const bool &Nano::L1_DoubleTau70er2p1() {
    if (!loaded_L1_DoubleTau70er2p1_) counter_uncached_L1_DoubleTau70er2p1_++;
    else counter_cached_L1_DoubleTau70er2p1_++;
    if (!loaded_L1_DoubleTau70er2p1_) {
        if (!b_L1_DoubleTau70er2p1_) throw std::runtime_error("L1_DoubleTau70er2p1 branch doesn't exist");
        b_L1_DoubleTau70er2p1_->GetEntry(index);
        loaded_L1_DoubleTau70er2p1_ = true;
    }
    return L1_DoubleTau70er2p1_;
}
const bool &Nano::L1_EG25er2p1_HTT125er() {
    if (!loaded_L1_EG25er2p1_HTT125er_) counter_uncached_L1_EG25er2p1_HTT125er_++;
    else counter_cached_L1_EG25er2p1_HTT125er_++;
    if (!loaded_L1_EG25er2p1_HTT125er_) {
        if (!b_L1_EG25er2p1_HTT125er_) throw std::runtime_error("L1_EG25er2p1_HTT125er branch doesn't exist");
        b_L1_EG25er2p1_HTT125er_->GetEntry(index);
        loaded_L1_EG25er2p1_HTT125er_ = true;
    }
    return L1_EG25er2p1_HTT125er_;
}
const bool &Nano::L1_EG25er_HTT125() {
    if (!loaded_L1_EG25er_HTT125_) counter_uncached_L1_EG25er_HTT125_++;
    else counter_cached_L1_EG25er_HTT125_++;
    if (!loaded_L1_EG25er_HTT125_) {
        if (!b_L1_EG25er_HTT125_) throw std::runtime_error("L1_EG25er_HTT125 branch doesn't exist");
        b_L1_EG25er_HTT125_->GetEntry(index);
        loaded_L1_EG25er_HTT125_ = true;
    }
    return L1_EG25er_HTT125_;
}
const bool &Nano::L1_EG27er2p1_HTT200er() {
    if (!loaded_L1_EG27er2p1_HTT200er_) counter_uncached_L1_EG27er2p1_HTT200er_++;
    else counter_cached_L1_EG27er2p1_HTT200er_++;
    if (!loaded_L1_EG27er2p1_HTT200er_) {
        if (!b_L1_EG27er2p1_HTT200er_) throw std::runtime_error("L1_EG27er2p1_HTT200er branch doesn't exist");
        b_L1_EG27er2p1_HTT200er_->GetEntry(index);
        loaded_L1_EG27er2p1_HTT200er_ = true;
    }
    return L1_EG27er2p1_HTT200er_;
}
const bool &Nano::L1_EG27er_HTT200() {
    if (!loaded_L1_EG27er_HTT200_) counter_uncached_L1_EG27er_HTT200_++;
    else counter_cached_L1_EG27er_HTT200_++;
    if (!loaded_L1_EG27er_HTT200_) {
        if (!b_L1_EG27er_HTT200_) throw std::runtime_error("L1_EG27er_HTT200 branch doesn't exist");
        b_L1_EG27er_HTT200_->GetEntry(index);
        loaded_L1_EG27er_HTT200_ = true;
    }
    return L1_EG27er_HTT200_;
}
const bool &Nano::L1_EG40er2p1_Tau20er2p1_dR_Min0p3() {
    if (!loaded_L1_EG40er2p1_Tau20er2p1_dR_Min0p3_) counter_uncached_L1_EG40er2p1_Tau20er2p1_dR_Min0p3_++;
    else counter_cached_L1_EG40er2p1_Tau20er2p1_dR_Min0p3_++;
    if (!loaded_L1_EG40er2p1_Tau20er2p1_dR_Min0p3_) {
        if (!b_L1_EG40er2p1_Tau20er2p1_dR_Min0p3_) throw std::runtime_error("L1_EG40er2p1_Tau20er2p1_dR_Min0p3 branch doesn't exist");
        b_L1_EG40er2p1_Tau20er2p1_dR_Min0p3_->GetEntry(index);
        loaded_L1_EG40er2p1_Tau20er2p1_dR_Min0p3_ = true;
    }
    return L1_EG40er2p1_Tau20er2p1_dR_Min0p3_;
}
const bool &Nano::L1_ETM100() {
    if (!loaded_L1_ETM100_) counter_uncached_L1_ETM100_++;
    else counter_cached_L1_ETM100_++;
    if (!loaded_L1_ETM100_) {
        if (!b_L1_ETM100_) throw std::runtime_error("L1_ETM100 branch doesn't exist");
        b_L1_ETM100_->GetEntry(index);
        loaded_L1_ETM100_ = true;
    }
    return L1_ETM100_;
}
const bool &Nano::L1_ETM100_Jet60_dPhi_Min0p4() {
    if (!loaded_L1_ETM100_Jet60_dPhi_Min0p4_) counter_uncached_L1_ETM100_Jet60_dPhi_Min0p4_++;
    else counter_cached_L1_ETM100_Jet60_dPhi_Min0p4_++;
    if (!loaded_L1_ETM100_Jet60_dPhi_Min0p4_) {
        if (!b_L1_ETM100_Jet60_dPhi_Min0p4_) throw std::runtime_error("L1_ETM100_Jet60_dPhi_Min0p4 branch doesn't exist");
        b_L1_ETM100_Jet60_dPhi_Min0p4_->GetEntry(index);
        loaded_L1_ETM100_Jet60_dPhi_Min0p4_ = true;
    }
    return L1_ETM100_Jet60_dPhi_Min0p4_;
}
const bool &Nano::L1_ETM105() {
    if (!loaded_L1_ETM105_) counter_uncached_L1_ETM105_++;
    else counter_cached_L1_ETM105_++;
    if (!loaded_L1_ETM105_) {
        if (!b_L1_ETM105_) throw std::runtime_error("L1_ETM105 branch doesn't exist");
        b_L1_ETM105_->GetEntry(index);
        loaded_L1_ETM105_ = true;
    }
    return L1_ETM105_;
}
const bool &Nano::L1_ETM110() {
    if (!loaded_L1_ETM110_) counter_uncached_L1_ETM110_++;
    else counter_cached_L1_ETM110_++;
    if (!loaded_L1_ETM110_) {
        if (!b_L1_ETM110_) throw std::runtime_error("L1_ETM110 branch doesn't exist");
        b_L1_ETM110_->GetEntry(index);
        loaded_L1_ETM110_ = true;
    }
    return L1_ETM110_;
}
const bool &Nano::L1_ETM110_Jet60_dPhi_Min0p4() {
    if (!loaded_L1_ETM110_Jet60_dPhi_Min0p4_) counter_uncached_L1_ETM110_Jet60_dPhi_Min0p4_++;
    else counter_cached_L1_ETM110_Jet60_dPhi_Min0p4_++;
    if (!loaded_L1_ETM110_Jet60_dPhi_Min0p4_) {
        if (!b_L1_ETM110_Jet60_dPhi_Min0p4_) throw std::runtime_error("L1_ETM110_Jet60_dPhi_Min0p4 branch doesn't exist");
        b_L1_ETM110_Jet60_dPhi_Min0p4_->GetEntry(index);
        loaded_L1_ETM110_Jet60_dPhi_Min0p4_ = true;
    }
    return L1_ETM110_Jet60_dPhi_Min0p4_;
}
const bool &Nano::L1_ETM115() {
    if (!loaded_L1_ETM115_) counter_uncached_L1_ETM115_++;
    else counter_cached_L1_ETM115_++;
    if (!loaded_L1_ETM115_) {
        if (!b_L1_ETM115_) throw std::runtime_error("L1_ETM115 branch doesn't exist");
        b_L1_ETM115_->GetEntry(index);
        loaded_L1_ETM115_ = true;
    }
    return L1_ETM115_;
}
const bool &Nano::L1_ETM120() {
    if (!loaded_L1_ETM120_) counter_uncached_L1_ETM120_++;
    else counter_cached_L1_ETM120_++;
    if (!loaded_L1_ETM120_) {
        if (!b_L1_ETM120_) throw std::runtime_error("L1_ETM120 branch doesn't exist");
        b_L1_ETM120_->GetEntry(index);
        loaded_L1_ETM120_ = true;
    }
    return L1_ETM120_;
}
const bool &Nano::L1_ETM150() {
    if (!loaded_L1_ETM150_) counter_uncached_L1_ETM150_++;
    else counter_cached_L1_ETM150_++;
    if (!loaded_L1_ETM150_) {
        if (!b_L1_ETM150_) throw std::runtime_error("L1_ETM150 branch doesn't exist");
        b_L1_ETM150_->GetEntry(index);
        loaded_L1_ETM150_ = true;
    }
    return L1_ETM150_;
}
const bool &Nano::L1_ETM30() {
    if (!loaded_L1_ETM30_) counter_uncached_L1_ETM30_++;
    else counter_cached_L1_ETM30_++;
    if (!loaded_L1_ETM30_) {
        if (!b_L1_ETM30_) throw std::runtime_error("L1_ETM30 branch doesn't exist");
        b_L1_ETM30_->GetEntry(index);
        loaded_L1_ETM30_ = true;
    }
    return L1_ETM30_;
}
const bool &Nano::L1_ETM40() {
    if (!loaded_L1_ETM40_) counter_uncached_L1_ETM40_++;
    else counter_cached_L1_ETM40_++;
    if (!loaded_L1_ETM40_) {
        if (!b_L1_ETM40_) throw std::runtime_error("L1_ETM40 branch doesn't exist");
        b_L1_ETM40_->GetEntry(index);
        loaded_L1_ETM40_ = true;
    }
    return L1_ETM40_;
}
const bool &Nano::L1_ETM50() {
    if (!loaded_L1_ETM50_) counter_uncached_L1_ETM50_++;
    else counter_cached_L1_ETM50_++;
    if (!loaded_L1_ETM50_) {
        if (!b_L1_ETM50_) throw std::runtime_error("L1_ETM50 branch doesn't exist");
        b_L1_ETM50_->GetEntry(index);
        loaded_L1_ETM50_ = true;
    }
    return L1_ETM50_;
}
const bool &Nano::L1_ETM60() {
    if (!loaded_L1_ETM60_) counter_uncached_L1_ETM60_++;
    else counter_cached_L1_ETM60_++;
    if (!loaded_L1_ETM60_) {
        if (!b_L1_ETM60_) throw std::runtime_error("L1_ETM60 branch doesn't exist");
        b_L1_ETM60_->GetEntry(index);
        loaded_L1_ETM60_ = true;
    }
    return L1_ETM60_;
}
const bool &Nano::L1_ETM60_Jet60_dPhi_Min0p4() {
    if (!loaded_L1_ETM60_Jet60_dPhi_Min0p4_) counter_uncached_L1_ETM60_Jet60_dPhi_Min0p4_++;
    else counter_cached_L1_ETM60_Jet60_dPhi_Min0p4_++;
    if (!loaded_L1_ETM60_Jet60_dPhi_Min0p4_) {
        if (!b_L1_ETM60_Jet60_dPhi_Min0p4_) throw std::runtime_error("L1_ETM60_Jet60_dPhi_Min0p4 branch doesn't exist");
        b_L1_ETM60_Jet60_dPhi_Min0p4_->GetEntry(index);
        loaded_L1_ETM60_Jet60_dPhi_Min0p4_ = true;
    }
    return L1_ETM60_Jet60_dPhi_Min0p4_;
}
const bool &Nano::L1_ETM70() {
    if (!loaded_L1_ETM70_) counter_uncached_L1_ETM70_++;
    else counter_cached_L1_ETM70_++;
    if (!loaded_L1_ETM70_) {
        if (!b_L1_ETM70_) throw std::runtime_error("L1_ETM70 branch doesn't exist");
        b_L1_ETM70_->GetEntry(index);
        loaded_L1_ETM70_ = true;
    }
    return L1_ETM70_;
}
const bool &Nano::L1_ETM70_Jet60_dPhi_Min0p4() {
    if (!loaded_L1_ETM70_Jet60_dPhi_Min0p4_) counter_uncached_L1_ETM70_Jet60_dPhi_Min0p4_++;
    else counter_cached_L1_ETM70_Jet60_dPhi_Min0p4_++;
    if (!loaded_L1_ETM70_Jet60_dPhi_Min0p4_) {
        if (!b_L1_ETM70_Jet60_dPhi_Min0p4_) throw std::runtime_error("L1_ETM70_Jet60_dPhi_Min0p4 branch doesn't exist");
        b_L1_ETM70_Jet60_dPhi_Min0p4_->GetEntry(index);
        loaded_L1_ETM70_Jet60_dPhi_Min0p4_ = true;
    }
    return L1_ETM70_Jet60_dPhi_Min0p4_;
}
const bool &Nano::L1_ETM75() {
    if (!loaded_L1_ETM75_) counter_uncached_L1_ETM75_++;
    else counter_cached_L1_ETM75_++;
    if (!loaded_L1_ETM75_) {
        if (!b_L1_ETM75_) throw std::runtime_error("L1_ETM75 branch doesn't exist");
        b_L1_ETM75_->GetEntry(index);
        loaded_L1_ETM75_ = true;
    }
    return L1_ETM75_;
}
const bool &Nano::L1_ETM75_Jet60_dPhi_Min0p4() {
    if (!loaded_L1_ETM75_Jet60_dPhi_Min0p4_) counter_uncached_L1_ETM75_Jet60_dPhi_Min0p4_++;
    else counter_cached_L1_ETM75_Jet60_dPhi_Min0p4_++;
    if (!loaded_L1_ETM75_Jet60_dPhi_Min0p4_) {
        if (!b_L1_ETM75_Jet60_dPhi_Min0p4_) throw std::runtime_error("L1_ETM75_Jet60_dPhi_Min0p4 branch doesn't exist");
        b_L1_ETM75_Jet60_dPhi_Min0p4_->GetEntry(index);
        loaded_L1_ETM75_Jet60_dPhi_Min0p4_ = true;
    }
    return L1_ETM75_Jet60_dPhi_Min0p4_;
}
const bool &Nano::L1_ETM80() {
    if (!loaded_L1_ETM80_) counter_uncached_L1_ETM80_++;
    else counter_cached_L1_ETM80_++;
    if (!loaded_L1_ETM80_) {
        if (!b_L1_ETM80_) throw std::runtime_error("L1_ETM80 branch doesn't exist");
        b_L1_ETM80_->GetEntry(index);
        loaded_L1_ETM80_ = true;
    }
    return L1_ETM80_;
}
const bool &Nano::L1_ETM80_Jet60_dPhi_Min0p4() {
    if (!loaded_L1_ETM80_Jet60_dPhi_Min0p4_) counter_uncached_L1_ETM80_Jet60_dPhi_Min0p4_++;
    else counter_cached_L1_ETM80_Jet60_dPhi_Min0p4_++;
    if (!loaded_L1_ETM80_Jet60_dPhi_Min0p4_) {
        if (!b_L1_ETM80_Jet60_dPhi_Min0p4_) throw std::runtime_error("L1_ETM80_Jet60_dPhi_Min0p4 branch doesn't exist");
        b_L1_ETM80_Jet60_dPhi_Min0p4_->GetEntry(index);
        loaded_L1_ETM80_Jet60_dPhi_Min0p4_ = true;
    }
    return L1_ETM80_Jet60_dPhi_Min0p4_;
}
const bool &Nano::L1_ETM85() {
    if (!loaded_L1_ETM85_) counter_uncached_L1_ETM85_++;
    else counter_cached_L1_ETM85_++;
    if (!loaded_L1_ETM85_) {
        if (!b_L1_ETM85_) throw std::runtime_error("L1_ETM85 branch doesn't exist");
        b_L1_ETM85_->GetEntry(index);
        loaded_L1_ETM85_ = true;
    }
    return L1_ETM85_;
}
const bool &Nano::L1_ETM90() {
    if (!loaded_L1_ETM90_) counter_uncached_L1_ETM90_++;
    else counter_cached_L1_ETM90_++;
    if (!loaded_L1_ETM90_) {
        if (!b_L1_ETM90_) throw std::runtime_error("L1_ETM90 branch doesn't exist");
        b_L1_ETM90_->GetEntry(index);
        loaded_L1_ETM90_ = true;
    }
    return L1_ETM90_;
}
const bool &Nano::L1_ETM90_Jet60_dPhi_Min0p4() {
    if (!loaded_L1_ETM90_Jet60_dPhi_Min0p4_) counter_uncached_L1_ETM90_Jet60_dPhi_Min0p4_++;
    else counter_cached_L1_ETM90_Jet60_dPhi_Min0p4_++;
    if (!loaded_L1_ETM90_Jet60_dPhi_Min0p4_) {
        if (!b_L1_ETM90_Jet60_dPhi_Min0p4_) throw std::runtime_error("L1_ETM90_Jet60_dPhi_Min0p4 branch doesn't exist");
        b_L1_ETM90_Jet60_dPhi_Min0p4_->GetEntry(index);
        loaded_L1_ETM90_Jet60_dPhi_Min0p4_ = true;
    }
    return L1_ETM90_Jet60_dPhi_Min0p4_;
}
const bool &Nano::L1_ETM95() {
    if (!loaded_L1_ETM95_) counter_uncached_L1_ETM95_++;
    else counter_cached_L1_ETM95_++;
    if (!loaded_L1_ETM95_) {
        if (!b_L1_ETM95_) throw std::runtime_error("L1_ETM95 branch doesn't exist");
        b_L1_ETM95_->GetEntry(index);
        loaded_L1_ETM95_ = true;
    }
    return L1_ETM95_;
}
const bool &Nano::L1_ETMHF100() {
    if (!loaded_L1_ETMHF100_) counter_uncached_L1_ETMHF100_++;
    else counter_cached_L1_ETMHF100_++;
    if (!loaded_L1_ETMHF100_) {
        if (!b_L1_ETMHF100_) throw std::runtime_error("L1_ETMHF100 branch doesn't exist");
        b_L1_ETMHF100_->GetEntry(index);
        loaded_L1_ETMHF100_ = true;
    }
    return L1_ETMHF100_;
}
const bool &Nano::L1_ETMHF100_HTT60() {
    if (!loaded_L1_ETMHF100_HTT60_) counter_uncached_L1_ETMHF100_HTT60_++;
    else counter_cached_L1_ETMHF100_HTT60_++;
    if (!loaded_L1_ETMHF100_HTT60_) {
        if (!b_L1_ETMHF100_HTT60_) throw std::runtime_error("L1_ETMHF100_HTT60 branch doesn't exist");
        b_L1_ETMHF100_HTT60_->GetEntry(index);
        loaded_L1_ETMHF100_HTT60_ = true;
    }
    return L1_ETMHF100_HTT60_;
}
const bool &Nano::L1_ETMHF100_HTT60er() {
    if (!loaded_L1_ETMHF100_HTT60er_) counter_uncached_L1_ETMHF100_HTT60er_++;
    else counter_cached_L1_ETMHF100_HTT60er_++;
    if (!loaded_L1_ETMHF100_HTT60er_) {
        if (!b_L1_ETMHF100_HTT60er_) throw std::runtime_error("L1_ETMHF100_HTT60er branch doesn't exist");
        b_L1_ETMHF100_HTT60er_->GetEntry(index);
        loaded_L1_ETMHF100_HTT60er_ = true;
    }
    return L1_ETMHF100_HTT60er_;
}
const bool &Nano::L1_ETMHF100_Jet60_OR_DiJet30woTT28() {
    if (!loaded_L1_ETMHF100_Jet60_OR_DiJet30woTT28_) counter_uncached_L1_ETMHF100_Jet60_OR_DiJet30woTT28_++;
    else counter_cached_L1_ETMHF100_Jet60_OR_DiJet30woTT28_++;
    if (!loaded_L1_ETMHF100_Jet60_OR_DiJet30woTT28_) {
        if (!b_L1_ETMHF100_Jet60_OR_DiJet30woTT28_) throw std::runtime_error("L1_ETMHF100_Jet60_OR_DiJet30woTT28 branch doesn't exist");
        b_L1_ETMHF100_Jet60_OR_DiJet30woTT28_->GetEntry(index);
        loaded_L1_ETMHF100_Jet60_OR_DiJet30woTT28_ = true;
    }
    return L1_ETMHF100_Jet60_OR_DiJet30woTT28_;
}
const bool &Nano::L1_ETMHF100_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_ETMHF100_Jet60_OR_DoubleJet30_) counter_uncached_L1_ETMHF100_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_ETMHF100_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_ETMHF100_Jet60_OR_DoubleJet30_) {
        if (!b_L1_ETMHF100_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_ETMHF100_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_ETMHF100_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_ETMHF100_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_ETMHF100_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30() {
    if (!loaded_L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30_) counter_uncached_L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30_++;
    else counter_cached_L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30_++;
    if (!loaded_L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30_) {
        if (!b_L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30_) throw std::runtime_error("L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30 branch doesn't exist");
        b_L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30_->GetEntry(index);
        loaded_L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30_ = true;
    }
    return L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30_;
}
const bool &Nano::L1_ETMHF105_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_ETMHF105_Jet60_OR_DoubleJet30_) counter_uncached_L1_ETMHF105_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_ETMHF105_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_ETMHF105_Jet60_OR_DoubleJet30_) {
        if (!b_L1_ETMHF105_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_ETMHF105_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_ETMHF105_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_ETMHF105_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_ETMHF105_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_ETMHF110() {
    if (!loaded_L1_ETMHF110_) counter_uncached_L1_ETMHF110_++;
    else counter_cached_L1_ETMHF110_++;
    if (!loaded_L1_ETMHF110_) {
        if (!b_L1_ETMHF110_) throw std::runtime_error("L1_ETMHF110 branch doesn't exist");
        b_L1_ETMHF110_->GetEntry(index);
        loaded_L1_ETMHF110_ = true;
    }
    return L1_ETMHF110_;
}
const bool &Nano::L1_ETMHF110_HTT60() {
    if (!loaded_L1_ETMHF110_HTT60_) counter_uncached_L1_ETMHF110_HTT60_++;
    else counter_cached_L1_ETMHF110_HTT60_++;
    if (!loaded_L1_ETMHF110_HTT60_) {
        if (!b_L1_ETMHF110_HTT60_) throw std::runtime_error("L1_ETMHF110_HTT60 branch doesn't exist");
        b_L1_ETMHF110_HTT60_->GetEntry(index);
        loaded_L1_ETMHF110_HTT60_ = true;
    }
    return L1_ETMHF110_HTT60_;
}
const bool &Nano::L1_ETMHF110_HTT60er() {
    if (!loaded_L1_ETMHF110_HTT60er_) counter_uncached_L1_ETMHF110_HTT60er_++;
    else counter_cached_L1_ETMHF110_HTT60er_++;
    if (!loaded_L1_ETMHF110_HTT60er_) {
        if (!b_L1_ETMHF110_HTT60er_) throw std::runtime_error("L1_ETMHF110_HTT60er branch doesn't exist");
        b_L1_ETMHF110_HTT60er_->GetEntry(index);
        loaded_L1_ETMHF110_HTT60er_ = true;
    }
    return L1_ETMHF110_HTT60er_;
}
const bool &Nano::L1_ETMHF110_HTT60er_NotSecondBunchInTrain() {
    if (!loaded_L1_ETMHF110_HTT60er_NotSecondBunchInTrain_) counter_uncached_L1_ETMHF110_HTT60er_NotSecondBunchInTrain_++;
    else counter_cached_L1_ETMHF110_HTT60er_NotSecondBunchInTrain_++;
    if (!loaded_L1_ETMHF110_HTT60er_NotSecondBunchInTrain_) {
        if (!b_L1_ETMHF110_HTT60er_NotSecondBunchInTrain_) throw std::runtime_error("L1_ETMHF110_HTT60er_NotSecondBunchInTrain branch doesn't exist");
        b_L1_ETMHF110_HTT60er_NotSecondBunchInTrain_->GetEntry(index);
        loaded_L1_ETMHF110_HTT60er_NotSecondBunchInTrain_ = true;
    }
    return L1_ETMHF110_HTT60er_NotSecondBunchInTrain_;
}
const bool &Nano::L1_ETMHF110_Jet60_OR_DiJet30woTT28() {
    if (!loaded_L1_ETMHF110_Jet60_OR_DiJet30woTT28_) counter_uncached_L1_ETMHF110_Jet60_OR_DiJet30woTT28_++;
    else counter_cached_L1_ETMHF110_Jet60_OR_DiJet30woTT28_++;
    if (!loaded_L1_ETMHF110_Jet60_OR_DiJet30woTT28_) {
        if (!b_L1_ETMHF110_Jet60_OR_DiJet30woTT28_) throw std::runtime_error("L1_ETMHF110_Jet60_OR_DiJet30woTT28 branch doesn't exist");
        b_L1_ETMHF110_Jet60_OR_DiJet30woTT28_->GetEntry(index);
        loaded_L1_ETMHF110_Jet60_OR_DiJet30woTT28_ = true;
    }
    return L1_ETMHF110_Jet60_OR_DiJet30woTT28_;
}
const bool &Nano::L1_ETMHF110_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_ETMHF110_Jet60_OR_DoubleJet30_) counter_uncached_L1_ETMHF110_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_ETMHF110_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_ETMHF110_Jet60_OR_DoubleJet30_) {
        if (!b_L1_ETMHF110_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_ETMHF110_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_ETMHF110_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_ETMHF110_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_ETMHF110_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30() {
    if (!loaded_L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30_) counter_uncached_L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30_++;
    else counter_cached_L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30_++;
    if (!loaded_L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30_) {
        if (!b_L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30_) throw std::runtime_error("L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30 branch doesn't exist");
        b_L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30_->GetEntry(index);
        loaded_L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30_ = true;
    }
    return L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30_;
}
const bool &Nano::L1_ETMHF115_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_ETMHF115_Jet60_OR_DoubleJet30_) counter_uncached_L1_ETMHF115_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_ETMHF115_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_ETMHF115_Jet60_OR_DoubleJet30_) {
        if (!b_L1_ETMHF115_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_ETMHF115_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_ETMHF115_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_ETMHF115_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_ETMHF115_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_ETMHF120() {
    if (!loaded_L1_ETMHF120_) counter_uncached_L1_ETMHF120_++;
    else counter_cached_L1_ETMHF120_++;
    if (!loaded_L1_ETMHF120_) {
        if (!b_L1_ETMHF120_) throw std::runtime_error("L1_ETMHF120 branch doesn't exist");
        b_L1_ETMHF120_->GetEntry(index);
        loaded_L1_ETMHF120_ = true;
    }
    return L1_ETMHF120_;
}
const bool &Nano::L1_ETMHF120_HTT60() {
    if (!loaded_L1_ETMHF120_HTT60_) counter_uncached_L1_ETMHF120_HTT60_++;
    else counter_cached_L1_ETMHF120_HTT60_++;
    if (!loaded_L1_ETMHF120_HTT60_) {
        if (!b_L1_ETMHF120_HTT60_) throw std::runtime_error("L1_ETMHF120_HTT60 branch doesn't exist");
        b_L1_ETMHF120_HTT60_->GetEntry(index);
        loaded_L1_ETMHF120_HTT60_ = true;
    }
    return L1_ETMHF120_HTT60_;
}
const bool &Nano::L1_ETMHF120_HTT60er() {
    if (!loaded_L1_ETMHF120_HTT60er_) counter_uncached_L1_ETMHF120_HTT60er_++;
    else counter_cached_L1_ETMHF120_HTT60er_++;
    if (!loaded_L1_ETMHF120_HTT60er_) {
        if (!b_L1_ETMHF120_HTT60er_) throw std::runtime_error("L1_ETMHF120_HTT60er branch doesn't exist");
        b_L1_ETMHF120_HTT60er_->GetEntry(index);
        loaded_L1_ETMHF120_HTT60er_ = true;
    }
    return L1_ETMHF120_HTT60er_;
}
const bool &Nano::L1_ETMHF120_Jet60_OR_DiJet30woTT28() {
    if (!loaded_L1_ETMHF120_Jet60_OR_DiJet30woTT28_) counter_uncached_L1_ETMHF120_Jet60_OR_DiJet30woTT28_++;
    else counter_cached_L1_ETMHF120_Jet60_OR_DiJet30woTT28_++;
    if (!loaded_L1_ETMHF120_Jet60_OR_DiJet30woTT28_) {
        if (!b_L1_ETMHF120_Jet60_OR_DiJet30woTT28_) throw std::runtime_error("L1_ETMHF120_Jet60_OR_DiJet30woTT28 branch doesn't exist");
        b_L1_ETMHF120_Jet60_OR_DiJet30woTT28_->GetEntry(index);
        loaded_L1_ETMHF120_Jet60_OR_DiJet30woTT28_ = true;
    }
    return L1_ETMHF120_Jet60_OR_DiJet30woTT28_;
}
const bool &Nano::L1_ETMHF120_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_ETMHF120_Jet60_OR_DoubleJet30_) counter_uncached_L1_ETMHF120_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_ETMHF120_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_ETMHF120_Jet60_OR_DoubleJet30_) {
        if (!b_L1_ETMHF120_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_ETMHF120_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_ETMHF120_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_ETMHF120_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_ETMHF120_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_ETMHF120_NotSecondBunchInTrain() {
    if (!loaded_L1_ETMHF120_NotSecondBunchInTrain_) counter_uncached_L1_ETMHF120_NotSecondBunchInTrain_++;
    else counter_cached_L1_ETMHF120_NotSecondBunchInTrain_++;
    if (!loaded_L1_ETMHF120_NotSecondBunchInTrain_) {
        if (!b_L1_ETMHF120_NotSecondBunchInTrain_) throw std::runtime_error("L1_ETMHF120_NotSecondBunchInTrain branch doesn't exist");
        b_L1_ETMHF120_NotSecondBunchInTrain_->GetEntry(index);
        loaded_L1_ETMHF120_NotSecondBunchInTrain_ = true;
    }
    return L1_ETMHF120_NotSecondBunchInTrain_;
}
const bool &Nano::L1_ETMHF130() {
    if (!loaded_L1_ETMHF130_) counter_uncached_L1_ETMHF130_++;
    else counter_cached_L1_ETMHF130_++;
    if (!loaded_L1_ETMHF130_) {
        if (!b_L1_ETMHF130_) throw std::runtime_error("L1_ETMHF130 branch doesn't exist");
        b_L1_ETMHF130_->GetEntry(index);
        loaded_L1_ETMHF130_ = true;
    }
    return L1_ETMHF130_;
}
const bool &Nano::L1_ETMHF130_HTT60er() {
    if (!loaded_L1_ETMHF130_HTT60er_) counter_uncached_L1_ETMHF130_HTT60er_++;
    else counter_cached_L1_ETMHF130_HTT60er_++;
    if (!loaded_L1_ETMHF130_HTT60er_) {
        if (!b_L1_ETMHF130_HTT60er_) throw std::runtime_error("L1_ETMHF130_HTT60er branch doesn't exist");
        b_L1_ETMHF130_HTT60er_->GetEntry(index);
        loaded_L1_ETMHF130_HTT60er_ = true;
    }
    return L1_ETMHF130_HTT60er_;
}
const bool &Nano::L1_ETMHF140() {
    if (!loaded_L1_ETMHF140_) counter_uncached_L1_ETMHF140_++;
    else counter_cached_L1_ETMHF140_++;
    if (!loaded_L1_ETMHF140_) {
        if (!b_L1_ETMHF140_) throw std::runtime_error("L1_ETMHF140 branch doesn't exist");
        b_L1_ETMHF140_->GetEntry(index);
        loaded_L1_ETMHF140_ = true;
    }
    return L1_ETMHF140_;
}
const bool &Nano::L1_ETMHF150() {
    if (!loaded_L1_ETMHF150_) counter_uncached_L1_ETMHF150_++;
    else counter_cached_L1_ETMHF150_++;
    if (!loaded_L1_ETMHF150_) {
        if (!b_L1_ETMHF150_) throw std::runtime_error("L1_ETMHF150 branch doesn't exist");
        b_L1_ETMHF150_->GetEntry(index);
        loaded_L1_ETMHF150_ = true;
    }
    return L1_ETMHF150_;
}
const bool &Nano::L1_ETMHF70() {
    if (!loaded_L1_ETMHF70_) counter_uncached_L1_ETMHF70_++;
    else counter_cached_L1_ETMHF70_++;
    if (!loaded_L1_ETMHF70_) {
        if (!b_L1_ETMHF70_) throw std::runtime_error("L1_ETMHF70 branch doesn't exist");
        b_L1_ETMHF70_->GetEntry(index);
        loaded_L1_ETMHF70_ = true;
    }
    return L1_ETMHF70_;
}
const bool &Nano::L1_ETMHF70_HTT60er() {
    if (!loaded_L1_ETMHF70_HTT60er_) counter_uncached_L1_ETMHF70_HTT60er_++;
    else counter_cached_L1_ETMHF70_HTT60er_++;
    if (!loaded_L1_ETMHF70_HTT60er_) {
        if (!b_L1_ETMHF70_HTT60er_) throw std::runtime_error("L1_ETMHF70_HTT60er branch doesn't exist");
        b_L1_ETMHF70_HTT60er_->GetEntry(index);
        loaded_L1_ETMHF70_HTT60er_ = true;
    }
    return L1_ETMHF70_HTT60er_;
}
const bool &Nano::L1_ETMHF70_Jet60_OR_DiJet30woTT28() {
    if (!loaded_L1_ETMHF70_Jet60_OR_DiJet30woTT28_) counter_uncached_L1_ETMHF70_Jet60_OR_DiJet30woTT28_++;
    else counter_cached_L1_ETMHF70_Jet60_OR_DiJet30woTT28_++;
    if (!loaded_L1_ETMHF70_Jet60_OR_DiJet30woTT28_) {
        if (!b_L1_ETMHF70_Jet60_OR_DiJet30woTT28_) throw std::runtime_error("L1_ETMHF70_Jet60_OR_DiJet30woTT28 branch doesn't exist");
        b_L1_ETMHF70_Jet60_OR_DiJet30woTT28_->GetEntry(index);
        loaded_L1_ETMHF70_Jet60_OR_DiJet30woTT28_ = true;
    }
    return L1_ETMHF70_Jet60_OR_DiJet30woTT28_;
}
const bool &Nano::L1_ETMHF70_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_ETMHF70_Jet60_OR_DoubleJet30_) counter_uncached_L1_ETMHF70_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_ETMHF70_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_ETMHF70_Jet60_OR_DoubleJet30_) {
        if (!b_L1_ETMHF70_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_ETMHF70_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_ETMHF70_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_ETMHF70_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_ETMHF70_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30() {
    if (!loaded_L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30_) counter_uncached_L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30_++;
    else counter_cached_L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30_++;
    if (!loaded_L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30_) {
        if (!b_L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30_) throw std::runtime_error("L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30 branch doesn't exist");
        b_L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30_->GetEntry(index);
        loaded_L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30_ = true;
    }
    return L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30_;
}
const bool &Nano::L1_ETMHF75_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_ETMHF75_Jet60_OR_DoubleJet30_) counter_uncached_L1_ETMHF75_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_ETMHF75_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_ETMHF75_Jet60_OR_DoubleJet30_) {
        if (!b_L1_ETMHF75_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_ETMHF75_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_ETMHF75_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_ETMHF75_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_ETMHF75_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_ETMHF80() {
    if (!loaded_L1_ETMHF80_) counter_uncached_L1_ETMHF80_++;
    else counter_cached_L1_ETMHF80_++;
    if (!loaded_L1_ETMHF80_) {
        if (!b_L1_ETMHF80_) throw std::runtime_error("L1_ETMHF80 branch doesn't exist");
        b_L1_ETMHF80_->GetEntry(index);
        loaded_L1_ETMHF80_ = true;
    }
    return L1_ETMHF80_;
}
const bool &Nano::L1_ETMHF80_HTT60() {
    if (!loaded_L1_ETMHF80_HTT60_) counter_uncached_L1_ETMHF80_HTT60_++;
    else counter_cached_L1_ETMHF80_HTT60_++;
    if (!loaded_L1_ETMHF80_HTT60_) {
        if (!b_L1_ETMHF80_HTT60_) throw std::runtime_error("L1_ETMHF80_HTT60 branch doesn't exist");
        b_L1_ETMHF80_HTT60_->GetEntry(index);
        loaded_L1_ETMHF80_HTT60_ = true;
    }
    return L1_ETMHF80_HTT60_;
}
const bool &Nano::L1_ETMHF80_HTT60er() {
    if (!loaded_L1_ETMHF80_HTT60er_) counter_uncached_L1_ETMHF80_HTT60er_++;
    else counter_cached_L1_ETMHF80_HTT60er_++;
    if (!loaded_L1_ETMHF80_HTT60er_) {
        if (!b_L1_ETMHF80_HTT60er_) throw std::runtime_error("L1_ETMHF80_HTT60er branch doesn't exist");
        b_L1_ETMHF80_HTT60er_->GetEntry(index);
        loaded_L1_ETMHF80_HTT60er_ = true;
    }
    return L1_ETMHF80_HTT60er_;
}
const bool &Nano::L1_ETMHF80_Jet60_OR_DiJet30woTT28() {
    if (!loaded_L1_ETMHF80_Jet60_OR_DiJet30woTT28_) counter_uncached_L1_ETMHF80_Jet60_OR_DiJet30woTT28_++;
    else counter_cached_L1_ETMHF80_Jet60_OR_DiJet30woTT28_++;
    if (!loaded_L1_ETMHF80_Jet60_OR_DiJet30woTT28_) {
        if (!b_L1_ETMHF80_Jet60_OR_DiJet30woTT28_) throw std::runtime_error("L1_ETMHF80_Jet60_OR_DiJet30woTT28 branch doesn't exist");
        b_L1_ETMHF80_Jet60_OR_DiJet30woTT28_->GetEntry(index);
        loaded_L1_ETMHF80_Jet60_OR_DiJet30woTT28_ = true;
    }
    return L1_ETMHF80_Jet60_OR_DiJet30woTT28_;
}
const bool &Nano::L1_ETMHF80_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_ETMHF80_Jet60_OR_DoubleJet30_) counter_uncached_L1_ETMHF80_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_ETMHF80_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_ETMHF80_Jet60_OR_DoubleJet30_) {
        if (!b_L1_ETMHF80_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_ETMHF80_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_ETMHF80_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_ETMHF80_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_ETMHF80_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30() {
    if (!loaded_L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30_) counter_uncached_L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30_++;
    else counter_cached_L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30_++;
    if (!loaded_L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30_) {
        if (!b_L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30_) throw std::runtime_error("L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30 branch doesn't exist");
        b_L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30_->GetEntry(index);
        loaded_L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30_ = true;
    }
    return L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30_;
}
const bool &Nano::L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1() {
    if (!loaded_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1_) counter_uncached_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1_++;
    else counter_cached_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1_++;
    if (!loaded_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1_) {
        if (!b_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1_) throw std::runtime_error("L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1 branch doesn't exist");
        b_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1_->GetEntry(index);
        loaded_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1_ = true;
    }
    return L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1_;
}
const bool &Nano::L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6() {
    if (!loaded_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6_) counter_uncached_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6_++;
    else counter_cached_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6_++;
    if (!loaded_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6_) {
        if (!b_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6_) throw std::runtime_error("L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6 branch doesn't exist");
        b_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6_->GetEntry(index);
        loaded_L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6_ = true;
    }
    return L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6_;
}
const bool &Nano::L1_ETMHF85_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_ETMHF85_Jet60_OR_DoubleJet30_) counter_uncached_L1_ETMHF85_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_ETMHF85_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_ETMHF85_Jet60_OR_DoubleJet30_) {
        if (!b_L1_ETMHF85_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_ETMHF85_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_ETMHF85_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_ETMHF85_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_ETMHF85_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_ETMHF90() {
    if (!loaded_L1_ETMHF90_) counter_uncached_L1_ETMHF90_++;
    else counter_cached_L1_ETMHF90_++;
    if (!loaded_L1_ETMHF90_) {
        if (!b_L1_ETMHF90_) throw std::runtime_error("L1_ETMHF90 branch doesn't exist");
        b_L1_ETMHF90_->GetEntry(index);
        loaded_L1_ETMHF90_ = true;
    }
    return L1_ETMHF90_;
}
const bool &Nano::L1_ETMHF90_HTT60() {
    if (!loaded_L1_ETMHF90_HTT60_) counter_uncached_L1_ETMHF90_HTT60_++;
    else counter_cached_L1_ETMHF90_HTT60_++;
    if (!loaded_L1_ETMHF90_HTT60_) {
        if (!b_L1_ETMHF90_HTT60_) throw std::runtime_error("L1_ETMHF90_HTT60 branch doesn't exist");
        b_L1_ETMHF90_HTT60_->GetEntry(index);
        loaded_L1_ETMHF90_HTT60_ = true;
    }
    return L1_ETMHF90_HTT60_;
}
const bool &Nano::L1_ETMHF90_HTT60er() {
    if (!loaded_L1_ETMHF90_HTT60er_) counter_uncached_L1_ETMHF90_HTT60er_++;
    else counter_cached_L1_ETMHF90_HTT60er_++;
    if (!loaded_L1_ETMHF90_HTT60er_) {
        if (!b_L1_ETMHF90_HTT60er_) throw std::runtime_error("L1_ETMHF90_HTT60er branch doesn't exist");
        b_L1_ETMHF90_HTT60er_->GetEntry(index);
        loaded_L1_ETMHF90_HTT60er_ = true;
    }
    return L1_ETMHF90_HTT60er_;
}
const bool &Nano::L1_ETMHF90_Jet60_OR_DiJet30woTT28() {
    if (!loaded_L1_ETMHF90_Jet60_OR_DiJet30woTT28_) counter_uncached_L1_ETMHF90_Jet60_OR_DiJet30woTT28_++;
    else counter_cached_L1_ETMHF90_Jet60_OR_DiJet30woTT28_++;
    if (!loaded_L1_ETMHF90_Jet60_OR_DiJet30woTT28_) {
        if (!b_L1_ETMHF90_Jet60_OR_DiJet30woTT28_) throw std::runtime_error("L1_ETMHF90_Jet60_OR_DiJet30woTT28 branch doesn't exist");
        b_L1_ETMHF90_Jet60_OR_DiJet30woTT28_->GetEntry(index);
        loaded_L1_ETMHF90_Jet60_OR_DiJet30woTT28_ = true;
    }
    return L1_ETMHF90_Jet60_OR_DiJet30woTT28_;
}
const bool &Nano::L1_ETMHF90_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_ETMHF90_Jet60_OR_DoubleJet30_) counter_uncached_L1_ETMHF90_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_ETMHF90_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_ETMHF90_Jet60_OR_DoubleJet30_) {
        if (!b_L1_ETMHF90_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_ETMHF90_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_ETMHF90_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_ETMHF90_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_ETMHF90_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30() {
    if (!loaded_L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30_) counter_uncached_L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30_++;
    else counter_cached_L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30_++;
    if (!loaded_L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30_) {
        if (!b_L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30_) throw std::runtime_error("L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30 branch doesn't exist");
        b_L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30_->GetEntry(index);
        loaded_L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30_ = true;
    }
    return L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30_;
}
const bool &Nano::L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1() {
    if (!loaded_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1_) counter_uncached_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1_++;
    else counter_cached_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1_++;
    if (!loaded_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1_) {
        if (!b_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1_) throw std::runtime_error("L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1 branch doesn't exist");
        b_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1_->GetEntry(index);
        loaded_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1_ = true;
    }
    return L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1_;
}
const bool &Nano::L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6() {
    if (!loaded_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6_) counter_uncached_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6_++;
    else counter_cached_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6_++;
    if (!loaded_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6_) {
        if (!b_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6_) throw std::runtime_error("L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6 branch doesn't exist");
        b_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6_->GetEntry(index);
        loaded_L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6_ = true;
    }
    return L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6_;
}
const bool &Nano::L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1() {
    if (!loaded_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1_) counter_uncached_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1_++;
    else counter_cached_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1_++;
    if (!loaded_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1_) {
        if (!b_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1_) throw std::runtime_error("L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1 branch doesn't exist");
        b_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1_->GetEntry(index);
        loaded_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1_ = true;
    }
    return L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1_;
}
const bool &Nano::L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6() {
    if (!loaded_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6_) counter_uncached_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6_++;
    else counter_cached_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6_++;
    if (!loaded_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6_) {
        if (!b_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6_) throw std::runtime_error("L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6 branch doesn't exist");
        b_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6_->GetEntry(index);
        loaded_L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6_ = true;
    }
    return L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6_;
}
const bool &Nano::L1_ETMHF95_Jet60_OR_DoubleJet30() {
    if (!loaded_L1_ETMHF95_Jet60_OR_DoubleJet30_) counter_uncached_L1_ETMHF95_Jet60_OR_DoubleJet30_++;
    else counter_cached_L1_ETMHF95_Jet60_OR_DoubleJet30_++;
    if (!loaded_L1_ETMHF95_Jet60_OR_DoubleJet30_) {
        if (!b_L1_ETMHF95_Jet60_OR_DoubleJet30_) throw std::runtime_error("L1_ETMHF95_Jet60_OR_DoubleJet30 branch doesn't exist");
        b_L1_ETMHF95_Jet60_OR_DoubleJet30_->GetEntry(index);
        loaded_L1_ETMHF95_Jet60_OR_DoubleJet30_ = true;
    }
    return L1_ETMHF95_Jet60_OR_DoubleJet30_;
}
const bool &Nano::L1_ETT100_BptxAND() {
    if (!loaded_L1_ETT100_BptxAND_) counter_uncached_L1_ETT100_BptxAND_++;
    else counter_cached_L1_ETT100_BptxAND_++;
    if (!loaded_L1_ETT100_BptxAND_) {
        if (!b_L1_ETT100_BptxAND_) throw std::runtime_error("L1_ETT100_BptxAND branch doesn't exist");
        b_L1_ETT100_BptxAND_->GetEntry(index);
        loaded_L1_ETT100_BptxAND_ = true;
    }
    return L1_ETT100_BptxAND_;
}
const bool &Nano::L1_ETT110_BptxAND() {
    if (!loaded_L1_ETT110_BptxAND_) counter_uncached_L1_ETT110_BptxAND_++;
    else counter_cached_L1_ETT110_BptxAND_++;
    if (!loaded_L1_ETT110_BptxAND_) {
        if (!b_L1_ETT110_BptxAND_) throw std::runtime_error("L1_ETT110_BptxAND branch doesn't exist");
        b_L1_ETT110_BptxAND_->GetEntry(index);
        loaded_L1_ETT110_BptxAND_ = true;
    }
    return L1_ETT110_BptxAND_;
}
const bool &Nano::L1_ETT1200() {
    if (!loaded_L1_ETT1200_) counter_uncached_L1_ETT1200_++;
    else counter_cached_L1_ETT1200_++;
    if (!loaded_L1_ETT1200_) {
        if (!b_L1_ETT1200_) throw std::runtime_error("L1_ETT1200 branch doesn't exist");
        b_L1_ETT1200_->GetEntry(index);
        loaded_L1_ETT1200_ = true;
    }
    return L1_ETT1200_;
}
const bool &Nano::L1_ETT15_BptxAND() {
    if (!loaded_L1_ETT15_BptxAND_) counter_uncached_L1_ETT15_BptxAND_++;
    else counter_cached_L1_ETT15_BptxAND_++;
    if (!loaded_L1_ETT15_BptxAND_) {
        if (!b_L1_ETT15_BptxAND_) throw std::runtime_error("L1_ETT15_BptxAND branch doesn't exist");
        b_L1_ETT15_BptxAND_->GetEntry(index);
        loaded_L1_ETT15_BptxAND_ = true;
    }
    return L1_ETT15_BptxAND_;
}
const bool &Nano::L1_ETT1600() {
    if (!loaded_L1_ETT1600_) counter_uncached_L1_ETT1600_++;
    else counter_cached_L1_ETT1600_++;
    if (!loaded_L1_ETT1600_) {
        if (!b_L1_ETT1600_) throw std::runtime_error("L1_ETT1600 branch doesn't exist");
        b_L1_ETT1600_->GetEntry(index);
        loaded_L1_ETT1600_ = true;
    }
    return L1_ETT1600_;
}
const bool &Nano::L1_ETT2000() {
    if (!loaded_L1_ETT2000_) counter_uncached_L1_ETT2000_++;
    else counter_cached_L1_ETT2000_++;
    if (!loaded_L1_ETT2000_) {
        if (!b_L1_ETT2000_) throw std::runtime_error("L1_ETT2000 branch doesn't exist");
        b_L1_ETT2000_->GetEntry(index);
        loaded_L1_ETT2000_ = true;
    }
    return L1_ETT2000_;
}
const bool &Nano::L1_ETT25() {
    if (!loaded_L1_ETT25_) counter_uncached_L1_ETT25_++;
    else counter_cached_L1_ETT25_++;
    if (!loaded_L1_ETT25_) {
        if (!b_L1_ETT25_) throw std::runtime_error("L1_ETT25 branch doesn't exist");
        b_L1_ETT25_->GetEntry(index);
        loaded_L1_ETT25_ = true;
    }
    return L1_ETT25_;
}
const bool &Nano::L1_ETT25_BptxAND() {
    if (!loaded_L1_ETT25_BptxAND_) counter_uncached_L1_ETT25_BptxAND_++;
    else counter_cached_L1_ETT25_BptxAND_++;
    if (!loaded_L1_ETT25_BptxAND_) {
        if (!b_L1_ETT25_BptxAND_) throw std::runtime_error("L1_ETT25_BptxAND branch doesn't exist");
        b_L1_ETT25_BptxAND_->GetEntry(index);
        loaded_L1_ETT25_BptxAND_ = true;
    }
    return L1_ETT25_BptxAND_;
}
const bool &Nano::L1_ETT35_BptxAND() {
    if (!loaded_L1_ETT35_BptxAND_) counter_uncached_L1_ETT35_BptxAND_++;
    else counter_cached_L1_ETT35_BptxAND_++;
    if (!loaded_L1_ETT35_BptxAND_) {
        if (!b_L1_ETT35_BptxAND_) throw std::runtime_error("L1_ETT35_BptxAND branch doesn't exist");
        b_L1_ETT35_BptxAND_->GetEntry(index);
        loaded_L1_ETT35_BptxAND_ = true;
    }
    return L1_ETT35_BptxAND_;
}
const bool &Nano::L1_ETT40() {
    if (!loaded_L1_ETT40_) counter_uncached_L1_ETT40_++;
    else counter_cached_L1_ETT40_++;
    if (!loaded_L1_ETT40_) {
        if (!b_L1_ETT40_) throw std::runtime_error("L1_ETT40 branch doesn't exist");
        b_L1_ETT40_->GetEntry(index);
        loaded_L1_ETT40_ = true;
    }
    return L1_ETT40_;
}
const bool &Nano::L1_ETT40_BptxAND() {
    if (!loaded_L1_ETT40_BptxAND_) counter_uncached_L1_ETT40_BptxAND_++;
    else counter_cached_L1_ETT40_BptxAND_++;
    if (!loaded_L1_ETT40_BptxAND_) {
        if (!b_L1_ETT40_BptxAND_) throw std::runtime_error("L1_ETT40_BptxAND branch doesn't exist");
        b_L1_ETT40_BptxAND_->GetEntry(index);
        loaded_L1_ETT40_BptxAND_ = true;
    }
    return L1_ETT40_BptxAND_;
}
const bool &Nano::L1_ETT50_BptxAND() {
    if (!loaded_L1_ETT50_BptxAND_) counter_uncached_L1_ETT50_BptxAND_++;
    else counter_cached_L1_ETT50_BptxAND_++;
    if (!loaded_L1_ETT50_BptxAND_) {
        if (!b_L1_ETT50_BptxAND_) throw std::runtime_error("L1_ETT50_BptxAND branch doesn't exist");
        b_L1_ETT50_BptxAND_->GetEntry(index);
        loaded_L1_ETT50_BptxAND_ = true;
    }
    return L1_ETT50_BptxAND_;
}
const bool &Nano::L1_ETT55_BptxAND() {
    if (!loaded_L1_ETT55_BptxAND_) counter_uncached_L1_ETT55_BptxAND_++;
    else counter_cached_L1_ETT55_BptxAND_++;
    if (!loaded_L1_ETT55_BptxAND_) {
        if (!b_L1_ETT55_BptxAND_) throw std::runtime_error("L1_ETT55_BptxAND branch doesn't exist");
        b_L1_ETT55_BptxAND_->GetEntry(index);
        loaded_L1_ETT55_BptxAND_ = true;
    }
    return L1_ETT55_BptxAND_;
}
const bool &Nano::L1_ETT60() {
    if (!loaded_L1_ETT60_) counter_uncached_L1_ETT60_++;
    else counter_cached_L1_ETT60_++;
    if (!loaded_L1_ETT60_) {
        if (!b_L1_ETT60_) throw std::runtime_error("L1_ETT60 branch doesn't exist");
        b_L1_ETT60_->GetEntry(index);
        loaded_L1_ETT60_ = true;
    }
    return L1_ETT60_;
}
const bool &Nano::L1_ETT60_BptxAND() {
    if (!loaded_L1_ETT60_BptxAND_) counter_uncached_L1_ETT60_BptxAND_++;
    else counter_cached_L1_ETT60_BptxAND_++;
    if (!loaded_L1_ETT60_BptxAND_) {
        if (!b_L1_ETT60_BptxAND_) throw std::runtime_error("L1_ETT60_BptxAND branch doesn't exist");
        b_L1_ETT60_BptxAND_->GetEntry(index);
        loaded_L1_ETT60_BptxAND_ = true;
    }
    return L1_ETT60_BptxAND_;
}
const bool &Nano::L1_ETT70_BptxAND() {
    if (!loaded_L1_ETT70_BptxAND_) counter_uncached_L1_ETT70_BptxAND_++;
    else counter_cached_L1_ETT70_BptxAND_++;
    if (!loaded_L1_ETT70_BptxAND_) {
        if (!b_L1_ETT70_BptxAND_) throw std::runtime_error("L1_ETT70_BptxAND branch doesn't exist");
        b_L1_ETT70_BptxAND_->GetEntry(index);
        loaded_L1_ETT70_BptxAND_ = true;
    }
    return L1_ETT70_BptxAND_;
}
const bool &Nano::L1_ETT75_BptxAND() {
    if (!loaded_L1_ETT75_BptxAND_) counter_uncached_L1_ETT75_BptxAND_++;
    else counter_cached_L1_ETT75_BptxAND_++;
    if (!loaded_L1_ETT75_BptxAND_) {
        if (!b_L1_ETT75_BptxAND_) throw std::runtime_error("L1_ETT75_BptxAND branch doesn't exist");
        b_L1_ETT75_BptxAND_->GetEntry(index);
        loaded_L1_ETT75_BptxAND_ = true;
    }
    return L1_ETT75_BptxAND_;
}
const bool &Nano::L1_ETT80_BptxAND() {
    if (!loaded_L1_ETT80_BptxAND_) counter_uncached_L1_ETT80_BptxAND_++;
    else counter_cached_L1_ETT80_BptxAND_++;
    if (!loaded_L1_ETT80_BptxAND_) {
        if (!b_L1_ETT80_BptxAND_) throw std::runtime_error("L1_ETT80_BptxAND branch doesn't exist");
        b_L1_ETT80_BptxAND_->GetEntry(index);
        loaded_L1_ETT80_BptxAND_ = true;
    }
    return L1_ETT80_BptxAND_;
}
const bool &Nano::L1_ETT85_BptxAND() {
    if (!loaded_L1_ETT85_BptxAND_) counter_uncached_L1_ETT85_BptxAND_++;
    else counter_cached_L1_ETT85_BptxAND_++;
    if (!loaded_L1_ETT85_BptxAND_) {
        if (!b_L1_ETT85_BptxAND_) throw std::runtime_error("L1_ETT85_BptxAND branch doesn't exist");
        b_L1_ETT85_BptxAND_->GetEntry(index);
        loaded_L1_ETT85_BptxAND_ = true;
    }
    return L1_ETT85_BptxAND_;
}
const bool &Nano::L1_ETT90_BptxAND() {
    if (!loaded_L1_ETT90_BptxAND_) counter_uncached_L1_ETT90_BptxAND_++;
    else counter_cached_L1_ETT90_BptxAND_++;
    if (!loaded_L1_ETT90_BptxAND_) {
        if (!b_L1_ETT90_BptxAND_) throw std::runtime_error("L1_ETT90_BptxAND branch doesn't exist");
        b_L1_ETT90_BptxAND_->GetEntry(index);
        loaded_L1_ETT90_BptxAND_ = true;
    }
    return L1_ETT90_BptxAND_;
}
const bool &Nano::L1_ETT95_BptxAND() {
    if (!loaded_L1_ETT95_BptxAND_) counter_uncached_L1_ETT95_BptxAND_++;
    else counter_cached_L1_ETT95_BptxAND_++;
    if (!loaded_L1_ETT95_BptxAND_) {
        if (!b_L1_ETT95_BptxAND_) throw std::runtime_error("L1_ETT95_BptxAND branch doesn't exist");
        b_L1_ETT95_BptxAND_->GetEntry(index);
        loaded_L1_ETT95_BptxAND_ = true;
    }
    return L1_ETT95_BptxAND_;
}
const bool &Nano::L1_FirstBunchAfterTrain() {
    if (!loaded_L1_FirstBunchAfterTrain_) counter_uncached_L1_FirstBunchAfterTrain_++;
    else counter_cached_L1_FirstBunchAfterTrain_++;
    if (!loaded_L1_FirstBunchAfterTrain_) {
        if (!b_L1_FirstBunchAfterTrain_) throw std::runtime_error("L1_FirstBunchAfterTrain branch doesn't exist");
        b_L1_FirstBunchAfterTrain_->GetEntry(index);
        loaded_L1_FirstBunchAfterTrain_ = true;
    }
    return L1_FirstBunchAfterTrain_;
}
const bool &Nano::L1_FirstBunchBeforeTrain() {
    if (!loaded_L1_FirstBunchBeforeTrain_) counter_uncached_L1_FirstBunchBeforeTrain_++;
    else counter_cached_L1_FirstBunchBeforeTrain_++;
    if (!loaded_L1_FirstBunchBeforeTrain_) {
        if (!b_L1_FirstBunchBeforeTrain_) throw std::runtime_error("L1_FirstBunchBeforeTrain branch doesn't exist");
        b_L1_FirstBunchBeforeTrain_->GetEntry(index);
        loaded_L1_FirstBunchBeforeTrain_ = true;
    }
    return L1_FirstBunchBeforeTrain_;
}
const bool &Nano::L1_FirstBunchInTrain() {
    if (!loaded_L1_FirstBunchInTrain_) counter_uncached_L1_FirstBunchInTrain_++;
    else counter_cached_L1_FirstBunchInTrain_++;
    if (!loaded_L1_FirstBunchInTrain_) {
        if (!b_L1_FirstBunchInTrain_) throw std::runtime_error("L1_FirstBunchInTrain branch doesn't exist");
        b_L1_FirstBunchInTrain_->GetEntry(index);
        loaded_L1_FirstBunchInTrain_ = true;
    }
    return L1_FirstBunchInTrain_;
}
const bool &Nano::L1_FirstCollisionInOrbit() {
    if (!loaded_L1_FirstCollisionInOrbit_) counter_uncached_L1_FirstCollisionInOrbit_++;
    else counter_cached_L1_FirstCollisionInOrbit_++;
    if (!loaded_L1_FirstCollisionInOrbit_) {
        if (!b_L1_FirstCollisionInOrbit_) throw std::runtime_error("L1_FirstCollisionInOrbit branch doesn't exist");
        b_L1_FirstCollisionInOrbit_->GetEntry(index);
        loaded_L1_FirstCollisionInOrbit_ = true;
    }
    return L1_FirstCollisionInOrbit_;
}
const bool &Nano::L1_FirstCollisionInTrain() {
    if (!loaded_L1_FirstCollisionInTrain_) counter_uncached_L1_FirstCollisionInTrain_++;
    else counter_cached_L1_FirstCollisionInTrain_++;
    if (!loaded_L1_FirstCollisionInTrain_) {
        if (!b_L1_FirstCollisionInTrain_) throw std::runtime_error("L1_FirstCollisionInTrain branch doesn't exist");
        b_L1_FirstCollisionInTrain_->GetEntry(index);
        loaded_L1_FirstCollisionInTrain_ = true;
    }
    return L1_FirstCollisionInTrain_;
}
const bool &Nano::L1_HCAL_LaserMon_Trig() {
    if (!loaded_L1_HCAL_LaserMon_Trig_) counter_uncached_L1_HCAL_LaserMon_Trig_++;
    else counter_cached_L1_HCAL_LaserMon_Trig_++;
    if (!loaded_L1_HCAL_LaserMon_Trig_) {
        if (!b_L1_HCAL_LaserMon_Trig_) throw std::runtime_error("L1_HCAL_LaserMon_Trig branch doesn't exist");
        b_L1_HCAL_LaserMon_Trig_->GetEntry(index);
        loaded_L1_HCAL_LaserMon_Trig_ = true;
    }
    return L1_HCAL_LaserMon_Trig_;
}
const bool &Nano::L1_HCAL_LaserMon_Veto() {
    if (!loaded_L1_HCAL_LaserMon_Veto_) counter_uncached_L1_HCAL_LaserMon_Veto_++;
    else counter_cached_L1_HCAL_LaserMon_Veto_++;
    if (!loaded_L1_HCAL_LaserMon_Veto_) {
        if (!b_L1_HCAL_LaserMon_Veto_) throw std::runtime_error("L1_HCAL_LaserMon_Veto branch doesn't exist");
        b_L1_HCAL_LaserMon_Veto_->GetEntry(index);
        loaded_L1_HCAL_LaserMon_Veto_ = true;
    }
    return L1_HCAL_LaserMon_Veto_;
}
const bool &Nano::L1_HTM100() {
    if (!loaded_L1_HTM100_) counter_uncached_L1_HTM100_++;
    else counter_cached_L1_HTM100_++;
    if (!loaded_L1_HTM100_) {
        if (!b_L1_HTM100_) throw std::runtime_error("L1_HTM100 branch doesn't exist");
        b_L1_HTM100_->GetEntry(index);
        loaded_L1_HTM100_ = true;
    }
    return L1_HTM100_;
}
const bool &Nano::L1_HTM120() {
    if (!loaded_L1_HTM120_) counter_uncached_L1_HTM120_++;
    else counter_cached_L1_HTM120_++;
    if (!loaded_L1_HTM120_) {
        if (!b_L1_HTM120_) throw std::runtime_error("L1_HTM120 branch doesn't exist");
        b_L1_HTM120_->GetEntry(index);
        loaded_L1_HTM120_ = true;
    }
    return L1_HTM120_;
}
const bool &Nano::L1_HTM130() {
    if (!loaded_L1_HTM130_) counter_uncached_L1_HTM130_++;
    else counter_cached_L1_HTM130_++;
    if (!loaded_L1_HTM130_) {
        if (!b_L1_HTM130_) throw std::runtime_error("L1_HTM130 branch doesn't exist");
        b_L1_HTM130_->GetEntry(index);
        loaded_L1_HTM130_ = true;
    }
    return L1_HTM130_;
}
const bool &Nano::L1_HTM140() {
    if (!loaded_L1_HTM140_) counter_uncached_L1_HTM140_++;
    else counter_cached_L1_HTM140_++;
    if (!loaded_L1_HTM140_) {
        if (!b_L1_HTM140_) throw std::runtime_error("L1_HTM140 branch doesn't exist");
        b_L1_HTM140_->GetEntry(index);
        loaded_L1_HTM140_ = true;
    }
    return L1_HTM140_;
}
const bool &Nano::L1_HTM150() {
    if (!loaded_L1_HTM150_) counter_uncached_L1_HTM150_++;
    else counter_cached_L1_HTM150_++;
    if (!loaded_L1_HTM150_) {
        if (!b_L1_HTM150_) throw std::runtime_error("L1_HTM150 branch doesn't exist");
        b_L1_HTM150_->GetEntry(index);
        loaded_L1_HTM150_ = true;
    }
    return L1_HTM150_;
}
const bool &Nano::L1_HTM50() {
    if (!loaded_L1_HTM50_) counter_uncached_L1_HTM50_++;
    else counter_cached_L1_HTM50_++;
    if (!loaded_L1_HTM50_) {
        if (!b_L1_HTM50_) throw std::runtime_error("L1_HTM50 branch doesn't exist");
        b_L1_HTM50_->GetEntry(index);
        loaded_L1_HTM50_ = true;
    }
    return L1_HTM50_;
}
const bool &Nano::L1_HTM60_HTT260() {
    if (!loaded_L1_HTM60_HTT260_) counter_uncached_L1_HTM60_HTT260_++;
    else counter_cached_L1_HTM60_HTT260_++;
    if (!loaded_L1_HTM60_HTT260_) {
        if (!b_L1_HTM60_HTT260_) throw std::runtime_error("L1_HTM60_HTT260 branch doesn't exist");
        b_L1_HTM60_HTT260_->GetEntry(index);
        loaded_L1_HTM60_HTT260_ = true;
    }
    return L1_HTM60_HTT260_;
}
const bool &Nano::L1_HTM70() {
    if (!loaded_L1_HTM70_) counter_uncached_L1_HTM70_++;
    else counter_cached_L1_HTM70_++;
    if (!loaded_L1_HTM70_) {
        if (!b_L1_HTM70_) throw std::runtime_error("L1_HTM70 branch doesn't exist");
        b_L1_HTM70_->GetEntry(index);
        loaded_L1_HTM70_ = true;
    }
    return L1_HTM70_;
}
const bool &Nano::L1_HTM80() {
    if (!loaded_L1_HTM80_) counter_uncached_L1_HTM80_++;
    else counter_cached_L1_HTM80_++;
    if (!loaded_L1_HTM80_) {
        if (!b_L1_HTM80_) throw std::runtime_error("L1_HTM80 branch doesn't exist");
        b_L1_HTM80_->GetEntry(index);
        loaded_L1_HTM80_ = true;
    }
    return L1_HTM80_;
}
const bool &Nano::L1_HTM80_HTT220() {
    if (!loaded_L1_HTM80_HTT220_) counter_uncached_L1_HTM80_HTT220_++;
    else counter_cached_L1_HTM80_HTT220_++;
    if (!loaded_L1_HTM80_HTT220_) {
        if (!b_L1_HTM80_HTT220_) throw std::runtime_error("L1_HTM80_HTT220 branch doesn't exist");
        b_L1_HTM80_HTT220_->GetEntry(index);
        loaded_L1_HTM80_HTT220_ = true;
    }
    return L1_HTM80_HTT220_;
}
const bool &Nano::L1_HTT120() {
    if (!loaded_L1_HTT120_) counter_uncached_L1_HTT120_++;
    else counter_cached_L1_HTT120_++;
    if (!loaded_L1_HTT120_) {
        if (!b_L1_HTT120_) throw std::runtime_error("L1_HTT120 branch doesn't exist");
        b_L1_HTT120_->GetEntry(index);
        loaded_L1_HTT120_ = true;
    }
    return L1_HTT120_;
}
const bool &Nano::L1_HTT120_SingleLLPJet40() {
    if (!loaded_L1_HTT120_SingleLLPJet40_) counter_uncached_L1_HTT120_SingleLLPJet40_++;
    else counter_cached_L1_HTT120_SingleLLPJet40_++;
    if (!loaded_L1_HTT120_SingleLLPJet40_) {
        if (!b_L1_HTT120_SingleLLPJet40_) throw std::runtime_error("L1_HTT120_SingleLLPJet40 branch doesn't exist");
        b_L1_HTT120_SingleLLPJet40_->GetEntry(index);
        loaded_L1_HTT120_SingleLLPJet40_ = true;
    }
    return L1_HTT120_SingleLLPJet40_;
}
const bool &Nano::L1_HTT120er() {
    if (!loaded_L1_HTT120er_) counter_uncached_L1_HTT120er_++;
    else counter_cached_L1_HTT120er_++;
    if (!loaded_L1_HTT120er_) {
        if (!b_L1_HTT120er_) throw std::runtime_error("L1_HTT120er branch doesn't exist");
        b_L1_HTT120er_->GetEntry(index);
        loaded_L1_HTT120er_ = true;
    }
    return L1_HTT120er_;
}
const bool &Nano::L1_HTT160() {
    if (!loaded_L1_HTT160_) counter_uncached_L1_HTT160_++;
    else counter_cached_L1_HTT160_++;
    if (!loaded_L1_HTT160_) {
        if (!b_L1_HTT160_) throw std::runtime_error("L1_HTT160 branch doesn't exist");
        b_L1_HTT160_->GetEntry(index);
        loaded_L1_HTT160_ = true;
    }
    return L1_HTT160_;
}
const bool &Nano::L1_HTT160_SingleLLPJet50() {
    if (!loaded_L1_HTT160_SingleLLPJet50_) counter_uncached_L1_HTT160_SingleLLPJet50_++;
    else counter_cached_L1_HTT160_SingleLLPJet50_++;
    if (!loaded_L1_HTT160_SingleLLPJet50_) {
        if (!b_L1_HTT160_SingleLLPJet50_) throw std::runtime_error("L1_HTT160_SingleLLPJet50 branch doesn't exist");
        b_L1_HTT160_SingleLLPJet50_->GetEntry(index);
        loaded_L1_HTT160_SingleLLPJet50_ = true;
    }
    return L1_HTT160_SingleLLPJet50_;
}
const bool &Nano::L1_HTT160er() {
    if (!loaded_L1_HTT160er_) counter_uncached_L1_HTT160er_++;
    else counter_cached_L1_HTT160er_++;
    if (!loaded_L1_HTT160er_) {
        if (!b_L1_HTT160er_) throw std::runtime_error("L1_HTT160er branch doesn't exist");
        b_L1_HTT160er_->GetEntry(index);
        loaded_L1_HTT160er_ = true;
    }
    return L1_HTT160er_;
}
const bool &Nano::L1_HTT200() {
    if (!loaded_L1_HTT200_) counter_uncached_L1_HTT200_++;
    else counter_cached_L1_HTT200_++;
    if (!loaded_L1_HTT200_) {
        if (!b_L1_HTT200_) throw std::runtime_error("L1_HTT200 branch doesn't exist");
        b_L1_HTT200_->GetEntry(index);
        loaded_L1_HTT200_ = true;
    }
    return L1_HTT200_;
}
const bool &Nano::L1_HTT200_SingleLLPJet60() {
    if (!loaded_L1_HTT200_SingleLLPJet60_) counter_uncached_L1_HTT200_SingleLLPJet60_++;
    else counter_cached_L1_HTT200_SingleLLPJet60_++;
    if (!loaded_L1_HTT200_SingleLLPJet60_) {
        if (!b_L1_HTT200_SingleLLPJet60_) throw std::runtime_error("L1_HTT200_SingleLLPJet60 branch doesn't exist");
        b_L1_HTT200_SingleLLPJet60_->GetEntry(index);
        loaded_L1_HTT200_SingleLLPJet60_ = true;
    }
    return L1_HTT200_SingleLLPJet60_;
}
const bool &Nano::L1_HTT200er() {
    if (!loaded_L1_HTT200er_) counter_uncached_L1_HTT200er_++;
    else counter_cached_L1_HTT200er_++;
    if (!loaded_L1_HTT200er_) {
        if (!b_L1_HTT200er_) throw std::runtime_error("L1_HTT200er branch doesn't exist");
        b_L1_HTT200er_->GetEntry(index);
        loaded_L1_HTT200er_ = true;
    }
    return L1_HTT200er_;
}
const bool &Nano::L1_HTT220() {
    if (!loaded_L1_HTT220_) counter_uncached_L1_HTT220_++;
    else counter_cached_L1_HTT220_++;
    if (!loaded_L1_HTT220_) {
        if (!b_L1_HTT220_) throw std::runtime_error("L1_HTT220 branch doesn't exist");
        b_L1_HTT220_->GetEntry(index);
        loaded_L1_HTT220_ = true;
    }
    return L1_HTT220_;
}
const bool &Nano::L1_HTT220er() {
    if (!loaded_L1_HTT220er_) counter_uncached_L1_HTT220er_++;
    else counter_cached_L1_HTT220er_++;
    if (!loaded_L1_HTT220er_) {
        if (!b_L1_HTT220er_) throw std::runtime_error("L1_HTT220er branch doesn't exist");
        b_L1_HTT220er_->GetEntry(index);
        loaded_L1_HTT220er_ = true;
    }
    return L1_HTT220er_;
}
const bool &Nano::L1_HTT240() {
    if (!loaded_L1_HTT240_) counter_uncached_L1_HTT240_++;
    else counter_cached_L1_HTT240_++;
    if (!loaded_L1_HTT240_) {
        if (!b_L1_HTT240_) throw std::runtime_error("L1_HTT240 branch doesn't exist");
        b_L1_HTT240_->GetEntry(index);
        loaded_L1_HTT240_ = true;
    }
    return L1_HTT240_;
}
const bool &Nano::L1_HTT240_SingleLLPJet70() {
    if (!loaded_L1_HTT240_SingleLLPJet70_) counter_uncached_L1_HTT240_SingleLLPJet70_++;
    else counter_cached_L1_HTT240_SingleLLPJet70_++;
    if (!loaded_L1_HTT240_SingleLLPJet70_) {
        if (!b_L1_HTT240_SingleLLPJet70_) throw std::runtime_error("L1_HTT240_SingleLLPJet70 branch doesn't exist");
        b_L1_HTT240_SingleLLPJet70_->GetEntry(index);
        loaded_L1_HTT240_SingleLLPJet70_ = true;
    }
    return L1_HTT240_SingleLLPJet70_;
}
const bool &Nano::L1_HTT240er() {
    if (!loaded_L1_HTT240er_) counter_uncached_L1_HTT240er_++;
    else counter_cached_L1_HTT240er_++;
    if (!loaded_L1_HTT240er_) {
        if (!b_L1_HTT240er_) throw std::runtime_error("L1_HTT240er branch doesn't exist");
        b_L1_HTT240er_->GetEntry(index);
        loaded_L1_HTT240er_ = true;
    }
    return L1_HTT240er_;
}
const bool &Nano::L1_HTT250er_QuadJet_70_55_40_35_er2p5() {
    if (!loaded_L1_HTT250er_QuadJet_70_55_40_35_er2p5_) counter_uncached_L1_HTT250er_QuadJet_70_55_40_35_er2p5_++;
    else counter_cached_L1_HTT250er_QuadJet_70_55_40_35_er2p5_++;
    if (!loaded_L1_HTT250er_QuadJet_70_55_40_35_er2p5_) {
        if (!b_L1_HTT250er_QuadJet_70_55_40_35_er2p5_) throw std::runtime_error("L1_HTT250er_QuadJet_70_55_40_35_er2p5 branch doesn't exist");
        b_L1_HTT250er_QuadJet_70_55_40_35_er2p5_->GetEntry(index);
        loaded_L1_HTT250er_QuadJet_70_55_40_35_er2p5_ = true;
    }
    return L1_HTT250er_QuadJet_70_55_40_35_er2p5_;
}
const bool &Nano::L1_HTT255() {
    if (!loaded_L1_HTT255_) counter_uncached_L1_HTT255_++;
    else counter_cached_L1_HTT255_++;
    if (!loaded_L1_HTT255_) {
        if (!b_L1_HTT255_) throw std::runtime_error("L1_HTT255 branch doesn't exist");
        b_L1_HTT255_->GetEntry(index);
        loaded_L1_HTT255_ = true;
    }
    return L1_HTT255_;
}
const bool &Nano::L1_HTT255er() {
    if (!loaded_L1_HTT255er_) counter_uncached_L1_HTT255er_++;
    else counter_cached_L1_HTT255er_++;
    if (!loaded_L1_HTT255er_) {
        if (!b_L1_HTT255er_) throw std::runtime_error("L1_HTT255er branch doesn't exist");
        b_L1_HTT255er_->GetEntry(index);
        loaded_L1_HTT255er_ = true;
    }
    return L1_HTT255er_;
}
const bool &Nano::L1_HTT270() {
    if (!loaded_L1_HTT270_) counter_uncached_L1_HTT270_++;
    else counter_cached_L1_HTT270_++;
    if (!loaded_L1_HTT270_) {
        if (!b_L1_HTT270_) throw std::runtime_error("L1_HTT270 branch doesn't exist");
        b_L1_HTT270_->GetEntry(index);
        loaded_L1_HTT270_ = true;
    }
    return L1_HTT270_;
}
const bool &Nano::L1_HTT270er() {
    if (!loaded_L1_HTT270er_) counter_uncached_L1_HTT270er_++;
    else counter_cached_L1_HTT270er_++;
    if (!loaded_L1_HTT270er_) {
        if (!b_L1_HTT270er_) throw std::runtime_error("L1_HTT270er branch doesn't exist");
        b_L1_HTT270er_->GetEntry(index);
        loaded_L1_HTT270er_ = true;
    }
    return L1_HTT270er_;
}
const bool &Nano::L1_HTT280() {
    if (!loaded_L1_HTT280_) counter_uncached_L1_HTT280_++;
    else counter_cached_L1_HTT280_++;
    if (!loaded_L1_HTT280_) {
        if (!b_L1_HTT280_) throw std::runtime_error("L1_HTT280 branch doesn't exist");
        b_L1_HTT280_->GetEntry(index);
        loaded_L1_HTT280_ = true;
    }
    return L1_HTT280_;
}
const bool &Nano::L1_HTT280er() {
    if (!loaded_L1_HTT280er_) counter_uncached_L1_HTT280er_++;
    else counter_cached_L1_HTT280er_++;
    if (!loaded_L1_HTT280er_) {
        if (!b_L1_HTT280er_) throw std::runtime_error("L1_HTT280er branch doesn't exist");
        b_L1_HTT280er_->GetEntry(index);
        loaded_L1_HTT280er_ = true;
    }
    return L1_HTT280er_;
}
const bool &Nano::L1_HTT280er_QuadJet_70_55_40_35_er2p4() {
    if (!loaded_L1_HTT280er_QuadJet_70_55_40_35_er2p4_) counter_uncached_L1_HTT280er_QuadJet_70_55_40_35_er2p4_++;
    else counter_cached_L1_HTT280er_QuadJet_70_55_40_35_er2p4_++;
    if (!loaded_L1_HTT280er_QuadJet_70_55_40_35_er2p4_) {
        if (!b_L1_HTT280er_QuadJet_70_55_40_35_er2p4_) throw std::runtime_error("L1_HTT280er_QuadJet_70_55_40_35_er2p4 branch doesn't exist");
        b_L1_HTT280er_QuadJet_70_55_40_35_er2p4_->GetEntry(index);
        loaded_L1_HTT280er_QuadJet_70_55_40_35_er2p4_ = true;
    }
    return L1_HTT280er_QuadJet_70_55_40_35_er2p4_;
}
const bool &Nano::L1_HTT280er_QuadJet_70_55_40_35_er2p5() {
    if (!loaded_L1_HTT280er_QuadJet_70_55_40_35_er2p5_) counter_uncached_L1_HTT280er_QuadJet_70_55_40_35_er2p5_++;
    else counter_cached_L1_HTT280er_QuadJet_70_55_40_35_er2p5_++;
    if (!loaded_L1_HTT280er_QuadJet_70_55_40_35_er2p5_) {
        if (!b_L1_HTT280er_QuadJet_70_55_40_35_er2p5_) throw std::runtime_error("L1_HTT280er_QuadJet_70_55_40_35_er2p5 branch doesn't exist");
        b_L1_HTT280er_QuadJet_70_55_40_35_er2p5_->GetEntry(index);
        loaded_L1_HTT280er_QuadJet_70_55_40_35_er2p5_ = true;
    }
    return L1_HTT280er_QuadJet_70_55_40_35_er2p5_;
}
const bool &Nano::L1_HTT300() {
    if (!loaded_L1_HTT300_) counter_uncached_L1_HTT300_++;
    else counter_cached_L1_HTT300_++;
    if (!loaded_L1_HTT300_) {
        if (!b_L1_HTT300_) throw std::runtime_error("L1_HTT300 branch doesn't exist");
        b_L1_HTT300_->GetEntry(index);
        loaded_L1_HTT300_ = true;
    }
    return L1_HTT300_;
}
const bool &Nano::L1_HTT300er() {
    if (!loaded_L1_HTT300er_) counter_uncached_L1_HTT300er_++;
    else counter_cached_L1_HTT300er_++;
    if (!loaded_L1_HTT300er_) {
        if (!b_L1_HTT300er_) throw std::runtime_error("L1_HTT300er branch doesn't exist");
        b_L1_HTT300er_->GetEntry(index);
        loaded_L1_HTT300er_ = true;
    }
    return L1_HTT300er_;
}
const bool &Nano::L1_HTT300er_QuadJet_70_55_40_35_er2p5() {
    if (!loaded_L1_HTT300er_QuadJet_70_55_40_35_er2p5_) counter_uncached_L1_HTT300er_QuadJet_70_55_40_35_er2p5_++;
    else counter_cached_L1_HTT300er_QuadJet_70_55_40_35_er2p5_++;
    if (!loaded_L1_HTT300er_QuadJet_70_55_40_35_er2p5_) {
        if (!b_L1_HTT300er_QuadJet_70_55_40_35_er2p5_) throw std::runtime_error("L1_HTT300er_QuadJet_70_55_40_35_er2p5 branch doesn't exist");
        b_L1_HTT300er_QuadJet_70_55_40_35_er2p5_->GetEntry(index);
        loaded_L1_HTT300er_QuadJet_70_55_40_35_er2p5_ = true;
    }
    return L1_HTT300er_QuadJet_70_55_40_35_er2p5_;
}
const bool &Nano::L1_HTT320() {
    if (!loaded_L1_HTT320_) counter_uncached_L1_HTT320_++;
    else counter_cached_L1_HTT320_++;
    if (!loaded_L1_HTT320_) {
        if (!b_L1_HTT320_) throw std::runtime_error("L1_HTT320 branch doesn't exist");
        b_L1_HTT320_->GetEntry(index);
        loaded_L1_HTT320_ = true;
    }
    return L1_HTT320_;
}
const bool &Nano::L1_HTT320er() {
    if (!loaded_L1_HTT320er_) counter_uncached_L1_HTT320er_++;
    else counter_cached_L1_HTT320er_++;
    if (!loaded_L1_HTT320er_) {
        if (!b_L1_HTT320er_) throw std::runtime_error("L1_HTT320er branch doesn't exist");
        b_L1_HTT320er_->GetEntry(index);
        loaded_L1_HTT320er_ = true;
    }
    return L1_HTT320er_;
}
const bool &Nano::L1_HTT320er_QuadJet_70_55_40_40_er2p4() {
    if (!loaded_L1_HTT320er_QuadJet_70_55_40_40_er2p4_) counter_uncached_L1_HTT320er_QuadJet_70_55_40_40_er2p4_++;
    else counter_cached_L1_HTT320er_QuadJet_70_55_40_40_er2p4_++;
    if (!loaded_L1_HTT320er_QuadJet_70_55_40_40_er2p4_) {
        if (!b_L1_HTT320er_QuadJet_70_55_40_40_er2p4_) throw std::runtime_error("L1_HTT320er_QuadJet_70_55_40_40_er2p4 branch doesn't exist");
        b_L1_HTT320er_QuadJet_70_55_40_40_er2p4_->GetEntry(index);
        loaded_L1_HTT320er_QuadJet_70_55_40_40_er2p4_ = true;
    }
    return L1_HTT320er_QuadJet_70_55_40_40_er2p4_;
}
const bool &Nano::L1_HTT320er_QuadJet_70_55_40_40_er2p5() {
    if (!loaded_L1_HTT320er_QuadJet_70_55_40_40_er2p5_) counter_uncached_L1_HTT320er_QuadJet_70_55_40_40_er2p5_++;
    else counter_cached_L1_HTT320er_QuadJet_70_55_40_40_er2p5_++;
    if (!loaded_L1_HTT320er_QuadJet_70_55_40_40_er2p5_) {
        if (!b_L1_HTT320er_QuadJet_70_55_40_40_er2p5_) throw std::runtime_error("L1_HTT320er_QuadJet_70_55_40_40_er2p5 branch doesn't exist");
        b_L1_HTT320er_QuadJet_70_55_40_40_er2p5_->GetEntry(index);
        loaded_L1_HTT320er_QuadJet_70_55_40_40_er2p5_ = true;
    }
    return L1_HTT320er_QuadJet_70_55_40_40_er2p5_;
}
const bool &Nano::L1_HTT320er_QuadJet_70_55_45_45_er2p5() {
    if (!loaded_L1_HTT320er_QuadJet_70_55_45_45_er2p5_) counter_uncached_L1_HTT320er_QuadJet_70_55_45_45_er2p5_++;
    else counter_cached_L1_HTT320er_QuadJet_70_55_45_45_er2p5_++;
    if (!loaded_L1_HTT320er_QuadJet_70_55_45_45_er2p5_) {
        if (!b_L1_HTT320er_QuadJet_70_55_45_45_er2p5_) throw std::runtime_error("L1_HTT320er_QuadJet_70_55_45_45_er2p5 branch doesn't exist");
        b_L1_HTT320er_QuadJet_70_55_45_45_er2p5_->GetEntry(index);
        loaded_L1_HTT320er_QuadJet_70_55_45_45_er2p5_ = true;
    }
    return L1_HTT320er_QuadJet_70_55_45_45_er2p5_;
}
const bool &Nano::L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3() {
    if (!loaded_L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3_) counter_uncached_L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3_++;
    else counter_cached_L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3_++;
    if (!loaded_L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3_) {
        if (!b_L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3_) throw std::runtime_error("L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3 branch doesn't exist");
        b_L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3_->GetEntry(index);
        loaded_L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3_ = true;
    }
    return L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3_;
}
const bool &Nano::L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3() {
    if (!loaded_L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3_) counter_uncached_L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3_++;
    else counter_cached_L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3_++;
    if (!loaded_L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3_) {
        if (!b_L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3_) throw std::runtime_error("L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3 branch doesn't exist");
        b_L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3_->GetEntry(index);
        loaded_L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3_ = true;
    }
    return L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3_;
}
const bool &Nano::L1_HTT340er() {
    if (!loaded_L1_HTT340er_) counter_uncached_L1_HTT340er_++;
    else counter_cached_L1_HTT340er_++;
    if (!loaded_L1_HTT340er_) {
        if (!b_L1_HTT340er_) throw std::runtime_error("L1_HTT340er branch doesn't exist");
        b_L1_HTT340er_->GetEntry(index);
        loaded_L1_HTT340er_ = true;
    }
    return L1_HTT340er_;
}
const bool &Nano::L1_HTT340er_QuadJet_70_55_40_40_er2p5() {
    if (!loaded_L1_HTT340er_QuadJet_70_55_40_40_er2p5_) counter_uncached_L1_HTT340er_QuadJet_70_55_40_40_er2p5_++;
    else counter_cached_L1_HTT340er_QuadJet_70_55_40_40_er2p5_++;
    if (!loaded_L1_HTT340er_QuadJet_70_55_40_40_er2p5_) {
        if (!b_L1_HTT340er_QuadJet_70_55_40_40_er2p5_) throw std::runtime_error("L1_HTT340er_QuadJet_70_55_40_40_er2p5 branch doesn't exist");
        b_L1_HTT340er_QuadJet_70_55_40_40_er2p5_->GetEntry(index);
        loaded_L1_HTT340er_QuadJet_70_55_40_40_er2p5_ = true;
    }
    return L1_HTT340er_QuadJet_70_55_40_40_er2p5_;
}
const bool &Nano::L1_HTT340er_QuadJet_70_55_45_45_er2p5() {
    if (!loaded_L1_HTT340er_QuadJet_70_55_45_45_er2p5_) counter_uncached_L1_HTT340er_QuadJet_70_55_45_45_er2p5_++;
    else counter_cached_L1_HTT340er_QuadJet_70_55_45_45_er2p5_++;
    if (!loaded_L1_HTT340er_QuadJet_70_55_45_45_er2p5_) {
        if (!b_L1_HTT340er_QuadJet_70_55_45_45_er2p5_) throw std::runtime_error("L1_HTT340er_QuadJet_70_55_45_45_er2p5 branch doesn't exist");
        b_L1_HTT340er_QuadJet_70_55_45_45_er2p5_->GetEntry(index);
        loaded_L1_HTT340er_QuadJet_70_55_45_45_er2p5_ = true;
    }
    return L1_HTT340er_QuadJet_70_55_45_45_er2p5_;
}
const bool &Nano::L1_HTT360er() {
    if (!loaded_L1_HTT360er_) counter_uncached_L1_HTT360er_++;
    else counter_cached_L1_HTT360er_++;
    if (!loaded_L1_HTT360er_) {
        if (!b_L1_HTT360er_) throw std::runtime_error("L1_HTT360er branch doesn't exist");
        b_L1_HTT360er_->GetEntry(index);
        loaded_L1_HTT360er_ = true;
    }
    return L1_HTT360er_;
}
const bool &Nano::L1_HTT380er() {
    if (!loaded_L1_HTT380er_) counter_uncached_L1_HTT380er_++;
    else counter_cached_L1_HTT380er_++;
    if (!loaded_L1_HTT380er_) {
        if (!b_L1_HTT380er_) throw std::runtime_error("L1_HTT380er branch doesn't exist");
        b_L1_HTT380er_->GetEntry(index);
        loaded_L1_HTT380er_ = true;
    }
    return L1_HTT380er_;
}
const bool &Nano::L1_HTT400er() {
    if (!loaded_L1_HTT400er_) counter_uncached_L1_HTT400er_++;
    else counter_cached_L1_HTT400er_++;
    if (!loaded_L1_HTT400er_) {
        if (!b_L1_HTT400er_) throw std::runtime_error("L1_HTT400er branch doesn't exist");
        b_L1_HTT400er_->GetEntry(index);
        loaded_L1_HTT400er_ = true;
    }
    return L1_HTT400er_;
}
const bool &Nano::L1_HTT450er() {
    if (!loaded_L1_HTT450er_) counter_uncached_L1_HTT450er_++;
    else counter_cached_L1_HTT450er_++;
    if (!loaded_L1_HTT450er_) {
        if (!b_L1_HTT450er_) throw std::runtime_error("L1_HTT450er branch doesn't exist");
        b_L1_HTT450er_->GetEntry(index);
        loaded_L1_HTT450er_ = true;
    }
    return L1_HTT450er_;
}
const bool &Nano::L1_HTT500er() {
    if (!loaded_L1_HTT500er_) counter_uncached_L1_HTT500er_++;
    else counter_cached_L1_HTT500er_++;
    if (!loaded_L1_HTT500er_) {
        if (!b_L1_HTT500er_) throw std::runtime_error("L1_HTT500er branch doesn't exist");
        b_L1_HTT500er_->GetEntry(index);
        loaded_L1_HTT500er_ = true;
    }
    return L1_HTT500er_;
}
const bool &Nano::L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2() {
    if (!loaded_L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2_) counter_uncached_L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2_++;
    else counter_cached_L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2_++;
    if (!loaded_L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2_) {
        if (!b_L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2_) throw std::runtime_error("L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2 branch doesn't exist");
        b_L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2_->GetEntry(index);
        loaded_L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2_ = true;
    }
    return L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2_;
}
const bool &Nano::L1_IsoEG18er_IsoTau24er_dEta_Min0p2() {
    if (!loaded_L1_IsoEG18er_IsoTau24er_dEta_Min0p2_) counter_uncached_L1_IsoEG18er_IsoTau24er_dEta_Min0p2_++;
    else counter_cached_L1_IsoEG18er_IsoTau24er_dEta_Min0p2_++;
    if (!loaded_L1_IsoEG18er_IsoTau24er_dEta_Min0p2_) {
        if (!b_L1_IsoEG18er_IsoTau24er_dEta_Min0p2_) throw std::runtime_error("L1_IsoEG18er_IsoTau24er_dEta_Min0p2 branch doesn't exist");
        b_L1_IsoEG18er_IsoTau24er_dEta_Min0p2_->GetEntry(index);
        loaded_L1_IsoEG18er_IsoTau24er_dEta_Min0p2_ = true;
    }
    return L1_IsoEG18er_IsoTau24er_dEta_Min0p2_;
}
const bool &Nano::L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2() {
    if (!loaded_L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2_) counter_uncached_L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2_++;
    else counter_cached_L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2_++;
    if (!loaded_L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2_) {
        if (!b_L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2_) throw std::runtime_error("L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2 branch doesn't exist");
        b_L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2_->GetEntry(index);
        loaded_L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2_ = true;
    }
    return L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2_;
}
const bool &Nano::L1_IsoEG20er_IsoTau25er_dEta_Min0p2() {
    if (!loaded_L1_IsoEG20er_IsoTau25er_dEta_Min0p2_) counter_uncached_L1_IsoEG20er_IsoTau25er_dEta_Min0p2_++;
    else counter_cached_L1_IsoEG20er_IsoTau25er_dEta_Min0p2_++;
    if (!loaded_L1_IsoEG20er_IsoTau25er_dEta_Min0p2_) {
        if (!b_L1_IsoEG20er_IsoTau25er_dEta_Min0p2_) throw std::runtime_error("L1_IsoEG20er_IsoTau25er_dEta_Min0p2 branch doesn't exist");
        b_L1_IsoEG20er_IsoTau25er_dEta_Min0p2_->GetEntry(index);
        loaded_L1_IsoEG20er_IsoTau25er_dEta_Min0p2_ = true;
    }
    return L1_IsoEG20er_IsoTau25er_dEta_Min0p2_;
}
const bool &Nano::L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2() {
    if (!loaded_L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2_) counter_uncached_L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2_++;
    else counter_cached_L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2_++;
    if (!loaded_L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2_) {
        if (!b_L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2_) throw std::runtime_error("L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2 branch doesn't exist");
        b_L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2_->GetEntry(index);
        loaded_L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2_ = true;
    }
    return L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2_;
}
const bool &Nano::L1_IsoEG22er_IsoTau26er_dEta_Min0p2() {
    if (!loaded_L1_IsoEG22er_IsoTau26er_dEta_Min0p2_) counter_uncached_L1_IsoEG22er_IsoTau26er_dEta_Min0p2_++;
    else counter_cached_L1_IsoEG22er_IsoTau26er_dEta_Min0p2_++;
    if (!loaded_L1_IsoEG22er_IsoTau26er_dEta_Min0p2_) {
        if (!b_L1_IsoEG22er_IsoTau26er_dEta_Min0p2_) throw std::runtime_error("L1_IsoEG22er_IsoTau26er_dEta_Min0p2 branch doesn't exist");
        b_L1_IsoEG22er_IsoTau26er_dEta_Min0p2_->GetEntry(index);
        loaded_L1_IsoEG22er_IsoTau26er_dEta_Min0p2_ = true;
    }
    return L1_IsoEG22er_IsoTau26er_dEta_Min0p2_;
}
const bool &Nano::L1_IsoEG22er_Tau20er_dEta_Min0p2() {
    if (!loaded_L1_IsoEG22er_Tau20er_dEta_Min0p2_) counter_uncached_L1_IsoEG22er_Tau20er_dEta_Min0p2_++;
    else counter_cached_L1_IsoEG22er_Tau20er_dEta_Min0p2_++;
    if (!loaded_L1_IsoEG22er_Tau20er_dEta_Min0p2_) {
        if (!b_L1_IsoEG22er_Tau20er_dEta_Min0p2_) throw std::runtime_error("L1_IsoEG22er_Tau20er_dEta_Min0p2 branch doesn't exist");
        b_L1_IsoEG22er_Tau20er_dEta_Min0p2_->GetEntry(index);
        loaded_L1_IsoEG22er_Tau20er_dEta_Min0p2_ = true;
    }
    return L1_IsoEG22er_Tau20er_dEta_Min0p2_;
}
const bool &Nano::L1_IsoEG24er2p1_HTT100er() {
    if (!loaded_L1_IsoEG24er2p1_HTT100er_) counter_uncached_L1_IsoEG24er2p1_HTT100er_++;
    else counter_cached_L1_IsoEG24er2p1_HTT100er_++;
    if (!loaded_L1_IsoEG24er2p1_HTT100er_) {
        if (!b_L1_IsoEG24er2p1_HTT100er_) throw std::runtime_error("L1_IsoEG24er2p1_HTT100er branch doesn't exist");
        b_L1_IsoEG24er2p1_HTT100er_->GetEntry(index);
        loaded_L1_IsoEG24er2p1_HTT100er_ = true;
    }
    return L1_IsoEG24er2p1_HTT100er_;
}
const bool &Nano::L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3() {
    if (!loaded_L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3_) counter_uncached_L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3_++;
    else counter_cached_L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3_++;
    if (!loaded_L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3_) {
        if (!b_L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3_) throw std::runtime_error("L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3 branch doesn't exist");
        b_L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3_->GetEntry(index);
        loaded_L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3_ = true;
    }
    return L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3_;
}
const bool &Nano::L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0() {
    if (!loaded_L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_) counter_uncached_L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_++;
    else counter_cached_L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_++;
    if (!loaded_L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_) {
        if (!b_L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_) throw std::runtime_error("L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0 branch doesn't exist");
        b_L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_->GetEntry(index);
        loaded_L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_ = true;
    }
    return L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_;
}
const bool &Nano::L1_IsoEG26er2p1_HTT100er() {
    if (!loaded_L1_IsoEG26er2p1_HTT100er_) counter_uncached_L1_IsoEG26er2p1_HTT100er_++;
    else counter_cached_L1_IsoEG26er2p1_HTT100er_++;
    if (!loaded_L1_IsoEG26er2p1_HTT100er_) {
        if (!b_L1_IsoEG26er2p1_HTT100er_) throw std::runtime_error("L1_IsoEG26er2p1_HTT100er branch doesn't exist");
        b_L1_IsoEG26er2p1_HTT100er_->GetEntry(index);
        loaded_L1_IsoEG26er2p1_HTT100er_ = true;
    }
    return L1_IsoEG26er2p1_HTT100er_;
}
const bool &Nano::L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3() {
    if (!loaded_L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3_) counter_uncached_L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3_++;
    else counter_cached_L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3_++;
    if (!loaded_L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3_) {
        if (!b_L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3_) throw std::runtime_error("L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3 branch doesn't exist");
        b_L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3_->GetEntry(index);
        loaded_L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3_ = true;
    }
    return L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3_;
}
const bool &Nano::L1_IsoEG28er2p1_HTT100er() {
    if (!loaded_L1_IsoEG28er2p1_HTT100er_) counter_uncached_L1_IsoEG28er2p1_HTT100er_++;
    else counter_cached_L1_IsoEG28er2p1_HTT100er_++;
    if (!loaded_L1_IsoEG28er2p1_HTT100er_) {
        if (!b_L1_IsoEG28er2p1_HTT100er_) throw std::runtime_error("L1_IsoEG28er2p1_HTT100er branch doesn't exist");
        b_L1_IsoEG28er2p1_HTT100er_->GetEntry(index);
        loaded_L1_IsoEG28er2p1_HTT100er_ = true;
    }
    return L1_IsoEG28er2p1_HTT100er_;
}
const bool &Nano::L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3() {
    if (!loaded_L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3_) counter_uncached_L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3_++;
    else counter_cached_L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3_++;
    if (!loaded_L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3_) {
        if (!b_L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3_) throw std::runtime_error("L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3 branch doesn't exist");
        b_L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3_->GetEntry(index);
        loaded_L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3_ = true;
    }
    return L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3_;
}
const bool &Nano::L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3() {
    if (!loaded_L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3_) counter_uncached_L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3_++;
    else counter_cached_L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3_++;
    if (!loaded_L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3_) {
        if (!b_L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3_) throw std::runtime_error("L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3 branch doesn't exist");
        b_L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3_->GetEntry(index);
        loaded_L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3_ = true;
    }
    return L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3_;
}
const bool &Nano::L1_IsoEG32er2p5_Mt40() {
    if (!loaded_L1_IsoEG32er2p5_Mt40_) counter_uncached_L1_IsoEG32er2p5_Mt40_++;
    else counter_cached_L1_IsoEG32er2p5_Mt40_++;
    if (!loaded_L1_IsoEG32er2p5_Mt40_) {
        if (!b_L1_IsoEG32er2p5_Mt40_) throw std::runtime_error("L1_IsoEG32er2p5_Mt40 branch doesn't exist");
        b_L1_IsoEG32er2p5_Mt40_->GetEntry(index);
        loaded_L1_IsoEG32er2p5_Mt40_ = true;
    }
    return L1_IsoEG32er2p5_Mt40_;
}
const bool &Nano::L1_IsoEG32er2p5_Mt44() {
    if (!loaded_L1_IsoEG32er2p5_Mt44_) counter_uncached_L1_IsoEG32er2p5_Mt44_++;
    else counter_cached_L1_IsoEG32er2p5_Mt44_++;
    if (!loaded_L1_IsoEG32er2p5_Mt44_) {
        if (!b_L1_IsoEG32er2p5_Mt44_) throw std::runtime_error("L1_IsoEG32er2p5_Mt44 branch doesn't exist");
        b_L1_IsoEG32er2p5_Mt44_->GetEntry(index);
        loaded_L1_IsoEG32er2p5_Mt44_ = true;
    }
    return L1_IsoEG32er2p5_Mt44_;
}
const bool &Nano::L1_IsoEG32er2p5_Mt48() {
    if (!loaded_L1_IsoEG32er2p5_Mt48_) counter_uncached_L1_IsoEG32er2p5_Mt48_++;
    else counter_cached_L1_IsoEG32er2p5_Mt48_++;
    if (!loaded_L1_IsoEG32er2p5_Mt48_) {
        if (!b_L1_IsoEG32er2p5_Mt48_) throw std::runtime_error("L1_IsoEG32er2p5_Mt48 branch doesn't exist");
        b_L1_IsoEG32er2p5_Mt48_->GetEntry(index);
        loaded_L1_IsoEG32er2p5_Mt48_ = true;
    }
    return L1_IsoEG32er2p5_Mt48_;
}
const bool &Nano::L1_IsoEG33_Mt40() {
    if (!loaded_L1_IsoEG33_Mt40_) counter_uncached_L1_IsoEG33_Mt40_++;
    else counter_cached_L1_IsoEG33_Mt40_++;
    if (!loaded_L1_IsoEG33_Mt40_) {
        if (!b_L1_IsoEG33_Mt40_) throw std::runtime_error("L1_IsoEG33_Mt40 branch doesn't exist");
        b_L1_IsoEG33_Mt40_->GetEntry(index);
        loaded_L1_IsoEG33_Mt40_ = true;
    }
    return L1_IsoEG33_Mt40_;
}
const bool &Nano::L1_IsoEG33_Mt44() {
    if (!loaded_L1_IsoEG33_Mt44_) counter_uncached_L1_IsoEG33_Mt44_++;
    else counter_cached_L1_IsoEG33_Mt44_++;
    if (!loaded_L1_IsoEG33_Mt44_) {
        if (!b_L1_IsoEG33_Mt44_) throw std::runtime_error("L1_IsoEG33_Mt44 branch doesn't exist");
        b_L1_IsoEG33_Mt44_->GetEntry(index);
        loaded_L1_IsoEG33_Mt44_ = true;
    }
    return L1_IsoEG33_Mt44_;
}
const bool &Nano::L1_IsoEG33_Mt48() {
    if (!loaded_L1_IsoEG33_Mt48_) counter_uncached_L1_IsoEG33_Mt48_++;
    else counter_cached_L1_IsoEG33_Mt48_++;
    if (!loaded_L1_IsoEG33_Mt48_) {
        if (!b_L1_IsoEG33_Mt48_) throw std::runtime_error("L1_IsoEG33_Mt48 branch doesn't exist");
        b_L1_IsoEG33_Mt48_->GetEntry(index);
        loaded_L1_IsoEG33_Mt48_ = true;
    }
    return L1_IsoEG33_Mt48_;
}
const bool &Nano::L1_IsoTau40er2p1_ETMHF100() {
    if (!loaded_L1_IsoTau40er2p1_ETMHF100_) counter_uncached_L1_IsoTau40er2p1_ETMHF100_++;
    else counter_cached_L1_IsoTau40er2p1_ETMHF100_++;
    if (!loaded_L1_IsoTau40er2p1_ETMHF100_) {
        if (!b_L1_IsoTau40er2p1_ETMHF100_) throw std::runtime_error("L1_IsoTau40er2p1_ETMHF100 branch doesn't exist");
        b_L1_IsoTau40er2p1_ETMHF100_->GetEntry(index);
        loaded_L1_IsoTau40er2p1_ETMHF100_ = true;
    }
    return L1_IsoTau40er2p1_ETMHF100_;
}
const bool &Nano::L1_IsoTau40er2p1_ETMHF110() {
    if (!loaded_L1_IsoTau40er2p1_ETMHF110_) counter_uncached_L1_IsoTau40er2p1_ETMHF110_++;
    else counter_cached_L1_IsoTau40er2p1_ETMHF110_++;
    if (!loaded_L1_IsoTau40er2p1_ETMHF110_) {
        if (!b_L1_IsoTau40er2p1_ETMHF110_) throw std::runtime_error("L1_IsoTau40er2p1_ETMHF110 branch doesn't exist");
        b_L1_IsoTau40er2p1_ETMHF110_->GetEntry(index);
        loaded_L1_IsoTau40er2p1_ETMHF110_ = true;
    }
    return L1_IsoTau40er2p1_ETMHF110_;
}
const bool &Nano::L1_IsoTau40er2p1_ETMHF120() {
    if (!loaded_L1_IsoTau40er2p1_ETMHF120_) counter_uncached_L1_IsoTau40er2p1_ETMHF120_++;
    else counter_cached_L1_IsoTau40er2p1_ETMHF120_++;
    if (!loaded_L1_IsoTau40er2p1_ETMHF120_) {
        if (!b_L1_IsoTau40er2p1_ETMHF120_) throw std::runtime_error("L1_IsoTau40er2p1_ETMHF120 branch doesn't exist");
        b_L1_IsoTau40er2p1_ETMHF120_->GetEntry(index);
        loaded_L1_IsoTau40er2p1_ETMHF120_ = true;
    }
    return L1_IsoTau40er2p1_ETMHF120_;
}
const bool &Nano::L1_IsoTau40er2p1_ETMHF80() {
    if (!loaded_L1_IsoTau40er2p1_ETMHF80_) counter_uncached_L1_IsoTau40er2p1_ETMHF80_++;
    else counter_cached_L1_IsoTau40er2p1_ETMHF80_++;
    if (!loaded_L1_IsoTau40er2p1_ETMHF80_) {
        if (!b_L1_IsoTau40er2p1_ETMHF80_) throw std::runtime_error("L1_IsoTau40er2p1_ETMHF80 branch doesn't exist");
        b_L1_IsoTau40er2p1_ETMHF80_->GetEntry(index);
        loaded_L1_IsoTau40er2p1_ETMHF80_ = true;
    }
    return L1_IsoTau40er2p1_ETMHF80_;
}
const bool &Nano::L1_IsoTau40er2p1_ETMHF90() {
    if (!loaded_L1_IsoTau40er2p1_ETMHF90_) counter_uncached_L1_IsoTau40er2p1_ETMHF90_++;
    else counter_cached_L1_IsoTau40er2p1_ETMHF90_++;
    if (!loaded_L1_IsoTau40er2p1_ETMHF90_) {
        if (!b_L1_IsoTau40er2p1_ETMHF90_) throw std::runtime_error("L1_IsoTau40er2p1_ETMHF90 branch doesn't exist");
        b_L1_IsoTau40er2p1_ETMHF90_->GetEntry(index);
        loaded_L1_IsoTau40er2p1_ETMHF90_ = true;
    }
    return L1_IsoTau40er2p1_ETMHF90_;
}
const bool &Nano::L1_IsoTau40er_ETM100() {
    if (!loaded_L1_IsoTau40er_ETM100_) counter_uncached_L1_IsoTau40er_ETM100_++;
    else counter_cached_L1_IsoTau40er_ETM100_++;
    if (!loaded_L1_IsoTau40er_ETM100_) {
        if (!b_L1_IsoTau40er_ETM100_) throw std::runtime_error("L1_IsoTau40er_ETM100 branch doesn't exist");
        b_L1_IsoTau40er_ETM100_->GetEntry(index);
        loaded_L1_IsoTau40er_ETM100_ = true;
    }
    return L1_IsoTau40er_ETM100_;
}
const bool &Nano::L1_IsoTau40er_ETM105() {
    if (!loaded_L1_IsoTau40er_ETM105_) counter_uncached_L1_IsoTau40er_ETM105_++;
    else counter_cached_L1_IsoTau40er_ETM105_++;
    if (!loaded_L1_IsoTau40er_ETM105_) {
        if (!b_L1_IsoTau40er_ETM105_) throw std::runtime_error("L1_IsoTau40er_ETM105 branch doesn't exist");
        b_L1_IsoTau40er_ETM105_->GetEntry(index);
        loaded_L1_IsoTau40er_ETM105_ = true;
    }
    return L1_IsoTau40er_ETM105_;
}
const bool &Nano::L1_IsoTau40er_ETM110() {
    if (!loaded_L1_IsoTau40er_ETM110_) counter_uncached_L1_IsoTau40er_ETM110_++;
    else counter_cached_L1_IsoTau40er_ETM110_++;
    if (!loaded_L1_IsoTau40er_ETM110_) {
        if (!b_L1_IsoTau40er_ETM110_) throw std::runtime_error("L1_IsoTau40er_ETM110 branch doesn't exist");
        b_L1_IsoTau40er_ETM110_->GetEntry(index);
        loaded_L1_IsoTau40er_ETM110_ = true;
    }
    return L1_IsoTau40er_ETM110_;
}
const bool &Nano::L1_IsoTau40er_ETM115() {
    if (!loaded_L1_IsoTau40er_ETM115_) counter_uncached_L1_IsoTau40er_ETM115_++;
    else counter_cached_L1_IsoTau40er_ETM115_++;
    if (!loaded_L1_IsoTau40er_ETM115_) {
        if (!b_L1_IsoTau40er_ETM115_) throw std::runtime_error("L1_IsoTau40er_ETM115 branch doesn't exist");
        b_L1_IsoTau40er_ETM115_->GetEntry(index);
        loaded_L1_IsoTau40er_ETM115_ = true;
    }
    return L1_IsoTau40er_ETM115_;
}
const bool &Nano::L1_IsoTau40er_ETM120() {
    if (!loaded_L1_IsoTau40er_ETM120_) counter_uncached_L1_IsoTau40er_ETM120_++;
    else counter_cached_L1_IsoTau40er_ETM120_++;
    if (!loaded_L1_IsoTau40er_ETM120_) {
        if (!b_L1_IsoTau40er_ETM120_) throw std::runtime_error("L1_IsoTau40er_ETM120 branch doesn't exist");
        b_L1_IsoTau40er_ETM120_->GetEntry(index);
        loaded_L1_IsoTau40er_ETM120_ = true;
    }
    return L1_IsoTau40er_ETM120_;
}
const bool &Nano::L1_IsoTau40er_ETM80() {
    if (!loaded_L1_IsoTau40er_ETM80_) counter_uncached_L1_IsoTau40er_ETM80_++;
    else counter_cached_L1_IsoTau40er_ETM80_++;
    if (!loaded_L1_IsoTau40er_ETM80_) {
        if (!b_L1_IsoTau40er_ETM80_) throw std::runtime_error("L1_IsoTau40er_ETM80 branch doesn't exist");
        b_L1_IsoTau40er_ETM80_->GetEntry(index);
        loaded_L1_IsoTau40er_ETM80_ = true;
    }
    return L1_IsoTau40er_ETM80_;
}
const bool &Nano::L1_IsoTau40er_ETM85() {
    if (!loaded_L1_IsoTau40er_ETM85_) counter_uncached_L1_IsoTau40er_ETM85_++;
    else counter_cached_L1_IsoTau40er_ETM85_++;
    if (!loaded_L1_IsoTau40er_ETM85_) {
        if (!b_L1_IsoTau40er_ETM85_) throw std::runtime_error("L1_IsoTau40er_ETM85 branch doesn't exist");
        b_L1_IsoTau40er_ETM85_->GetEntry(index);
        loaded_L1_IsoTau40er_ETM85_ = true;
    }
    return L1_IsoTau40er_ETM85_;
}
const bool &Nano::L1_IsoTau40er_ETM90() {
    if (!loaded_L1_IsoTau40er_ETM90_) counter_uncached_L1_IsoTau40er_ETM90_++;
    else counter_cached_L1_IsoTau40er_ETM90_++;
    if (!loaded_L1_IsoTau40er_ETM90_) {
        if (!b_L1_IsoTau40er_ETM90_) throw std::runtime_error("L1_IsoTau40er_ETM90 branch doesn't exist");
        b_L1_IsoTau40er_ETM90_->GetEntry(index);
        loaded_L1_IsoTau40er_ETM90_ = true;
    }
    return L1_IsoTau40er_ETM90_;
}
const bool &Nano::L1_IsoTau40er_ETM95() {
    if (!loaded_L1_IsoTau40er_ETM95_) counter_uncached_L1_IsoTau40er_ETM95_++;
    else counter_cached_L1_IsoTau40er_ETM95_++;
    if (!loaded_L1_IsoTau40er_ETM95_) {
        if (!b_L1_IsoTau40er_ETM95_) throw std::runtime_error("L1_IsoTau40er_ETM95 branch doesn't exist");
        b_L1_IsoTau40er_ETM95_->GetEntry(index);
        loaded_L1_IsoTau40er_ETM95_ = true;
    }
    return L1_IsoTau40er_ETM95_;
}
const bool &Nano::L1_IsoTau40er_ETMHF100() {
    if (!loaded_L1_IsoTau40er_ETMHF100_) counter_uncached_L1_IsoTau40er_ETMHF100_++;
    else counter_cached_L1_IsoTau40er_ETMHF100_++;
    if (!loaded_L1_IsoTau40er_ETMHF100_) {
        if (!b_L1_IsoTau40er_ETMHF100_) throw std::runtime_error("L1_IsoTau40er_ETMHF100 branch doesn't exist");
        b_L1_IsoTau40er_ETMHF100_->GetEntry(index);
        loaded_L1_IsoTau40er_ETMHF100_ = true;
    }
    return L1_IsoTau40er_ETMHF100_;
}
const bool &Nano::L1_IsoTau40er_ETMHF110() {
    if (!loaded_L1_IsoTau40er_ETMHF110_) counter_uncached_L1_IsoTau40er_ETMHF110_++;
    else counter_cached_L1_IsoTau40er_ETMHF110_++;
    if (!loaded_L1_IsoTau40er_ETMHF110_) {
        if (!b_L1_IsoTau40er_ETMHF110_) throw std::runtime_error("L1_IsoTau40er_ETMHF110 branch doesn't exist");
        b_L1_IsoTau40er_ETMHF110_->GetEntry(index);
        loaded_L1_IsoTau40er_ETMHF110_ = true;
    }
    return L1_IsoTau40er_ETMHF110_;
}
const bool &Nano::L1_IsoTau40er_ETMHF120() {
    if (!loaded_L1_IsoTau40er_ETMHF120_) counter_uncached_L1_IsoTau40er_ETMHF120_++;
    else counter_cached_L1_IsoTau40er_ETMHF120_++;
    if (!loaded_L1_IsoTau40er_ETMHF120_) {
        if (!b_L1_IsoTau40er_ETMHF120_) throw std::runtime_error("L1_IsoTau40er_ETMHF120 branch doesn't exist");
        b_L1_IsoTau40er_ETMHF120_->GetEntry(index);
        loaded_L1_IsoTau40er_ETMHF120_ = true;
    }
    return L1_IsoTau40er_ETMHF120_;
}
const bool &Nano::L1_IsoTau40er_ETMHF80() {
    if (!loaded_L1_IsoTau40er_ETMHF80_) counter_uncached_L1_IsoTau40er_ETMHF80_++;
    else counter_cached_L1_IsoTau40er_ETMHF80_++;
    if (!loaded_L1_IsoTau40er_ETMHF80_) {
        if (!b_L1_IsoTau40er_ETMHF80_) throw std::runtime_error("L1_IsoTau40er_ETMHF80 branch doesn't exist");
        b_L1_IsoTau40er_ETMHF80_->GetEntry(index);
        loaded_L1_IsoTau40er_ETMHF80_ = true;
    }
    return L1_IsoTau40er_ETMHF80_;
}
const bool &Nano::L1_IsoTau40er_ETMHF90() {
    if (!loaded_L1_IsoTau40er_ETMHF90_) counter_uncached_L1_IsoTau40er_ETMHF90_++;
    else counter_cached_L1_IsoTau40er_ETMHF90_++;
    if (!loaded_L1_IsoTau40er_ETMHF90_) {
        if (!b_L1_IsoTau40er_ETMHF90_) throw std::runtime_error("L1_IsoTau40er_ETMHF90 branch doesn't exist");
        b_L1_IsoTau40er_ETMHF90_->GetEntry(index);
        loaded_L1_IsoTau40er_ETMHF90_ = true;
    }
    return L1_IsoTau40er_ETMHF90_;
}
const bool &Nano::L1_IsoTau52er2p1_QuadJet36er2p5() {
    if (!loaded_L1_IsoTau52er2p1_QuadJet36er2p5_) counter_uncached_L1_IsoTau52er2p1_QuadJet36er2p5_++;
    else counter_cached_L1_IsoTau52er2p1_QuadJet36er2p5_++;
    if (!loaded_L1_IsoTau52er2p1_QuadJet36er2p5_) {
        if (!b_L1_IsoTau52er2p1_QuadJet36er2p5_) throw std::runtime_error("L1_IsoTau52er2p1_QuadJet36er2p5 branch doesn't exist");
        b_L1_IsoTau52er2p1_QuadJet36er2p5_->GetEntry(index);
        loaded_L1_IsoTau52er2p1_QuadJet36er2p5_ = true;
    }
    return L1_IsoTau52er2p1_QuadJet36er2p5_;
}
const bool &Nano::L1_IsolatedBunch() {
    if (!loaded_L1_IsolatedBunch_) counter_uncached_L1_IsolatedBunch_++;
    else counter_cached_L1_IsolatedBunch_++;
    if (!loaded_L1_IsolatedBunch_) {
        if (!b_L1_IsolatedBunch_) throw std::runtime_error("L1_IsolatedBunch branch doesn't exist");
        b_L1_IsolatedBunch_->GetEntry(index);
        loaded_L1_IsolatedBunch_ = true;
    }
    return L1_IsolatedBunch_;
}
const bool &Nano::L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0() {
    if (!loaded_L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_) counter_uncached_L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_++;
    else counter_cached_L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_++;
    if (!loaded_L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_) {
        if (!b_L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_) throw std::runtime_error("L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0 branch doesn't exist");
        b_L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_->GetEntry(index);
        loaded_L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_ = true;
    }
    return L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_;
}
const bool &Nano::L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0() {
    if (!loaded_L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_) counter_uncached_L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_++;
    else counter_cached_L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_++;
    if (!loaded_L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_) {
        if (!b_L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_) throw std::runtime_error("L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0 branch doesn't exist");
        b_L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_->GetEntry(index);
        loaded_L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_ = true;
    }
    return L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0_;
}
const bool &Nano::L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0() {
    if (!loaded_L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_) counter_uncached_L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_++;
    else counter_cached_L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_++;
    if (!loaded_L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_) {
        if (!b_L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_) throw std::runtime_error("L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0 branch doesn't exist");
        b_L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_->GetEntry(index);
        loaded_L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_ = true;
    }
    return L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_;
}
const bool &Nano::L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0() {
    if (!loaded_L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_) counter_uncached_L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_++;
    else counter_cached_L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_++;
    if (!loaded_L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_) {
        if (!b_L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_) throw std::runtime_error("L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0 branch doesn't exist");
        b_L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_->GetEntry(index);
        loaded_L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_ = true;
    }
    return L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0_;
}
const bool &Nano::L1_LastBunchInTrain() {
    if (!loaded_L1_LastBunchInTrain_) counter_uncached_L1_LastBunchInTrain_++;
    else counter_cached_L1_LastBunchInTrain_++;
    if (!loaded_L1_LastBunchInTrain_) {
        if (!b_L1_LastBunchInTrain_) throw std::runtime_error("L1_LastBunchInTrain branch doesn't exist");
        b_L1_LastBunchInTrain_->GetEntry(index);
        loaded_L1_LastBunchInTrain_ = true;
    }
    return L1_LastBunchInTrain_;
}
const bool &Nano::L1_LastCollisionInTrain() {
    if (!loaded_L1_LastCollisionInTrain_) counter_uncached_L1_LastCollisionInTrain_++;
    else counter_cached_L1_LastCollisionInTrain_++;
    if (!loaded_L1_LastCollisionInTrain_) {
        if (!b_L1_LastCollisionInTrain_) throw std::runtime_error("L1_LastCollisionInTrain branch doesn't exist");
        b_L1_LastCollisionInTrain_->GetEntry(index);
        loaded_L1_LastCollisionInTrain_ = true;
    }
    return L1_LastCollisionInTrain_;
}
const bool &Nano::L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3() {
    if (!loaded_L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3_) counter_uncached_L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3_++;
    else counter_cached_L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3_++;
    if (!loaded_L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3_) {
        if (!b_L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3_) throw std::runtime_error("L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3 branch doesn't exist");
        b_L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3_->GetEntry(index);
        loaded_L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3_ = true;
    }
    return L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3_;
}
const bool &Nano::L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3() {
    if (!loaded_L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3_) counter_uncached_L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3_++;
    else counter_cached_L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3_++;
    if (!loaded_L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3_) {
        if (!b_L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3_) throw std::runtime_error("L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3 branch doesn't exist");
        b_L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3_->GetEntry(index);
        loaded_L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3_ = true;
    }
    return L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3_;
}
const bool &Nano::L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3() {
    if (!loaded_L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3_) counter_uncached_L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3_++;
    else counter_cached_L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3_++;
    if (!loaded_L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3_) {
        if (!b_L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3_) throw std::runtime_error("L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3 branch doesn't exist");
        b_L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3_->GetEntry(index);
        loaded_L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3_ = true;
    }
    return L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3_;
}
const bool &Nano::L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3() {
    if (!loaded_L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3_) counter_uncached_L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3_++;
    else counter_cached_L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3_++;
    if (!loaded_L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3_) {
        if (!b_L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3_) throw std::runtime_error("L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3 branch doesn't exist");
        b_L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3_->GetEntry(index);
        loaded_L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3_ = true;
    }
    return L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3_;
}
const bool &Nano::L1_LooseIsoEG24er2p1_HTT100er() {
    if (!loaded_L1_LooseIsoEG24er2p1_HTT100er_) counter_uncached_L1_LooseIsoEG24er2p1_HTT100er_++;
    else counter_cached_L1_LooseIsoEG24er2p1_HTT100er_++;
    if (!loaded_L1_LooseIsoEG24er2p1_HTT100er_) {
        if (!b_L1_LooseIsoEG24er2p1_HTT100er_) throw std::runtime_error("L1_LooseIsoEG24er2p1_HTT100er branch doesn't exist");
        b_L1_LooseIsoEG24er2p1_HTT100er_->GetEntry(index);
        loaded_L1_LooseIsoEG24er2p1_HTT100er_ = true;
    }
    return L1_LooseIsoEG24er2p1_HTT100er_;
}
const bool &Nano::L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3() {
    if (!loaded_L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3_) counter_uncached_L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3_++;
    else counter_cached_L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3_++;
    if (!loaded_L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3_) {
        if (!b_L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3_) throw std::runtime_error("L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3 branch doesn't exist");
        b_L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3_->GetEntry(index);
        loaded_L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3_ = true;
    }
    return L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3_;
}
const bool &Nano::L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3() {
    if (!loaded_L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3_) counter_uncached_L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3_++;
    else counter_cached_L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3_++;
    if (!loaded_L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3_) {
        if (!b_L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3_) throw std::runtime_error("L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3 branch doesn't exist");
        b_L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3_->GetEntry(index);
        loaded_L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3_ = true;
    }
    return L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3_;
}
const bool &Nano::L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3() {
    if (!loaded_L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3_) counter_uncached_L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3_++;
    else counter_cached_L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3_++;
    if (!loaded_L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3_) {
        if (!b_L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3_) throw std::runtime_error("L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3 branch doesn't exist");
        b_L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3_->GetEntry(index);
        loaded_L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3_ = true;
    }
    return L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3_;
}
const bool &Nano::L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7() {
    if (!loaded_L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7_) counter_uncached_L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7_++;
    else counter_cached_L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7_++;
    if (!loaded_L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7_) {
        if (!b_L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7_) throw std::runtime_error("L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7 branch doesn't exist");
        b_L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7_->GetEntry(index);
        loaded_L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7_ = true;
    }
    return L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7_;
}
const bool &Nano::L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0() {
    if (!loaded_L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_) counter_uncached_L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_++;
    else counter_cached_L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_++;
    if (!loaded_L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_) {
        if (!b_L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_) throw std::runtime_error("L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0 branch doesn't exist");
        b_L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_->GetEntry(index);
        loaded_L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_ = true;
    }
    return L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0_;
}
const bool &Nano::L1_LooseIsoEG26er2p1_HTT100er() {
    if (!loaded_L1_LooseIsoEG26er2p1_HTT100er_) counter_uncached_L1_LooseIsoEG26er2p1_HTT100er_++;
    else counter_cached_L1_LooseIsoEG26er2p1_HTT100er_++;
    if (!loaded_L1_LooseIsoEG26er2p1_HTT100er_) {
        if (!b_L1_LooseIsoEG26er2p1_HTT100er_) throw std::runtime_error("L1_LooseIsoEG26er2p1_HTT100er branch doesn't exist");
        b_L1_LooseIsoEG26er2p1_HTT100er_->GetEntry(index);
        loaded_L1_LooseIsoEG26er2p1_HTT100er_ = true;
    }
    return L1_LooseIsoEG26er2p1_HTT100er_;
}
const bool &Nano::L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3() {
    if (!loaded_L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3_) counter_uncached_L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3_++;
    else counter_cached_L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3_++;
    if (!loaded_L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3_) {
        if (!b_L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3_) throw std::runtime_error("L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3 branch doesn't exist");
        b_L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3_->GetEntry(index);
        loaded_L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3_ = true;
    }
    return L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3_;
}
const bool &Nano::L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3() {
    if (!loaded_L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3_) counter_uncached_L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3_++;
    else counter_cached_L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3_++;
    if (!loaded_L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3_) {
        if (!b_L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3_) throw std::runtime_error("L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3 branch doesn't exist");
        b_L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3_->GetEntry(index);
        loaded_L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3_ = true;
    }
    return L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3_;
}
const bool &Nano::L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3() {
    if (!loaded_L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3_) counter_uncached_L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3_++;
    else counter_cached_L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3_++;
    if (!loaded_L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3_) {
        if (!b_L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3_) throw std::runtime_error("L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3 branch doesn't exist");
        b_L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3_->GetEntry(index);
        loaded_L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3_ = true;
    }
    return L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3_;
}
const bool &Nano::L1_LooseIsoEG28er2p1_HTT100er() {
    if (!loaded_L1_LooseIsoEG28er2p1_HTT100er_) counter_uncached_L1_LooseIsoEG28er2p1_HTT100er_++;
    else counter_cached_L1_LooseIsoEG28er2p1_HTT100er_++;
    if (!loaded_L1_LooseIsoEG28er2p1_HTT100er_) {
        if (!b_L1_LooseIsoEG28er2p1_HTT100er_) throw std::runtime_error("L1_LooseIsoEG28er2p1_HTT100er branch doesn't exist");
        b_L1_LooseIsoEG28er2p1_HTT100er_->GetEntry(index);
        loaded_L1_LooseIsoEG28er2p1_HTT100er_ = true;
    }
    return L1_LooseIsoEG28er2p1_HTT100er_;
}
const bool &Nano::L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3() {
    if (!loaded_L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3_) counter_uncached_L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3_++;
    else counter_cached_L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3_++;
    if (!loaded_L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3_) {
        if (!b_L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3_) throw std::runtime_error("L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3 branch doesn't exist");
        b_L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3_->GetEntry(index);
        loaded_L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3_ = true;
    }
    return L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3_;
}
const bool &Nano::L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3() {
    if (!loaded_L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3_) counter_uncached_L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3_++;
    else counter_cached_L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3_++;
    if (!loaded_L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3_) {
        if (!b_L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3_) throw std::runtime_error("L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3 branch doesn't exist");
        b_L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3_->GetEntry(index);
        loaded_L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3_ = true;
    }
    return L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3_;
}
const bool &Nano::L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3() {
    if (!loaded_L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3_) counter_uncached_L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3_++;
    else counter_cached_L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3_++;
    if (!loaded_L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3_) {
        if (!b_L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3_) throw std::runtime_error("L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3 branch doesn't exist");
        b_L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3_->GetEntry(index);
        loaded_L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3_ = true;
    }
    return L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3_;
}
const bool &Nano::L1_LooseIsoEG30er2p1_HTT100er() {
    if (!loaded_L1_LooseIsoEG30er2p1_HTT100er_) counter_uncached_L1_LooseIsoEG30er2p1_HTT100er_++;
    else counter_cached_L1_LooseIsoEG30er2p1_HTT100er_++;
    if (!loaded_L1_LooseIsoEG30er2p1_HTT100er_) {
        if (!b_L1_LooseIsoEG30er2p1_HTT100er_) throw std::runtime_error("L1_LooseIsoEG30er2p1_HTT100er branch doesn't exist");
        b_L1_LooseIsoEG30er2p1_HTT100er_->GetEntry(index);
        loaded_L1_LooseIsoEG30er2p1_HTT100er_ = true;
    }
    return L1_LooseIsoEG30er2p1_HTT100er_;
}
const bool &Nano::L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3() {
    if (!loaded_L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3_) counter_uncached_L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3_++;
    else counter_cached_L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3_++;
    if (!loaded_L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3_) {
        if (!b_L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3_) throw std::runtime_error("L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3 branch doesn't exist");
        b_L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3_->GetEntry(index);
        loaded_L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3_ = true;
    }
    return L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3_;
}
const bool &Nano::L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3() {
    if (!loaded_L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3_) counter_uncached_L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3_++;
    else counter_cached_L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3_++;
    if (!loaded_L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3_) {
        if (!b_L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3_) throw std::runtime_error("L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3 branch doesn't exist");
        b_L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3_->GetEntry(index);
        loaded_L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3_ = true;
    }
    return L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3_;
}
const bool &Nano::L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3() {
    if (!loaded_L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3_) counter_uncached_L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3_++;
    else counter_cached_L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3_++;
    if (!loaded_L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3_) {
        if (!b_L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3_) throw std::runtime_error("L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3 branch doesn't exist");
        b_L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3_->GetEntry(index);
        loaded_L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3_ = true;
    }
    return L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3_;
}
const bool &Nano::L1_MU20_EG15() {
    if (!loaded_L1_MU20_EG15_) counter_uncached_L1_MU20_EG15_++;
    else counter_cached_L1_MU20_EG15_++;
    if (!loaded_L1_MU20_EG15_) {
        if (!b_L1_MU20_EG15_) throw std::runtime_error("L1_MU20_EG15 branch doesn't exist");
        b_L1_MU20_EG15_->GetEntry(index);
        loaded_L1_MU20_EG15_ = true;
    }
    return L1_MU20_EG15_;
}
const bool &Nano::L1_MinimumBiasHF0() {
    if (!loaded_L1_MinimumBiasHF0_) counter_uncached_L1_MinimumBiasHF0_++;
    else counter_cached_L1_MinimumBiasHF0_++;
    if (!loaded_L1_MinimumBiasHF0_) {
        if (!b_L1_MinimumBiasHF0_) throw std::runtime_error("L1_MinimumBiasHF0 branch doesn't exist");
        b_L1_MinimumBiasHF0_->GetEntry(index);
        loaded_L1_MinimumBiasHF0_ = true;
    }
    return L1_MinimumBiasHF0_;
}
const bool &Nano::L1_MinimumBiasHF0_AND() {
    if (!loaded_L1_MinimumBiasHF0_AND_) counter_uncached_L1_MinimumBiasHF0_AND_++;
    else counter_cached_L1_MinimumBiasHF0_AND_++;
    if (!loaded_L1_MinimumBiasHF0_AND_) {
        if (!b_L1_MinimumBiasHF0_AND_) throw std::runtime_error("L1_MinimumBiasHF0_AND branch doesn't exist");
        b_L1_MinimumBiasHF0_AND_->GetEntry(index);
        loaded_L1_MinimumBiasHF0_AND_ = true;
    }
    return L1_MinimumBiasHF0_AND_;
}
const bool &Nano::L1_MinimumBiasHF0_AND_BptxAND() {
    if (!loaded_L1_MinimumBiasHF0_AND_BptxAND_) counter_uncached_L1_MinimumBiasHF0_AND_BptxAND_++;
    else counter_cached_L1_MinimumBiasHF0_AND_BptxAND_++;
    if (!loaded_L1_MinimumBiasHF0_AND_BptxAND_) {
        if (!b_L1_MinimumBiasHF0_AND_BptxAND_) throw std::runtime_error("L1_MinimumBiasHF0_AND_BptxAND branch doesn't exist");
        b_L1_MinimumBiasHF0_AND_BptxAND_->GetEntry(index);
        loaded_L1_MinimumBiasHF0_AND_BptxAND_ = true;
    }
    return L1_MinimumBiasHF0_AND_BptxAND_;
}
const bool &Nano::L1_MinimumBiasHF0_OR() {
    if (!loaded_L1_MinimumBiasHF0_OR_) counter_uncached_L1_MinimumBiasHF0_OR_++;
    else counter_cached_L1_MinimumBiasHF0_OR_++;
    if (!loaded_L1_MinimumBiasHF0_OR_) {
        if (!b_L1_MinimumBiasHF0_OR_) throw std::runtime_error("L1_MinimumBiasHF0_OR branch doesn't exist");
        b_L1_MinimumBiasHF0_OR_->GetEntry(index);
        loaded_L1_MinimumBiasHF0_OR_ = true;
    }
    return L1_MinimumBiasHF0_OR_;
}
const bool &Nano::L1_MinimumBiasHF0_OR_BptxAND() {
    if (!loaded_L1_MinimumBiasHF0_OR_BptxAND_) counter_uncached_L1_MinimumBiasHF0_OR_BptxAND_++;
    else counter_cached_L1_MinimumBiasHF0_OR_BptxAND_++;
    if (!loaded_L1_MinimumBiasHF0_OR_BptxAND_) {
        if (!b_L1_MinimumBiasHF0_OR_BptxAND_) throw std::runtime_error("L1_MinimumBiasHF0_OR_BptxAND branch doesn't exist");
        b_L1_MinimumBiasHF0_OR_BptxAND_->GetEntry(index);
        loaded_L1_MinimumBiasHF0_OR_BptxAND_ = true;
    }
    return L1_MinimumBiasHF0_OR_BptxAND_;
}
const bool &Nano::L1_MinimumBiasHF1_AND() {
    if (!loaded_L1_MinimumBiasHF1_AND_) counter_uncached_L1_MinimumBiasHF1_AND_++;
    else counter_cached_L1_MinimumBiasHF1_AND_++;
    if (!loaded_L1_MinimumBiasHF1_AND_) {
        if (!b_L1_MinimumBiasHF1_AND_) throw std::runtime_error("L1_MinimumBiasHF1_AND branch doesn't exist");
        b_L1_MinimumBiasHF1_AND_->GetEntry(index);
        loaded_L1_MinimumBiasHF1_AND_ = true;
    }
    return L1_MinimumBiasHF1_AND_;
}
const bool &Nano::L1_MinimumBiasHF1_AND_BptxAND() {
    if (!loaded_L1_MinimumBiasHF1_AND_BptxAND_) counter_uncached_L1_MinimumBiasHF1_AND_BptxAND_++;
    else counter_cached_L1_MinimumBiasHF1_AND_BptxAND_++;
    if (!loaded_L1_MinimumBiasHF1_AND_BptxAND_) {
        if (!b_L1_MinimumBiasHF1_AND_BptxAND_) throw std::runtime_error("L1_MinimumBiasHF1_AND_BptxAND branch doesn't exist");
        b_L1_MinimumBiasHF1_AND_BptxAND_->GetEntry(index);
        loaded_L1_MinimumBiasHF1_AND_BptxAND_ = true;
    }
    return L1_MinimumBiasHF1_AND_BptxAND_;
}
const bool &Nano::L1_MinimumBiasHF1_OR() {
    if (!loaded_L1_MinimumBiasHF1_OR_) counter_uncached_L1_MinimumBiasHF1_OR_++;
    else counter_cached_L1_MinimumBiasHF1_OR_++;
    if (!loaded_L1_MinimumBiasHF1_OR_) {
        if (!b_L1_MinimumBiasHF1_OR_) throw std::runtime_error("L1_MinimumBiasHF1_OR branch doesn't exist");
        b_L1_MinimumBiasHF1_OR_->GetEntry(index);
        loaded_L1_MinimumBiasHF1_OR_ = true;
    }
    return L1_MinimumBiasHF1_OR_;
}
const bool &Nano::L1_MinimumBiasHF1_OR_BptxAND() {
    if (!loaded_L1_MinimumBiasHF1_OR_BptxAND_) counter_uncached_L1_MinimumBiasHF1_OR_BptxAND_++;
    else counter_cached_L1_MinimumBiasHF1_OR_BptxAND_++;
    if (!loaded_L1_MinimumBiasHF1_OR_BptxAND_) {
        if (!b_L1_MinimumBiasHF1_OR_BptxAND_) throw std::runtime_error("L1_MinimumBiasHF1_OR_BptxAND branch doesn't exist");
        b_L1_MinimumBiasHF1_OR_BptxAND_->GetEntry(index);
        loaded_L1_MinimumBiasHF1_OR_BptxAND_ = true;
    }
    return L1_MinimumBiasHF1_OR_BptxAND_;
}
const bool &Nano::L1_Mu0er_ETM40() {
    if (!loaded_L1_Mu0er_ETM40_) counter_uncached_L1_Mu0er_ETM40_++;
    else counter_cached_L1_Mu0er_ETM40_++;
    if (!loaded_L1_Mu0er_ETM40_) {
        if (!b_L1_Mu0er_ETM40_) throw std::runtime_error("L1_Mu0er_ETM40 branch doesn't exist");
        b_L1_Mu0er_ETM40_->GetEntry(index);
        loaded_L1_Mu0er_ETM40_ = true;
    }
    return L1_Mu0er_ETM40_;
}
const bool &Nano::L1_Mu0er_ETM55() {
    if (!loaded_L1_Mu0er_ETM55_) counter_uncached_L1_Mu0er_ETM55_++;
    else counter_cached_L1_Mu0er_ETM55_++;
    if (!loaded_L1_Mu0er_ETM55_) {
        if (!b_L1_Mu0er_ETM55_) throw std::runtime_error("L1_Mu0er_ETM55 branch doesn't exist");
        b_L1_Mu0er_ETM55_->GetEntry(index);
        loaded_L1_Mu0er_ETM55_ = true;
    }
    return L1_Mu0er_ETM55_;
}
const bool &Nano::L1_Mu10er2p1_ETM30() {
    if (!loaded_L1_Mu10er2p1_ETM30_) counter_uncached_L1_Mu10er2p1_ETM30_++;
    else counter_cached_L1_Mu10er2p1_ETM30_++;
    if (!loaded_L1_Mu10er2p1_ETM30_) {
        if (!b_L1_Mu10er2p1_ETM30_) throw std::runtime_error("L1_Mu10er2p1_ETM30 branch doesn't exist");
        b_L1_Mu10er2p1_ETM30_->GetEntry(index);
        loaded_L1_Mu10er2p1_ETM30_ = true;
    }
    return L1_Mu10er2p1_ETM30_;
}
const bool &Nano::L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6() {
    if (!loaded_L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6_) counter_uncached_L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6_++;
    else counter_cached_L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6_++;
    if (!loaded_L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6_) {
        if (!b_L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6_) throw std::runtime_error("L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6 branch doesn't exist");
        b_L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6_->GetEntry(index);
        loaded_L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6_ = true;
    }
    return L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6_;
}
const bool &Nano::L1_Mu10er_ETM30() {
    if (!loaded_L1_Mu10er_ETM30_) counter_uncached_L1_Mu10er_ETM30_++;
    else counter_cached_L1_Mu10er_ETM30_++;
    if (!loaded_L1_Mu10er_ETM30_) {
        if (!b_L1_Mu10er_ETM30_) throw std::runtime_error("L1_Mu10er_ETM30 branch doesn't exist");
        b_L1_Mu10er_ETM30_->GetEntry(index);
        loaded_L1_Mu10er_ETM30_ = true;
    }
    return L1_Mu10er_ETM30_;
}
const bool &Nano::L1_Mu10er_ETM50() {
    if (!loaded_L1_Mu10er_ETM50_) counter_uncached_L1_Mu10er_ETM50_++;
    else counter_cached_L1_Mu10er_ETM50_++;
    if (!loaded_L1_Mu10er_ETM50_) {
        if (!b_L1_Mu10er_ETM50_) throw std::runtime_error("L1_Mu10er_ETM50 branch doesn't exist");
        b_L1_Mu10er_ETM50_->GetEntry(index);
        loaded_L1_Mu10er_ETM50_ = true;
    }
    return L1_Mu10er_ETM50_;
}
const bool &Nano::L1_Mu12_EG10() {
    if (!loaded_L1_Mu12_EG10_) counter_uncached_L1_Mu12_EG10_++;
    else counter_cached_L1_Mu12_EG10_++;
    if (!loaded_L1_Mu12_EG10_) {
        if (!b_L1_Mu12_EG10_) throw std::runtime_error("L1_Mu12_EG10 branch doesn't exist");
        b_L1_Mu12_EG10_->GetEntry(index);
        loaded_L1_Mu12_EG10_ = true;
    }
    return L1_Mu12_EG10_;
}
const bool &Nano::L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6() {
    if (!loaded_L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6_) counter_uncached_L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6_++;
    else counter_cached_L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6_++;
    if (!loaded_L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6_) {
        if (!b_L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6_) throw std::runtime_error("L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6 branch doesn't exist");
        b_L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6_->GetEntry(index);
        loaded_L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6_ = true;
    }
    return L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6_;
}
const bool &Nano::L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6() {
    if (!loaded_L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6_) counter_uncached_L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6_++;
    else counter_cached_L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6_++;
    if (!loaded_L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6_) {
        if (!b_L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6_) throw std::runtime_error("L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6 branch doesn't exist");
        b_L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6_->GetEntry(index);
        loaded_L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6_ = true;
    }
    return L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6_;
}
const bool &Nano::L1_Mu14er2p1_ETM30() {
    if (!loaded_L1_Mu14er2p1_ETM30_) counter_uncached_L1_Mu14er2p1_ETM30_++;
    else counter_cached_L1_Mu14er2p1_ETM30_++;
    if (!loaded_L1_Mu14er2p1_ETM30_) {
        if (!b_L1_Mu14er2p1_ETM30_) throw std::runtime_error("L1_Mu14er2p1_ETM30 branch doesn't exist");
        b_L1_Mu14er2p1_ETM30_->GetEntry(index);
        loaded_L1_Mu14er2p1_ETM30_ = true;
    }
    return L1_Mu14er2p1_ETM30_;
}
const bool &Nano::L1_Mu14er_ETM30() {
    if (!loaded_L1_Mu14er_ETM30_) counter_uncached_L1_Mu14er_ETM30_++;
    else counter_cached_L1_Mu14er_ETM30_++;
    if (!loaded_L1_Mu14er_ETM30_) {
        if (!b_L1_Mu14er_ETM30_) throw std::runtime_error("L1_Mu14er_ETM30 branch doesn't exist");
        b_L1_Mu14er_ETM30_->GetEntry(index);
        loaded_L1_Mu14er_ETM30_ = true;
    }
    return L1_Mu14er_ETM30_;
}
const bool &Nano::L1_Mu15_HTT100er() {
    if (!loaded_L1_Mu15_HTT100er_) counter_uncached_L1_Mu15_HTT100er_++;
    else counter_cached_L1_Mu15_HTT100er_++;
    if (!loaded_L1_Mu15_HTT100er_) {
        if (!b_L1_Mu15_HTT100er_) throw std::runtime_error("L1_Mu15_HTT100er branch doesn't exist");
        b_L1_Mu15_HTT100er_->GetEntry(index);
        loaded_L1_Mu15_HTT100er_ = true;
    }
    return L1_Mu15_HTT100er_;
}
const bool &Nano::L1_Mu16er2p1_Tau20er2p1() {
    if (!loaded_L1_Mu16er2p1_Tau20er2p1_) counter_uncached_L1_Mu16er2p1_Tau20er2p1_++;
    else counter_cached_L1_Mu16er2p1_Tau20er2p1_++;
    if (!loaded_L1_Mu16er2p1_Tau20er2p1_) {
        if (!b_L1_Mu16er2p1_Tau20er2p1_) throw std::runtime_error("L1_Mu16er2p1_Tau20er2p1 branch doesn't exist");
        b_L1_Mu16er2p1_Tau20er2p1_->GetEntry(index);
        loaded_L1_Mu16er2p1_Tau20er2p1_ = true;
    }
    return L1_Mu16er2p1_Tau20er2p1_;
}
const bool &Nano::L1_Mu16er2p1_Tau24er2p1() {
    if (!loaded_L1_Mu16er2p1_Tau24er2p1_) counter_uncached_L1_Mu16er2p1_Tau24er2p1_++;
    else counter_cached_L1_Mu16er2p1_Tau24er2p1_++;
    if (!loaded_L1_Mu16er2p1_Tau24er2p1_) {
        if (!b_L1_Mu16er2p1_Tau24er2p1_) throw std::runtime_error("L1_Mu16er2p1_Tau24er2p1 branch doesn't exist");
        b_L1_Mu16er2p1_Tau24er2p1_->GetEntry(index);
        loaded_L1_Mu16er2p1_Tau24er2p1_ = true;
    }
    return L1_Mu16er2p1_Tau24er2p1_;
}
const bool &Nano::L1_Mu16er_Tau20er() {
    if (!loaded_L1_Mu16er_Tau20er_) counter_uncached_L1_Mu16er_Tau20er_++;
    else counter_cached_L1_Mu16er_Tau20er_++;
    if (!loaded_L1_Mu16er_Tau20er_) {
        if (!b_L1_Mu16er_Tau20er_) throw std::runtime_error("L1_Mu16er_Tau20er branch doesn't exist");
        b_L1_Mu16er_Tau20er_->GetEntry(index);
        loaded_L1_Mu16er_Tau20er_ = true;
    }
    return L1_Mu16er_Tau20er_;
}
const bool &Nano::L1_Mu16er_Tau24er() {
    if (!loaded_L1_Mu16er_Tau24er_) counter_uncached_L1_Mu16er_Tau24er_++;
    else counter_cached_L1_Mu16er_Tau24er_++;
    if (!loaded_L1_Mu16er_Tau24er_) {
        if (!b_L1_Mu16er_Tau24er_) throw std::runtime_error("L1_Mu16er_Tau24er branch doesn't exist");
        b_L1_Mu16er_Tau24er_->GetEntry(index);
        loaded_L1_Mu16er_Tau24er_ = true;
    }
    return L1_Mu16er_Tau24er_;
}
const bool &Nano::L1_Mu18_HTT100er() {
    if (!loaded_L1_Mu18_HTT100er_) counter_uncached_L1_Mu18_HTT100er_++;
    else counter_cached_L1_Mu18_HTT100er_++;
    if (!loaded_L1_Mu18_HTT100er_) {
        if (!b_L1_Mu18_HTT100er_) throw std::runtime_error("L1_Mu18_HTT100er branch doesn't exist");
        b_L1_Mu18_HTT100er_->GetEntry(index);
        loaded_L1_Mu18_HTT100er_ = true;
    }
    return L1_Mu18_HTT100er_;
}
const bool &Nano::L1_Mu18_Jet24er2p7() {
    if (!loaded_L1_Mu18_Jet24er2p7_) counter_uncached_L1_Mu18_Jet24er2p7_++;
    else counter_cached_L1_Mu18_Jet24er2p7_++;
    if (!loaded_L1_Mu18_Jet24er2p7_) {
        if (!b_L1_Mu18_Jet24er2p7_) throw std::runtime_error("L1_Mu18_Jet24er2p7 branch doesn't exist");
        b_L1_Mu18_Jet24er2p7_->GetEntry(index);
        loaded_L1_Mu18_Jet24er2p7_ = true;
    }
    return L1_Mu18_Jet24er2p7_;
}
const bool &Nano::L1_Mu18_Jet24er3p0() {
    if (!loaded_L1_Mu18_Jet24er3p0_) counter_uncached_L1_Mu18_Jet24er3p0_++;
    else counter_cached_L1_Mu18_Jet24er3p0_++;
    if (!loaded_L1_Mu18_Jet24er3p0_) {
        if (!b_L1_Mu18_Jet24er3p0_) throw std::runtime_error("L1_Mu18_Jet24er3p0 branch doesn't exist");
        b_L1_Mu18_Jet24er3p0_->GetEntry(index);
        loaded_L1_Mu18_Jet24er3p0_ = true;
    }
    return L1_Mu18_Jet24er3p0_;
}
const bool &Nano::L1_Mu18er2p1_IsoTau26er2p1() {
    if (!loaded_L1_Mu18er2p1_IsoTau26er2p1_) counter_uncached_L1_Mu18er2p1_IsoTau26er2p1_++;
    else counter_cached_L1_Mu18er2p1_IsoTau26er2p1_++;
    if (!loaded_L1_Mu18er2p1_IsoTau26er2p1_) {
        if (!b_L1_Mu18er2p1_IsoTau26er2p1_) throw std::runtime_error("L1_Mu18er2p1_IsoTau26er2p1 branch doesn't exist");
        b_L1_Mu18er2p1_IsoTau26er2p1_->GetEntry(index);
        loaded_L1_Mu18er2p1_IsoTau26er2p1_ = true;
    }
    return L1_Mu18er2p1_IsoTau26er2p1_;
}
const bool &Nano::L1_Mu18er2p1_Tau20er2p1() {
    if (!loaded_L1_Mu18er2p1_Tau20er2p1_) counter_uncached_L1_Mu18er2p1_Tau20er2p1_++;
    else counter_cached_L1_Mu18er2p1_Tau20er2p1_++;
    if (!loaded_L1_Mu18er2p1_Tau20er2p1_) {
        if (!b_L1_Mu18er2p1_Tau20er2p1_) throw std::runtime_error("L1_Mu18er2p1_Tau20er2p1 branch doesn't exist");
        b_L1_Mu18er2p1_Tau20er2p1_->GetEntry(index);
        loaded_L1_Mu18er2p1_Tau20er2p1_ = true;
    }
    return L1_Mu18er2p1_Tau20er2p1_;
}
const bool &Nano::L1_Mu18er2p1_Tau24er2p1() {
    if (!loaded_L1_Mu18er2p1_Tau24er2p1_) counter_uncached_L1_Mu18er2p1_Tau24er2p1_++;
    else counter_cached_L1_Mu18er2p1_Tau24er2p1_++;
    if (!loaded_L1_Mu18er2p1_Tau24er2p1_) {
        if (!b_L1_Mu18er2p1_Tau24er2p1_) throw std::runtime_error("L1_Mu18er2p1_Tau24er2p1 branch doesn't exist");
        b_L1_Mu18er2p1_Tau24er2p1_->GetEntry(index);
        loaded_L1_Mu18er2p1_Tau24er2p1_ = true;
    }
    return L1_Mu18er2p1_Tau24er2p1_;
}
const bool &Nano::L1_Mu18er2p1_Tau26er2p1() {
    if (!loaded_L1_Mu18er2p1_Tau26er2p1_) counter_uncached_L1_Mu18er2p1_Tau26er2p1_++;
    else counter_cached_L1_Mu18er2p1_Tau26er2p1_++;
    if (!loaded_L1_Mu18er2p1_Tau26er2p1_) {
        if (!b_L1_Mu18er2p1_Tau26er2p1_) throw std::runtime_error("L1_Mu18er2p1_Tau26er2p1 branch doesn't exist");
        b_L1_Mu18er2p1_Tau26er2p1_->GetEntry(index);
        loaded_L1_Mu18er2p1_Tau26er2p1_ = true;
    }
    return L1_Mu18er2p1_Tau26er2p1_;
}
const bool &Nano::L1_Mu18er2p1_Tau26er2p1_Jet55() {
    if (!loaded_L1_Mu18er2p1_Tau26er2p1_Jet55_) counter_uncached_L1_Mu18er2p1_Tau26er2p1_Jet55_++;
    else counter_cached_L1_Mu18er2p1_Tau26er2p1_Jet55_++;
    if (!loaded_L1_Mu18er2p1_Tau26er2p1_Jet55_) {
        if (!b_L1_Mu18er2p1_Tau26er2p1_Jet55_) throw std::runtime_error("L1_Mu18er2p1_Tau26er2p1_Jet55 branch doesn't exist");
        b_L1_Mu18er2p1_Tau26er2p1_Jet55_->GetEntry(index);
        loaded_L1_Mu18er2p1_Tau26er2p1_Jet55_ = true;
    }
    return L1_Mu18er2p1_Tau26er2p1_Jet55_;
}
const bool &Nano::L1_Mu18er2p1_Tau26er2p1_Jet70() {
    if (!loaded_L1_Mu18er2p1_Tau26er2p1_Jet70_) counter_uncached_L1_Mu18er2p1_Tau26er2p1_Jet70_++;
    else counter_cached_L1_Mu18er2p1_Tau26er2p1_Jet70_++;
    if (!loaded_L1_Mu18er2p1_Tau26er2p1_Jet70_) {
        if (!b_L1_Mu18er2p1_Tau26er2p1_Jet70_) throw std::runtime_error("L1_Mu18er2p1_Tau26er2p1_Jet70 branch doesn't exist");
        b_L1_Mu18er2p1_Tau26er2p1_Jet70_->GetEntry(index);
        loaded_L1_Mu18er2p1_Tau26er2p1_Jet70_ = true;
    }
    return L1_Mu18er2p1_Tau26er2p1_Jet70_;
}
const bool &Nano::L1_Mu18er_IsoTau26er() {
    if (!loaded_L1_Mu18er_IsoTau26er_) counter_uncached_L1_Mu18er_IsoTau26er_++;
    else counter_cached_L1_Mu18er_IsoTau26er_++;
    if (!loaded_L1_Mu18er_IsoTau26er_) {
        if (!b_L1_Mu18er_IsoTau26er_) throw std::runtime_error("L1_Mu18er_IsoTau26er branch doesn't exist");
        b_L1_Mu18er_IsoTau26er_->GetEntry(index);
        loaded_L1_Mu18er_IsoTau26er_ = true;
    }
    return L1_Mu18er_IsoTau26er_;
}
const bool &Nano::L1_Mu18er_Tau20er() {
    if (!loaded_L1_Mu18er_Tau20er_) counter_uncached_L1_Mu18er_Tau20er_++;
    else counter_cached_L1_Mu18er_Tau20er_++;
    if (!loaded_L1_Mu18er_Tau20er_) {
        if (!b_L1_Mu18er_Tau20er_) throw std::runtime_error("L1_Mu18er_Tau20er branch doesn't exist");
        b_L1_Mu18er_Tau20er_->GetEntry(index);
        loaded_L1_Mu18er_Tau20er_ = true;
    }
    return L1_Mu18er_Tau20er_;
}
const bool &Nano::L1_Mu18er_Tau24er() {
    if (!loaded_L1_Mu18er_Tau24er_) counter_uncached_L1_Mu18er_Tau24er_++;
    else counter_cached_L1_Mu18er_Tau24er_++;
    if (!loaded_L1_Mu18er_Tau24er_) {
        if (!b_L1_Mu18er_Tau24er_) throw std::runtime_error("L1_Mu18er_Tau24er branch doesn't exist");
        b_L1_Mu18er_Tau24er_->GetEntry(index);
        loaded_L1_Mu18er_Tau24er_ = true;
    }
    return L1_Mu18er_Tau24er_;
}
const bool &Nano::L1_Mu20_EG10() {
    if (!loaded_L1_Mu20_EG10_) counter_uncached_L1_Mu20_EG10_++;
    else counter_cached_L1_Mu20_EG10_++;
    if (!loaded_L1_Mu20_EG10_) {
        if (!b_L1_Mu20_EG10_) throw std::runtime_error("L1_Mu20_EG10 branch doesn't exist");
        b_L1_Mu20_EG10_->GetEntry(index);
        loaded_L1_Mu20_EG10_ = true;
    }
    return L1_Mu20_EG10_;
}
const bool &Nano::L1_Mu20_EG10er2p5() {
    if (!loaded_L1_Mu20_EG10er2p5_) counter_uncached_L1_Mu20_EG10er2p5_++;
    else counter_cached_L1_Mu20_EG10er2p5_++;
    if (!loaded_L1_Mu20_EG10er2p5_) {
        if (!b_L1_Mu20_EG10er2p5_) throw std::runtime_error("L1_Mu20_EG10er2p5 branch doesn't exist");
        b_L1_Mu20_EG10er2p5_->GetEntry(index);
        loaded_L1_Mu20_EG10er2p5_ = true;
    }
    return L1_Mu20_EG10er2p5_;
}
const bool &Nano::L1_Mu20_EG17() {
    if (!loaded_L1_Mu20_EG17_) counter_uncached_L1_Mu20_EG17_++;
    else counter_cached_L1_Mu20_EG17_++;
    if (!loaded_L1_Mu20_EG17_) {
        if (!b_L1_Mu20_EG17_) throw std::runtime_error("L1_Mu20_EG17 branch doesn't exist");
        b_L1_Mu20_EG17_->GetEntry(index);
        loaded_L1_Mu20_EG17_ = true;
    }
    return L1_Mu20_EG17_;
}
const bool &Nano::L1_Mu20_IsoEG6() {
    if (!loaded_L1_Mu20_IsoEG6_) counter_uncached_L1_Mu20_IsoEG6_++;
    else counter_cached_L1_Mu20_IsoEG6_++;
    if (!loaded_L1_Mu20_IsoEG6_) {
        if (!b_L1_Mu20_IsoEG6_) throw std::runtime_error("L1_Mu20_IsoEG6 branch doesn't exist");
        b_L1_Mu20_IsoEG6_->GetEntry(index);
        loaded_L1_Mu20_IsoEG6_ = true;
    }
    return L1_Mu20_IsoEG6_;
}
const bool &Nano::L1_Mu20_LooseIsoEG6() {
    if (!loaded_L1_Mu20_LooseIsoEG6_) counter_uncached_L1_Mu20_LooseIsoEG6_++;
    else counter_cached_L1_Mu20_LooseIsoEG6_++;
    if (!loaded_L1_Mu20_LooseIsoEG6_) {
        if (!b_L1_Mu20_LooseIsoEG6_) throw std::runtime_error("L1_Mu20_LooseIsoEG6 branch doesn't exist");
        b_L1_Mu20_LooseIsoEG6_->GetEntry(index);
        loaded_L1_Mu20_LooseIsoEG6_ = true;
    }
    return L1_Mu20_LooseIsoEG6_;
}
const bool &Nano::L1_Mu20er2p1_IsoTau26er2p1() {
    if (!loaded_L1_Mu20er2p1_IsoTau26er2p1_) counter_uncached_L1_Mu20er2p1_IsoTau26er2p1_++;
    else counter_cached_L1_Mu20er2p1_IsoTau26er2p1_++;
    if (!loaded_L1_Mu20er2p1_IsoTau26er2p1_) {
        if (!b_L1_Mu20er2p1_IsoTau26er2p1_) throw std::runtime_error("L1_Mu20er2p1_IsoTau26er2p1 branch doesn't exist");
        b_L1_Mu20er2p1_IsoTau26er2p1_->GetEntry(index);
        loaded_L1_Mu20er2p1_IsoTau26er2p1_ = true;
    }
    return L1_Mu20er2p1_IsoTau26er2p1_;
}
const bool &Nano::L1_Mu20er2p1_IsoTau27er2p1() {
    if (!loaded_L1_Mu20er2p1_IsoTau27er2p1_) counter_uncached_L1_Mu20er2p1_IsoTau27er2p1_++;
    else counter_cached_L1_Mu20er2p1_IsoTau27er2p1_++;
    if (!loaded_L1_Mu20er2p1_IsoTau27er2p1_) {
        if (!b_L1_Mu20er2p1_IsoTau27er2p1_) throw std::runtime_error("L1_Mu20er2p1_IsoTau27er2p1 branch doesn't exist");
        b_L1_Mu20er2p1_IsoTau27er2p1_->GetEntry(index);
        loaded_L1_Mu20er2p1_IsoTau27er2p1_ = true;
    }
    return L1_Mu20er2p1_IsoTau27er2p1_;
}
const bool &Nano::L1_Mu20er_IsoTau26er() {
    if (!loaded_L1_Mu20er_IsoTau26er_) counter_uncached_L1_Mu20er_IsoTau26er_++;
    else counter_cached_L1_Mu20er_IsoTau26er_++;
    if (!loaded_L1_Mu20er_IsoTau26er_) {
        if (!b_L1_Mu20er_IsoTau26er_) throw std::runtime_error("L1_Mu20er_IsoTau26er branch doesn't exist");
        b_L1_Mu20er_IsoTau26er_->GetEntry(index);
        loaded_L1_Mu20er_IsoTau26er_ = true;
    }
    return L1_Mu20er_IsoTau26er_;
}
const bool &Nano::L1_Mu22er2p1_IsoTau28er2p1() {
    if (!loaded_L1_Mu22er2p1_IsoTau28er2p1_) counter_uncached_L1_Mu22er2p1_IsoTau28er2p1_++;
    else counter_cached_L1_Mu22er2p1_IsoTau28er2p1_++;
    if (!loaded_L1_Mu22er2p1_IsoTau28er2p1_) {
        if (!b_L1_Mu22er2p1_IsoTau28er2p1_) throw std::runtime_error("L1_Mu22er2p1_IsoTau28er2p1 branch doesn't exist");
        b_L1_Mu22er2p1_IsoTau28er2p1_->GetEntry(index);
        loaded_L1_Mu22er2p1_IsoTau28er2p1_ = true;
    }
    return L1_Mu22er2p1_IsoTau28er2p1_;
}
const bool &Nano::L1_Mu22er2p1_IsoTau30er2p1() {
    if (!loaded_L1_Mu22er2p1_IsoTau30er2p1_) counter_uncached_L1_Mu22er2p1_IsoTau30er2p1_++;
    else counter_cached_L1_Mu22er2p1_IsoTau30er2p1_++;
    if (!loaded_L1_Mu22er2p1_IsoTau30er2p1_) {
        if (!b_L1_Mu22er2p1_IsoTau30er2p1_) throw std::runtime_error("L1_Mu22er2p1_IsoTau30er2p1 branch doesn't exist");
        b_L1_Mu22er2p1_IsoTau30er2p1_->GetEntry(index);
        loaded_L1_Mu22er2p1_IsoTau30er2p1_ = true;
    }
    return L1_Mu22er2p1_IsoTau30er2p1_;
}
const bool &Nano::L1_Mu22er2p1_IsoTau32er2p1() {
    if (!loaded_L1_Mu22er2p1_IsoTau32er2p1_) counter_uncached_L1_Mu22er2p1_IsoTau32er2p1_++;
    else counter_cached_L1_Mu22er2p1_IsoTau32er2p1_++;
    if (!loaded_L1_Mu22er2p1_IsoTau32er2p1_) {
        if (!b_L1_Mu22er2p1_IsoTau32er2p1_) throw std::runtime_error("L1_Mu22er2p1_IsoTau32er2p1 branch doesn't exist");
        b_L1_Mu22er2p1_IsoTau32er2p1_->GetEntry(index);
        loaded_L1_Mu22er2p1_IsoTau32er2p1_ = true;
    }
    return L1_Mu22er2p1_IsoTau32er2p1_;
}
const bool &Nano::L1_Mu22er2p1_IsoTau33er2p1() {
    if (!loaded_L1_Mu22er2p1_IsoTau33er2p1_) counter_uncached_L1_Mu22er2p1_IsoTau33er2p1_++;
    else counter_cached_L1_Mu22er2p1_IsoTau33er2p1_++;
    if (!loaded_L1_Mu22er2p1_IsoTau33er2p1_) {
        if (!b_L1_Mu22er2p1_IsoTau33er2p1_) throw std::runtime_error("L1_Mu22er2p1_IsoTau33er2p1 branch doesn't exist");
        b_L1_Mu22er2p1_IsoTau33er2p1_->GetEntry(index);
        loaded_L1_Mu22er2p1_IsoTau33er2p1_ = true;
    }
    return L1_Mu22er2p1_IsoTau33er2p1_;
}
const bool &Nano::L1_Mu22er2p1_IsoTau34er2p1() {
    if (!loaded_L1_Mu22er2p1_IsoTau34er2p1_) counter_uncached_L1_Mu22er2p1_IsoTau34er2p1_++;
    else counter_cached_L1_Mu22er2p1_IsoTau34er2p1_++;
    if (!loaded_L1_Mu22er2p1_IsoTau34er2p1_) {
        if (!b_L1_Mu22er2p1_IsoTau34er2p1_) throw std::runtime_error("L1_Mu22er2p1_IsoTau34er2p1 branch doesn't exist");
        b_L1_Mu22er2p1_IsoTau34er2p1_->GetEntry(index);
        loaded_L1_Mu22er2p1_IsoTau34er2p1_ = true;
    }
    return L1_Mu22er2p1_IsoTau34er2p1_;
}
const bool &Nano::L1_Mu22er2p1_IsoTau35er2p1() {
    if (!loaded_L1_Mu22er2p1_IsoTau35er2p1_) counter_uncached_L1_Mu22er2p1_IsoTau35er2p1_++;
    else counter_cached_L1_Mu22er2p1_IsoTau35er2p1_++;
    if (!loaded_L1_Mu22er2p1_IsoTau35er2p1_) {
        if (!b_L1_Mu22er2p1_IsoTau35er2p1_) throw std::runtime_error("L1_Mu22er2p1_IsoTau35er2p1 branch doesn't exist");
        b_L1_Mu22er2p1_IsoTau35er2p1_->GetEntry(index);
        loaded_L1_Mu22er2p1_IsoTau35er2p1_ = true;
    }
    return L1_Mu22er2p1_IsoTau35er2p1_;
}
const bool &Nano::L1_Mu22er2p1_IsoTau36er2p1() {
    if (!loaded_L1_Mu22er2p1_IsoTau36er2p1_) counter_uncached_L1_Mu22er2p1_IsoTau36er2p1_++;
    else counter_cached_L1_Mu22er2p1_IsoTau36er2p1_++;
    if (!loaded_L1_Mu22er2p1_IsoTau36er2p1_) {
        if (!b_L1_Mu22er2p1_IsoTau36er2p1_) throw std::runtime_error("L1_Mu22er2p1_IsoTau36er2p1 branch doesn't exist");
        b_L1_Mu22er2p1_IsoTau36er2p1_->GetEntry(index);
        loaded_L1_Mu22er2p1_IsoTau36er2p1_ = true;
    }
    return L1_Mu22er2p1_IsoTau36er2p1_;
}
const bool &Nano::L1_Mu22er2p1_IsoTau38er2p1() {
    if (!loaded_L1_Mu22er2p1_IsoTau38er2p1_) counter_uncached_L1_Mu22er2p1_IsoTau38er2p1_++;
    else counter_cached_L1_Mu22er2p1_IsoTau38er2p1_++;
    if (!loaded_L1_Mu22er2p1_IsoTau38er2p1_) {
        if (!b_L1_Mu22er2p1_IsoTau38er2p1_) throw std::runtime_error("L1_Mu22er2p1_IsoTau38er2p1 branch doesn't exist");
        b_L1_Mu22er2p1_IsoTau38er2p1_->GetEntry(index);
        loaded_L1_Mu22er2p1_IsoTau38er2p1_ = true;
    }
    return L1_Mu22er2p1_IsoTau38er2p1_;
}
const bool &Nano::L1_Mu22er2p1_IsoTau40er2p1() {
    if (!loaded_L1_Mu22er2p1_IsoTau40er2p1_) counter_uncached_L1_Mu22er2p1_IsoTau40er2p1_++;
    else counter_cached_L1_Mu22er2p1_IsoTau40er2p1_++;
    if (!loaded_L1_Mu22er2p1_IsoTau40er2p1_) {
        if (!b_L1_Mu22er2p1_IsoTau40er2p1_) throw std::runtime_error("L1_Mu22er2p1_IsoTau40er2p1 branch doesn't exist");
        b_L1_Mu22er2p1_IsoTau40er2p1_->GetEntry(index);
        loaded_L1_Mu22er2p1_IsoTau40er2p1_ = true;
    }
    return L1_Mu22er2p1_IsoTau40er2p1_;
}
const bool &Nano::L1_Mu22er2p1_Tau50er2p1() {
    if (!loaded_L1_Mu22er2p1_Tau50er2p1_) counter_uncached_L1_Mu22er2p1_Tau50er2p1_++;
    else counter_cached_L1_Mu22er2p1_Tau50er2p1_++;
    if (!loaded_L1_Mu22er2p1_Tau50er2p1_) {
        if (!b_L1_Mu22er2p1_Tau50er2p1_) throw std::runtime_error("L1_Mu22er2p1_Tau50er2p1 branch doesn't exist");
        b_L1_Mu22er2p1_Tau50er2p1_->GetEntry(index);
        loaded_L1_Mu22er2p1_Tau50er2p1_ = true;
    }
    return L1_Mu22er2p1_Tau50er2p1_;
}
const bool &Nano::L1_Mu22er2p1_Tau70er2p1() {
    if (!loaded_L1_Mu22er2p1_Tau70er2p1_) counter_uncached_L1_Mu22er2p1_Tau70er2p1_++;
    else counter_cached_L1_Mu22er2p1_Tau70er2p1_++;
    if (!loaded_L1_Mu22er2p1_Tau70er2p1_) {
        if (!b_L1_Mu22er2p1_Tau70er2p1_) throw std::runtime_error("L1_Mu22er2p1_Tau70er2p1 branch doesn't exist");
        b_L1_Mu22er2p1_Tau70er2p1_->GetEntry(index);
        loaded_L1_Mu22er2p1_Tau70er2p1_ = true;
    }
    return L1_Mu22er2p1_Tau70er2p1_;
}
const bool &Nano::L1_Mu22er_IsoTau26er() {
    if (!loaded_L1_Mu22er_IsoTau26er_) counter_uncached_L1_Mu22er_IsoTau26er_++;
    else counter_cached_L1_Mu22er_IsoTau26er_++;
    if (!loaded_L1_Mu22er_IsoTau26er_) {
        if (!b_L1_Mu22er_IsoTau26er_) throw std::runtime_error("L1_Mu22er_IsoTau26er branch doesn't exist");
        b_L1_Mu22er_IsoTau26er_->GetEntry(index);
        loaded_L1_Mu22er_IsoTau26er_ = true;
    }
    return L1_Mu22er_IsoTau26er_;
}
const bool &Nano::L1_Mu23_EG10() {
    if (!loaded_L1_Mu23_EG10_) counter_uncached_L1_Mu23_EG10_++;
    else counter_cached_L1_Mu23_EG10_++;
    if (!loaded_L1_Mu23_EG10_) {
        if (!b_L1_Mu23_EG10_) throw std::runtime_error("L1_Mu23_EG10 branch doesn't exist");
        b_L1_Mu23_EG10_->GetEntry(index);
        loaded_L1_Mu23_EG10_ = true;
    }
    return L1_Mu23_EG10_;
}
const bool &Nano::L1_Mu23_IsoEG10() {
    if (!loaded_L1_Mu23_IsoEG10_) counter_uncached_L1_Mu23_IsoEG10_++;
    else counter_cached_L1_Mu23_IsoEG10_++;
    if (!loaded_L1_Mu23_IsoEG10_) {
        if (!b_L1_Mu23_IsoEG10_) throw std::runtime_error("L1_Mu23_IsoEG10 branch doesn't exist");
        b_L1_Mu23_IsoEG10_->GetEntry(index);
        loaded_L1_Mu23_IsoEG10_ = true;
    }
    return L1_Mu23_IsoEG10_;
}
const bool &Nano::L1_Mu23_LooseIsoEG10() {
    if (!loaded_L1_Mu23_LooseIsoEG10_) counter_uncached_L1_Mu23_LooseIsoEG10_++;
    else counter_cached_L1_Mu23_LooseIsoEG10_++;
    if (!loaded_L1_Mu23_LooseIsoEG10_) {
        if (!b_L1_Mu23_LooseIsoEG10_) throw std::runtime_error("L1_Mu23_LooseIsoEG10 branch doesn't exist");
        b_L1_Mu23_LooseIsoEG10_->GetEntry(index);
        loaded_L1_Mu23_LooseIsoEG10_ = true;
    }
    return L1_Mu23_LooseIsoEG10_;
}
const bool &Nano::L1_Mu25er_IsoTau26er() {
    if (!loaded_L1_Mu25er_IsoTau26er_) counter_uncached_L1_Mu25er_IsoTau26er_++;
    else counter_cached_L1_Mu25er_IsoTau26er_++;
    if (!loaded_L1_Mu25er_IsoTau26er_) {
        if (!b_L1_Mu25er_IsoTau26er_) throw std::runtime_error("L1_Mu25er_IsoTau26er branch doesn't exist");
        b_L1_Mu25er_IsoTau26er_->GetEntry(index);
        loaded_L1_Mu25er_IsoTau26er_ = true;
    }
    return L1_Mu25er_IsoTau26er_;
}
const bool &Nano::L1_Mu3_Jet120er2p5_dR_Max0p4() {
    if (!loaded_L1_Mu3_Jet120er2p5_dR_Max0p4_) counter_uncached_L1_Mu3_Jet120er2p5_dR_Max0p4_++;
    else counter_cached_L1_Mu3_Jet120er2p5_dR_Max0p4_++;
    if (!loaded_L1_Mu3_Jet120er2p5_dR_Max0p4_) {
        if (!b_L1_Mu3_Jet120er2p5_dR_Max0p4_) throw std::runtime_error("L1_Mu3_Jet120er2p5_dR_Max0p4 branch doesn't exist");
        b_L1_Mu3_Jet120er2p5_dR_Max0p4_->GetEntry(index);
        loaded_L1_Mu3_Jet120er2p5_dR_Max0p4_ = true;
    }
    return L1_Mu3_Jet120er2p5_dR_Max0p4_;
}
const bool &Nano::L1_Mu3_Jet120er2p5_dR_Max0p8() {
    if (!loaded_L1_Mu3_Jet120er2p5_dR_Max0p8_) counter_uncached_L1_Mu3_Jet120er2p5_dR_Max0p8_++;
    else counter_cached_L1_Mu3_Jet120er2p5_dR_Max0p8_++;
    if (!loaded_L1_Mu3_Jet120er2p5_dR_Max0p8_) {
        if (!b_L1_Mu3_Jet120er2p5_dR_Max0p8_) throw std::runtime_error("L1_Mu3_Jet120er2p5_dR_Max0p8 branch doesn't exist");
        b_L1_Mu3_Jet120er2p5_dR_Max0p8_->GetEntry(index);
        loaded_L1_Mu3_Jet120er2p5_dR_Max0p8_ = true;
    }
    return L1_Mu3_Jet120er2p5_dR_Max0p8_;
}
const bool &Nano::L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4() {
    if (!loaded_L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4_) counter_uncached_L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4_++;
    else counter_cached_L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4_++;
    if (!loaded_L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4_) {
        if (!b_L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4_) throw std::runtime_error("L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4 branch doesn't exist");
        b_L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4_->GetEntry(index);
        loaded_L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4_ = true;
    }
    return L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4_;
}
const bool &Nano::L1_Mu3_Jet16er2p5_dR_Max0p4() {
    if (!loaded_L1_Mu3_Jet16er2p5_dR_Max0p4_) counter_uncached_L1_Mu3_Jet16er2p5_dR_Max0p4_++;
    else counter_cached_L1_Mu3_Jet16er2p5_dR_Max0p4_++;
    if (!loaded_L1_Mu3_Jet16er2p5_dR_Max0p4_) {
        if (!b_L1_Mu3_Jet16er2p5_dR_Max0p4_) throw std::runtime_error("L1_Mu3_Jet16er2p5_dR_Max0p4 branch doesn't exist");
        b_L1_Mu3_Jet16er2p5_dR_Max0p4_->GetEntry(index);
        loaded_L1_Mu3_Jet16er2p5_dR_Max0p4_ = true;
    }
    return L1_Mu3_Jet16er2p5_dR_Max0p4_;
}
const bool &Nano::L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4() {
    if (!loaded_L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4_) counter_uncached_L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4_++;
    else counter_cached_L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4_++;
    if (!loaded_L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4_) {
        if (!b_L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4_) throw std::runtime_error("L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4 branch doesn't exist");
        b_L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4_->GetEntry(index);
        loaded_L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4_ = true;
    }
    return L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4_;
}
const bool &Nano::L1_Mu3_Jet30er2p5() {
    if (!loaded_L1_Mu3_Jet30er2p5_) counter_uncached_L1_Mu3_Jet30er2p5_++;
    else counter_cached_L1_Mu3_Jet30er2p5_++;
    if (!loaded_L1_Mu3_Jet30er2p5_) {
        if (!b_L1_Mu3_Jet30er2p5_) throw std::runtime_error("L1_Mu3_Jet30er2p5 branch doesn't exist");
        b_L1_Mu3_Jet30er2p5_->GetEntry(index);
        loaded_L1_Mu3_Jet30er2p5_ = true;
    }
    return L1_Mu3_Jet30er2p5_;
}
const bool &Nano::L1_Mu3_Jet35er2p5_dR_Max0p4() {
    if (!loaded_L1_Mu3_Jet35er2p5_dR_Max0p4_) counter_uncached_L1_Mu3_Jet35er2p5_dR_Max0p4_++;
    else counter_cached_L1_Mu3_Jet35er2p5_dR_Max0p4_++;
    if (!loaded_L1_Mu3_Jet35er2p5_dR_Max0p4_) {
        if (!b_L1_Mu3_Jet35er2p5_dR_Max0p4_) throw std::runtime_error("L1_Mu3_Jet35er2p5_dR_Max0p4 branch doesn't exist");
        b_L1_Mu3_Jet35er2p5_dR_Max0p4_->GetEntry(index);
        loaded_L1_Mu3_Jet35er2p5_dR_Max0p4_ = true;
    }
    return L1_Mu3_Jet35er2p5_dR_Max0p4_;
}
const bool &Nano::L1_Mu3_Jet60er2p5_dR_Max0p4() {
    if (!loaded_L1_Mu3_Jet60er2p5_dR_Max0p4_) counter_uncached_L1_Mu3_Jet60er2p5_dR_Max0p4_++;
    else counter_cached_L1_Mu3_Jet60er2p5_dR_Max0p4_++;
    if (!loaded_L1_Mu3_Jet60er2p5_dR_Max0p4_) {
        if (!b_L1_Mu3_Jet60er2p5_dR_Max0p4_) throw std::runtime_error("L1_Mu3_Jet60er2p5_dR_Max0p4 branch doesn't exist");
        b_L1_Mu3_Jet60er2p5_dR_Max0p4_->GetEntry(index);
        loaded_L1_Mu3_Jet60er2p5_dR_Max0p4_ = true;
    }
    return L1_Mu3_Jet60er2p5_dR_Max0p4_;
}
const bool &Nano::L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4() {
    if (!loaded_L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4_) counter_uncached_L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4_++;
    else counter_cached_L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4_++;
    if (!loaded_L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4_) {
        if (!b_L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4_) throw std::runtime_error("L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4 branch doesn't exist");
        b_L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4_->GetEntry(index);
        loaded_L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4_ = true;
    }
    return L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4_;
}
const bool &Nano::L1_Mu3_Jet80er2p5_dR_Max0p4() {
    if (!loaded_L1_Mu3_Jet80er2p5_dR_Max0p4_) counter_uncached_L1_Mu3_Jet80er2p5_dR_Max0p4_++;
    else counter_cached_L1_Mu3_Jet80er2p5_dR_Max0p4_++;
    if (!loaded_L1_Mu3_Jet80er2p5_dR_Max0p4_) {
        if (!b_L1_Mu3_Jet80er2p5_dR_Max0p4_) throw std::runtime_error("L1_Mu3_Jet80er2p5_dR_Max0p4 branch doesn't exist");
        b_L1_Mu3_Jet80er2p5_dR_Max0p4_->GetEntry(index);
        loaded_L1_Mu3_Jet80er2p5_dR_Max0p4_ = true;
    }
    return L1_Mu3_Jet80er2p5_dR_Max0p4_;
}
const bool &Nano::L1_Mu3_JetC120() {
    if (!loaded_L1_Mu3_JetC120_) counter_uncached_L1_Mu3_JetC120_++;
    else counter_cached_L1_Mu3_JetC120_++;
    if (!loaded_L1_Mu3_JetC120_) {
        if (!b_L1_Mu3_JetC120_) throw std::runtime_error("L1_Mu3_JetC120 branch doesn't exist");
        b_L1_Mu3_JetC120_->GetEntry(index);
        loaded_L1_Mu3_JetC120_ = true;
    }
    return L1_Mu3_JetC120_;
}
const bool &Nano::L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4() {
    if (!loaded_L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4_) counter_uncached_L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4_++;
    else counter_cached_L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4_++;
    if (!loaded_L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4_) {
        if (!b_L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4_) throw std::runtime_error("L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4 branch doesn't exist");
        b_L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4_->GetEntry(index);
        loaded_L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4_ = true;
    }
    return L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4_;
}
const bool &Nano::L1_Mu3_JetC16() {
    if (!loaded_L1_Mu3_JetC16_) counter_uncached_L1_Mu3_JetC16_++;
    else counter_cached_L1_Mu3_JetC16_++;
    if (!loaded_L1_Mu3_JetC16_) {
        if (!b_L1_Mu3_JetC16_) throw std::runtime_error("L1_Mu3_JetC16 branch doesn't exist");
        b_L1_Mu3_JetC16_->GetEntry(index);
        loaded_L1_Mu3_JetC16_ = true;
    }
    return L1_Mu3_JetC16_;
}
const bool &Nano::L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4() {
    if (!loaded_L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4_) counter_uncached_L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4_++;
    else counter_cached_L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4_++;
    if (!loaded_L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4_) {
        if (!b_L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4_) throw std::runtime_error("L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4 branch doesn't exist");
        b_L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4_->GetEntry(index);
        loaded_L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4_ = true;
    }
    return L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4_;
}
const bool &Nano::L1_Mu3_JetC60() {
    if (!loaded_L1_Mu3_JetC60_) counter_uncached_L1_Mu3_JetC60_++;
    else counter_cached_L1_Mu3_JetC60_++;
    if (!loaded_L1_Mu3_JetC60_) {
        if (!b_L1_Mu3_JetC60_) throw std::runtime_error("L1_Mu3_JetC60 branch doesn't exist");
        b_L1_Mu3_JetC60_->GetEntry(index);
        loaded_L1_Mu3_JetC60_ = true;
    }
    return L1_Mu3_JetC60_;
}
const bool &Nano::L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4() {
    if (!loaded_L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4_) counter_uncached_L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4_++;
    else counter_cached_L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4_++;
    if (!loaded_L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4_) {
        if (!b_L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4_) throw std::runtime_error("L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4 branch doesn't exist");
        b_L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4_->GetEntry(index);
        loaded_L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4_ = true;
    }
    return L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4_;
}
const bool &Nano::L1_Mu3er1p5_Jet100er2p5_ETMHF30() {
    if (!loaded_L1_Mu3er1p5_Jet100er2p5_ETMHF30_) counter_uncached_L1_Mu3er1p5_Jet100er2p5_ETMHF30_++;
    else counter_cached_L1_Mu3er1p5_Jet100er2p5_ETMHF30_++;
    if (!loaded_L1_Mu3er1p5_Jet100er2p5_ETMHF30_) {
        if (!b_L1_Mu3er1p5_Jet100er2p5_ETMHF30_) throw std::runtime_error("L1_Mu3er1p5_Jet100er2p5_ETMHF30 branch doesn't exist");
        b_L1_Mu3er1p5_Jet100er2p5_ETMHF30_->GetEntry(index);
        loaded_L1_Mu3er1p5_Jet100er2p5_ETMHF30_ = true;
    }
    return L1_Mu3er1p5_Jet100er2p5_ETMHF30_;
}
const bool &Nano::L1_Mu3er1p5_Jet100er2p5_ETMHF40() {
    if (!loaded_L1_Mu3er1p5_Jet100er2p5_ETMHF40_) counter_uncached_L1_Mu3er1p5_Jet100er2p5_ETMHF40_++;
    else counter_cached_L1_Mu3er1p5_Jet100er2p5_ETMHF40_++;
    if (!loaded_L1_Mu3er1p5_Jet100er2p5_ETMHF40_) {
        if (!b_L1_Mu3er1p5_Jet100er2p5_ETMHF40_) throw std::runtime_error("L1_Mu3er1p5_Jet100er2p5_ETMHF40 branch doesn't exist");
        b_L1_Mu3er1p5_Jet100er2p5_ETMHF40_->GetEntry(index);
        loaded_L1_Mu3er1p5_Jet100er2p5_ETMHF40_ = true;
    }
    return L1_Mu3er1p5_Jet100er2p5_ETMHF40_;
}
const bool &Nano::L1_Mu3er1p5_Jet100er2p5_ETMHF50() {
    if (!loaded_L1_Mu3er1p5_Jet100er2p5_ETMHF50_) counter_uncached_L1_Mu3er1p5_Jet100er2p5_ETMHF50_++;
    else counter_cached_L1_Mu3er1p5_Jet100er2p5_ETMHF50_++;
    if (!loaded_L1_Mu3er1p5_Jet100er2p5_ETMHF50_) {
        if (!b_L1_Mu3er1p5_Jet100er2p5_ETMHF50_) throw std::runtime_error("L1_Mu3er1p5_Jet100er2p5_ETMHF50 branch doesn't exist");
        b_L1_Mu3er1p5_Jet100er2p5_ETMHF50_->GetEntry(index);
        loaded_L1_Mu3er1p5_Jet100er2p5_ETMHF50_ = true;
    }
    return L1_Mu3er1p5_Jet100er2p5_ETMHF50_;
}
const bool &Nano::L1_Mu5_EG15() {
    if (!loaded_L1_Mu5_EG15_) counter_uncached_L1_Mu5_EG15_++;
    else counter_cached_L1_Mu5_EG15_++;
    if (!loaded_L1_Mu5_EG15_) {
        if (!b_L1_Mu5_EG15_) throw std::runtime_error("L1_Mu5_EG15 branch doesn't exist");
        b_L1_Mu5_EG15_->GetEntry(index);
        loaded_L1_Mu5_EG15_ = true;
    }
    return L1_Mu5_EG15_;
}
const bool &Nano::L1_Mu5_EG20() {
    if (!loaded_L1_Mu5_EG20_) counter_uncached_L1_Mu5_EG20_++;
    else counter_cached_L1_Mu5_EG20_++;
    if (!loaded_L1_Mu5_EG20_) {
        if (!b_L1_Mu5_EG20_) throw std::runtime_error("L1_Mu5_EG20 branch doesn't exist");
        b_L1_Mu5_EG20_->GetEntry(index);
        loaded_L1_Mu5_EG20_ = true;
    }
    return L1_Mu5_EG20_;
}
const bool &Nano::L1_Mu5_EG23() {
    if (!loaded_L1_Mu5_EG23_) counter_uncached_L1_Mu5_EG23_++;
    else counter_cached_L1_Mu5_EG23_++;
    if (!loaded_L1_Mu5_EG23_) {
        if (!b_L1_Mu5_EG23_) throw std::runtime_error("L1_Mu5_EG23 branch doesn't exist");
        b_L1_Mu5_EG23_->GetEntry(index);
        loaded_L1_Mu5_EG23_ = true;
    }
    return L1_Mu5_EG23_;
}
const bool &Nano::L1_Mu5_EG23er2p5() {
    if (!loaded_L1_Mu5_EG23er2p5_) counter_uncached_L1_Mu5_EG23er2p5_++;
    else counter_cached_L1_Mu5_EG23er2p5_++;
    if (!loaded_L1_Mu5_EG23er2p5_) {
        if (!b_L1_Mu5_EG23er2p5_) throw std::runtime_error("L1_Mu5_EG23er2p5 branch doesn't exist");
        b_L1_Mu5_EG23er2p5_->GetEntry(index);
        loaded_L1_Mu5_EG23er2p5_ = true;
    }
    return L1_Mu5_EG23er2p5_;
}
const bool &Nano::L1_Mu5_IsoEG18() {
    if (!loaded_L1_Mu5_IsoEG18_) counter_uncached_L1_Mu5_IsoEG18_++;
    else counter_cached_L1_Mu5_IsoEG18_++;
    if (!loaded_L1_Mu5_IsoEG18_) {
        if (!b_L1_Mu5_IsoEG18_) throw std::runtime_error("L1_Mu5_IsoEG18 branch doesn't exist");
        b_L1_Mu5_IsoEG18_->GetEntry(index);
        loaded_L1_Mu5_IsoEG18_ = true;
    }
    return L1_Mu5_IsoEG18_;
}
const bool &Nano::L1_Mu5_IsoEG20() {
    if (!loaded_L1_Mu5_IsoEG20_) counter_uncached_L1_Mu5_IsoEG20_++;
    else counter_cached_L1_Mu5_IsoEG20_++;
    if (!loaded_L1_Mu5_IsoEG20_) {
        if (!b_L1_Mu5_IsoEG20_) throw std::runtime_error("L1_Mu5_IsoEG20 branch doesn't exist");
        b_L1_Mu5_IsoEG20_->GetEntry(index);
        loaded_L1_Mu5_IsoEG20_ = true;
    }
    return L1_Mu5_IsoEG20_;
}
const bool &Nano::L1_Mu5_LooseIsoEG18() {
    if (!loaded_L1_Mu5_LooseIsoEG18_) counter_uncached_L1_Mu5_LooseIsoEG18_++;
    else counter_cached_L1_Mu5_LooseIsoEG18_++;
    if (!loaded_L1_Mu5_LooseIsoEG18_) {
        if (!b_L1_Mu5_LooseIsoEG18_) throw std::runtime_error("L1_Mu5_LooseIsoEG18 branch doesn't exist");
        b_L1_Mu5_LooseIsoEG18_->GetEntry(index);
        loaded_L1_Mu5_LooseIsoEG18_ = true;
    }
    return L1_Mu5_LooseIsoEG18_;
}
const bool &Nano::L1_Mu5_LooseIsoEG20() {
    if (!loaded_L1_Mu5_LooseIsoEG20_) counter_uncached_L1_Mu5_LooseIsoEG20_++;
    else counter_cached_L1_Mu5_LooseIsoEG20_++;
    if (!loaded_L1_Mu5_LooseIsoEG20_) {
        if (!b_L1_Mu5_LooseIsoEG20_) throw std::runtime_error("L1_Mu5_LooseIsoEG20 branch doesn't exist");
        b_L1_Mu5_LooseIsoEG20_->GetEntry(index);
        loaded_L1_Mu5_LooseIsoEG20_ = true;
    }
    return L1_Mu5_LooseIsoEG20_;
}
const bool &Nano::L1_Mu5_LooseIsoEG20er2p5() {
    if (!loaded_L1_Mu5_LooseIsoEG20er2p5_) counter_uncached_L1_Mu5_LooseIsoEG20er2p5_++;
    else counter_cached_L1_Mu5_LooseIsoEG20er2p5_++;
    if (!loaded_L1_Mu5_LooseIsoEG20er2p5_) {
        if (!b_L1_Mu5_LooseIsoEG20er2p5_) throw std::runtime_error("L1_Mu5_LooseIsoEG20er2p5 branch doesn't exist");
        b_L1_Mu5_LooseIsoEG20er2p5_->GetEntry(index);
        loaded_L1_Mu5_LooseIsoEG20er2p5_ = true;
    }
    return L1_Mu5_LooseIsoEG20er2p5_;
}
const bool &Nano::L1_Mu6_DoubleEG10() {
    if (!loaded_L1_Mu6_DoubleEG10_) counter_uncached_L1_Mu6_DoubleEG10_++;
    else counter_cached_L1_Mu6_DoubleEG10_++;
    if (!loaded_L1_Mu6_DoubleEG10_) {
        if (!b_L1_Mu6_DoubleEG10_) throw std::runtime_error("L1_Mu6_DoubleEG10 branch doesn't exist");
        b_L1_Mu6_DoubleEG10_->GetEntry(index);
        loaded_L1_Mu6_DoubleEG10_ = true;
    }
    return L1_Mu6_DoubleEG10_;
}
const bool &Nano::L1_Mu6_DoubleEG10er2p5() {
    if (!loaded_L1_Mu6_DoubleEG10er2p5_) counter_uncached_L1_Mu6_DoubleEG10er2p5_++;
    else counter_cached_L1_Mu6_DoubleEG10er2p5_++;
    if (!loaded_L1_Mu6_DoubleEG10er2p5_) {
        if (!b_L1_Mu6_DoubleEG10er2p5_) throw std::runtime_error("L1_Mu6_DoubleEG10er2p5 branch doesn't exist");
        b_L1_Mu6_DoubleEG10er2p5_->GetEntry(index);
        loaded_L1_Mu6_DoubleEG10er2p5_ = true;
    }
    return L1_Mu6_DoubleEG10er2p5_;
}
const bool &Nano::L1_Mu6_DoubleEG12er2p5() {
    if (!loaded_L1_Mu6_DoubleEG12er2p5_) counter_uncached_L1_Mu6_DoubleEG12er2p5_++;
    else counter_cached_L1_Mu6_DoubleEG12er2p5_++;
    if (!loaded_L1_Mu6_DoubleEG12er2p5_) {
        if (!b_L1_Mu6_DoubleEG12er2p5_) throw std::runtime_error("L1_Mu6_DoubleEG12er2p5 branch doesn't exist");
        b_L1_Mu6_DoubleEG12er2p5_->GetEntry(index);
        loaded_L1_Mu6_DoubleEG12er2p5_ = true;
    }
    return L1_Mu6_DoubleEG12er2p5_;
}
const bool &Nano::L1_Mu6_DoubleEG15er2p5() {
    if (!loaded_L1_Mu6_DoubleEG15er2p5_) counter_uncached_L1_Mu6_DoubleEG15er2p5_++;
    else counter_cached_L1_Mu6_DoubleEG15er2p5_++;
    if (!loaded_L1_Mu6_DoubleEG15er2p5_) {
        if (!b_L1_Mu6_DoubleEG15er2p5_) throw std::runtime_error("L1_Mu6_DoubleEG15er2p5 branch doesn't exist");
        b_L1_Mu6_DoubleEG15er2p5_->GetEntry(index);
        loaded_L1_Mu6_DoubleEG15er2p5_ = true;
    }
    return L1_Mu6_DoubleEG15er2p5_;
}
const bool &Nano::L1_Mu6_DoubleEG17() {
    if (!loaded_L1_Mu6_DoubleEG17_) counter_uncached_L1_Mu6_DoubleEG17_++;
    else counter_cached_L1_Mu6_DoubleEG17_++;
    if (!loaded_L1_Mu6_DoubleEG17_) {
        if (!b_L1_Mu6_DoubleEG17_) throw std::runtime_error("L1_Mu6_DoubleEG17 branch doesn't exist");
        b_L1_Mu6_DoubleEG17_->GetEntry(index);
        loaded_L1_Mu6_DoubleEG17_ = true;
    }
    return L1_Mu6_DoubleEG17_;
}
const bool &Nano::L1_Mu6_DoubleEG17er2p5() {
    if (!loaded_L1_Mu6_DoubleEG17er2p5_) counter_uncached_L1_Mu6_DoubleEG17er2p5_++;
    else counter_cached_L1_Mu6_DoubleEG17er2p5_++;
    if (!loaded_L1_Mu6_DoubleEG17er2p5_) {
        if (!b_L1_Mu6_DoubleEG17er2p5_) throw std::runtime_error("L1_Mu6_DoubleEG17er2p5 branch doesn't exist");
        b_L1_Mu6_DoubleEG17er2p5_->GetEntry(index);
        loaded_L1_Mu6_DoubleEG17er2p5_ = true;
    }
    return L1_Mu6_DoubleEG17er2p5_;
}
const bool &Nano::L1_Mu6_HTT200() {
    if (!loaded_L1_Mu6_HTT200_) counter_uncached_L1_Mu6_HTT200_++;
    else counter_cached_L1_Mu6_HTT200_++;
    if (!loaded_L1_Mu6_HTT200_) {
        if (!b_L1_Mu6_HTT200_) throw std::runtime_error("L1_Mu6_HTT200 branch doesn't exist");
        b_L1_Mu6_HTT200_->GetEntry(index);
        loaded_L1_Mu6_HTT200_ = true;
    }
    return L1_Mu6_HTT200_;
}
const bool &Nano::L1_Mu6_HTT200er() {
    if (!loaded_L1_Mu6_HTT200er_) counter_uncached_L1_Mu6_HTT200er_++;
    else counter_cached_L1_Mu6_HTT200er_++;
    if (!loaded_L1_Mu6_HTT200er_) {
        if (!b_L1_Mu6_HTT200er_) throw std::runtime_error("L1_Mu6_HTT200er branch doesn't exist");
        b_L1_Mu6_HTT200er_->GetEntry(index);
        loaded_L1_Mu6_HTT200er_ = true;
    }
    return L1_Mu6_HTT200er_;
}
const bool &Nano::L1_Mu6_HTT240er() {
    if (!loaded_L1_Mu6_HTT240er_) counter_uncached_L1_Mu6_HTT240er_++;
    else counter_cached_L1_Mu6_HTT240er_++;
    if (!loaded_L1_Mu6_HTT240er_) {
        if (!b_L1_Mu6_HTT240er_) throw std::runtime_error("L1_Mu6_HTT240er branch doesn't exist");
        b_L1_Mu6_HTT240er_->GetEntry(index);
        loaded_L1_Mu6_HTT240er_ = true;
    }
    return L1_Mu6_HTT240er_;
}
const bool &Nano::L1_Mu6_HTT250er() {
    if (!loaded_L1_Mu6_HTT250er_) counter_uncached_L1_Mu6_HTT250er_++;
    else counter_cached_L1_Mu6_HTT250er_++;
    if (!loaded_L1_Mu6_HTT250er_) {
        if (!b_L1_Mu6_HTT250er_) throw std::runtime_error("L1_Mu6_HTT250er branch doesn't exist");
        b_L1_Mu6_HTT250er_->GetEntry(index);
        loaded_L1_Mu6_HTT250er_ = true;
    }
    return L1_Mu6_HTT250er_;
}
const bool &Nano::L1_Mu7_EG20er2p5() {
    if (!loaded_L1_Mu7_EG20er2p5_) counter_uncached_L1_Mu7_EG20er2p5_++;
    else counter_cached_L1_Mu7_EG20er2p5_++;
    if (!loaded_L1_Mu7_EG20er2p5_) {
        if (!b_L1_Mu7_EG20er2p5_) throw std::runtime_error("L1_Mu7_EG20er2p5 branch doesn't exist");
        b_L1_Mu7_EG20er2p5_->GetEntry(index);
        loaded_L1_Mu7_EG20er2p5_ = true;
    }
    return L1_Mu7_EG20er2p5_;
}
const bool &Nano::L1_Mu7_EG23() {
    if (!loaded_L1_Mu7_EG23_) counter_uncached_L1_Mu7_EG23_++;
    else counter_cached_L1_Mu7_EG23_++;
    if (!loaded_L1_Mu7_EG23_) {
        if (!b_L1_Mu7_EG23_) throw std::runtime_error("L1_Mu7_EG23 branch doesn't exist");
        b_L1_Mu7_EG23_->GetEntry(index);
        loaded_L1_Mu7_EG23_ = true;
    }
    return L1_Mu7_EG23_;
}
const bool &Nano::L1_Mu7_EG23er2p5() {
    if (!loaded_L1_Mu7_EG23er2p5_) counter_uncached_L1_Mu7_EG23er2p5_++;
    else counter_cached_L1_Mu7_EG23er2p5_++;
    if (!loaded_L1_Mu7_EG23er2p5_) {
        if (!b_L1_Mu7_EG23er2p5_) throw std::runtime_error("L1_Mu7_EG23er2p5 branch doesn't exist");
        b_L1_Mu7_EG23er2p5_->GetEntry(index);
        loaded_L1_Mu7_EG23er2p5_ = true;
    }
    return L1_Mu7_EG23er2p5_;
}
const bool &Nano::L1_Mu7_IsoEG20() {
    if (!loaded_L1_Mu7_IsoEG20_) counter_uncached_L1_Mu7_IsoEG20_++;
    else counter_cached_L1_Mu7_IsoEG20_++;
    if (!loaded_L1_Mu7_IsoEG20_) {
        if (!b_L1_Mu7_IsoEG20_) throw std::runtime_error("L1_Mu7_IsoEG20 branch doesn't exist");
        b_L1_Mu7_IsoEG20_->GetEntry(index);
        loaded_L1_Mu7_IsoEG20_ = true;
    }
    return L1_Mu7_IsoEG20_;
}
const bool &Nano::L1_Mu7_IsoEG23() {
    if (!loaded_L1_Mu7_IsoEG23_) counter_uncached_L1_Mu7_IsoEG23_++;
    else counter_cached_L1_Mu7_IsoEG23_++;
    if (!loaded_L1_Mu7_IsoEG23_) {
        if (!b_L1_Mu7_IsoEG23_) throw std::runtime_error("L1_Mu7_IsoEG23 branch doesn't exist");
        b_L1_Mu7_IsoEG23_->GetEntry(index);
        loaded_L1_Mu7_IsoEG23_ = true;
    }
    return L1_Mu7_IsoEG23_;
}
const bool &Nano::L1_Mu7_LooseIsoEG20() {
    if (!loaded_L1_Mu7_LooseIsoEG20_) counter_uncached_L1_Mu7_LooseIsoEG20_++;
    else counter_cached_L1_Mu7_LooseIsoEG20_++;
    if (!loaded_L1_Mu7_LooseIsoEG20_) {
        if (!b_L1_Mu7_LooseIsoEG20_) throw std::runtime_error("L1_Mu7_LooseIsoEG20 branch doesn't exist");
        b_L1_Mu7_LooseIsoEG20_->GetEntry(index);
        loaded_L1_Mu7_LooseIsoEG20_ = true;
    }
    return L1_Mu7_LooseIsoEG20_;
}
const bool &Nano::L1_Mu7_LooseIsoEG20er2p5() {
    if (!loaded_L1_Mu7_LooseIsoEG20er2p5_) counter_uncached_L1_Mu7_LooseIsoEG20er2p5_++;
    else counter_cached_L1_Mu7_LooseIsoEG20er2p5_++;
    if (!loaded_L1_Mu7_LooseIsoEG20er2p5_) {
        if (!b_L1_Mu7_LooseIsoEG20er2p5_) throw std::runtime_error("L1_Mu7_LooseIsoEG20er2p5 branch doesn't exist");
        b_L1_Mu7_LooseIsoEG20er2p5_->GetEntry(index);
        loaded_L1_Mu7_LooseIsoEG20er2p5_ = true;
    }
    return L1_Mu7_LooseIsoEG20er2p5_;
}
const bool &Nano::L1_Mu7_LooseIsoEG23() {
    if (!loaded_L1_Mu7_LooseIsoEG23_) counter_uncached_L1_Mu7_LooseIsoEG23_++;
    else counter_cached_L1_Mu7_LooseIsoEG23_++;
    if (!loaded_L1_Mu7_LooseIsoEG23_) {
        if (!b_L1_Mu7_LooseIsoEG23_) throw std::runtime_error("L1_Mu7_LooseIsoEG23 branch doesn't exist");
        b_L1_Mu7_LooseIsoEG23_->GetEntry(index);
        loaded_L1_Mu7_LooseIsoEG23_ = true;
    }
    return L1_Mu7_LooseIsoEG23_;
}
const bool &Nano::L1_Mu7_LooseIsoEG23er2p5() {
    if (!loaded_L1_Mu7_LooseIsoEG23er2p5_) counter_uncached_L1_Mu7_LooseIsoEG23er2p5_++;
    else counter_cached_L1_Mu7_LooseIsoEG23er2p5_++;
    if (!loaded_L1_Mu7_LooseIsoEG23er2p5_) {
        if (!b_L1_Mu7_LooseIsoEG23er2p5_) throw std::runtime_error("L1_Mu7_LooseIsoEG23er2p5 branch doesn't exist");
        b_L1_Mu7_LooseIsoEG23er2p5_->GetEntry(index);
        loaded_L1_Mu7_LooseIsoEG23er2p5_ = true;
    }
    return L1_Mu7_LooseIsoEG23er2p5_;
}
const bool &Nano::L1_Mu8_HTT150() {
    if (!loaded_L1_Mu8_HTT150_) counter_uncached_L1_Mu8_HTT150_++;
    else counter_cached_L1_Mu8_HTT150_++;
    if (!loaded_L1_Mu8_HTT150_) {
        if (!b_L1_Mu8_HTT150_) throw std::runtime_error("L1_Mu8_HTT150 branch doesn't exist");
        b_L1_Mu8_HTT150_->GetEntry(index);
        loaded_L1_Mu8_HTT150_ = true;
    }
    return L1_Mu8_HTT150_;
}
const bool &Nano::L1_Mu8_HTT150er() {
    if (!loaded_L1_Mu8_HTT150er_) counter_uncached_L1_Mu8_HTT150er_++;
    else counter_cached_L1_Mu8_HTT150er_++;
    if (!loaded_L1_Mu8_HTT150er_) {
        if (!b_L1_Mu8_HTT150er_) throw std::runtime_error("L1_Mu8_HTT150er branch doesn't exist");
        b_L1_Mu8_HTT150er_->GetEntry(index);
        loaded_L1_Mu8_HTT150er_ = true;
    }
    return L1_Mu8_HTT150er_;
}
const bool &Nano::L1_NotBptxOR() {
    if (!loaded_L1_NotBptxOR_) counter_uncached_L1_NotBptxOR_++;
    else counter_cached_L1_NotBptxOR_++;
    if (!loaded_L1_NotBptxOR_) {
        if (!b_L1_NotBptxOR_) throw std::runtime_error("L1_NotBptxOR branch doesn't exist");
        b_L1_NotBptxOR_->GetEntry(index);
        loaded_L1_NotBptxOR_ = true;
    }
    return L1_NotBptxOR_;
}
const bool &Nano::L1_QuadJet36er2p5_IsoTau52er2p1() {
    if (!loaded_L1_QuadJet36er2p5_IsoTau52er2p1_) counter_uncached_L1_QuadJet36er2p5_IsoTau52er2p1_++;
    else counter_cached_L1_QuadJet36er2p5_IsoTau52er2p1_++;
    if (!loaded_L1_QuadJet36er2p5_IsoTau52er2p1_) {
        if (!b_L1_QuadJet36er2p5_IsoTau52er2p1_) throw std::runtime_error("L1_QuadJet36er2p5_IsoTau52er2p1 branch doesn't exist");
        b_L1_QuadJet36er2p5_IsoTau52er2p1_->GetEntry(index);
        loaded_L1_QuadJet36er2p5_IsoTau52er2p1_ = true;
    }
    return L1_QuadJet36er2p5_IsoTau52er2p1_;
}
const bool &Nano::L1_QuadJet36er2p7_IsoTau52er2p1() {
    if (!loaded_L1_QuadJet36er2p7_IsoTau52er2p1_) counter_uncached_L1_QuadJet36er2p7_IsoTau52er2p1_++;
    else counter_cached_L1_QuadJet36er2p7_IsoTau52er2p1_++;
    if (!loaded_L1_QuadJet36er2p7_IsoTau52er2p1_) {
        if (!b_L1_QuadJet36er2p7_IsoTau52er2p1_) throw std::runtime_error("L1_QuadJet36er2p7_IsoTau52er2p1 branch doesn't exist");
        b_L1_QuadJet36er2p7_IsoTau52er2p1_->GetEntry(index);
        loaded_L1_QuadJet36er2p7_IsoTau52er2p1_ = true;
    }
    return L1_QuadJet36er2p7_IsoTau52er2p1_;
}
const bool &Nano::L1_QuadJet36er2p7_Tau52() {
    if (!loaded_L1_QuadJet36er2p7_Tau52_) counter_uncached_L1_QuadJet36er2p7_Tau52_++;
    else counter_cached_L1_QuadJet36er2p7_Tau52_++;
    if (!loaded_L1_QuadJet36er2p7_Tau52_) {
        if (!b_L1_QuadJet36er2p7_Tau52_) throw std::runtime_error("L1_QuadJet36er2p7_Tau52 branch doesn't exist");
        b_L1_QuadJet36er2p7_Tau52_->GetEntry(index);
        loaded_L1_QuadJet36er2p7_Tau52_ = true;
    }
    return L1_QuadJet36er2p7_Tau52_;
}
const bool &Nano::L1_QuadJet36er3p0_IsoTau52er2p1() {
    if (!loaded_L1_QuadJet36er3p0_IsoTau52er2p1_) counter_uncached_L1_QuadJet36er3p0_IsoTau52er2p1_++;
    else counter_cached_L1_QuadJet36er3p0_IsoTau52er2p1_++;
    if (!loaded_L1_QuadJet36er3p0_IsoTau52er2p1_) {
        if (!b_L1_QuadJet36er3p0_IsoTau52er2p1_) throw std::runtime_error("L1_QuadJet36er3p0_IsoTau52er2p1 branch doesn't exist");
        b_L1_QuadJet36er3p0_IsoTau52er2p1_->GetEntry(index);
        loaded_L1_QuadJet36er3p0_IsoTau52er2p1_ = true;
    }
    return L1_QuadJet36er3p0_IsoTau52er2p1_;
}
const bool &Nano::L1_QuadJet36er3p0_Tau52() {
    if (!loaded_L1_QuadJet36er3p0_Tau52_) counter_uncached_L1_QuadJet36er3p0_Tau52_++;
    else counter_cached_L1_QuadJet36er3p0_Tau52_++;
    if (!loaded_L1_QuadJet36er3p0_Tau52_) {
        if (!b_L1_QuadJet36er3p0_Tau52_) throw std::runtime_error("L1_QuadJet36er3p0_Tau52 branch doesn't exist");
        b_L1_QuadJet36er3p0_Tau52_->GetEntry(index);
        loaded_L1_QuadJet36er3p0_Tau52_ = true;
    }
    return L1_QuadJet36er3p0_Tau52_;
}
const bool &Nano::L1_QuadJet40er2p7() {
    if (!loaded_L1_QuadJet40er2p7_) counter_uncached_L1_QuadJet40er2p7_++;
    else counter_cached_L1_QuadJet40er2p7_++;
    if (!loaded_L1_QuadJet40er2p7_) {
        if (!b_L1_QuadJet40er2p7_) throw std::runtime_error("L1_QuadJet40er2p7 branch doesn't exist");
        b_L1_QuadJet40er2p7_->GetEntry(index);
        loaded_L1_QuadJet40er2p7_ = true;
    }
    return L1_QuadJet40er2p7_;
}
const bool &Nano::L1_QuadJet40er3p0() {
    if (!loaded_L1_QuadJet40er3p0_) counter_uncached_L1_QuadJet40er3p0_++;
    else counter_cached_L1_QuadJet40er3p0_++;
    if (!loaded_L1_QuadJet40er3p0_) {
        if (!b_L1_QuadJet40er3p0_) throw std::runtime_error("L1_QuadJet40er3p0 branch doesn't exist");
        b_L1_QuadJet40er3p0_->GetEntry(index);
        loaded_L1_QuadJet40er3p0_ = true;
    }
    return L1_QuadJet40er3p0_;
}
const bool &Nano::L1_QuadJet50er2p7() {
    if (!loaded_L1_QuadJet50er2p7_) counter_uncached_L1_QuadJet50er2p7_++;
    else counter_cached_L1_QuadJet50er2p7_++;
    if (!loaded_L1_QuadJet50er2p7_) {
        if (!b_L1_QuadJet50er2p7_) throw std::runtime_error("L1_QuadJet50er2p7 branch doesn't exist");
        b_L1_QuadJet50er2p7_->GetEntry(index);
        loaded_L1_QuadJet50er2p7_ = true;
    }
    return L1_QuadJet50er2p7_;
}
const bool &Nano::L1_QuadJet50er3p0() {
    if (!loaded_L1_QuadJet50er3p0_) counter_uncached_L1_QuadJet50er3p0_++;
    else counter_cached_L1_QuadJet50er3p0_++;
    if (!loaded_L1_QuadJet50er3p0_) {
        if (!b_L1_QuadJet50er3p0_) throw std::runtime_error("L1_QuadJet50er3p0 branch doesn't exist");
        b_L1_QuadJet50er3p0_->GetEntry(index);
        loaded_L1_QuadJet50er3p0_ = true;
    }
    return L1_QuadJet50er3p0_;
}
const bool &Nano::L1_QuadJet60er2p5() {
    if (!loaded_L1_QuadJet60er2p5_) counter_uncached_L1_QuadJet60er2p5_++;
    else counter_cached_L1_QuadJet60er2p5_++;
    if (!loaded_L1_QuadJet60er2p5_) {
        if (!b_L1_QuadJet60er2p5_) throw std::runtime_error("L1_QuadJet60er2p5 branch doesn't exist");
        b_L1_QuadJet60er2p5_->GetEntry(index);
        loaded_L1_QuadJet60er2p5_ = true;
    }
    return L1_QuadJet60er2p5_;
}
const bool &Nano::L1_QuadJet60er2p7() {
    if (!loaded_L1_QuadJet60er2p7_) counter_uncached_L1_QuadJet60er2p7_++;
    else counter_cached_L1_QuadJet60er2p7_++;
    if (!loaded_L1_QuadJet60er2p7_) {
        if (!b_L1_QuadJet60er2p7_) throw std::runtime_error("L1_QuadJet60er2p7 branch doesn't exist");
        b_L1_QuadJet60er2p7_->GetEntry(index);
        loaded_L1_QuadJet60er2p7_ = true;
    }
    return L1_QuadJet60er2p7_;
}
const bool &Nano::L1_QuadJet60er3p0() {
    if (!loaded_L1_QuadJet60er3p0_) counter_uncached_L1_QuadJet60er3p0_++;
    else counter_cached_L1_QuadJet60er3p0_++;
    if (!loaded_L1_QuadJet60er3p0_) {
        if (!b_L1_QuadJet60er3p0_) throw std::runtime_error("L1_QuadJet60er3p0 branch doesn't exist");
        b_L1_QuadJet60er3p0_->GetEntry(index);
        loaded_L1_QuadJet60er3p0_ = true;
    }
    return L1_QuadJet60er3p0_;
}
const bool &Nano::L1_QuadJetC36_Tau52() {
    if (!loaded_L1_QuadJetC36_Tau52_) counter_uncached_L1_QuadJetC36_Tau52_++;
    else counter_cached_L1_QuadJetC36_Tau52_++;
    if (!loaded_L1_QuadJetC36_Tau52_) {
        if (!b_L1_QuadJetC36_Tau52_) throw std::runtime_error("L1_QuadJetC36_Tau52 branch doesn't exist");
        b_L1_QuadJetC36_Tau52_->GetEntry(index);
        loaded_L1_QuadJetC36_Tau52_ = true;
    }
    return L1_QuadJetC36_Tau52_;
}
const bool &Nano::L1_QuadJetC40() {
    if (!loaded_L1_QuadJetC40_) counter_uncached_L1_QuadJetC40_++;
    else counter_cached_L1_QuadJetC40_++;
    if (!loaded_L1_QuadJetC40_) {
        if (!b_L1_QuadJetC40_) throw std::runtime_error("L1_QuadJetC40 branch doesn't exist");
        b_L1_QuadJetC40_->GetEntry(index);
        loaded_L1_QuadJetC40_ = true;
    }
    return L1_QuadJetC40_;
}
const bool &Nano::L1_QuadJetC50() {
    if (!loaded_L1_QuadJetC50_) counter_uncached_L1_QuadJetC50_++;
    else counter_cached_L1_QuadJetC50_++;
    if (!loaded_L1_QuadJetC50_) {
        if (!b_L1_QuadJetC50_) throw std::runtime_error("L1_QuadJetC50 branch doesn't exist");
        b_L1_QuadJetC50_->GetEntry(index);
        loaded_L1_QuadJetC50_ = true;
    }
    return L1_QuadJetC50_;
}
const bool &Nano::L1_QuadJetC60() {
    if (!loaded_L1_QuadJetC60_) counter_uncached_L1_QuadJetC60_++;
    else counter_cached_L1_QuadJetC60_++;
    if (!loaded_L1_QuadJetC60_) {
        if (!b_L1_QuadJetC60_) throw std::runtime_error("L1_QuadJetC60 branch doesn't exist");
        b_L1_QuadJetC60_->GetEntry(index);
        loaded_L1_QuadJetC60_ = true;
    }
    return L1_QuadJetC60_;
}
const bool &Nano::L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0() {
    if (!loaded_L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0_) counter_uncached_L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0_++;
    else counter_cached_L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0_++;
    if (!loaded_L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0_) {
        if (!b_L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0_) throw std::runtime_error("L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0 branch doesn't exist");
        b_L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0_->GetEntry(index);
        loaded_L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0_ = true;
    }
    return L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0_;
}
const bool &Nano::L1_QuadMu0() {
    if (!loaded_L1_QuadMu0_) counter_uncached_L1_QuadMu0_++;
    else counter_cached_L1_QuadMu0_++;
    if (!loaded_L1_QuadMu0_) {
        if (!b_L1_QuadMu0_) throw std::runtime_error("L1_QuadMu0 branch doesn't exist");
        b_L1_QuadMu0_->GetEntry(index);
        loaded_L1_QuadMu0_ = true;
    }
    return L1_QuadMu0_;
}
const bool &Nano::L1_QuadMu0_OQ() {
    if (!loaded_L1_QuadMu0_OQ_) counter_uncached_L1_QuadMu0_OQ_++;
    else counter_cached_L1_QuadMu0_OQ_++;
    if (!loaded_L1_QuadMu0_OQ_) {
        if (!b_L1_QuadMu0_OQ_) throw std::runtime_error("L1_QuadMu0_OQ branch doesn't exist");
        b_L1_QuadMu0_OQ_->GetEntry(index);
        loaded_L1_QuadMu0_OQ_ = true;
    }
    return L1_QuadMu0_OQ_;
}
const bool &Nano::L1_QuadMu0_SQ() {
    if (!loaded_L1_QuadMu0_SQ_) counter_uncached_L1_QuadMu0_SQ_++;
    else counter_cached_L1_QuadMu0_SQ_++;
    if (!loaded_L1_QuadMu0_SQ_) {
        if (!b_L1_QuadMu0_SQ_) throw std::runtime_error("L1_QuadMu0_SQ branch doesn't exist");
        b_L1_QuadMu0_SQ_->GetEntry(index);
        loaded_L1_QuadMu0_SQ_ = true;
    }
    return L1_QuadMu0_SQ_;
}
const bool &Nano::L1_SecondBunchInTrain() {
    if (!loaded_L1_SecondBunchInTrain_) counter_uncached_L1_SecondBunchInTrain_++;
    else counter_cached_L1_SecondBunchInTrain_++;
    if (!loaded_L1_SecondBunchInTrain_) {
        if (!b_L1_SecondBunchInTrain_) throw std::runtime_error("L1_SecondBunchInTrain branch doesn't exist");
        b_L1_SecondBunchInTrain_->GetEntry(index);
        loaded_L1_SecondBunchInTrain_ = true;
    }
    return L1_SecondBunchInTrain_;
}
const bool &Nano::L1_SecondLastBunchInTrain() {
    if (!loaded_L1_SecondLastBunchInTrain_) counter_uncached_L1_SecondLastBunchInTrain_++;
    else counter_cached_L1_SecondLastBunchInTrain_++;
    if (!loaded_L1_SecondLastBunchInTrain_) {
        if (!b_L1_SecondLastBunchInTrain_) throw std::runtime_error("L1_SecondLastBunchInTrain branch doesn't exist");
        b_L1_SecondLastBunchInTrain_->GetEntry(index);
        loaded_L1_SecondLastBunchInTrain_ = true;
    }
    return L1_SecondLastBunchInTrain_;
}
const bool &Nano::L1_SingleEG10() {
    if (!loaded_L1_SingleEG10_) counter_uncached_L1_SingleEG10_++;
    else counter_cached_L1_SingleEG10_++;
    if (!loaded_L1_SingleEG10_) {
        if (!b_L1_SingleEG10_) throw std::runtime_error("L1_SingleEG10 branch doesn't exist");
        b_L1_SingleEG10_->GetEntry(index);
        loaded_L1_SingleEG10_ = true;
    }
    return L1_SingleEG10_;
}
const bool &Nano::L1_SingleEG10er2p5() {
    if (!loaded_L1_SingleEG10er2p5_) counter_uncached_L1_SingleEG10er2p5_++;
    else counter_cached_L1_SingleEG10er2p5_++;
    if (!loaded_L1_SingleEG10er2p5_) {
        if (!b_L1_SingleEG10er2p5_) throw std::runtime_error("L1_SingleEG10er2p5 branch doesn't exist");
        b_L1_SingleEG10er2p5_->GetEntry(index);
        loaded_L1_SingleEG10er2p5_ = true;
    }
    return L1_SingleEG10er2p5_;
}
const bool &Nano::L1_SingleEG15() {
    if (!loaded_L1_SingleEG15_) counter_uncached_L1_SingleEG15_++;
    else counter_cached_L1_SingleEG15_++;
    if (!loaded_L1_SingleEG15_) {
        if (!b_L1_SingleEG15_) throw std::runtime_error("L1_SingleEG15 branch doesn't exist");
        b_L1_SingleEG15_->GetEntry(index);
        loaded_L1_SingleEG15_ = true;
    }
    return L1_SingleEG15_;
}
const bool &Nano::L1_SingleEG15er2p5() {
    if (!loaded_L1_SingleEG15er2p5_) counter_uncached_L1_SingleEG15er2p5_++;
    else counter_cached_L1_SingleEG15er2p5_++;
    if (!loaded_L1_SingleEG15er2p5_) {
        if (!b_L1_SingleEG15er2p5_) throw std::runtime_error("L1_SingleEG15er2p5 branch doesn't exist");
        b_L1_SingleEG15er2p5_->GetEntry(index);
        loaded_L1_SingleEG15er2p5_ = true;
    }
    return L1_SingleEG15er2p5_;
}
const bool &Nano::L1_SingleEG18() {
    if (!loaded_L1_SingleEG18_) counter_uncached_L1_SingleEG18_++;
    else counter_cached_L1_SingleEG18_++;
    if (!loaded_L1_SingleEG18_) {
        if (!b_L1_SingleEG18_) throw std::runtime_error("L1_SingleEG18 branch doesn't exist");
        b_L1_SingleEG18_->GetEntry(index);
        loaded_L1_SingleEG18_ = true;
    }
    return L1_SingleEG18_;
}
const bool &Nano::L1_SingleEG24() {
    if (!loaded_L1_SingleEG24_) counter_uncached_L1_SingleEG24_++;
    else counter_cached_L1_SingleEG24_++;
    if (!loaded_L1_SingleEG24_) {
        if (!b_L1_SingleEG24_) throw std::runtime_error("L1_SingleEG24 branch doesn't exist");
        b_L1_SingleEG24_->GetEntry(index);
        loaded_L1_SingleEG24_ = true;
    }
    return L1_SingleEG24_;
}
const bool &Nano::L1_SingleEG26() {
    if (!loaded_L1_SingleEG26_) counter_uncached_L1_SingleEG26_++;
    else counter_cached_L1_SingleEG26_++;
    if (!loaded_L1_SingleEG26_) {
        if (!b_L1_SingleEG26_) throw std::runtime_error("L1_SingleEG26 branch doesn't exist");
        b_L1_SingleEG26_->GetEntry(index);
        loaded_L1_SingleEG26_ = true;
    }
    return L1_SingleEG26_;
}
const bool &Nano::L1_SingleEG26er2p5() {
    if (!loaded_L1_SingleEG26er2p5_) counter_uncached_L1_SingleEG26er2p5_++;
    else counter_cached_L1_SingleEG26er2p5_++;
    if (!loaded_L1_SingleEG26er2p5_) {
        if (!b_L1_SingleEG26er2p5_) throw std::runtime_error("L1_SingleEG26er2p5 branch doesn't exist");
        b_L1_SingleEG26er2p5_->GetEntry(index);
        loaded_L1_SingleEG26er2p5_ = true;
    }
    return L1_SingleEG26er2p5_;
}
const bool &Nano::L1_SingleEG28() {
    if (!loaded_L1_SingleEG28_) counter_uncached_L1_SingleEG28_++;
    else counter_cached_L1_SingleEG28_++;
    if (!loaded_L1_SingleEG28_) {
        if (!b_L1_SingleEG28_) throw std::runtime_error("L1_SingleEG28 branch doesn't exist");
        b_L1_SingleEG28_->GetEntry(index);
        loaded_L1_SingleEG28_ = true;
    }
    return L1_SingleEG28_;
}
const bool &Nano::L1_SingleEG28_FWD2p5() {
    if (!loaded_L1_SingleEG28_FWD2p5_) counter_uncached_L1_SingleEG28_FWD2p5_++;
    else counter_cached_L1_SingleEG28_FWD2p5_++;
    if (!loaded_L1_SingleEG28_FWD2p5_) {
        if (!b_L1_SingleEG28_FWD2p5_) throw std::runtime_error("L1_SingleEG28_FWD2p5 branch doesn't exist");
        b_L1_SingleEG28_FWD2p5_->GetEntry(index);
        loaded_L1_SingleEG28_FWD2p5_ = true;
    }
    return L1_SingleEG28_FWD2p5_;
}
const bool &Nano::L1_SingleEG28er1p5() {
    if (!loaded_L1_SingleEG28er1p5_) counter_uncached_L1_SingleEG28er1p5_++;
    else counter_cached_L1_SingleEG28er1p5_++;
    if (!loaded_L1_SingleEG28er1p5_) {
        if (!b_L1_SingleEG28er1p5_) throw std::runtime_error("L1_SingleEG28er1p5 branch doesn't exist");
        b_L1_SingleEG28er1p5_->GetEntry(index);
        loaded_L1_SingleEG28er1p5_ = true;
    }
    return L1_SingleEG28er1p5_;
}
const bool &Nano::L1_SingleEG28er2p1() {
    if (!loaded_L1_SingleEG28er2p1_) counter_uncached_L1_SingleEG28er2p1_++;
    else counter_cached_L1_SingleEG28er2p1_++;
    if (!loaded_L1_SingleEG28er2p1_) {
        if (!b_L1_SingleEG28er2p1_) throw std::runtime_error("L1_SingleEG28er2p1 branch doesn't exist");
        b_L1_SingleEG28er2p1_->GetEntry(index);
        loaded_L1_SingleEG28er2p1_ = true;
    }
    return L1_SingleEG28er2p1_;
}
const bool &Nano::L1_SingleEG28er2p5() {
    if (!loaded_L1_SingleEG28er2p5_) counter_uncached_L1_SingleEG28er2p5_++;
    else counter_cached_L1_SingleEG28er2p5_++;
    if (!loaded_L1_SingleEG28er2p5_) {
        if (!b_L1_SingleEG28er2p5_) throw std::runtime_error("L1_SingleEG28er2p5 branch doesn't exist");
        b_L1_SingleEG28er2p5_->GetEntry(index);
        loaded_L1_SingleEG28er2p5_ = true;
    }
    return L1_SingleEG28er2p5_;
}
const bool &Nano::L1_SingleEG2_BptxAND() {
    if (!loaded_L1_SingleEG2_BptxAND_) counter_uncached_L1_SingleEG2_BptxAND_++;
    else counter_cached_L1_SingleEG2_BptxAND_++;
    if (!loaded_L1_SingleEG2_BptxAND_) {
        if (!b_L1_SingleEG2_BptxAND_) throw std::runtime_error("L1_SingleEG2_BptxAND branch doesn't exist");
        b_L1_SingleEG2_BptxAND_->GetEntry(index);
        loaded_L1_SingleEG2_BptxAND_ = true;
    }
    return L1_SingleEG2_BptxAND_;
}
const bool &Nano::L1_SingleEG30() {
    if (!loaded_L1_SingleEG30_) counter_uncached_L1_SingleEG30_++;
    else counter_cached_L1_SingleEG30_++;
    if (!loaded_L1_SingleEG30_) {
        if (!b_L1_SingleEG30_) throw std::runtime_error("L1_SingleEG30 branch doesn't exist");
        b_L1_SingleEG30_->GetEntry(index);
        loaded_L1_SingleEG30_ = true;
    }
    return L1_SingleEG30_;
}
const bool &Nano::L1_SingleEG32() {
    if (!loaded_L1_SingleEG32_) counter_uncached_L1_SingleEG32_++;
    else counter_cached_L1_SingleEG32_++;
    if (!loaded_L1_SingleEG32_) {
        if (!b_L1_SingleEG32_) throw std::runtime_error("L1_SingleEG32 branch doesn't exist");
        b_L1_SingleEG32_->GetEntry(index);
        loaded_L1_SingleEG32_ = true;
    }
    return L1_SingleEG32_;
}
const bool &Nano::L1_SingleEG34() {
    if (!loaded_L1_SingleEG34_) counter_uncached_L1_SingleEG34_++;
    else counter_cached_L1_SingleEG34_++;
    if (!loaded_L1_SingleEG34_) {
        if (!b_L1_SingleEG34_) throw std::runtime_error("L1_SingleEG34 branch doesn't exist");
        b_L1_SingleEG34_->GetEntry(index);
        loaded_L1_SingleEG34_ = true;
    }
    return L1_SingleEG34_;
}
const bool &Nano::L1_SingleEG34er2p1() {
    if (!loaded_L1_SingleEG34er2p1_) counter_uncached_L1_SingleEG34er2p1_++;
    else counter_cached_L1_SingleEG34er2p1_++;
    if (!loaded_L1_SingleEG34er2p1_) {
        if (!b_L1_SingleEG34er2p1_) throw std::runtime_error("L1_SingleEG34er2p1 branch doesn't exist");
        b_L1_SingleEG34er2p1_->GetEntry(index);
        loaded_L1_SingleEG34er2p1_ = true;
    }
    return L1_SingleEG34er2p1_;
}
const bool &Nano::L1_SingleEG34er2p5() {
    if (!loaded_L1_SingleEG34er2p5_) counter_uncached_L1_SingleEG34er2p5_++;
    else counter_cached_L1_SingleEG34er2p5_++;
    if (!loaded_L1_SingleEG34er2p5_) {
        if (!b_L1_SingleEG34er2p5_) throw std::runtime_error("L1_SingleEG34er2p5 branch doesn't exist");
        b_L1_SingleEG34er2p5_->GetEntry(index);
        loaded_L1_SingleEG34er2p5_ = true;
    }
    return L1_SingleEG34er2p5_;
}
const bool &Nano::L1_SingleEG36() {
    if (!loaded_L1_SingleEG36_) counter_uncached_L1_SingleEG36_++;
    else counter_cached_L1_SingleEG36_++;
    if (!loaded_L1_SingleEG36_) {
        if (!b_L1_SingleEG36_) throw std::runtime_error("L1_SingleEG36 branch doesn't exist");
        b_L1_SingleEG36_->GetEntry(index);
        loaded_L1_SingleEG36_ = true;
    }
    return L1_SingleEG36_;
}
const bool &Nano::L1_SingleEG36er2p1() {
    if (!loaded_L1_SingleEG36er2p1_) counter_uncached_L1_SingleEG36er2p1_++;
    else counter_cached_L1_SingleEG36er2p1_++;
    if (!loaded_L1_SingleEG36er2p1_) {
        if (!b_L1_SingleEG36er2p1_) throw std::runtime_error("L1_SingleEG36er2p1 branch doesn't exist");
        b_L1_SingleEG36er2p1_->GetEntry(index);
        loaded_L1_SingleEG36er2p1_ = true;
    }
    return L1_SingleEG36er2p1_;
}
const bool &Nano::L1_SingleEG36er2p5() {
    if (!loaded_L1_SingleEG36er2p5_) counter_uncached_L1_SingleEG36er2p5_++;
    else counter_cached_L1_SingleEG36er2p5_++;
    if (!loaded_L1_SingleEG36er2p5_) {
        if (!b_L1_SingleEG36er2p5_) throw std::runtime_error("L1_SingleEG36er2p5 branch doesn't exist");
        b_L1_SingleEG36er2p5_->GetEntry(index);
        loaded_L1_SingleEG36er2p5_ = true;
    }
    return L1_SingleEG36er2p5_;
}
const bool &Nano::L1_SingleEG38() {
    if (!loaded_L1_SingleEG38_) counter_uncached_L1_SingleEG38_++;
    else counter_cached_L1_SingleEG38_++;
    if (!loaded_L1_SingleEG38_) {
        if (!b_L1_SingleEG38_) throw std::runtime_error("L1_SingleEG38 branch doesn't exist");
        b_L1_SingleEG38_->GetEntry(index);
        loaded_L1_SingleEG38_ = true;
    }
    return L1_SingleEG38_;
}
const bool &Nano::L1_SingleEG38er2p1() {
    if (!loaded_L1_SingleEG38er2p1_) counter_uncached_L1_SingleEG38er2p1_++;
    else counter_cached_L1_SingleEG38er2p1_++;
    if (!loaded_L1_SingleEG38er2p1_) {
        if (!b_L1_SingleEG38er2p1_) throw std::runtime_error("L1_SingleEG38er2p1 branch doesn't exist");
        b_L1_SingleEG38er2p1_->GetEntry(index);
        loaded_L1_SingleEG38er2p1_ = true;
    }
    return L1_SingleEG38er2p1_;
}
const bool &Nano::L1_SingleEG38er2p5() {
    if (!loaded_L1_SingleEG38er2p5_) counter_uncached_L1_SingleEG38er2p5_++;
    else counter_cached_L1_SingleEG38er2p5_++;
    if (!loaded_L1_SingleEG38er2p5_) {
        if (!b_L1_SingleEG38er2p5_) throw std::runtime_error("L1_SingleEG38er2p5 branch doesn't exist");
        b_L1_SingleEG38er2p5_->GetEntry(index);
        loaded_L1_SingleEG38er2p5_ = true;
    }
    return L1_SingleEG38er2p5_;
}
const bool &Nano::L1_SingleEG40() {
    if (!loaded_L1_SingleEG40_) counter_uncached_L1_SingleEG40_++;
    else counter_cached_L1_SingleEG40_++;
    if (!loaded_L1_SingleEG40_) {
        if (!b_L1_SingleEG40_) throw std::runtime_error("L1_SingleEG40 branch doesn't exist");
        b_L1_SingleEG40_->GetEntry(index);
        loaded_L1_SingleEG40_ = true;
    }
    return L1_SingleEG40_;
}
const bool &Nano::L1_SingleEG40er2p5() {
    if (!loaded_L1_SingleEG40er2p5_) counter_uncached_L1_SingleEG40er2p5_++;
    else counter_cached_L1_SingleEG40er2p5_++;
    if (!loaded_L1_SingleEG40er2p5_) {
        if (!b_L1_SingleEG40er2p5_) throw std::runtime_error("L1_SingleEG40er2p5 branch doesn't exist");
        b_L1_SingleEG40er2p5_->GetEntry(index);
        loaded_L1_SingleEG40er2p5_ = true;
    }
    return L1_SingleEG40er2p5_;
}
const bool &Nano::L1_SingleEG42() {
    if (!loaded_L1_SingleEG42_) counter_uncached_L1_SingleEG42_++;
    else counter_cached_L1_SingleEG42_++;
    if (!loaded_L1_SingleEG42_) {
        if (!b_L1_SingleEG42_) throw std::runtime_error("L1_SingleEG42 branch doesn't exist");
        b_L1_SingleEG42_->GetEntry(index);
        loaded_L1_SingleEG42_ = true;
    }
    return L1_SingleEG42_;
}
const bool &Nano::L1_SingleEG42er2p5() {
    if (!loaded_L1_SingleEG42er2p5_) counter_uncached_L1_SingleEG42er2p5_++;
    else counter_cached_L1_SingleEG42er2p5_++;
    if (!loaded_L1_SingleEG42er2p5_) {
        if (!b_L1_SingleEG42er2p5_) throw std::runtime_error("L1_SingleEG42er2p5 branch doesn't exist");
        b_L1_SingleEG42er2p5_->GetEntry(index);
        loaded_L1_SingleEG42er2p5_ = true;
    }
    return L1_SingleEG42er2p5_;
}
const bool &Nano::L1_SingleEG45() {
    if (!loaded_L1_SingleEG45_) counter_uncached_L1_SingleEG45_++;
    else counter_cached_L1_SingleEG45_++;
    if (!loaded_L1_SingleEG45_) {
        if (!b_L1_SingleEG45_) throw std::runtime_error("L1_SingleEG45 branch doesn't exist");
        b_L1_SingleEG45_->GetEntry(index);
        loaded_L1_SingleEG45_ = true;
    }
    return L1_SingleEG45_;
}
const bool &Nano::L1_SingleEG45er2p5() {
    if (!loaded_L1_SingleEG45er2p5_) counter_uncached_L1_SingleEG45er2p5_++;
    else counter_cached_L1_SingleEG45er2p5_++;
    if (!loaded_L1_SingleEG45er2p5_) {
        if (!b_L1_SingleEG45er2p5_) throw std::runtime_error("L1_SingleEG45er2p5 branch doesn't exist");
        b_L1_SingleEG45er2p5_->GetEntry(index);
        loaded_L1_SingleEG45er2p5_ = true;
    }
    return L1_SingleEG45er2p5_;
}
const bool &Nano::L1_SingleEG5() {
    if (!loaded_L1_SingleEG5_) counter_uncached_L1_SingleEG5_++;
    else counter_cached_L1_SingleEG5_++;
    if (!loaded_L1_SingleEG5_) {
        if (!b_L1_SingleEG5_) throw std::runtime_error("L1_SingleEG5 branch doesn't exist");
        b_L1_SingleEG5_->GetEntry(index);
        loaded_L1_SingleEG5_ = true;
    }
    return L1_SingleEG5_;
}
const bool &Nano::L1_SingleEG50() {
    if (!loaded_L1_SingleEG50_) counter_uncached_L1_SingleEG50_++;
    else counter_cached_L1_SingleEG50_++;
    if (!loaded_L1_SingleEG50_) {
        if (!b_L1_SingleEG50_) throw std::runtime_error("L1_SingleEG50 branch doesn't exist");
        b_L1_SingleEG50_->GetEntry(index);
        loaded_L1_SingleEG50_ = true;
    }
    return L1_SingleEG50_;
}
const bool &Nano::L1_SingleEG60() {
    if (!loaded_L1_SingleEG60_) counter_uncached_L1_SingleEG60_++;
    else counter_cached_L1_SingleEG60_++;
    if (!loaded_L1_SingleEG60_) {
        if (!b_L1_SingleEG60_) throw std::runtime_error("L1_SingleEG60 branch doesn't exist");
        b_L1_SingleEG60_->GetEntry(index);
        loaded_L1_SingleEG60_ = true;
    }
    return L1_SingleEG60_;
}
const bool &Nano::L1_SingleEG8er2p5() {
    if (!loaded_L1_SingleEG8er2p5_) counter_uncached_L1_SingleEG8er2p5_++;
    else counter_cached_L1_SingleEG8er2p5_++;
    if (!loaded_L1_SingleEG8er2p5_) {
        if (!b_L1_SingleEG8er2p5_) throw std::runtime_error("L1_SingleEG8er2p5 branch doesn't exist");
        b_L1_SingleEG8er2p5_->GetEntry(index);
        loaded_L1_SingleEG8er2p5_ = true;
    }
    return L1_SingleEG8er2p5_;
}
const bool &Nano::L1_SingleIsoEG18() {
    if (!loaded_L1_SingleIsoEG18_) counter_uncached_L1_SingleIsoEG18_++;
    else counter_cached_L1_SingleIsoEG18_++;
    if (!loaded_L1_SingleIsoEG18_) {
        if (!b_L1_SingleIsoEG18_) throw std::runtime_error("L1_SingleIsoEG18 branch doesn't exist");
        b_L1_SingleIsoEG18_->GetEntry(index);
        loaded_L1_SingleIsoEG18_ = true;
    }
    return L1_SingleIsoEG18_;
}
const bool &Nano::L1_SingleIsoEG18er() {
    if (!loaded_L1_SingleIsoEG18er_) counter_uncached_L1_SingleIsoEG18er_++;
    else counter_cached_L1_SingleIsoEG18er_++;
    if (!loaded_L1_SingleIsoEG18er_) {
        if (!b_L1_SingleIsoEG18er_) throw std::runtime_error("L1_SingleIsoEG18er branch doesn't exist");
        b_L1_SingleIsoEG18er_->GetEntry(index);
        loaded_L1_SingleIsoEG18er_ = true;
    }
    return L1_SingleIsoEG18er_;
}
const bool &Nano::L1_SingleIsoEG18er2p1() {
    if (!loaded_L1_SingleIsoEG18er2p1_) counter_uncached_L1_SingleIsoEG18er2p1_++;
    else counter_cached_L1_SingleIsoEG18er2p1_++;
    if (!loaded_L1_SingleIsoEG18er2p1_) {
        if (!b_L1_SingleIsoEG18er2p1_) throw std::runtime_error("L1_SingleIsoEG18er2p1 branch doesn't exist");
        b_L1_SingleIsoEG18er2p1_->GetEntry(index);
        loaded_L1_SingleIsoEG18er2p1_ = true;
    }
    return L1_SingleIsoEG18er2p1_;
}
const bool &Nano::L1_SingleIsoEG20() {
    if (!loaded_L1_SingleIsoEG20_) counter_uncached_L1_SingleIsoEG20_++;
    else counter_cached_L1_SingleIsoEG20_++;
    if (!loaded_L1_SingleIsoEG20_) {
        if (!b_L1_SingleIsoEG20_) throw std::runtime_error("L1_SingleIsoEG20 branch doesn't exist");
        b_L1_SingleIsoEG20_->GetEntry(index);
        loaded_L1_SingleIsoEG20_ = true;
    }
    return L1_SingleIsoEG20_;
}
const bool &Nano::L1_SingleIsoEG20er() {
    if (!loaded_L1_SingleIsoEG20er_) counter_uncached_L1_SingleIsoEG20er_++;
    else counter_cached_L1_SingleIsoEG20er_++;
    if (!loaded_L1_SingleIsoEG20er_) {
        if (!b_L1_SingleIsoEG20er_) throw std::runtime_error("L1_SingleIsoEG20er branch doesn't exist");
        b_L1_SingleIsoEG20er_->GetEntry(index);
        loaded_L1_SingleIsoEG20er_ = true;
    }
    return L1_SingleIsoEG20er_;
}
const bool &Nano::L1_SingleIsoEG20er2p1() {
    if (!loaded_L1_SingleIsoEG20er2p1_) counter_uncached_L1_SingleIsoEG20er2p1_++;
    else counter_cached_L1_SingleIsoEG20er2p1_++;
    if (!loaded_L1_SingleIsoEG20er2p1_) {
        if (!b_L1_SingleIsoEG20er2p1_) throw std::runtime_error("L1_SingleIsoEG20er2p1 branch doesn't exist");
        b_L1_SingleIsoEG20er2p1_->GetEntry(index);
        loaded_L1_SingleIsoEG20er2p1_ = true;
    }
    return L1_SingleIsoEG20er2p1_;
}
const bool &Nano::L1_SingleIsoEG22() {
    if (!loaded_L1_SingleIsoEG22_) counter_uncached_L1_SingleIsoEG22_++;
    else counter_cached_L1_SingleIsoEG22_++;
    if (!loaded_L1_SingleIsoEG22_) {
        if (!b_L1_SingleIsoEG22_) throw std::runtime_error("L1_SingleIsoEG22 branch doesn't exist");
        b_L1_SingleIsoEG22_->GetEntry(index);
        loaded_L1_SingleIsoEG22_ = true;
    }
    return L1_SingleIsoEG22_;
}
const bool &Nano::L1_SingleIsoEG22er() {
    if (!loaded_L1_SingleIsoEG22er_) counter_uncached_L1_SingleIsoEG22er_++;
    else counter_cached_L1_SingleIsoEG22er_++;
    if (!loaded_L1_SingleIsoEG22er_) {
        if (!b_L1_SingleIsoEG22er_) throw std::runtime_error("L1_SingleIsoEG22er branch doesn't exist");
        b_L1_SingleIsoEG22er_->GetEntry(index);
        loaded_L1_SingleIsoEG22er_ = true;
    }
    return L1_SingleIsoEG22er_;
}
const bool &Nano::L1_SingleIsoEG22er2p1() {
    if (!loaded_L1_SingleIsoEG22er2p1_) counter_uncached_L1_SingleIsoEG22er2p1_++;
    else counter_cached_L1_SingleIsoEG22er2p1_++;
    if (!loaded_L1_SingleIsoEG22er2p1_) {
        if (!b_L1_SingleIsoEG22er2p1_) throw std::runtime_error("L1_SingleIsoEG22er2p1 branch doesn't exist");
        b_L1_SingleIsoEG22er2p1_->GetEntry(index);
        loaded_L1_SingleIsoEG22er2p1_ = true;
    }
    return L1_SingleIsoEG22er2p1_;
}
const bool &Nano::L1_SingleIsoEG24() {
    if (!loaded_L1_SingleIsoEG24_) counter_uncached_L1_SingleIsoEG24_++;
    else counter_cached_L1_SingleIsoEG24_++;
    if (!loaded_L1_SingleIsoEG24_) {
        if (!b_L1_SingleIsoEG24_) throw std::runtime_error("L1_SingleIsoEG24 branch doesn't exist");
        b_L1_SingleIsoEG24_->GetEntry(index);
        loaded_L1_SingleIsoEG24_ = true;
    }
    return L1_SingleIsoEG24_;
}
const bool &Nano::L1_SingleIsoEG24er() {
    if (!loaded_L1_SingleIsoEG24er_) counter_uncached_L1_SingleIsoEG24er_++;
    else counter_cached_L1_SingleIsoEG24er_++;
    if (!loaded_L1_SingleIsoEG24er_) {
        if (!b_L1_SingleIsoEG24er_) throw std::runtime_error("L1_SingleIsoEG24er branch doesn't exist");
        b_L1_SingleIsoEG24er_->GetEntry(index);
        loaded_L1_SingleIsoEG24er_ = true;
    }
    return L1_SingleIsoEG24er_;
}
const bool &Nano::L1_SingleIsoEG24er1p5() {
    if (!loaded_L1_SingleIsoEG24er1p5_) counter_uncached_L1_SingleIsoEG24er1p5_++;
    else counter_cached_L1_SingleIsoEG24er1p5_++;
    if (!loaded_L1_SingleIsoEG24er1p5_) {
        if (!b_L1_SingleIsoEG24er1p5_) throw std::runtime_error("L1_SingleIsoEG24er1p5 branch doesn't exist");
        b_L1_SingleIsoEG24er1p5_->GetEntry(index);
        loaded_L1_SingleIsoEG24er1p5_ = true;
    }
    return L1_SingleIsoEG24er1p5_;
}
const bool &Nano::L1_SingleIsoEG24er2p1() {
    if (!loaded_L1_SingleIsoEG24er2p1_) counter_uncached_L1_SingleIsoEG24er2p1_++;
    else counter_cached_L1_SingleIsoEG24er2p1_++;
    if (!loaded_L1_SingleIsoEG24er2p1_) {
        if (!b_L1_SingleIsoEG24er2p1_) throw std::runtime_error("L1_SingleIsoEG24er2p1 branch doesn't exist");
        b_L1_SingleIsoEG24er2p1_->GetEntry(index);
        loaded_L1_SingleIsoEG24er2p1_ = true;
    }
    return L1_SingleIsoEG24er2p1_;
}
const bool &Nano::L1_SingleIsoEG26() {
    if (!loaded_L1_SingleIsoEG26_) counter_uncached_L1_SingleIsoEG26_++;
    else counter_cached_L1_SingleIsoEG26_++;
    if (!loaded_L1_SingleIsoEG26_) {
        if (!b_L1_SingleIsoEG26_) throw std::runtime_error("L1_SingleIsoEG26 branch doesn't exist");
        b_L1_SingleIsoEG26_->GetEntry(index);
        loaded_L1_SingleIsoEG26_ = true;
    }
    return L1_SingleIsoEG26_;
}
const bool &Nano::L1_SingleIsoEG26er() {
    if (!loaded_L1_SingleIsoEG26er_) counter_uncached_L1_SingleIsoEG26er_++;
    else counter_cached_L1_SingleIsoEG26er_++;
    if (!loaded_L1_SingleIsoEG26er_) {
        if (!b_L1_SingleIsoEG26er_) throw std::runtime_error("L1_SingleIsoEG26er branch doesn't exist");
        b_L1_SingleIsoEG26er_->GetEntry(index);
        loaded_L1_SingleIsoEG26er_ = true;
    }
    return L1_SingleIsoEG26er_;
}
const bool &Nano::L1_SingleIsoEG26er1p5() {
    if (!loaded_L1_SingleIsoEG26er1p5_) counter_uncached_L1_SingleIsoEG26er1p5_++;
    else counter_cached_L1_SingleIsoEG26er1p5_++;
    if (!loaded_L1_SingleIsoEG26er1p5_) {
        if (!b_L1_SingleIsoEG26er1p5_) throw std::runtime_error("L1_SingleIsoEG26er1p5 branch doesn't exist");
        b_L1_SingleIsoEG26er1p5_->GetEntry(index);
        loaded_L1_SingleIsoEG26er1p5_ = true;
    }
    return L1_SingleIsoEG26er1p5_;
}
const bool &Nano::L1_SingleIsoEG26er2p1() {
    if (!loaded_L1_SingleIsoEG26er2p1_) counter_uncached_L1_SingleIsoEG26er2p1_++;
    else counter_cached_L1_SingleIsoEG26er2p1_++;
    if (!loaded_L1_SingleIsoEG26er2p1_) {
        if (!b_L1_SingleIsoEG26er2p1_) throw std::runtime_error("L1_SingleIsoEG26er2p1 branch doesn't exist");
        b_L1_SingleIsoEG26er2p1_->GetEntry(index);
        loaded_L1_SingleIsoEG26er2p1_ = true;
    }
    return L1_SingleIsoEG26er2p1_;
}
const bool &Nano::L1_SingleIsoEG26er2p5() {
    if (!loaded_L1_SingleIsoEG26er2p5_) counter_uncached_L1_SingleIsoEG26er2p5_++;
    else counter_cached_L1_SingleIsoEG26er2p5_++;
    if (!loaded_L1_SingleIsoEG26er2p5_) {
        if (!b_L1_SingleIsoEG26er2p5_) throw std::runtime_error("L1_SingleIsoEG26er2p5 branch doesn't exist");
        b_L1_SingleIsoEG26er2p5_->GetEntry(index);
        loaded_L1_SingleIsoEG26er2p5_ = true;
    }
    return L1_SingleIsoEG26er2p5_;
}
const bool &Nano::L1_SingleIsoEG28() {
    if (!loaded_L1_SingleIsoEG28_) counter_uncached_L1_SingleIsoEG28_++;
    else counter_cached_L1_SingleIsoEG28_++;
    if (!loaded_L1_SingleIsoEG28_) {
        if (!b_L1_SingleIsoEG28_) throw std::runtime_error("L1_SingleIsoEG28 branch doesn't exist");
        b_L1_SingleIsoEG28_->GetEntry(index);
        loaded_L1_SingleIsoEG28_ = true;
    }
    return L1_SingleIsoEG28_;
}
const bool &Nano::L1_SingleIsoEG28_FWD2p5() {
    if (!loaded_L1_SingleIsoEG28_FWD2p5_) counter_uncached_L1_SingleIsoEG28_FWD2p5_++;
    else counter_cached_L1_SingleIsoEG28_FWD2p5_++;
    if (!loaded_L1_SingleIsoEG28_FWD2p5_) {
        if (!b_L1_SingleIsoEG28_FWD2p5_) throw std::runtime_error("L1_SingleIsoEG28_FWD2p5 branch doesn't exist");
        b_L1_SingleIsoEG28_FWD2p5_->GetEntry(index);
        loaded_L1_SingleIsoEG28_FWD2p5_ = true;
    }
    return L1_SingleIsoEG28_FWD2p5_;
}
const bool &Nano::L1_SingleIsoEG28er() {
    if (!loaded_L1_SingleIsoEG28er_) counter_uncached_L1_SingleIsoEG28er_++;
    else counter_cached_L1_SingleIsoEG28er_++;
    if (!loaded_L1_SingleIsoEG28er_) {
        if (!b_L1_SingleIsoEG28er_) throw std::runtime_error("L1_SingleIsoEG28er branch doesn't exist");
        b_L1_SingleIsoEG28er_->GetEntry(index);
        loaded_L1_SingleIsoEG28er_ = true;
    }
    return L1_SingleIsoEG28er_;
}
const bool &Nano::L1_SingleIsoEG28er1p5() {
    if (!loaded_L1_SingleIsoEG28er1p5_) counter_uncached_L1_SingleIsoEG28er1p5_++;
    else counter_cached_L1_SingleIsoEG28er1p5_++;
    if (!loaded_L1_SingleIsoEG28er1p5_) {
        if (!b_L1_SingleIsoEG28er1p5_) throw std::runtime_error("L1_SingleIsoEG28er1p5 branch doesn't exist");
        b_L1_SingleIsoEG28er1p5_->GetEntry(index);
        loaded_L1_SingleIsoEG28er1p5_ = true;
    }
    return L1_SingleIsoEG28er1p5_;
}
const bool &Nano::L1_SingleIsoEG28er2p1() {
    if (!loaded_L1_SingleIsoEG28er2p1_) counter_uncached_L1_SingleIsoEG28er2p1_++;
    else counter_cached_L1_SingleIsoEG28er2p1_++;
    if (!loaded_L1_SingleIsoEG28er2p1_) {
        if (!b_L1_SingleIsoEG28er2p1_) throw std::runtime_error("L1_SingleIsoEG28er2p1 branch doesn't exist");
        b_L1_SingleIsoEG28er2p1_->GetEntry(index);
        loaded_L1_SingleIsoEG28er2p1_ = true;
    }
    return L1_SingleIsoEG28er2p1_;
}
const bool &Nano::L1_SingleIsoEG28er2p5() {
    if (!loaded_L1_SingleIsoEG28er2p5_) counter_uncached_L1_SingleIsoEG28er2p5_++;
    else counter_cached_L1_SingleIsoEG28er2p5_++;
    if (!loaded_L1_SingleIsoEG28er2p5_) {
        if (!b_L1_SingleIsoEG28er2p5_) throw std::runtime_error("L1_SingleIsoEG28er2p5 branch doesn't exist");
        b_L1_SingleIsoEG28er2p5_->GetEntry(index);
        loaded_L1_SingleIsoEG28er2p5_ = true;
    }
    return L1_SingleIsoEG28er2p5_;
}
const bool &Nano::L1_SingleIsoEG30() {
    if (!loaded_L1_SingleIsoEG30_) counter_uncached_L1_SingleIsoEG30_++;
    else counter_cached_L1_SingleIsoEG30_++;
    if (!loaded_L1_SingleIsoEG30_) {
        if (!b_L1_SingleIsoEG30_) throw std::runtime_error("L1_SingleIsoEG30 branch doesn't exist");
        b_L1_SingleIsoEG30_->GetEntry(index);
        loaded_L1_SingleIsoEG30_ = true;
    }
    return L1_SingleIsoEG30_;
}
const bool &Nano::L1_SingleIsoEG30er() {
    if (!loaded_L1_SingleIsoEG30er_) counter_uncached_L1_SingleIsoEG30er_++;
    else counter_cached_L1_SingleIsoEG30er_++;
    if (!loaded_L1_SingleIsoEG30er_) {
        if (!b_L1_SingleIsoEG30er_) throw std::runtime_error("L1_SingleIsoEG30er branch doesn't exist");
        b_L1_SingleIsoEG30er_->GetEntry(index);
        loaded_L1_SingleIsoEG30er_ = true;
    }
    return L1_SingleIsoEG30er_;
}
const bool &Nano::L1_SingleIsoEG30er2p1() {
    if (!loaded_L1_SingleIsoEG30er2p1_) counter_uncached_L1_SingleIsoEG30er2p1_++;
    else counter_cached_L1_SingleIsoEG30er2p1_++;
    if (!loaded_L1_SingleIsoEG30er2p1_) {
        if (!b_L1_SingleIsoEG30er2p1_) throw std::runtime_error("L1_SingleIsoEG30er2p1 branch doesn't exist");
        b_L1_SingleIsoEG30er2p1_->GetEntry(index);
        loaded_L1_SingleIsoEG30er2p1_ = true;
    }
    return L1_SingleIsoEG30er2p1_;
}
const bool &Nano::L1_SingleIsoEG30er2p5() {
    if (!loaded_L1_SingleIsoEG30er2p5_) counter_uncached_L1_SingleIsoEG30er2p5_++;
    else counter_cached_L1_SingleIsoEG30er2p5_++;
    if (!loaded_L1_SingleIsoEG30er2p5_) {
        if (!b_L1_SingleIsoEG30er2p5_) throw std::runtime_error("L1_SingleIsoEG30er2p5 branch doesn't exist");
        b_L1_SingleIsoEG30er2p5_->GetEntry(index);
        loaded_L1_SingleIsoEG30er2p5_ = true;
    }
    return L1_SingleIsoEG30er2p5_;
}
const bool &Nano::L1_SingleIsoEG32() {
    if (!loaded_L1_SingleIsoEG32_) counter_uncached_L1_SingleIsoEG32_++;
    else counter_cached_L1_SingleIsoEG32_++;
    if (!loaded_L1_SingleIsoEG32_) {
        if (!b_L1_SingleIsoEG32_) throw std::runtime_error("L1_SingleIsoEG32 branch doesn't exist");
        b_L1_SingleIsoEG32_->GetEntry(index);
        loaded_L1_SingleIsoEG32_ = true;
    }
    return L1_SingleIsoEG32_;
}
const bool &Nano::L1_SingleIsoEG32er() {
    if (!loaded_L1_SingleIsoEG32er_) counter_uncached_L1_SingleIsoEG32er_++;
    else counter_cached_L1_SingleIsoEG32er_++;
    if (!loaded_L1_SingleIsoEG32er_) {
        if (!b_L1_SingleIsoEG32er_) throw std::runtime_error("L1_SingleIsoEG32er branch doesn't exist");
        b_L1_SingleIsoEG32er_->GetEntry(index);
        loaded_L1_SingleIsoEG32er_ = true;
    }
    return L1_SingleIsoEG32er_;
}
const bool &Nano::L1_SingleIsoEG32er2p1() {
    if (!loaded_L1_SingleIsoEG32er2p1_) counter_uncached_L1_SingleIsoEG32er2p1_++;
    else counter_cached_L1_SingleIsoEG32er2p1_++;
    if (!loaded_L1_SingleIsoEG32er2p1_) {
        if (!b_L1_SingleIsoEG32er2p1_) throw std::runtime_error("L1_SingleIsoEG32er2p1 branch doesn't exist");
        b_L1_SingleIsoEG32er2p1_->GetEntry(index);
        loaded_L1_SingleIsoEG32er2p1_ = true;
    }
    return L1_SingleIsoEG32er2p1_;
}
const bool &Nano::L1_SingleIsoEG32er2p5() {
    if (!loaded_L1_SingleIsoEG32er2p5_) counter_uncached_L1_SingleIsoEG32er2p5_++;
    else counter_cached_L1_SingleIsoEG32er2p5_++;
    if (!loaded_L1_SingleIsoEG32er2p5_) {
        if (!b_L1_SingleIsoEG32er2p5_) throw std::runtime_error("L1_SingleIsoEG32er2p5 branch doesn't exist");
        b_L1_SingleIsoEG32er2p5_->GetEntry(index);
        loaded_L1_SingleIsoEG32er2p5_ = true;
    }
    return L1_SingleIsoEG32er2p5_;
}
const bool &Nano::L1_SingleIsoEG33er2p1() {
    if (!loaded_L1_SingleIsoEG33er2p1_) counter_uncached_L1_SingleIsoEG33er2p1_++;
    else counter_cached_L1_SingleIsoEG33er2p1_++;
    if (!loaded_L1_SingleIsoEG33er2p1_) {
        if (!b_L1_SingleIsoEG33er2p1_) throw std::runtime_error("L1_SingleIsoEG33er2p1 branch doesn't exist");
        b_L1_SingleIsoEG33er2p1_->GetEntry(index);
        loaded_L1_SingleIsoEG33er2p1_ = true;
    }
    return L1_SingleIsoEG33er2p1_;
}
const bool &Nano::L1_SingleIsoEG34() {
    if (!loaded_L1_SingleIsoEG34_) counter_uncached_L1_SingleIsoEG34_++;
    else counter_cached_L1_SingleIsoEG34_++;
    if (!loaded_L1_SingleIsoEG34_) {
        if (!b_L1_SingleIsoEG34_) throw std::runtime_error("L1_SingleIsoEG34 branch doesn't exist");
        b_L1_SingleIsoEG34_->GetEntry(index);
        loaded_L1_SingleIsoEG34_ = true;
    }
    return L1_SingleIsoEG34_;
}
const bool &Nano::L1_SingleIsoEG34er() {
    if (!loaded_L1_SingleIsoEG34er_) counter_uncached_L1_SingleIsoEG34er_++;
    else counter_cached_L1_SingleIsoEG34er_++;
    if (!loaded_L1_SingleIsoEG34er_) {
        if (!b_L1_SingleIsoEG34er_) throw std::runtime_error("L1_SingleIsoEG34er branch doesn't exist");
        b_L1_SingleIsoEG34er_->GetEntry(index);
        loaded_L1_SingleIsoEG34er_ = true;
    }
    return L1_SingleIsoEG34er_;
}
const bool &Nano::L1_SingleIsoEG34er2p1() {
    if (!loaded_L1_SingleIsoEG34er2p1_) counter_uncached_L1_SingleIsoEG34er2p1_++;
    else counter_cached_L1_SingleIsoEG34er2p1_++;
    if (!loaded_L1_SingleIsoEG34er2p1_) {
        if (!b_L1_SingleIsoEG34er2p1_) throw std::runtime_error("L1_SingleIsoEG34er2p1 branch doesn't exist");
        b_L1_SingleIsoEG34er2p1_->GetEntry(index);
        loaded_L1_SingleIsoEG34er2p1_ = true;
    }
    return L1_SingleIsoEG34er2p1_;
}
const bool &Nano::L1_SingleIsoEG34er2p5() {
    if (!loaded_L1_SingleIsoEG34er2p5_) counter_uncached_L1_SingleIsoEG34er2p5_++;
    else counter_cached_L1_SingleIsoEG34er2p5_++;
    if (!loaded_L1_SingleIsoEG34er2p5_) {
        if (!b_L1_SingleIsoEG34er2p5_) throw std::runtime_error("L1_SingleIsoEG34er2p5 branch doesn't exist");
        b_L1_SingleIsoEG34er2p5_->GetEntry(index);
        loaded_L1_SingleIsoEG34er2p5_ = true;
    }
    return L1_SingleIsoEG34er2p5_;
}
const bool &Nano::L1_SingleIsoEG35() {
    if (!loaded_L1_SingleIsoEG35_) counter_uncached_L1_SingleIsoEG35_++;
    else counter_cached_L1_SingleIsoEG35_++;
    if (!loaded_L1_SingleIsoEG35_) {
        if (!b_L1_SingleIsoEG35_) throw std::runtime_error("L1_SingleIsoEG35 branch doesn't exist");
        b_L1_SingleIsoEG35_->GetEntry(index);
        loaded_L1_SingleIsoEG35_ = true;
    }
    return L1_SingleIsoEG35_;
}
const bool &Nano::L1_SingleIsoEG35er2p1() {
    if (!loaded_L1_SingleIsoEG35er2p1_) counter_uncached_L1_SingleIsoEG35er2p1_++;
    else counter_cached_L1_SingleIsoEG35er2p1_++;
    if (!loaded_L1_SingleIsoEG35er2p1_) {
        if (!b_L1_SingleIsoEG35er2p1_) throw std::runtime_error("L1_SingleIsoEG35er2p1 branch doesn't exist");
        b_L1_SingleIsoEG35er2p1_->GetEntry(index);
        loaded_L1_SingleIsoEG35er2p1_ = true;
    }
    return L1_SingleIsoEG35er2p1_;
}
const bool &Nano::L1_SingleIsoEG36() {
    if (!loaded_L1_SingleIsoEG36_) counter_uncached_L1_SingleIsoEG36_++;
    else counter_cached_L1_SingleIsoEG36_++;
    if (!loaded_L1_SingleIsoEG36_) {
        if (!b_L1_SingleIsoEG36_) throw std::runtime_error("L1_SingleIsoEG36 branch doesn't exist");
        b_L1_SingleIsoEG36_->GetEntry(index);
        loaded_L1_SingleIsoEG36_ = true;
    }
    return L1_SingleIsoEG36_;
}
const bool &Nano::L1_SingleIsoEG36er2p1() {
    if (!loaded_L1_SingleIsoEG36er2p1_) counter_uncached_L1_SingleIsoEG36er2p1_++;
    else counter_cached_L1_SingleIsoEG36er2p1_++;
    if (!loaded_L1_SingleIsoEG36er2p1_) {
        if (!b_L1_SingleIsoEG36er2p1_) throw std::runtime_error("L1_SingleIsoEG36er2p1 branch doesn't exist");
        b_L1_SingleIsoEG36er2p1_->GetEntry(index);
        loaded_L1_SingleIsoEG36er2p1_ = true;
    }
    return L1_SingleIsoEG36er2p1_;
}
const bool &Nano::L1_SingleIsoEG37() {
    if (!loaded_L1_SingleIsoEG37_) counter_uncached_L1_SingleIsoEG37_++;
    else counter_cached_L1_SingleIsoEG37_++;
    if (!loaded_L1_SingleIsoEG37_) {
        if (!b_L1_SingleIsoEG37_) throw std::runtime_error("L1_SingleIsoEG37 branch doesn't exist");
        b_L1_SingleIsoEG37_->GetEntry(index);
        loaded_L1_SingleIsoEG37_ = true;
    }
    return L1_SingleIsoEG37_;
}
const bool &Nano::L1_SingleIsoEG38() {
    if (!loaded_L1_SingleIsoEG38_) counter_uncached_L1_SingleIsoEG38_++;
    else counter_cached_L1_SingleIsoEG38_++;
    if (!loaded_L1_SingleIsoEG38_) {
        if (!b_L1_SingleIsoEG38_) throw std::runtime_error("L1_SingleIsoEG38 branch doesn't exist");
        b_L1_SingleIsoEG38_->GetEntry(index);
        loaded_L1_SingleIsoEG38_ = true;
    }
    return L1_SingleIsoEG38_;
}
const bool &Nano::L1_SingleIsoEG38er2p1() {
    if (!loaded_L1_SingleIsoEG38er2p1_) counter_uncached_L1_SingleIsoEG38er2p1_++;
    else counter_cached_L1_SingleIsoEG38er2p1_++;
    if (!loaded_L1_SingleIsoEG38er2p1_) {
        if (!b_L1_SingleIsoEG38er2p1_) throw std::runtime_error("L1_SingleIsoEG38er2p1 branch doesn't exist");
        b_L1_SingleIsoEG38er2p1_->GetEntry(index);
        loaded_L1_SingleIsoEG38er2p1_ = true;
    }
    return L1_SingleIsoEG38er2p1_;
}
const bool &Nano::L1_SingleIsoEG40() {
    if (!loaded_L1_SingleIsoEG40_) counter_uncached_L1_SingleIsoEG40_++;
    else counter_cached_L1_SingleIsoEG40_++;
    if (!loaded_L1_SingleIsoEG40_) {
        if (!b_L1_SingleIsoEG40_) throw std::runtime_error("L1_SingleIsoEG40 branch doesn't exist");
        b_L1_SingleIsoEG40_->GetEntry(index);
        loaded_L1_SingleIsoEG40_ = true;
    }
    return L1_SingleIsoEG40_;
}
const bool &Nano::L1_SingleIsoEG40er2p1() {
    if (!loaded_L1_SingleIsoEG40er2p1_) counter_uncached_L1_SingleIsoEG40er2p1_++;
    else counter_cached_L1_SingleIsoEG40er2p1_++;
    if (!loaded_L1_SingleIsoEG40er2p1_) {
        if (!b_L1_SingleIsoEG40er2p1_) throw std::runtime_error("L1_SingleIsoEG40er2p1 branch doesn't exist");
        b_L1_SingleIsoEG40er2p1_->GetEntry(index);
        loaded_L1_SingleIsoEG40er2p1_ = true;
    }
    return L1_SingleIsoEG40er2p1_;
}
const bool &Nano::L1_SingleIsoTau32er2p1() {
    if (!loaded_L1_SingleIsoTau32er2p1_) counter_uncached_L1_SingleIsoTau32er2p1_++;
    else counter_cached_L1_SingleIsoTau32er2p1_++;
    if (!loaded_L1_SingleIsoTau32er2p1_) {
        if (!b_L1_SingleIsoTau32er2p1_) throw std::runtime_error("L1_SingleIsoTau32er2p1 branch doesn't exist");
        b_L1_SingleIsoTau32er2p1_->GetEntry(index);
        loaded_L1_SingleIsoTau32er2p1_ = true;
    }
    return L1_SingleIsoTau32er2p1_;
}
const bool &Nano::L1_SingleJet10erHE() {
    if (!loaded_L1_SingleJet10erHE_) counter_uncached_L1_SingleJet10erHE_++;
    else counter_cached_L1_SingleJet10erHE_++;
    if (!loaded_L1_SingleJet10erHE_) {
        if (!b_L1_SingleJet10erHE_) throw std::runtime_error("L1_SingleJet10erHE branch doesn't exist");
        b_L1_SingleJet10erHE_->GetEntry(index);
        loaded_L1_SingleJet10erHE_ = true;
    }
    return L1_SingleJet10erHE_;
}
const bool &Nano::L1_SingleJet12() {
    if (!loaded_L1_SingleJet12_) counter_uncached_L1_SingleJet12_++;
    else counter_cached_L1_SingleJet12_++;
    if (!loaded_L1_SingleJet12_) {
        if (!b_L1_SingleJet12_) throw std::runtime_error("L1_SingleJet12 branch doesn't exist");
        b_L1_SingleJet12_->GetEntry(index);
        loaded_L1_SingleJet12_ = true;
    }
    return L1_SingleJet12_;
}
const bool &Nano::L1_SingleJet120() {
    if (!loaded_L1_SingleJet120_) counter_uncached_L1_SingleJet120_++;
    else counter_cached_L1_SingleJet120_++;
    if (!loaded_L1_SingleJet120_) {
        if (!b_L1_SingleJet120_) throw std::runtime_error("L1_SingleJet120 branch doesn't exist");
        b_L1_SingleJet120_->GetEntry(index);
        loaded_L1_SingleJet120_ = true;
    }
    return L1_SingleJet120_;
}
const bool &Nano::L1_SingleJet120_FWD() {
    if (!loaded_L1_SingleJet120_FWD_) counter_uncached_L1_SingleJet120_FWD_++;
    else counter_cached_L1_SingleJet120_FWD_++;
    if (!loaded_L1_SingleJet120_FWD_) {
        if (!b_L1_SingleJet120_FWD_) throw std::runtime_error("L1_SingleJet120_FWD branch doesn't exist");
        b_L1_SingleJet120_FWD_->GetEntry(index);
        loaded_L1_SingleJet120_FWD_ = true;
    }
    return L1_SingleJet120_FWD_;
}
const bool &Nano::L1_SingleJet120_FWD3p0() {
    if (!loaded_L1_SingleJet120_FWD3p0_) counter_uncached_L1_SingleJet120_FWD3p0_++;
    else counter_cached_L1_SingleJet120_FWD3p0_++;
    if (!loaded_L1_SingleJet120_FWD3p0_) {
        if (!b_L1_SingleJet120_FWD3p0_) throw std::runtime_error("L1_SingleJet120_FWD3p0 branch doesn't exist");
        b_L1_SingleJet120_FWD3p0_->GetEntry(index);
        loaded_L1_SingleJet120_FWD3p0_ = true;
    }
    return L1_SingleJet120_FWD3p0_;
}
const bool &Nano::L1_SingleJet120er2p5() {
    if (!loaded_L1_SingleJet120er2p5_) counter_uncached_L1_SingleJet120er2p5_++;
    else counter_cached_L1_SingleJet120er2p5_++;
    if (!loaded_L1_SingleJet120er2p5_) {
        if (!b_L1_SingleJet120er2p5_) throw std::runtime_error("L1_SingleJet120er2p5 branch doesn't exist");
        b_L1_SingleJet120er2p5_->GetEntry(index);
        loaded_L1_SingleJet120er2p5_ = true;
    }
    return L1_SingleJet120er2p5_;
}
const bool &Nano::L1_SingleJet12_BptxAND() {
    if (!loaded_L1_SingleJet12_BptxAND_) counter_uncached_L1_SingleJet12_BptxAND_++;
    else counter_cached_L1_SingleJet12_BptxAND_++;
    if (!loaded_L1_SingleJet12_BptxAND_) {
        if (!b_L1_SingleJet12_BptxAND_) throw std::runtime_error("L1_SingleJet12_BptxAND branch doesn't exist");
        b_L1_SingleJet12_BptxAND_->GetEntry(index);
        loaded_L1_SingleJet12_BptxAND_ = true;
    }
    return L1_SingleJet12_BptxAND_;
}
const bool &Nano::L1_SingleJet12erHE() {
    if (!loaded_L1_SingleJet12erHE_) counter_uncached_L1_SingleJet12erHE_++;
    else counter_cached_L1_SingleJet12erHE_++;
    if (!loaded_L1_SingleJet12erHE_) {
        if (!b_L1_SingleJet12erHE_) throw std::runtime_error("L1_SingleJet12erHE branch doesn't exist");
        b_L1_SingleJet12erHE_->GetEntry(index);
        loaded_L1_SingleJet12erHE_ = true;
    }
    return L1_SingleJet12erHE_;
}
const bool &Nano::L1_SingleJet140() {
    if (!loaded_L1_SingleJet140_) counter_uncached_L1_SingleJet140_++;
    else counter_cached_L1_SingleJet140_++;
    if (!loaded_L1_SingleJet140_) {
        if (!b_L1_SingleJet140_) throw std::runtime_error("L1_SingleJet140 branch doesn't exist");
        b_L1_SingleJet140_->GetEntry(index);
        loaded_L1_SingleJet140_ = true;
    }
    return L1_SingleJet140_;
}
const bool &Nano::L1_SingleJet140er2p5() {
    if (!loaded_L1_SingleJet140er2p5_) counter_uncached_L1_SingleJet140er2p5_++;
    else counter_cached_L1_SingleJet140er2p5_++;
    if (!loaded_L1_SingleJet140er2p5_) {
        if (!b_L1_SingleJet140er2p5_) throw std::runtime_error("L1_SingleJet140er2p5 branch doesn't exist");
        b_L1_SingleJet140er2p5_->GetEntry(index);
        loaded_L1_SingleJet140er2p5_ = true;
    }
    return L1_SingleJet140er2p5_;
}
const bool &Nano::L1_SingleJet140er2p5_ETMHF70() {
    if (!loaded_L1_SingleJet140er2p5_ETMHF70_) counter_uncached_L1_SingleJet140er2p5_ETMHF70_++;
    else counter_cached_L1_SingleJet140er2p5_ETMHF70_++;
    if (!loaded_L1_SingleJet140er2p5_ETMHF70_) {
        if (!b_L1_SingleJet140er2p5_ETMHF70_) throw std::runtime_error("L1_SingleJet140er2p5_ETMHF70 branch doesn't exist");
        b_L1_SingleJet140er2p5_ETMHF70_->GetEntry(index);
        loaded_L1_SingleJet140er2p5_ETMHF70_ = true;
    }
    return L1_SingleJet140er2p5_ETMHF70_;
}
const bool &Nano::L1_SingleJet140er2p5_ETMHF80() {
    if (!loaded_L1_SingleJet140er2p5_ETMHF80_) counter_uncached_L1_SingleJet140er2p5_ETMHF80_++;
    else counter_cached_L1_SingleJet140er2p5_ETMHF80_++;
    if (!loaded_L1_SingleJet140er2p5_ETMHF80_) {
        if (!b_L1_SingleJet140er2p5_ETMHF80_) throw std::runtime_error("L1_SingleJet140er2p5_ETMHF80 branch doesn't exist");
        b_L1_SingleJet140er2p5_ETMHF80_->GetEntry(index);
        loaded_L1_SingleJet140er2p5_ETMHF80_ = true;
    }
    return L1_SingleJet140er2p5_ETMHF80_;
}
const bool &Nano::L1_SingleJet140er2p5_ETMHF90() {
    if (!loaded_L1_SingleJet140er2p5_ETMHF90_) counter_uncached_L1_SingleJet140er2p5_ETMHF90_++;
    else counter_cached_L1_SingleJet140er2p5_ETMHF90_++;
    if (!loaded_L1_SingleJet140er2p5_ETMHF90_) {
        if (!b_L1_SingleJet140er2p5_ETMHF90_) throw std::runtime_error("L1_SingleJet140er2p5_ETMHF90 branch doesn't exist");
        b_L1_SingleJet140er2p5_ETMHF90_->GetEntry(index);
        loaded_L1_SingleJet140er2p5_ETMHF90_ = true;
    }
    return L1_SingleJet140er2p5_ETMHF90_;
}
const bool &Nano::L1_SingleJet150() {
    if (!loaded_L1_SingleJet150_) counter_uncached_L1_SingleJet150_++;
    else counter_cached_L1_SingleJet150_++;
    if (!loaded_L1_SingleJet150_) {
        if (!b_L1_SingleJet150_) throw std::runtime_error("L1_SingleJet150 branch doesn't exist");
        b_L1_SingleJet150_->GetEntry(index);
        loaded_L1_SingleJet150_ = true;
    }
    return L1_SingleJet150_;
}
const bool &Nano::L1_SingleJet16() {
    if (!loaded_L1_SingleJet16_) counter_uncached_L1_SingleJet16_++;
    else counter_cached_L1_SingleJet16_++;
    if (!loaded_L1_SingleJet16_) {
        if (!b_L1_SingleJet16_) throw std::runtime_error("L1_SingleJet16 branch doesn't exist");
        b_L1_SingleJet16_->GetEntry(index);
        loaded_L1_SingleJet16_ = true;
    }
    return L1_SingleJet16_;
}
const bool &Nano::L1_SingleJet160() {
    if (!loaded_L1_SingleJet160_) counter_uncached_L1_SingleJet160_++;
    else counter_cached_L1_SingleJet160_++;
    if (!loaded_L1_SingleJet160_) {
        if (!b_L1_SingleJet160_) throw std::runtime_error("L1_SingleJet160 branch doesn't exist");
        b_L1_SingleJet160_->GetEntry(index);
        loaded_L1_SingleJet160_ = true;
    }
    return L1_SingleJet160_;
}
const bool &Nano::L1_SingleJet160er2p5() {
    if (!loaded_L1_SingleJet160er2p5_) counter_uncached_L1_SingleJet160er2p5_++;
    else counter_cached_L1_SingleJet160er2p5_++;
    if (!loaded_L1_SingleJet160er2p5_) {
        if (!b_L1_SingleJet160er2p5_) throw std::runtime_error("L1_SingleJet160er2p5 branch doesn't exist");
        b_L1_SingleJet160er2p5_->GetEntry(index);
        loaded_L1_SingleJet160er2p5_ = true;
    }
    return L1_SingleJet160er2p5_;
}
const bool &Nano::L1_SingleJet170() {
    if (!loaded_L1_SingleJet170_) counter_uncached_L1_SingleJet170_++;
    else counter_cached_L1_SingleJet170_++;
    if (!loaded_L1_SingleJet170_) {
        if (!b_L1_SingleJet170_) throw std::runtime_error("L1_SingleJet170 branch doesn't exist");
        b_L1_SingleJet170_->GetEntry(index);
        loaded_L1_SingleJet170_ = true;
    }
    return L1_SingleJet170_;
}
const bool &Nano::L1_SingleJet180() {
    if (!loaded_L1_SingleJet180_) counter_uncached_L1_SingleJet180_++;
    else counter_cached_L1_SingleJet180_++;
    if (!loaded_L1_SingleJet180_) {
        if (!b_L1_SingleJet180_) throw std::runtime_error("L1_SingleJet180 branch doesn't exist");
        b_L1_SingleJet180_->GetEntry(index);
        loaded_L1_SingleJet180_ = true;
    }
    return L1_SingleJet180_;
}
const bool &Nano::L1_SingleJet180er2p5() {
    if (!loaded_L1_SingleJet180er2p5_) counter_uncached_L1_SingleJet180er2p5_++;
    else counter_cached_L1_SingleJet180er2p5_++;
    if (!loaded_L1_SingleJet180er2p5_) {
        if (!b_L1_SingleJet180er2p5_) throw std::runtime_error("L1_SingleJet180er2p5 branch doesn't exist");
        b_L1_SingleJet180er2p5_->GetEntry(index);
        loaded_L1_SingleJet180er2p5_ = true;
    }
    return L1_SingleJet180er2p5_;
}
const bool &Nano::L1_SingleJet20() {
    if (!loaded_L1_SingleJet20_) counter_uncached_L1_SingleJet20_++;
    else counter_cached_L1_SingleJet20_++;
    if (!loaded_L1_SingleJet20_) {
        if (!b_L1_SingleJet20_) throw std::runtime_error("L1_SingleJet20 branch doesn't exist");
        b_L1_SingleJet20_->GetEntry(index);
        loaded_L1_SingleJet20_ = true;
    }
    return L1_SingleJet20_;
}
const bool &Nano::L1_SingleJet200() {
    if (!loaded_L1_SingleJet200_) counter_uncached_L1_SingleJet200_++;
    else counter_cached_L1_SingleJet200_++;
    if (!loaded_L1_SingleJet200_) {
        if (!b_L1_SingleJet200_) throw std::runtime_error("L1_SingleJet200 branch doesn't exist");
        b_L1_SingleJet200_->GetEntry(index);
        loaded_L1_SingleJet200_ = true;
    }
    return L1_SingleJet200_;
}
const bool &Nano::L1_SingleJet20er2p5_NotBptxOR() {
    if (!loaded_L1_SingleJet20er2p5_NotBptxOR_) counter_uncached_L1_SingleJet20er2p5_NotBptxOR_++;
    else counter_cached_L1_SingleJet20er2p5_NotBptxOR_++;
    if (!loaded_L1_SingleJet20er2p5_NotBptxOR_) {
        if (!b_L1_SingleJet20er2p5_NotBptxOR_) throw std::runtime_error("L1_SingleJet20er2p5_NotBptxOR branch doesn't exist");
        b_L1_SingleJet20er2p5_NotBptxOR_->GetEntry(index);
        loaded_L1_SingleJet20er2p5_NotBptxOR_ = true;
    }
    return L1_SingleJet20er2p5_NotBptxOR_;
}
const bool &Nano::L1_SingleJet20er2p5_NotBptxOR_3BX() {
    if (!loaded_L1_SingleJet20er2p5_NotBptxOR_3BX_) counter_uncached_L1_SingleJet20er2p5_NotBptxOR_3BX_++;
    else counter_cached_L1_SingleJet20er2p5_NotBptxOR_3BX_++;
    if (!loaded_L1_SingleJet20er2p5_NotBptxOR_3BX_) {
        if (!b_L1_SingleJet20er2p5_NotBptxOR_3BX_) throw std::runtime_error("L1_SingleJet20er2p5_NotBptxOR_3BX branch doesn't exist");
        b_L1_SingleJet20er2p5_NotBptxOR_3BX_->GetEntry(index);
        loaded_L1_SingleJet20er2p5_NotBptxOR_3BX_ = true;
    }
    return L1_SingleJet20er2p5_NotBptxOR_3BX_;
}
const bool &Nano::L1_SingleJet20er2p7_NotBptxOR() {
    if (!loaded_L1_SingleJet20er2p7_NotBptxOR_) counter_uncached_L1_SingleJet20er2p7_NotBptxOR_++;
    else counter_cached_L1_SingleJet20er2p7_NotBptxOR_++;
    if (!loaded_L1_SingleJet20er2p7_NotBptxOR_) {
        if (!b_L1_SingleJet20er2p7_NotBptxOR_) throw std::runtime_error("L1_SingleJet20er2p7_NotBptxOR branch doesn't exist");
        b_L1_SingleJet20er2p7_NotBptxOR_->GetEntry(index);
        loaded_L1_SingleJet20er2p7_NotBptxOR_ = true;
    }
    return L1_SingleJet20er2p7_NotBptxOR_;
}
const bool &Nano::L1_SingleJet20er2p7_NotBptxOR_3BX() {
    if (!loaded_L1_SingleJet20er2p7_NotBptxOR_3BX_) counter_uncached_L1_SingleJet20er2p7_NotBptxOR_3BX_++;
    else counter_cached_L1_SingleJet20er2p7_NotBptxOR_3BX_++;
    if (!loaded_L1_SingleJet20er2p7_NotBptxOR_3BX_) {
        if (!b_L1_SingleJet20er2p7_NotBptxOR_3BX_) throw std::runtime_error("L1_SingleJet20er2p7_NotBptxOR_3BX branch doesn't exist");
        b_L1_SingleJet20er2p7_NotBptxOR_3BX_->GetEntry(index);
        loaded_L1_SingleJet20er2p7_NotBptxOR_3BX_ = true;
    }
    return L1_SingleJet20er2p7_NotBptxOR_3BX_;
}
const bool &Nano::L1_SingleJet20er3p0_NotBptxOR() {
    if (!loaded_L1_SingleJet20er3p0_NotBptxOR_) counter_uncached_L1_SingleJet20er3p0_NotBptxOR_++;
    else counter_cached_L1_SingleJet20er3p0_NotBptxOR_++;
    if (!loaded_L1_SingleJet20er3p0_NotBptxOR_) {
        if (!b_L1_SingleJet20er3p0_NotBptxOR_) throw std::runtime_error("L1_SingleJet20er3p0_NotBptxOR branch doesn't exist");
        b_L1_SingleJet20er3p0_NotBptxOR_->GetEntry(index);
        loaded_L1_SingleJet20er3p0_NotBptxOR_ = true;
    }
    return L1_SingleJet20er3p0_NotBptxOR_;
}
const bool &Nano::L1_SingleJet20er3p0_NotBptxOR_3BX() {
    if (!loaded_L1_SingleJet20er3p0_NotBptxOR_3BX_) counter_uncached_L1_SingleJet20er3p0_NotBptxOR_3BX_++;
    else counter_cached_L1_SingleJet20er3p0_NotBptxOR_3BX_++;
    if (!loaded_L1_SingleJet20er3p0_NotBptxOR_3BX_) {
        if (!b_L1_SingleJet20er3p0_NotBptxOR_3BX_) throw std::runtime_error("L1_SingleJet20er3p0_NotBptxOR_3BX branch doesn't exist");
        b_L1_SingleJet20er3p0_NotBptxOR_3BX_->GetEntry(index);
        loaded_L1_SingleJet20er3p0_NotBptxOR_3BX_ = true;
    }
    return L1_SingleJet20er3p0_NotBptxOR_3BX_;
}
const bool &Nano::L1_SingleJet35() {
    if (!loaded_L1_SingleJet35_) counter_uncached_L1_SingleJet35_++;
    else counter_cached_L1_SingleJet35_++;
    if (!loaded_L1_SingleJet35_) {
        if (!b_L1_SingleJet35_) throw std::runtime_error("L1_SingleJet35 branch doesn't exist");
        b_L1_SingleJet35_->GetEntry(index);
        loaded_L1_SingleJet35_ = true;
    }
    return L1_SingleJet35_;
}
const bool &Nano::L1_SingleJet35_FWD() {
    if (!loaded_L1_SingleJet35_FWD_) counter_uncached_L1_SingleJet35_FWD_++;
    else counter_cached_L1_SingleJet35_FWD_++;
    if (!loaded_L1_SingleJet35_FWD_) {
        if (!b_L1_SingleJet35_FWD_) throw std::runtime_error("L1_SingleJet35_FWD branch doesn't exist");
        b_L1_SingleJet35_FWD_->GetEntry(index);
        loaded_L1_SingleJet35_FWD_ = true;
    }
    return L1_SingleJet35_FWD_;
}
const bool &Nano::L1_SingleJet35_FWD3p0() {
    if (!loaded_L1_SingleJet35_FWD3p0_) counter_uncached_L1_SingleJet35_FWD3p0_++;
    else counter_cached_L1_SingleJet35_FWD3p0_++;
    if (!loaded_L1_SingleJet35_FWD3p0_) {
        if (!b_L1_SingleJet35_FWD3p0_) throw std::runtime_error("L1_SingleJet35_FWD3p0 branch doesn't exist");
        b_L1_SingleJet35_FWD3p0_->GetEntry(index);
        loaded_L1_SingleJet35_FWD3p0_ = true;
    }
    return L1_SingleJet35_FWD3p0_;
}
const bool &Nano::L1_SingleJet35_HFm() {
    if (!loaded_L1_SingleJet35_HFm_) counter_uncached_L1_SingleJet35_HFm_++;
    else counter_cached_L1_SingleJet35_HFm_++;
    if (!loaded_L1_SingleJet35_HFm_) {
        if (!b_L1_SingleJet35_HFm_) throw std::runtime_error("L1_SingleJet35_HFm branch doesn't exist");
        b_L1_SingleJet35_HFm_->GetEntry(index);
        loaded_L1_SingleJet35_HFm_ = true;
    }
    return L1_SingleJet35_HFm_;
}
const bool &Nano::L1_SingleJet35_HFp() {
    if (!loaded_L1_SingleJet35_HFp_) counter_uncached_L1_SingleJet35_HFp_++;
    else counter_cached_L1_SingleJet35_HFp_++;
    if (!loaded_L1_SingleJet35_HFp_) {
        if (!b_L1_SingleJet35_HFp_) throw std::runtime_error("L1_SingleJet35_HFp branch doesn't exist");
        b_L1_SingleJet35_HFp_->GetEntry(index);
        loaded_L1_SingleJet35_HFp_ = true;
    }
    return L1_SingleJet35_HFp_;
}
const bool &Nano::L1_SingleJet35er2p5() {
    if (!loaded_L1_SingleJet35er2p5_) counter_uncached_L1_SingleJet35er2p5_++;
    else counter_cached_L1_SingleJet35er2p5_++;
    if (!loaded_L1_SingleJet35er2p5_) {
        if (!b_L1_SingleJet35er2p5_) throw std::runtime_error("L1_SingleJet35er2p5 branch doesn't exist");
        b_L1_SingleJet35er2p5_->GetEntry(index);
        loaded_L1_SingleJet35er2p5_ = true;
    }
    return L1_SingleJet35er2p5_;
}
const bool &Nano::L1_SingleJet4() {
    if (!loaded_L1_SingleJet4_) counter_uncached_L1_SingleJet4_++;
    else counter_cached_L1_SingleJet4_++;
    if (!loaded_L1_SingleJet4_) {
        if (!b_L1_SingleJet4_) throw std::runtime_error("L1_SingleJet4 branch doesn't exist");
        b_L1_SingleJet4_->GetEntry(index);
        loaded_L1_SingleJet4_ = true;
    }
    return L1_SingleJet4_;
}
const bool &Nano::L1_SingleJet43er2p5_NotBptxOR_3BX() {
    if (!loaded_L1_SingleJet43er2p5_NotBptxOR_3BX_) counter_uncached_L1_SingleJet43er2p5_NotBptxOR_3BX_++;
    else counter_cached_L1_SingleJet43er2p5_NotBptxOR_3BX_++;
    if (!loaded_L1_SingleJet43er2p5_NotBptxOR_3BX_) {
        if (!b_L1_SingleJet43er2p5_NotBptxOR_3BX_) throw std::runtime_error("L1_SingleJet43er2p5_NotBptxOR_3BX branch doesn't exist");
        b_L1_SingleJet43er2p5_NotBptxOR_3BX_->GetEntry(index);
        loaded_L1_SingleJet43er2p5_NotBptxOR_3BX_ = true;
    }
    return L1_SingleJet43er2p5_NotBptxOR_3BX_;
}
const bool &Nano::L1_SingleJet43er2p7_NotBptxOR_3BX() {
    if (!loaded_L1_SingleJet43er2p7_NotBptxOR_3BX_) counter_uncached_L1_SingleJet43er2p7_NotBptxOR_3BX_++;
    else counter_cached_L1_SingleJet43er2p7_NotBptxOR_3BX_++;
    if (!loaded_L1_SingleJet43er2p7_NotBptxOR_3BX_) {
        if (!b_L1_SingleJet43er2p7_NotBptxOR_3BX_) throw std::runtime_error("L1_SingleJet43er2p7_NotBptxOR_3BX branch doesn't exist");
        b_L1_SingleJet43er2p7_NotBptxOR_3BX_->GetEntry(index);
        loaded_L1_SingleJet43er2p7_NotBptxOR_3BX_ = true;
    }
    return L1_SingleJet43er2p7_NotBptxOR_3BX_;
}
const bool &Nano::L1_SingleJet43er3p0_NotBptxOR_3BX() {
    if (!loaded_L1_SingleJet43er3p0_NotBptxOR_3BX_) counter_uncached_L1_SingleJet43er3p0_NotBptxOR_3BX_++;
    else counter_cached_L1_SingleJet43er3p0_NotBptxOR_3BX_++;
    if (!loaded_L1_SingleJet43er3p0_NotBptxOR_3BX_) {
        if (!b_L1_SingleJet43er3p0_NotBptxOR_3BX_) throw std::runtime_error("L1_SingleJet43er3p0_NotBptxOR_3BX branch doesn't exist");
        b_L1_SingleJet43er3p0_NotBptxOR_3BX_->GetEntry(index);
        loaded_L1_SingleJet43er3p0_NotBptxOR_3BX_ = true;
    }
    return L1_SingleJet43er3p0_NotBptxOR_3BX_;
}
const bool &Nano::L1_SingleJet46er2p5_NotBptxOR_3BX() {
    if (!loaded_L1_SingleJet46er2p5_NotBptxOR_3BX_) counter_uncached_L1_SingleJet46er2p5_NotBptxOR_3BX_++;
    else counter_cached_L1_SingleJet46er2p5_NotBptxOR_3BX_++;
    if (!loaded_L1_SingleJet46er2p5_NotBptxOR_3BX_) {
        if (!b_L1_SingleJet46er2p5_NotBptxOR_3BX_) throw std::runtime_error("L1_SingleJet46er2p5_NotBptxOR_3BX branch doesn't exist");
        b_L1_SingleJet46er2p5_NotBptxOR_3BX_->GetEntry(index);
        loaded_L1_SingleJet46er2p5_NotBptxOR_3BX_ = true;
    }
    return L1_SingleJet46er2p5_NotBptxOR_3BX_;
}
const bool &Nano::L1_SingleJet46er2p7_NotBptxOR_3BX() {
    if (!loaded_L1_SingleJet46er2p7_NotBptxOR_3BX_) counter_uncached_L1_SingleJet46er2p7_NotBptxOR_3BX_++;
    else counter_cached_L1_SingleJet46er2p7_NotBptxOR_3BX_++;
    if (!loaded_L1_SingleJet46er2p7_NotBptxOR_3BX_) {
        if (!b_L1_SingleJet46er2p7_NotBptxOR_3BX_) throw std::runtime_error("L1_SingleJet46er2p7_NotBptxOR_3BX branch doesn't exist");
        b_L1_SingleJet46er2p7_NotBptxOR_3BX_->GetEntry(index);
        loaded_L1_SingleJet46er2p7_NotBptxOR_3BX_ = true;
    }
    return L1_SingleJet46er2p7_NotBptxOR_3BX_;
}
const bool &Nano::L1_SingleJet46er3p0_NotBptxOR_3BX() {
    if (!loaded_L1_SingleJet46er3p0_NotBptxOR_3BX_) counter_uncached_L1_SingleJet46er3p0_NotBptxOR_3BX_++;
    else counter_cached_L1_SingleJet46er3p0_NotBptxOR_3BX_++;
    if (!loaded_L1_SingleJet46er3p0_NotBptxOR_3BX_) {
        if (!b_L1_SingleJet46er3p0_NotBptxOR_3BX_) throw std::runtime_error("L1_SingleJet46er3p0_NotBptxOR_3BX branch doesn't exist");
        b_L1_SingleJet46er3p0_NotBptxOR_3BX_->GetEntry(index);
        loaded_L1_SingleJet46er3p0_NotBptxOR_3BX_ = true;
    }
    return L1_SingleJet46er3p0_NotBptxOR_3BX_;
}
const bool &Nano::L1_SingleJet60() {
    if (!loaded_L1_SingleJet60_) counter_uncached_L1_SingleJet60_++;
    else counter_cached_L1_SingleJet60_++;
    if (!loaded_L1_SingleJet60_) {
        if (!b_L1_SingleJet60_) throw std::runtime_error("L1_SingleJet60 branch doesn't exist");
        b_L1_SingleJet60_->GetEntry(index);
        loaded_L1_SingleJet60_ = true;
    }
    return L1_SingleJet60_;
}
const bool &Nano::L1_SingleJet60_FWD() {
    if (!loaded_L1_SingleJet60_FWD_) counter_uncached_L1_SingleJet60_FWD_++;
    else counter_cached_L1_SingleJet60_FWD_++;
    if (!loaded_L1_SingleJet60_FWD_) {
        if (!b_L1_SingleJet60_FWD_) throw std::runtime_error("L1_SingleJet60_FWD branch doesn't exist");
        b_L1_SingleJet60_FWD_->GetEntry(index);
        loaded_L1_SingleJet60_FWD_ = true;
    }
    return L1_SingleJet60_FWD_;
}
const bool &Nano::L1_SingleJet60_FWD3p0() {
    if (!loaded_L1_SingleJet60_FWD3p0_) counter_uncached_L1_SingleJet60_FWD3p0_++;
    else counter_cached_L1_SingleJet60_FWD3p0_++;
    if (!loaded_L1_SingleJet60_FWD3p0_) {
        if (!b_L1_SingleJet60_FWD3p0_) throw std::runtime_error("L1_SingleJet60_FWD3p0 branch doesn't exist");
        b_L1_SingleJet60_FWD3p0_->GetEntry(index);
        loaded_L1_SingleJet60_FWD3p0_ = true;
    }
    return L1_SingleJet60_FWD3p0_;
}
const bool &Nano::L1_SingleJet60_HFm() {
    if (!loaded_L1_SingleJet60_HFm_) counter_uncached_L1_SingleJet60_HFm_++;
    else counter_cached_L1_SingleJet60_HFm_++;
    if (!loaded_L1_SingleJet60_HFm_) {
        if (!b_L1_SingleJet60_HFm_) throw std::runtime_error("L1_SingleJet60_HFm branch doesn't exist");
        b_L1_SingleJet60_HFm_->GetEntry(index);
        loaded_L1_SingleJet60_HFm_ = true;
    }
    return L1_SingleJet60_HFm_;
}
const bool &Nano::L1_SingleJet60_HFp() {
    if (!loaded_L1_SingleJet60_HFp_) counter_uncached_L1_SingleJet60_HFp_++;
    else counter_cached_L1_SingleJet60_HFp_++;
    if (!loaded_L1_SingleJet60_HFp_) {
        if (!b_L1_SingleJet60_HFp_) throw std::runtime_error("L1_SingleJet60_HFp branch doesn't exist");
        b_L1_SingleJet60_HFp_->GetEntry(index);
        loaded_L1_SingleJet60_HFp_ = true;
    }
    return L1_SingleJet60_HFp_;
}
const bool &Nano::L1_SingleJet60er2p5() {
    if (!loaded_L1_SingleJet60er2p5_) counter_uncached_L1_SingleJet60er2p5_++;
    else counter_cached_L1_SingleJet60er2p5_++;
    if (!loaded_L1_SingleJet60er2p5_) {
        if (!b_L1_SingleJet60er2p5_) throw std::runtime_error("L1_SingleJet60er2p5 branch doesn't exist");
        b_L1_SingleJet60er2p5_->GetEntry(index);
        loaded_L1_SingleJet60er2p5_ = true;
    }
    return L1_SingleJet60er2p5_;
}
const bool &Nano::L1_SingleJet8() {
    if (!loaded_L1_SingleJet8_) counter_uncached_L1_SingleJet8_++;
    else counter_cached_L1_SingleJet8_++;
    if (!loaded_L1_SingleJet8_) {
        if (!b_L1_SingleJet8_) throw std::runtime_error("L1_SingleJet8 branch doesn't exist");
        b_L1_SingleJet8_->GetEntry(index);
        loaded_L1_SingleJet8_ = true;
    }
    return L1_SingleJet8_;
}
const bool &Nano::L1_SingleJet8_BptxAND() {
    if (!loaded_L1_SingleJet8_BptxAND_) counter_uncached_L1_SingleJet8_BptxAND_++;
    else counter_cached_L1_SingleJet8_BptxAND_++;
    if (!loaded_L1_SingleJet8_BptxAND_) {
        if (!b_L1_SingleJet8_BptxAND_) throw std::runtime_error("L1_SingleJet8_BptxAND branch doesn't exist");
        b_L1_SingleJet8_BptxAND_->GetEntry(index);
        loaded_L1_SingleJet8_BptxAND_ = true;
    }
    return L1_SingleJet8_BptxAND_;
}
const bool &Nano::L1_SingleJet8erHE() {
    if (!loaded_L1_SingleJet8erHE_) counter_uncached_L1_SingleJet8erHE_++;
    else counter_cached_L1_SingleJet8erHE_++;
    if (!loaded_L1_SingleJet8erHE_) {
        if (!b_L1_SingleJet8erHE_) throw std::runtime_error("L1_SingleJet8erHE branch doesn't exist");
        b_L1_SingleJet8erHE_->GetEntry(index);
        loaded_L1_SingleJet8erHE_ = true;
    }
    return L1_SingleJet8erHE_;
}
const bool &Nano::L1_SingleJet90() {
    if (!loaded_L1_SingleJet90_) counter_uncached_L1_SingleJet90_++;
    else counter_cached_L1_SingleJet90_++;
    if (!loaded_L1_SingleJet90_) {
        if (!b_L1_SingleJet90_) throw std::runtime_error("L1_SingleJet90 branch doesn't exist");
        b_L1_SingleJet90_->GetEntry(index);
        loaded_L1_SingleJet90_ = true;
    }
    return L1_SingleJet90_;
}
const bool &Nano::L1_SingleJet90_FWD() {
    if (!loaded_L1_SingleJet90_FWD_) counter_uncached_L1_SingleJet90_FWD_++;
    else counter_cached_L1_SingleJet90_FWD_++;
    if (!loaded_L1_SingleJet90_FWD_) {
        if (!b_L1_SingleJet90_FWD_) throw std::runtime_error("L1_SingleJet90_FWD branch doesn't exist");
        b_L1_SingleJet90_FWD_->GetEntry(index);
        loaded_L1_SingleJet90_FWD_ = true;
    }
    return L1_SingleJet90_FWD_;
}
const bool &Nano::L1_SingleJet90_FWD3p0() {
    if (!loaded_L1_SingleJet90_FWD3p0_) counter_uncached_L1_SingleJet90_FWD3p0_++;
    else counter_cached_L1_SingleJet90_FWD3p0_++;
    if (!loaded_L1_SingleJet90_FWD3p0_) {
        if (!b_L1_SingleJet90_FWD3p0_) throw std::runtime_error("L1_SingleJet90_FWD3p0 branch doesn't exist");
        b_L1_SingleJet90_FWD3p0_->GetEntry(index);
        loaded_L1_SingleJet90_FWD3p0_ = true;
    }
    return L1_SingleJet90_FWD3p0_;
}
const bool &Nano::L1_SingleJet90er2p5() {
    if (!loaded_L1_SingleJet90er2p5_) counter_uncached_L1_SingleJet90er2p5_++;
    else counter_cached_L1_SingleJet90er2p5_++;
    if (!loaded_L1_SingleJet90er2p5_) {
        if (!b_L1_SingleJet90er2p5_) throw std::runtime_error("L1_SingleJet90er2p5 branch doesn't exist");
        b_L1_SingleJet90er2p5_->GetEntry(index);
        loaded_L1_SingleJet90er2p5_ = true;
    }
    return L1_SingleJet90er2p5_;
}
const bool &Nano::L1_SingleJetC20_NotBptxOR() {
    if (!loaded_L1_SingleJetC20_NotBptxOR_) counter_uncached_L1_SingleJetC20_NotBptxOR_++;
    else counter_cached_L1_SingleJetC20_NotBptxOR_++;
    if (!loaded_L1_SingleJetC20_NotBptxOR_) {
        if (!b_L1_SingleJetC20_NotBptxOR_) throw std::runtime_error("L1_SingleJetC20_NotBptxOR branch doesn't exist");
        b_L1_SingleJetC20_NotBptxOR_->GetEntry(index);
        loaded_L1_SingleJetC20_NotBptxOR_ = true;
    }
    return L1_SingleJetC20_NotBptxOR_;
}
const bool &Nano::L1_SingleJetC20_NotBptxOR_3BX() {
    if (!loaded_L1_SingleJetC20_NotBptxOR_3BX_) counter_uncached_L1_SingleJetC20_NotBptxOR_3BX_++;
    else counter_cached_L1_SingleJetC20_NotBptxOR_3BX_++;
    if (!loaded_L1_SingleJetC20_NotBptxOR_3BX_) {
        if (!b_L1_SingleJetC20_NotBptxOR_3BX_) throw std::runtime_error("L1_SingleJetC20_NotBptxOR_3BX branch doesn't exist");
        b_L1_SingleJetC20_NotBptxOR_3BX_->GetEntry(index);
        loaded_L1_SingleJetC20_NotBptxOR_3BX_ = true;
    }
    return L1_SingleJetC20_NotBptxOR_3BX_;
}
const bool &Nano::L1_SingleJetC32_NotBptxOR() {
    if (!loaded_L1_SingleJetC32_NotBptxOR_) counter_uncached_L1_SingleJetC32_NotBptxOR_++;
    else counter_cached_L1_SingleJetC32_NotBptxOR_++;
    if (!loaded_L1_SingleJetC32_NotBptxOR_) {
        if (!b_L1_SingleJetC32_NotBptxOR_) throw std::runtime_error("L1_SingleJetC32_NotBptxOR branch doesn't exist");
        b_L1_SingleJetC32_NotBptxOR_->GetEntry(index);
        loaded_L1_SingleJetC32_NotBptxOR_ = true;
    }
    return L1_SingleJetC32_NotBptxOR_;
}
const bool &Nano::L1_SingleJetC32_NotBptxOR_3BX() {
    if (!loaded_L1_SingleJetC32_NotBptxOR_3BX_) counter_uncached_L1_SingleJetC32_NotBptxOR_3BX_++;
    else counter_cached_L1_SingleJetC32_NotBptxOR_3BX_++;
    if (!loaded_L1_SingleJetC32_NotBptxOR_3BX_) {
        if (!b_L1_SingleJetC32_NotBptxOR_3BX_) throw std::runtime_error("L1_SingleJetC32_NotBptxOR_3BX branch doesn't exist");
        b_L1_SingleJetC32_NotBptxOR_3BX_->GetEntry(index);
        loaded_L1_SingleJetC32_NotBptxOR_3BX_ = true;
    }
    return L1_SingleJetC32_NotBptxOR_3BX_;
}
const bool &Nano::L1_SingleJetC36_NotBptxOR_3BX() {
    if (!loaded_L1_SingleJetC36_NotBptxOR_3BX_) counter_uncached_L1_SingleJetC36_NotBptxOR_3BX_++;
    else counter_cached_L1_SingleJetC36_NotBptxOR_3BX_++;
    if (!loaded_L1_SingleJetC36_NotBptxOR_3BX_) {
        if (!b_L1_SingleJetC36_NotBptxOR_3BX_) throw std::runtime_error("L1_SingleJetC36_NotBptxOR_3BX branch doesn't exist");
        b_L1_SingleJetC36_NotBptxOR_3BX_->GetEntry(index);
        loaded_L1_SingleJetC36_NotBptxOR_3BX_ = true;
    }
    return L1_SingleJetC36_NotBptxOR_3BX_;
}
const bool &Nano::L1_SingleJetC40_NotBptxOR_3BX() {
    if (!loaded_L1_SingleJetC40_NotBptxOR_3BX_) counter_uncached_L1_SingleJetC40_NotBptxOR_3BX_++;
    else counter_cached_L1_SingleJetC40_NotBptxOR_3BX_++;
    if (!loaded_L1_SingleJetC40_NotBptxOR_3BX_) {
        if (!b_L1_SingleJetC40_NotBptxOR_3BX_) throw std::runtime_error("L1_SingleJetC40_NotBptxOR_3BX branch doesn't exist");
        b_L1_SingleJetC40_NotBptxOR_3BX_->GetEntry(index);
        loaded_L1_SingleJetC40_NotBptxOR_3BX_ = true;
    }
    return L1_SingleJetC40_NotBptxOR_3BX_;
}
const bool &Nano::L1_SingleJetC40_NotBptxOR_5BX() {
    if (!loaded_L1_SingleJetC40_NotBptxOR_5BX_) counter_uncached_L1_SingleJetC40_NotBptxOR_5BX_++;
    else counter_cached_L1_SingleJetC40_NotBptxOR_5BX_++;
    if (!loaded_L1_SingleJetC40_NotBptxOR_5BX_) {
        if (!b_L1_SingleJetC40_NotBptxOR_5BX_) throw std::runtime_error("L1_SingleJetC40_NotBptxOR_5BX branch doesn't exist");
        b_L1_SingleJetC40_NotBptxOR_5BX_->GetEntry(index);
        loaded_L1_SingleJetC40_NotBptxOR_5BX_ = true;
    }
    return L1_SingleJetC40_NotBptxOR_5BX_;
}
const bool &Nano::L1_SingleLooseIsoEG26er1p5() {
    if (!loaded_L1_SingleLooseIsoEG26er1p5_) counter_uncached_L1_SingleLooseIsoEG26er1p5_++;
    else counter_cached_L1_SingleLooseIsoEG26er1p5_++;
    if (!loaded_L1_SingleLooseIsoEG26er1p5_) {
        if (!b_L1_SingleLooseIsoEG26er1p5_) throw std::runtime_error("L1_SingleLooseIsoEG26er1p5 branch doesn't exist");
        b_L1_SingleLooseIsoEG26er1p5_->GetEntry(index);
        loaded_L1_SingleLooseIsoEG26er1p5_ = true;
    }
    return L1_SingleLooseIsoEG26er1p5_;
}
const bool &Nano::L1_SingleLooseIsoEG26er2p5() {
    if (!loaded_L1_SingleLooseIsoEG26er2p5_) counter_uncached_L1_SingleLooseIsoEG26er2p5_++;
    else counter_cached_L1_SingleLooseIsoEG26er2p5_++;
    if (!loaded_L1_SingleLooseIsoEG26er2p5_) {
        if (!b_L1_SingleLooseIsoEG26er2p5_) throw std::runtime_error("L1_SingleLooseIsoEG26er2p5 branch doesn't exist");
        b_L1_SingleLooseIsoEG26er2p5_->GetEntry(index);
        loaded_L1_SingleLooseIsoEG26er2p5_ = true;
    }
    return L1_SingleLooseIsoEG26er2p5_;
}
const bool &Nano::L1_SingleLooseIsoEG28_FWD2p5() {
    if (!loaded_L1_SingleLooseIsoEG28_FWD2p5_) counter_uncached_L1_SingleLooseIsoEG28_FWD2p5_++;
    else counter_cached_L1_SingleLooseIsoEG28_FWD2p5_++;
    if (!loaded_L1_SingleLooseIsoEG28_FWD2p5_) {
        if (!b_L1_SingleLooseIsoEG28_FWD2p5_) throw std::runtime_error("L1_SingleLooseIsoEG28_FWD2p5 branch doesn't exist");
        b_L1_SingleLooseIsoEG28_FWD2p5_->GetEntry(index);
        loaded_L1_SingleLooseIsoEG28_FWD2p5_ = true;
    }
    return L1_SingleLooseIsoEG28_FWD2p5_;
}
const bool &Nano::L1_SingleLooseIsoEG28er1p5() {
    if (!loaded_L1_SingleLooseIsoEG28er1p5_) counter_uncached_L1_SingleLooseIsoEG28er1p5_++;
    else counter_cached_L1_SingleLooseIsoEG28er1p5_++;
    if (!loaded_L1_SingleLooseIsoEG28er1p5_) {
        if (!b_L1_SingleLooseIsoEG28er1p5_) throw std::runtime_error("L1_SingleLooseIsoEG28er1p5 branch doesn't exist");
        b_L1_SingleLooseIsoEG28er1p5_->GetEntry(index);
        loaded_L1_SingleLooseIsoEG28er1p5_ = true;
    }
    return L1_SingleLooseIsoEG28er1p5_;
}
const bool &Nano::L1_SingleLooseIsoEG28er2p1() {
    if (!loaded_L1_SingleLooseIsoEG28er2p1_) counter_uncached_L1_SingleLooseIsoEG28er2p1_++;
    else counter_cached_L1_SingleLooseIsoEG28er2p1_++;
    if (!loaded_L1_SingleLooseIsoEG28er2p1_) {
        if (!b_L1_SingleLooseIsoEG28er2p1_) throw std::runtime_error("L1_SingleLooseIsoEG28er2p1 branch doesn't exist");
        b_L1_SingleLooseIsoEG28er2p1_->GetEntry(index);
        loaded_L1_SingleLooseIsoEG28er2p1_ = true;
    }
    return L1_SingleLooseIsoEG28er2p1_;
}
const bool &Nano::L1_SingleLooseIsoEG28er2p5() {
    if (!loaded_L1_SingleLooseIsoEG28er2p5_) counter_uncached_L1_SingleLooseIsoEG28er2p5_++;
    else counter_cached_L1_SingleLooseIsoEG28er2p5_++;
    if (!loaded_L1_SingleLooseIsoEG28er2p5_) {
        if (!b_L1_SingleLooseIsoEG28er2p5_) throw std::runtime_error("L1_SingleLooseIsoEG28er2p5 branch doesn't exist");
        b_L1_SingleLooseIsoEG28er2p5_->GetEntry(index);
        loaded_L1_SingleLooseIsoEG28er2p5_ = true;
    }
    return L1_SingleLooseIsoEG28er2p5_;
}
const bool &Nano::L1_SingleLooseIsoEG30er1p5() {
    if (!loaded_L1_SingleLooseIsoEG30er1p5_) counter_uncached_L1_SingleLooseIsoEG30er1p5_++;
    else counter_cached_L1_SingleLooseIsoEG30er1p5_++;
    if (!loaded_L1_SingleLooseIsoEG30er1p5_) {
        if (!b_L1_SingleLooseIsoEG30er1p5_) throw std::runtime_error("L1_SingleLooseIsoEG30er1p5 branch doesn't exist");
        b_L1_SingleLooseIsoEG30er1p5_->GetEntry(index);
        loaded_L1_SingleLooseIsoEG30er1p5_ = true;
    }
    return L1_SingleLooseIsoEG30er1p5_;
}
const bool &Nano::L1_SingleLooseIsoEG30er2p5() {
    if (!loaded_L1_SingleLooseIsoEG30er2p5_) counter_uncached_L1_SingleLooseIsoEG30er2p5_++;
    else counter_cached_L1_SingleLooseIsoEG30er2p5_++;
    if (!loaded_L1_SingleLooseIsoEG30er2p5_) {
        if (!b_L1_SingleLooseIsoEG30er2p5_) throw std::runtime_error("L1_SingleLooseIsoEG30er2p5 branch doesn't exist");
        b_L1_SingleLooseIsoEG30er2p5_->GetEntry(index);
        loaded_L1_SingleLooseIsoEG30er2p5_ = true;
    }
    return L1_SingleLooseIsoEG30er2p5_;
}
const bool &Nano::L1_SingleMu0_BMTF() {
    if (!loaded_L1_SingleMu0_BMTF_) counter_uncached_L1_SingleMu0_BMTF_++;
    else counter_cached_L1_SingleMu0_BMTF_++;
    if (!loaded_L1_SingleMu0_BMTF_) {
        if (!b_L1_SingleMu0_BMTF_) throw std::runtime_error("L1_SingleMu0_BMTF branch doesn't exist");
        b_L1_SingleMu0_BMTF_->GetEntry(index);
        loaded_L1_SingleMu0_BMTF_ = true;
    }
    return L1_SingleMu0_BMTF_;
}
const bool &Nano::L1_SingleMu0_DQ() {
    if (!loaded_L1_SingleMu0_DQ_) counter_uncached_L1_SingleMu0_DQ_++;
    else counter_cached_L1_SingleMu0_DQ_++;
    if (!loaded_L1_SingleMu0_DQ_) {
        if (!b_L1_SingleMu0_DQ_) throw std::runtime_error("L1_SingleMu0_DQ branch doesn't exist");
        b_L1_SingleMu0_DQ_->GetEntry(index);
        loaded_L1_SingleMu0_DQ_ = true;
    }
    return L1_SingleMu0_DQ_;
}
const bool &Nano::L1_SingleMu0_EMTF() {
    if (!loaded_L1_SingleMu0_EMTF_) counter_uncached_L1_SingleMu0_EMTF_++;
    else counter_cached_L1_SingleMu0_EMTF_++;
    if (!loaded_L1_SingleMu0_EMTF_) {
        if (!b_L1_SingleMu0_EMTF_) throw std::runtime_error("L1_SingleMu0_EMTF branch doesn't exist");
        b_L1_SingleMu0_EMTF_->GetEntry(index);
        loaded_L1_SingleMu0_EMTF_ = true;
    }
    return L1_SingleMu0_EMTF_;
}
const bool &Nano::L1_SingleMu0_OMTF() {
    if (!loaded_L1_SingleMu0_OMTF_) counter_uncached_L1_SingleMu0_OMTF_++;
    else counter_cached_L1_SingleMu0_OMTF_++;
    if (!loaded_L1_SingleMu0_OMTF_) {
        if (!b_L1_SingleMu0_OMTF_) throw std::runtime_error("L1_SingleMu0_OMTF branch doesn't exist");
        b_L1_SingleMu0_OMTF_->GetEntry(index);
        loaded_L1_SingleMu0_OMTF_ = true;
    }
    return L1_SingleMu0_OMTF_;
}
const bool &Nano::L1_SingleMu10_LowQ() {
    if (!loaded_L1_SingleMu10_LowQ_) counter_uncached_L1_SingleMu10_LowQ_++;
    else counter_cached_L1_SingleMu10_LowQ_++;
    if (!loaded_L1_SingleMu10_LowQ_) {
        if (!b_L1_SingleMu10_LowQ_) throw std::runtime_error("L1_SingleMu10_LowQ branch doesn't exist");
        b_L1_SingleMu10_LowQ_->GetEntry(index);
        loaded_L1_SingleMu10_LowQ_ = true;
    }
    return L1_SingleMu10_LowQ_;
}
const bool &Nano::L1_SingleMu10er1p5() {
    if (!loaded_L1_SingleMu10er1p5_) counter_uncached_L1_SingleMu10er1p5_++;
    else counter_cached_L1_SingleMu10er1p5_++;
    if (!loaded_L1_SingleMu10er1p5_) {
        if (!b_L1_SingleMu10er1p5_) throw std::runtime_error("L1_SingleMu10er1p5 branch doesn't exist");
        b_L1_SingleMu10er1p5_->GetEntry(index);
        loaded_L1_SingleMu10er1p5_ = true;
    }
    return L1_SingleMu10er1p5_;
}
const bool &Nano::L1_SingleMu11_LowQ() {
    if (!loaded_L1_SingleMu11_LowQ_) counter_uncached_L1_SingleMu11_LowQ_++;
    else counter_cached_L1_SingleMu11_LowQ_++;
    if (!loaded_L1_SingleMu11_LowQ_) {
        if (!b_L1_SingleMu11_LowQ_) throw std::runtime_error("L1_SingleMu11_LowQ branch doesn't exist");
        b_L1_SingleMu11_LowQ_->GetEntry(index);
        loaded_L1_SingleMu11_LowQ_ = true;
    }
    return L1_SingleMu11_LowQ_;
}
const bool &Nano::L1_SingleMu12() {
    if (!loaded_L1_SingleMu12_) counter_uncached_L1_SingleMu12_++;
    else counter_cached_L1_SingleMu12_++;
    if (!loaded_L1_SingleMu12_) {
        if (!b_L1_SingleMu12_) throw std::runtime_error("L1_SingleMu12 branch doesn't exist");
        b_L1_SingleMu12_->GetEntry(index);
        loaded_L1_SingleMu12_ = true;
    }
    return L1_SingleMu12_;
}
const bool &Nano::L1_SingleMu12_DQ_BMTF() {
    if (!loaded_L1_SingleMu12_DQ_BMTF_) counter_uncached_L1_SingleMu12_DQ_BMTF_++;
    else counter_cached_L1_SingleMu12_DQ_BMTF_++;
    if (!loaded_L1_SingleMu12_DQ_BMTF_) {
        if (!b_L1_SingleMu12_DQ_BMTF_) throw std::runtime_error("L1_SingleMu12_DQ_BMTF branch doesn't exist");
        b_L1_SingleMu12_DQ_BMTF_->GetEntry(index);
        loaded_L1_SingleMu12_DQ_BMTF_ = true;
    }
    return L1_SingleMu12_DQ_BMTF_;
}
const bool &Nano::L1_SingleMu12_DQ_EMTF() {
    if (!loaded_L1_SingleMu12_DQ_EMTF_) counter_uncached_L1_SingleMu12_DQ_EMTF_++;
    else counter_cached_L1_SingleMu12_DQ_EMTF_++;
    if (!loaded_L1_SingleMu12_DQ_EMTF_) {
        if (!b_L1_SingleMu12_DQ_EMTF_) throw std::runtime_error("L1_SingleMu12_DQ_EMTF branch doesn't exist");
        b_L1_SingleMu12_DQ_EMTF_->GetEntry(index);
        loaded_L1_SingleMu12_DQ_EMTF_ = true;
    }
    return L1_SingleMu12_DQ_EMTF_;
}
const bool &Nano::L1_SingleMu12_DQ_OMTF() {
    if (!loaded_L1_SingleMu12_DQ_OMTF_) counter_uncached_L1_SingleMu12_DQ_OMTF_++;
    else counter_cached_L1_SingleMu12_DQ_OMTF_++;
    if (!loaded_L1_SingleMu12_DQ_OMTF_) {
        if (!b_L1_SingleMu12_DQ_OMTF_) throw std::runtime_error("L1_SingleMu12_DQ_OMTF branch doesn't exist");
        b_L1_SingleMu12_DQ_OMTF_->GetEntry(index);
        loaded_L1_SingleMu12_DQ_OMTF_ = true;
    }
    return L1_SingleMu12_DQ_OMTF_;
}
const bool &Nano::L1_SingleMu12_LowQ_BMTF() {
    if (!loaded_L1_SingleMu12_LowQ_BMTF_) counter_uncached_L1_SingleMu12_LowQ_BMTF_++;
    else counter_cached_L1_SingleMu12_LowQ_BMTF_++;
    if (!loaded_L1_SingleMu12_LowQ_BMTF_) {
        if (!b_L1_SingleMu12_LowQ_BMTF_) throw std::runtime_error("L1_SingleMu12_LowQ_BMTF branch doesn't exist");
        b_L1_SingleMu12_LowQ_BMTF_->GetEntry(index);
        loaded_L1_SingleMu12_LowQ_BMTF_ = true;
    }
    return L1_SingleMu12_LowQ_BMTF_;
}
const bool &Nano::L1_SingleMu12_LowQ_EMTF() {
    if (!loaded_L1_SingleMu12_LowQ_EMTF_) counter_uncached_L1_SingleMu12_LowQ_EMTF_++;
    else counter_cached_L1_SingleMu12_LowQ_EMTF_++;
    if (!loaded_L1_SingleMu12_LowQ_EMTF_) {
        if (!b_L1_SingleMu12_LowQ_EMTF_) throw std::runtime_error("L1_SingleMu12_LowQ_EMTF branch doesn't exist");
        b_L1_SingleMu12_LowQ_EMTF_->GetEntry(index);
        loaded_L1_SingleMu12_LowQ_EMTF_ = true;
    }
    return L1_SingleMu12_LowQ_EMTF_;
}
const bool &Nano::L1_SingleMu12_LowQ_OMTF() {
    if (!loaded_L1_SingleMu12_LowQ_OMTF_) counter_uncached_L1_SingleMu12_LowQ_OMTF_++;
    else counter_cached_L1_SingleMu12_LowQ_OMTF_++;
    if (!loaded_L1_SingleMu12_LowQ_OMTF_) {
        if (!b_L1_SingleMu12_LowQ_OMTF_) throw std::runtime_error("L1_SingleMu12_LowQ_OMTF branch doesn't exist");
        b_L1_SingleMu12_LowQ_OMTF_->GetEntry(index);
        loaded_L1_SingleMu12_LowQ_OMTF_ = true;
    }
    return L1_SingleMu12_LowQ_OMTF_;
}
const bool &Nano::L1_SingleMu12er1p5() {
    if (!loaded_L1_SingleMu12er1p5_) counter_uncached_L1_SingleMu12er1p5_++;
    else counter_cached_L1_SingleMu12er1p5_++;
    if (!loaded_L1_SingleMu12er1p5_) {
        if (!b_L1_SingleMu12er1p5_) throw std::runtime_error("L1_SingleMu12er1p5 branch doesn't exist");
        b_L1_SingleMu12er1p5_->GetEntry(index);
        loaded_L1_SingleMu12er1p5_ = true;
    }
    return L1_SingleMu12er1p5_;
}
const bool &Nano::L1_SingleMu14() {
    if (!loaded_L1_SingleMu14_) counter_uncached_L1_SingleMu14_++;
    else counter_cached_L1_SingleMu14_++;
    if (!loaded_L1_SingleMu14_) {
        if (!b_L1_SingleMu14_) throw std::runtime_error("L1_SingleMu14 branch doesn't exist");
        b_L1_SingleMu14_->GetEntry(index);
        loaded_L1_SingleMu14_ = true;
    }
    return L1_SingleMu14_;
}
const bool &Nano::L1_SingleMu14er() {
    if (!loaded_L1_SingleMu14er_) counter_uncached_L1_SingleMu14er_++;
    else counter_cached_L1_SingleMu14er_++;
    if (!loaded_L1_SingleMu14er_) {
        if (!b_L1_SingleMu14er_) throw std::runtime_error("L1_SingleMu14er branch doesn't exist");
        b_L1_SingleMu14er_->GetEntry(index);
        loaded_L1_SingleMu14er_ = true;
    }
    return L1_SingleMu14er_;
}
const bool &Nano::L1_SingleMu14er1p5() {
    if (!loaded_L1_SingleMu14er1p5_) counter_uncached_L1_SingleMu14er1p5_++;
    else counter_cached_L1_SingleMu14er1p5_++;
    if (!loaded_L1_SingleMu14er1p5_) {
        if (!b_L1_SingleMu14er1p5_) throw std::runtime_error("L1_SingleMu14er1p5 branch doesn't exist");
        b_L1_SingleMu14er1p5_->GetEntry(index);
        loaded_L1_SingleMu14er1p5_ = true;
    }
    return L1_SingleMu14er1p5_;
}
const bool &Nano::L1_SingleMu14er2p1() {
    if (!loaded_L1_SingleMu14er2p1_) counter_uncached_L1_SingleMu14er2p1_++;
    else counter_cached_L1_SingleMu14er2p1_++;
    if (!loaded_L1_SingleMu14er2p1_) {
        if (!b_L1_SingleMu14er2p1_) throw std::runtime_error("L1_SingleMu14er2p1 branch doesn't exist");
        b_L1_SingleMu14er2p1_->GetEntry(index);
        loaded_L1_SingleMu14er2p1_ = true;
    }
    return L1_SingleMu14er2p1_;
}
const bool &Nano::L1_SingleMu15_DQ() {
    if (!loaded_L1_SingleMu15_DQ_) counter_uncached_L1_SingleMu15_DQ_++;
    else counter_cached_L1_SingleMu15_DQ_++;
    if (!loaded_L1_SingleMu15_DQ_) {
        if (!b_L1_SingleMu15_DQ_) throw std::runtime_error("L1_SingleMu15_DQ branch doesn't exist");
        b_L1_SingleMu15_DQ_->GetEntry(index);
        loaded_L1_SingleMu15_DQ_ = true;
    }
    return L1_SingleMu15_DQ_;
}
const bool &Nano::L1_SingleMu16() {
    if (!loaded_L1_SingleMu16_) counter_uncached_L1_SingleMu16_++;
    else counter_cached_L1_SingleMu16_++;
    if (!loaded_L1_SingleMu16_) {
        if (!b_L1_SingleMu16_) throw std::runtime_error("L1_SingleMu16 branch doesn't exist");
        b_L1_SingleMu16_->GetEntry(index);
        loaded_L1_SingleMu16_ = true;
    }
    return L1_SingleMu16_;
}
const bool &Nano::L1_SingleMu16er() {
    if (!loaded_L1_SingleMu16er_) counter_uncached_L1_SingleMu16er_++;
    else counter_cached_L1_SingleMu16er_++;
    if (!loaded_L1_SingleMu16er_) {
        if (!b_L1_SingleMu16er_) throw std::runtime_error("L1_SingleMu16er branch doesn't exist");
        b_L1_SingleMu16er_->GetEntry(index);
        loaded_L1_SingleMu16er_ = true;
    }
    return L1_SingleMu16er_;
}
const bool &Nano::L1_SingleMu16er1p5() {
    if (!loaded_L1_SingleMu16er1p5_) counter_uncached_L1_SingleMu16er1p5_++;
    else counter_cached_L1_SingleMu16er1p5_++;
    if (!loaded_L1_SingleMu16er1p5_) {
        if (!b_L1_SingleMu16er1p5_) throw std::runtime_error("L1_SingleMu16er1p5 branch doesn't exist");
        b_L1_SingleMu16er1p5_->GetEntry(index);
        loaded_L1_SingleMu16er1p5_ = true;
    }
    return L1_SingleMu16er1p5_;
}
const bool &Nano::L1_SingleMu16er2p1() {
    if (!loaded_L1_SingleMu16er2p1_) counter_uncached_L1_SingleMu16er2p1_++;
    else counter_cached_L1_SingleMu16er2p1_++;
    if (!loaded_L1_SingleMu16er2p1_) {
        if (!b_L1_SingleMu16er2p1_) throw std::runtime_error("L1_SingleMu16er2p1 branch doesn't exist");
        b_L1_SingleMu16er2p1_->GetEntry(index);
        loaded_L1_SingleMu16er2p1_ = true;
    }
    return L1_SingleMu16er2p1_;
}
const bool &Nano::L1_SingleMu18() {
    if (!loaded_L1_SingleMu18_) counter_uncached_L1_SingleMu18_++;
    else counter_cached_L1_SingleMu18_++;
    if (!loaded_L1_SingleMu18_) {
        if (!b_L1_SingleMu18_) throw std::runtime_error("L1_SingleMu18 branch doesn't exist");
        b_L1_SingleMu18_->GetEntry(index);
        loaded_L1_SingleMu18_ = true;
    }
    return L1_SingleMu18_;
}
const bool &Nano::L1_SingleMu18er() {
    if (!loaded_L1_SingleMu18er_) counter_uncached_L1_SingleMu18er_++;
    else counter_cached_L1_SingleMu18er_++;
    if (!loaded_L1_SingleMu18er_) {
        if (!b_L1_SingleMu18er_) throw std::runtime_error("L1_SingleMu18er branch doesn't exist");
        b_L1_SingleMu18er_->GetEntry(index);
        loaded_L1_SingleMu18er_ = true;
    }
    return L1_SingleMu18er_;
}
const bool &Nano::L1_SingleMu18er1p5() {
    if (!loaded_L1_SingleMu18er1p5_) counter_uncached_L1_SingleMu18er1p5_++;
    else counter_cached_L1_SingleMu18er1p5_++;
    if (!loaded_L1_SingleMu18er1p5_) {
        if (!b_L1_SingleMu18er1p5_) throw std::runtime_error("L1_SingleMu18er1p5 branch doesn't exist");
        b_L1_SingleMu18er1p5_->GetEntry(index);
        loaded_L1_SingleMu18er1p5_ = true;
    }
    return L1_SingleMu18er1p5_;
}
const bool &Nano::L1_SingleMu18er2p1() {
    if (!loaded_L1_SingleMu18er2p1_) counter_uncached_L1_SingleMu18er2p1_++;
    else counter_cached_L1_SingleMu18er2p1_++;
    if (!loaded_L1_SingleMu18er2p1_) {
        if (!b_L1_SingleMu18er2p1_) throw std::runtime_error("L1_SingleMu18er2p1 branch doesn't exist");
        b_L1_SingleMu18er2p1_->GetEntry(index);
        loaded_L1_SingleMu18er2p1_ = true;
    }
    return L1_SingleMu18er2p1_;
}
const bool &Nano::L1_SingleMu20() {
    if (!loaded_L1_SingleMu20_) counter_uncached_L1_SingleMu20_++;
    else counter_cached_L1_SingleMu20_++;
    if (!loaded_L1_SingleMu20_) {
        if (!b_L1_SingleMu20_) throw std::runtime_error("L1_SingleMu20 branch doesn't exist");
        b_L1_SingleMu20_->GetEntry(index);
        loaded_L1_SingleMu20_ = true;
    }
    return L1_SingleMu20_;
}
const bool &Nano::L1_SingleMu20er() {
    if (!loaded_L1_SingleMu20er_) counter_uncached_L1_SingleMu20er_++;
    else counter_cached_L1_SingleMu20er_++;
    if (!loaded_L1_SingleMu20er_) {
        if (!b_L1_SingleMu20er_) throw std::runtime_error("L1_SingleMu20er branch doesn't exist");
        b_L1_SingleMu20er_->GetEntry(index);
        loaded_L1_SingleMu20er_ = true;
    }
    return L1_SingleMu20er_;
}
const bool &Nano::L1_SingleMu20er2p1() {
    if (!loaded_L1_SingleMu20er2p1_) counter_uncached_L1_SingleMu20er2p1_++;
    else counter_cached_L1_SingleMu20er2p1_++;
    if (!loaded_L1_SingleMu20er2p1_) {
        if (!b_L1_SingleMu20er2p1_) throw std::runtime_error("L1_SingleMu20er2p1 branch doesn't exist");
        b_L1_SingleMu20er2p1_->GetEntry(index);
        loaded_L1_SingleMu20er2p1_ = true;
    }
    return L1_SingleMu20er2p1_;
}
const bool &Nano::L1_SingleMu22() {
    if (!loaded_L1_SingleMu22_) counter_uncached_L1_SingleMu22_++;
    else counter_cached_L1_SingleMu22_++;
    if (!loaded_L1_SingleMu22_) {
        if (!b_L1_SingleMu22_) throw std::runtime_error("L1_SingleMu22 branch doesn't exist");
        b_L1_SingleMu22_->GetEntry(index);
        loaded_L1_SingleMu22_ = true;
    }
    return L1_SingleMu22_;
}
const bool &Nano::L1_SingleMu22_BMTF() {
    if (!loaded_L1_SingleMu22_BMTF_) counter_uncached_L1_SingleMu22_BMTF_++;
    else counter_cached_L1_SingleMu22_BMTF_++;
    if (!loaded_L1_SingleMu22_BMTF_) {
        if (!b_L1_SingleMu22_BMTF_) throw std::runtime_error("L1_SingleMu22_BMTF branch doesn't exist");
        b_L1_SingleMu22_BMTF_->GetEntry(index);
        loaded_L1_SingleMu22_BMTF_ = true;
    }
    return L1_SingleMu22_BMTF_;
}
const bool &Nano::L1_SingleMu22_DQ() {
    if (!loaded_L1_SingleMu22_DQ_) counter_uncached_L1_SingleMu22_DQ_++;
    else counter_cached_L1_SingleMu22_DQ_++;
    if (!loaded_L1_SingleMu22_DQ_) {
        if (!b_L1_SingleMu22_DQ_) throw std::runtime_error("L1_SingleMu22_DQ branch doesn't exist");
        b_L1_SingleMu22_DQ_->GetEntry(index);
        loaded_L1_SingleMu22_DQ_ = true;
    }
    return L1_SingleMu22_DQ_;
}
const bool &Nano::L1_SingleMu22_EMTF() {
    if (!loaded_L1_SingleMu22_EMTF_) counter_uncached_L1_SingleMu22_EMTF_++;
    else counter_cached_L1_SingleMu22_EMTF_++;
    if (!loaded_L1_SingleMu22_EMTF_) {
        if (!b_L1_SingleMu22_EMTF_) throw std::runtime_error("L1_SingleMu22_EMTF branch doesn't exist");
        b_L1_SingleMu22_EMTF_->GetEntry(index);
        loaded_L1_SingleMu22_EMTF_ = true;
    }
    return L1_SingleMu22_EMTF_;
}
const bool &Nano::L1_SingleMu22_OMTF() {
    if (!loaded_L1_SingleMu22_OMTF_) counter_uncached_L1_SingleMu22_OMTF_++;
    else counter_cached_L1_SingleMu22_OMTF_++;
    if (!loaded_L1_SingleMu22_OMTF_) {
        if (!b_L1_SingleMu22_OMTF_) throw std::runtime_error("L1_SingleMu22_OMTF branch doesn't exist");
        b_L1_SingleMu22_OMTF_->GetEntry(index);
        loaded_L1_SingleMu22_OMTF_ = true;
    }
    return L1_SingleMu22_OMTF_;
}
const bool &Nano::L1_SingleMu22_OQ() {
    if (!loaded_L1_SingleMu22_OQ_) counter_uncached_L1_SingleMu22_OQ_++;
    else counter_cached_L1_SingleMu22_OQ_++;
    if (!loaded_L1_SingleMu22_OQ_) {
        if (!b_L1_SingleMu22_OQ_) throw std::runtime_error("L1_SingleMu22_OQ branch doesn't exist");
        b_L1_SingleMu22_OQ_->GetEntry(index);
        loaded_L1_SingleMu22_OQ_ = true;
    }
    return L1_SingleMu22_OQ_;
}
const bool &Nano::L1_SingleMu22er() {
    if (!loaded_L1_SingleMu22er_) counter_uncached_L1_SingleMu22er_++;
    else counter_cached_L1_SingleMu22er_++;
    if (!loaded_L1_SingleMu22er_) {
        if (!b_L1_SingleMu22er_) throw std::runtime_error("L1_SingleMu22er branch doesn't exist");
        b_L1_SingleMu22er_->GetEntry(index);
        loaded_L1_SingleMu22er_ = true;
    }
    return L1_SingleMu22er_;
}
const bool &Nano::L1_SingleMu22er2p1() {
    if (!loaded_L1_SingleMu22er2p1_) counter_uncached_L1_SingleMu22er2p1_++;
    else counter_cached_L1_SingleMu22er2p1_++;
    if (!loaded_L1_SingleMu22er2p1_) {
        if (!b_L1_SingleMu22er2p1_) throw std::runtime_error("L1_SingleMu22er2p1 branch doesn't exist");
        b_L1_SingleMu22er2p1_->GetEntry(index);
        loaded_L1_SingleMu22er2p1_ = true;
    }
    return L1_SingleMu22er2p1_;
}
const bool &Nano::L1_SingleMu25() {
    if (!loaded_L1_SingleMu25_) counter_uncached_L1_SingleMu25_++;
    else counter_cached_L1_SingleMu25_++;
    if (!loaded_L1_SingleMu25_) {
        if (!b_L1_SingleMu25_) throw std::runtime_error("L1_SingleMu25 branch doesn't exist");
        b_L1_SingleMu25_->GetEntry(index);
        loaded_L1_SingleMu25_ = true;
    }
    return L1_SingleMu25_;
}
const bool &Nano::L1_SingleMu25er() {
    if (!loaded_L1_SingleMu25er_) counter_uncached_L1_SingleMu25er_++;
    else counter_cached_L1_SingleMu25er_++;
    if (!loaded_L1_SingleMu25er_) {
        if (!b_L1_SingleMu25er_) throw std::runtime_error("L1_SingleMu25er branch doesn't exist");
        b_L1_SingleMu25er_->GetEntry(index);
        loaded_L1_SingleMu25er_ = true;
    }
    return L1_SingleMu25er_;
}
const bool &Nano::L1_SingleMu3() {
    if (!loaded_L1_SingleMu3_) counter_uncached_L1_SingleMu3_++;
    else counter_cached_L1_SingleMu3_++;
    if (!loaded_L1_SingleMu3_) {
        if (!b_L1_SingleMu3_) throw std::runtime_error("L1_SingleMu3 branch doesn't exist");
        b_L1_SingleMu3_->GetEntry(index);
        loaded_L1_SingleMu3_ = true;
    }
    return L1_SingleMu3_;
}
const bool &Nano::L1_SingleMu30() {
    if (!loaded_L1_SingleMu30_) counter_uncached_L1_SingleMu30_++;
    else counter_cached_L1_SingleMu30_++;
    if (!loaded_L1_SingleMu30_) {
        if (!b_L1_SingleMu30_) throw std::runtime_error("L1_SingleMu30 branch doesn't exist");
        b_L1_SingleMu30_->GetEntry(index);
        loaded_L1_SingleMu30_ = true;
    }
    return L1_SingleMu30_;
}
const bool &Nano::L1_SingleMu30er() {
    if (!loaded_L1_SingleMu30er_) counter_uncached_L1_SingleMu30er_++;
    else counter_cached_L1_SingleMu30er_++;
    if (!loaded_L1_SingleMu30er_) {
        if (!b_L1_SingleMu30er_) throw std::runtime_error("L1_SingleMu30er branch doesn't exist");
        b_L1_SingleMu30er_->GetEntry(index);
        loaded_L1_SingleMu30er_ = true;
    }
    return L1_SingleMu30er_;
}
const bool &Nano::L1_SingleMu5() {
    if (!loaded_L1_SingleMu5_) counter_uncached_L1_SingleMu5_++;
    else counter_cached_L1_SingleMu5_++;
    if (!loaded_L1_SingleMu5_) {
        if (!b_L1_SingleMu5_) throw std::runtime_error("L1_SingleMu5 branch doesn't exist");
        b_L1_SingleMu5_->GetEntry(index);
        loaded_L1_SingleMu5_ = true;
    }
    return L1_SingleMu5_;
}
const bool &Nano::L1_SingleMu6er1p5() {
    if (!loaded_L1_SingleMu6er1p5_) counter_uncached_L1_SingleMu6er1p5_++;
    else counter_cached_L1_SingleMu6er1p5_++;
    if (!loaded_L1_SingleMu6er1p5_) {
        if (!b_L1_SingleMu6er1p5_) throw std::runtime_error("L1_SingleMu6er1p5 branch doesn't exist");
        b_L1_SingleMu6er1p5_->GetEntry(index);
        loaded_L1_SingleMu6er1p5_ = true;
    }
    return L1_SingleMu6er1p5_;
}
const bool &Nano::L1_SingleMu7() {
    if (!loaded_L1_SingleMu7_) counter_uncached_L1_SingleMu7_++;
    else counter_cached_L1_SingleMu7_++;
    if (!loaded_L1_SingleMu7_) {
        if (!b_L1_SingleMu7_) throw std::runtime_error("L1_SingleMu7 branch doesn't exist");
        b_L1_SingleMu7_->GetEntry(index);
        loaded_L1_SingleMu7_ = true;
    }
    return L1_SingleMu7_;
}
const bool &Nano::L1_SingleMu7_DQ() {
    if (!loaded_L1_SingleMu7_DQ_) counter_uncached_L1_SingleMu7_DQ_++;
    else counter_cached_L1_SingleMu7_DQ_++;
    if (!loaded_L1_SingleMu7_DQ_) {
        if (!b_L1_SingleMu7_DQ_) throw std::runtime_error("L1_SingleMu7_DQ branch doesn't exist");
        b_L1_SingleMu7_DQ_->GetEntry(index);
        loaded_L1_SingleMu7_DQ_ = true;
    }
    return L1_SingleMu7_DQ_;
}
const bool &Nano::L1_SingleMu7er1p5() {
    if (!loaded_L1_SingleMu7er1p5_) counter_uncached_L1_SingleMu7er1p5_++;
    else counter_cached_L1_SingleMu7er1p5_++;
    if (!loaded_L1_SingleMu7er1p5_) {
        if (!b_L1_SingleMu7er1p5_) throw std::runtime_error("L1_SingleMu7er1p5 branch doesn't exist");
        b_L1_SingleMu7er1p5_->GetEntry(index);
        loaded_L1_SingleMu7er1p5_ = true;
    }
    return L1_SingleMu7er1p5_;
}
const bool &Nano::L1_SingleMu8er1p5() {
    if (!loaded_L1_SingleMu8er1p5_) counter_uncached_L1_SingleMu8er1p5_++;
    else counter_cached_L1_SingleMu8er1p5_++;
    if (!loaded_L1_SingleMu8er1p5_) {
        if (!b_L1_SingleMu8er1p5_) throw std::runtime_error("L1_SingleMu8er1p5 branch doesn't exist");
        b_L1_SingleMu8er1p5_->GetEntry(index);
        loaded_L1_SingleMu8er1p5_ = true;
    }
    return L1_SingleMu8er1p5_;
}
const bool &Nano::L1_SingleMu9er1p5() {
    if (!loaded_L1_SingleMu9er1p5_) counter_uncached_L1_SingleMu9er1p5_++;
    else counter_cached_L1_SingleMu9er1p5_++;
    if (!loaded_L1_SingleMu9er1p5_) {
        if (!b_L1_SingleMu9er1p5_) throw std::runtime_error("L1_SingleMu9er1p5 branch doesn't exist");
        b_L1_SingleMu9er1p5_->GetEntry(index);
        loaded_L1_SingleMu9er1p5_ = true;
    }
    return L1_SingleMu9er1p5_;
}
const bool &Nano::L1_SingleMuCosmics() {
    if (!loaded_L1_SingleMuCosmics_) counter_uncached_L1_SingleMuCosmics_++;
    else counter_cached_L1_SingleMuCosmics_++;
    if (!loaded_L1_SingleMuCosmics_) {
        if (!b_L1_SingleMuCosmics_) throw std::runtime_error("L1_SingleMuCosmics branch doesn't exist");
        b_L1_SingleMuCosmics_->GetEntry(index);
        loaded_L1_SingleMuCosmics_ = true;
    }
    return L1_SingleMuCosmics_;
}
const bool &Nano::L1_SingleMuCosmics_BMTF() {
    if (!loaded_L1_SingleMuCosmics_BMTF_) counter_uncached_L1_SingleMuCosmics_BMTF_++;
    else counter_cached_L1_SingleMuCosmics_BMTF_++;
    if (!loaded_L1_SingleMuCosmics_BMTF_) {
        if (!b_L1_SingleMuCosmics_BMTF_) throw std::runtime_error("L1_SingleMuCosmics_BMTF branch doesn't exist");
        b_L1_SingleMuCosmics_BMTF_->GetEntry(index);
        loaded_L1_SingleMuCosmics_BMTF_ = true;
    }
    return L1_SingleMuCosmics_BMTF_;
}
const bool &Nano::L1_SingleMuCosmics_EMTF() {
    if (!loaded_L1_SingleMuCosmics_EMTF_) counter_uncached_L1_SingleMuCosmics_EMTF_++;
    else counter_cached_L1_SingleMuCosmics_EMTF_++;
    if (!loaded_L1_SingleMuCosmics_EMTF_) {
        if (!b_L1_SingleMuCosmics_EMTF_) throw std::runtime_error("L1_SingleMuCosmics_EMTF branch doesn't exist");
        b_L1_SingleMuCosmics_EMTF_->GetEntry(index);
        loaded_L1_SingleMuCosmics_EMTF_ = true;
    }
    return L1_SingleMuCosmics_EMTF_;
}
const bool &Nano::L1_SingleMuCosmics_OMTF() {
    if (!loaded_L1_SingleMuCosmics_OMTF_) counter_uncached_L1_SingleMuCosmics_OMTF_++;
    else counter_cached_L1_SingleMuCosmics_OMTF_++;
    if (!loaded_L1_SingleMuCosmics_OMTF_) {
        if (!b_L1_SingleMuCosmics_OMTF_) throw std::runtime_error("L1_SingleMuCosmics_OMTF branch doesn't exist");
        b_L1_SingleMuCosmics_OMTF_->GetEntry(index);
        loaded_L1_SingleMuCosmics_OMTF_ = true;
    }
    return L1_SingleMuCosmics_OMTF_;
}
const bool &Nano::L1_SingleMuOpen() {
    if (!loaded_L1_SingleMuOpen_) counter_uncached_L1_SingleMuOpen_++;
    else counter_cached_L1_SingleMuOpen_++;
    if (!loaded_L1_SingleMuOpen_) {
        if (!b_L1_SingleMuOpen_) throw std::runtime_error("L1_SingleMuOpen branch doesn't exist");
        b_L1_SingleMuOpen_->GetEntry(index);
        loaded_L1_SingleMuOpen_ = true;
    }
    return L1_SingleMuOpen_;
}
const bool &Nano::L1_SingleMuOpen_NotBptxOR() {
    if (!loaded_L1_SingleMuOpen_NotBptxOR_) counter_uncached_L1_SingleMuOpen_NotBptxOR_++;
    else counter_cached_L1_SingleMuOpen_NotBptxOR_++;
    if (!loaded_L1_SingleMuOpen_NotBptxOR_) {
        if (!b_L1_SingleMuOpen_NotBptxOR_) throw std::runtime_error("L1_SingleMuOpen_NotBptxOR branch doesn't exist");
        b_L1_SingleMuOpen_NotBptxOR_->GetEntry(index);
        loaded_L1_SingleMuOpen_NotBptxOR_ = true;
    }
    return L1_SingleMuOpen_NotBptxOR_;
}
const bool &Nano::L1_SingleMuOpen_NotBptxOR_3BX() {
    if (!loaded_L1_SingleMuOpen_NotBptxOR_3BX_) counter_uncached_L1_SingleMuOpen_NotBptxOR_3BX_++;
    else counter_cached_L1_SingleMuOpen_NotBptxOR_3BX_++;
    if (!loaded_L1_SingleMuOpen_NotBptxOR_3BX_) {
        if (!b_L1_SingleMuOpen_NotBptxOR_3BX_) throw std::runtime_error("L1_SingleMuOpen_NotBptxOR_3BX branch doesn't exist");
        b_L1_SingleMuOpen_NotBptxOR_3BX_->GetEntry(index);
        loaded_L1_SingleMuOpen_NotBptxOR_3BX_ = true;
    }
    return L1_SingleMuOpen_NotBptxOR_3BX_;
}
const bool &Nano::L1_SingleMuOpen_er1p1_NotBptxOR_3BX() {
    if (!loaded_L1_SingleMuOpen_er1p1_NotBptxOR_3BX_) counter_uncached_L1_SingleMuOpen_er1p1_NotBptxOR_3BX_++;
    else counter_cached_L1_SingleMuOpen_er1p1_NotBptxOR_3BX_++;
    if (!loaded_L1_SingleMuOpen_er1p1_NotBptxOR_3BX_) {
        if (!b_L1_SingleMuOpen_er1p1_NotBptxOR_3BX_) throw std::runtime_error("L1_SingleMuOpen_er1p1_NotBptxOR_3BX branch doesn't exist");
        b_L1_SingleMuOpen_er1p1_NotBptxOR_3BX_->GetEntry(index);
        loaded_L1_SingleMuOpen_er1p1_NotBptxOR_3BX_ = true;
    }
    return L1_SingleMuOpen_er1p1_NotBptxOR_3BX_;
}
const bool &Nano::L1_SingleMuOpen_er1p4_NotBptxOR_3BX() {
    if (!loaded_L1_SingleMuOpen_er1p4_NotBptxOR_3BX_) counter_uncached_L1_SingleMuOpen_er1p4_NotBptxOR_3BX_++;
    else counter_cached_L1_SingleMuOpen_er1p4_NotBptxOR_3BX_++;
    if (!loaded_L1_SingleMuOpen_er1p4_NotBptxOR_3BX_) {
        if (!b_L1_SingleMuOpen_er1p4_NotBptxOR_3BX_) throw std::runtime_error("L1_SingleMuOpen_er1p4_NotBptxOR_3BX branch doesn't exist");
        b_L1_SingleMuOpen_er1p4_NotBptxOR_3BX_->GetEntry(index);
        loaded_L1_SingleMuOpen_er1p4_NotBptxOR_3BX_ = true;
    }
    return L1_SingleMuOpen_er1p4_NotBptxOR_3BX_;
}
const bool &Nano::L1_SingleMuShower_Nominal() {
    if (!loaded_L1_SingleMuShower_Nominal_) counter_uncached_L1_SingleMuShower_Nominal_++;
    else counter_cached_L1_SingleMuShower_Nominal_++;
    if (!loaded_L1_SingleMuShower_Nominal_) {
        if (!b_L1_SingleMuShower_Nominal_) throw std::runtime_error("L1_SingleMuShower_Nominal branch doesn't exist");
        b_L1_SingleMuShower_Nominal_->GetEntry(index);
        loaded_L1_SingleMuShower_Nominal_ = true;
    }
    return L1_SingleMuShower_Nominal_;
}
const bool &Nano::L1_SingleMuShower_Tight() {
    if (!loaded_L1_SingleMuShower_Tight_) counter_uncached_L1_SingleMuShower_Tight_++;
    else counter_cached_L1_SingleMuShower_Tight_++;
    if (!loaded_L1_SingleMuShower_Tight_) {
        if (!b_L1_SingleMuShower_Tight_) throw std::runtime_error("L1_SingleMuShower_Tight branch doesn't exist");
        b_L1_SingleMuShower_Tight_->GetEntry(index);
        loaded_L1_SingleMuShower_Tight_ = true;
    }
    return L1_SingleMuShower_Tight_;
}
const bool &Nano::L1_SingleTau100er() {
    if (!loaded_L1_SingleTau100er_) counter_uncached_L1_SingleTau100er_++;
    else counter_cached_L1_SingleTau100er_++;
    if (!loaded_L1_SingleTau100er_) {
        if (!b_L1_SingleTau100er_) throw std::runtime_error("L1_SingleTau100er branch doesn't exist");
        b_L1_SingleTau100er_->GetEntry(index);
        loaded_L1_SingleTau100er_ = true;
    }
    return L1_SingleTau100er_;
}
const bool &Nano::L1_SingleTau100er2p1() {
    if (!loaded_L1_SingleTau100er2p1_) counter_uncached_L1_SingleTau100er2p1_++;
    else counter_cached_L1_SingleTau100er2p1_++;
    if (!loaded_L1_SingleTau100er2p1_) {
        if (!b_L1_SingleTau100er2p1_) throw std::runtime_error("L1_SingleTau100er2p1 branch doesn't exist");
        b_L1_SingleTau100er2p1_->GetEntry(index);
        loaded_L1_SingleTau100er2p1_ = true;
    }
    return L1_SingleTau100er2p1_;
}
const bool &Nano::L1_SingleTau120er() {
    if (!loaded_L1_SingleTau120er_) counter_uncached_L1_SingleTau120er_++;
    else counter_cached_L1_SingleTau120er_++;
    if (!loaded_L1_SingleTau120er_) {
        if (!b_L1_SingleTau120er_) throw std::runtime_error("L1_SingleTau120er branch doesn't exist");
        b_L1_SingleTau120er_->GetEntry(index);
        loaded_L1_SingleTau120er_ = true;
    }
    return L1_SingleTau120er_;
}
const bool &Nano::L1_SingleTau120er2p1() {
    if (!loaded_L1_SingleTau120er2p1_) counter_uncached_L1_SingleTau120er2p1_++;
    else counter_cached_L1_SingleTau120er2p1_++;
    if (!loaded_L1_SingleTau120er2p1_) {
        if (!b_L1_SingleTau120er2p1_) throw std::runtime_error("L1_SingleTau120er2p1 branch doesn't exist");
        b_L1_SingleTau120er2p1_->GetEntry(index);
        loaded_L1_SingleTau120er2p1_ = true;
    }
    return L1_SingleTau120er2p1_;
}
const bool &Nano::L1_SingleTau130er2p1() {
    if (!loaded_L1_SingleTau130er2p1_) counter_uncached_L1_SingleTau130er2p1_++;
    else counter_cached_L1_SingleTau130er2p1_++;
    if (!loaded_L1_SingleTau130er2p1_) {
        if (!b_L1_SingleTau130er2p1_) throw std::runtime_error("L1_SingleTau130er2p1 branch doesn't exist");
        b_L1_SingleTau130er2p1_->GetEntry(index);
        loaded_L1_SingleTau130er2p1_ = true;
    }
    return L1_SingleTau130er2p1_;
}
const bool &Nano::L1_SingleTau140er2p1() {
    if (!loaded_L1_SingleTau140er2p1_) counter_uncached_L1_SingleTau140er2p1_++;
    else counter_cached_L1_SingleTau140er2p1_++;
    if (!loaded_L1_SingleTau140er2p1_) {
        if (!b_L1_SingleTau140er2p1_) throw std::runtime_error("L1_SingleTau140er2p1 branch doesn't exist");
        b_L1_SingleTau140er2p1_->GetEntry(index);
        loaded_L1_SingleTau140er2p1_ = true;
    }
    return L1_SingleTau140er2p1_;
}
const bool &Nano::L1_SingleTau20() {
    if (!loaded_L1_SingleTau20_) counter_uncached_L1_SingleTau20_++;
    else counter_cached_L1_SingleTau20_++;
    if (!loaded_L1_SingleTau20_) {
        if (!b_L1_SingleTau20_) throw std::runtime_error("L1_SingleTau20 branch doesn't exist");
        b_L1_SingleTau20_->GetEntry(index);
        loaded_L1_SingleTau20_ = true;
    }
    return L1_SingleTau20_;
}
const bool &Nano::L1_SingleTau70er2p1() {
    if (!loaded_L1_SingleTau70er2p1_) counter_uncached_L1_SingleTau70er2p1_++;
    else counter_cached_L1_SingleTau70er2p1_++;
    if (!loaded_L1_SingleTau70er2p1_) {
        if (!b_L1_SingleTau70er2p1_) throw std::runtime_error("L1_SingleTau70er2p1 branch doesn't exist");
        b_L1_SingleTau70er2p1_->GetEntry(index);
        loaded_L1_SingleTau70er2p1_ = true;
    }
    return L1_SingleTau70er2p1_;
}
const bool &Nano::L1_SingleTau80er() {
    if (!loaded_L1_SingleTau80er_) counter_uncached_L1_SingleTau80er_++;
    else counter_cached_L1_SingleTau80er_++;
    if (!loaded_L1_SingleTau80er_) {
        if (!b_L1_SingleTau80er_) throw std::runtime_error("L1_SingleTau80er branch doesn't exist");
        b_L1_SingleTau80er_->GetEntry(index);
        loaded_L1_SingleTau80er_ = true;
    }
    return L1_SingleTau80er_;
}
const bool &Nano::L1_SingleTau80er2p1() {
    if (!loaded_L1_SingleTau80er2p1_) counter_uncached_L1_SingleTau80er2p1_++;
    else counter_cached_L1_SingleTau80er2p1_++;
    if (!loaded_L1_SingleTau80er2p1_) {
        if (!b_L1_SingleTau80er2p1_) throw std::runtime_error("L1_SingleTau80er2p1 branch doesn't exist");
        b_L1_SingleTau80er2p1_->GetEntry(index);
        loaded_L1_SingleTau80er2p1_ = true;
    }
    return L1_SingleTau80er2p1_;
}
const bool &Nano::L1_TOTEM_1() {
    if (!loaded_L1_TOTEM_1_) counter_uncached_L1_TOTEM_1_++;
    else counter_cached_L1_TOTEM_1_++;
    if (!loaded_L1_TOTEM_1_) {
        if (!b_L1_TOTEM_1_) throw std::runtime_error("L1_TOTEM_1 branch doesn't exist");
        b_L1_TOTEM_1_->GetEntry(index);
        loaded_L1_TOTEM_1_ = true;
    }
    return L1_TOTEM_1_;
}
const bool &Nano::L1_TOTEM_2() {
    if (!loaded_L1_TOTEM_2_) counter_uncached_L1_TOTEM_2_++;
    else counter_cached_L1_TOTEM_2_++;
    if (!loaded_L1_TOTEM_2_) {
        if (!b_L1_TOTEM_2_) throw std::runtime_error("L1_TOTEM_2 branch doesn't exist");
        b_L1_TOTEM_2_->GetEntry(index);
        loaded_L1_TOTEM_2_ = true;
    }
    return L1_TOTEM_2_;
}
const bool &Nano::L1_TOTEM_3() {
    if (!loaded_L1_TOTEM_3_) counter_uncached_L1_TOTEM_3_++;
    else counter_cached_L1_TOTEM_3_++;
    if (!loaded_L1_TOTEM_3_) {
        if (!b_L1_TOTEM_3_) throw std::runtime_error("L1_TOTEM_3 branch doesn't exist");
        b_L1_TOTEM_3_->GetEntry(index);
        loaded_L1_TOTEM_3_ = true;
    }
    return L1_TOTEM_3_;
}
const bool &Nano::L1_TOTEM_4() {
    if (!loaded_L1_TOTEM_4_) counter_uncached_L1_TOTEM_4_++;
    else counter_cached_L1_TOTEM_4_++;
    if (!loaded_L1_TOTEM_4_) {
        if (!b_L1_TOTEM_4_) throw std::runtime_error("L1_TOTEM_4 branch doesn't exist");
        b_L1_TOTEM_4_->GetEntry(index);
        loaded_L1_TOTEM_4_ = true;
    }
    return L1_TOTEM_4_;
}
const bool &Nano::L1_TripleEG16er2p5() {
    if (!loaded_L1_TripleEG16er2p5_) counter_uncached_L1_TripleEG16er2p5_++;
    else counter_cached_L1_TripleEG16er2p5_++;
    if (!loaded_L1_TripleEG16er2p5_) {
        if (!b_L1_TripleEG16er2p5_) throw std::runtime_error("L1_TripleEG16er2p5 branch doesn't exist");
        b_L1_TripleEG16er2p5_->GetEntry(index);
        loaded_L1_TripleEG16er2p5_ = true;
    }
    return L1_TripleEG16er2p5_;
}
const bool &Nano::L1_TripleEG_14_10_8() {
    if (!loaded_L1_TripleEG_14_10_8_) counter_uncached_L1_TripleEG_14_10_8_++;
    else counter_cached_L1_TripleEG_14_10_8_++;
    if (!loaded_L1_TripleEG_14_10_8_) {
        if (!b_L1_TripleEG_14_10_8_) throw std::runtime_error("L1_TripleEG_14_10_8 branch doesn't exist");
        b_L1_TripleEG_14_10_8_->GetEntry(index);
        loaded_L1_TripleEG_14_10_8_ = true;
    }
    return L1_TripleEG_14_10_8_;
}
const bool &Nano::L1_TripleEG_16_12_8_er2p5() {
    if (!loaded_L1_TripleEG_16_12_8_er2p5_) counter_uncached_L1_TripleEG_16_12_8_er2p5_++;
    else counter_cached_L1_TripleEG_16_12_8_er2p5_++;
    if (!loaded_L1_TripleEG_16_12_8_er2p5_) {
        if (!b_L1_TripleEG_16_12_8_er2p5_) throw std::runtime_error("L1_TripleEG_16_12_8_er2p5 branch doesn't exist");
        b_L1_TripleEG_16_12_8_er2p5_->GetEntry(index);
        loaded_L1_TripleEG_16_12_8_er2p5_ = true;
    }
    return L1_TripleEG_16_12_8_er2p5_;
}
const bool &Nano::L1_TripleEG_16_15_8_er2p5() {
    if (!loaded_L1_TripleEG_16_15_8_er2p5_) counter_uncached_L1_TripleEG_16_15_8_er2p5_++;
    else counter_cached_L1_TripleEG_16_15_8_er2p5_++;
    if (!loaded_L1_TripleEG_16_15_8_er2p5_) {
        if (!b_L1_TripleEG_16_15_8_er2p5_) throw std::runtime_error("L1_TripleEG_16_15_8_er2p5 branch doesn't exist");
        b_L1_TripleEG_16_15_8_er2p5_->GetEntry(index);
        loaded_L1_TripleEG_16_15_8_er2p5_ = true;
    }
    return L1_TripleEG_16_15_8_er2p5_;
}
const bool &Nano::L1_TripleEG_18_17_8() {
    if (!loaded_L1_TripleEG_18_17_8_) counter_uncached_L1_TripleEG_18_17_8_++;
    else counter_cached_L1_TripleEG_18_17_8_++;
    if (!loaded_L1_TripleEG_18_17_8_) {
        if (!b_L1_TripleEG_18_17_8_) throw std::runtime_error("L1_TripleEG_18_17_8 branch doesn't exist");
        b_L1_TripleEG_18_17_8_->GetEntry(index);
        loaded_L1_TripleEG_18_17_8_ = true;
    }
    return L1_TripleEG_18_17_8_;
}
const bool &Nano::L1_TripleEG_18_17_8_er2p5() {
    if (!loaded_L1_TripleEG_18_17_8_er2p5_) counter_uncached_L1_TripleEG_18_17_8_er2p5_++;
    else counter_cached_L1_TripleEG_18_17_8_er2p5_++;
    if (!loaded_L1_TripleEG_18_17_8_er2p5_) {
        if (!b_L1_TripleEG_18_17_8_er2p5_) throw std::runtime_error("L1_TripleEG_18_17_8_er2p5 branch doesn't exist");
        b_L1_TripleEG_18_17_8_er2p5_->GetEntry(index);
        loaded_L1_TripleEG_18_17_8_er2p5_ = true;
    }
    return L1_TripleEG_18_17_8_er2p5_;
}
const bool &Nano::L1_TripleEG_18_18_12_er2p5() {
    if (!loaded_L1_TripleEG_18_18_12_er2p5_) counter_uncached_L1_TripleEG_18_18_12_er2p5_++;
    else counter_cached_L1_TripleEG_18_18_12_er2p5_++;
    if (!loaded_L1_TripleEG_18_18_12_er2p5_) {
        if (!b_L1_TripleEG_18_18_12_er2p5_) throw std::runtime_error("L1_TripleEG_18_18_12_er2p5 branch doesn't exist");
        b_L1_TripleEG_18_18_12_er2p5_->GetEntry(index);
        loaded_L1_TripleEG_18_18_12_er2p5_ = true;
    }
    return L1_TripleEG_18_18_12_er2p5_;
}
const bool &Nano::L1_TripleEG_Iso20_10_5() {
    if (!loaded_L1_TripleEG_Iso20_10_5_) counter_uncached_L1_TripleEG_Iso20_10_5_++;
    else counter_cached_L1_TripleEG_Iso20_10_5_++;
    if (!loaded_L1_TripleEG_Iso20_10_5_) {
        if (!b_L1_TripleEG_Iso20_10_5_) throw std::runtime_error("L1_TripleEG_Iso20_10_5 branch doesn't exist");
        b_L1_TripleEG_Iso20_10_5_->GetEntry(index);
        loaded_L1_TripleEG_Iso20_10_5_ = true;
    }
    return L1_TripleEG_Iso20_10_5_;
}
const bool &Nano::L1_TripleEG_LooseIso20_10_5() {
    if (!loaded_L1_TripleEG_LooseIso20_10_5_) counter_uncached_L1_TripleEG_LooseIso20_10_5_++;
    else counter_cached_L1_TripleEG_LooseIso20_10_5_++;
    if (!loaded_L1_TripleEG_LooseIso20_10_5_) {
        if (!b_L1_TripleEG_LooseIso20_10_5_) throw std::runtime_error("L1_TripleEG_LooseIso20_10_5 branch doesn't exist");
        b_L1_TripleEG_LooseIso20_10_5_->GetEntry(index);
        loaded_L1_TripleEG_LooseIso20_10_5_ = true;
    }
    return L1_TripleEG_LooseIso20_10_5_;
}
const bool &Nano::L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5() {
    if (!loaded_L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5_) counter_uncached_L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5_++;
    else counter_cached_L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5_++;
    if (!loaded_L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5_) {
        if (!b_L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5_) throw std::runtime_error("L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5 branch doesn't exist");
        b_L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5_->GetEntry(index);
        loaded_L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5_ = true;
    }
    return L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5_;
}
const bool &Nano::L1_TripleJet_100_85_72_VBF() {
    if (!loaded_L1_TripleJet_100_85_72_VBF_) counter_uncached_L1_TripleJet_100_85_72_VBF_++;
    else counter_cached_L1_TripleJet_100_85_72_VBF_++;
    if (!loaded_L1_TripleJet_100_85_72_VBF_) {
        if (!b_L1_TripleJet_100_85_72_VBF_) throw std::runtime_error("L1_TripleJet_100_85_72_VBF branch doesn't exist");
        b_L1_TripleJet_100_85_72_VBF_->GetEntry(index);
        loaded_L1_TripleJet_100_85_72_VBF_ = true;
    }
    return L1_TripleJet_100_85_72_VBF_;
}
const bool &Nano::L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5() {
    if (!loaded_L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5_) counter_uncached_L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5_++;
    else counter_cached_L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5_++;
    if (!loaded_L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5_) {
        if (!b_L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5_) throw std::runtime_error("L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5 branch doesn't exist");
        b_L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5_->GetEntry(index);
        loaded_L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5_ = true;
    }
    return L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5_;
}
const bool &Nano::L1_TripleJet_105_85_76_VBF() {
    if (!loaded_L1_TripleJet_105_85_76_VBF_) counter_uncached_L1_TripleJet_105_85_76_VBF_++;
    else counter_cached_L1_TripleJet_105_85_76_VBF_++;
    if (!loaded_L1_TripleJet_105_85_76_VBF_) {
        if (!b_L1_TripleJet_105_85_76_VBF_) throw std::runtime_error("L1_TripleJet_105_85_76_VBF branch doesn't exist");
        b_L1_TripleJet_105_85_76_VBF_->GetEntry(index);
        loaded_L1_TripleJet_105_85_76_VBF_ = true;
    }
    return L1_TripleJet_105_85_76_VBF_;
}
const bool &Nano::L1_TripleJet_84_68_48_VBF() {
    if (!loaded_L1_TripleJet_84_68_48_VBF_) counter_uncached_L1_TripleJet_84_68_48_VBF_++;
    else counter_cached_L1_TripleJet_84_68_48_VBF_++;
    if (!loaded_L1_TripleJet_84_68_48_VBF_) {
        if (!b_L1_TripleJet_84_68_48_VBF_) throw std::runtime_error("L1_TripleJet_84_68_48_VBF branch doesn't exist");
        b_L1_TripleJet_84_68_48_VBF_->GetEntry(index);
        loaded_L1_TripleJet_84_68_48_VBF_ = true;
    }
    return L1_TripleJet_84_68_48_VBF_;
}
const bool &Nano::L1_TripleJet_88_72_56_VBF() {
    if (!loaded_L1_TripleJet_88_72_56_VBF_) counter_uncached_L1_TripleJet_88_72_56_VBF_++;
    else counter_cached_L1_TripleJet_88_72_56_VBF_++;
    if (!loaded_L1_TripleJet_88_72_56_VBF_) {
        if (!b_L1_TripleJet_88_72_56_VBF_) throw std::runtime_error("L1_TripleJet_88_72_56_VBF branch doesn't exist");
        b_L1_TripleJet_88_72_56_VBF_->GetEntry(index);
        loaded_L1_TripleJet_88_72_56_VBF_ = true;
    }
    return L1_TripleJet_88_72_56_VBF_;
}
const bool &Nano::L1_TripleJet_92_76_64_VBF() {
    if (!loaded_L1_TripleJet_92_76_64_VBF_) counter_uncached_L1_TripleJet_92_76_64_VBF_++;
    else counter_cached_L1_TripleJet_92_76_64_VBF_++;
    if (!loaded_L1_TripleJet_92_76_64_VBF_) {
        if (!b_L1_TripleJet_92_76_64_VBF_) throw std::runtime_error("L1_TripleJet_92_76_64_VBF branch doesn't exist");
        b_L1_TripleJet_92_76_64_VBF_->GetEntry(index);
        loaded_L1_TripleJet_92_76_64_VBF_ = true;
    }
    return L1_TripleJet_92_76_64_VBF_;
}
const bool &Nano::L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5() {
    if (!loaded_L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5_) counter_uncached_L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5_++;
    else counter_cached_L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5_++;
    if (!loaded_L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5_) {
        if (!b_L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5_) throw std::runtime_error("L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5 branch doesn't exist");
        b_L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5_->GetEntry(index);
        loaded_L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5_ = true;
    }
    return L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5_;
}
const bool &Nano::L1_TripleJet_98_83_71_VBF() {
    if (!loaded_L1_TripleJet_98_83_71_VBF_) counter_uncached_L1_TripleJet_98_83_71_VBF_++;
    else counter_cached_L1_TripleJet_98_83_71_VBF_++;
    if (!loaded_L1_TripleJet_98_83_71_VBF_) {
        if (!b_L1_TripleJet_98_83_71_VBF_) throw std::runtime_error("L1_TripleJet_98_83_71_VBF branch doesn't exist");
        b_L1_TripleJet_98_83_71_VBF_->GetEntry(index);
        loaded_L1_TripleJet_98_83_71_VBF_ = true;
    }
    return L1_TripleJet_98_83_71_VBF_;
}
const bool &Nano::L1_TripleMu0() {
    if (!loaded_L1_TripleMu0_) counter_uncached_L1_TripleMu0_++;
    else counter_cached_L1_TripleMu0_++;
    if (!loaded_L1_TripleMu0_) {
        if (!b_L1_TripleMu0_) throw std::runtime_error("L1_TripleMu0 branch doesn't exist");
        b_L1_TripleMu0_->GetEntry(index);
        loaded_L1_TripleMu0_ = true;
    }
    return L1_TripleMu0_;
}
const bool &Nano::L1_TripleMu0_OQ() {
    if (!loaded_L1_TripleMu0_OQ_) counter_uncached_L1_TripleMu0_OQ_++;
    else counter_cached_L1_TripleMu0_OQ_++;
    if (!loaded_L1_TripleMu0_OQ_) {
        if (!b_L1_TripleMu0_OQ_) throw std::runtime_error("L1_TripleMu0_OQ branch doesn't exist");
        b_L1_TripleMu0_OQ_->GetEntry(index);
        loaded_L1_TripleMu0_OQ_ = true;
    }
    return L1_TripleMu0_OQ_;
}
const bool &Nano::L1_TripleMu0_SQ() {
    if (!loaded_L1_TripleMu0_SQ_) counter_uncached_L1_TripleMu0_SQ_++;
    else counter_cached_L1_TripleMu0_SQ_++;
    if (!loaded_L1_TripleMu0_SQ_) {
        if (!b_L1_TripleMu0_SQ_) throw std::runtime_error("L1_TripleMu0_SQ branch doesn't exist");
        b_L1_TripleMu0_SQ_->GetEntry(index);
        loaded_L1_TripleMu0_SQ_ = true;
    }
    return L1_TripleMu0_SQ_;
}
const bool &Nano::L1_TripleMu3() {
    if (!loaded_L1_TripleMu3_) counter_uncached_L1_TripleMu3_++;
    else counter_cached_L1_TripleMu3_++;
    if (!loaded_L1_TripleMu3_) {
        if (!b_L1_TripleMu3_) throw std::runtime_error("L1_TripleMu3 branch doesn't exist");
        b_L1_TripleMu3_->GetEntry(index);
        loaded_L1_TripleMu3_ = true;
    }
    return L1_TripleMu3_;
}
const bool &Nano::L1_TripleMu3_SQ() {
    if (!loaded_L1_TripleMu3_SQ_) counter_uncached_L1_TripleMu3_SQ_++;
    else counter_cached_L1_TripleMu3_SQ_++;
    if (!loaded_L1_TripleMu3_SQ_) {
        if (!b_L1_TripleMu3_SQ_) throw std::runtime_error("L1_TripleMu3_SQ branch doesn't exist");
        b_L1_TripleMu3_SQ_->GetEntry(index);
        loaded_L1_TripleMu3_SQ_ = true;
    }
    return L1_TripleMu3_SQ_;
}
const bool &Nano::L1_TripleMu_2SQ_1p5SQ_0OQ() {
    if (!loaded_L1_TripleMu_2SQ_1p5SQ_0OQ_) counter_uncached_L1_TripleMu_2SQ_1p5SQ_0OQ_++;
    else counter_cached_L1_TripleMu_2SQ_1p5SQ_0OQ_++;
    if (!loaded_L1_TripleMu_2SQ_1p5SQ_0OQ_) {
        if (!b_L1_TripleMu_2SQ_1p5SQ_0OQ_) throw std::runtime_error("L1_TripleMu_2SQ_1p5SQ_0OQ branch doesn't exist");
        b_L1_TripleMu_2SQ_1p5SQ_0OQ_->GetEntry(index);
        loaded_L1_TripleMu_2SQ_1p5SQ_0OQ_ = true;
    }
    return L1_TripleMu_2SQ_1p5SQ_0OQ_;
}
const bool &Nano::L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12() {
    if (!loaded_L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12_) counter_uncached_L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12_++;
    else counter_cached_L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12_++;
    if (!loaded_L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12_) {
        if (!b_L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12_) throw std::runtime_error("L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12 branch doesn't exist");
        b_L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12_->GetEntry(index);
        loaded_L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12_ = true;
    }
    return L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12_;
}
const bool &Nano::L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12() {
    if (!loaded_L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12_) counter_uncached_L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12_++;
    else counter_cached_L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12_++;
    if (!loaded_L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12_) {
        if (!b_L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12_) throw std::runtime_error("L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12 branch doesn't exist");
        b_L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12_->GetEntry(index);
        loaded_L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12_ = true;
    }
    return L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12_;
}
const bool &Nano::L1_TripleMu_4_4_4() {
    if (!loaded_L1_TripleMu_4_4_4_) counter_uncached_L1_TripleMu_4_4_4_++;
    else counter_cached_L1_TripleMu_4_4_4_++;
    if (!loaded_L1_TripleMu_4_4_4_) {
        if (!b_L1_TripleMu_4_4_4_) throw std::runtime_error("L1_TripleMu_4_4_4 branch doesn't exist");
        b_L1_TripleMu_4_4_4_->GetEntry(index);
        loaded_L1_TripleMu_4_4_4_ = true;
    }
    return L1_TripleMu_4_4_4_;
}
const bool &Nano::L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17() {
    if (!loaded_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_) counter_uncached_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_++;
    else counter_cached_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_++;
    if (!loaded_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_) {
        if (!b_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_) throw std::runtime_error("L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17 branch doesn't exist");
        b_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_->GetEntry(index);
        loaded_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_ = true;
    }
    return L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_;
}
const bool &Nano::L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14() {
    if (!loaded_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14_) counter_uncached_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14_++;
    else counter_cached_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14_++;
    if (!loaded_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14_) {
        if (!b_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14_) throw std::runtime_error("L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14 branch doesn't exist");
        b_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14_->GetEntry(index);
        loaded_L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14_ = true;
    }
    return L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14_;
}
const bool &Nano::L1_TripleMu_5SQ_3SQ_0OQ() {
    if (!loaded_L1_TripleMu_5SQ_3SQ_0OQ_) counter_uncached_L1_TripleMu_5SQ_3SQ_0OQ_++;
    else counter_cached_L1_TripleMu_5SQ_3SQ_0OQ_++;
    if (!loaded_L1_TripleMu_5SQ_3SQ_0OQ_) {
        if (!b_L1_TripleMu_5SQ_3SQ_0OQ_) throw std::runtime_error("L1_TripleMu_5SQ_3SQ_0OQ branch doesn't exist");
        b_L1_TripleMu_5SQ_3SQ_0OQ_->GetEntry(index);
        loaded_L1_TripleMu_5SQ_3SQ_0OQ_ = true;
    }
    return L1_TripleMu_5SQ_3SQ_0OQ_;
}
const bool &Nano::L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9() {
    if (!loaded_L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9_) counter_uncached_L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9_++;
    else counter_cached_L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9_++;
    if (!loaded_L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9_) {
        if (!b_L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9_) throw std::runtime_error("L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9 branch doesn't exist");
        b_L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9_->GetEntry(index);
        loaded_L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9_ = true;
    }
    return L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9_;
}
const bool &Nano::L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9() {
    if (!loaded_L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9_) counter_uncached_L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9_++;
    else counter_cached_L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9_++;
    if (!loaded_L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9_) {
        if (!b_L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9_) throw std::runtime_error("L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9 branch doesn't exist");
        b_L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9_->GetEntry(index);
        loaded_L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9_ = true;
    }
    return L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9_;
}
const bool &Nano::L1_TripleMu_5_0_0() {
    if (!loaded_L1_TripleMu_5_0_0_) counter_uncached_L1_TripleMu_5_0_0_++;
    else counter_cached_L1_TripleMu_5_0_0_++;
    if (!loaded_L1_TripleMu_5_0_0_) {
        if (!b_L1_TripleMu_5_0_0_) throw std::runtime_error("L1_TripleMu_5_0_0 branch doesn't exist");
        b_L1_TripleMu_5_0_0_->GetEntry(index);
        loaded_L1_TripleMu_5_0_0_ = true;
    }
    return L1_TripleMu_5_0_0_;
}
const bool &Nano::L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17() {
    if (!loaded_L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17_) counter_uncached_L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17_++;
    else counter_cached_L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17_++;
    if (!loaded_L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17_) {
        if (!b_L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17_) throw std::runtime_error("L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17 branch doesn't exist");
        b_L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17_->GetEntry(index);
        loaded_L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17_ = true;
    }
    return L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17_;
}
const bool &Nano::L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17() {
    if (!loaded_L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17_) counter_uncached_L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17_++;
    else counter_cached_L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17_++;
    if (!loaded_L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17_) {
        if (!b_L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17_) throw std::runtime_error("L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17 branch doesn't exist");
        b_L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17_->GetEntry(index);
        loaded_L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17_ = true;
    }
    return L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17_;
}
const bool &Nano::L1_TripleMu_5_3_3() {
    if (!loaded_L1_TripleMu_5_3_3_) counter_uncached_L1_TripleMu_5_3_3_++;
    else counter_cached_L1_TripleMu_5_3_3_++;
    if (!loaded_L1_TripleMu_5_3_3_) {
        if (!b_L1_TripleMu_5_3_3_) throw std::runtime_error("L1_TripleMu_5_3_3 branch doesn't exist");
        b_L1_TripleMu_5_3_3_->GetEntry(index);
        loaded_L1_TripleMu_5_3_3_ = true;
    }
    return L1_TripleMu_5_3_3_;
}
const bool &Nano::L1_TripleMu_5_3_3_SQ() {
    if (!loaded_L1_TripleMu_5_3_3_SQ_) counter_uncached_L1_TripleMu_5_3_3_SQ_++;
    else counter_cached_L1_TripleMu_5_3_3_SQ_++;
    if (!loaded_L1_TripleMu_5_3_3_SQ_) {
        if (!b_L1_TripleMu_5_3_3_SQ_) throw std::runtime_error("L1_TripleMu_5_3_3_SQ branch doesn't exist");
        b_L1_TripleMu_5_3_3_SQ_->GetEntry(index);
        loaded_L1_TripleMu_5_3_3_SQ_ = true;
    }
    return L1_TripleMu_5_3_3_SQ_;
}
const bool &Nano::L1_TripleMu_5_3p5_2p5() {
    if (!loaded_L1_TripleMu_5_3p5_2p5_) counter_uncached_L1_TripleMu_5_3p5_2p5_++;
    else counter_cached_L1_TripleMu_5_3p5_2p5_++;
    if (!loaded_L1_TripleMu_5_3p5_2p5_) {
        if (!b_L1_TripleMu_5_3p5_2p5_) throw std::runtime_error("L1_TripleMu_5_3p5_2p5 branch doesn't exist");
        b_L1_TripleMu_5_3p5_2p5_->GetEntry(index);
        loaded_L1_TripleMu_5_3p5_2p5_ = true;
    }
    return L1_TripleMu_5_3p5_2p5_;
}
const bool &Nano::L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17() {
    if (!loaded_L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17_) counter_uncached_L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17_++;
    else counter_cached_L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17_++;
    if (!loaded_L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17_) {
        if (!b_L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17_) throw std::runtime_error("L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17 branch doesn't exist");
        b_L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17_->GetEntry(index);
        loaded_L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17_ = true;
    }
    return L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17_;
}
const bool &Nano::L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17() {
    if (!loaded_L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_) counter_uncached_L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_++;
    else counter_cached_L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_++;
    if (!loaded_L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_) {
        if (!b_L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_) throw std::runtime_error("L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17 branch doesn't exist");
        b_L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_->GetEntry(index);
        loaded_L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_ = true;
    }
    return L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17_;
}
const bool &Nano::L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17() {
    if (!loaded_L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17_) counter_uncached_L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17_++;
    else counter_cached_L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17_++;
    if (!loaded_L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17_) {
        if (!b_L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17_) throw std::runtime_error("L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17 branch doesn't exist");
        b_L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17_->GetEntry(index);
        loaded_L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17_ = true;
    }
    return L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17_;
}
const bool &Nano::L1_TripleMu_5_5_3() {
    if (!loaded_L1_TripleMu_5_5_3_) counter_uncached_L1_TripleMu_5_5_3_++;
    else counter_cached_L1_TripleMu_5_5_3_++;
    if (!loaded_L1_TripleMu_5_5_3_) {
        if (!b_L1_TripleMu_5_5_3_) throw std::runtime_error("L1_TripleMu_5_5_3 branch doesn't exist");
        b_L1_TripleMu_5_5_3_->GetEntry(index);
        loaded_L1_TripleMu_5_5_3_ = true;
    }
    return L1_TripleMu_5_5_3_;
}
const bool &Nano::L1_UnpairedBunchBptxMinus() {
    if (!loaded_L1_UnpairedBunchBptxMinus_) counter_uncached_L1_UnpairedBunchBptxMinus_++;
    else counter_cached_L1_UnpairedBunchBptxMinus_++;
    if (!loaded_L1_UnpairedBunchBptxMinus_) {
        if (!b_L1_UnpairedBunchBptxMinus_) throw std::runtime_error("L1_UnpairedBunchBptxMinus branch doesn't exist");
        b_L1_UnpairedBunchBptxMinus_->GetEntry(index);
        loaded_L1_UnpairedBunchBptxMinus_ = true;
    }
    return L1_UnpairedBunchBptxMinus_;
}
const bool &Nano::L1_UnpairedBunchBptxPlus() {
    if (!loaded_L1_UnpairedBunchBptxPlus_) counter_uncached_L1_UnpairedBunchBptxPlus_++;
    else counter_cached_L1_UnpairedBunchBptxPlus_++;
    if (!loaded_L1_UnpairedBunchBptxPlus_) {
        if (!b_L1_UnpairedBunchBptxPlus_) throw std::runtime_error("L1_UnpairedBunchBptxPlus branch doesn't exist");
        b_L1_UnpairedBunchBptxPlus_->GetEntry(index);
        loaded_L1_UnpairedBunchBptxPlus_ = true;
    }
    return L1_UnpairedBunchBptxPlus_;
}
const bool &Nano::L1_UnprefireableEvent() {
    if (!loaded_L1_UnprefireableEvent_) counter_uncached_L1_UnprefireableEvent_++;
    else counter_cached_L1_UnprefireableEvent_++;
    if (!loaded_L1_UnprefireableEvent_) {
        if (!b_L1_UnprefireableEvent_) throw std::runtime_error("L1_UnprefireableEvent branch doesn't exist");
        b_L1_UnprefireableEvent_->GetEntry(index);
        loaded_L1_UnprefireableEvent_ = true;
    }
    return L1_UnprefireableEvent_;
}
const bool &Nano::L1_ZeroBias() {
    if (!loaded_L1_ZeroBias_) counter_uncached_L1_ZeroBias_++;
    else counter_cached_L1_ZeroBias_++;
    if (!loaded_L1_ZeroBias_) {
        if (!b_L1_ZeroBias_) throw std::runtime_error("L1_ZeroBias branch doesn't exist");
        b_L1_ZeroBias_->GetEntry(index);
        loaded_L1_ZeroBias_ = true;
    }
    return L1_ZeroBias_;
}
const bool &Nano::L1_ZeroBias_FirstCollidingBunch() {
    if (!loaded_L1_ZeroBias_FirstCollidingBunch_) counter_uncached_L1_ZeroBias_FirstCollidingBunch_++;
    else counter_cached_L1_ZeroBias_FirstCollidingBunch_++;
    if (!loaded_L1_ZeroBias_FirstCollidingBunch_) {
        if (!b_L1_ZeroBias_FirstCollidingBunch_) throw std::runtime_error("L1_ZeroBias_FirstCollidingBunch branch doesn't exist");
        b_L1_ZeroBias_FirstCollidingBunch_->GetEntry(index);
        loaded_L1_ZeroBias_FirstCollidingBunch_ = true;
    }
    return L1_ZeroBias_FirstCollidingBunch_;
}
const bool &Nano::L1_ZeroBias_copy() {
    if (!loaded_L1_ZeroBias_copy_) counter_uncached_L1_ZeroBias_copy_++;
    else counter_cached_L1_ZeroBias_copy_++;
    if (!loaded_L1_ZeroBias_copy_) {
        if (!b_L1_ZeroBias_copy_) throw std::runtime_error("L1_ZeroBias_copy branch doesn't exist");
        b_L1_ZeroBias_copy_->GetEntry(index);
        loaded_L1_ZeroBias_copy_ = true;
    }
    return L1_ZeroBias_copy_;
}
const bool &Nano::L1simulation_step() {
    if (!loaded_L1simulation_step_) counter_uncached_L1simulation_step_++;
    else counter_cached_L1simulation_step_++;
    if (!loaded_L1simulation_step_) {
        if (!b_L1simulation_step_) throw std::runtime_error("L1simulation_step branch doesn't exist");
        b_L1simulation_step_->GetEntry(index);
        loaded_L1simulation_step_ = true;
    }
    return L1simulation_step_;
}
const vector<float> &Nano::LHEPart_eta() {
    if (!loaded_LHEPart_eta_) counter_uncached_LHEPart_eta_++;
    else counter_cached_LHEPart_eta_++;
    if (!loaded_LHEPart_eta_) {
        if (!b_LHEPart_eta_) throw std::runtime_error("LHEPart_eta branch doesn't exist");
        int bytes = b_LHEPart_eta_->GetEntry(index);
        v_LHEPart_eta_ = vector<float>(LHEPart_eta_,LHEPart_eta_+bytes/sizeof(LHEPart_eta_[0]));
        loaded_LHEPart_eta_ = true;
    }
    return v_LHEPart_eta_;
}
const vector<float> &Nano::LHEPart_incomingpz() {
    if (!loaded_LHEPart_incomingpz_) counter_uncached_LHEPart_incomingpz_++;
    else counter_cached_LHEPart_incomingpz_++;
    if (!loaded_LHEPart_incomingpz_) {
        if (!b_LHEPart_incomingpz_) throw std::runtime_error("LHEPart_incomingpz branch doesn't exist");
        int bytes = b_LHEPart_incomingpz_->GetEntry(index);
        v_LHEPart_incomingpz_ = vector<float>(LHEPart_incomingpz_,LHEPart_incomingpz_+bytes/sizeof(LHEPart_incomingpz_[0]));
        loaded_LHEPart_incomingpz_ = true;
    }
    return v_LHEPart_incomingpz_;
}
const vector<float> &Nano::LHEPart_mass() {
    if (!loaded_LHEPart_mass_) counter_uncached_LHEPart_mass_++;
    else counter_cached_LHEPart_mass_++;
    if (!loaded_LHEPart_mass_) {
        if (!b_LHEPart_mass_) throw std::runtime_error("LHEPart_mass branch doesn't exist");
        int bytes = b_LHEPart_mass_->GetEntry(index);
        v_LHEPart_mass_ = vector<float>(LHEPart_mass_,LHEPart_mass_+bytes/sizeof(LHEPart_mass_[0]));
        loaded_LHEPart_mass_ = true;
    }
    return v_LHEPart_mass_;
}
const vector<LorentzVector> &Nano::LHEPart_p4() {
    if (!loaded_LHEPart_p4_) counter_uncached_LHEPart_p4_++;
    else counter_cached_LHEPart_p4_++;
    if (!loaded_LHEPart_p4_) {
        v_LHEPart_p4_.clear();
        vector<float> pts = Nano::LHEPart_pt();
        vector<float> etas = Nano::LHEPart_eta();
        vector<float> phis = Nano::LHEPart_phi();
        vector<float> masses = Nano::LHEPart_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_LHEPart_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_LHEPart_p4_ = true;
    }
    return v_LHEPart_p4_;
}
const vector<int> &Nano::LHEPart_pdgId() {
    if (!loaded_LHEPart_pdgId_) counter_uncached_LHEPart_pdgId_++;
    else counter_cached_LHEPart_pdgId_++;
    if (!loaded_LHEPart_pdgId_) {
        if (!b_LHEPart_pdgId_) throw std::runtime_error("LHEPart_pdgId branch doesn't exist");
        int bytes = b_LHEPart_pdgId_->GetEntry(index);
        v_LHEPart_pdgId_ = vector<int>(LHEPart_pdgId_,LHEPart_pdgId_+bytes/sizeof(LHEPart_pdgId_[0]));
        loaded_LHEPart_pdgId_ = true;
    }
    return v_LHEPart_pdgId_;
}
const vector<float> &Nano::LHEPart_phi() {
    if (!loaded_LHEPart_phi_) counter_uncached_LHEPart_phi_++;
    else counter_cached_LHEPart_phi_++;
    if (!loaded_LHEPart_phi_) {
        if (!b_LHEPart_phi_) throw std::runtime_error("LHEPart_phi branch doesn't exist");
        int bytes = b_LHEPart_phi_->GetEntry(index);
        v_LHEPart_phi_ = vector<float>(LHEPart_phi_,LHEPart_phi_+bytes/sizeof(LHEPart_phi_[0]));
        loaded_LHEPart_phi_ = true;
    }
    return v_LHEPart_phi_;
}
const vector<float> &Nano::LHEPart_pt() {
    if (!loaded_LHEPart_pt_) counter_uncached_LHEPart_pt_++;
    else counter_cached_LHEPart_pt_++;
    if (!loaded_LHEPart_pt_) {
        if (!b_LHEPart_pt_) throw std::runtime_error("LHEPart_pt branch doesn't exist");
        int bytes = b_LHEPart_pt_->GetEntry(index);
        v_LHEPart_pt_ = vector<float>(LHEPart_pt_,LHEPart_pt_+bytes/sizeof(LHEPart_pt_[0]));
        loaded_LHEPart_pt_ = true;
    }
    return v_LHEPart_pt_;
}
const vector<int> &Nano::LHEPart_spin() {
    if (!loaded_LHEPart_spin_) counter_uncached_LHEPart_spin_++;
    else counter_cached_LHEPart_spin_++;
    if (!loaded_LHEPart_spin_) {
        if (!b_LHEPart_spin_) throw std::runtime_error("LHEPart_spin branch doesn't exist");
        int bytes = b_LHEPart_spin_->GetEntry(index);
        v_LHEPart_spin_ = vector<int>(LHEPart_spin_,LHEPart_spin_+bytes/sizeof(LHEPart_spin_[0]));
        loaded_LHEPart_spin_ = true;
    }
    return v_LHEPart_spin_;
}
const vector<int> &Nano::LHEPart_status() {
    if (!loaded_LHEPart_status_) counter_uncached_LHEPart_status_++;
    else counter_cached_LHEPart_status_++;
    if (!loaded_LHEPart_status_) {
        if (!b_LHEPart_status_) throw std::runtime_error("LHEPart_status branch doesn't exist");
        int bytes = b_LHEPart_status_->GetEntry(index);
        v_LHEPart_status_ = vector<int>(LHEPart_status_,LHEPart_status_+bytes/sizeof(LHEPart_status_[0]));
        loaded_LHEPart_status_ = true;
    }
    return v_LHEPart_status_;
}
const vector<float> &Nano::LHEPdfWeight() {
    if (!loaded_LHEPdfWeight_) counter_uncached_LHEPdfWeight_++;
    else counter_cached_LHEPdfWeight_++;
    if (!loaded_LHEPdfWeight_) {
        if (!b_LHEPdfWeight_) throw std::runtime_error("LHEPdfWeight branch doesn't exist");
        int bytes = b_LHEPdfWeight_->GetEntry(index);
        v_LHEPdfWeight_ = vector<float>(LHEPdfWeight_,LHEPdfWeight_+bytes/sizeof(LHEPdfWeight_[0]));
        loaded_LHEPdfWeight_ = true;
    }
    return v_LHEPdfWeight_;
}
const vector<float> &Nano::LHEReweightingWeight() {
    if (!loaded_LHEReweightingWeight_) counter_uncached_LHEReweightingWeight_++;
    else counter_cached_LHEReweightingWeight_++;
    if (!loaded_LHEReweightingWeight_) {
        if (!b_LHEReweightingWeight_) throw std::runtime_error("LHEReweightingWeight branch doesn't exist");
        int bytes = b_LHEReweightingWeight_->GetEntry(index);
        v_LHEReweightingWeight_ = vector<float>(LHEReweightingWeight_,LHEReweightingWeight_+bytes/sizeof(LHEReweightingWeight_[0]));
        loaded_LHEReweightingWeight_ = true;
    }
    return v_LHEReweightingWeight_;
}
const vector<float> &Nano::LHEScaleWeight() {
    if (!loaded_LHEScaleWeight_) counter_uncached_LHEScaleWeight_++;
    else counter_cached_LHEScaleWeight_++;
    if (!loaded_LHEScaleWeight_) {
        if (!b_LHEScaleWeight_) throw std::runtime_error("LHEScaleWeight branch doesn't exist");
        int bytes = b_LHEScaleWeight_->GetEntry(index);
        v_LHEScaleWeight_ = vector<float>(LHEScaleWeight_,LHEScaleWeight_+bytes/sizeof(LHEScaleWeight_[0]));
        loaded_LHEScaleWeight_ = true;
    }
    return v_LHEScaleWeight_;
}
const float &Nano::LHEWeight_dummy() {
    if (!loaded_LHEWeight_dummy_) counter_uncached_LHEWeight_dummy_++;
    else counter_cached_LHEWeight_dummy_++;
    if (!loaded_LHEWeight_dummy_) {
        if (!b_LHEWeight_dummy_) throw std::runtime_error("LHEWeight_dummy branch doesn't exist");
        b_LHEWeight_dummy_->GetEntry(index);
        loaded_LHEWeight_dummy_ = true;
    }
    return LHEWeight_dummy_;
}
const float &Nano::LHEWeight_originalXWGTUP() {
    if (!loaded_LHEWeight_originalXWGTUP_) counter_uncached_LHEWeight_originalXWGTUP_++;
    else counter_cached_LHEWeight_originalXWGTUP_++;
    if (!loaded_LHEWeight_originalXWGTUP_) {
        if (!b_LHEWeight_originalXWGTUP_) throw std::runtime_error("LHEWeight_originalXWGTUP branch doesn't exist");
        b_LHEWeight_originalXWGTUP_->GetEntry(index);
        loaded_LHEWeight_originalXWGTUP_ = true;
    }
    return LHEWeight_originalXWGTUP_;
}
const float &Nano::LHE_AlphaS() {
    if (!loaded_LHE_AlphaS_) counter_uncached_LHE_AlphaS_++;
    else counter_cached_LHE_AlphaS_++;
    if (!loaded_LHE_AlphaS_) {
        if (!b_LHE_AlphaS_) throw std::runtime_error("LHE_AlphaS branch doesn't exist");
        b_LHE_AlphaS_->GetEntry(index);
        loaded_LHE_AlphaS_ = true;
    }
    return LHE_AlphaS_;
}
const float &Nano::LHE_HT() {
    if (!loaded_LHE_HT_) counter_uncached_LHE_HT_++;
    else counter_cached_LHE_HT_++;
    if (!loaded_LHE_HT_) {
        if (!b_LHE_HT_) throw std::runtime_error("LHE_HT branch doesn't exist");
        b_LHE_HT_->GetEntry(index);
        loaded_LHE_HT_ = true;
    }
    return LHE_HT_;
}
const float &Nano::LHE_HTIncoming() {
    if (!loaded_LHE_HTIncoming_) counter_uncached_LHE_HTIncoming_++;
    else counter_cached_LHE_HTIncoming_++;
    if (!loaded_LHE_HTIncoming_) {
        if (!b_LHE_HTIncoming_) throw std::runtime_error("LHE_HTIncoming branch doesn't exist");
        b_LHE_HTIncoming_->GetEntry(index);
        loaded_LHE_HTIncoming_ = true;
    }
    return LHE_HTIncoming_;
}
const UChar_t &Nano::LHE_Nb() {
    if (!loaded_LHE_Nb_) counter_uncached_LHE_Nb_++;
    else counter_cached_LHE_Nb_++;
    if (!loaded_LHE_Nb_) {
        if (!b_LHE_Nb_) throw std::runtime_error("LHE_Nb branch doesn't exist");
        b_LHE_Nb_->GetEntry(index);
        loaded_LHE_Nb_ = true;
    }
    return LHE_Nb_;
}
const UChar_t &Nano::LHE_Nc() {
    if (!loaded_LHE_Nc_) counter_uncached_LHE_Nc_++;
    else counter_cached_LHE_Nc_++;
    if (!loaded_LHE_Nc_) {
        if (!b_LHE_Nc_) throw std::runtime_error("LHE_Nc branch doesn't exist");
        b_LHE_Nc_->GetEntry(index);
        loaded_LHE_Nc_ = true;
    }
    return LHE_Nc_;
}
const UChar_t &Nano::LHE_Nglu() {
    if (!loaded_LHE_Nglu_) counter_uncached_LHE_Nglu_++;
    else counter_cached_LHE_Nglu_++;
    if (!loaded_LHE_Nglu_) {
        if (!b_LHE_Nglu_) throw std::runtime_error("LHE_Nglu branch doesn't exist");
        b_LHE_Nglu_->GetEntry(index);
        loaded_LHE_Nglu_ = true;
    }
    return LHE_Nglu_;
}
const UChar_t &Nano::LHE_Njets() {
    if (!loaded_LHE_Njets_) counter_uncached_LHE_Njets_++;
    else counter_cached_LHE_Njets_++;
    if (!loaded_LHE_Njets_) {
        if (!b_LHE_Njets_) throw std::runtime_error("LHE_Njets branch doesn't exist");
        b_LHE_Njets_->GetEntry(index);
        loaded_LHE_Njets_ = true;
    }
    return LHE_Njets_;
}
const UChar_t &Nano::LHE_NpLO() {
    if (!loaded_LHE_NpLO_) counter_uncached_LHE_NpLO_++;
    else counter_cached_LHE_NpLO_++;
    if (!loaded_LHE_NpLO_) {
        if (!b_LHE_NpLO_) throw std::runtime_error("LHE_NpLO branch doesn't exist");
        b_LHE_NpLO_->GetEntry(index);
        loaded_LHE_NpLO_ = true;
    }
    return LHE_NpLO_;
}
const UChar_t &Nano::LHE_NpNLO() {
    if (!loaded_LHE_NpNLO_) counter_uncached_LHE_NpNLO_++;
    else counter_cached_LHE_NpNLO_++;
    if (!loaded_LHE_NpNLO_) {
        if (!b_LHE_NpNLO_) throw std::runtime_error("LHE_NpNLO branch doesn't exist");
        b_LHE_NpNLO_->GetEntry(index);
        loaded_LHE_NpNLO_ = true;
    }
    return LHE_NpNLO_;
}
const UChar_t &Nano::LHE_Nuds() {
    if (!loaded_LHE_Nuds_) counter_uncached_LHE_Nuds_++;
    else counter_cached_LHE_Nuds_++;
    if (!loaded_LHE_Nuds_) {
        if (!b_LHE_Nuds_) throw std::runtime_error("LHE_Nuds branch doesn't exist");
        b_LHE_Nuds_->GetEntry(index);
        loaded_LHE_Nuds_ = true;
    }
    return LHE_Nuds_;
}
const float &Nano::LHE_Vpt() {
    if (!loaded_LHE_Vpt_) counter_uncached_LHE_Vpt_++;
    else counter_cached_LHE_Vpt_++;
    if (!loaded_LHE_Vpt_) {
        if (!b_LHE_Vpt_) throw std::runtime_error("LHE_Vpt branch doesn't exist");
        b_LHE_Vpt_->GetEntry(index);
        loaded_LHE_Vpt_ = true;
    }
    return LHE_Vpt_;
}
const vector<float> &Nano::LowPtElectron_ID() {
    if (!loaded_LowPtElectron_ID_) counter_uncached_LowPtElectron_ID_++;
    else counter_cached_LowPtElectron_ID_++;
    if (!loaded_LowPtElectron_ID_) {
        if (!b_LowPtElectron_ID_) throw std::runtime_error("LowPtElectron_ID branch doesn't exist");
        int bytes = b_LowPtElectron_ID_->GetEntry(index);
        v_LowPtElectron_ID_ = vector<float>(LowPtElectron_ID_,LowPtElectron_ID_+bytes/sizeof(LowPtElectron_ID_[0]));
        loaded_LowPtElectron_ID_ = true;
    }
    return v_LowPtElectron_ID_;
}
const vector<int> &Nano::LowPtElectron_charge() {
    if (!loaded_LowPtElectron_charge_) counter_uncached_LowPtElectron_charge_++;
    else counter_cached_LowPtElectron_charge_++;
    if (!loaded_LowPtElectron_charge_) {
        if (!b_LowPtElectron_charge_) throw std::runtime_error("LowPtElectron_charge branch doesn't exist");
        int bytes = b_LowPtElectron_charge_->GetEntry(index);
        v_LowPtElectron_charge_ = vector<int>(LowPtElectron_charge_,LowPtElectron_charge_+bytes/sizeof(LowPtElectron_charge_[0]));
        loaded_LowPtElectron_charge_ = true;
    }
    return v_LowPtElectron_charge_;
}
const vector<bool> &Nano::LowPtElectron_convVeto() {
    if (!loaded_LowPtElectron_convVeto_) counter_uncached_LowPtElectron_convVeto_++;
    else counter_cached_LowPtElectron_convVeto_++;
    if (!loaded_LowPtElectron_convVeto_) {
        if (!b_LowPtElectron_convVeto_) throw std::runtime_error("LowPtElectron_convVeto branch doesn't exist");
        int bytes = b_LowPtElectron_convVeto_->GetEntry(index);
        v_LowPtElectron_convVeto_ = vector<bool>(LowPtElectron_convVeto_,LowPtElectron_convVeto_+bytes/sizeof(LowPtElectron_convVeto_[0]));
        loaded_LowPtElectron_convVeto_ = true;
    }
    return v_LowPtElectron_convVeto_;
}
const vector<float> &Nano::LowPtElectron_convVtxRadius() {
    if (!loaded_LowPtElectron_convVtxRadius_) counter_uncached_LowPtElectron_convVtxRadius_++;
    else counter_cached_LowPtElectron_convVtxRadius_++;
    if (!loaded_LowPtElectron_convVtxRadius_) {
        if (!b_LowPtElectron_convVtxRadius_) throw std::runtime_error("LowPtElectron_convVtxRadius branch doesn't exist");
        int bytes = b_LowPtElectron_convVtxRadius_->GetEntry(index);
        v_LowPtElectron_convVtxRadius_ = vector<float>(LowPtElectron_convVtxRadius_,LowPtElectron_convVtxRadius_+bytes/sizeof(LowPtElectron_convVtxRadius_[0]));
        loaded_LowPtElectron_convVtxRadius_ = true;
    }
    return v_LowPtElectron_convVtxRadius_;
}
const vector<int> &Nano::LowPtElectron_convWP() {
    if (!loaded_LowPtElectron_convWP_) counter_uncached_LowPtElectron_convWP_++;
    else counter_cached_LowPtElectron_convWP_++;
    if (!loaded_LowPtElectron_convWP_) {
        if (!b_LowPtElectron_convWP_) throw std::runtime_error("LowPtElectron_convWP branch doesn't exist");
        int bytes = b_LowPtElectron_convWP_->GetEntry(index);
        v_LowPtElectron_convWP_ = vector<int>(LowPtElectron_convWP_,LowPtElectron_convWP_+bytes/sizeof(LowPtElectron_convWP_[0]));
        loaded_LowPtElectron_convWP_ = true;
    }
    return v_LowPtElectron_convWP_;
}
const vector<float> &Nano::LowPtElectron_deltaEtaSC() {
    if (!loaded_LowPtElectron_deltaEtaSC_) counter_uncached_LowPtElectron_deltaEtaSC_++;
    else counter_cached_LowPtElectron_deltaEtaSC_++;
    if (!loaded_LowPtElectron_deltaEtaSC_) {
        if (!b_LowPtElectron_deltaEtaSC_) throw std::runtime_error("LowPtElectron_deltaEtaSC branch doesn't exist");
        int bytes = b_LowPtElectron_deltaEtaSC_->GetEntry(index);
        v_LowPtElectron_deltaEtaSC_ = vector<float>(LowPtElectron_deltaEtaSC_,LowPtElectron_deltaEtaSC_+bytes/sizeof(LowPtElectron_deltaEtaSC_[0]));
        loaded_LowPtElectron_deltaEtaSC_ = true;
    }
    return v_LowPtElectron_deltaEtaSC_;
}
const vector<float> &Nano::LowPtElectron_dxy() {
    if (!loaded_LowPtElectron_dxy_) counter_uncached_LowPtElectron_dxy_++;
    else counter_cached_LowPtElectron_dxy_++;
    if (!loaded_LowPtElectron_dxy_) {
        if (!b_LowPtElectron_dxy_) throw std::runtime_error("LowPtElectron_dxy branch doesn't exist");
        int bytes = b_LowPtElectron_dxy_->GetEntry(index);
        v_LowPtElectron_dxy_ = vector<float>(LowPtElectron_dxy_,LowPtElectron_dxy_+bytes/sizeof(LowPtElectron_dxy_[0]));
        loaded_LowPtElectron_dxy_ = true;
    }
    return v_LowPtElectron_dxy_;
}
const vector<float> &Nano::LowPtElectron_dxyErr() {
    if (!loaded_LowPtElectron_dxyErr_) counter_uncached_LowPtElectron_dxyErr_++;
    else counter_cached_LowPtElectron_dxyErr_++;
    if (!loaded_LowPtElectron_dxyErr_) {
        if (!b_LowPtElectron_dxyErr_) throw std::runtime_error("LowPtElectron_dxyErr branch doesn't exist");
        int bytes = b_LowPtElectron_dxyErr_->GetEntry(index);
        v_LowPtElectron_dxyErr_ = vector<float>(LowPtElectron_dxyErr_,LowPtElectron_dxyErr_+bytes/sizeof(LowPtElectron_dxyErr_[0]));
        loaded_LowPtElectron_dxyErr_ = true;
    }
    return v_LowPtElectron_dxyErr_;
}
const vector<float> &Nano::LowPtElectron_dz() {
    if (!loaded_LowPtElectron_dz_) counter_uncached_LowPtElectron_dz_++;
    else counter_cached_LowPtElectron_dz_++;
    if (!loaded_LowPtElectron_dz_) {
        if (!b_LowPtElectron_dz_) throw std::runtime_error("LowPtElectron_dz branch doesn't exist");
        int bytes = b_LowPtElectron_dz_->GetEntry(index);
        v_LowPtElectron_dz_ = vector<float>(LowPtElectron_dz_,LowPtElectron_dz_+bytes/sizeof(LowPtElectron_dz_[0]));
        loaded_LowPtElectron_dz_ = true;
    }
    return v_LowPtElectron_dz_;
}
const vector<float> &Nano::LowPtElectron_dzErr() {
    if (!loaded_LowPtElectron_dzErr_) counter_uncached_LowPtElectron_dzErr_++;
    else counter_cached_LowPtElectron_dzErr_++;
    if (!loaded_LowPtElectron_dzErr_) {
        if (!b_LowPtElectron_dzErr_) throw std::runtime_error("LowPtElectron_dzErr branch doesn't exist");
        int bytes = b_LowPtElectron_dzErr_->GetEntry(index);
        v_LowPtElectron_dzErr_ = vector<float>(LowPtElectron_dzErr_,LowPtElectron_dzErr_+bytes/sizeof(LowPtElectron_dzErr_[0]));
        loaded_LowPtElectron_dzErr_ = true;
    }
    return v_LowPtElectron_dzErr_;
}
const vector<float> &Nano::LowPtElectron_eInvMinusPInv() {
    if (!loaded_LowPtElectron_eInvMinusPInv_) counter_uncached_LowPtElectron_eInvMinusPInv_++;
    else counter_cached_LowPtElectron_eInvMinusPInv_++;
    if (!loaded_LowPtElectron_eInvMinusPInv_) {
        if (!b_LowPtElectron_eInvMinusPInv_) throw std::runtime_error("LowPtElectron_eInvMinusPInv branch doesn't exist");
        int bytes = b_LowPtElectron_eInvMinusPInv_->GetEntry(index);
        v_LowPtElectron_eInvMinusPInv_ = vector<float>(LowPtElectron_eInvMinusPInv_,LowPtElectron_eInvMinusPInv_+bytes/sizeof(LowPtElectron_eInvMinusPInv_[0]));
        loaded_LowPtElectron_eInvMinusPInv_ = true;
    }
    return v_LowPtElectron_eInvMinusPInv_;
}
const vector<int> &Nano::LowPtElectron_electronIdx() {
    if (!loaded_LowPtElectron_electronIdx_) counter_uncached_LowPtElectron_electronIdx_++;
    else counter_cached_LowPtElectron_electronIdx_++;
    if (!loaded_LowPtElectron_electronIdx_) {
        if (!b_LowPtElectron_electronIdx_) throw std::runtime_error("LowPtElectron_electronIdx branch doesn't exist");
        int bytes = b_LowPtElectron_electronIdx_->GetEntry(index);
        v_LowPtElectron_electronIdx_ = vector<int>(LowPtElectron_electronIdx_,LowPtElectron_electronIdx_+bytes/sizeof(LowPtElectron_electronIdx_[0]));
        loaded_LowPtElectron_electronIdx_ = true;
    }
    return v_LowPtElectron_electronIdx_;
}
const vector<float> &Nano::LowPtElectron_embeddedID() {
    if (!loaded_LowPtElectron_embeddedID_) counter_uncached_LowPtElectron_embeddedID_++;
    else counter_cached_LowPtElectron_embeddedID_++;
    if (!loaded_LowPtElectron_embeddedID_) {
        if (!b_LowPtElectron_embeddedID_) throw std::runtime_error("LowPtElectron_embeddedID branch doesn't exist");
        int bytes = b_LowPtElectron_embeddedID_->GetEntry(index);
        v_LowPtElectron_embeddedID_ = vector<float>(LowPtElectron_embeddedID_,LowPtElectron_embeddedID_+bytes/sizeof(LowPtElectron_embeddedID_[0]));
        loaded_LowPtElectron_embeddedID_ = true;
    }
    return v_LowPtElectron_embeddedID_;
}
const vector<float> &Nano::LowPtElectron_energyErr() {
    if (!loaded_LowPtElectron_energyErr_) counter_uncached_LowPtElectron_energyErr_++;
    else counter_cached_LowPtElectron_energyErr_++;
    if (!loaded_LowPtElectron_energyErr_) {
        if (!b_LowPtElectron_energyErr_) throw std::runtime_error("LowPtElectron_energyErr branch doesn't exist");
        int bytes = b_LowPtElectron_energyErr_->GetEntry(index);
        v_LowPtElectron_energyErr_ = vector<float>(LowPtElectron_energyErr_,LowPtElectron_energyErr_+bytes/sizeof(LowPtElectron_energyErr_[0]));
        loaded_LowPtElectron_energyErr_ = true;
    }
    return v_LowPtElectron_energyErr_;
}
const vector<float> &Nano::LowPtElectron_eta() {
    if (!loaded_LowPtElectron_eta_) counter_uncached_LowPtElectron_eta_++;
    else counter_cached_LowPtElectron_eta_++;
    if (!loaded_LowPtElectron_eta_) {
        if (!b_LowPtElectron_eta_) throw std::runtime_error("LowPtElectron_eta branch doesn't exist");
        int bytes = b_LowPtElectron_eta_->GetEntry(index);
        v_LowPtElectron_eta_ = vector<float>(LowPtElectron_eta_,LowPtElectron_eta_+bytes/sizeof(LowPtElectron_eta_[0]));
        loaded_LowPtElectron_eta_ = true;
    }
    return v_LowPtElectron_eta_;
}
const vector<UChar_t> &Nano::LowPtElectron_genPartFlav() {
    if (!loaded_LowPtElectron_genPartFlav_) counter_uncached_LowPtElectron_genPartFlav_++;
    else counter_cached_LowPtElectron_genPartFlav_++;
    if (!loaded_LowPtElectron_genPartFlav_) {
        if (!b_LowPtElectron_genPartFlav_) throw std::runtime_error("LowPtElectron_genPartFlav branch doesn't exist");
        int bytes = b_LowPtElectron_genPartFlav_->GetEntry(index);
        v_LowPtElectron_genPartFlav_ = vector<UChar_t>(LowPtElectron_genPartFlav_,LowPtElectron_genPartFlav_+bytes/sizeof(LowPtElectron_genPartFlav_[0]));
        loaded_LowPtElectron_genPartFlav_ = true;
    }
    return v_LowPtElectron_genPartFlav_;
}
const vector<int> &Nano::LowPtElectron_genPartIdx() {
    if (!loaded_LowPtElectron_genPartIdx_) counter_uncached_LowPtElectron_genPartIdx_++;
    else counter_cached_LowPtElectron_genPartIdx_++;
    if (!loaded_LowPtElectron_genPartIdx_) {
        if (!b_LowPtElectron_genPartIdx_) throw std::runtime_error("LowPtElectron_genPartIdx branch doesn't exist");
        int bytes = b_LowPtElectron_genPartIdx_->GetEntry(index);
        v_LowPtElectron_genPartIdx_ = vector<int>(LowPtElectron_genPartIdx_,LowPtElectron_genPartIdx_+bytes/sizeof(LowPtElectron_genPartIdx_[0]));
        loaded_LowPtElectron_genPartIdx_ = true;
    }
    return v_LowPtElectron_genPartIdx_;
}
const vector<float> &Nano::LowPtElectron_hoe() {
    if (!loaded_LowPtElectron_hoe_) counter_uncached_LowPtElectron_hoe_++;
    else counter_cached_LowPtElectron_hoe_++;
    if (!loaded_LowPtElectron_hoe_) {
        if (!b_LowPtElectron_hoe_) throw std::runtime_error("LowPtElectron_hoe branch doesn't exist");
        int bytes = b_LowPtElectron_hoe_->GetEntry(index);
        v_LowPtElectron_hoe_ = vector<float>(LowPtElectron_hoe_,LowPtElectron_hoe_+bytes/sizeof(LowPtElectron_hoe_[0]));
        loaded_LowPtElectron_hoe_ = true;
    }
    return v_LowPtElectron_hoe_;
}
const vector<UChar_t> &Nano::LowPtElectron_lostHits() {
    if (!loaded_LowPtElectron_lostHits_) counter_uncached_LowPtElectron_lostHits_++;
    else counter_cached_LowPtElectron_lostHits_++;
    if (!loaded_LowPtElectron_lostHits_) {
        if (!b_LowPtElectron_lostHits_) throw std::runtime_error("LowPtElectron_lostHits branch doesn't exist");
        int bytes = b_LowPtElectron_lostHits_->GetEntry(index);
        v_LowPtElectron_lostHits_ = vector<UChar_t>(LowPtElectron_lostHits_,LowPtElectron_lostHits_+bytes/sizeof(LowPtElectron_lostHits_[0]));
        loaded_LowPtElectron_lostHits_ = true;
    }
    return v_LowPtElectron_lostHits_;
}
const vector<float> &Nano::LowPtElectron_mass() {
    if (!loaded_LowPtElectron_mass_) counter_uncached_LowPtElectron_mass_++;
    else counter_cached_LowPtElectron_mass_++;
    if (!loaded_LowPtElectron_mass_) {
        if (!b_LowPtElectron_mass_) throw std::runtime_error("LowPtElectron_mass branch doesn't exist");
        int bytes = b_LowPtElectron_mass_->GetEntry(index);
        v_LowPtElectron_mass_ = vector<float>(LowPtElectron_mass_,LowPtElectron_mass_+bytes/sizeof(LowPtElectron_mass_[0]));
        loaded_LowPtElectron_mass_ = true;
    }
    return v_LowPtElectron_mass_;
}
const vector<float> &Nano::LowPtElectron_miniPFRelIso_all() {
    if (!loaded_LowPtElectron_miniPFRelIso_all_) counter_uncached_LowPtElectron_miniPFRelIso_all_++;
    else counter_cached_LowPtElectron_miniPFRelIso_all_++;
    if (!loaded_LowPtElectron_miniPFRelIso_all_) {
        if (!b_LowPtElectron_miniPFRelIso_all_) throw std::runtime_error("LowPtElectron_miniPFRelIso_all branch doesn't exist");
        int bytes = b_LowPtElectron_miniPFRelIso_all_->GetEntry(index);
        v_LowPtElectron_miniPFRelIso_all_ = vector<float>(LowPtElectron_miniPFRelIso_all_,LowPtElectron_miniPFRelIso_all_+bytes/sizeof(LowPtElectron_miniPFRelIso_all_[0]));
        loaded_LowPtElectron_miniPFRelIso_all_ = true;
    }
    return v_LowPtElectron_miniPFRelIso_all_;
}
const vector<float> &Nano::LowPtElectron_miniPFRelIso_chg() {
    if (!loaded_LowPtElectron_miniPFRelIso_chg_) counter_uncached_LowPtElectron_miniPFRelIso_chg_++;
    else counter_cached_LowPtElectron_miniPFRelIso_chg_++;
    if (!loaded_LowPtElectron_miniPFRelIso_chg_) {
        if (!b_LowPtElectron_miniPFRelIso_chg_) throw std::runtime_error("LowPtElectron_miniPFRelIso_chg branch doesn't exist");
        int bytes = b_LowPtElectron_miniPFRelIso_chg_->GetEntry(index);
        v_LowPtElectron_miniPFRelIso_chg_ = vector<float>(LowPtElectron_miniPFRelIso_chg_,LowPtElectron_miniPFRelIso_chg_+bytes/sizeof(LowPtElectron_miniPFRelIso_chg_[0]));
        loaded_LowPtElectron_miniPFRelIso_chg_ = true;
    }
    return v_LowPtElectron_miniPFRelIso_chg_;
}
const vector<LorentzVector> &Nano::LowPtElectron_p4() {
    if (!loaded_LowPtElectron_p4_) counter_uncached_LowPtElectron_p4_++;
    else counter_cached_LowPtElectron_p4_++;
    if (!loaded_LowPtElectron_p4_) {
        v_LowPtElectron_p4_.clear();
        vector<float> pts = Nano::LowPtElectron_pt();
        vector<float> etas = Nano::LowPtElectron_eta();
        vector<float> phis = Nano::LowPtElectron_phi();
        vector<float> masses = Nano::LowPtElectron_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_LowPtElectron_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_LowPtElectron_p4_ = true;
    }
    return v_LowPtElectron_p4_;
}
const vector<int> &Nano::LowPtElectron_pdgId() {
    if (!loaded_LowPtElectron_pdgId_) counter_uncached_LowPtElectron_pdgId_++;
    else counter_cached_LowPtElectron_pdgId_++;
    if (!loaded_LowPtElectron_pdgId_) {
        if (!b_LowPtElectron_pdgId_) throw std::runtime_error("LowPtElectron_pdgId branch doesn't exist");
        int bytes = b_LowPtElectron_pdgId_->GetEntry(index);
        v_LowPtElectron_pdgId_ = vector<int>(LowPtElectron_pdgId_,LowPtElectron_pdgId_+bytes/sizeof(LowPtElectron_pdgId_[0]));
        loaded_LowPtElectron_pdgId_ = true;
    }
    return v_LowPtElectron_pdgId_;
}
const vector<float> &Nano::LowPtElectron_phi() {
    if (!loaded_LowPtElectron_phi_) counter_uncached_LowPtElectron_phi_++;
    else counter_cached_LowPtElectron_phi_++;
    if (!loaded_LowPtElectron_phi_) {
        if (!b_LowPtElectron_phi_) throw std::runtime_error("LowPtElectron_phi branch doesn't exist");
        int bytes = b_LowPtElectron_phi_->GetEntry(index);
        v_LowPtElectron_phi_ = vector<float>(LowPtElectron_phi_,LowPtElectron_phi_+bytes/sizeof(LowPtElectron_phi_[0]));
        loaded_LowPtElectron_phi_ = true;
    }
    return v_LowPtElectron_phi_;
}
const vector<int> &Nano::LowPtElectron_photonIdx() {
    if (!loaded_LowPtElectron_photonIdx_) counter_uncached_LowPtElectron_photonIdx_++;
    else counter_cached_LowPtElectron_photonIdx_++;
    if (!loaded_LowPtElectron_photonIdx_) {
        if (!b_LowPtElectron_photonIdx_) throw std::runtime_error("LowPtElectron_photonIdx branch doesn't exist");
        int bytes = b_LowPtElectron_photonIdx_->GetEntry(index);
        v_LowPtElectron_photonIdx_ = vector<int>(LowPtElectron_photonIdx_,LowPtElectron_photonIdx_+bytes/sizeof(LowPtElectron_photonIdx_[0]));
        loaded_LowPtElectron_photonIdx_ = true;
    }
    return v_LowPtElectron_photonIdx_;
}
const vector<float> &Nano::LowPtElectron_pt() {
    if (!loaded_LowPtElectron_pt_) counter_uncached_LowPtElectron_pt_++;
    else counter_cached_LowPtElectron_pt_++;
    if (!loaded_LowPtElectron_pt_) {
        if (!b_LowPtElectron_pt_) throw std::runtime_error("LowPtElectron_pt branch doesn't exist");
        int bytes = b_LowPtElectron_pt_->GetEntry(index);
        v_LowPtElectron_pt_ = vector<float>(LowPtElectron_pt_,LowPtElectron_pt_+bytes/sizeof(LowPtElectron_pt_[0]));
        loaded_LowPtElectron_pt_ = true;
    }
    return v_LowPtElectron_pt_;
}
const vector<float> &Nano::LowPtElectron_ptbiased() {
    if (!loaded_LowPtElectron_ptbiased_) counter_uncached_LowPtElectron_ptbiased_++;
    else counter_cached_LowPtElectron_ptbiased_++;
    if (!loaded_LowPtElectron_ptbiased_) {
        if (!b_LowPtElectron_ptbiased_) throw std::runtime_error("LowPtElectron_ptbiased branch doesn't exist");
        int bytes = b_LowPtElectron_ptbiased_->GetEntry(index);
        v_LowPtElectron_ptbiased_ = vector<float>(LowPtElectron_ptbiased_,LowPtElectron_ptbiased_+bytes/sizeof(LowPtElectron_ptbiased_[0]));
        loaded_LowPtElectron_ptbiased_ = true;
    }
    return v_LowPtElectron_ptbiased_;
}
const vector<float> &Nano::LowPtElectron_r9() {
    if (!loaded_LowPtElectron_r9_) counter_uncached_LowPtElectron_r9_++;
    else counter_cached_LowPtElectron_r9_++;
    if (!loaded_LowPtElectron_r9_) {
        if (!b_LowPtElectron_r9_) throw std::runtime_error("LowPtElectron_r9 branch doesn't exist");
        int bytes = b_LowPtElectron_r9_->GetEntry(index);
        v_LowPtElectron_r9_ = vector<float>(LowPtElectron_r9_,LowPtElectron_r9_+bytes/sizeof(LowPtElectron_r9_[0]));
        loaded_LowPtElectron_r9_ = true;
    }
    return v_LowPtElectron_r9_;
}
const vector<float> &Nano::LowPtElectron_scEtOverPt() {
    if (!loaded_LowPtElectron_scEtOverPt_) counter_uncached_LowPtElectron_scEtOverPt_++;
    else counter_cached_LowPtElectron_scEtOverPt_++;
    if (!loaded_LowPtElectron_scEtOverPt_) {
        if (!b_LowPtElectron_scEtOverPt_) throw std::runtime_error("LowPtElectron_scEtOverPt branch doesn't exist");
        int bytes = b_LowPtElectron_scEtOverPt_->GetEntry(index);
        v_LowPtElectron_scEtOverPt_ = vector<float>(LowPtElectron_scEtOverPt_,LowPtElectron_scEtOverPt_+bytes/sizeof(LowPtElectron_scEtOverPt_[0]));
        loaded_LowPtElectron_scEtOverPt_ = true;
    }
    return v_LowPtElectron_scEtOverPt_;
}
const vector<float> &Nano::LowPtElectron_sieie() {
    if (!loaded_LowPtElectron_sieie_) counter_uncached_LowPtElectron_sieie_++;
    else counter_cached_LowPtElectron_sieie_++;
    if (!loaded_LowPtElectron_sieie_) {
        if (!b_LowPtElectron_sieie_) throw std::runtime_error("LowPtElectron_sieie branch doesn't exist");
        int bytes = b_LowPtElectron_sieie_->GetEntry(index);
        v_LowPtElectron_sieie_ = vector<float>(LowPtElectron_sieie_,LowPtElectron_sieie_+bytes/sizeof(LowPtElectron_sieie_[0]));
        loaded_LowPtElectron_sieie_ = true;
    }
    return v_LowPtElectron_sieie_;
}
const vector<float> &Nano::LowPtElectron_unbiased() {
    if (!loaded_LowPtElectron_unbiased_) counter_uncached_LowPtElectron_unbiased_++;
    else counter_cached_LowPtElectron_unbiased_++;
    if (!loaded_LowPtElectron_unbiased_) {
        if (!b_LowPtElectron_unbiased_) throw std::runtime_error("LowPtElectron_unbiased branch doesn't exist");
        int bytes = b_LowPtElectron_unbiased_->GetEntry(index);
        v_LowPtElectron_unbiased_ = vector<float>(LowPtElectron_unbiased_,LowPtElectron_unbiased_+bytes/sizeof(LowPtElectron_unbiased_[0]));
        loaded_LowPtElectron_unbiased_ = true;
    }
    return v_LowPtElectron_unbiased_;
}
const float &Nano::MET_MetUnclustEnUpDeltaX() {
    if (!loaded_MET_MetUnclustEnUpDeltaX_) counter_uncached_MET_MetUnclustEnUpDeltaX_++;
    else counter_cached_MET_MetUnclustEnUpDeltaX_++;
    if (!loaded_MET_MetUnclustEnUpDeltaX_) {
        if (!b_MET_MetUnclustEnUpDeltaX_) throw std::runtime_error("MET_MetUnclustEnUpDeltaX branch doesn't exist");
        b_MET_MetUnclustEnUpDeltaX_->GetEntry(index);
        loaded_MET_MetUnclustEnUpDeltaX_ = true;
    }
    return MET_MetUnclustEnUpDeltaX_;
}
const float &Nano::MET_MetUnclustEnUpDeltaY() {
    if (!loaded_MET_MetUnclustEnUpDeltaY_) counter_uncached_MET_MetUnclustEnUpDeltaY_++;
    else counter_cached_MET_MetUnclustEnUpDeltaY_++;
    if (!loaded_MET_MetUnclustEnUpDeltaY_) {
        if (!b_MET_MetUnclustEnUpDeltaY_) throw std::runtime_error("MET_MetUnclustEnUpDeltaY branch doesn't exist");
        b_MET_MetUnclustEnUpDeltaY_->GetEntry(index);
        loaded_MET_MetUnclustEnUpDeltaY_ = true;
    }
    return MET_MetUnclustEnUpDeltaY_;
}
const float &Nano::MET_T1Smear_phi() {
    if (!loaded_MET_T1Smear_phi_) counter_uncached_MET_T1Smear_phi_++;
    else counter_cached_MET_T1Smear_phi_++;
    if (!loaded_MET_T1Smear_phi_) {
        if (!b_MET_T1Smear_phi_) throw std::runtime_error("MET_T1Smear_phi branch doesn't exist");
        b_MET_T1Smear_phi_->GetEntry(index);
        loaded_MET_T1Smear_phi_ = true;
    }
    return MET_T1Smear_phi_;
}
const float &Nano::MET_T1Smear_phi_jerDown() {
    if (!loaded_MET_T1Smear_phi_jerDown_) counter_uncached_MET_T1Smear_phi_jerDown_++;
    else counter_cached_MET_T1Smear_phi_jerDown_++;
    if (!loaded_MET_T1Smear_phi_jerDown_) {
        if (!b_MET_T1Smear_phi_jerDown_) throw std::runtime_error("MET_T1Smear_phi_jerDown branch doesn't exist");
        b_MET_T1Smear_phi_jerDown_->GetEntry(index);
        loaded_MET_T1Smear_phi_jerDown_ = true;
    }
    return MET_T1Smear_phi_jerDown_;
}
const float &Nano::MET_T1Smear_phi_jerUp() {
    if (!loaded_MET_T1Smear_phi_jerUp_) counter_uncached_MET_T1Smear_phi_jerUp_++;
    else counter_cached_MET_T1Smear_phi_jerUp_++;
    if (!loaded_MET_T1Smear_phi_jerUp_) {
        if (!b_MET_T1Smear_phi_jerUp_) throw std::runtime_error("MET_T1Smear_phi_jerUp branch doesn't exist");
        b_MET_T1Smear_phi_jerUp_->GetEntry(index);
        loaded_MET_T1Smear_phi_jerUp_ = true;
    }
    return MET_T1Smear_phi_jerUp_;
}
const float &Nano::MET_T1Smear_phi_jesHEMIssueDown() {
    if (!loaded_MET_T1Smear_phi_jesHEMIssueDown_) counter_uncached_MET_T1Smear_phi_jesHEMIssueDown_++;
    else counter_cached_MET_T1Smear_phi_jesHEMIssueDown_++;
    if (!loaded_MET_T1Smear_phi_jesHEMIssueDown_) {
        if (!b_MET_T1Smear_phi_jesHEMIssueDown_) throw std::runtime_error("MET_T1Smear_phi_jesHEMIssueDown branch doesn't exist");
        b_MET_T1Smear_phi_jesHEMIssueDown_->GetEntry(index);
        loaded_MET_T1Smear_phi_jesHEMIssueDown_ = true;
    }
    return MET_T1Smear_phi_jesHEMIssueDown_;
}
const float &Nano::MET_T1Smear_phi_jesHEMIssueUp() {
    if (!loaded_MET_T1Smear_phi_jesHEMIssueUp_) counter_uncached_MET_T1Smear_phi_jesHEMIssueUp_++;
    else counter_cached_MET_T1Smear_phi_jesHEMIssueUp_++;
    if (!loaded_MET_T1Smear_phi_jesHEMIssueUp_) {
        if (!b_MET_T1Smear_phi_jesHEMIssueUp_) throw std::runtime_error("MET_T1Smear_phi_jesHEMIssueUp branch doesn't exist");
        b_MET_T1Smear_phi_jesHEMIssueUp_->GetEntry(index);
        loaded_MET_T1Smear_phi_jesHEMIssueUp_ = true;
    }
    return MET_T1Smear_phi_jesHEMIssueUp_;
}
const float &Nano::MET_T1Smear_phi_jesTotalDown() {
    if (!loaded_MET_T1Smear_phi_jesTotalDown_) counter_uncached_MET_T1Smear_phi_jesTotalDown_++;
    else counter_cached_MET_T1Smear_phi_jesTotalDown_++;
    if (!loaded_MET_T1Smear_phi_jesTotalDown_) {
        if (!b_MET_T1Smear_phi_jesTotalDown_) throw std::runtime_error("MET_T1Smear_phi_jesTotalDown branch doesn't exist");
        b_MET_T1Smear_phi_jesTotalDown_->GetEntry(index);
        loaded_MET_T1Smear_phi_jesTotalDown_ = true;
    }
    return MET_T1Smear_phi_jesTotalDown_;
}
const float &Nano::MET_T1Smear_phi_jesTotalUp() {
    if (!loaded_MET_T1Smear_phi_jesTotalUp_) counter_uncached_MET_T1Smear_phi_jesTotalUp_++;
    else counter_cached_MET_T1Smear_phi_jesTotalUp_++;
    if (!loaded_MET_T1Smear_phi_jesTotalUp_) {
        if (!b_MET_T1Smear_phi_jesTotalUp_) throw std::runtime_error("MET_T1Smear_phi_jesTotalUp branch doesn't exist");
        b_MET_T1Smear_phi_jesTotalUp_->GetEntry(index);
        loaded_MET_T1Smear_phi_jesTotalUp_ = true;
    }
    return MET_T1Smear_phi_jesTotalUp_;
}
const float &Nano::MET_T1Smear_phi_unclustEnDown() {
    if (!loaded_MET_T1Smear_phi_unclustEnDown_) counter_uncached_MET_T1Smear_phi_unclustEnDown_++;
    else counter_cached_MET_T1Smear_phi_unclustEnDown_++;
    if (!loaded_MET_T1Smear_phi_unclustEnDown_) {
        if (!b_MET_T1Smear_phi_unclustEnDown_) throw std::runtime_error("MET_T1Smear_phi_unclustEnDown branch doesn't exist");
        b_MET_T1Smear_phi_unclustEnDown_->GetEntry(index);
        loaded_MET_T1Smear_phi_unclustEnDown_ = true;
    }
    return MET_T1Smear_phi_unclustEnDown_;
}
const float &Nano::MET_T1Smear_phi_unclustEnUp() {
    if (!loaded_MET_T1Smear_phi_unclustEnUp_) counter_uncached_MET_T1Smear_phi_unclustEnUp_++;
    else counter_cached_MET_T1Smear_phi_unclustEnUp_++;
    if (!loaded_MET_T1Smear_phi_unclustEnUp_) {
        if (!b_MET_T1Smear_phi_unclustEnUp_) throw std::runtime_error("MET_T1Smear_phi_unclustEnUp branch doesn't exist");
        b_MET_T1Smear_phi_unclustEnUp_->GetEntry(index);
        loaded_MET_T1Smear_phi_unclustEnUp_ = true;
    }
    return MET_T1Smear_phi_unclustEnUp_;
}
const float &Nano::MET_T1Smear_pt() {
    if (!loaded_MET_T1Smear_pt_) counter_uncached_MET_T1Smear_pt_++;
    else counter_cached_MET_T1Smear_pt_++;
    if (!loaded_MET_T1Smear_pt_) {
        if (!b_MET_T1Smear_pt_) throw std::runtime_error("MET_T1Smear_pt branch doesn't exist");
        b_MET_T1Smear_pt_->GetEntry(index);
        loaded_MET_T1Smear_pt_ = true;
    }
    return MET_T1Smear_pt_;
}
const float &Nano::MET_T1Smear_pt_jerDown() {
    if (!loaded_MET_T1Smear_pt_jerDown_) counter_uncached_MET_T1Smear_pt_jerDown_++;
    else counter_cached_MET_T1Smear_pt_jerDown_++;
    if (!loaded_MET_T1Smear_pt_jerDown_) {
        if (!b_MET_T1Smear_pt_jerDown_) throw std::runtime_error("MET_T1Smear_pt_jerDown branch doesn't exist");
        b_MET_T1Smear_pt_jerDown_->GetEntry(index);
        loaded_MET_T1Smear_pt_jerDown_ = true;
    }
    return MET_T1Smear_pt_jerDown_;
}
const float &Nano::MET_T1Smear_pt_jerUp() {
    if (!loaded_MET_T1Smear_pt_jerUp_) counter_uncached_MET_T1Smear_pt_jerUp_++;
    else counter_cached_MET_T1Smear_pt_jerUp_++;
    if (!loaded_MET_T1Smear_pt_jerUp_) {
        if (!b_MET_T1Smear_pt_jerUp_) throw std::runtime_error("MET_T1Smear_pt_jerUp branch doesn't exist");
        b_MET_T1Smear_pt_jerUp_->GetEntry(index);
        loaded_MET_T1Smear_pt_jerUp_ = true;
    }
    return MET_T1Smear_pt_jerUp_;
}
const float &Nano::MET_T1Smear_pt_jesHEMIssueDown() {
    if (!loaded_MET_T1Smear_pt_jesHEMIssueDown_) counter_uncached_MET_T1Smear_pt_jesHEMIssueDown_++;
    else counter_cached_MET_T1Smear_pt_jesHEMIssueDown_++;
    if (!loaded_MET_T1Smear_pt_jesHEMIssueDown_) {
        if (!b_MET_T1Smear_pt_jesHEMIssueDown_) throw std::runtime_error("MET_T1Smear_pt_jesHEMIssueDown branch doesn't exist");
        b_MET_T1Smear_pt_jesHEMIssueDown_->GetEntry(index);
        loaded_MET_T1Smear_pt_jesHEMIssueDown_ = true;
    }
    return MET_T1Smear_pt_jesHEMIssueDown_;
}
const float &Nano::MET_T1Smear_pt_jesHEMIssueUp() {
    if (!loaded_MET_T1Smear_pt_jesHEMIssueUp_) counter_uncached_MET_T1Smear_pt_jesHEMIssueUp_++;
    else counter_cached_MET_T1Smear_pt_jesHEMIssueUp_++;
    if (!loaded_MET_T1Smear_pt_jesHEMIssueUp_) {
        if (!b_MET_T1Smear_pt_jesHEMIssueUp_) throw std::runtime_error("MET_T1Smear_pt_jesHEMIssueUp branch doesn't exist");
        b_MET_T1Smear_pt_jesHEMIssueUp_->GetEntry(index);
        loaded_MET_T1Smear_pt_jesHEMIssueUp_ = true;
    }
    return MET_T1Smear_pt_jesHEMIssueUp_;
}
const float &Nano::MET_T1Smear_pt_jesTotalDown() {
    if (!loaded_MET_T1Smear_pt_jesTotalDown_) counter_uncached_MET_T1Smear_pt_jesTotalDown_++;
    else counter_cached_MET_T1Smear_pt_jesTotalDown_++;
    if (!loaded_MET_T1Smear_pt_jesTotalDown_) {
        if (!b_MET_T1Smear_pt_jesTotalDown_) throw std::runtime_error("MET_T1Smear_pt_jesTotalDown branch doesn't exist");
        b_MET_T1Smear_pt_jesTotalDown_->GetEntry(index);
        loaded_MET_T1Smear_pt_jesTotalDown_ = true;
    }
    return MET_T1Smear_pt_jesTotalDown_;
}
const float &Nano::MET_T1Smear_pt_jesTotalUp() {
    if (!loaded_MET_T1Smear_pt_jesTotalUp_) counter_uncached_MET_T1Smear_pt_jesTotalUp_++;
    else counter_cached_MET_T1Smear_pt_jesTotalUp_++;
    if (!loaded_MET_T1Smear_pt_jesTotalUp_) {
        if (!b_MET_T1Smear_pt_jesTotalUp_) throw std::runtime_error("MET_T1Smear_pt_jesTotalUp branch doesn't exist");
        b_MET_T1Smear_pt_jesTotalUp_->GetEntry(index);
        loaded_MET_T1Smear_pt_jesTotalUp_ = true;
    }
    return MET_T1Smear_pt_jesTotalUp_;
}
const float &Nano::MET_T1Smear_pt_unclustEnDown() {
    if (!loaded_MET_T1Smear_pt_unclustEnDown_) counter_uncached_MET_T1Smear_pt_unclustEnDown_++;
    else counter_cached_MET_T1Smear_pt_unclustEnDown_++;
    if (!loaded_MET_T1Smear_pt_unclustEnDown_) {
        if (!b_MET_T1Smear_pt_unclustEnDown_) throw std::runtime_error("MET_T1Smear_pt_unclustEnDown branch doesn't exist");
        b_MET_T1Smear_pt_unclustEnDown_->GetEntry(index);
        loaded_MET_T1Smear_pt_unclustEnDown_ = true;
    }
    return MET_T1Smear_pt_unclustEnDown_;
}
const float &Nano::MET_T1Smear_pt_unclustEnUp() {
    if (!loaded_MET_T1Smear_pt_unclustEnUp_) counter_uncached_MET_T1Smear_pt_unclustEnUp_++;
    else counter_cached_MET_T1Smear_pt_unclustEnUp_++;
    if (!loaded_MET_T1Smear_pt_unclustEnUp_) {
        if (!b_MET_T1Smear_pt_unclustEnUp_) throw std::runtime_error("MET_T1Smear_pt_unclustEnUp branch doesn't exist");
        b_MET_T1Smear_pt_unclustEnUp_->GetEntry(index);
        loaded_MET_T1Smear_pt_unclustEnUp_ = true;
    }
    return MET_T1Smear_pt_unclustEnUp_;
}
const float &Nano::MET_T1_phi() {
    if (!loaded_MET_T1_phi_) counter_uncached_MET_T1_phi_++;
    else counter_cached_MET_T1_phi_++;
    if (!loaded_MET_T1_phi_) {
        if (!b_MET_T1_phi_) throw std::runtime_error("MET_T1_phi branch doesn't exist");
        b_MET_T1_phi_->GetEntry(index);
        loaded_MET_T1_phi_ = true;
    }
    return MET_T1_phi_;
}
const float &Nano::MET_T1_phi_jerDown() {
    if (!loaded_MET_T1_phi_jerDown_) counter_uncached_MET_T1_phi_jerDown_++;
    else counter_cached_MET_T1_phi_jerDown_++;
    if (!loaded_MET_T1_phi_jerDown_) {
        if (!b_MET_T1_phi_jerDown_) throw std::runtime_error("MET_T1_phi_jerDown branch doesn't exist");
        b_MET_T1_phi_jerDown_->GetEntry(index);
        loaded_MET_T1_phi_jerDown_ = true;
    }
    return MET_T1_phi_jerDown_;
}
const float &Nano::MET_T1_phi_jerUp() {
    if (!loaded_MET_T1_phi_jerUp_) counter_uncached_MET_T1_phi_jerUp_++;
    else counter_cached_MET_T1_phi_jerUp_++;
    if (!loaded_MET_T1_phi_jerUp_) {
        if (!b_MET_T1_phi_jerUp_) throw std::runtime_error("MET_T1_phi_jerUp branch doesn't exist");
        b_MET_T1_phi_jerUp_->GetEntry(index);
        loaded_MET_T1_phi_jerUp_ = true;
    }
    return MET_T1_phi_jerUp_;
}
const float &Nano::MET_T1_phi_jesHEMIssueDown() {
    if (!loaded_MET_T1_phi_jesHEMIssueDown_) counter_uncached_MET_T1_phi_jesHEMIssueDown_++;
    else counter_cached_MET_T1_phi_jesHEMIssueDown_++;
    if (!loaded_MET_T1_phi_jesHEMIssueDown_) {
        if (!b_MET_T1_phi_jesHEMIssueDown_) throw std::runtime_error("MET_T1_phi_jesHEMIssueDown branch doesn't exist");
        b_MET_T1_phi_jesHEMIssueDown_->GetEntry(index);
        loaded_MET_T1_phi_jesHEMIssueDown_ = true;
    }
    return MET_T1_phi_jesHEMIssueDown_;
}
const float &Nano::MET_T1_phi_jesHEMIssueUp() {
    if (!loaded_MET_T1_phi_jesHEMIssueUp_) counter_uncached_MET_T1_phi_jesHEMIssueUp_++;
    else counter_cached_MET_T1_phi_jesHEMIssueUp_++;
    if (!loaded_MET_T1_phi_jesHEMIssueUp_) {
        if (!b_MET_T1_phi_jesHEMIssueUp_) throw std::runtime_error("MET_T1_phi_jesHEMIssueUp branch doesn't exist");
        b_MET_T1_phi_jesHEMIssueUp_->GetEntry(index);
        loaded_MET_T1_phi_jesHEMIssueUp_ = true;
    }
    return MET_T1_phi_jesHEMIssueUp_;
}
const float &Nano::MET_T1_phi_jesTotalDown() {
    if (!loaded_MET_T1_phi_jesTotalDown_) counter_uncached_MET_T1_phi_jesTotalDown_++;
    else counter_cached_MET_T1_phi_jesTotalDown_++;
    if (!loaded_MET_T1_phi_jesTotalDown_) {
        if (!b_MET_T1_phi_jesTotalDown_) throw std::runtime_error("MET_T1_phi_jesTotalDown branch doesn't exist");
        b_MET_T1_phi_jesTotalDown_->GetEntry(index);
        loaded_MET_T1_phi_jesTotalDown_ = true;
    }
    return MET_T1_phi_jesTotalDown_;
}
const float &Nano::MET_T1_phi_jesTotalUp() {
    if (!loaded_MET_T1_phi_jesTotalUp_) counter_uncached_MET_T1_phi_jesTotalUp_++;
    else counter_cached_MET_T1_phi_jesTotalUp_++;
    if (!loaded_MET_T1_phi_jesTotalUp_) {
        if (!b_MET_T1_phi_jesTotalUp_) throw std::runtime_error("MET_T1_phi_jesTotalUp branch doesn't exist");
        b_MET_T1_phi_jesTotalUp_->GetEntry(index);
        loaded_MET_T1_phi_jesTotalUp_ = true;
    }
    return MET_T1_phi_jesTotalUp_;
}
const float &Nano::MET_T1_phi_unclustEnDown() {
    if (!loaded_MET_T1_phi_unclustEnDown_) counter_uncached_MET_T1_phi_unclustEnDown_++;
    else counter_cached_MET_T1_phi_unclustEnDown_++;
    if (!loaded_MET_T1_phi_unclustEnDown_) {
        if (!b_MET_T1_phi_unclustEnDown_) throw std::runtime_error("MET_T1_phi_unclustEnDown branch doesn't exist");
        b_MET_T1_phi_unclustEnDown_->GetEntry(index);
        loaded_MET_T1_phi_unclustEnDown_ = true;
    }
    return MET_T1_phi_unclustEnDown_;
}
const float &Nano::MET_T1_phi_unclustEnUp() {
    if (!loaded_MET_T1_phi_unclustEnUp_) counter_uncached_MET_T1_phi_unclustEnUp_++;
    else counter_cached_MET_T1_phi_unclustEnUp_++;
    if (!loaded_MET_T1_phi_unclustEnUp_) {
        if (!b_MET_T1_phi_unclustEnUp_) throw std::runtime_error("MET_T1_phi_unclustEnUp branch doesn't exist");
        b_MET_T1_phi_unclustEnUp_->GetEntry(index);
        loaded_MET_T1_phi_unclustEnUp_ = true;
    }
    return MET_T1_phi_unclustEnUp_;
}
const float &Nano::MET_T1_pt() {
    if (!loaded_MET_T1_pt_) counter_uncached_MET_T1_pt_++;
    else counter_cached_MET_T1_pt_++;
    if (!loaded_MET_T1_pt_) {
        if (!b_MET_T1_pt_) throw std::runtime_error("MET_T1_pt branch doesn't exist");
        b_MET_T1_pt_->GetEntry(index);
        loaded_MET_T1_pt_ = true;
    }
    return MET_T1_pt_;
}
const float &Nano::MET_T1_pt_jerDown() {
    if (!loaded_MET_T1_pt_jerDown_) counter_uncached_MET_T1_pt_jerDown_++;
    else counter_cached_MET_T1_pt_jerDown_++;
    if (!loaded_MET_T1_pt_jerDown_) {
        if (!b_MET_T1_pt_jerDown_) throw std::runtime_error("MET_T1_pt_jerDown branch doesn't exist");
        b_MET_T1_pt_jerDown_->GetEntry(index);
        loaded_MET_T1_pt_jerDown_ = true;
    }
    return MET_T1_pt_jerDown_;
}
const float &Nano::MET_T1_pt_jerUp() {
    if (!loaded_MET_T1_pt_jerUp_) counter_uncached_MET_T1_pt_jerUp_++;
    else counter_cached_MET_T1_pt_jerUp_++;
    if (!loaded_MET_T1_pt_jerUp_) {
        if (!b_MET_T1_pt_jerUp_) throw std::runtime_error("MET_T1_pt_jerUp branch doesn't exist");
        b_MET_T1_pt_jerUp_->GetEntry(index);
        loaded_MET_T1_pt_jerUp_ = true;
    }
    return MET_T1_pt_jerUp_;
}
const float &Nano::MET_T1_pt_jesHEMIssueDown() {
    if (!loaded_MET_T1_pt_jesHEMIssueDown_) counter_uncached_MET_T1_pt_jesHEMIssueDown_++;
    else counter_cached_MET_T1_pt_jesHEMIssueDown_++;
    if (!loaded_MET_T1_pt_jesHEMIssueDown_) {
        if (!b_MET_T1_pt_jesHEMIssueDown_) throw std::runtime_error("MET_T1_pt_jesHEMIssueDown branch doesn't exist");
        b_MET_T1_pt_jesHEMIssueDown_->GetEntry(index);
        loaded_MET_T1_pt_jesHEMIssueDown_ = true;
    }
    return MET_T1_pt_jesHEMIssueDown_;
}
const float &Nano::MET_T1_pt_jesHEMIssueUp() {
    if (!loaded_MET_T1_pt_jesHEMIssueUp_) counter_uncached_MET_T1_pt_jesHEMIssueUp_++;
    else counter_cached_MET_T1_pt_jesHEMIssueUp_++;
    if (!loaded_MET_T1_pt_jesHEMIssueUp_) {
        if (!b_MET_T1_pt_jesHEMIssueUp_) throw std::runtime_error("MET_T1_pt_jesHEMIssueUp branch doesn't exist");
        b_MET_T1_pt_jesHEMIssueUp_->GetEntry(index);
        loaded_MET_T1_pt_jesHEMIssueUp_ = true;
    }
    return MET_T1_pt_jesHEMIssueUp_;
}
const float &Nano::MET_T1_pt_jesTotalDown() {
    if (!loaded_MET_T1_pt_jesTotalDown_) counter_uncached_MET_T1_pt_jesTotalDown_++;
    else counter_cached_MET_T1_pt_jesTotalDown_++;
    if (!loaded_MET_T1_pt_jesTotalDown_) {
        if (!b_MET_T1_pt_jesTotalDown_) throw std::runtime_error("MET_T1_pt_jesTotalDown branch doesn't exist");
        b_MET_T1_pt_jesTotalDown_->GetEntry(index);
        loaded_MET_T1_pt_jesTotalDown_ = true;
    }
    return MET_T1_pt_jesTotalDown_;
}
const float &Nano::MET_T1_pt_jesTotalUp() {
    if (!loaded_MET_T1_pt_jesTotalUp_) counter_uncached_MET_T1_pt_jesTotalUp_++;
    else counter_cached_MET_T1_pt_jesTotalUp_++;
    if (!loaded_MET_T1_pt_jesTotalUp_) {
        if (!b_MET_T1_pt_jesTotalUp_) throw std::runtime_error("MET_T1_pt_jesTotalUp branch doesn't exist");
        b_MET_T1_pt_jesTotalUp_->GetEntry(index);
        loaded_MET_T1_pt_jesTotalUp_ = true;
    }
    return MET_T1_pt_jesTotalUp_;
}
const float &Nano::MET_T1_pt_unclustEnDown() {
    if (!loaded_MET_T1_pt_unclustEnDown_) counter_uncached_MET_T1_pt_unclustEnDown_++;
    else counter_cached_MET_T1_pt_unclustEnDown_++;
    if (!loaded_MET_T1_pt_unclustEnDown_) {
        if (!b_MET_T1_pt_unclustEnDown_) throw std::runtime_error("MET_T1_pt_unclustEnDown branch doesn't exist");
        b_MET_T1_pt_unclustEnDown_->GetEntry(index);
        loaded_MET_T1_pt_unclustEnDown_ = true;
    }
    return MET_T1_pt_unclustEnDown_;
}
const float &Nano::MET_T1_pt_unclustEnUp() {
    if (!loaded_MET_T1_pt_unclustEnUp_) counter_uncached_MET_T1_pt_unclustEnUp_++;
    else counter_cached_MET_T1_pt_unclustEnUp_++;
    if (!loaded_MET_T1_pt_unclustEnUp_) {
        if (!b_MET_T1_pt_unclustEnUp_) throw std::runtime_error("MET_T1_pt_unclustEnUp branch doesn't exist");
        b_MET_T1_pt_unclustEnUp_->GetEntry(index);
        loaded_MET_T1_pt_unclustEnUp_ = true;
    }
    return MET_T1_pt_unclustEnUp_;
}
const float &Nano::MET_covXX() {
    if (!loaded_MET_covXX_) counter_uncached_MET_covXX_++;
    else counter_cached_MET_covXX_++;
    if (!loaded_MET_covXX_) {
        if (!b_MET_covXX_) throw std::runtime_error("MET_covXX branch doesn't exist");
        b_MET_covXX_->GetEntry(index);
        loaded_MET_covXX_ = true;
    }
    return MET_covXX_;
}
const float &Nano::MET_covXY() {
    if (!loaded_MET_covXY_) counter_uncached_MET_covXY_++;
    else counter_cached_MET_covXY_++;
    if (!loaded_MET_covXY_) {
        if (!b_MET_covXY_) throw std::runtime_error("MET_covXY branch doesn't exist");
        b_MET_covXY_->GetEntry(index);
        loaded_MET_covXY_ = true;
    }
    return MET_covXY_;
}
const float &Nano::MET_covYY() {
    if (!loaded_MET_covYY_) counter_uncached_MET_covYY_++;
    else counter_cached_MET_covYY_++;
    if (!loaded_MET_covYY_) {
        if (!b_MET_covYY_) throw std::runtime_error("MET_covYY branch doesn't exist");
        b_MET_covYY_->GetEntry(index);
        loaded_MET_covYY_ = true;
    }
    return MET_covYY_;
}
const float &Nano::MET_fiducialGenPhi() {
    if (!loaded_MET_fiducialGenPhi_) counter_uncached_MET_fiducialGenPhi_++;
    else counter_cached_MET_fiducialGenPhi_++;
    if (!loaded_MET_fiducialGenPhi_) {
        if (!b_MET_fiducialGenPhi_) throw std::runtime_error("MET_fiducialGenPhi branch doesn't exist");
        b_MET_fiducialGenPhi_->GetEntry(index);
        loaded_MET_fiducialGenPhi_ = true;
    }
    return MET_fiducialGenPhi_;
}
const float &Nano::MET_fiducialGenPt() {
    if (!loaded_MET_fiducialGenPt_) counter_uncached_MET_fiducialGenPt_++;
    else counter_cached_MET_fiducialGenPt_++;
    if (!loaded_MET_fiducialGenPt_) {
        if (!b_MET_fiducialGenPt_) throw std::runtime_error("MET_fiducialGenPt branch doesn't exist");
        b_MET_fiducialGenPt_->GetEntry(index);
        loaded_MET_fiducialGenPt_ = true;
    }
    return MET_fiducialGenPt_;
}
const float &Nano::MET_phi() {
    if (!loaded_MET_phi_) counter_uncached_MET_phi_++;
    else counter_cached_MET_phi_++;
    if (!loaded_MET_phi_) {
        if (!b_MET_phi_) throw std::runtime_error("MET_phi branch doesn't exist");
        b_MET_phi_->GetEntry(index);
        loaded_MET_phi_ = true;
    }
    return MET_phi_;
}
const float &Nano::MET_pt() {
    if (!loaded_MET_pt_) counter_uncached_MET_pt_++;
    else counter_cached_MET_pt_++;
    if (!loaded_MET_pt_) {
        if (!b_MET_pt_) throw std::runtime_error("MET_pt branch doesn't exist");
        b_MET_pt_->GetEntry(index);
        loaded_MET_pt_ = true;
    }
    return MET_pt_;
}
const float &Nano::MET_significance() {
    if (!loaded_MET_significance_) counter_uncached_MET_significance_++;
    else counter_cached_MET_significance_++;
    if (!loaded_MET_significance_) {
        if (!b_MET_significance_) throw std::runtime_error("MET_significance branch doesn't exist");
        b_MET_significance_->GetEntry(index);
        loaded_MET_significance_ = true;
    }
    return MET_significance_;
}
const float &Nano::MET_sumEt() {
    if (!loaded_MET_sumEt_) counter_uncached_MET_sumEt_++;
    else counter_cached_MET_sumEt_++;
    if (!loaded_MET_sumEt_) {
        if (!b_MET_sumEt_) throw std::runtime_error("MET_sumEt branch doesn't exist");
        b_MET_sumEt_->GetEntry(index);
        loaded_MET_sumEt_ = true;
    }
    return MET_sumEt_;
}
const float &Nano::MET_sumPtUnclustered() {
    if (!loaded_MET_sumPtUnclustered_) counter_uncached_MET_sumPtUnclustered_++;
    else counter_cached_MET_sumPtUnclustered_++;
    if (!loaded_MET_sumPtUnclustered_) {
        if (!b_MET_sumPtUnclustered_) throw std::runtime_error("MET_sumPtUnclustered branch doesn't exist");
        b_MET_sumPtUnclustered_->GetEntry(index);
        loaded_MET_sumPtUnclustered_ = true;
    }
    return MET_sumPtUnclustered_;
}
const vector<float> &Nano::Muon_CutBased_HighPtID_SF() {
    if (!loaded_Muon_CutBased_HighPtID_SF_) counter_uncached_Muon_CutBased_HighPtID_SF_++;
    else counter_cached_Muon_CutBased_HighPtID_SF_++;
    if (!loaded_Muon_CutBased_HighPtID_SF_) {
        if (!b_Muon_CutBased_HighPtID_SF_) throw std::runtime_error("Muon_CutBased_HighPtID_SF branch doesn't exist");
        int bytes = b_Muon_CutBased_HighPtID_SF_->GetEntry(index);
        v_Muon_CutBased_HighPtID_SF_ = vector<float>(Muon_CutBased_HighPtID_SF_,Muon_CutBased_HighPtID_SF_+bytes/sizeof(Muon_CutBased_HighPtID_SF_[0]));
        loaded_Muon_CutBased_HighPtID_SF_ = true;
    }
    return v_Muon_CutBased_HighPtID_SF_;
}
const vector<float> &Nano::Muon_CutBased_HighPtID_SFerr() {
    if (!loaded_Muon_CutBased_HighPtID_SFerr_) counter_uncached_Muon_CutBased_HighPtID_SFerr_++;
    else counter_cached_Muon_CutBased_HighPtID_SFerr_++;
    if (!loaded_Muon_CutBased_HighPtID_SFerr_) {
        if (!b_Muon_CutBased_HighPtID_SFerr_) throw std::runtime_error("Muon_CutBased_HighPtID_SFerr branch doesn't exist");
        int bytes = b_Muon_CutBased_HighPtID_SFerr_->GetEntry(index);
        v_Muon_CutBased_HighPtID_SFerr_ = vector<float>(Muon_CutBased_HighPtID_SFerr_,Muon_CutBased_HighPtID_SFerr_+bytes/sizeof(Muon_CutBased_HighPtID_SFerr_[0]));
        loaded_Muon_CutBased_HighPtID_SFerr_ = true;
    }
    return v_Muon_CutBased_HighPtID_SFerr_;
}
const vector<float> &Nano::Muon_CutBased_LooseID_SF() {
    if (!loaded_Muon_CutBased_LooseID_SF_) counter_uncached_Muon_CutBased_LooseID_SF_++;
    else counter_cached_Muon_CutBased_LooseID_SF_++;
    if (!loaded_Muon_CutBased_LooseID_SF_) {
        if (!b_Muon_CutBased_LooseID_SF_) throw std::runtime_error("Muon_CutBased_LooseID_SF branch doesn't exist");
        int bytes = b_Muon_CutBased_LooseID_SF_->GetEntry(index);
        v_Muon_CutBased_LooseID_SF_ = vector<float>(Muon_CutBased_LooseID_SF_,Muon_CutBased_LooseID_SF_+bytes/sizeof(Muon_CutBased_LooseID_SF_[0]));
        loaded_Muon_CutBased_LooseID_SF_ = true;
    }
    return v_Muon_CutBased_LooseID_SF_;
}
const vector<float> &Nano::Muon_CutBased_LooseID_SFerr() {
    if (!loaded_Muon_CutBased_LooseID_SFerr_) counter_uncached_Muon_CutBased_LooseID_SFerr_++;
    else counter_cached_Muon_CutBased_LooseID_SFerr_++;
    if (!loaded_Muon_CutBased_LooseID_SFerr_) {
        if (!b_Muon_CutBased_LooseID_SFerr_) throw std::runtime_error("Muon_CutBased_LooseID_SFerr branch doesn't exist");
        int bytes = b_Muon_CutBased_LooseID_SFerr_->GetEntry(index);
        v_Muon_CutBased_LooseID_SFerr_ = vector<float>(Muon_CutBased_LooseID_SFerr_,Muon_CutBased_LooseID_SFerr_+bytes/sizeof(Muon_CutBased_LooseID_SFerr_[0]));
        loaded_Muon_CutBased_LooseID_SFerr_ = true;
    }
    return v_Muon_CutBased_LooseID_SFerr_;
}
const vector<float> &Nano::Muon_CutBased_MediumID_SF() {
    if (!loaded_Muon_CutBased_MediumID_SF_) counter_uncached_Muon_CutBased_MediumID_SF_++;
    else counter_cached_Muon_CutBased_MediumID_SF_++;
    if (!loaded_Muon_CutBased_MediumID_SF_) {
        if (!b_Muon_CutBased_MediumID_SF_) throw std::runtime_error("Muon_CutBased_MediumID_SF branch doesn't exist");
        int bytes = b_Muon_CutBased_MediumID_SF_->GetEntry(index);
        v_Muon_CutBased_MediumID_SF_ = vector<float>(Muon_CutBased_MediumID_SF_,Muon_CutBased_MediumID_SF_+bytes/sizeof(Muon_CutBased_MediumID_SF_[0]));
        loaded_Muon_CutBased_MediumID_SF_ = true;
    }
    return v_Muon_CutBased_MediumID_SF_;
}
const vector<float> &Nano::Muon_CutBased_MediumID_SFerr() {
    if (!loaded_Muon_CutBased_MediumID_SFerr_) counter_uncached_Muon_CutBased_MediumID_SFerr_++;
    else counter_cached_Muon_CutBased_MediumID_SFerr_++;
    if (!loaded_Muon_CutBased_MediumID_SFerr_) {
        if (!b_Muon_CutBased_MediumID_SFerr_) throw std::runtime_error("Muon_CutBased_MediumID_SFerr branch doesn't exist");
        int bytes = b_Muon_CutBased_MediumID_SFerr_->GetEntry(index);
        v_Muon_CutBased_MediumID_SFerr_ = vector<float>(Muon_CutBased_MediumID_SFerr_,Muon_CutBased_MediumID_SFerr_+bytes/sizeof(Muon_CutBased_MediumID_SFerr_[0]));
        loaded_Muon_CutBased_MediumID_SFerr_ = true;
    }
    return v_Muon_CutBased_MediumID_SFerr_;
}
const vector<float> &Nano::Muon_CutBased_MediumPromptID_SF() {
    if (!loaded_Muon_CutBased_MediumPromptID_SF_) counter_uncached_Muon_CutBased_MediumPromptID_SF_++;
    else counter_cached_Muon_CutBased_MediumPromptID_SF_++;
    if (!loaded_Muon_CutBased_MediumPromptID_SF_) {
        if (!b_Muon_CutBased_MediumPromptID_SF_) throw std::runtime_error("Muon_CutBased_MediumPromptID_SF branch doesn't exist");
        int bytes = b_Muon_CutBased_MediumPromptID_SF_->GetEntry(index);
        v_Muon_CutBased_MediumPromptID_SF_ = vector<float>(Muon_CutBased_MediumPromptID_SF_,Muon_CutBased_MediumPromptID_SF_+bytes/sizeof(Muon_CutBased_MediumPromptID_SF_[0]));
        loaded_Muon_CutBased_MediumPromptID_SF_ = true;
    }
    return v_Muon_CutBased_MediumPromptID_SF_;
}
const vector<float> &Nano::Muon_CutBased_MediumPromptID_SFerr() {
    if (!loaded_Muon_CutBased_MediumPromptID_SFerr_) counter_uncached_Muon_CutBased_MediumPromptID_SFerr_++;
    else counter_cached_Muon_CutBased_MediumPromptID_SFerr_++;
    if (!loaded_Muon_CutBased_MediumPromptID_SFerr_) {
        if (!b_Muon_CutBased_MediumPromptID_SFerr_) throw std::runtime_error("Muon_CutBased_MediumPromptID_SFerr branch doesn't exist");
        int bytes = b_Muon_CutBased_MediumPromptID_SFerr_->GetEntry(index);
        v_Muon_CutBased_MediumPromptID_SFerr_ = vector<float>(Muon_CutBased_MediumPromptID_SFerr_,Muon_CutBased_MediumPromptID_SFerr_+bytes/sizeof(Muon_CutBased_MediumPromptID_SFerr_[0]));
        loaded_Muon_CutBased_MediumPromptID_SFerr_ = true;
    }
    return v_Muon_CutBased_MediumPromptID_SFerr_;
}
const vector<float> &Nano::Muon_CutBased_SoftID_SF() {
    if (!loaded_Muon_CutBased_SoftID_SF_) counter_uncached_Muon_CutBased_SoftID_SF_++;
    else counter_cached_Muon_CutBased_SoftID_SF_++;
    if (!loaded_Muon_CutBased_SoftID_SF_) {
        if (!b_Muon_CutBased_SoftID_SF_) throw std::runtime_error("Muon_CutBased_SoftID_SF branch doesn't exist");
        int bytes = b_Muon_CutBased_SoftID_SF_->GetEntry(index);
        v_Muon_CutBased_SoftID_SF_ = vector<float>(Muon_CutBased_SoftID_SF_,Muon_CutBased_SoftID_SF_+bytes/sizeof(Muon_CutBased_SoftID_SF_[0]));
        loaded_Muon_CutBased_SoftID_SF_ = true;
    }
    return v_Muon_CutBased_SoftID_SF_;
}
const vector<float> &Nano::Muon_CutBased_SoftID_SFerr() {
    if (!loaded_Muon_CutBased_SoftID_SFerr_) counter_uncached_Muon_CutBased_SoftID_SFerr_++;
    else counter_cached_Muon_CutBased_SoftID_SFerr_++;
    if (!loaded_Muon_CutBased_SoftID_SFerr_) {
        if (!b_Muon_CutBased_SoftID_SFerr_) throw std::runtime_error("Muon_CutBased_SoftID_SFerr branch doesn't exist");
        int bytes = b_Muon_CutBased_SoftID_SFerr_->GetEntry(index);
        v_Muon_CutBased_SoftID_SFerr_ = vector<float>(Muon_CutBased_SoftID_SFerr_,Muon_CutBased_SoftID_SFerr_+bytes/sizeof(Muon_CutBased_SoftID_SFerr_[0]));
        loaded_Muon_CutBased_SoftID_SFerr_ = true;
    }
    return v_Muon_CutBased_SoftID_SFerr_;
}
const vector<float> &Nano::Muon_CutBased_TightID_SF() {
    if (!loaded_Muon_CutBased_TightID_SF_) counter_uncached_Muon_CutBased_TightID_SF_++;
    else counter_cached_Muon_CutBased_TightID_SF_++;
    if (!loaded_Muon_CutBased_TightID_SF_) {
        if (!b_Muon_CutBased_TightID_SF_) throw std::runtime_error("Muon_CutBased_TightID_SF branch doesn't exist");
        int bytes = b_Muon_CutBased_TightID_SF_->GetEntry(index);
        v_Muon_CutBased_TightID_SF_ = vector<float>(Muon_CutBased_TightID_SF_,Muon_CutBased_TightID_SF_+bytes/sizeof(Muon_CutBased_TightID_SF_[0]));
        loaded_Muon_CutBased_TightID_SF_ = true;
    }
    return v_Muon_CutBased_TightID_SF_;
}
const vector<float> &Nano::Muon_CutBased_TightID_SFerr() {
    if (!loaded_Muon_CutBased_TightID_SFerr_) counter_uncached_Muon_CutBased_TightID_SFerr_++;
    else counter_cached_Muon_CutBased_TightID_SFerr_++;
    if (!loaded_Muon_CutBased_TightID_SFerr_) {
        if (!b_Muon_CutBased_TightID_SFerr_) throw std::runtime_error("Muon_CutBased_TightID_SFerr branch doesn't exist");
        int bytes = b_Muon_CutBased_TightID_SFerr_->GetEntry(index);
        v_Muon_CutBased_TightID_SFerr_ = vector<float>(Muon_CutBased_TightID_SFerr_,Muon_CutBased_TightID_SFerr_+bytes/sizeof(Muon_CutBased_TightID_SFerr_[0]));
        loaded_Muon_CutBased_TightID_SFerr_ = true;
    }
    return v_Muon_CutBased_TightID_SFerr_;
}
const vector<float> &Nano::Muon_CutBased_TrkHighPtID_SF() {
    if (!loaded_Muon_CutBased_TrkHighPtID_SF_) counter_uncached_Muon_CutBased_TrkHighPtID_SF_++;
    else counter_cached_Muon_CutBased_TrkHighPtID_SF_++;
    if (!loaded_Muon_CutBased_TrkHighPtID_SF_) {
        if (!b_Muon_CutBased_TrkHighPtID_SF_) throw std::runtime_error("Muon_CutBased_TrkHighPtID_SF branch doesn't exist");
        int bytes = b_Muon_CutBased_TrkHighPtID_SF_->GetEntry(index);
        v_Muon_CutBased_TrkHighPtID_SF_ = vector<float>(Muon_CutBased_TrkHighPtID_SF_,Muon_CutBased_TrkHighPtID_SF_+bytes/sizeof(Muon_CutBased_TrkHighPtID_SF_[0]));
        loaded_Muon_CutBased_TrkHighPtID_SF_ = true;
    }
    return v_Muon_CutBased_TrkHighPtID_SF_;
}
const vector<float> &Nano::Muon_CutBased_TrkHighPtID_SFerr() {
    if (!loaded_Muon_CutBased_TrkHighPtID_SFerr_) counter_uncached_Muon_CutBased_TrkHighPtID_SFerr_++;
    else counter_cached_Muon_CutBased_TrkHighPtID_SFerr_++;
    if (!loaded_Muon_CutBased_TrkHighPtID_SFerr_) {
        if (!b_Muon_CutBased_TrkHighPtID_SFerr_) throw std::runtime_error("Muon_CutBased_TrkHighPtID_SFerr branch doesn't exist");
        int bytes = b_Muon_CutBased_TrkHighPtID_SFerr_->GetEntry(index);
        v_Muon_CutBased_TrkHighPtID_SFerr_ = vector<float>(Muon_CutBased_TrkHighPtID_SFerr_,Muon_CutBased_TrkHighPtID_SFerr_+bytes/sizeof(Muon_CutBased_TrkHighPtID_SFerr_[0]));
        loaded_Muon_CutBased_TrkHighPtID_SFerr_ = true;
    }
    return v_Muon_CutBased_TrkHighPtID_SFerr_;
}
const vector<float> &Nano::Muon_LooseRelIso_LooseID_SF() {
    if (!loaded_Muon_LooseRelIso_LooseID_SF_) counter_uncached_Muon_LooseRelIso_LooseID_SF_++;
    else counter_cached_Muon_LooseRelIso_LooseID_SF_++;
    if (!loaded_Muon_LooseRelIso_LooseID_SF_) {
        if (!b_Muon_LooseRelIso_LooseID_SF_) throw std::runtime_error("Muon_LooseRelIso_LooseID_SF branch doesn't exist");
        int bytes = b_Muon_LooseRelIso_LooseID_SF_->GetEntry(index);
        v_Muon_LooseRelIso_LooseID_SF_ = vector<float>(Muon_LooseRelIso_LooseID_SF_,Muon_LooseRelIso_LooseID_SF_+bytes/sizeof(Muon_LooseRelIso_LooseID_SF_[0]));
        loaded_Muon_LooseRelIso_LooseID_SF_ = true;
    }
    return v_Muon_LooseRelIso_LooseID_SF_;
}
const vector<float> &Nano::Muon_LooseRelIso_LooseID_SFerr() {
    if (!loaded_Muon_LooseRelIso_LooseID_SFerr_) counter_uncached_Muon_LooseRelIso_LooseID_SFerr_++;
    else counter_cached_Muon_LooseRelIso_LooseID_SFerr_++;
    if (!loaded_Muon_LooseRelIso_LooseID_SFerr_) {
        if (!b_Muon_LooseRelIso_LooseID_SFerr_) throw std::runtime_error("Muon_LooseRelIso_LooseID_SFerr branch doesn't exist");
        int bytes = b_Muon_LooseRelIso_LooseID_SFerr_->GetEntry(index);
        v_Muon_LooseRelIso_LooseID_SFerr_ = vector<float>(Muon_LooseRelIso_LooseID_SFerr_,Muon_LooseRelIso_LooseID_SFerr_+bytes/sizeof(Muon_LooseRelIso_LooseID_SFerr_[0]));
        loaded_Muon_LooseRelIso_LooseID_SFerr_ = true;
    }
    return v_Muon_LooseRelIso_LooseID_SFerr_;
}
const vector<float> &Nano::Muon_LooseRelIso_MediumID_SF() {
    if (!loaded_Muon_LooseRelIso_MediumID_SF_) counter_uncached_Muon_LooseRelIso_MediumID_SF_++;
    else counter_cached_Muon_LooseRelIso_MediumID_SF_++;
    if (!loaded_Muon_LooseRelIso_MediumID_SF_) {
        if (!b_Muon_LooseRelIso_MediumID_SF_) throw std::runtime_error("Muon_LooseRelIso_MediumID_SF branch doesn't exist");
        int bytes = b_Muon_LooseRelIso_MediumID_SF_->GetEntry(index);
        v_Muon_LooseRelIso_MediumID_SF_ = vector<float>(Muon_LooseRelIso_MediumID_SF_,Muon_LooseRelIso_MediumID_SF_+bytes/sizeof(Muon_LooseRelIso_MediumID_SF_[0]));
        loaded_Muon_LooseRelIso_MediumID_SF_ = true;
    }
    return v_Muon_LooseRelIso_MediumID_SF_;
}
const vector<float> &Nano::Muon_LooseRelIso_MediumID_SFerr() {
    if (!loaded_Muon_LooseRelIso_MediumID_SFerr_) counter_uncached_Muon_LooseRelIso_MediumID_SFerr_++;
    else counter_cached_Muon_LooseRelIso_MediumID_SFerr_++;
    if (!loaded_Muon_LooseRelIso_MediumID_SFerr_) {
        if (!b_Muon_LooseRelIso_MediumID_SFerr_) throw std::runtime_error("Muon_LooseRelIso_MediumID_SFerr branch doesn't exist");
        int bytes = b_Muon_LooseRelIso_MediumID_SFerr_->GetEntry(index);
        v_Muon_LooseRelIso_MediumID_SFerr_ = vector<float>(Muon_LooseRelIso_MediumID_SFerr_,Muon_LooseRelIso_MediumID_SFerr_+bytes/sizeof(Muon_LooseRelIso_MediumID_SFerr_[0]));
        loaded_Muon_LooseRelIso_MediumID_SFerr_ = true;
    }
    return v_Muon_LooseRelIso_MediumID_SFerr_;
}
const vector<float> &Nano::Muon_LooseRelIso_MediumPromptID_SF() {
    if (!loaded_Muon_LooseRelIso_MediumPromptID_SF_) counter_uncached_Muon_LooseRelIso_MediumPromptID_SF_++;
    else counter_cached_Muon_LooseRelIso_MediumPromptID_SF_++;
    if (!loaded_Muon_LooseRelIso_MediumPromptID_SF_) {
        if (!b_Muon_LooseRelIso_MediumPromptID_SF_) throw std::runtime_error("Muon_LooseRelIso_MediumPromptID_SF branch doesn't exist");
        int bytes = b_Muon_LooseRelIso_MediumPromptID_SF_->GetEntry(index);
        v_Muon_LooseRelIso_MediumPromptID_SF_ = vector<float>(Muon_LooseRelIso_MediumPromptID_SF_,Muon_LooseRelIso_MediumPromptID_SF_+bytes/sizeof(Muon_LooseRelIso_MediumPromptID_SF_[0]));
        loaded_Muon_LooseRelIso_MediumPromptID_SF_ = true;
    }
    return v_Muon_LooseRelIso_MediumPromptID_SF_;
}
const vector<float> &Nano::Muon_LooseRelIso_MediumPromptID_SFerr() {
    if (!loaded_Muon_LooseRelIso_MediumPromptID_SFerr_) counter_uncached_Muon_LooseRelIso_MediumPromptID_SFerr_++;
    else counter_cached_Muon_LooseRelIso_MediumPromptID_SFerr_++;
    if (!loaded_Muon_LooseRelIso_MediumPromptID_SFerr_) {
        if (!b_Muon_LooseRelIso_MediumPromptID_SFerr_) throw std::runtime_error("Muon_LooseRelIso_MediumPromptID_SFerr branch doesn't exist");
        int bytes = b_Muon_LooseRelIso_MediumPromptID_SFerr_->GetEntry(index);
        v_Muon_LooseRelIso_MediumPromptID_SFerr_ = vector<float>(Muon_LooseRelIso_MediumPromptID_SFerr_,Muon_LooseRelIso_MediumPromptID_SFerr_+bytes/sizeof(Muon_LooseRelIso_MediumPromptID_SFerr_[0]));
        loaded_Muon_LooseRelIso_MediumPromptID_SFerr_ = true;
    }
    return v_Muon_LooseRelIso_MediumPromptID_SFerr_;
}
const vector<float> &Nano::Muon_LooseRelIso_TightIDandIPCut_SF() {
    if (!loaded_Muon_LooseRelIso_TightIDandIPCut_SF_) counter_uncached_Muon_LooseRelIso_TightIDandIPCut_SF_++;
    else counter_cached_Muon_LooseRelIso_TightIDandIPCut_SF_++;
    if (!loaded_Muon_LooseRelIso_TightIDandIPCut_SF_) {
        if (!b_Muon_LooseRelIso_TightIDandIPCut_SF_) throw std::runtime_error("Muon_LooseRelIso_TightIDandIPCut_SF branch doesn't exist");
        int bytes = b_Muon_LooseRelIso_TightIDandIPCut_SF_->GetEntry(index);
        v_Muon_LooseRelIso_TightIDandIPCut_SF_ = vector<float>(Muon_LooseRelIso_TightIDandIPCut_SF_,Muon_LooseRelIso_TightIDandIPCut_SF_+bytes/sizeof(Muon_LooseRelIso_TightIDandIPCut_SF_[0]));
        loaded_Muon_LooseRelIso_TightIDandIPCut_SF_ = true;
    }
    return v_Muon_LooseRelIso_TightIDandIPCut_SF_;
}
const vector<float> &Nano::Muon_LooseRelIso_TightIDandIPCut_SFerr() {
    if (!loaded_Muon_LooseRelIso_TightIDandIPCut_SFerr_) counter_uncached_Muon_LooseRelIso_TightIDandIPCut_SFerr_++;
    else counter_cached_Muon_LooseRelIso_TightIDandIPCut_SFerr_++;
    if (!loaded_Muon_LooseRelIso_TightIDandIPCut_SFerr_) {
        if (!b_Muon_LooseRelIso_TightIDandIPCut_SFerr_) throw std::runtime_error("Muon_LooseRelIso_TightIDandIPCut_SFerr branch doesn't exist");
        int bytes = b_Muon_LooseRelIso_TightIDandIPCut_SFerr_->GetEntry(index);
        v_Muon_LooseRelIso_TightIDandIPCut_SFerr_ = vector<float>(Muon_LooseRelIso_TightIDandIPCut_SFerr_,Muon_LooseRelIso_TightIDandIPCut_SFerr_+bytes/sizeof(Muon_LooseRelIso_TightIDandIPCut_SFerr_[0]));
        loaded_Muon_LooseRelIso_TightIDandIPCut_SFerr_ = true;
    }
    return v_Muon_LooseRelIso_TightIDandIPCut_SFerr_;
}
const vector<float> &Nano::Muon_LooseRelTkIso_HighPtIDandIPCut_SF() {
    if (!loaded_Muon_LooseRelTkIso_HighPtIDandIPCut_SF_) counter_uncached_Muon_LooseRelTkIso_HighPtIDandIPCut_SF_++;
    else counter_cached_Muon_LooseRelTkIso_HighPtIDandIPCut_SF_++;
    if (!loaded_Muon_LooseRelTkIso_HighPtIDandIPCut_SF_) {
        if (!b_Muon_LooseRelTkIso_HighPtIDandIPCut_SF_) throw std::runtime_error("Muon_LooseRelTkIso_HighPtIDandIPCut_SF branch doesn't exist");
        int bytes = b_Muon_LooseRelTkIso_HighPtIDandIPCut_SF_->GetEntry(index);
        v_Muon_LooseRelTkIso_HighPtIDandIPCut_SF_ = vector<float>(Muon_LooseRelTkIso_HighPtIDandIPCut_SF_,Muon_LooseRelTkIso_HighPtIDandIPCut_SF_+bytes/sizeof(Muon_LooseRelTkIso_HighPtIDandIPCut_SF_[0]));
        loaded_Muon_LooseRelTkIso_HighPtIDandIPCut_SF_ = true;
    }
    return v_Muon_LooseRelTkIso_HighPtIDandIPCut_SF_;
}
const vector<float> &Nano::Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr() {
    if (!loaded_Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_) counter_uncached_Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_++;
    else counter_cached_Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_++;
    if (!loaded_Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_) {
        if (!b_Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_) throw std::runtime_error("Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr branch doesn't exist");
        int bytes = b_Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_->GetEntry(index);
        v_Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_ = vector<float>(Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_,Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_+bytes/sizeof(Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_[0]));
        loaded_Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_ = true;
    }
    return v_Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr_;
}
const vector<float> &Nano::Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF() {
    if (!loaded_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_) counter_uncached_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_++;
    else counter_cached_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_++;
    if (!loaded_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_) {
        if (!b_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_) throw std::runtime_error("Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF branch doesn't exist");
        int bytes = b_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_->GetEntry(index);
        v_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_ = vector<float>(Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_,Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_+bytes/sizeof(Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_[0]));
        loaded_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_ = true;
    }
    return v_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF_;
}
const vector<float> &Nano::Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr() {
    if (!loaded_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_) counter_uncached_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_++;
    else counter_cached_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_++;
    if (!loaded_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_) {
        if (!b_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_) throw std::runtime_error("Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr branch doesn't exist");
        int bytes = b_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_->GetEntry(index);
        v_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_ = vector<float>(Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_,Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_+bytes/sizeof(Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_[0]));
        loaded_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_ = true;
    }
    return v_Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr_;
}
const vector<float> &Nano::Muon_TightRelIso_MediumID_SF() {
    if (!loaded_Muon_TightRelIso_MediumID_SF_) counter_uncached_Muon_TightRelIso_MediumID_SF_++;
    else counter_cached_Muon_TightRelIso_MediumID_SF_++;
    if (!loaded_Muon_TightRelIso_MediumID_SF_) {
        if (!b_Muon_TightRelIso_MediumID_SF_) throw std::runtime_error("Muon_TightRelIso_MediumID_SF branch doesn't exist");
        int bytes = b_Muon_TightRelIso_MediumID_SF_->GetEntry(index);
        v_Muon_TightRelIso_MediumID_SF_ = vector<float>(Muon_TightRelIso_MediumID_SF_,Muon_TightRelIso_MediumID_SF_+bytes/sizeof(Muon_TightRelIso_MediumID_SF_[0]));
        loaded_Muon_TightRelIso_MediumID_SF_ = true;
    }
    return v_Muon_TightRelIso_MediumID_SF_;
}
const vector<float> &Nano::Muon_TightRelIso_MediumID_SFerr() {
    if (!loaded_Muon_TightRelIso_MediumID_SFerr_) counter_uncached_Muon_TightRelIso_MediumID_SFerr_++;
    else counter_cached_Muon_TightRelIso_MediumID_SFerr_++;
    if (!loaded_Muon_TightRelIso_MediumID_SFerr_) {
        if (!b_Muon_TightRelIso_MediumID_SFerr_) throw std::runtime_error("Muon_TightRelIso_MediumID_SFerr branch doesn't exist");
        int bytes = b_Muon_TightRelIso_MediumID_SFerr_->GetEntry(index);
        v_Muon_TightRelIso_MediumID_SFerr_ = vector<float>(Muon_TightRelIso_MediumID_SFerr_,Muon_TightRelIso_MediumID_SFerr_+bytes/sizeof(Muon_TightRelIso_MediumID_SFerr_[0]));
        loaded_Muon_TightRelIso_MediumID_SFerr_ = true;
    }
    return v_Muon_TightRelIso_MediumID_SFerr_;
}
const vector<float> &Nano::Muon_TightRelIso_MediumPromptID_SF() {
    if (!loaded_Muon_TightRelIso_MediumPromptID_SF_) counter_uncached_Muon_TightRelIso_MediumPromptID_SF_++;
    else counter_cached_Muon_TightRelIso_MediumPromptID_SF_++;
    if (!loaded_Muon_TightRelIso_MediumPromptID_SF_) {
        if (!b_Muon_TightRelIso_MediumPromptID_SF_) throw std::runtime_error("Muon_TightRelIso_MediumPromptID_SF branch doesn't exist");
        int bytes = b_Muon_TightRelIso_MediumPromptID_SF_->GetEntry(index);
        v_Muon_TightRelIso_MediumPromptID_SF_ = vector<float>(Muon_TightRelIso_MediumPromptID_SF_,Muon_TightRelIso_MediumPromptID_SF_+bytes/sizeof(Muon_TightRelIso_MediumPromptID_SF_[0]));
        loaded_Muon_TightRelIso_MediumPromptID_SF_ = true;
    }
    return v_Muon_TightRelIso_MediumPromptID_SF_;
}
const vector<float> &Nano::Muon_TightRelIso_MediumPromptID_SFerr() {
    if (!loaded_Muon_TightRelIso_MediumPromptID_SFerr_) counter_uncached_Muon_TightRelIso_MediumPromptID_SFerr_++;
    else counter_cached_Muon_TightRelIso_MediumPromptID_SFerr_++;
    if (!loaded_Muon_TightRelIso_MediumPromptID_SFerr_) {
        if (!b_Muon_TightRelIso_MediumPromptID_SFerr_) throw std::runtime_error("Muon_TightRelIso_MediumPromptID_SFerr branch doesn't exist");
        int bytes = b_Muon_TightRelIso_MediumPromptID_SFerr_->GetEntry(index);
        v_Muon_TightRelIso_MediumPromptID_SFerr_ = vector<float>(Muon_TightRelIso_MediumPromptID_SFerr_,Muon_TightRelIso_MediumPromptID_SFerr_+bytes/sizeof(Muon_TightRelIso_MediumPromptID_SFerr_[0]));
        loaded_Muon_TightRelIso_MediumPromptID_SFerr_ = true;
    }
    return v_Muon_TightRelIso_MediumPromptID_SFerr_;
}
const vector<float> &Nano::Muon_TightRelIso_TightIDandIPCut_SF() {
    if (!loaded_Muon_TightRelIso_TightIDandIPCut_SF_) counter_uncached_Muon_TightRelIso_TightIDandIPCut_SF_++;
    else counter_cached_Muon_TightRelIso_TightIDandIPCut_SF_++;
    if (!loaded_Muon_TightRelIso_TightIDandIPCut_SF_) {
        if (!b_Muon_TightRelIso_TightIDandIPCut_SF_) throw std::runtime_error("Muon_TightRelIso_TightIDandIPCut_SF branch doesn't exist");
        int bytes = b_Muon_TightRelIso_TightIDandIPCut_SF_->GetEntry(index);
        v_Muon_TightRelIso_TightIDandIPCut_SF_ = vector<float>(Muon_TightRelIso_TightIDandIPCut_SF_,Muon_TightRelIso_TightIDandIPCut_SF_+bytes/sizeof(Muon_TightRelIso_TightIDandIPCut_SF_[0]));
        loaded_Muon_TightRelIso_TightIDandIPCut_SF_ = true;
    }
    return v_Muon_TightRelIso_TightIDandIPCut_SF_;
}
const vector<float> &Nano::Muon_TightRelIso_TightIDandIPCut_SFerr() {
    if (!loaded_Muon_TightRelIso_TightIDandIPCut_SFerr_) counter_uncached_Muon_TightRelIso_TightIDandIPCut_SFerr_++;
    else counter_cached_Muon_TightRelIso_TightIDandIPCut_SFerr_++;
    if (!loaded_Muon_TightRelIso_TightIDandIPCut_SFerr_) {
        if (!b_Muon_TightRelIso_TightIDandIPCut_SFerr_) throw std::runtime_error("Muon_TightRelIso_TightIDandIPCut_SFerr branch doesn't exist");
        int bytes = b_Muon_TightRelIso_TightIDandIPCut_SFerr_->GetEntry(index);
        v_Muon_TightRelIso_TightIDandIPCut_SFerr_ = vector<float>(Muon_TightRelIso_TightIDandIPCut_SFerr_,Muon_TightRelIso_TightIDandIPCut_SFerr_+bytes/sizeof(Muon_TightRelIso_TightIDandIPCut_SFerr_[0]));
        loaded_Muon_TightRelIso_TightIDandIPCut_SFerr_ = true;
    }
    return v_Muon_TightRelIso_TightIDandIPCut_SFerr_;
}
const vector<float> &Nano::Muon_TightRelTkIso_HighPtIDandIPCut_SF() {
    if (!loaded_Muon_TightRelTkIso_HighPtIDandIPCut_SF_) counter_uncached_Muon_TightRelTkIso_HighPtIDandIPCut_SF_++;
    else counter_cached_Muon_TightRelTkIso_HighPtIDandIPCut_SF_++;
    if (!loaded_Muon_TightRelTkIso_HighPtIDandIPCut_SF_) {
        if (!b_Muon_TightRelTkIso_HighPtIDandIPCut_SF_) throw std::runtime_error("Muon_TightRelTkIso_HighPtIDandIPCut_SF branch doesn't exist");
        int bytes = b_Muon_TightRelTkIso_HighPtIDandIPCut_SF_->GetEntry(index);
        v_Muon_TightRelTkIso_HighPtIDandIPCut_SF_ = vector<float>(Muon_TightRelTkIso_HighPtIDandIPCut_SF_,Muon_TightRelTkIso_HighPtIDandIPCut_SF_+bytes/sizeof(Muon_TightRelTkIso_HighPtIDandIPCut_SF_[0]));
        loaded_Muon_TightRelTkIso_HighPtIDandIPCut_SF_ = true;
    }
    return v_Muon_TightRelTkIso_HighPtIDandIPCut_SF_;
}
const vector<float> &Nano::Muon_TightRelTkIso_HighPtIDandIPCut_SFerr() {
    if (!loaded_Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_) counter_uncached_Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_++;
    else counter_cached_Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_++;
    if (!loaded_Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_) {
        if (!b_Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_) throw std::runtime_error("Muon_TightRelTkIso_HighPtIDandIPCut_SFerr branch doesn't exist");
        int bytes = b_Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_->GetEntry(index);
        v_Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_ = vector<float>(Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_,Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_+bytes/sizeof(Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_[0]));
        loaded_Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_ = true;
    }
    return v_Muon_TightRelTkIso_HighPtIDandIPCut_SFerr_;
}
const vector<float> &Nano::Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF() {
    if (!loaded_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_) counter_uncached_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_++;
    else counter_cached_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_++;
    if (!loaded_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_) {
        if (!b_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_) throw std::runtime_error("Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF branch doesn't exist");
        int bytes = b_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_->GetEntry(index);
        v_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_ = vector<float>(Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_,Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_+bytes/sizeof(Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_[0]));
        loaded_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_ = true;
    }
    return v_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF_;
}
const vector<float> &Nano::Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr() {
    if (!loaded_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_) counter_uncached_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_++;
    else counter_cached_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_++;
    if (!loaded_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_) {
        if (!b_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_) throw std::runtime_error("Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr branch doesn't exist");
        int bytes = b_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_->GetEntry(index);
        v_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_ = vector<float>(Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_,Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_+bytes/sizeof(Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_[0]));
        loaded_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_ = true;
    }
    return v_Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr_;
}
const vector<int> &Nano::Muon_charge() {
    if (!loaded_Muon_charge_) counter_uncached_Muon_charge_++;
    else counter_cached_Muon_charge_++;
    if (!loaded_Muon_charge_) {
        if (!b_Muon_charge_) throw std::runtime_error("Muon_charge branch doesn't exist");
        int bytes = b_Muon_charge_->GetEntry(index);
        v_Muon_charge_ = vector<int>(Muon_charge_,Muon_charge_+bytes/sizeof(Muon_charge_[0]));
        loaded_Muon_charge_ = true;
    }
    return v_Muon_charge_;
}
const vector<UChar_t> &Nano::Muon_cleanmask() {
    if (!loaded_Muon_cleanmask_) counter_uncached_Muon_cleanmask_++;
    else counter_cached_Muon_cleanmask_++;
    if (!loaded_Muon_cleanmask_) {
        if (!b_Muon_cleanmask_) throw std::runtime_error("Muon_cleanmask branch doesn't exist");
        int bytes = b_Muon_cleanmask_->GetEntry(index);
        v_Muon_cleanmask_ = vector<UChar_t>(Muon_cleanmask_,Muon_cleanmask_+bytes/sizeof(Muon_cleanmask_[0]));
        loaded_Muon_cleanmask_ = true;
    }
    return v_Muon_cleanmask_;
}
const vector<float> &Nano::Muon_correctedDown_pt() {
    if (!loaded_Muon_correctedDown_pt_) counter_uncached_Muon_correctedDown_pt_++;
    else counter_cached_Muon_correctedDown_pt_++;
    if (!loaded_Muon_correctedDown_pt_) {
        if (!b_Muon_correctedDown_pt_) throw std::runtime_error("Muon_correctedDown_pt branch doesn't exist");
        int bytes = b_Muon_correctedDown_pt_->GetEntry(index);
        v_Muon_correctedDown_pt_ = vector<float>(Muon_correctedDown_pt_,Muon_correctedDown_pt_+bytes/sizeof(Muon_correctedDown_pt_[0]));
        loaded_Muon_correctedDown_pt_ = true;
    }
    return v_Muon_correctedDown_pt_;
}
const vector<float> &Nano::Muon_correctedUp_pt() {
    if (!loaded_Muon_correctedUp_pt_) counter_uncached_Muon_correctedUp_pt_++;
    else counter_cached_Muon_correctedUp_pt_++;
    if (!loaded_Muon_correctedUp_pt_) {
        if (!b_Muon_correctedUp_pt_) throw std::runtime_error("Muon_correctedUp_pt branch doesn't exist");
        int bytes = b_Muon_correctedUp_pt_->GetEntry(index);
        v_Muon_correctedUp_pt_ = vector<float>(Muon_correctedUp_pt_,Muon_correctedUp_pt_+bytes/sizeof(Muon_correctedUp_pt_[0]));
        loaded_Muon_correctedUp_pt_ = true;
    }
    return v_Muon_correctedUp_pt_;
}
const vector<float> &Nano::Muon_corrected_pt() {
    if (!loaded_Muon_corrected_pt_) counter_uncached_Muon_corrected_pt_++;
    else counter_cached_Muon_corrected_pt_++;
    if (!loaded_Muon_corrected_pt_) {
        if (!b_Muon_corrected_pt_) throw std::runtime_error("Muon_corrected_pt branch doesn't exist");
        int bytes = b_Muon_corrected_pt_->GetEntry(index);
        v_Muon_corrected_pt_ = vector<float>(Muon_corrected_pt_,Muon_corrected_pt_+bytes/sizeof(Muon_corrected_pt_[0]));
        loaded_Muon_corrected_pt_ = true;
    }
    return v_Muon_corrected_pt_;
}
const vector<float> &Nano::Muon_dxy() {
    if (!loaded_Muon_dxy_) counter_uncached_Muon_dxy_++;
    else counter_cached_Muon_dxy_++;
    if (!loaded_Muon_dxy_) {
        if (!b_Muon_dxy_) throw std::runtime_error("Muon_dxy branch doesn't exist");
        int bytes = b_Muon_dxy_->GetEntry(index);
        v_Muon_dxy_ = vector<float>(Muon_dxy_,Muon_dxy_+bytes/sizeof(Muon_dxy_[0]));
        loaded_Muon_dxy_ = true;
    }
    return v_Muon_dxy_;
}
const vector<float> &Nano::Muon_dxyErr() {
    if (!loaded_Muon_dxyErr_) counter_uncached_Muon_dxyErr_++;
    else counter_cached_Muon_dxyErr_++;
    if (!loaded_Muon_dxyErr_) {
        if (!b_Muon_dxyErr_) throw std::runtime_error("Muon_dxyErr branch doesn't exist");
        int bytes = b_Muon_dxyErr_->GetEntry(index);
        v_Muon_dxyErr_ = vector<float>(Muon_dxyErr_,Muon_dxyErr_+bytes/sizeof(Muon_dxyErr_[0]));
        loaded_Muon_dxyErr_ = true;
    }
    return v_Muon_dxyErr_;
}
const vector<float> &Nano::Muon_dxybs() {
    if (!loaded_Muon_dxybs_) counter_uncached_Muon_dxybs_++;
    else counter_cached_Muon_dxybs_++;
    if (!loaded_Muon_dxybs_) {
        if (!b_Muon_dxybs_) throw std::runtime_error("Muon_dxybs branch doesn't exist");
        int bytes = b_Muon_dxybs_->GetEntry(index);
        v_Muon_dxybs_ = vector<float>(Muon_dxybs_,Muon_dxybs_+bytes/sizeof(Muon_dxybs_[0]));
        loaded_Muon_dxybs_ = true;
    }
    return v_Muon_dxybs_;
}
const vector<float> &Nano::Muon_dz() {
    if (!loaded_Muon_dz_) counter_uncached_Muon_dz_++;
    else counter_cached_Muon_dz_++;
    if (!loaded_Muon_dz_) {
        if (!b_Muon_dz_) throw std::runtime_error("Muon_dz branch doesn't exist");
        int bytes = b_Muon_dz_->GetEntry(index);
        v_Muon_dz_ = vector<float>(Muon_dz_,Muon_dz_+bytes/sizeof(Muon_dz_[0]));
        loaded_Muon_dz_ = true;
    }
    return v_Muon_dz_;
}
const vector<float> &Nano::Muon_dzErr() {
    if (!loaded_Muon_dzErr_) counter_uncached_Muon_dzErr_++;
    else counter_cached_Muon_dzErr_++;
    if (!loaded_Muon_dzErr_) {
        if (!b_Muon_dzErr_) throw std::runtime_error("Muon_dzErr branch doesn't exist");
        int bytes = b_Muon_dzErr_->GetEntry(index);
        v_Muon_dzErr_ = vector<float>(Muon_dzErr_,Muon_dzErr_+bytes/sizeof(Muon_dzErr_[0]));
        loaded_Muon_dzErr_ = true;
    }
    return v_Muon_dzErr_;
}
const vector<float> &Nano::Muon_eta() {
    if (!loaded_Muon_eta_) counter_uncached_Muon_eta_++;
    else counter_cached_Muon_eta_++;
    if (!loaded_Muon_eta_) {
        if (!b_Muon_eta_) throw std::runtime_error("Muon_eta branch doesn't exist");
        int bytes = b_Muon_eta_->GetEntry(index);
        v_Muon_eta_ = vector<float>(Muon_eta_,Muon_eta_+bytes/sizeof(Muon_eta_[0]));
        loaded_Muon_eta_ = true;
    }
    return v_Muon_eta_;
}
const vector<int> &Nano::Muon_fsrPhotonIdx() {
    if (!loaded_Muon_fsrPhotonIdx_) counter_uncached_Muon_fsrPhotonIdx_++;
    else counter_cached_Muon_fsrPhotonIdx_++;
    if (!loaded_Muon_fsrPhotonIdx_) {
        if (!b_Muon_fsrPhotonIdx_) throw std::runtime_error("Muon_fsrPhotonIdx branch doesn't exist");
        int bytes = b_Muon_fsrPhotonIdx_->GetEntry(index);
        v_Muon_fsrPhotonIdx_ = vector<int>(Muon_fsrPhotonIdx_,Muon_fsrPhotonIdx_+bytes/sizeof(Muon_fsrPhotonIdx_[0]));
        loaded_Muon_fsrPhotonIdx_ = true;
    }
    return v_Muon_fsrPhotonIdx_;
}
const vector<UChar_t> &Nano::Muon_genPartFlav() {
    if (!loaded_Muon_genPartFlav_) counter_uncached_Muon_genPartFlav_++;
    else counter_cached_Muon_genPartFlav_++;
    if (!loaded_Muon_genPartFlav_) {
        if (!b_Muon_genPartFlav_) throw std::runtime_error("Muon_genPartFlav branch doesn't exist");
        int bytes = b_Muon_genPartFlav_->GetEntry(index);
        v_Muon_genPartFlav_ = vector<UChar_t>(Muon_genPartFlav_,Muon_genPartFlav_+bytes/sizeof(Muon_genPartFlav_[0]));
        loaded_Muon_genPartFlav_ = true;
    }
    return v_Muon_genPartFlav_;
}
const vector<int> &Nano::Muon_genPartIdx() {
    if (!loaded_Muon_genPartIdx_) counter_uncached_Muon_genPartIdx_++;
    else counter_cached_Muon_genPartIdx_++;
    if (!loaded_Muon_genPartIdx_) {
        if (!b_Muon_genPartIdx_) throw std::runtime_error("Muon_genPartIdx branch doesn't exist");
        int bytes = b_Muon_genPartIdx_->GetEntry(index);
        v_Muon_genPartIdx_ = vector<int>(Muon_genPartIdx_,Muon_genPartIdx_+bytes/sizeof(Muon_genPartIdx_[0]));
        loaded_Muon_genPartIdx_ = true;
    }
    return v_Muon_genPartIdx_;
}
const vector<UChar_t> &Nano::Muon_highPtId() {
    if (!loaded_Muon_highPtId_) counter_uncached_Muon_highPtId_++;
    else counter_cached_Muon_highPtId_++;
    if (!loaded_Muon_highPtId_) {
        if (!b_Muon_highPtId_) throw std::runtime_error("Muon_highPtId branch doesn't exist");
        int bytes = b_Muon_highPtId_->GetEntry(index);
        v_Muon_highPtId_ = vector<UChar_t>(Muon_highPtId_,Muon_highPtId_+bytes/sizeof(Muon_highPtId_[0]));
        loaded_Muon_highPtId_ = true;
    }
    return v_Muon_highPtId_;
}
const vector<bool> &Nano::Muon_highPurity() {
    if (!loaded_Muon_highPurity_) counter_uncached_Muon_highPurity_++;
    else counter_cached_Muon_highPurity_++;
    if (!loaded_Muon_highPurity_) {
        if (!b_Muon_highPurity_) throw std::runtime_error("Muon_highPurity branch doesn't exist");
        int bytes = b_Muon_highPurity_->GetEntry(index);
        v_Muon_highPurity_ = vector<bool>(Muon_highPurity_,Muon_highPurity_+bytes/sizeof(Muon_highPurity_[0]));
        loaded_Muon_highPurity_ = true;
    }
    return v_Muon_highPurity_;
}
const vector<bool> &Nano::Muon_inTimeMuon() {
    if (!loaded_Muon_inTimeMuon_) counter_uncached_Muon_inTimeMuon_++;
    else counter_cached_Muon_inTimeMuon_++;
    if (!loaded_Muon_inTimeMuon_) {
        if (!b_Muon_inTimeMuon_) throw std::runtime_error("Muon_inTimeMuon branch doesn't exist");
        int bytes = b_Muon_inTimeMuon_->GetEntry(index);
        v_Muon_inTimeMuon_ = vector<bool>(Muon_inTimeMuon_,Muon_inTimeMuon_+bytes/sizeof(Muon_inTimeMuon_[0]));
        loaded_Muon_inTimeMuon_ = true;
    }
    return v_Muon_inTimeMuon_;
}
const vector<float> &Nano::Muon_ip3d() {
    if (!loaded_Muon_ip3d_) counter_uncached_Muon_ip3d_++;
    else counter_cached_Muon_ip3d_++;
    if (!loaded_Muon_ip3d_) {
        if (!b_Muon_ip3d_) throw std::runtime_error("Muon_ip3d branch doesn't exist");
        int bytes = b_Muon_ip3d_->GetEntry(index);
        v_Muon_ip3d_ = vector<float>(Muon_ip3d_,Muon_ip3d_+bytes/sizeof(Muon_ip3d_[0]));
        loaded_Muon_ip3d_ = true;
    }
    return v_Muon_ip3d_;
}
const vector<bool> &Nano::Muon_isGlobal() {
    if (!loaded_Muon_isGlobal_) counter_uncached_Muon_isGlobal_++;
    else counter_cached_Muon_isGlobal_++;
    if (!loaded_Muon_isGlobal_) {
        if (!b_Muon_isGlobal_) throw std::runtime_error("Muon_isGlobal branch doesn't exist");
        int bytes = b_Muon_isGlobal_->GetEntry(index);
        v_Muon_isGlobal_ = vector<bool>(Muon_isGlobal_,Muon_isGlobal_+bytes/sizeof(Muon_isGlobal_[0]));
        loaded_Muon_isGlobal_ = true;
    }
    return v_Muon_isGlobal_;
}
const vector<bool> &Nano::Muon_isPFcand() {
    if (!loaded_Muon_isPFcand_) counter_uncached_Muon_isPFcand_++;
    else counter_cached_Muon_isPFcand_++;
    if (!loaded_Muon_isPFcand_) {
        if (!b_Muon_isPFcand_) throw std::runtime_error("Muon_isPFcand branch doesn't exist");
        int bytes = b_Muon_isPFcand_->GetEntry(index);
        v_Muon_isPFcand_ = vector<bool>(Muon_isPFcand_,Muon_isPFcand_+bytes/sizeof(Muon_isPFcand_[0]));
        loaded_Muon_isPFcand_ = true;
    }
    return v_Muon_isPFcand_;
}
const vector<bool> &Nano::Muon_isStandalone() {
    if (!loaded_Muon_isStandalone_) counter_uncached_Muon_isStandalone_++;
    else counter_cached_Muon_isStandalone_++;
    if (!loaded_Muon_isStandalone_) {
        if (!b_Muon_isStandalone_) throw std::runtime_error("Muon_isStandalone branch doesn't exist");
        int bytes = b_Muon_isStandalone_->GetEntry(index);
        v_Muon_isStandalone_ = vector<bool>(Muon_isStandalone_,Muon_isStandalone_+bytes/sizeof(Muon_isStandalone_[0]));
        loaded_Muon_isStandalone_ = true;
    }
    return v_Muon_isStandalone_;
}
const vector<bool> &Nano::Muon_isTracker() {
    if (!loaded_Muon_isTracker_) counter_uncached_Muon_isTracker_++;
    else counter_cached_Muon_isTracker_++;
    if (!loaded_Muon_isTracker_) {
        if (!b_Muon_isTracker_) throw std::runtime_error("Muon_isTracker branch doesn't exist");
        int bytes = b_Muon_isTracker_->GetEntry(index);
        v_Muon_isTracker_ = vector<bool>(Muon_isTracker_,Muon_isTracker_+bytes/sizeof(Muon_isTracker_[0]));
        loaded_Muon_isTracker_ = true;
    }
    return v_Muon_isTracker_;
}
const vector<int> &Nano::Muon_jetIdx() {
    if (!loaded_Muon_jetIdx_) counter_uncached_Muon_jetIdx_++;
    else counter_cached_Muon_jetIdx_++;
    if (!loaded_Muon_jetIdx_) {
        if (!b_Muon_jetIdx_) throw std::runtime_error("Muon_jetIdx branch doesn't exist");
        int bytes = b_Muon_jetIdx_->GetEntry(index);
        v_Muon_jetIdx_ = vector<int>(Muon_jetIdx_,Muon_jetIdx_+bytes/sizeof(Muon_jetIdx_[0]));
        loaded_Muon_jetIdx_ = true;
    }
    return v_Muon_jetIdx_;
}
const vector<UChar_t> &Nano::Muon_jetNDauCharged() {
    if (!loaded_Muon_jetNDauCharged_) counter_uncached_Muon_jetNDauCharged_++;
    else counter_cached_Muon_jetNDauCharged_++;
    if (!loaded_Muon_jetNDauCharged_) {
        if (!b_Muon_jetNDauCharged_) throw std::runtime_error("Muon_jetNDauCharged branch doesn't exist");
        int bytes = b_Muon_jetNDauCharged_->GetEntry(index);
        v_Muon_jetNDauCharged_ = vector<UChar_t>(Muon_jetNDauCharged_,Muon_jetNDauCharged_+bytes/sizeof(Muon_jetNDauCharged_[0]));
        loaded_Muon_jetNDauCharged_ = true;
    }
    return v_Muon_jetNDauCharged_;
}
const vector<float> &Nano::Muon_jetPtRelv2() {
    if (!loaded_Muon_jetPtRelv2_) counter_uncached_Muon_jetPtRelv2_++;
    else counter_cached_Muon_jetPtRelv2_++;
    if (!loaded_Muon_jetPtRelv2_) {
        if (!b_Muon_jetPtRelv2_) throw std::runtime_error("Muon_jetPtRelv2 branch doesn't exist");
        int bytes = b_Muon_jetPtRelv2_->GetEntry(index);
        v_Muon_jetPtRelv2_ = vector<float>(Muon_jetPtRelv2_,Muon_jetPtRelv2_+bytes/sizeof(Muon_jetPtRelv2_[0]));
        loaded_Muon_jetPtRelv2_ = true;
    }
    return v_Muon_jetPtRelv2_;
}
const vector<float> &Nano::Muon_jetRelIso() {
    if (!loaded_Muon_jetRelIso_) counter_uncached_Muon_jetRelIso_++;
    else counter_cached_Muon_jetRelIso_++;
    if (!loaded_Muon_jetRelIso_) {
        if (!b_Muon_jetRelIso_) throw std::runtime_error("Muon_jetRelIso branch doesn't exist");
        int bytes = b_Muon_jetRelIso_->GetEntry(index);
        v_Muon_jetRelIso_ = vector<float>(Muon_jetRelIso_,Muon_jetRelIso_+bytes/sizeof(Muon_jetRelIso_[0]));
        loaded_Muon_jetRelIso_ = true;
    }
    return v_Muon_jetRelIso_;
}
const vector<bool> &Nano::Muon_looseId() {
    if (!loaded_Muon_looseId_) counter_uncached_Muon_looseId_++;
    else counter_cached_Muon_looseId_++;
    if (!loaded_Muon_looseId_) {
        if (!b_Muon_looseId_) throw std::runtime_error("Muon_looseId branch doesn't exist");
        int bytes = b_Muon_looseId_->GetEntry(index);
        v_Muon_looseId_ = vector<bool>(Muon_looseId_,Muon_looseId_+bytes/sizeof(Muon_looseId_[0]));
        loaded_Muon_looseId_ = true;
    }
    return v_Muon_looseId_;
}
const vector<float> &Nano::Muon_mass() {
    if (!loaded_Muon_mass_) counter_uncached_Muon_mass_++;
    else counter_cached_Muon_mass_++;
    if (!loaded_Muon_mass_) {
        if (!b_Muon_mass_) throw std::runtime_error("Muon_mass branch doesn't exist");
        int bytes = b_Muon_mass_->GetEntry(index);
        v_Muon_mass_ = vector<float>(Muon_mass_,Muon_mass_+bytes/sizeof(Muon_mass_[0]));
        loaded_Muon_mass_ = true;
    }
    return v_Muon_mass_;
}
const vector<bool> &Nano::Muon_mediumId() {
    if (!loaded_Muon_mediumId_) counter_uncached_Muon_mediumId_++;
    else counter_cached_Muon_mediumId_++;
    if (!loaded_Muon_mediumId_) {
        if (!b_Muon_mediumId_) throw std::runtime_error("Muon_mediumId branch doesn't exist");
        int bytes = b_Muon_mediumId_->GetEntry(index);
        v_Muon_mediumId_ = vector<bool>(Muon_mediumId_,Muon_mediumId_+bytes/sizeof(Muon_mediumId_[0]));
        loaded_Muon_mediumId_ = true;
    }
    return v_Muon_mediumId_;
}
const vector<bool> &Nano::Muon_mediumPromptId() {
    if (!loaded_Muon_mediumPromptId_) counter_uncached_Muon_mediumPromptId_++;
    else counter_cached_Muon_mediumPromptId_++;
    if (!loaded_Muon_mediumPromptId_) {
        if (!b_Muon_mediumPromptId_) throw std::runtime_error("Muon_mediumPromptId branch doesn't exist");
        int bytes = b_Muon_mediumPromptId_->GetEntry(index);
        v_Muon_mediumPromptId_ = vector<bool>(Muon_mediumPromptId_,Muon_mediumPromptId_+bytes/sizeof(Muon_mediumPromptId_[0]));
        loaded_Muon_mediumPromptId_ = true;
    }
    return v_Muon_mediumPromptId_;
}
const vector<UChar_t> &Nano::Muon_miniIsoId() {
    if (!loaded_Muon_miniIsoId_) counter_uncached_Muon_miniIsoId_++;
    else counter_cached_Muon_miniIsoId_++;
    if (!loaded_Muon_miniIsoId_) {
        if (!b_Muon_miniIsoId_) throw std::runtime_error("Muon_miniIsoId branch doesn't exist");
        int bytes = b_Muon_miniIsoId_->GetEntry(index);
        v_Muon_miniIsoId_ = vector<UChar_t>(Muon_miniIsoId_,Muon_miniIsoId_+bytes/sizeof(Muon_miniIsoId_[0]));
        loaded_Muon_miniIsoId_ = true;
    }
    return v_Muon_miniIsoId_;
}
const vector<float> &Nano::Muon_miniPFRelIso_all() {
    if (!loaded_Muon_miniPFRelIso_all_) counter_uncached_Muon_miniPFRelIso_all_++;
    else counter_cached_Muon_miniPFRelIso_all_++;
    if (!loaded_Muon_miniPFRelIso_all_) {
        if (!b_Muon_miniPFRelIso_all_) throw std::runtime_error("Muon_miniPFRelIso_all branch doesn't exist");
        int bytes = b_Muon_miniPFRelIso_all_->GetEntry(index);
        v_Muon_miniPFRelIso_all_ = vector<float>(Muon_miniPFRelIso_all_,Muon_miniPFRelIso_all_+bytes/sizeof(Muon_miniPFRelIso_all_[0]));
        loaded_Muon_miniPFRelIso_all_ = true;
    }
    return v_Muon_miniPFRelIso_all_;
}
const vector<float> &Nano::Muon_miniPFRelIso_chg() {
    if (!loaded_Muon_miniPFRelIso_chg_) counter_uncached_Muon_miniPFRelIso_chg_++;
    else counter_cached_Muon_miniPFRelIso_chg_++;
    if (!loaded_Muon_miniPFRelIso_chg_) {
        if (!b_Muon_miniPFRelIso_chg_) throw std::runtime_error("Muon_miniPFRelIso_chg branch doesn't exist");
        int bytes = b_Muon_miniPFRelIso_chg_->GetEntry(index);
        v_Muon_miniPFRelIso_chg_ = vector<float>(Muon_miniPFRelIso_chg_,Muon_miniPFRelIso_chg_+bytes/sizeof(Muon_miniPFRelIso_chg_[0]));
        loaded_Muon_miniPFRelIso_chg_ = true;
    }
    return v_Muon_miniPFRelIso_chg_;
}
const vector<UChar_t> &Nano::Muon_multiIsoId() {
    if (!loaded_Muon_multiIsoId_) counter_uncached_Muon_multiIsoId_++;
    else counter_cached_Muon_multiIsoId_++;
    if (!loaded_Muon_multiIsoId_) {
        if (!b_Muon_multiIsoId_) throw std::runtime_error("Muon_multiIsoId branch doesn't exist");
        int bytes = b_Muon_multiIsoId_->GetEntry(index);
        v_Muon_multiIsoId_ = vector<UChar_t>(Muon_multiIsoId_,Muon_multiIsoId_+bytes/sizeof(Muon_multiIsoId_[0]));
        loaded_Muon_multiIsoId_ = true;
    }
    return v_Muon_multiIsoId_;
}
const vector<UChar_t> &Nano::Muon_mvaId() {
    if (!loaded_Muon_mvaId_) counter_uncached_Muon_mvaId_++;
    else counter_cached_Muon_mvaId_++;
    if (!loaded_Muon_mvaId_) {
        if (!b_Muon_mvaId_) throw std::runtime_error("Muon_mvaId branch doesn't exist");
        int bytes = b_Muon_mvaId_->GetEntry(index);
        v_Muon_mvaId_ = vector<UChar_t>(Muon_mvaId_,Muon_mvaId_+bytes/sizeof(Muon_mvaId_[0]));
        loaded_Muon_mvaId_ = true;
    }
    return v_Muon_mvaId_;
}
const vector<float> &Nano::Muon_mvaLowPt() {
    if (!loaded_Muon_mvaLowPt_) counter_uncached_Muon_mvaLowPt_++;
    else counter_cached_Muon_mvaLowPt_++;
    if (!loaded_Muon_mvaLowPt_) {
        if (!b_Muon_mvaLowPt_) throw std::runtime_error("Muon_mvaLowPt branch doesn't exist");
        int bytes = b_Muon_mvaLowPt_->GetEntry(index);
        v_Muon_mvaLowPt_ = vector<float>(Muon_mvaLowPt_,Muon_mvaLowPt_+bytes/sizeof(Muon_mvaLowPt_[0]));
        loaded_Muon_mvaLowPt_ = true;
    }
    return v_Muon_mvaLowPt_;
}
const vector<UChar_t> &Nano::Muon_mvaLowPtId() {
    if (!loaded_Muon_mvaLowPtId_) counter_uncached_Muon_mvaLowPtId_++;
    else counter_cached_Muon_mvaLowPtId_++;
    if (!loaded_Muon_mvaLowPtId_) {
        if (!b_Muon_mvaLowPtId_) throw std::runtime_error("Muon_mvaLowPtId branch doesn't exist");
        int bytes = b_Muon_mvaLowPtId_->GetEntry(index);
        v_Muon_mvaLowPtId_ = vector<UChar_t>(Muon_mvaLowPtId_,Muon_mvaLowPtId_+bytes/sizeof(Muon_mvaLowPtId_[0]));
        loaded_Muon_mvaLowPtId_ = true;
    }
    return v_Muon_mvaLowPtId_;
}
const vector<float> &Nano::Muon_mvaMuID() {
    if (!loaded_Muon_mvaMuID_) counter_uncached_Muon_mvaMuID_++;
    else counter_cached_Muon_mvaMuID_++;
    if (!loaded_Muon_mvaMuID_) {
        if (!b_Muon_mvaMuID_) throw std::runtime_error("Muon_mvaMuID branch doesn't exist");
        int bytes = b_Muon_mvaMuID_->GetEntry(index);
        v_Muon_mvaMuID_ = vector<float>(Muon_mvaMuID_,Muon_mvaMuID_+bytes/sizeof(Muon_mvaMuID_[0]));
        loaded_Muon_mvaMuID_ = true;
    }
    return v_Muon_mvaMuID_;
}
const vector<UChar_t> &Nano::Muon_mvaMuID_WP() {
    if (!loaded_Muon_mvaMuID_WP_) counter_uncached_Muon_mvaMuID_WP_++;
    else counter_cached_Muon_mvaMuID_WP_++;
    if (!loaded_Muon_mvaMuID_WP_) {
        if (!b_Muon_mvaMuID_WP_) throw std::runtime_error("Muon_mvaMuID_WP branch doesn't exist");
        int bytes = b_Muon_mvaMuID_WP_->GetEntry(index);
        v_Muon_mvaMuID_WP_ = vector<UChar_t>(Muon_mvaMuID_WP_,Muon_mvaMuID_WP_+bytes/sizeof(Muon_mvaMuID_WP_[0]));
        loaded_Muon_mvaMuID_WP_ = true;
    }
    return v_Muon_mvaMuID_WP_;
}
const vector<float> &Nano::Muon_mvaTTH() {
    if (!loaded_Muon_mvaTTH_) counter_uncached_Muon_mvaTTH_++;
    else counter_cached_Muon_mvaTTH_++;
    if (!loaded_Muon_mvaTTH_) {
        if (!b_Muon_mvaTTH_) throw std::runtime_error("Muon_mvaTTH branch doesn't exist");
        int bytes = b_Muon_mvaTTH_->GetEntry(index);
        v_Muon_mvaTTH_ = vector<float>(Muon_mvaTTH_,Muon_mvaTTH_+bytes/sizeof(Muon_mvaTTH_[0]));
        loaded_Muon_mvaTTH_ = true;
    }
    return v_Muon_mvaTTH_;
}
// NOTE: this is a custom branch; temporarily added for convenience
const vector<float> &Nano::Muon_mvaTTHUL() {
    if (!loaded_Muon_mvaTTHUL_) counter_uncached_Muon_mvaTTHUL_++;
    else counter_cached_Muon_mvaTTHUL_++;
    if (!loaded_Muon_mvaTTHUL_) {
        if (!b_Muon_mvaTTHUL_) throw std::runtime_error("Muon_mvaTTHUL branch doesn't exist");
        int bytes = b_Muon_mvaTTHUL_->GetEntry(index);
        v_Muon_mvaTTHUL_ = vector<float>(Muon_mvaTTHUL_,Muon_mvaTTHUL_+bytes/sizeof(Muon_mvaTTHUL_[0]));
        loaded_Muon_mvaTTHUL_ = true;
    }
    return v_Muon_mvaTTHUL_;
}
//
const vector<int> &Nano::Muon_nStations() {
    if (!loaded_Muon_nStations_) counter_uncached_Muon_nStations_++;
    else counter_cached_Muon_nStations_++;
    if (!loaded_Muon_nStations_) {
        if (!b_Muon_nStations_) throw std::runtime_error("Muon_nStations branch doesn't exist");
        int bytes = b_Muon_nStations_->GetEntry(index);
        v_Muon_nStations_ = vector<int>(Muon_nStations_,Muon_nStations_+bytes/sizeof(Muon_nStations_[0]));
        loaded_Muon_nStations_ = true;
    }
    return v_Muon_nStations_;
}
const vector<int> &Nano::Muon_nTrackerLayers() {
    if (!loaded_Muon_nTrackerLayers_) counter_uncached_Muon_nTrackerLayers_++;
    else counter_cached_Muon_nTrackerLayers_++;
    if (!loaded_Muon_nTrackerLayers_) {
        if (!b_Muon_nTrackerLayers_) throw std::runtime_error("Muon_nTrackerLayers branch doesn't exist");
        int bytes = b_Muon_nTrackerLayers_->GetEntry(index);
        v_Muon_nTrackerLayers_ = vector<int>(Muon_nTrackerLayers_,Muon_nTrackerLayers_+bytes/sizeof(Muon_nTrackerLayers_[0]));
        loaded_Muon_nTrackerLayers_ = true;
    }
    return v_Muon_nTrackerLayers_;
}
const vector<LorentzVector> &Nano::Muon_p4() {
    if (!loaded_Muon_p4_) counter_uncached_Muon_p4_++;
    else counter_cached_Muon_p4_++;
    if (!loaded_Muon_p4_) {
        v_Muon_p4_.clear();
        vector<float> pts = Nano::Muon_pt();
        vector<float> etas = Nano::Muon_eta();
        vector<float> phis = Nano::Muon_phi();
        vector<float> masses = Nano::Muon_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_Muon_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_Muon_p4_ = true;
    }
    return v_Muon_p4_;
}
const vector<int> &Nano::Muon_pdgId() {
    if (!loaded_Muon_pdgId_) counter_uncached_Muon_pdgId_++;
    else counter_cached_Muon_pdgId_++;
    if (!loaded_Muon_pdgId_) {
        if (!b_Muon_pdgId_) throw std::runtime_error("Muon_pdgId branch doesn't exist");
        int bytes = b_Muon_pdgId_->GetEntry(index);
        v_Muon_pdgId_ = vector<int>(Muon_pdgId_,Muon_pdgId_+bytes/sizeof(Muon_pdgId_[0]));
        loaded_Muon_pdgId_ = true;
    }
    return v_Muon_pdgId_;
}
const vector<UChar_t> &Nano::Muon_pfIsoId() {
    if (!loaded_Muon_pfIsoId_) counter_uncached_Muon_pfIsoId_++;
    else counter_cached_Muon_pfIsoId_++;
    if (!loaded_Muon_pfIsoId_) {
        if (!b_Muon_pfIsoId_) throw std::runtime_error("Muon_pfIsoId branch doesn't exist");
        int bytes = b_Muon_pfIsoId_->GetEntry(index);
        v_Muon_pfIsoId_ = vector<UChar_t>(Muon_pfIsoId_,Muon_pfIsoId_+bytes/sizeof(Muon_pfIsoId_[0]));
        loaded_Muon_pfIsoId_ = true;
    }
    return v_Muon_pfIsoId_;
}
const vector<float> &Nano::Muon_pfRelIso03_all() {
    if (!loaded_Muon_pfRelIso03_all_) counter_uncached_Muon_pfRelIso03_all_++;
    else counter_cached_Muon_pfRelIso03_all_++;
    if (!loaded_Muon_pfRelIso03_all_) {
        if (!b_Muon_pfRelIso03_all_) throw std::runtime_error("Muon_pfRelIso03_all branch doesn't exist");
        int bytes = b_Muon_pfRelIso03_all_->GetEntry(index);
        v_Muon_pfRelIso03_all_ = vector<float>(Muon_pfRelIso03_all_,Muon_pfRelIso03_all_+bytes/sizeof(Muon_pfRelIso03_all_[0]));
        loaded_Muon_pfRelIso03_all_ = true;
    }
    return v_Muon_pfRelIso03_all_;
}
const vector<float> &Nano::Muon_pfRelIso03_chg() {
    if (!loaded_Muon_pfRelIso03_chg_) counter_uncached_Muon_pfRelIso03_chg_++;
    else counter_cached_Muon_pfRelIso03_chg_++;
    if (!loaded_Muon_pfRelIso03_chg_) {
        if (!b_Muon_pfRelIso03_chg_) throw std::runtime_error("Muon_pfRelIso03_chg branch doesn't exist");
        int bytes = b_Muon_pfRelIso03_chg_->GetEntry(index);
        v_Muon_pfRelIso03_chg_ = vector<float>(Muon_pfRelIso03_chg_,Muon_pfRelIso03_chg_+bytes/sizeof(Muon_pfRelIso03_chg_[0]));
        loaded_Muon_pfRelIso03_chg_ = true;
    }
    return v_Muon_pfRelIso03_chg_;
}
const vector<float> &Nano::Muon_pfRelIso04_all() {
    if (!loaded_Muon_pfRelIso04_all_) counter_uncached_Muon_pfRelIso04_all_++;
    else counter_cached_Muon_pfRelIso04_all_++;
    if (!loaded_Muon_pfRelIso04_all_) {
        if (!b_Muon_pfRelIso04_all_) throw std::runtime_error("Muon_pfRelIso04_all branch doesn't exist");
        int bytes = b_Muon_pfRelIso04_all_->GetEntry(index);
        v_Muon_pfRelIso04_all_ = vector<float>(Muon_pfRelIso04_all_,Muon_pfRelIso04_all_+bytes/sizeof(Muon_pfRelIso04_all_[0]));
        loaded_Muon_pfRelIso04_all_ = true;
    }
    return v_Muon_pfRelIso04_all_;
}
const vector<float> &Nano::Muon_phi() {
    if (!loaded_Muon_phi_) counter_uncached_Muon_phi_++;
    else counter_cached_Muon_phi_++;
    if (!loaded_Muon_phi_) {
        if (!b_Muon_phi_) throw std::runtime_error("Muon_phi branch doesn't exist");
        int bytes = b_Muon_phi_->GetEntry(index);
        v_Muon_phi_ = vector<float>(Muon_phi_,Muon_phi_+bytes/sizeof(Muon_phi_[0]));
        loaded_Muon_phi_ = true;
    }
    return v_Muon_phi_;
}
const vector<float> &Nano::Muon_pt() {
    if (!loaded_Muon_pt_) counter_uncached_Muon_pt_++;
    else counter_cached_Muon_pt_++;
    if (!loaded_Muon_pt_) {
        if (!b_Muon_pt_) throw std::runtime_error("Muon_pt branch doesn't exist");
        int bytes = b_Muon_pt_->GetEntry(index);
        v_Muon_pt_ = vector<float>(Muon_pt_,Muon_pt_+bytes/sizeof(Muon_pt_[0]));
        loaded_Muon_pt_ = true;
    }
    return v_Muon_pt_;
}
const vector<float> &Nano::Muon_ptErr() {
    if (!loaded_Muon_ptErr_) counter_uncached_Muon_ptErr_++;
    else counter_cached_Muon_ptErr_++;
    if (!loaded_Muon_ptErr_) {
        if (!b_Muon_ptErr_) throw std::runtime_error("Muon_ptErr branch doesn't exist");
        int bytes = b_Muon_ptErr_->GetEntry(index);
        v_Muon_ptErr_ = vector<float>(Muon_ptErr_,Muon_ptErr_+bytes/sizeof(Muon_ptErr_[0]));
        loaded_Muon_ptErr_ = true;
    }
    return v_Muon_ptErr_;
}
const vector<UChar_t> &Nano::Muon_puppiIsoId() {
    if (!loaded_Muon_puppiIsoId_) counter_uncached_Muon_puppiIsoId_++;
    else counter_cached_Muon_puppiIsoId_++;
    if (!loaded_Muon_puppiIsoId_) {
        if (!b_Muon_puppiIsoId_) throw std::runtime_error("Muon_puppiIsoId branch doesn't exist");
        int bytes = b_Muon_puppiIsoId_->GetEntry(index);
        v_Muon_puppiIsoId_ = vector<UChar_t>(Muon_puppiIsoId_,Muon_puppiIsoId_+bytes/sizeof(Muon_puppiIsoId_[0]));
        loaded_Muon_puppiIsoId_ = true;
    }
    return v_Muon_puppiIsoId_;
}
const vector<float> &Nano::Muon_segmentComp() {
    if (!loaded_Muon_segmentComp_) counter_uncached_Muon_segmentComp_++;
    else counter_cached_Muon_segmentComp_++;
    if (!loaded_Muon_segmentComp_) {
        if (!b_Muon_segmentComp_) throw std::runtime_error("Muon_segmentComp branch doesn't exist");
        int bytes = b_Muon_segmentComp_->GetEntry(index);
        v_Muon_segmentComp_ = vector<float>(Muon_segmentComp_,Muon_segmentComp_+bytes/sizeof(Muon_segmentComp_[0]));
        loaded_Muon_segmentComp_ = true;
    }
    return v_Muon_segmentComp_;
}
const vector<float> &Nano::Muon_sip3d() {
    if (!loaded_Muon_sip3d_) counter_uncached_Muon_sip3d_++;
    else counter_cached_Muon_sip3d_++;
    if (!loaded_Muon_sip3d_) {
        if (!b_Muon_sip3d_) throw std::runtime_error("Muon_sip3d branch doesn't exist");
        int bytes = b_Muon_sip3d_->GetEntry(index);
        v_Muon_sip3d_ = vector<float>(Muon_sip3d_,Muon_sip3d_+bytes/sizeof(Muon_sip3d_[0]));
        loaded_Muon_sip3d_ = true;
    }
    return v_Muon_sip3d_;
}
const vector<bool> &Nano::Muon_softId() {
    if (!loaded_Muon_softId_) counter_uncached_Muon_softId_++;
    else counter_cached_Muon_softId_++;
    if (!loaded_Muon_softId_) {
        if (!b_Muon_softId_) throw std::runtime_error("Muon_softId branch doesn't exist");
        int bytes = b_Muon_softId_->GetEntry(index);
        v_Muon_softId_ = vector<bool>(Muon_softId_,Muon_softId_+bytes/sizeof(Muon_softId_[0]));
        loaded_Muon_softId_ = true;
    }
    return v_Muon_softId_;
}
const vector<float> &Nano::Muon_softMva() {
    if (!loaded_Muon_softMva_) counter_uncached_Muon_softMva_++;
    else counter_cached_Muon_softMva_++;
    if (!loaded_Muon_softMva_) {
        if (!b_Muon_softMva_) throw std::runtime_error("Muon_softMva branch doesn't exist");
        int bytes = b_Muon_softMva_->GetEntry(index);
        v_Muon_softMva_ = vector<float>(Muon_softMva_,Muon_softMva_+bytes/sizeof(Muon_softMva_[0]));
        loaded_Muon_softMva_ = true;
    }
    return v_Muon_softMva_;
}
const vector<bool> &Nano::Muon_softMvaId() {
    if (!loaded_Muon_softMvaId_) counter_uncached_Muon_softMvaId_++;
    else counter_cached_Muon_softMvaId_++;
    if (!loaded_Muon_softMvaId_) {
        if (!b_Muon_softMvaId_) throw std::runtime_error("Muon_softMvaId branch doesn't exist");
        int bytes = b_Muon_softMvaId_->GetEntry(index);
        v_Muon_softMvaId_ = vector<bool>(Muon_softMvaId_,Muon_softMvaId_+bytes/sizeof(Muon_softMvaId_[0]));
        loaded_Muon_softMvaId_ = true;
    }
    return v_Muon_softMvaId_;
}
const vector<int> &Nano::Muon_svIdx() {
    if (!loaded_Muon_svIdx_) counter_uncached_Muon_svIdx_++;
    else counter_cached_Muon_svIdx_++;
    if (!loaded_Muon_svIdx_) {
        if (!b_Muon_svIdx_) throw std::runtime_error("Muon_svIdx branch doesn't exist");
        int bytes = b_Muon_svIdx_->GetEntry(index);
        v_Muon_svIdx_ = vector<int>(Muon_svIdx_,Muon_svIdx_+bytes/sizeof(Muon_svIdx_[0]));
        loaded_Muon_svIdx_ = true;
    }
    return v_Muon_svIdx_;
}
const vector<int> &Nano::Muon_tightCharge() {
    if (!loaded_Muon_tightCharge_) counter_uncached_Muon_tightCharge_++;
    else counter_cached_Muon_tightCharge_++;
    if (!loaded_Muon_tightCharge_) {
        if (!b_Muon_tightCharge_) throw std::runtime_error("Muon_tightCharge branch doesn't exist");
        int bytes = b_Muon_tightCharge_->GetEntry(index);
        v_Muon_tightCharge_ = vector<int>(Muon_tightCharge_,Muon_tightCharge_+bytes/sizeof(Muon_tightCharge_[0]));
        loaded_Muon_tightCharge_ = true;
    }
    return v_Muon_tightCharge_;
}
const vector<bool> &Nano::Muon_tightId() {
    if (!loaded_Muon_tightId_) counter_uncached_Muon_tightId_++;
    else counter_cached_Muon_tightId_++;
    if (!loaded_Muon_tightId_) {
        if (!b_Muon_tightId_) throw std::runtime_error("Muon_tightId branch doesn't exist");
        int bytes = b_Muon_tightId_->GetEntry(index);
        v_Muon_tightId_ = vector<bool>(Muon_tightId_,Muon_tightId_+bytes/sizeof(Muon_tightId_[0]));
        loaded_Muon_tightId_ = true;
    }
    return v_Muon_tightId_;
}
const vector<UChar_t> &Nano::Muon_tkIsoId() {
    if (!loaded_Muon_tkIsoId_) counter_uncached_Muon_tkIsoId_++;
    else counter_cached_Muon_tkIsoId_++;
    if (!loaded_Muon_tkIsoId_) {
        if (!b_Muon_tkIsoId_) throw std::runtime_error("Muon_tkIsoId branch doesn't exist");
        int bytes = b_Muon_tkIsoId_->GetEntry(index);
        v_Muon_tkIsoId_ = vector<UChar_t>(Muon_tkIsoId_,Muon_tkIsoId_+bytes/sizeof(Muon_tkIsoId_[0]));
        loaded_Muon_tkIsoId_ = true;
    }
    return v_Muon_tkIsoId_;
}
const vector<float> &Nano::Muon_tkRelIso() {
    if (!loaded_Muon_tkRelIso_) counter_uncached_Muon_tkRelIso_++;
    else counter_cached_Muon_tkRelIso_++;
    if (!loaded_Muon_tkRelIso_) {
        if (!b_Muon_tkRelIso_) throw std::runtime_error("Muon_tkRelIso branch doesn't exist");
        int bytes = b_Muon_tkRelIso_->GetEntry(index);
        v_Muon_tkRelIso_ = vector<float>(Muon_tkRelIso_,Muon_tkRelIso_+bytes/sizeof(Muon_tkRelIso_[0]));
        loaded_Muon_tkRelIso_ = true;
    }
    return v_Muon_tkRelIso_;
}
const vector<bool> &Nano::Muon_triggerIdLoose() {
    if (!loaded_Muon_triggerIdLoose_) counter_uncached_Muon_triggerIdLoose_++;
    else counter_cached_Muon_triggerIdLoose_++;
    if (!loaded_Muon_triggerIdLoose_) {
        if (!b_Muon_triggerIdLoose_) throw std::runtime_error("Muon_triggerIdLoose branch doesn't exist");
        int bytes = b_Muon_triggerIdLoose_->GetEntry(index);
        v_Muon_triggerIdLoose_ = vector<bool>(Muon_triggerIdLoose_,Muon_triggerIdLoose_+bytes/sizeof(Muon_triggerIdLoose_[0]));
        loaded_Muon_triggerIdLoose_ = true;
    }
    return v_Muon_triggerIdLoose_;
}
const vector<float> &Nano::Muon_tunepRelPt() {
    if (!loaded_Muon_tunepRelPt_) counter_uncached_Muon_tunepRelPt_++;
    else counter_cached_Muon_tunepRelPt_++;
    if (!loaded_Muon_tunepRelPt_) {
        if (!b_Muon_tunepRelPt_) throw std::runtime_error("Muon_tunepRelPt branch doesn't exist");
        int bytes = b_Muon_tunepRelPt_->GetEntry(index);
        v_Muon_tunepRelPt_ = vector<float>(Muon_tunepRelPt_,Muon_tunepRelPt_+bytes/sizeof(Muon_tunepRelPt_[0]));
        loaded_Muon_tunepRelPt_ = true;
    }
    return v_Muon_tunepRelPt_;
}
const vector<float> &Nano::OtherPV_score() {
    if (!loaded_OtherPV_score_) counter_uncached_OtherPV_score_++;
    else counter_cached_OtherPV_score_++;
    if (!loaded_OtherPV_score_) {
        if (!b_OtherPV_score_) throw std::runtime_error("OtherPV_score branch doesn't exist");
        int bytes = b_OtherPV_score_->GetEntry(index);
        v_OtherPV_score_ = vector<float>(OtherPV_score_,OtherPV_score_+bytes/sizeof(OtherPV_score_[0]));
        loaded_OtherPV_score_ = true;
    }
    return v_OtherPV_score_;
}
const vector<float> &Nano::OtherPV_z() {
    if (!loaded_OtherPV_z_) counter_uncached_OtherPV_z_++;
    else counter_cached_OtherPV_z_++;
    if (!loaded_OtherPV_z_) {
        if (!b_OtherPV_z_) throw std::runtime_error("OtherPV_z branch doesn't exist");
        int bytes = b_OtherPV_z_->GetEntry(index);
        v_OtherPV_z_ = vector<float>(OtherPV_z_,OtherPV_z_+bytes/sizeof(OtherPV_z_[0]));
        loaded_OtherPV_z_ = true;
    }
    return v_OtherPV_z_;
}
const vector<int> &Nano::PPSLocalTrack_decRPId() {
    if (!loaded_PPSLocalTrack_decRPId_) counter_uncached_PPSLocalTrack_decRPId_++;
    else counter_cached_PPSLocalTrack_decRPId_++;
    if (!loaded_PPSLocalTrack_decRPId_) {
        if (!b_PPSLocalTrack_decRPId_) throw std::runtime_error("PPSLocalTrack_decRPId branch doesn't exist");
        int bytes = b_PPSLocalTrack_decRPId_->GetEntry(index);
        v_PPSLocalTrack_decRPId_ = vector<int>(PPSLocalTrack_decRPId_,PPSLocalTrack_decRPId_+bytes/sizeof(PPSLocalTrack_decRPId_[0]));
        loaded_PPSLocalTrack_decRPId_ = true;
    }
    return v_PPSLocalTrack_decRPId_;
}
const vector<int> &Nano::PPSLocalTrack_multiRPProtonIdx() {
    if (!loaded_PPSLocalTrack_multiRPProtonIdx_) counter_uncached_PPSLocalTrack_multiRPProtonIdx_++;
    else counter_cached_PPSLocalTrack_multiRPProtonIdx_++;
    if (!loaded_PPSLocalTrack_multiRPProtonIdx_) {
        if (!b_PPSLocalTrack_multiRPProtonIdx_) throw std::runtime_error("PPSLocalTrack_multiRPProtonIdx branch doesn't exist");
        int bytes = b_PPSLocalTrack_multiRPProtonIdx_->GetEntry(index);
        v_PPSLocalTrack_multiRPProtonIdx_ = vector<int>(PPSLocalTrack_multiRPProtonIdx_,PPSLocalTrack_multiRPProtonIdx_+bytes/sizeof(PPSLocalTrack_multiRPProtonIdx_[0]));
        loaded_PPSLocalTrack_multiRPProtonIdx_ = true;
    }
    return v_PPSLocalTrack_multiRPProtonIdx_;
}
const vector<int> &Nano::PPSLocalTrack_rpType() {
    if (!loaded_PPSLocalTrack_rpType_) counter_uncached_PPSLocalTrack_rpType_++;
    else counter_cached_PPSLocalTrack_rpType_++;
    if (!loaded_PPSLocalTrack_rpType_) {
        if (!b_PPSLocalTrack_rpType_) throw std::runtime_error("PPSLocalTrack_rpType branch doesn't exist");
        int bytes = b_PPSLocalTrack_rpType_->GetEntry(index);
        v_PPSLocalTrack_rpType_ = vector<int>(PPSLocalTrack_rpType_,PPSLocalTrack_rpType_+bytes/sizeof(PPSLocalTrack_rpType_[0]));
        loaded_PPSLocalTrack_rpType_ = true;
    }
    return v_PPSLocalTrack_rpType_;
}
const vector<int> &Nano::PPSLocalTrack_singleRPProtonIdx() {
    if (!loaded_PPSLocalTrack_singleRPProtonIdx_) counter_uncached_PPSLocalTrack_singleRPProtonIdx_++;
    else counter_cached_PPSLocalTrack_singleRPProtonIdx_++;
    if (!loaded_PPSLocalTrack_singleRPProtonIdx_) {
        if (!b_PPSLocalTrack_singleRPProtonIdx_) throw std::runtime_error("PPSLocalTrack_singleRPProtonIdx branch doesn't exist");
        int bytes = b_PPSLocalTrack_singleRPProtonIdx_->GetEntry(index);
        v_PPSLocalTrack_singleRPProtonIdx_ = vector<int>(PPSLocalTrack_singleRPProtonIdx_,PPSLocalTrack_singleRPProtonIdx_+bytes/sizeof(PPSLocalTrack_singleRPProtonIdx_[0]));
        loaded_PPSLocalTrack_singleRPProtonIdx_ = true;
    }
    return v_PPSLocalTrack_singleRPProtonIdx_;
}
const vector<float> &Nano::PPSLocalTrack_time() {
    if (!loaded_PPSLocalTrack_time_) counter_uncached_PPSLocalTrack_time_++;
    else counter_cached_PPSLocalTrack_time_++;
    if (!loaded_PPSLocalTrack_time_) {
        if (!b_PPSLocalTrack_time_) throw std::runtime_error("PPSLocalTrack_time branch doesn't exist");
        int bytes = b_PPSLocalTrack_time_->GetEntry(index);
        v_PPSLocalTrack_time_ = vector<float>(PPSLocalTrack_time_,PPSLocalTrack_time_+bytes/sizeof(PPSLocalTrack_time_[0]));
        loaded_PPSLocalTrack_time_ = true;
    }
    return v_PPSLocalTrack_time_;
}
const vector<float> &Nano::PPSLocalTrack_timeUnc() {
    if (!loaded_PPSLocalTrack_timeUnc_) counter_uncached_PPSLocalTrack_timeUnc_++;
    else counter_cached_PPSLocalTrack_timeUnc_++;
    if (!loaded_PPSLocalTrack_timeUnc_) {
        if (!b_PPSLocalTrack_timeUnc_) throw std::runtime_error("PPSLocalTrack_timeUnc branch doesn't exist");
        int bytes = b_PPSLocalTrack_timeUnc_->GetEntry(index);
        v_PPSLocalTrack_timeUnc_ = vector<float>(PPSLocalTrack_timeUnc_,PPSLocalTrack_timeUnc_+bytes/sizeof(PPSLocalTrack_timeUnc_[0]));
        loaded_PPSLocalTrack_timeUnc_ = true;
    }
    return v_PPSLocalTrack_timeUnc_;
}
const vector<float> &Nano::PPSLocalTrack_x() {
    if (!loaded_PPSLocalTrack_x_) counter_uncached_PPSLocalTrack_x_++;
    else counter_cached_PPSLocalTrack_x_++;
    if (!loaded_PPSLocalTrack_x_) {
        if (!b_PPSLocalTrack_x_) throw std::runtime_error("PPSLocalTrack_x branch doesn't exist");
        int bytes = b_PPSLocalTrack_x_->GetEntry(index);
        v_PPSLocalTrack_x_ = vector<float>(PPSLocalTrack_x_,PPSLocalTrack_x_+bytes/sizeof(PPSLocalTrack_x_[0]));
        loaded_PPSLocalTrack_x_ = true;
    }
    return v_PPSLocalTrack_x_;
}
const vector<float> &Nano::PPSLocalTrack_y() {
    if (!loaded_PPSLocalTrack_y_) counter_uncached_PPSLocalTrack_y_++;
    else counter_cached_PPSLocalTrack_y_++;
    if (!loaded_PPSLocalTrack_y_) {
        if (!b_PPSLocalTrack_y_) throw std::runtime_error("PPSLocalTrack_y branch doesn't exist");
        int bytes = b_PPSLocalTrack_y_->GetEntry(index);
        v_PPSLocalTrack_y_ = vector<float>(PPSLocalTrack_y_,PPSLocalTrack_y_+bytes/sizeof(PPSLocalTrack_y_[0]));
        loaded_PPSLocalTrack_y_ = true;
    }
    return v_PPSLocalTrack_y_;
}
const vector<float> &Nano::PSWeight() {
    if (!loaded_PSWeight_) counter_uncached_PSWeight_++;
    else counter_cached_PSWeight_++;
    if (!loaded_PSWeight_) {
        if (!b_PSWeight_) throw std::runtime_error("PSWeight branch doesn't exist");
        int bytes = b_PSWeight_->GetEntry(index);
        v_PSWeight_ = vector<float>(PSWeight_,PSWeight_+bytes/sizeof(PSWeight_[0]));
        loaded_PSWeight_ = true;
    }
    return v_PSWeight_;
}
const float &Nano::PV_chi2() {
    if (!loaded_PV_chi2_) counter_uncached_PV_chi2_++;
    else counter_cached_PV_chi2_++;
    if (!loaded_PV_chi2_) {
        if (!b_PV_chi2_) throw std::runtime_error("PV_chi2 branch doesn't exist");
        b_PV_chi2_->GetEntry(index);
        loaded_PV_chi2_ = true;
    }
    return PV_chi2_;
}
const float &Nano::PV_ndof() {
    if (!loaded_PV_ndof_) counter_uncached_PV_ndof_++;
    else counter_cached_PV_ndof_++;
    if (!loaded_PV_ndof_) {
        if (!b_PV_ndof_) throw std::runtime_error("PV_ndof branch doesn't exist");
        b_PV_ndof_->GetEntry(index);
        loaded_PV_ndof_ = true;
    }
    return PV_ndof_;
}
const int &Nano::PV_npvs() {
    if (!loaded_PV_npvs_) counter_uncached_PV_npvs_++;
    else counter_cached_PV_npvs_++;
    if (!loaded_PV_npvs_) {
        if (!b_PV_npvs_) throw std::runtime_error("PV_npvs branch doesn't exist");
        b_PV_npvs_->GetEntry(index);
        loaded_PV_npvs_ = true;
    }
    return PV_npvs_;
}
const int &Nano::PV_npvsGood() {
    if (!loaded_PV_npvsGood_) counter_uncached_PV_npvsGood_++;
    else counter_cached_PV_npvsGood_++;
    if (!loaded_PV_npvsGood_) {
        if (!b_PV_npvsGood_) throw std::runtime_error("PV_npvsGood branch doesn't exist");
        b_PV_npvsGood_->GetEntry(index);
        loaded_PV_npvsGood_ = true;
    }
    return PV_npvsGood_;
}
const float &Nano::PV_score() {
    if (!loaded_PV_score_) counter_uncached_PV_score_++;
    else counter_cached_PV_score_++;
    if (!loaded_PV_score_) {
        if (!b_PV_score_) throw std::runtime_error("PV_score branch doesn't exist");
        b_PV_score_->GetEntry(index);
        loaded_PV_score_ = true;
    }
    return PV_score_;
}
const float &Nano::PV_x() {
    if (!loaded_PV_x_) counter_uncached_PV_x_++;
    else counter_cached_PV_x_++;
    if (!loaded_PV_x_) {
        if (!b_PV_x_) throw std::runtime_error("PV_x branch doesn't exist");
        b_PV_x_->GetEntry(index);
        loaded_PV_x_ = true;
    }
    return PV_x_;
}
const float &Nano::PV_y() {
    if (!loaded_PV_y_) counter_uncached_PV_y_++;
    else counter_cached_PV_y_++;
    if (!loaded_PV_y_) {
        if (!b_PV_y_) throw std::runtime_error("PV_y branch doesn't exist");
        b_PV_y_->GetEntry(index);
        loaded_PV_y_ = true;
    }
    return PV_y_;
}
const float &Nano::PV_z() {
    if (!loaded_PV_z_) counter_uncached_PV_z_++;
    else counter_cached_PV_z_++;
    if (!loaded_PV_z_) {
        if (!b_PV_z_) throw std::runtime_error("PV_z branch doesn't exist");
        b_PV_z_->GetEntry(index);
        loaded_PV_z_ = true;
    }
    return PV_z_;
}
const vector<int> &Nano::Photon_charge() {
    if (!loaded_Photon_charge_) counter_uncached_Photon_charge_++;
    else counter_cached_Photon_charge_++;
    if (!loaded_Photon_charge_) {
        if (!b_Photon_charge_) throw std::runtime_error("Photon_charge branch doesn't exist");
        int bytes = b_Photon_charge_->GetEntry(index);
        v_Photon_charge_ = vector<int>(Photon_charge_,Photon_charge_+bytes/sizeof(Photon_charge_[0]));
        loaded_Photon_charge_ = true;
    }
    return v_Photon_charge_;
}
const vector<UChar_t> &Nano::Photon_cleanmask() {
    if (!loaded_Photon_cleanmask_) counter_uncached_Photon_cleanmask_++;
    else counter_cached_Photon_cleanmask_++;
    if (!loaded_Photon_cleanmask_) {
        if (!b_Photon_cleanmask_) throw std::runtime_error("Photon_cleanmask branch doesn't exist");
        int bytes = b_Photon_cleanmask_->GetEntry(index);
        v_Photon_cleanmask_ = vector<UChar_t>(Photon_cleanmask_,Photon_cleanmask_+bytes/sizeof(Photon_cleanmask_[0]));
        loaded_Photon_cleanmask_ = true;
    }
    return v_Photon_cleanmask_;
}
const vector<int> &Nano::Photon_cutBased() {
    if (!loaded_Photon_cutBased_) counter_uncached_Photon_cutBased_++;
    else counter_cached_Photon_cutBased_++;
    if (!loaded_Photon_cutBased_) {
        if (!b_Photon_cutBased_) throw std::runtime_error("Photon_cutBased branch doesn't exist");
        int bytes = b_Photon_cutBased_->GetEntry(index);
        v_Photon_cutBased_ = vector<int>(Photon_cutBased_,Photon_cutBased_+bytes/sizeof(Photon_cutBased_[0]));
        loaded_Photon_cutBased_ = true;
    }
    return v_Photon_cutBased_;
}
const vector<int> &Nano::Photon_cutBased17Bitmap() {
    if (!loaded_Photon_cutBased17Bitmap_) counter_uncached_Photon_cutBased17Bitmap_++;
    else counter_cached_Photon_cutBased17Bitmap_++;
    if (!loaded_Photon_cutBased17Bitmap_) {
        if (!b_Photon_cutBased17Bitmap_) throw std::runtime_error("Photon_cutBased17Bitmap branch doesn't exist");
        int bytes = b_Photon_cutBased17Bitmap_->GetEntry(index);
        v_Photon_cutBased17Bitmap_ = vector<int>(Photon_cutBased17Bitmap_,Photon_cutBased17Bitmap_+bytes/sizeof(Photon_cutBased17Bitmap_[0]));
        loaded_Photon_cutBased17Bitmap_ = true;
    }
    return v_Photon_cutBased17Bitmap_;
}
const vector<int> &Nano::Photon_cutBasedBitmap() {
    if (!loaded_Photon_cutBasedBitmap_) counter_uncached_Photon_cutBasedBitmap_++;
    else counter_cached_Photon_cutBasedBitmap_++;
    if (!loaded_Photon_cutBasedBitmap_) {
        if (!b_Photon_cutBasedBitmap_) throw std::runtime_error("Photon_cutBasedBitmap branch doesn't exist");
        int bytes = b_Photon_cutBasedBitmap_->GetEntry(index);
        v_Photon_cutBasedBitmap_ = vector<int>(Photon_cutBasedBitmap_,Photon_cutBasedBitmap_+bytes/sizeof(Photon_cutBasedBitmap_[0]));
        loaded_Photon_cutBasedBitmap_ = true;
    }
    return v_Photon_cutBasedBitmap_;
}
const vector<int> &Nano::Photon_cutBased_Fall17V1Bitmap() {
    if (!loaded_Photon_cutBased_Fall17V1Bitmap_) counter_uncached_Photon_cutBased_Fall17V1Bitmap_++;
    else counter_cached_Photon_cutBased_Fall17V1Bitmap_++;
    if (!loaded_Photon_cutBased_Fall17V1Bitmap_) {
        if (!b_Photon_cutBased_Fall17V1Bitmap_) throw std::runtime_error("Photon_cutBased_Fall17V1Bitmap branch doesn't exist");
        int bytes = b_Photon_cutBased_Fall17V1Bitmap_->GetEntry(index);
        v_Photon_cutBased_Fall17V1Bitmap_ = vector<int>(Photon_cutBased_Fall17V1Bitmap_,Photon_cutBased_Fall17V1Bitmap_+bytes/sizeof(Photon_cutBased_Fall17V1Bitmap_[0]));
        loaded_Photon_cutBased_Fall17V1Bitmap_ = true;
    }
    return v_Photon_cutBased_Fall17V1Bitmap_;
}
const vector<int> &Nano::Photon_cutBased_Fall17V2() {
    if (!loaded_Photon_cutBased_Fall17V2_) counter_uncached_Photon_cutBased_Fall17V2_++;
    else counter_cached_Photon_cutBased_Fall17V2_++;
    if (!loaded_Photon_cutBased_Fall17V2_) {
        if (!b_Photon_cutBased_Fall17V2_) throw std::runtime_error("Photon_cutBased_Fall17V2 branch doesn't exist");
        int bytes = b_Photon_cutBased_Fall17V2_->GetEntry(index);
        v_Photon_cutBased_Fall17V2_ = vector<int>(Photon_cutBased_Fall17V2_,Photon_cutBased_Fall17V2_+bytes/sizeof(Photon_cutBased_Fall17V2_[0]));
        loaded_Photon_cutBased_Fall17V2_ = true;
    }
    return v_Photon_cutBased_Fall17V2_;
}
const vector<float> &Nano::Photon_dEscaleDown() {
    if (!loaded_Photon_dEscaleDown_) counter_uncached_Photon_dEscaleDown_++;
    else counter_cached_Photon_dEscaleDown_++;
    if (!loaded_Photon_dEscaleDown_) {
        if (!b_Photon_dEscaleDown_) throw std::runtime_error("Photon_dEscaleDown branch doesn't exist");
        int bytes = b_Photon_dEscaleDown_->GetEntry(index);
        v_Photon_dEscaleDown_ = vector<float>(Photon_dEscaleDown_,Photon_dEscaleDown_+bytes/sizeof(Photon_dEscaleDown_[0]));
        loaded_Photon_dEscaleDown_ = true;
    }
    return v_Photon_dEscaleDown_;
}
const vector<float> &Nano::Photon_dEscaleUp() {
    if (!loaded_Photon_dEscaleUp_) counter_uncached_Photon_dEscaleUp_++;
    else counter_cached_Photon_dEscaleUp_++;
    if (!loaded_Photon_dEscaleUp_) {
        if (!b_Photon_dEscaleUp_) throw std::runtime_error("Photon_dEscaleUp branch doesn't exist");
        int bytes = b_Photon_dEscaleUp_->GetEntry(index);
        v_Photon_dEscaleUp_ = vector<float>(Photon_dEscaleUp_,Photon_dEscaleUp_+bytes/sizeof(Photon_dEscaleUp_[0]));
        loaded_Photon_dEscaleUp_ = true;
    }
    return v_Photon_dEscaleUp_;
}
const vector<float> &Nano::Photon_dEsigmaDown() {
    if (!loaded_Photon_dEsigmaDown_) counter_uncached_Photon_dEsigmaDown_++;
    else counter_cached_Photon_dEsigmaDown_++;
    if (!loaded_Photon_dEsigmaDown_) {
        if (!b_Photon_dEsigmaDown_) throw std::runtime_error("Photon_dEsigmaDown branch doesn't exist");
        int bytes = b_Photon_dEsigmaDown_->GetEntry(index);
        v_Photon_dEsigmaDown_ = vector<float>(Photon_dEsigmaDown_,Photon_dEsigmaDown_+bytes/sizeof(Photon_dEsigmaDown_[0]));
        loaded_Photon_dEsigmaDown_ = true;
    }
    return v_Photon_dEsigmaDown_;
}
const vector<float> &Nano::Photon_dEsigmaUp() {
    if (!loaded_Photon_dEsigmaUp_) counter_uncached_Photon_dEsigmaUp_++;
    else counter_cached_Photon_dEsigmaUp_++;
    if (!loaded_Photon_dEsigmaUp_) {
        if (!b_Photon_dEsigmaUp_) throw std::runtime_error("Photon_dEsigmaUp branch doesn't exist");
        int bytes = b_Photon_dEsigmaUp_->GetEntry(index);
        v_Photon_dEsigmaUp_ = vector<float>(Photon_dEsigmaUp_,Photon_dEsigmaUp_+bytes/sizeof(Photon_dEsigmaUp_[0]));
        loaded_Photon_dEsigmaUp_ = true;
    }
    return v_Photon_dEsigmaUp_;
}
const vector<float> &Nano::Photon_eCorr() {
    if (!loaded_Photon_eCorr_) counter_uncached_Photon_eCorr_++;
    else counter_cached_Photon_eCorr_++;
    if (!loaded_Photon_eCorr_) {
        if (!b_Photon_eCorr_) throw std::runtime_error("Photon_eCorr branch doesn't exist");
        int bytes = b_Photon_eCorr_->GetEntry(index);
        v_Photon_eCorr_ = vector<float>(Photon_eCorr_,Photon_eCorr_+bytes/sizeof(Photon_eCorr_[0]));
        loaded_Photon_eCorr_ = true;
    }
    return v_Photon_eCorr_;
}
const vector<int> &Nano::Photon_electronIdx() {
    if (!loaded_Photon_electronIdx_) counter_uncached_Photon_electronIdx_++;
    else counter_cached_Photon_electronIdx_++;
    if (!loaded_Photon_electronIdx_) {
        if (!b_Photon_electronIdx_) throw std::runtime_error("Photon_electronIdx branch doesn't exist");
        int bytes = b_Photon_electronIdx_->GetEntry(index);
        v_Photon_electronIdx_ = vector<int>(Photon_electronIdx_,Photon_electronIdx_+bytes/sizeof(Photon_electronIdx_[0]));
        loaded_Photon_electronIdx_ = true;
    }
    return v_Photon_electronIdx_;
}
const vector<bool> &Nano::Photon_electronVeto() {
    if (!loaded_Photon_electronVeto_) counter_uncached_Photon_electronVeto_++;
    else counter_cached_Photon_electronVeto_++;
    if (!loaded_Photon_electronVeto_) {
        if (!b_Photon_electronVeto_) throw std::runtime_error("Photon_electronVeto branch doesn't exist");
        int bytes = b_Photon_electronVeto_->GetEntry(index);
        v_Photon_electronVeto_ = vector<bool>(Photon_electronVeto_,Photon_electronVeto_+bytes/sizeof(Photon_electronVeto_[0]));
        loaded_Photon_electronVeto_ = true;
    }
    return v_Photon_electronVeto_;
}
const vector<float> &Nano::Photon_energyErr() {
    if (!loaded_Photon_energyErr_) counter_uncached_Photon_energyErr_++;
    else counter_cached_Photon_energyErr_++;
    if (!loaded_Photon_energyErr_) {
        if (!b_Photon_energyErr_) throw std::runtime_error("Photon_energyErr branch doesn't exist");
        int bytes = b_Photon_energyErr_->GetEntry(index);
        v_Photon_energyErr_ = vector<float>(Photon_energyErr_,Photon_energyErr_+bytes/sizeof(Photon_energyErr_[0]));
        loaded_Photon_energyErr_ = true;
    }
    return v_Photon_energyErr_;
}
const vector<float> &Nano::Photon_energyRaw() {
    if (!loaded_Photon_energyRaw_) counter_uncached_Photon_energyRaw_++;
    else counter_cached_Photon_energyRaw_++;
    if (!loaded_Photon_energyRaw_) {
        if (!b_Photon_energyRaw_) throw std::runtime_error("Photon_energyRaw branch doesn't exist");
        int bytes = b_Photon_energyRaw_->GetEntry(index);
        v_Photon_energyRaw_ = vector<float>(Photon_energyRaw_,Photon_energyRaw_+bytes/sizeof(Photon_energyRaw_[0]));
        loaded_Photon_energyRaw_ = true;
    }
    return v_Photon_energyRaw_;
}
const vector<float> &Nano::Photon_esEffSigmaRR() {
    if (!loaded_Photon_esEffSigmaRR_) counter_uncached_Photon_esEffSigmaRR_++;
    else counter_cached_Photon_esEffSigmaRR_++;
    if (!loaded_Photon_esEffSigmaRR_) {
        if (!b_Photon_esEffSigmaRR_) throw std::runtime_error("Photon_esEffSigmaRR branch doesn't exist");
        int bytes = b_Photon_esEffSigmaRR_->GetEntry(index);
        v_Photon_esEffSigmaRR_ = vector<float>(Photon_esEffSigmaRR_,Photon_esEffSigmaRR_+bytes/sizeof(Photon_esEffSigmaRR_[0]));
        loaded_Photon_esEffSigmaRR_ = true;
    }
    return v_Photon_esEffSigmaRR_;
}
const vector<float> &Nano::Photon_esEnergyOverRawE() {
    if (!loaded_Photon_esEnergyOverRawE_) counter_uncached_Photon_esEnergyOverRawE_++;
    else counter_cached_Photon_esEnergyOverRawE_++;
    if (!loaded_Photon_esEnergyOverRawE_) {
        if (!b_Photon_esEnergyOverRawE_) throw std::runtime_error("Photon_esEnergyOverRawE branch doesn't exist");
        int bytes = b_Photon_esEnergyOverRawE_->GetEntry(index);
        v_Photon_esEnergyOverRawE_ = vector<float>(Photon_esEnergyOverRawE_,Photon_esEnergyOverRawE_+bytes/sizeof(Photon_esEnergyOverRawE_[0]));
        loaded_Photon_esEnergyOverRawE_ = true;
    }
    return v_Photon_esEnergyOverRawE_;
}
const vector<float> &Nano::Photon_eta() {
    if (!loaded_Photon_eta_) counter_uncached_Photon_eta_++;
    else counter_cached_Photon_eta_++;
    if (!loaded_Photon_eta_) {
        if (!b_Photon_eta_) throw std::runtime_error("Photon_eta branch doesn't exist");
        int bytes = b_Photon_eta_->GetEntry(index);
        v_Photon_eta_ = vector<float>(Photon_eta_,Photon_eta_+bytes/sizeof(Photon_eta_[0]));
        loaded_Photon_eta_ = true;
    }
    return v_Photon_eta_;
}
const vector<float> &Nano::Photon_etaWidth() {
    if (!loaded_Photon_etaWidth_) counter_uncached_Photon_etaWidth_++;
    else counter_cached_Photon_etaWidth_++;
    if (!loaded_Photon_etaWidth_) {
        if (!b_Photon_etaWidth_) throw std::runtime_error("Photon_etaWidth branch doesn't exist");
        int bytes = b_Photon_etaWidth_->GetEntry(index);
        v_Photon_etaWidth_ = vector<float>(Photon_etaWidth_,Photon_etaWidth_+bytes/sizeof(Photon_etaWidth_[0]));
        loaded_Photon_etaWidth_ = true;
    }
    return v_Photon_etaWidth_;
}
const vector<UChar_t> &Nano::Photon_genPartFlav() {
    if (!loaded_Photon_genPartFlav_) counter_uncached_Photon_genPartFlav_++;
    else counter_cached_Photon_genPartFlav_++;
    if (!loaded_Photon_genPartFlav_) {
        if (!b_Photon_genPartFlav_) throw std::runtime_error("Photon_genPartFlav branch doesn't exist");
        int bytes = b_Photon_genPartFlav_->GetEntry(index);
        v_Photon_genPartFlav_ = vector<UChar_t>(Photon_genPartFlav_,Photon_genPartFlav_+bytes/sizeof(Photon_genPartFlav_[0]));
        loaded_Photon_genPartFlav_ = true;
    }
    return v_Photon_genPartFlav_;
}
const vector<int> &Nano::Photon_genPartIdx() {
    if (!loaded_Photon_genPartIdx_) counter_uncached_Photon_genPartIdx_++;
    else counter_cached_Photon_genPartIdx_++;
    if (!loaded_Photon_genPartIdx_) {
        if (!b_Photon_genPartIdx_) throw std::runtime_error("Photon_genPartIdx branch doesn't exist");
        int bytes = b_Photon_genPartIdx_->GetEntry(index);
        v_Photon_genPartIdx_ = vector<int>(Photon_genPartIdx_,Photon_genPartIdx_+bytes/sizeof(Photon_genPartIdx_[0]));
        loaded_Photon_genPartIdx_ = true;
    }
    return v_Photon_genPartIdx_;
}
const vector<float> &Nano::Photon_haloTaggerMVAVal() {
    if (!loaded_Photon_haloTaggerMVAVal_) counter_uncached_Photon_haloTaggerMVAVal_++;
    else counter_cached_Photon_haloTaggerMVAVal_++;
    if (!loaded_Photon_haloTaggerMVAVal_) {
        if (!b_Photon_haloTaggerMVAVal_) throw std::runtime_error("Photon_haloTaggerMVAVal branch doesn't exist");
        int bytes = b_Photon_haloTaggerMVAVal_->GetEntry(index);
        v_Photon_haloTaggerMVAVal_ = vector<float>(Photon_haloTaggerMVAVal_,Photon_haloTaggerMVAVal_+bytes/sizeof(Photon_haloTaggerMVAVal_[0]));
        loaded_Photon_haloTaggerMVAVal_ = true;
    }
    return v_Photon_haloTaggerMVAVal_;
}
const vector<float> &Nano::Photon_hoe() {
    if (!loaded_Photon_hoe_) counter_uncached_Photon_hoe_++;
    else counter_cached_Photon_hoe_++;
    if (!loaded_Photon_hoe_) {
        if (!b_Photon_hoe_) throw std::runtime_error("Photon_hoe branch doesn't exist");
        int bytes = b_Photon_hoe_->GetEntry(index);
        v_Photon_hoe_ = vector<float>(Photon_hoe_,Photon_hoe_+bytes/sizeof(Photon_hoe_[0]));
        loaded_Photon_hoe_ = true;
    }
    return v_Photon_hoe_;
}
const vector<float> &Nano::Photon_hoe_PUcorr() {
    if (!loaded_Photon_hoe_PUcorr_) counter_uncached_Photon_hoe_PUcorr_++;
    else counter_cached_Photon_hoe_PUcorr_++;
    if (!loaded_Photon_hoe_PUcorr_) {
        if (!b_Photon_hoe_PUcorr_) throw std::runtime_error("Photon_hoe_PUcorr branch doesn't exist");
        int bytes = b_Photon_hoe_PUcorr_->GetEntry(index);
        v_Photon_hoe_PUcorr_ = vector<float>(Photon_hoe_PUcorr_,Photon_hoe_PUcorr_+bytes/sizeof(Photon_hoe_PUcorr_[0]));
        loaded_Photon_hoe_PUcorr_ = true;
    }
    return v_Photon_hoe_PUcorr_;
}
const vector<bool> &Nano::Photon_isScEtaEB() {
    if (!loaded_Photon_isScEtaEB_) counter_uncached_Photon_isScEtaEB_++;
    else counter_cached_Photon_isScEtaEB_++;
    if (!loaded_Photon_isScEtaEB_) {
        if (!b_Photon_isScEtaEB_) throw std::runtime_error("Photon_isScEtaEB branch doesn't exist");
        int bytes = b_Photon_isScEtaEB_->GetEntry(index);
        v_Photon_isScEtaEB_ = vector<bool>(Photon_isScEtaEB_,Photon_isScEtaEB_+bytes/sizeof(Photon_isScEtaEB_[0]));
        loaded_Photon_isScEtaEB_ = true;
    }
    return v_Photon_isScEtaEB_;
}
const vector<bool> &Nano::Photon_isScEtaEE() {
    if (!loaded_Photon_isScEtaEE_) counter_uncached_Photon_isScEtaEE_++;
    else counter_cached_Photon_isScEtaEE_++;
    if (!loaded_Photon_isScEtaEE_) {
        if (!b_Photon_isScEtaEE_) throw std::runtime_error("Photon_isScEtaEE branch doesn't exist");
        int bytes = b_Photon_isScEtaEE_->GetEntry(index);
        v_Photon_isScEtaEE_ = vector<bool>(Photon_isScEtaEE_,Photon_isScEtaEE_+bytes/sizeof(Photon_isScEtaEE_[0]));
        loaded_Photon_isScEtaEE_ = true;
    }
    return v_Photon_isScEtaEE_;
}
const vector<int> &Nano::Photon_jetIdx() {
    if (!loaded_Photon_jetIdx_) counter_uncached_Photon_jetIdx_++;
    else counter_cached_Photon_jetIdx_++;
    if (!loaded_Photon_jetIdx_) {
        if (!b_Photon_jetIdx_) throw std::runtime_error("Photon_jetIdx branch doesn't exist");
        int bytes = b_Photon_jetIdx_->GetEntry(index);
        v_Photon_jetIdx_ = vector<int>(Photon_jetIdx_,Photon_jetIdx_+bytes/sizeof(Photon_jetIdx_[0]));
        loaded_Photon_jetIdx_ = true;
    }
    return v_Photon_jetIdx_;
}
const vector<float> &Nano::Photon_mass() {
    if (!loaded_Photon_mass_) counter_uncached_Photon_mass_++;
    else counter_cached_Photon_mass_++;
    if (!loaded_Photon_mass_) {
        if (!b_Photon_mass_) throw std::runtime_error("Photon_mass branch doesn't exist");
        int bytes = b_Photon_mass_->GetEntry(index);
        v_Photon_mass_ = vector<float>(Photon_mass_,Photon_mass_+bytes/sizeof(Photon_mass_[0]));
        loaded_Photon_mass_ = true;
    }
    return v_Photon_mass_;
}
const vector<float> &Nano::Photon_mvaID() {
    if (!loaded_Photon_mvaID_) counter_uncached_Photon_mvaID_++;
    else counter_cached_Photon_mvaID_++;
    if (!loaded_Photon_mvaID_) {
        if (!b_Photon_mvaID_) throw std::runtime_error("Photon_mvaID branch doesn't exist");
        int bytes = b_Photon_mvaID_->GetEntry(index);
        v_Photon_mvaID_ = vector<float>(Photon_mvaID_,Photon_mvaID_+bytes/sizeof(Photon_mvaID_[0]));
        loaded_Photon_mvaID_ = true;
    }
    return v_Photon_mvaID_;
}
const vector<float> &Nano::Photon_mvaID17() {
    if (!loaded_Photon_mvaID17_) counter_uncached_Photon_mvaID17_++;
    else counter_cached_Photon_mvaID17_++;
    if (!loaded_Photon_mvaID17_) {
        if (!b_Photon_mvaID17_) throw std::runtime_error("Photon_mvaID17 branch doesn't exist");
        int bytes = b_Photon_mvaID17_->GetEntry(index);
        v_Photon_mvaID17_ = vector<float>(Photon_mvaID17_,Photon_mvaID17_+bytes/sizeof(Photon_mvaID17_[0]));
        loaded_Photon_mvaID17_ = true;
    }
    return v_Photon_mvaID17_;
}
const vector<bool> &Nano::Photon_mvaID17_WP80() {
    if (!loaded_Photon_mvaID17_WP80_) counter_uncached_Photon_mvaID17_WP80_++;
    else counter_cached_Photon_mvaID17_WP80_++;
    if (!loaded_Photon_mvaID17_WP80_) {
        if (!b_Photon_mvaID17_WP80_) throw std::runtime_error("Photon_mvaID17_WP80 branch doesn't exist");
        int bytes = b_Photon_mvaID17_WP80_->GetEntry(index);
        v_Photon_mvaID17_WP80_ = vector<bool>(Photon_mvaID17_WP80_,Photon_mvaID17_WP80_+bytes/sizeof(Photon_mvaID17_WP80_[0]));
        loaded_Photon_mvaID17_WP80_ = true;
    }
    return v_Photon_mvaID17_WP80_;
}
const vector<bool> &Nano::Photon_mvaID17_WP90() {
    if (!loaded_Photon_mvaID17_WP90_) counter_uncached_Photon_mvaID17_WP90_++;
    else counter_cached_Photon_mvaID17_WP90_++;
    if (!loaded_Photon_mvaID17_WP90_) {
        if (!b_Photon_mvaID17_WP90_) throw std::runtime_error("Photon_mvaID17_WP90 branch doesn't exist");
        int bytes = b_Photon_mvaID17_WP90_->GetEntry(index);
        v_Photon_mvaID17_WP90_ = vector<bool>(Photon_mvaID17_WP90_,Photon_mvaID17_WP90_+bytes/sizeof(Photon_mvaID17_WP90_[0]));
        loaded_Photon_mvaID17_WP90_ = true;
    }
    return v_Photon_mvaID17_WP90_;
}
const vector<float> &Nano::Photon_mvaID_Fall17V1p1() {
    if (!loaded_Photon_mvaID_Fall17V1p1_) counter_uncached_Photon_mvaID_Fall17V1p1_++;
    else counter_cached_Photon_mvaID_Fall17V1p1_++;
    if (!loaded_Photon_mvaID_Fall17V1p1_) {
        if (!b_Photon_mvaID_Fall17V1p1_) throw std::runtime_error("Photon_mvaID_Fall17V1p1 branch doesn't exist");
        int bytes = b_Photon_mvaID_Fall17V1p1_->GetEntry(index);
        v_Photon_mvaID_Fall17V1p1_ = vector<float>(Photon_mvaID_Fall17V1p1_,Photon_mvaID_Fall17V1p1_+bytes/sizeof(Photon_mvaID_Fall17V1p1_[0]));
        loaded_Photon_mvaID_Fall17V1p1_ = true;
    }
    return v_Photon_mvaID_Fall17V1p1_;
}
const vector<float> &Nano::Photon_mvaID_Fall17V2() {
    if (!loaded_Photon_mvaID_Fall17V2_) counter_uncached_Photon_mvaID_Fall17V2_++;
    else counter_cached_Photon_mvaID_Fall17V2_++;
    if (!loaded_Photon_mvaID_Fall17V2_) {
        if (!b_Photon_mvaID_Fall17V2_) throw std::runtime_error("Photon_mvaID_Fall17V2 branch doesn't exist");
        int bytes = b_Photon_mvaID_Fall17V2_->GetEntry(index);
        v_Photon_mvaID_Fall17V2_ = vector<float>(Photon_mvaID_Fall17V2_,Photon_mvaID_Fall17V2_+bytes/sizeof(Photon_mvaID_Fall17V2_[0]));
        loaded_Photon_mvaID_Fall17V2_ = true;
    }
    return v_Photon_mvaID_Fall17V2_;
}
const vector<bool> &Nano::Photon_mvaID_Fall17V2_WP80() {
    if (!loaded_Photon_mvaID_Fall17V2_WP80_) counter_uncached_Photon_mvaID_Fall17V2_WP80_++;
    else counter_cached_Photon_mvaID_Fall17V2_WP80_++;
    if (!loaded_Photon_mvaID_Fall17V2_WP80_) {
        if (!b_Photon_mvaID_Fall17V2_WP80_) throw std::runtime_error("Photon_mvaID_Fall17V2_WP80 branch doesn't exist");
        int bytes = b_Photon_mvaID_Fall17V2_WP80_->GetEntry(index);
        v_Photon_mvaID_Fall17V2_WP80_ = vector<bool>(Photon_mvaID_Fall17V2_WP80_,Photon_mvaID_Fall17V2_WP80_+bytes/sizeof(Photon_mvaID_Fall17V2_WP80_[0]));
        loaded_Photon_mvaID_Fall17V2_WP80_ = true;
    }
    return v_Photon_mvaID_Fall17V2_WP80_;
}
const vector<bool> &Nano::Photon_mvaID_Fall17V2_WP90() {
    if (!loaded_Photon_mvaID_Fall17V2_WP90_) counter_uncached_Photon_mvaID_Fall17V2_WP90_++;
    else counter_cached_Photon_mvaID_Fall17V2_WP90_++;
    if (!loaded_Photon_mvaID_Fall17V2_WP90_) {
        if (!b_Photon_mvaID_Fall17V2_WP90_) throw std::runtime_error("Photon_mvaID_Fall17V2_WP90 branch doesn't exist");
        int bytes = b_Photon_mvaID_Fall17V2_WP90_->GetEntry(index);
        v_Photon_mvaID_Fall17V2_WP90_ = vector<bool>(Photon_mvaID_Fall17V2_WP90_,Photon_mvaID_Fall17V2_WP90_+bytes/sizeof(Photon_mvaID_Fall17V2_WP90_[0]));
        loaded_Photon_mvaID_Fall17V2_WP90_ = true;
    }
    return v_Photon_mvaID_Fall17V2_WP90_;
}
const vector<bool> &Nano::Photon_mvaID_WP80() {
    if (!loaded_Photon_mvaID_WP80_) counter_uncached_Photon_mvaID_WP80_++;
    else counter_cached_Photon_mvaID_WP80_++;
    if (!loaded_Photon_mvaID_WP80_) {
        if (!b_Photon_mvaID_WP80_) throw std::runtime_error("Photon_mvaID_WP80 branch doesn't exist");
        int bytes = b_Photon_mvaID_WP80_->GetEntry(index);
        v_Photon_mvaID_WP80_ = vector<bool>(Photon_mvaID_WP80_,Photon_mvaID_WP80_+bytes/sizeof(Photon_mvaID_WP80_[0]));
        loaded_Photon_mvaID_WP80_ = true;
    }
    return v_Photon_mvaID_WP80_;
}
const vector<bool> &Nano::Photon_mvaID_WP90() {
    if (!loaded_Photon_mvaID_WP90_) counter_uncached_Photon_mvaID_WP90_++;
    else counter_cached_Photon_mvaID_WP90_++;
    if (!loaded_Photon_mvaID_WP90_) {
        if (!b_Photon_mvaID_WP90_) throw std::runtime_error("Photon_mvaID_WP90 branch doesn't exist");
        int bytes = b_Photon_mvaID_WP90_->GetEntry(index);
        v_Photon_mvaID_WP90_ = vector<bool>(Photon_mvaID_WP90_,Photon_mvaID_WP90_+bytes/sizeof(Photon_mvaID_WP90_[0]));
        loaded_Photon_mvaID_WP90_ = true;
    }
    return v_Photon_mvaID_WP90_;
}
const vector<LorentzVector> &Nano::Photon_p4() {
    if (!loaded_Photon_p4_) counter_uncached_Photon_p4_++;
    else counter_cached_Photon_p4_++;
    if (!loaded_Photon_p4_) {
        v_Photon_p4_.clear();
        vector<float> pts = Nano::Photon_pt();
        vector<float> etas = Nano::Photon_eta();
        vector<float> phis = Nano::Photon_phi();
        vector<float> masses = Nano::Photon_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_Photon_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_Photon_p4_ = true;
    }
    return v_Photon_p4_;
}
const vector<int> &Nano::Photon_pdgId() {
    if (!loaded_Photon_pdgId_) counter_uncached_Photon_pdgId_++;
    else counter_cached_Photon_pdgId_++;
    if (!loaded_Photon_pdgId_) {
        if (!b_Photon_pdgId_) throw std::runtime_error("Photon_pdgId branch doesn't exist");
        int bytes = b_Photon_pdgId_->GetEntry(index);
        v_Photon_pdgId_ = vector<int>(Photon_pdgId_,Photon_pdgId_+bytes/sizeof(Photon_pdgId_[0]));
        loaded_Photon_pdgId_ = true;
    }
    return v_Photon_pdgId_;
}
const vector<float> &Nano::Photon_pfChargedIsoPFPV() {
    if (!loaded_Photon_pfChargedIsoPFPV_) counter_uncached_Photon_pfChargedIsoPFPV_++;
    else counter_cached_Photon_pfChargedIsoPFPV_++;
    if (!loaded_Photon_pfChargedIsoPFPV_) {
        if (!b_Photon_pfChargedIsoPFPV_) throw std::runtime_error("Photon_pfChargedIsoPFPV branch doesn't exist");
        int bytes = b_Photon_pfChargedIsoPFPV_->GetEntry(index);
        v_Photon_pfChargedIsoPFPV_ = vector<float>(Photon_pfChargedIsoPFPV_,Photon_pfChargedIsoPFPV_+bytes/sizeof(Photon_pfChargedIsoPFPV_[0]));
        loaded_Photon_pfChargedIsoPFPV_ = true;
    }
    return v_Photon_pfChargedIsoPFPV_;
}
const vector<float> &Nano::Photon_pfChargedIsoWorstVtx() {
    if (!loaded_Photon_pfChargedIsoWorstVtx_) counter_uncached_Photon_pfChargedIsoWorstVtx_++;
    else counter_cached_Photon_pfChargedIsoWorstVtx_++;
    if (!loaded_Photon_pfChargedIsoWorstVtx_) {
        if (!b_Photon_pfChargedIsoWorstVtx_) throw std::runtime_error("Photon_pfChargedIsoWorstVtx branch doesn't exist");
        int bytes = b_Photon_pfChargedIsoWorstVtx_->GetEntry(index);
        v_Photon_pfChargedIsoWorstVtx_ = vector<float>(Photon_pfChargedIsoWorstVtx_,Photon_pfChargedIsoWorstVtx_+bytes/sizeof(Photon_pfChargedIsoWorstVtx_[0]));
        loaded_Photon_pfChargedIsoWorstVtx_ = true;
    }
    return v_Photon_pfChargedIsoWorstVtx_;
}
const vector<float> &Nano::Photon_pfPhoIso03() {
    if (!loaded_Photon_pfPhoIso03_) counter_uncached_Photon_pfPhoIso03_++;
    else counter_cached_Photon_pfPhoIso03_++;
    if (!loaded_Photon_pfPhoIso03_) {
        if (!b_Photon_pfPhoIso03_) throw std::runtime_error("Photon_pfPhoIso03 branch doesn't exist");
        int bytes = b_Photon_pfPhoIso03_->GetEntry(index);
        v_Photon_pfPhoIso03_ = vector<float>(Photon_pfPhoIso03_,Photon_pfPhoIso03_+bytes/sizeof(Photon_pfPhoIso03_[0]));
        loaded_Photon_pfPhoIso03_ = true;
    }
    return v_Photon_pfPhoIso03_;
}
const vector<float> &Nano::Photon_pfRelIso03_all() {
    if (!loaded_Photon_pfRelIso03_all_) counter_uncached_Photon_pfRelIso03_all_++;
    else counter_cached_Photon_pfRelIso03_all_++;
    if (!loaded_Photon_pfRelIso03_all_) {
        if (!b_Photon_pfRelIso03_all_) throw std::runtime_error("Photon_pfRelIso03_all branch doesn't exist");
        int bytes = b_Photon_pfRelIso03_all_->GetEntry(index);
        v_Photon_pfRelIso03_all_ = vector<float>(Photon_pfRelIso03_all_,Photon_pfRelIso03_all_+bytes/sizeof(Photon_pfRelIso03_all_[0]));
        loaded_Photon_pfRelIso03_all_ = true;
    }
    return v_Photon_pfRelIso03_all_;
}
const vector<float> &Nano::Photon_pfRelIso03_all_Fall17V2() {
    if (!loaded_Photon_pfRelIso03_all_Fall17V2_) counter_uncached_Photon_pfRelIso03_all_Fall17V2_++;
    else counter_cached_Photon_pfRelIso03_all_Fall17V2_++;
    if (!loaded_Photon_pfRelIso03_all_Fall17V2_) {
        if (!b_Photon_pfRelIso03_all_Fall17V2_) throw std::runtime_error("Photon_pfRelIso03_all_Fall17V2 branch doesn't exist");
        int bytes = b_Photon_pfRelIso03_all_Fall17V2_->GetEntry(index);
        v_Photon_pfRelIso03_all_Fall17V2_ = vector<float>(Photon_pfRelIso03_all_Fall17V2_,Photon_pfRelIso03_all_Fall17V2_+bytes/sizeof(Photon_pfRelIso03_all_Fall17V2_[0]));
        loaded_Photon_pfRelIso03_all_Fall17V2_ = true;
    }
    return v_Photon_pfRelIso03_all_Fall17V2_;
}
const vector<float> &Nano::Photon_pfRelIso03_all_quadratic() {
    if (!loaded_Photon_pfRelIso03_all_quadratic_) counter_uncached_Photon_pfRelIso03_all_quadratic_++;
    else counter_cached_Photon_pfRelIso03_all_quadratic_++;
    if (!loaded_Photon_pfRelIso03_all_quadratic_) {
        if (!b_Photon_pfRelIso03_all_quadratic_) throw std::runtime_error("Photon_pfRelIso03_all_quadratic branch doesn't exist");
        int bytes = b_Photon_pfRelIso03_all_quadratic_->GetEntry(index);
        v_Photon_pfRelIso03_all_quadratic_ = vector<float>(Photon_pfRelIso03_all_quadratic_,Photon_pfRelIso03_all_quadratic_+bytes/sizeof(Photon_pfRelIso03_all_quadratic_[0]));
        loaded_Photon_pfRelIso03_all_quadratic_ = true;
    }
    return v_Photon_pfRelIso03_all_quadratic_;
}
const vector<float> &Nano::Photon_pfRelIso03_chg() {
    if (!loaded_Photon_pfRelIso03_chg_) counter_uncached_Photon_pfRelIso03_chg_++;
    else counter_cached_Photon_pfRelIso03_chg_++;
    if (!loaded_Photon_pfRelIso03_chg_) {
        if (!b_Photon_pfRelIso03_chg_) throw std::runtime_error("Photon_pfRelIso03_chg branch doesn't exist");
        int bytes = b_Photon_pfRelIso03_chg_->GetEntry(index);
        v_Photon_pfRelIso03_chg_ = vector<float>(Photon_pfRelIso03_chg_,Photon_pfRelIso03_chg_+bytes/sizeof(Photon_pfRelIso03_chg_[0]));
        loaded_Photon_pfRelIso03_chg_ = true;
    }
    return v_Photon_pfRelIso03_chg_;
}
const vector<float> &Nano::Photon_pfRelIso03_chg_Fall17V2() {
    if (!loaded_Photon_pfRelIso03_chg_Fall17V2_) counter_uncached_Photon_pfRelIso03_chg_Fall17V2_++;
    else counter_cached_Photon_pfRelIso03_chg_Fall17V2_++;
    if (!loaded_Photon_pfRelIso03_chg_Fall17V2_) {
        if (!b_Photon_pfRelIso03_chg_Fall17V2_) throw std::runtime_error("Photon_pfRelIso03_chg_Fall17V2 branch doesn't exist");
        int bytes = b_Photon_pfRelIso03_chg_Fall17V2_->GetEntry(index);
        v_Photon_pfRelIso03_chg_Fall17V2_ = vector<float>(Photon_pfRelIso03_chg_Fall17V2_,Photon_pfRelIso03_chg_Fall17V2_+bytes/sizeof(Photon_pfRelIso03_chg_Fall17V2_[0]));
        loaded_Photon_pfRelIso03_chg_Fall17V2_ = true;
    }
    return v_Photon_pfRelIso03_chg_Fall17V2_;
}
const vector<float> &Nano::Photon_pfRelIso03_chg_quadratic() {
    if (!loaded_Photon_pfRelIso03_chg_quadratic_) counter_uncached_Photon_pfRelIso03_chg_quadratic_++;
    else counter_cached_Photon_pfRelIso03_chg_quadratic_++;
    if (!loaded_Photon_pfRelIso03_chg_quadratic_) {
        if (!b_Photon_pfRelIso03_chg_quadratic_) throw std::runtime_error("Photon_pfRelIso03_chg_quadratic branch doesn't exist");
        int bytes = b_Photon_pfRelIso03_chg_quadratic_->GetEntry(index);
        v_Photon_pfRelIso03_chg_quadratic_ = vector<float>(Photon_pfRelIso03_chg_quadratic_,Photon_pfRelIso03_chg_quadratic_+bytes/sizeof(Photon_pfRelIso03_chg_quadratic_[0]));
        loaded_Photon_pfRelIso03_chg_quadratic_ = true;
    }
    return v_Photon_pfRelIso03_chg_quadratic_;
}
const vector<float> &Nano::Photon_phi() {
    if (!loaded_Photon_phi_) counter_uncached_Photon_phi_++;
    else counter_cached_Photon_phi_++;
    if (!loaded_Photon_phi_) {
        if (!b_Photon_phi_) throw std::runtime_error("Photon_phi branch doesn't exist");
        int bytes = b_Photon_phi_->GetEntry(index);
        v_Photon_phi_ = vector<float>(Photon_phi_,Photon_phi_+bytes/sizeof(Photon_phi_[0]));
        loaded_Photon_phi_ = true;
    }
    return v_Photon_phi_;
}
const vector<float> &Nano::Photon_phiWidth() {
    if (!loaded_Photon_phiWidth_) counter_uncached_Photon_phiWidth_++;
    else counter_cached_Photon_phiWidth_++;
    if (!loaded_Photon_phiWidth_) {
        if (!b_Photon_phiWidth_) throw std::runtime_error("Photon_phiWidth branch doesn't exist");
        int bytes = b_Photon_phiWidth_->GetEntry(index);
        v_Photon_phiWidth_ = vector<float>(Photon_phiWidth_,Photon_phiWidth_+bytes/sizeof(Photon_phiWidth_[0]));
        loaded_Photon_phiWidth_ = true;
    }
    return v_Photon_phiWidth_;
}
const vector<bool> &Nano::Photon_pixelSeed() {
    if (!loaded_Photon_pixelSeed_) counter_uncached_Photon_pixelSeed_++;
    else counter_cached_Photon_pixelSeed_++;
    if (!loaded_Photon_pixelSeed_) {
        if (!b_Photon_pixelSeed_) throw std::runtime_error("Photon_pixelSeed branch doesn't exist");
        int bytes = b_Photon_pixelSeed_->GetEntry(index);
        v_Photon_pixelSeed_ = vector<bool>(Photon_pixelSeed_,Photon_pixelSeed_+bytes/sizeof(Photon_pixelSeed_[0]));
        loaded_Photon_pixelSeed_ = true;
    }
    return v_Photon_pixelSeed_;
}
const vector<float> &Nano::Photon_pt() {
    if (!loaded_Photon_pt_) counter_uncached_Photon_pt_++;
    else counter_cached_Photon_pt_++;
    if (!loaded_Photon_pt_) {
        if (!b_Photon_pt_) throw std::runtime_error("Photon_pt branch doesn't exist");
        int bytes = b_Photon_pt_->GetEntry(index);
        v_Photon_pt_ = vector<float>(Photon_pt_,Photon_pt_+bytes/sizeof(Photon_pt_[0]));
        loaded_Photon_pt_ = true;
    }
    return v_Photon_pt_;
}
const vector<float> &Nano::Photon_r9() {
    if (!loaded_Photon_r9_) counter_uncached_Photon_r9_++;
    else counter_cached_Photon_r9_++;
    if (!loaded_Photon_r9_) {
        if (!b_Photon_r9_) throw std::runtime_error("Photon_r9 branch doesn't exist");
        int bytes = b_Photon_r9_->GetEntry(index);
        v_Photon_r9_ = vector<float>(Photon_r9_,Photon_r9_+bytes/sizeof(Photon_r9_[0]));
        loaded_Photon_r9_ = true;
    }
    return v_Photon_r9_;
}
const vector<float> &Nano::Photon_s4() {
    if (!loaded_Photon_s4_) counter_uncached_Photon_s4_++;
    else counter_cached_Photon_s4_++;
    if (!loaded_Photon_s4_) {
        if (!b_Photon_s4_) throw std::runtime_error("Photon_s4 branch doesn't exist");
        int bytes = b_Photon_s4_->GetEntry(index);
        v_Photon_s4_ = vector<float>(Photon_s4_,Photon_s4_+bytes/sizeof(Photon_s4_[0]));
        loaded_Photon_s4_ = true;
    }
    return v_Photon_s4_;
}
const vector<UChar_t> &Nano::Photon_seedGain() {
    if (!loaded_Photon_seedGain_) counter_uncached_Photon_seedGain_++;
    else counter_cached_Photon_seedGain_++;
    if (!loaded_Photon_seedGain_) {
        if (!b_Photon_seedGain_) throw std::runtime_error("Photon_seedGain branch doesn't exist");
        int bytes = b_Photon_seedGain_->GetEntry(index);
        v_Photon_seedGain_ = vector<UChar_t>(Photon_seedGain_,Photon_seedGain_+bytes/sizeof(Photon_seedGain_[0]));
        loaded_Photon_seedGain_ = true;
    }
    return v_Photon_seedGain_;
}
const vector<Char_t> &Nano::Photon_seediEtaOriX() {
    if (!loaded_Photon_seediEtaOriX_) counter_uncached_Photon_seediEtaOriX_++;
    else counter_cached_Photon_seediEtaOriX_++;
    if (!loaded_Photon_seediEtaOriX_) {
        if (!b_Photon_seediEtaOriX_) throw std::runtime_error("Photon_seediEtaOriX branch doesn't exist");
        int bytes = b_Photon_seediEtaOriX_->GetEntry(index);
        v_Photon_seediEtaOriX_ = vector<Char_t>(Photon_seediEtaOriX_,Photon_seediEtaOriX_+bytes/sizeof(Photon_seediEtaOriX_[0]));
        loaded_Photon_seediEtaOriX_ = true;
    }
    return v_Photon_seediEtaOriX_;
}
const vector<int> &Nano::Photon_seediPhiOriY() {
    if (!loaded_Photon_seediPhiOriY_) counter_uncached_Photon_seediPhiOriY_++;
    else counter_cached_Photon_seediPhiOriY_++;
    if (!loaded_Photon_seediPhiOriY_) {
        if (!b_Photon_seediPhiOriY_) throw std::runtime_error("Photon_seediPhiOriY branch doesn't exist");
        int bytes = b_Photon_seediPhiOriY_->GetEntry(index);
        v_Photon_seediPhiOriY_ = vector<int>(Photon_seediPhiOriY_,Photon_seediPhiOriY_+bytes/sizeof(Photon_seediPhiOriY_[0]));
        loaded_Photon_seediPhiOriY_ = true;
    }
    return v_Photon_seediPhiOriY_;
}
const vector<float> &Nano::Photon_sieie() {
    if (!loaded_Photon_sieie_) counter_uncached_Photon_sieie_++;
    else counter_cached_Photon_sieie_++;
    if (!loaded_Photon_sieie_) {
        if (!b_Photon_sieie_) throw std::runtime_error("Photon_sieie branch doesn't exist");
        int bytes = b_Photon_sieie_->GetEntry(index);
        v_Photon_sieie_ = vector<float>(Photon_sieie_,Photon_sieie_+bytes/sizeof(Photon_sieie_[0]));
        loaded_Photon_sieie_ = true;
    }
    return v_Photon_sieie_;
}
const vector<float> &Nano::Photon_sieip() {
    if (!loaded_Photon_sieip_) counter_uncached_Photon_sieip_++;
    else counter_cached_Photon_sieip_++;
    if (!loaded_Photon_sieip_) {
        if (!b_Photon_sieip_) throw std::runtime_error("Photon_sieip branch doesn't exist");
        int bytes = b_Photon_sieip_->GetEntry(index);
        v_Photon_sieip_ = vector<float>(Photon_sieip_,Photon_sieip_+bytes/sizeof(Photon_sieip_[0]));
        loaded_Photon_sieip_ = true;
    }
    return v_Photon_sieip_;
}
const vector<float> &Nano::Photon_sipip() {
    if (!loaded_Photon_sipip_) counter_uncached_Photon_sipip_++;
    else counter_cached_Photon_sipip_++;
    if (!loaded_Photon_sipip_) {
        if (!b_Photon_sipip_) throw std::runtime_error("Photon_sipip branch doesn't exist");
        int bytes = b_Photon_sipip_->GetEntry(index);
        v_Photon_sipip_ = vector<float>(Photon_sipip_,Photon_sipip_+bytes/sizeof(Photon_sipip_[0]));
        loaded_Photon_sipip_ = true;
    }
    return v_Photon_sipip_;
}
const vector<int> &Nano::Photon_vidNestedWPBitmap() {
    if (!loaded_Photon_vidNestedWPBitmap_) counter_uncached_Photon_vidNestedWPBitmap_++;
    else counter_cached_Photon_vidNestedWPBitmap_++;
    if (!loaded_Photon_vidNestedWPBitmap_) {
        if (!b_Photon_vidNestedWPBitmap_) throw std::runtime_error("Photon_vidNestedWPBitmap branch doesn't exist");
        int bytes = b_Photon_vidNestedWPBitmap_->GetEntry(index);
        v_Photon_vidNestedWPBitmap_ = vector<int>(Photon_vidNestedWPBitmap_,Photon_vidNestedWPBitmap_+bytes/sizeof(Photon_vidNestedWPBitmap_[0]));
        loaded_Photon_vidNestedWPBitmap_ = true;
    }
    return v_Photon_vidNestedWPBitmap_;
}
const vector<int> &Nano::Photon_vidNestedWPBitmap_Fall17V2() {
    if (!loaded_Photon_vidNestedWPBitmap_Fall17V2_) counter_uncached_Photon_vidNestedWPBitmap_Fall17V2_++;
    else counter_cached_Photon_vidNestedWPBitmap_Fall17V2_++;
    if (!loaded_Photon_vidNestedWPBitmap_Fall17V2_) {
        if (!b_Photon_vidNestedWPBitmap_Fall17V2_) throw std::runtime_error("Photon_vidNestedWPBitmap_Fall17V2 branch doesn't exist");
        int bytes = b_Photon_vidNestedWPBitmap_Fall17V2_->GetEntry(index);
        v_Photon_vidNestedWPBitmap_Fall17V2_ = vector<int>(Photon_vidNestedWPBitmap_Fall17V2_,Photon_vidNestedWPBitmap_Fall17V2_+bytes/sizeof(Photon_vidNestedWPBitmap_Fall17V2_[0]));
        loaded_Photon_vidNestedWPBitmap_Fall17V2_ = true;
    }
    return v_Photon_vidNestedWPBitmap_Fall17V2_;
}
const vector<float> &Nano::Photon_x_calo() {
    if (!loaded_Photon_x_calo_) counter_uncached_Photon_x_calo_++;
    else counter_cached_Photon_x_calo_++;
    if (!loaded_Photon_x_calo_) {
        if (!b_Photon_x_calo_) throw std::runtime_error("Photon_x_calo branch doesn't exist");
        int bytes = b_Photon_x_calo_->GetEntry(index);
        v_Photon_x_calo_ = vector<float>(Photon_x_calo_,Photon_x_calo_+bytes/sizeof(Photon_x_calo_[0]));
        loaded_Photon_x_calo_ = true;
    }
    return v_Photon_x_calo_;
}
const vector<float> &Nano::Photon_y_calo() {
    if (!loaded_Photon_y_calo_) counter_uncached_Photon_y_calo_++;
    else counter_cached_Photon_y_calo_++;
    if (!loaded_Photon_y_calo_) {
        if (!b_Photon_y_calo_) throw std::runtime_error("Photon_y_calo branch doesn't exist");
        int bytes = b_Photon_y_calo_->GetEntry(index);
        v_Photon_y_calo_ = vector<float>(Photon_y_calo_,Photon_y_calo_+bytes/sizeof(Photon_y_calo_[0]));
        loaded_Photon_y_calo_ = true;
    }
    return v_Photon_y_calo_;
}
const vector<float> &Nano::Photon_z_calo() {
    if (!loaded_Photon_z_calo_) counter_uncached_Photon_z_calo_++;
    else counter_cached_Photon_z_calo_++;
    if (!loaded_Photon_z_calo_) {
        if (!b_Photon_z_calo_) throw std::runtime_error("Photon_z_calo branch doesn't exist");
        int bytes = b_Photon_z_calo_->GetEntry(index);
        v_Photon_z_calo_ = vector<float>(Photon_z_calo_,Photon_z_calo_+bytes/sizeof(Photon_z_calo_[0]));
        loaded_Photon_z_calo_ = true;
    }
    return v_Photon_z_calo_;
}
const float &Nano::Pileup_gpudensity() {
    if (!loaded_Pileup_gpudensity_) counter_uncached_Pileup_gpudensity_++;
    else counter_cached_Pileup_gpudensity_++;
    if (!loaded_Pileup_gpudensity_) {
        if (!b_Pileup_gpudensity_) throw std::runtime_error("Pileup_gpudensity branch doesn't exist");
        b_Pileup_gpudensity_->GetEntry(index);
        loaded_Pileup_gpudensity_ = true;
    }
    return Pileup_gpudensity_;
}
const int &Nano::Pileup_nPU() {
    if (!loaded_Pileup_nPU_) counter_uncached_Pileup_nPU_++;
    else counter_cached_Pileup_nPU_++;
    if (!loaded_Pileup_nPU_) {
        if (!b_Pileup_nPU_) throw std::runtime_error("Pileup_nPU branch doesn't exist");
        b_Pileup_nPU_->GetEntry(index);
        loaded_Pileup_nPU_ = true;
    }
    return Pileup_nPU_;
}
const float &Nano::Pileup_nTrueInt() {
    if (!loaded_Pileup_nTrueInt_) counter_uncached_Pileup_nTrueInt_++;
    else counter_cached_Pileup_nTrueInt_++;
    if (!loaded_Pileup_nTrueInt_) {
        if (!b_Pileup_nTrueInt_) throw std::runtime_error("Pileup_nTrueInt branch doesn't exist");
        b_Pileup_nTrueInt_->GetEntry(index);
        loaded_Pileup_nTrueInt_ = true;
    }
    return Pileup_nTrueInt_;
}
const float &Nano::Pileup_pudensity() {
    if (!loaded_Pileup_pudensity_) counter_uncached_Pileup_pudensity_++;
    else counter_cached_Pileup_pudensity_++;
    if (!loaded_Pileup_pudensity_) {
        if (!b_Pileup_pudensity_) throw std::runtime_error("Pileup_pudensity branch doesn't exist");
        b_Pileup_pudensity_->GetEntry(index);
        loaded_Pileup_pudensity_ = true;
    }
    return Pileup_pudensity_;
}
const int &Nano::Pileup_sumEOOT() {
    if (!loaded_Pileup_sumEOOT_) counter_uncached_Pileup_sumEOOT_++;
    else counter_cached_Pileup_sumEOOT_++;
    if (!loaded_Pileup_sumEOOT_) {
        if (!b_Pileup_sumEOOT_) throw std::runtime_error("Pileup_sumEOOT branch doesn't exist");
        b_Pileup_sumEOOT_->GetEntry(index);
        loaded_Pileup_sumEOOT_ = true;
    }
    return Pileup_sumEOOT_;
}
const int &Nano::Pileup_sumLOOT() {
    if (!loaded_Pileup_sumLOOT_) counter_uncached_Pileup_sumLOOT_++;
    else counter_cached_Pileup_sumLOOT_++;
    if (!loaded_Pileup_sumLOOT_) {
        if (!b_Pileup_sumLOOT_) throw std::runtime_error("Pileup_sumLOOT branch doesn't exist");
        b_Pileup_sumLOOT_->GetEntry(index);
        loaded_Pileup_sumLOOT_ = true;
    }
    return Pileup_sumLOOT_;
}
const vector<int> &Nano::Proton_multiRP_arm() {
    if (!loaded_Proton_multiRP_arm_) counter_uncached_Proton_multiRP_arm_++;
    else counter_cached_Proton_multiRP_arm_++;
    if (!loaded_Proton_multiRP_arm_) {
        if (!b_Proton_multiRP_arm_) throw std::runtime_error("Proton_multiRP_arm branch doesn't exist");
        int bytes = b_Proton_multiRP_arm_->GetEntry(index);
        v_Proton_multiRP_arm_ = vector<int>(Proton_multiRP_arm_,Proton_multiRP_arm_+bytes/sizeof(Proton_multiRP_arm_[0]));
        loaded_Proton_multiRP_arm_ = true;
    }
    return v_Proton_multiRP_arm_;
}
const vector<float> &Nano::Proton_multiRP_t() {
    if (!loaded_Proton_multiRP_t_) counter_uncached_Proton_multiRP_t_++;
    else counter_cached_Proton_multiRP_t_++;
    if (!loaded_Proton_multiRP_t_) {
        if (!b_Proton_multiRP_t_) throw std::runtime_error("Proton_multiRP_t branch doesn't exist");
        int bytes = b_Proton_multiRP_t_->GetEntry(index);
        v_Proton_multiRP_t_ = vector<float>(Proton_multiRP_t_,Proton_multiRP_t_+bytes/sizeof(Proton_multiRP_t_[0]));
        loaded_Proton_multiRP_t_ = true;
    }
    return v_Proton_multiRP_t_;
}
const vector<float> &Nano::Proton_multiRP_thetaX() {
    if (!loaded_Proton_multiRP_thetaX_) counter_uncached_Proton_multiRP_thetaX_++;
    else counter_cached_Proton_multiRP_thetaX_++;
    if (!loaded_Proton_multiRP_thetaX_) {
        if (!b_Proton_multiRP_thetaX_) throw std::runtime_error("Proton_multiRP_thetaX branch doesn't exist");
        int bytes = b_Proton_multiRP_thetaX_->GetEntry(index);
        v_Proton_multiRP_thetaX_ = vector<float>(Proton_multiRP_thetaX_,Proton_multiRP_thetaX_+bytes/sizeof(Proton_multiRP_thetaX_[0]));
        loaded_Proton_multiRP_thetaX_ = true;
    }
    return v_Proton_multiRP_thetaX_;
}
const vector<float> &Nano::Proton_multiRP_thetaY() {
    if (!loaded_Proton_multiRP_thetaY_) counter_uncached_Proton_multiRP_thetaY_++;
    else counter_cached_Proton_multiRP_thetaY_++;
    if (!loaded_Proton_multiRP_thetaY_) {
        if (!b_Proton_multiRP_thetaY_) throw std::runtime_error("Proton_multiRP_thetaY branch doesn't exist");
        int bytes = b_Proton_multiRP_thetaY_->GetEntry(index);
        v_Proton_multiRP_thetaY_ = vector<float>(Proton_multiRP_thetaY_,Proton_multiRP_thetaY_+bytes/sizeof(Proton_multiRP_thetaY_[0]));
        loaded_Proton_multiRP_thetaY_ = true;
    }
    return v_Proton_multiRP_thetaY_;
}
const vector<float> &Nano::Proton_multiRP_time() {
    if (!loaded_Proton_multiRP_time_) counter_uncached_Proton_multiRP_time_++;
    else counter_cached_Proton_multiRP_time_++;
    if (!loaded_Proton_multiRP_time_) {
        if (!b_Proton_multiRP_time_) throw std::runtime_error("Proton_multiRP_time branch doesn't exist");
        int bytes = b_Proton_multiRP_time_->GetEntry(index);
        v_Proton_multiRP_time_ = vector<float>(Proton_multiRP_time_,Proton_multiRP_time_+bytes/sizeof(Proton_multiRP_time_[0]));
        loaded_Proton_multiRP_time_ = true;
    }
    return v_Proton_multiRP_time_;
}
const vector<float> &Nano::Proton_multiRP_timeUnc() {
    if (!loaded_Proton_multiRP_timeUnc_) counter_uncached_Proton_multiRP_timeUnc_++;
    else counter_cached_Proton_multiRP_timeUnc_++;
    if (!loaded_Proton_multiRP_timeUnc_) {
        if (!b_Proton_multiRP_timeUnc_) throw std::runtime_error("Proton_multiRP_timeUnc branch doesn't exist");
        int bytes = b_Proton_multiRP_timeUnc_->GetEntry(index);
        v_Proton_multiRP_timeUnc_ = vector<float>(Proton_multiRP_timeUnc_,Proton_multiRP_timeUnc_+bytes/sizeof(Proton_multiRP_timeUnc_[0]));
        loaded_Proton_multiRP_timeUnc_ = true;
    }
    return v_Proton_multiRP_timeUnc_;
}
const vector<float> &Nano::Proton_multiRP_xi() {
    if (!loaded_Proton_multiRP_xi_) counter_uncached_Proton_multiRP_xi_++;
    else counter_cached_Proton_multiRP_xi_++;
    if (!loaded_Proton_multiRP_xi_) {
        if (!b_Proton_multiRP_xi_) throw std::runtime_error("Proton_multiRP_xi branch doesn't exist");
        int bytes = b_Proton_multiRP_xi_->GetEntry(index);
        v_Proton_multiRP_xi_ = vector<float>(Proton_multiRP_xi_,Proton_multiRP_xi_+bytes/sizeof(Proton_multiRP_xi_[0]));
        loaded_Proton_multiRP_xi_ = true;
    }
    return v_Proton_multiRP_xi_;
}
const vector<int> &Nano::Proton_singleRP_decRPId() {
    if (!loaded_Proton_singleRP_decRPId_) counter_uncached_Proton_singleRP_decRPId_++;
    else counter_cached_Proton_singleRP_decRPId_++;
    if (!loaded_Proton_singleRP_decRPId_) {
        if (!b_Proton_singleRP_decRPId_) throw std::runtime_error("Proton_singleRP_decRPId branch doesn't exist");
        int bytes = b_Proton_singleRP_decRPId_->GetEntry(index);
        v_Proton_singleRP_decRPId_ = vector<int>(Proton_singleRP_decRPId_,Proton_singleRP_decRPId_+bytes/sizeof(Proton_singleRP_decRPId_[0]));
        loaded_Proton_singleRP_decRPId_ = true;
    }
    return v_Proton_singleRP_decRPId_;
}
const vector<float> &Nano::Proton_singleRP_thetaY() {
    if (!loaded_Proton_singleRP_thetaY_) counter_uncached_Proton_singleRP_thetaY_++;
    else counter_cached_Proton_singleRP_thetaY_++;
    if (!loaded_Proton_singleRP_thetaY_) {
        if (!b_Proton_singleRP_thetaY_) throw std::runtime_error("Proton_singleRP_thetaY branch doesn't exist");
        int bytes = b_Proton_singleRP_thetaY_->GetEntry(index);
        v_Proton_singleRP_thetaY_ = vector<float>(Proton_singleRP_thetaY_,Proton_singleRP_thetaY_+bytes/sizeof(Proton_singleRP_thetaY_[0]));
        loaded_Proton_singleRP_thetaY_ = true;
    }
    return v_Proton_singleRP_thetaY_;
}
const vector<float> &Nano::Proton_singleRP_xi() {
    if (!loaded_Proton_singleRP_xi_) counter_uncached_Proton_singleRP_xi_++;
    else counter_cached_Proton_singleRP_xi_++;
    if (!loaded_Proton_singleRP_xi_) {
        if (!b_Proton_singleRP_xi_) throw std::runtime_error("Proton_singleRP_xi branch doesn't exist");
        int bytes = b_Proton_singleRP_xi_->GetEntry(index);
        v_Proton_singleRP_xi_ = vector<float>(Proton_singleRP_xi_,Proton_singleRP_xi_+bytes/sizeof(Proton_singleRP_xi_[0]));
        loaded_Proton_singleRP_xi_ = true;
    }
    return v_Proton_singleRP_xi_;
}
const float &Nano::PuppiMET_phi() {
    if (!loaded_PuppiMET_phi_) counter_uncached_PuppiMET_phi_++;
    else counter_cached_PuppiMET_phi_++;
    if (!loaded_PuppiMET_phi_) {
        if (!b_PuppiMET_phi_) throw std::runtime_error("PuppiMET_phi branch doesn't exist");
        b_PuppiMET_phi_->GetEntry(index);
        loaded_PuppiMET_phi_ = true;
    }
    return PuppiMET_phi_;
}
const float &Nano::PuppiMET_phiJERDown() {
    if (!loaded_PuppiMET_phiJERDown_) counter_uncached_PuppiMET_phiJERDown_++;
    else counter_cached_PuppiMET_phiJERDown_++;
    if (!loaded_PuppiMET_phiJERDown_) {
        if (!b_PuppiMET_phiJERDown_) throw std::runtime_error("PuppiMET_phiJERDown branch doesn't exist");
        b_PuppiMET_phiJERDown_->GetEntry(index);
        loaded_PuppiMET_phiJERDown_ = true;
    }
    return PuppiMET_phiJERDown_;
}
const float &Nano::PuppiMET_phiJERUp() {
    if (!loaded_PuppiMET_phiJERUp_) counter_uncached_PuppiMET_phiJERUp_++;
    else counter_cached_PuppiMET_phiJERUp_++;
    if (!loaded_PuppiMET_phiJERUp_) {
        if (!b_PuppiMET_phiJERUp_) throw std::runtime_error("PuppiMET_phiJERUp branch doesn't exist");
        b_PuppiMET_phiJERUp_->GetEntry(index);
        loaded_PuppiMET_phiJERUp_ = true;
    }
    return PuppiMET_phiJERUp_;
}
const float &Nano::PuppiMET_phiJESDown() {
    if (!loaded_PuppiMET_phiJESDown_) counter_uncached_PuppiMET_phiJESDown_++;
    else counter_cached_PuppiMET_phiJESDown_++;
    if (!loaded_PuppiMET_phiJESDown_) {
        if (!b_PuppiMET_phiJESDown_) throw std::runtime_error("PuppiMET_phiJESDown branch doesn't exist");
        b_PuppiMET_phiJESDown_->GetEntry(index);
        loaded_PuppiMET_phiJESDown_ = true;
    }
    return PuppiMET_phiJESDown_;
}
const float &Nano::PuppiMET_phiJESUp() {
    if (!loaded_PuppiMET_phiJESUp_) counter_uncached_PuppiMET_phiJESUp_++;
    else counter_cached_PuppiMET_phiJESUp_++;
    if (!loaded_PuppiMET_phiJESUp_) {
        if (!b_PuppiMET_phiJESUp_) throw std::runtime_error("PuppiMET_phiJESUp branch doesn't exist");
        b_PuppiMET_phiJESUp_->GetEntry(index);
        loaded_PuppiMET_phiJESUp_ = true;
    }
    return PuppiMET_phiJESUp_;
}
const float &Nano::PuppiMET_phiUnclusteredDown() {
    if (!loaded_PuppiMET_phiUnclusteredDown_) counter_uncached_PuppiMET_phiUnclusteredDown_++;
    else counter_cached_PuppiMET_phiUnclusteredDown_++;
    if (!loaded_PuppiMET_phiUnclusteredDown_) {
        if (!b_PuppiMET_phiUnclusteredDown_) throw std::runtime_error("PuppiMET_phiUnclusteredDown branch doesn't exist");
        b_PuppiMET_phiUnclusteredDown_->GetEntry(index);
        loaded_PuppiMET_phiUnclusteredDown_ = true;
    }
    return PuppiMET_phiUnclusteredDown_;
}
const float &Nano::PuppiMET_phiUnclusteredUp() {
    if (!loaded_PuppiMET_phiUnclusteredUp_) counter_uncached_PuppiMET_phiUnclusteredUp_++;
    else counter_cached_PuppiMET_phiUnclusteredUp_++;
    if (!loaded_PuppiMET_phiUnclusteredUp_) {
        if (!b_PuppiMET_phiUnclusteredUp_) throw std::runtime_error("PuppiMET_phiUnclusteredUp branch doesn't exist");
        b_PuppiMET_phiUnclusteredUp_->GetEntry(index);
        loaded_PuppiMET_phiUnclusteredUp_ = true;
    }
    return PuppiMET_phiUnclusteredUp_;
}
const float &Nano::PuppiMET_pt() {
    if (!loaded_PuppiMET_pt_) counter_uncached_PuppiMET_pt_++;
    else counter_cached_PuppiMET_pt_++;
    if (!loaded_PuppiMET_pt_) {
        if (!b_PuppiMET_pt_) throw std::runtime_error("PuppiMET_pt branch doesn't exist");
        b_PuppiMET_pt_->GetEntry(index);
        loaded_PuppiMET_pt_ = true;
    }
    return PuppiMET_pt_;
}
const float &Nano::PuppiMET_ptJERDown() {
    if (!loaded_PuppiMET_ptJERDown_) counter_uncached_PuppiMET_ptJERDown_++;
    else counter_cached_PuppiMET_ptJERDown_++;
    if (!loaded_PuppiMET_ptJERDown_) {
        if (!b_PuppiMET_ptJERDown_) throw std::runtime_error("PuppiMET_ptJERDown branch doesn't exist");
        b_PuppiMET_ptJERDown_->GetEntry(index);
        loaded_PuppiMET_ptJERDown_ = true;
    }
    return PuppiMET_ptJERDown_;
}
const float &Nano::PuppiMET_ptJERUp() {
    if (!loaded_PuppiMET_ptJERUp_) counter_uncached_PuppiMET_ptJERUp_++;
    else counter_cached_PuppiMET_ptJERUp_++;
    if (!loaded_PuppiMET_ptJERUp_) {
        if (!b_PuppiMET_ptJERUp_) throw std::runtime_error("PuppiMET_ptJERUp branch doesn't exist");
        b_PuppiMET_ptJERUp_->GetEntry(index);
        loaded_PuppiMET_ptJERUp_ = true;
    }
    return PuppiMET_ptJERUp_;
}
const float &Nano::PuppiMET_ptJESDown() {
    if (!loaded_PuppiMET_ptJESDown_) counter_uncached_PuppiMET_ptJESDown_++;
    else counter_cached_PuppiMET_ptJESDown_++;
    if (!loaded_PuppiMET_ptJESDown_) {
        if (!b_PuppiMET_ptJESDown_) throw std::runtime_error("PuppiMET_ptJESDown branch doesn't exist");
        b_PuppiMET_ptJESDown_->GetEntry(index);
        loaded_PuppiMET_ptJESDown_ = true;
    }
    return PuppiMET_ptJESDown_;
}
const float &Nano::PuppiMET_ptJESUp() {
    if (!loaded_PuppiMET_ptJESUp_) counter_uncached_PuppiMET_ptJESUp_++;
    else counter_cached_PuppiMET_ptJESUp_++;
    if (!loaded_PuppiMET_ptJESUp_) {
        if (!b_PuppiMET_ptJESUp_) throw std::runtime_error("PuppiMET_ptJESUp branch doesn't exist");
        b_PuppiMET_ptJESUp_->GetEntry(index);
        loaded_PuppiMET_ptJESUp_ = true;
    }
    return PuppiMET_ptJESUp_;
}
const float &Nano::PuppiMET_ptUnclusteredDown() {
    if (!loaded_PuppiMET_ptUnclusteredDown_) counter_uncached_PuppiMET_ptUnclusteredDown_++;
    else counter_cached_PuppiMET_ptUnclusteredDown_++;
    if (!loaded_PuppiMET_ptUnclusteredDown_) {
        if (!b_PuppiMET_ptUnclusteredDown_) throw std::runtime_error("PuppiMET_ptUnclusteredDown branch doesn't exist");
        b_PuppiMET_ptUnclusteredDown_->GetEntry(index);
        loaded_PuppiMET_ptUnclusteredDown_ = true;
    }
    return PuppiMET_ptUnclusteredDown_;
}
const float &Nano::PuppiMET_ptUnclusteredUp() {
    if (!loaded_PuppiMET_ptUnclusteredUp_) counter_uncached_PuppiMET_ptUnclusteredUp_++;
    else counter_cached_PuppiMET_ptUnclusteredUp_++;
    if (!loaded_PuppiMET_ptUnclusteredUp_) {
        if (!b_PuppiMET_ptUnclusteredUp_) throw std::runtime_error("PuppiMET_ptUnclusteredUp branch doesn't exist");
        b_PuppiMET_ptUnclusteredUp_->GetEntry(index);
        loaded_PuppiMET_ptUnclusteredUp_ = true;
    }
    return PuppiMET_ptUnclusteredUp_;
}
const float &Nano::PuppiMET_sumEt() {
    if (!loaded_PuppiMET_sumEt_) counter_uncached_PuppiMET_sumEt_++;
    else counter_cached_PuppiMET_sumEt_++;
    if (!loaded_PuppiMET_sumEt_) {
        if (!b_PuppiMET_sumEt_) throw std::runtime_error("PuppiMET_sumEt branch doesn't exist");
        b_PuppiMET_sumEt_->GetEntry(index);
        loaded_PuppiMET_sumEt_ = true;
    }
    return PuppiMET_sumEt_;
}
const float &Nano::RawMET_phi() {
    if (!loaded_RawMET_phi_) counter_uncached_RawMET_phi_++;
    else counter_cached_RawMET_phi_++;
    if (!loaded_RawMET_phi_) {
        if (!b_RawMET_phi_) throw std::runtime_error("RawMET_phi branch doesn't exist");
        b_RawMET_phi_->GetEntry(index);
        loaded_RawMET_phi_ = true;
    }
    return RawMET_phi_;
}
const float &Nano::RawMET_pt() {
    if (!loaded_RawMET_pt_) counter_uncached_RawMET_pt_++;
    else counter_cached_RawMET_pt_++;
    if (!loaded_RawMET_pt_) {
        if (!b_RawMET_pt_) throw std::runtime_error("RawMET_pt branch doesn't exist");
        b_RawMET_pt_->GetEntry(index);
        loaded_RawMET_pt_ = true;
    }
    return RawMET_pt_;
}
const float &Nano::RawMET_sumEt() {
    if (!loaded_RawMET_sumEt_) counter_uncached_RawMET_sumEt_++;
    else counter_cached_RawMET_sumEt_++;
    if (!loaded_RawMET_sumEt_) {
        if (!b_RawMET_sumEt_) throw std::runtime_error("RawMET_sumEt branch doesn't exist");
        b_RawMET_sumEt_->GetEntry(index);
        loaded_RawMET_sumEt_ = true;
    }
    return RawMET_sumEt_;
}
const float &Nano::RawPuppiMET_phi() {
    if (!loaded_RawPuppiMET_phi_) counter_uncached_RawPuppiMET_phi_++;
    else counter_cached_RawPuppiMET_phi_++;
    if (!loaded_RawPuppiMET_phi_) {
        if (!b_RawPuppiMET_phi_) throw std::runtime_error("RawPuppiMET_phi branch doesn't exist");
        b_RawPuppiMET_phi_->GetEntry(index);
        loaded_RawPuppiMET_phi_ = true;
    }
    return RawPuppiMET_phi_;
}
const float &Nano::RawPuppiMET_pt() {
    if (!loaded_RawPuppiMET_pt_) counter_uncached_RawPuppiMET_pt_++;
    else counter_cached_RawPuppiMET_pt_++;
    if (!loaded_RawPuppiMET_pt_) {
        if (!b_RawPuppiMET_pt_) throw std::runtime_error("RawPuppiMET_pt branch doesn't exist");
        b_RawPuppiMET_pt_->GetEntry(index);
        loaded_RawPuppiMET_pt_ = true;
    }
    return RawPuppiMET_pt_;
}
const float &Nano::RawPuppiMET_sumEt() {
    if (!loaded_RawPuppiMET_sumEt_) counter_uncached_RawPuppiMET_sumEt_++;
    else counter_cached_RawPuppiMET_sumEt_++;
    if (!loaded_RawPuppiMET_sumEt_) {
        if (!b_RawPuppiMET_sumEt_) throw std::runtime_error("RawPuppiMET_sumEt branch doesn't exist");
        b_RawPuppiMET_sumEt_->GetEntry(index);
        loaded_RawPuppiMET_sumEt_ = true;
    }
    return RawPuppiMET_sumEt_;
}
const float &Nano::Rho_fixedGridRhoAll() {
    if (!loaded_Rho_fixedGridRhoAll_) counter_uncached_Rho_fixedGridRhoAll_++;
    else counter_cached_Rho_fixedGridRhoAll_++;
    if (!loaded_Rho_fixedGridRhoAll_) {
        if (!b_Rho_fixedGridRhoAll_) throw std::runtime_error("Rho_fixedGridRhoAll branch doesn't exist");
        b_Rho_fixedGridRhoAll_->GetEntry(index);
        loaded_Rho_fixedGridRhoAll_ = true;
    }
    return Rho_fixedGridRhoAll_;
}
const float &Nano::Rho_fixedGridRhoFastjetAll() {
    if (!loaded_Rho_fixedGridRhoFastjetAll_) counter_uncached_Rho_fixedGridRhoFastjetAll_++;
    else counter_cached_Rho_fixedGridRhoFastjetAll_++;
    if (!loaded_Rho_fixedGridRhoFastjetAll_) {
        if (!b_Rho_fixedGridRhoFastjetAll_) throw std::runtime_error("Rho_fixedGridRhoFastjetAll branch doesn't exist");
        b_Rho_fixedGridRhoFastjetAll_->GetEntry(index);
        loaded_Rho_fixedGridRhoFastjetAll_ = true;
    }
    return Rho_fixedGridRhoFastjetAll_;
}
const float &Nano::Rho_fixedGridRhoFastjetCentral() {
    if (!loaded_Rho_fixedGridRhoFastjetCentral_) counter_uncached_Rho_fixedGridRhoFastjetCentral_++;
    else counter_cached_Rho_fixedGridRhoFastjetCentral_++;
    if (!loaded_Rho_fixedGridRhoFastjetCentral_) {
        if (!b_Rho_fixedGridRhoFastjetCentral_) throw std::runtime_error("Rho_fixedGridRhoFastjetCentral branch doesn't exist");
        b_Rho_fixedGridRhoFastjetCentral_->GetEntry(index);
        loaded_Rho_fixedGridRhoFastjetCentral_ = true;
    }
    return Rho_fixedGridRhoFastjetCentral_;
}
const float &Nano::Rho_fixedGridRhoFastjetCentralCalo() {
    if (!loaded_Rho_fixedGridRhoFastjetCentralCalo_) counter_uncached_Rho_fixedGridRhoFastjetCentralCalo_++;
    else counter_cached_Rho_fixedGridRhoFastjetCentralCalo_++;
    if (!loaded_Rho_fixedGridRhoFastjetCentralCalo_) {
        if (!b_Rho_fixedGridRhoFastjetCentralCalo_) throw std::runtime_error("Rho_fixedGridRhoFastjetCentralCalo branch doesn't exist");
        b_Rho_fixedGridRhoFastjetCentralCalo_->GetEntry(index);
        loaded_Rho_fixedGridRhoFastjetCentralCalo_ = true;
    }
    return Rho_fixedGridRhoFastjetCentralCalo_;
}
const float &Nano::Rho_fixedGridRhoFastjetCentralChargedPileUp() {
    if (!loaded_Rho_fixedGridRhoFastjetCentralChargedPileUp_) counter_uncached_Rho_fixedGridRhoFastjetCentralChargedPileUp_++;
    else counter_cached_Rho_fixedGridRhoFastjetCentralChargedPileUp_++;
    if (!loaded_Rho_fixedGridRhoFastjetCentralChargedPileUp_) {
        if (!b_Rho_fixedGridRhoFastjetCentralChargedPileUp_) throw std::runtime_error("Rho_fixedGridRhoFastjetCentralChargedPileUp branch doesn't exist");
        b_Rho_fixedGridRhoFastjetCentralChargedPileUp_->GetEntry(index);
        loaded_Rho_fixedGridRhoFastjetCentralChargedPileUp_ = true;
    }
    return Rho_fixedGridRhoFastjetCentralChargedPileUp_;
}
const float &Nano::Rho_fixedGridRhoFastjetCentralNeutral() {
    if (!loaded_Rho_fixedGridRhoFastjetCentralNeutral_) counter_uncached_Rho_fixedGridRhoFastjetCentralNeutral_++;
    else counter_cached_Rho_fixedGridRhoFastjetCentralNeutral_++;
    if (!loaded_Rho_fixedGridRhoFastjetCentralNeutral_) {
        if (!b_Rho_fixedGridRhoFastjetCentralNeutral_) throw std::runtime_error("Rho_fixedGridRhoFastjetCentralNeutral branch doesn't exist");
        b_Rho_fixedGridRhoFastjetCentralNeutral_->GetEntry(index);
        loaded_Rho_fixedGridRhoFastjetCentralNeutral_ = true;
    }
    return Rho_fixedGridRhoFastjetCentralNeutral_;
}
const vector<int> &Nano::SV_charge() {
    if (!loaded_SV_charge_) counter_uncached_SV_charge_++;
    else counter_cached_SV_charge_++;
    if (!loaded_SV_charge_) {
        if (!b_SV_charge_) throw std::runtime_error("SV_charge branch doesn't exist");
        int bytes = b_SV_charge_->GetEntry(index);
        v_SV_charge_ = vector<int>(SV_charge_,SV_charge_+bytes/sizeof(SV_charge_[0]));
        loaded_SV_charge_ = true;
    }
    return v_SV_charge_;
}
const vector<float> &Nano::SV_chi2() {
    if (!loaded_SV_chi2_) counter_uncached_SV_chi2_++;
    else counter_cached_SV_chi2_++;
    if (!loaded_SV_chi2_) {
        if (!b_SV_chi2_) throw std::runtime_error("SV_chi2 branch doesn't exist");
        int bytes = b_SV_chi2_->GetEntry(index);
        v_SV_chi2_ = vector<float>(SV_chi2_,SV_chi2_+bytes/sizeof(SV_chi2_[0]));
        loaded_SV_chi2_ = true;
    }
    return v_SV_chi2_;
}
const vector<float> &Nano::SV_dlen() {
    if (!loaded_SV_dlen_) counter_uncached_SV_dlen_++;
    else counter_cached_SV_dlen_++;
    if (!loaded_SV_dlen_) {
        if (!b_SV_dlen_) throw std::runtime_error("SV_dlen branch doesn't exist");
        int bytes = b_SV_dlen_->GetEntry(index);
        v_SV_dlen_ = vector<float>(SV_dlen_,SV_dlen_+bytes/sizeof(SV_dlen_[0]));
        loaded_SV_dlen_ = true;
    }
    return v_SV_dlen_;
}
const vector<float> &Nano::SV_dlenSig() {
    if (!loaded_SV_dlenSig_) counter_uncached_SV_dlenSig_++;
    else counter_cached_SV_dlenSig_++;
    if (!loaded_SV_dlenSig_) {
        if (!b_SV_dlenSig_) throw std::runtime_error("SV_dlenSig branch doesn't exist");
        int bytes = b_SV_dlenSig_->GetEntry(index);
        v_SV_dlenSig_ = vector<float>(SV_dlenSig_,SV_dlenSig_+bytes/sizeof(SV_dlenSig_[0]));
        loaded_SV_dlenSig_ = true;
    }
    return v_SV_dlenSig_;
}
const vector<float> &Nano::SV_dxy() {
    if (!loaded_SV_dxy_) counter_uncached_SV_dxy_++;
    else counter_cached_SV_dxy_++;
    if (!loaded_SV_dxy_) {
        if (!b_SV_dxy_) throw std::runtime_error("SV_dxy branch doesn't exist");
        int bytes = b_SV_dxy_->GetEntry(index);
        v_SV_dxy_ = vector<float>(SV_dxy_,SV_dxy_+bytes/sizeof(SV_dxy_[0]));
        loaded_SV_dxy_ = true;
    }
    return v_SV_dxy_;
}
const vector<float> &Nano::SV_dxySig() {
    if (!loaded_SV_dxySig_) counter_uncached_SV_dxySig_++;
    else counter_cached_SV_dxySig_++;
    if (!loaded_SV_dxySig_) {
        if (!b_SV_dxySig_) throw std::runtime_error("SV_dxySig branch doesn't exist");
        int bytes = b_SV_dxySig_->GetEntry(index);
        v_SV_dxySig_ = vector<float>(SV_dxySig_,SV_dxySig_+bytes/sizeof(SV_dxySig_[0]));
        loaded_SV_dxySig_ = true;
    }
    return v_SV_dxySig_;
}
const vector<float> &Nano::SV_eta() {
    if (!loaded_SV_eta_) counter_uncached_SV_eta_++;
    else counter_cached_SV_eta_++;
    if (!loaded_SV_eta_) {
        if (!b_SV_eta_) throw std::runtime_error("SV_eta branch doesn't exist");
        int bytes = b_SV_eta_->GetEntry(index);
        v_SV_eta_ = vector<float>(SV_eta_,SV_eta_+bytes/sizeof(SV_eta_[0]));
        loaded_SV_eta_ = true;
    }
    return v_SV_eta_;
}
const vector<float> &Nano::SV_mass() {
    if (!loaded_SV_mass_) counter_uncached_SV_mass_++;
    else counter_cached_SV_mass_++;
    if (!loaded_SV_mass_) {
        if (!b_SV_mass_) throw std::runtime_error("SV_mass branch doesn't exist");
        int bytes = b_SV_mass_->GetEntry(index);
        v_SV_mass_ = vector<float>(SV_mass_,SV_mass_+bytes/sizeof(SV_mass_[0]));
        loaded_SV_mass_ = true;
    }
    return v_SV_mass_;
}
const vector<float> &Nano::SV_ndof() {
    if (!loaded_SV_ndof_) counter_uncached_SV_ndof_++;
    else counter_cached_SV_ndof_++;
    if (!loaded_SV_ndof_) {
        if (!b_SV_ndof_) throw std::runtime_error("SV_ndof branch doesn't exist");
        int bytes = b_SV_ndof_->GetEntry(index);
        v_SV_ndof_ = vector<float>(SV_ndof_,SV_ndof_+bytes/sizeof(SV_ndof_[0]));
        loaded_SV_ndof_ = true;
    }
    return v_SV_ndof_;
}
const vector<UChar_t> &Nano::SV_ntracks() {
    if (!loaded_SV_ntracks_) counter_uncached_SV_ntracks_++;
    else counter_cached_SV_ntracks_++;
    if (!loaded_SV_ntracks_) {
        if (!b_SV_ntracks_) throw std::runtime_error("SV_ntracks branch doesn't exist");
        int bytes = b_SV_ntracks_->GetEntry(index);
        v_SV_ntracks_ = vector<UChar_t>(SV_ntracks_,SV_ntracks_+bytes/sizeof(SV_ntracks_[0]));
        loaded_SV_ntracks_ = true;
    }
    return v_SV_ntracks_;
}
const vector<LorentzVector> &Nano::SV_p4() {
    if (!loaded_SV_p4_) counter_uncached_SV_p4_++;
    else counter_cached_SV_p4_++;
    if (!loaded_SV_p4_) {
        v_SV_p4_.clear();
        vector<float> pts = Nano::SV_pt();
        vector<float> etas = Nano::SV_eta();
        vector<float> phis = Nano::SV_phi();
        vector<float> masses = Nano::SV_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_SV_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_SV_p4_ = true;
    }
    return v_SV_p4_;
}
const vector<float> &Nano::SV_pAngle() {
    if (!loaded_SV_pAngle_) counter_uncached_SV_pAngle_++;
    else counter_cached_SV_pAngle_++;
    if (!loaded_SV_pAngle_) {
        if (!b_SV_pAngle_) throw std::runtime_error("SV_pAngle branch doesn't exist");
        int bytes = b_SV_pAngle_->GetEntry(index);
        v_SV_pAngle_ = vector<float>(SV_pAngle_,SV_pAngle_+bytes/sizeof(SV_pAngle_[0]));
        loaded_SV_pAngle_ = true;
    }
    return v_SV_pAngle_;
}
const vector<float> &Nano::SV_phi() {
    if (!loaded_SV_phi_) counter_uncached_SV_phi_++;
    else counter_cached_SV_phi_++;
    if (!loaded_SV_phi_) {
        if (!b_SV_phi_) throw std::runtime_error("SV_phi branch doesn't exist");
        int bytes = b_SV_phi_->GetEntry(index);
        v_SV_phi_ = vector<float>(SV_phi_,SV_phi_+bytes/sizeof(SV_phi_[0]));
        loaded_SV_phi_ = true;
    }
    return v_SV_phi_;
}
const vector<float> &Nano::SV_pt() {
    if (!loaded_SV_pt_) counter_uncached_SV_pt_++;
    else counter_cached_SV_pt_++;
    if (!loaded_SV_pt_) {
        if (!b_SV_pt_) throw std::runtime_error("SV_pt branch doesn't exist");
        int bytes = b_SV_pt_->GetEntry(index);
        v_SV_pt_ = vector<float>(SV_pt_,SV_pt_+bytes/sizeof(SV_pt_[0]));
        loaded_SV_pt_ = true;
    }
    return v_SV_pt_;
}
const vector<float> &Nano::SV_x() {
    if (!loaded_SV_x_) counter_uncached_SV_x_++;
    else counter_cached_SV_x_++;
    if (!loaded_SV_x_) {
        if (!b_SV_x_) throw std::runtime_error("SV_x branch doesn't exist");
        int bytes = b_SV_x_->GetEntry(index);
        v_SV_x_ = vector<float>(SV_x_,SV_x_+bytes/sizeof(SV_x_[0]));
        loaded_SV_x_ = true;
    }
    return v_SV_x_;
}
const vector<float> &Nano::SV_y() {
    if (!loaded_SV_y_) counter_uncached_SV_y_++;
    else counter_cached_SV_y_++;
    if (!loaded_SV_y_) {
        if (!b_SV_y_) throw std::runtime_error("SV_y branch doesn't exist");
        int bytes = b_SV_y_->GetEntry(index);
        v_SV_y_ = vector<float>(SV_y_,SV_y_+bytes/sizeof(SV_y_[0]));
        loaded_SV_y_ = true;
    }
    return v_SV_y_;
}
const vector<float> &Nano::SV_z() {
    if (!loaded_SV_z_) counter_uncached_SV_z_++;
    else counter_cached_SV_z_++;
    if (!loaded_SV_z_) {
        if (!b_SV_z_) throw std::runtime_error("SV_z branch doesn't exist");
        int bytes = b_SV_z_->GetEntry(index);
        v_SV_z_ = vector<float>(SV_z_,SV_z_+bytes/sizeof(SV_z_[0]));
        loaded_SV_z_ = true;
    }
    return v_SV_z_;
}
const float &Nano::SoftActivityJetHT() {
    if (!loaded_SoftActivityJetHT_) counter_uncached_SoftActivityJetHT_++;
    else counter_cached_SoftActivityJetHT_++;
    if (!loaded_SoftActivityJetHT_) {
        if (!b_SoftActivityJetHT_) throw std::runtime_error("SoftActivityJetHT branch doesn't exist");
        b_SoftActivityJetHT_->GetEntry(index);
        loaded_SoftActivityJetHT_ = true;
    }
    return SoftActivityJetHT_;
}
const float &Nano::SoftActivityJetHT10() {
    if (!loaded_SoftActivityJetHT10_) counter_uncached_SoftActivityJetHT10_++;
    else counter_cached_SoftActivityJetHT10_++;
    if (!loaded_SoftActivityJetHT10_) {
        if (!b_SoftActivityJetHT10_) throw std::runtime_error("SoftActivityJetHT10 branch doesn't exist");
        b_SoftActivityJetHT10_->GetEntry(index);
        loaded_SoftActivityJetHT10_ = true;
    }
    return SoftActivityJetHT10_;
}
const float &Nano::SoftActivityJetHT2() {
    if (!loaded_SoftActivityJetHT2_) counter_uncached_SoftActivityJetHT2_++;
    else counter_cached_SoftActivityJetHT2_++;
    if (!loaded_SoftActivityJetHT2_) {
        if (!b_SoftActivityJetHT2_) throw std::runtime_error("SoftActivityJetHT2 branch doesn't exist");
        b_SoftActivityJetHT2_->GetEntry(index);
        loaded_SoftActivityJetHT2_ = true;
    }
    return SoftActivityJetHT2_;
}
const float &Nano::SoftActivityJetHT5() {
    if (!loaded_SoftActivityJetHT5_) counter_uncached_SoftActivityJetHT5_++;
    else counter_cached_SoftActivityJetHT5_++;
    if (!loaded_SoftActivityJetHT5_) {
        if (!b_SoftActivityJetHT5_) throw std::runtime_error("SoftActivityJetHT5 branch doesn't exist");
        b_SoftActivityJetHT5_->GetEntry(index);
        loaded_SoftActivityJetHT5_ = true;
    }
    return SoftActivityJetHT5_;
}
const int &Nano::SoftActivityJetNjets10() {
    if (!loaded_SoftActivityJetNjets10_) counter_uncached_SoftActivityJetNjets10_++;
    else counter_cached_SoftActivityJetNjets10_++;
    if (!loaded_SoftActivityJetNjets10_) {
        if (!b_SoftActivityJetNjets10_) throw std::runtime_error("SoftActivityJetNjets10 branch doesn't exist");
        b_SoftActivityJetNjets10_->GetEntry(index);
        loaded_SoftActivityJetNjets10_ = true;
    }
    return SoftActivityJetNjets10_;
}
const int &Nano::SoftActivityJetNjets2() {
    if (!loaded_SoftActivityJetNjets2_) counter_uncached_SoftActivityJetNjets2_++;
    else counter_cached_SoftActivityJetNjets2_++;
    if (!loaded_SoftActivityJetNjets2_) {
        if (!b_SoftActivityJetNjets2_) throw std::runtime_error("SoftActivityJetNjets2 branch doesn't exist");
        b_SoftActivityJetNjets2_->GetEntry(index);
        loaded_SoftActivityJetNjets2_ = true;
    }
    return SoftActivityJetNjets2_;
}
const int &Nano::SoftActivityJetNjets5() {
    if (!loaded_SoftActivityJetNjets5_) counter_uncached_SoftActivityJetNjets5_++;
    else counter_cached_SoftActivityJetNjets5_++;
    if (!loaded_SoftActivityJetNjets5_) {
        if (!b_SoftActivityJetNjets5_) throw std::runtime_error("SoftActivityJetNjets5 branch doesn't exist");
        b_SoftActivityJetNjets5_->GetEntry(index);
        loaded_SoftActivityJetNjets5_ = true;
    }
    return SoftActivityJetNjets5_;
}
const vector<float> &Nano::SoftActivityJet_eta() {
    if (!loaded_SoftActivityJet_eta_) counter_uncached_SoftActivityJet_eta_++;
    else counter_cached_SoftActivityJet_eta_++;
    if (!loaded_SoftActivityJet_eta_) {
        if (!b_SoftActivityJet_eta_) throw std::runtime_error("SoftActivityJet_eta branch doesn't exist");
        int bytes = b_SoftActivityJet_eta_->GetEntry(index);
        v_SoftActivityJet_eta_ = vector<float>(SoftActivityJet_eta_,SoftActivityJet_eta_+bytes/sizeof(SoftActivityJet_eta_[0]));
        loaded_SoftActivityJet_eta_ = true;
    }
    return v_SoftActivityJet_eta_;
}
const vector<float> &Nano::SoftActivityJet_phi() {
    if (!loaded_SoftActivityJet_phi_) counter_uncached_SoftActivityJet_phi_++;
    else counter_cached_SoftActivityJet_phi_++;
    if (!loaded_SoftActivityJet_phi_) {
        if (!b_SoftActivityJet_phi_) throw std::runtime_error("SoftActivityJet_phi branch doesn't exist");
        int bytes = b_SoftActivityJet_phi_->GetEntry(index);
        v_SoftActivityJet_phi_ = vector<float>(SoftActivityJet_phi_,SoftActivityJet_phi_+bytes/sizeof(SoftActivityJet_phi_[0]));
        loaded_SoftActivityJet_phi_ = true;
    }
    return v_SoftActivityJet_phi_;
}
const vector<float> &Nano::SoftActivityJet_pt() {
    if (!loaded_SoftActivityJet_pt_) counter_uncached_SoftActivityJet_pt_++;
    else counter_cached_SoftActivityJet_pt_++;
    if (!loaded_SoftActivityJet_pt_) {
        if (!b_SoftActivityJet_pt_) throw std::runtime_error("SoftActivityJet_pt branch doesn't exist");
        int bytes = b_SoftActivityJet_pt_->GetEntry(index);
        v_SoftActivityJet_pt_ = vector<float>(SoftActivityJet_pt_,SoftActivityJet_pt_+bytes/sizeof(SoftActivityJet_pt_[0]));
        loaded_SoftActivityJet_pt_ = true;
    }
    return v_SoftActivityJet_pt_;
}
const vector<float> &Nano::SubGenJetAK8_eta() {
    if (!loaded_SubGenJetAK8_eta_) counter_uncached_SubGenJetAK8_eta_++;
    else counter_cached_SubGenJetAK8_eta_++;
    if (!loaded_SubGenJetAK8_eta_) {
        if (!b_SubGenJetAK8_eta_) throw std::runtime_error("SubGenJetAK8_eta branch doesn't exist");
        int bytes = b_SubGenJetAK8_eta_->GetEntry(index);
        v_SubGenJetAK8_eta_ = vector<float>(SubGenJetAK8_eta_,SubGenJetAK8_eta_+bytes/sizeof(SubGenJetAK8_eta_[0]));
        loaded_SubGenJetAK8_eta_ = true;
    }
    return v_SubGenJetAK8_eta_;
}
const vector<float> &Nano::SubGenJetAK8_mass() {
    if (!loaded_SubGenJetAK8_mass_) counter_uncached_SubGenJetAK8_mass_++;
    else counter_cached_SubGenJetAK8_mass_++;
    if (!loaded_SubGenJetAK8_mass_) {
        if (!b_SubGenJetAK8_mass_) throw std::runtime_error("SubGenJetAK8_mass branch doesn't exist");
        int bytes = b_SubGenJetAK8_mass_->GetEntry(index);
        v_SubGenJetAK8_mass_ = vector<float>(SubGenJetAK8_mass_,SubGenJetAK8_mass_+bytes/sizeof(SubGenJetAK8_mass_[0]));
        loaded_SubGenJetAK8_mass_ = true;
    }
    return v_SubGenJetAK8_mass_;
}
const vector<LorentzVector> &Nano::SubGenJetAK8_p4() {
    if (!loaded_SubGenJetAK8_p4_) counter_uncached_SubGenJetAK8_p4_++;
    else counter_cached_SubGenJetAK8_p4_++;
    if (!loaded_SubGenJetAK8_p4_) {
        v_SubGenJetAK8_p4_.clear();
        vector<float> pts = Nano::SubGenJetAK8_pt();
        vector<float> etas = Nano::SubGenJetAK8_eta();
        vector<float> phis = Nano::SubGenJetAK8_phi();
        vector<float> masses = Nano::SubGenJetAK8_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_SubGenJetAK8_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_SubGenJetAK8_p4_ = true;
    }
    return v_SubGenJetAK8_p4_;
}
const vector<float> &Nano::SubGenJetAK8_phi() {
    if (!loaded_SubGenJetAK8_phi_) counter_uncached_SubGenJetAK8_phi_++;
    else counter_cached_SubGenJetAK8_phi_++;
    if (!loaded_SubGenJetAK8_phi_) {
        if (!b_SubGenJetAK8_phi_) throw std::runtime_error("SubGenJetAK8_phi branch doesn't exist");
        int bytes = b_SubGenJetAK8_phi_->GetEntry(index);
        v_SubGenJetAK8_phi_ = vector<float>(SubGenJetAK8_phi_,SubGenJetAK8_phi_+bytes/sizeof(SubGenJetAK8_phi_[0]));
        loaded_SubGenJetAK8_phi_ = true;
    }
    return v_SubGenJetAK8_phi_;
}
const vector<float> &Nano::SubGenJetAK8_pt() {
    if (!loaded_SubGenJetAK8_pt_) counter_uncached_SubGenJetAK8_pt_++;
    else counter_cached_SubGenJetAK8_pt_++;
    if (!loaded_SubGenJetAK8_pt_) {
        if (!b_SubGenJetAK8_pt_) throw std::runtime_error("SubGenJetAK8_pt branch doesn't exist");
        int bytes = b_SubGenJetAK8_pt_->GetEntry(index);
        v_SubGenJetAK8_pt_ = vector<float>(SubGenJetAK8_pt_,SubGenJetAK8_pt_+bytes/sizeof(SubGenJetAK8_pt_[0]));
        loaded_SubGenJetAK8_pt_ = true;
    }
    return v_SubGenJetAK8_pt_;
}
const vector<float> &Nano::SubJet_btagCMVA() {
    if (!loaded_SubJet_btagCMVA_) counter_uncached_SubJet_btagCMVA_++;
    else counter_cached_SubJet_btagCMVA_++;
    if (!loaded_SubJet_btagCMVA_) {
        if (!b_SubJet_btagCMVA_) throw std::runtime_error("SubJet_btagCMVA branch doesn't exist");
        int bytes = b_SubJet_btagCMVA_->GetEntry(index);
        v_SubJet_btagCMVA_ = vector<float>(SubJet_btagCMVA_,SubJet_btagCMVA_+bytes/sizeof(SubJet_btagCMVA_[0]));
        loaded_SubJet_btagCMVA_ = true;
    }
    return v_SubJet_btagCMVA_;
}
const vector<float> &Nano::SubJet_btagCSVV2() {
    if (!loaded_SubJet_btagCSVV2_) counter_uncached_SubJet_btagCSVV2_++;
    else counter_cached_SubJet_btagCSVV2_++;
    if (!loaded_SubJet_btagCSVV2_) {
        if (!b_SubJet_btagCSVV2_) throw std::runtime_error("SubJet_btagCSVV2 branch doesn't exist");
        int bytes = b_SubJet_btagCSVV2_->GetEntry(index);
        v_SubJet_btagCSVV2_ = vector<float>(SubJet_btagCSVV2_,SubJet_btagCSVV2_+bytes/sizeof(SubJet_btagCSVV2_[0]));
        loaded_SubJet_btagCSVV2_ = true;
    }
    return v_SubJet_btagCSVV2_;
}
const vector<float> &Nano::SubJet_btagDeepB() {
    if (!loaded_SubJet_btagDeepB_) counter_uncached_SubJet_btagDeepB_++;
    else counter_cached_SubJet_btagDeepB_++;
    if (!loaded_SubJet_btagDeepB_) {
        if (!b_SubJet_btagDeepB_) throw std::runtime_error("SubJet_btagDeepB branch doesn't exist");
        int bytes = b_SubJet_btagDeepB_->GetEntry(index);
        v_SubJet_btagDeepB_ = vector<float>(SubJet_btagDeepB_,SubJet_btagDeepB_+bytes/sizeof(SubJet_btagDeepB_[0]));
        loaded_SubJet_btagDeepB_ = true;
    }
    return v_SubJet_btagDeepB_;
}
const vector<float> &Nano::SubJet_eta() {
    if (!loaded_SubJet_eta_) counter_uncached_SubJet_eta_++;
    else counter_cached_SubJet_eta_++;
    if (!loaded_SubJet_eta_) {
        if (!b_SubJet_eta_) throw std::runtime_error("SubJet_eta branch doesn't exist");
        int bytes = b_SubJet_eta_->GetEntry(index);
        v_SubJet_eta_ = vector<float>(SubJet_eta_,SubJet_eta_+bytes/sizeof(SubJet_eta_[0]));
        loaded_SubJet_eta_ = true;
    }
    return v_SubJet_eta_;
}
const vector<int> &Nano::SubJet_hadronFlavour() {
    if (!loaded_SubJet_hadronFlavour_) counter_uncached_SubJet_hadronFlavour_++;
    else counter_cached_SubJet_hadronFlavour_++;
    if (!loaded_SubJet_hadronFlavour_) {
        if (!b_SubJet_hadronFlavour_) throw std::runtime_error("SubJet_hadronFlavour branch doesn't exist");
        int bytes = b_SubJet_hadronFlavour_->GetEntry(index);
        v_SubJet_hadronFlavour_ = vector<int>(SubJet_hadronFlavour_,SubJet_hadronFlavour_+bytes/sizeof(SubJet_hadronFlavour_[0]));
        loaded_SubJet_hadronFlavour_ = true;
    }
    return v_SubJet_hadronFlavour_;
}
const vector<float> &Nano::SubJet_mass() {
    if (!loaded_SubJet_mass_) counter_uncached_SubJet_mass_++;
    else counter_cached_SubJet_mass_++;
    if (!loaded_SubJet_mass_) {
        if (!b_SubJet_mass_) throw std::runtime_error("SubJet_mass branch doesn't exist");
        int bytes = b_SubJet_mass_->GetEntry(index);
        v_SubJet_mass_ = vector<float>(SubJet_mass_,SubJet_mass_+bytes/sizeof(SubJet_mass_[0]));
        loaded_SubJet_mass_ = true;
    }
    return v_SubJet_mass_;
}
const vector<float> &Nano::SubJet_n2b1() {
    if (!loaded_SubJet_n2b1_) counter_uncached_SubJet_n2b1_++;
    else counter_cached_SubJet_n2b1_++;
    if (!loaded_SubJet_n2b1_) {
        if (!b_SubJet_n2b1_) throw std::runtime_error("SubJet_n2b1 branch doesn't exist");
        int bytes = b_SubJet_n2b1_->GetEntry(index);
        v_SubJet_n2b1_ = vector<float>(SubJet_n2b1_,SubJet_n2b1_+bytes/sizeof(SubJet_n2b1_[0]));
        loaded_SubJet_n2b1_ = true;
    }
    return v_SubJet_n2b1_;
}
const vector<float> &Nano::SubJet_n3b1() {
    if (!loaded_SubJet_n3b1_) counter_uncached_SubJet_n3b1_++;
    else counter_cached_SubJet_n3b1_++;
    if (!loaded_SubJet_n3b1_) {
        if (!b_SubJet_n3b1_) throw std::runtime_error("SubJet_n3b1 branch doesn't exist");
        int bytes = b_SubJet_n3b1_->GetEntry(index);
        v_SubJet_n3b1_ = vector<float>(SubJet_n3b1_,SubJet_n3b1_+bytes/sizeof(SubJet_n3b1_[0]));
        loaded_SubJet_n3b1_ = true;
    }
    return v_SubJet_n3b1_;
}
const vector<UChar_t> &Nano::SubJet_nBHadrons() {
    if (!loaded_SubJet_nBHadrons_) counter_uncached_SubJet_nBHadrons_++;
    else counter_cached_SubJet_nBHadrons_++;
    if (!loaded_SubJet_nBHadrons_) {
        if (!b_SubJet_nBHadrons_) throw std::runtime_error("SubJet_nBHadrons branch doesn't exist");
        int bytes = b_SubJet_nBHadrons_->GetEntry(index);
        v_SubJet_nBHadrons_ = vector<UChar_t>(SubJet_nBHadrons_,SubJet_nBHadrons_+bytes/sizeof(SubJet_nBHadrons_[0]));
        loaded_SubJet_nBHadrons_ = true;
    }
    return v_SubJet_nBHadrons_;
}
const vector<UChar_t> &Nano::SubJet_nCHadrons() {
    if (!loaded_SubJet_nCHadrons_) counter_uncached_SubJet_nCHadrons_++;
    else counter_cached_SubJet_nCHadrons_++;
    if (!loaded_SubJet_nCHadrons_) {
        if (!b_SubJet_nCHadrons_) throw std::runtime_error("SubJet_nCHadrons branch doesn't exist");
        int bytes = b_SubJet_nCHadrons_->GetEntry(index);
        v_SubJet_nCHadrons_ = vector<UChar_t>(SubJet_nCHadrons_,SubJet_nCHadrons_+bytes/sizeof(SubJet_nCHadrons_[0]));
        loaded_SubJet_nCHadrons_ = true;
    }
    return v_SubJet_nCHadrons_;
}
const vector<LorentzVector> &Nano::SubJet_p4() {
    if (!loaded_SubJet_p4_) counter_uncached_SubJet_p4_++;
    else counter_cached_SubJet_p4_++;
    if (!loaded_SubJet_p4_) {
        v_SubJet_p4_.clear();
        vector<float> pts = Nano::SubJet_pt();
        vector<float> etas = Nano::SubJet_eta();
        vector<float> phis = Nano::SubJet_phi();
        vector<float> masses = Nano::SubJet_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_SubJet_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_SubJet_p4_ = true;
    }
    return v_SubJet_p4_;
}
const vector<float> &Nano::SubJet_phi() {
    if (!loaded_SubJet_phi_) counter_uncached_SubJet_phi_++;
    else counter_cached_SubJet_phi_++;
    if (!loaded_SubJet_phi_) {
        if (!b_SubJet_phi_) throw std::runtime_error("SubJet_phi branch doesn't exist");
        int bytes = b_SubJet_phi_->GetEntry(index);
        v_SubJet_phi_ = vector<float>(SubJet_phi_,SubJet_phi_+bytes/sizeof(SubJet_phi_[0]));
        loaded_SubJet_phi_ = true;
    }
    return v_SubJet_phi_;
}
const vector<float> &Nano::SubJet_pt() {
    if (!loaded_SubJet_pt_) counter_uncached_SubJet_pt_++;
    else counter_cached_SubJet_pt_++;
    if (!loaded_SubJet_pt_) {
        if (!b_SubJet_pt_) throw std::runtime_error("SubJet_pt branch doesn't exist");
        int bytes = b_SubJet_pt_->GetEntry(index);
        v_SubJet_pt_ = vector<float>(SubJet_pt_,SubJet_pt_+bytes/sizeof(SubJet_pt_[0]));
        loaded_SubJet_pt_ = true;
    }
    return v_SubJet_pt_;
}
const vector<float> &Nano::SubJet_rawFactor() {
    if (!loaded_SubJet_rawFactor_) counter_uncached_SubJet_rawFactor_++;
    else counter_cached_SubJet_rawFactor_++;
    if (!loaded_SubJet_rawFactor_) {
        if (!b_SubJet_rawFactor_) throw std::runtime_error("SubJet_rawFactor branch doesn't exist");
        int bytes = b_SubJet_rawFactor_->GetEntry(index);
        v_SubJet_rawFactor_ = vector<float>(SubJet_rawFactor_,SubJet_rawFactor_+bytes/sizeof(SubJet_rawFactor_[0]));
        loaded_SubJet_rawFactor_ = true;
    }
    return v_SubJet_rawFactor_;
}
const vector<float> &Nano::SubJet_tau1() {
    if (!loaded_SubJet_tau1_) counter_uncached_SubJet_tau1_++;
    else counter_cached_SubJet_tau1_++;
    if (!loaded_SubJet_tau1_) {
        if (!b_SubJet_tau1_) throw std::runtime_error("SubJet_tau1 branch doesn't exist");
        int bytes = b_SubJet_tau1_->GetEntry(index);
        v_SubJet_tau1_ = vector<float>(SubJet_tau1_,SubJet_tau1_+bytes/sizeof(SubJet_tau1_[0]));
        loaded_SubJet_tau1_ = true;
    }
    return v_SubJet_tau1_;
}
const vector<float> &Nano::SubJet_tau2() {
    if (!loaded_SubJet_tau2_) counter_uncached_SubJet_tau2_++;
    else counter_cached_SubJet_tau2_++;
    if (!loaded_SubJet_tau2_) {
        if (!b_SubJet_tau2_) throw std::runtime_error("SubJet_tau2 branch doesn't exist");
        int bytes = b_SubJet_tau2_->GetEntry(index);
        v_SubJet_tau2_ = vector<float>(SubJet_tau2_,SubJet_tau2_+bytes/sizeof(SubJet_tau2_[0]));
        loaded_SubJet_tau2_ = true;
    }
    return v_SubJet_tau2_;
}
const vector<float> &Nano::SubJet_tau3() {
    if (!loaded_SubJet_tau3_) counter_uncached_SubJet_tau3_++;
    else counter_cached_SubJet_tau3_++;
    if (!loaded_SubJet_tau3_) {
        if (!b_SubJet_tau3_) throw std::runtime_error("SubJet_tau3 branch doesn't exist");
        int bytes = b_SubJet_tau3_->GetEntry(index);
        v_SubJet_tau3_ = vector<float>(SubJet_tau3_,SubJet_tau3_+bytes/sizeof(SubJet_tau3_[0]));
        loaded_SubJet_tau3_ = true;
    }
    return v_SubJet_tau3_;
}
const vector<float> &Nano::SubJet_tau4() {
    if (!loaded_SubJet_tau4_) counter_uncached_SubJet_tau4_++;
    else counter_cached_SubJet_tau4_++;
    if (!loaded_SubJet_tau4_) {
        if (!b_SubJet_tau4_) throw std::runtime_error("SubJet_tau4 branch doesn't exist");
        int bytes = b_SubJet_tau4_->GetEntry(index);
        v_SubJet_tau4_ = vector<float>(SubJet_tau4_,SubJet_tau4_+bytes/sizeof(SubJet_tau4_[0]));
        loaded_SubJet_tau4_ = true;
    }
    return v_SubJet_tau4_;
}
const vector<int> &Nano::Tau_charge() {
    if (!loaded_Tau_charge_) counter_uncached_Tau_charge_++;
    else counter_cached_Tau_charge_++;
    if (!loaded_Tau_charge_) {
        if (!b_Tau_charge_) throw std::runtime_error("Tau_charge branch doesn't exist");
        int bytes = b_Tau_charge_->GetEntry(index);
        v_Tau_charge_ = vector<int>(Tau_charge_,Tau_charge_+bytes/sizeof(Tau_charge_[0]));
        loaded_Tau_charge_ = true;
    }
    return v_Tau_charge_;
}
const vector<float> &Nano::Tau_chargedIso() {
    if (!loaded_Tau_chargedIso_) counter_uncached_Tau_chargedIso_++;
    else counter_cached_Tau_chargedIso_++;
    if (!loaded_Tau_chargedIso_) {
        if (!b_Tau_chargedIso_) throw std::runtime_error("Tau_chargedIso branch doesn't exist");
        int bytes = b_Tau_chargedIso_->GetEntry(index);
        v_Tau_chargedIso_ = vector<float>(Tau_chargedIso_,Tau_chargedIso_+bytes/sizeof(Tau_chargedIso_[0]));
        loaded_Tau_chargedIso_ = true;
    }
    return v_Tau_chargedIso_;
}
const vector<UChar_t> &Nano::Tau_cleanmask() {
    if (!loaded_Tau_cleanmask_) counter_uncached_Tau_cleanmask_++;
    else counter_cached_Tau_cleanmask_++;
    if (!loaded_Tau_cleanmask_) {
        if (!b_Tau_cleanmask_) throw std::runtime_error("Tau_cleanmask branch doesn't exist");
        int bytes = b_Tau_cleanmask_->GetEntry(index);
        v_Tau_cleanmask_ = vector<UChar_t>(Tau_cleanmask_,Tau_cleanmask_+bytes/sizeof(Tau_cleanmask_[0]));
        loaded_Tau_cleanmask_ = true;
    }
    return v_Tau_cleanmask_;
}
const vector<int> &Nano::Tau_decayMode() {
    if (!loaded_Tau_decayMode_) counter_uncached_Tau_decayMode_++;
    else counter_cached_Tau_decayMode_++;
    if (!loaded_Tau_decayMode_) {
        if (!b_Tau_decayMode_) throw std::runtime_error("Tau_decayMode branch doesn't exist");
        int bytes = b_Tau_decayMode_->GetEntry(index);
        v_Tau_decayMode_ = vector<int>(Tau_decayMode_,Tau_decayMode_+bytes/sizeof(Tau_decayMode_[0]));
        loaded_Tau_decayMode_ = true;
    }
    return v_Tau_decayMode_;
}
const vector<float> &Nano::Tau_dxy() {
    if (!loaded_Tau_dxy_) counter_uncached_Tau_dxy_++;
    else counter_cached_Tau_dxy_++;
    if (!loaded_Tau_dxy_) {
        if (!b_Tau_dxy_) throw std::runtime_error("Tau_dxy branch doesn't exist");
        int bytes = b_Tau_dxy_->GetEntry(index);
        v_Tau_dxy_ = vector<float>(Tau_dxy_,Tau_dxy_+bytes/sizeof(Tau_dxy_[0]));
        loaded_Tau_dxy_ = true;
    }
    return v_Tau_dxy_;
}
const vector<float> &Nano::Tau_dz() {
    if (!loaded_Tau_dz_) counter_uncached_Tau_dz_++;
    else counter_cached_Tau_dz_++;
    if (!loaded_Tau_dz_) {
        if (!b_Tau_dz_) throw std::runtime_error("Tau_dz branch doesn't exist");
        int bytes = b_Tau_dz_->GetEntry(index);
        v_Tau_dz_ = vector<float>(Tau_dz_,Tau_dz_+bytes/sizeof(Tau_dz_[0]));
        loaded_Tau_dz_ = true;
    }
    return v_Tau_dz_;
}
const vector<int> &Nano::Tau_eleIdx() {
    if (!loaded_Tau_eleIdx_) counter_uncached_Tau_eleIdx_++;
    else counter_cached_Tau_eleIdx_++;
    if (!loaded_Tau_eleIdx_) {
        if (!b_Tau_eleIdx_) throw std::runtime_error("Tau_eleIdx branch doesn't exist");
        int bytes = b_Tau_eleIdx_->GetEntry(index);
        v_Tau_eleIdx_ = vector<int>(Tau_eleIdx_,Tau_eleIdx_+bytes/sizeof(Tau_eleIdx_[0]));
        loaded_Tau_eleIdx_ = true;
    }
    return v_Tau_eleIdx_;
}
const vector<float> &Nano::Tau_eta() {
    if (!loaded_Tau_eta_) counter_uncached_Tau_eta_++;
    else counter_cached_Tau_eta_++;
    if (!loaded_Tau_eta_) {
        if (!b_Tau_eta_) throw std::runtime_error("Tau_eta branch doesn't exist");
        int bytes = b_Tau_eta_->GetEntry(index);
        v_Tau_eta_ = vector<float>(Tau_eta_,Tau_eta_+bytes/sizeof(Tau_eta_[0]));
        loaded_Tau_eta_ = true;
    }
    return v_Tau_eta_;
}
const vector<UChar_t> &Nano::Tau_genPartFlav() {
    if (!loaded_Tau_genPartFlav_) counter_uncached_Tau_genPartFlav_++;
    else counter_cached_Tau_genPartFlav_++;
    if (!loaded_Tau_genPartFlav_) {
        if (!b_Tau_genPartFlav_) throw std::runtime_error("Tau_genPartFlav branch doesn't exist");
        int bytes = b_Tau_genPartFlav_->GetEntry(index);
        v_Tau_genPartFlav_ = vector<UChar_t>(Tau_genPartFlav_,Tau_genPartFlav_+bytes/sizeof(Tau_genPartFlav_[0]));
        loaded_Tau_genPartFlav_ = true;
    }
    return v_Tau_genPartFlav_;
}
const vector<int> &Nano::Tau_genPartIdx() {
    if (!loaded_Tau_genPartIdx_) counter_uncached_Tau_genPartIdx_++;
    else counter_cached_Tau_genPartIdx_++;
    if (!loaded_Tau_genPartIdx_) {
        if (!b_Tau_genPartIdx_) throw std::runtime_error("Tau_genPartIdx branch doesn't exist");
        int bytes = b_Tau_genPartIdx_->GetEntry(index);
        v_Tau_genPartIdx_ = vector<int>(Tau_genPartIdx_,Tau_genPartIdx_+bytes/sizeof(Tau_genPartIdx_[0]));
        loaded_Tau_genPartIdx_ = true;
    }
    return v_Tau_genPartIdx_;
}
const vector<UChar_t> &Nano::Tau_idAntiEle() {
    if (!loaded_Tau_idAntiEle_) counter_uncached_Tau_idAntiEle_++;
    else counter_cached_Tau_idAntiEle_++;
    if (!loaded_Tau_idAntiEle_) {
        if (!b_Tau_idAntiEle_) throw std::runtime_error("Tau_idAntiEle branch doesn't exist");
        int bytes = b_Tau_idAntiEle_->GetEntry(index);
        v_Tau_idAntiEle_ = vector<UChar_t>(Tau_idAntiEle_,Tau_idAntiEle_+bytes/sizeof(Tau_idAntiEle_[0]));
        loaded_Tau_idAntiEle_ = true;
    }
    return v_Tau_idAntiEle_;
}
const vector<UChar_t> &Nano::Tau_idAntiEle2018() {
    if (!loaded_Tau_idAntiEle2018_) counter_uncached_Tau_idAntiEle2018_++;
    else counter_cached_Tau_idAntiEle2018_++;
    if (!loaded_Tau_idAntiEle2018_) {
        if (!b_Tau_idAntiEle2018_) throw std::runtime_error("Tau_idAntiEle2018 branch doesn't exist");
        int bytes = b_Tau_idAntiEle2018_->GetEntry(index);
        v_Tau_idAntiEle2018_ = vector<UChar_t>(Tau_idAntiEle2018_,Tau_idAntiEle2018_+bytes/sizeof(Tau_idAntiEle2018_[0]));
        loaded_Tau_idAntiEle2018_ = true;
    }
    return v_Tau_idAntiEle2018_;
}
const vector<bool> &Nano::Tau_idAntiEleDeadECal() {
    if (!loaded_Tau_idAntiEleDeadECal_) counter_uncached_Tau_idAntiEleDeadECal_++;
    else counter_cached_Tau_idAntiEleDeadECal_++;
    if (!loaded_Tau_idAntiEleDeadECal_) {
        if (!b_Tau_idAntiEleDeadECal_) throw std::runtime_error("Tau_idAntiEleDeadECal branch doesn't exist");
        int bytes = b_Tau_idAntiEleDeadECal_->GetEntry(index);
        v_Tau_idAntiEleDeadECal_ = vector<bool>(Tau_idAntiEleDeadECal_,Tau_idAntiEleDeadECal_+bytes/sizeof(Tau_idAntiEleDeadECal_[0]));
        loaded_Tau_idAntiEleDeadECal_ = true;
    }
    return v_Tau_idAntiEleDeadECal_;
}
const vector<UChar_t> &Nano::Tau_idAntiMu() {
    if (!loaded_Tau_idAntiMu_) counter_uncached_Tau_idAntiMu_++;
    else counter_cached_Tau_idAntiMu_++;
    if (!loaded_Tau_idAntiMu_) {
        if (!b_Tau_idAntiMu_) throw std::runtime_error("Tau_idAntiMu branch doesn't exist");
        int bytes = b_Tau_idAntiMu_->GetEntry(index);
        v_Tau_idAntiMu_ = vector<UChar_t>(Tau_idAntiMu_,Tau_idAntiMu_+bytes/sizeof(Tau_idAntiMu_[0]));
        loaded_Tau_idAntiMu_ = true;
    }
    return v_Tau_idAntiMu_;
}
const vector<bool> &Nano::Tau_idDecayMode() {
    if (!loaded_Tau_idDecayMode_) counter_uncached_Tau_idDecayMode_++;
    else counter_cached_Tau_idDecayMode_++;
    if (!loaded_Tau_idDecayMode_) {
        if (!b_Tau_idDecayMode_) throw std::runtime_error("Tau_idDecayMode branch doesn't exist");
        int bytes = b_Tau_idDecayMode_->GetEntry(index);
        v_Tau_idDecayMode_ = vector<bool>(Tau_idDecayMode_,Tau_idDecayMode_+bytes/sizeof(Tau_idDecayMode_[0]));
        loaded_Tau_idDecayMode_ = true;
    }
    return v_Tau_idDecayMode_;
}
const vector<bool> &Nano::Tau_idDecayModeNewDMs() {
    if (!loaded_Tau_idDecayModeNewDMs_) counter_uncached_Tau_idDecayModeNewDMs_++;
    else counter_cached_Tau_idDecayModeNewDMs_++;
    if (!loaded_Tau_idDecayModeNewDMs_) {
        if (!b_Tau_idDecayModeNewDMs_) throw std::runtime_error("Tau_idDecayModeNewDMs branch doesn't exist");
        int bytes = b_Tau_idDecayModeNewDMs_->GetEntry(index);
        v_Tau_idDecayModeNewDMs_ = vector<bool>(Tau_idDecayModeNewDMs_,Tau_idDecayModeNewDMs_+bytes/sizeof(Tau_idDecayModeNewDMs_[0]));
        loaded_Tau_idDecayModeNewDMs_ = true;
    }
    return v_Tau_idDecayModeNewDMs_;
}
const vector<bool> &Nano::Tau_idDecayModeOldDMs() {
    if (!loaded_Tau_idDecayModeOldDMs_) counter_uncached_Tau_idDecayModeOldDMs_++;
    else counter_cached_Tau_idDecayModeOldDMs_++;
    if (!loaded_Tau_idDecayModeOldDMs_) {
        if (!b_Tau_idDecayModeOldDMs_) throw std::runtime_error("Tau_idDecayModeOldDMs branch doesn't exist");
        int bytes = b_Tau_idDecayModeOldDMs_->GetEntry(index);
        v_Tau_idDecayModeOldDMs_ = vector<bool>(Tau_idDecayModeOldDMs_,Tau_idDecayModeOldDMs_+bytes/sizeof(Tau_idDecayModeOldDMs_[0]));
        loaded_Tau_idDecayModeOldDMs_ = true;
    }
    return v_Tau_idDecayModeOldDMs_;
}
const vector<UChar_t> &Nano::Tau_idDeepTau2017v2p1VSe() {
    if (!loaded_Tau_idDeepTau2017v2p1VSe_) counter_uncached_Tau_idDeepTau2017v2p1VSe_++;
    else counter_cached_Tau_idDeepTau2017v2p1VSe_++;
    if (!loaded_Tau_idDeepTau2017v2p1VSe_) {
        if (!b_Tau_idDeepTau2017v2p1VSe_) throw std::runtime_error("Tau_idDeepTau2017v2p1VSe branch doesn't exist");
        int bytes = b_Tau_idDeepTau2017v2p1VSe_->GetEntry(index);
        v_Tau_idDeepTau2017v2p1VSe_ = vector<UChar_t>(Tau_idDeepTau2017v2p1VSe_,Tau_idDeepTau2017v2p1VSe_+bytes/sizeof(Tau_idDeepTau2017v2p1VSe_[0]));
        loaded_Tau_idDeepTau2017v2p1VSe_ = true;
    }
    return v_Tau_idDeepTau2017v2p1VSe_;
}
const vector<UChar_t> &Nano::Tau_idDeepTau2017v2p1VSjet() {
    if (!loaded_Tau_idDeepTau2017v2p1VSjet_) counter_uncached_Tau_idDeepTau2017v2p1VSjet_++;
    else counter_cached_Tau_idDeepTau2017v2p1VSjet_++;
    if (!loaded_Tau_idDeepTau2017v2p1VSjet_) {
        if (!b_Tau_idDeepTau2017v2p1VSjet_) throw std::runtime_error("Tau_idDeepTau2017v2p1VSjet branch doesn't exist");
        int bytes = b_Tau_idDeepTau2017v2p1VSjet_->GetEntry(index);
        v_Tau_idDeepTau2017v2p1VSjet_ = vector<UChar_t>(Tau_idDeepTau2017v2p1VSjet_,Tau_idDeepTau2017v2p1VSjet_+bytes/sizeof(Tau_idDeepTau2017v2p1VSjet_[0]));
        loaded_Tau_idDeepTau2017v2p1VSjet_ = true;
    }
    return v_Tau_idDeepTau2017v2p1VSjet_;
}
const vector<UChar_t> &Nano::Tau_idDeepTau2017v2p1VSmu() {
    if (!loaded_Tau_idDeepTau2017v2p1VSmu_) counter_uncached_Tau_idDeepTau2017v2p1VSmu_++;
    else counter_cached_Tau_idDeepTau2017v2p1VSmu_++;
    if (!loaded_Tau_idDeepTau2017v2p1VSmu_) {
        if (!b_Tau_idDeepTau2017v2p1VSmu_) throw std::runtime_error("Tau_idDeepTau2017v2p1VSmu branch doesn't exist");
        int bytes = b_Tau_idDeepTau2017v2p1VSmu_->GetEntry(index);
        v_Tau_idDeepTau2017v2p1VSmu_ = vector<UChar_t>(Tau_idDeepTau2017v2p1VSmu_,Tau_idDeepTau2017v2p1VSmu_+bytes/sizeof(Tau_idDeepTau2017v2p1VSmu_[0]));
        loaded_Tau_idDeepTau2017v2p1VSmu_ = true;
    }
    return v_Tau_idDeepTau2017v2p1VSmu_;
}
const vector<UChar_t> &Nano::Tau_idDeepTau2018v2p5VSe() {
    if (!loaded_Tau_idDeepTau2018v2p5VSe_) counter_uncached_Tau_idDeepTau2018v2p5VSe_++;
    else counter_cached_Tau_idDeepTau2018v2p5VSe_++;
    if (!loaded_Tau_idDeepTau2018v2p5VSe_) {
        if (!b_Tau_idDeepTau2018v2p5VSe_) throw std::runtime_error("Tau_idDeepTau2018v2p5VSe branch doesn't exist");
        int bytes = b_Tau_idDeepTau2018v2p5VSe_->GetEntry(index);
        v_Tau_idDeepTau2018v2p5VSe_ = vector<UChar_t>(Tau_idDeepTau2018v2p5VSe_,Tau_idDeepTau2018v2p5VSe_+bytes/sizeof(Tau_idDeepTau2018v2p5VSe_[0]));
        loaded_Tau_idDeepTau2018v2p5VSe_ = true;
    }
    return v_Tau_idDeepTau2018v2p5VSe_;
}
const vector<UChar_t> &Nano::Tau_idDeepTau2018v2p5VSjet() {
    if (!loaded_Tau_idDeepTau2018v2p5VSjet_) counter_uncached_Tau_idDeepTau2018v2p5VSjet_++;
    else counter_cached_Tau_idDeepTau2018v2p5VSjet_++;
    if (!loaded_Tau_idDeepTau2018v2p5VSjet_) {
        if (!b_Tau_idDeepTau2018v2p5VSjet_) throw std::runtime_error("Tau_idDeepTau2018v2p5VSjet branch doesn't exist");
        int bytes = b_Tau_idDeepTau2018v2p5VSjet_->GetEntry(index);
        v_Tau_idDeepTau2018v2p5VSjet_ = vector<UChar_t>(Tau_idDeepTau2018v2p5VSjet_,Tau_idDeepTau2018v2p5VSjet_+bytes/sizeof(Tau_idDeepTau2018v2p5VSjet_[0]));
        loaded_Tau_idDeepTau2018v2p5VSjet_ = true;
    }
    return v_Tau_idDeepTau2018v2p5VSjet_;
}
const vector<UChar_t> &Nano::Tau_idDeepTau2018v2p5VSmu() {
    if (!loaded_Tau_idDeepTau2018v2p5VSmu_) counter_uncached_Tau_idDeepTau2018v2p5VSmu_++;
    else counter_cached_Tau_idDeepTau2018v2p5VSmu_++;
    if (!loaded_Tau_idDeepTau2018v2p5VSmu_) {
        if (!b_Tau_idDeepTau2018v2p5VSmu_) throw std::runtime_error("Tau_idDeepTau2018v2p5VSmu branch doesn't exist");
        int bytes = b_Tau_idDeepTau2018v2p5VSmu_->GetEntry(index);
        v_Tau_idDeepTau2018v2p5VSmu_ = vector<UChar_t>(Tau_idDeepTau2018v2p5VSmu_,Tau_idDeepTau2018v2p5VSmu_+bytes/sizeof(Tau_idDeepTau2018v2p5VSmu_[0]));
        loaded_Tau_idDeepTau2018v2p5VSmu_ = true;
    }
    return v_Tau_idDeepTau2018v2p5VSmu_;
}
const vector<UChar_t> &Nano::Tau_idMVAnewDM2017v2() {
    if (!loaded_Tau_idMVAnewDM2017v2_) counter_uncached_Tau_idMVAnewDM2017v2_++;
    else counter_cached_Tau_idMVAnewDM2017v2_++;
    if (!loaded_Tau_idMVAnewDM2017v2_) {
        if (!b_Tau_idMVAnewDM2017v2_) throw std::runtime_error("Tau_idMVAnewDM2017v2 branch doesn't exist");
        int bytes = b_Tau_idMVAnewDM2017v2_->GetEntry(index);
        v_Tau_idMVAnewDM2017v2_ = vector<UChar_t>(Tau_idMVAnewDM2017v2_,Tau_idMVAnewDM2017v2_+bytes/sizeof(Tau_idMVAnewDM2017v2_[0]));
        loaded_Tau_idMVAnewDM2017v2_ = true;
    }
    return v_Tau_idMVAnewDM2017v2_;
}
const vector<UChar_t> &Nano::Tau_idMVAoldDM() {
    if (!loaded_Tau_idMVAoldDM_) counter_uncached_Tau_idMVAoldDM_++;
    else counter_cached_Tau_idMVAoldDM_++;
    if (!loaded_Tau_idMVAoldDM_) {
        if (!b_Tau_idMVAoldDM_) throw std::runtime_error("Tau_idMVAoldDM branch doesn't exist");
        int bytes = b_Tau_idMVAoldDM_->GetEntry(index);
        v_Tau_idMVAoldDM_ = vector<UChar_t>(Tau_idMVAoldDM_,Tau_idMVAoldDM_+bytes/sizeof(Tau_idMVAoldDM_[0]));
        loaded_Tau_idMVAoldDM_ = true;
    }
    return v_Tau_idMVAoldDM_;
}
const vector<UChar_t> &Nano::Tau_idMVAoldDM2017v1() {
    if (!loaded_Tau_idMVAoldDM2017v1_) counter_uncached_Tau_idMVAoldDM2017v1_++;
    else counter_cached_Tau_idMVAoldDM2017v1_++;
    if (!loaded_Tau_idMVAoldDM2017v1_) {
        if (!b_Tau_idMVAoldDM2017v1_) throw std::runtime_error("Tau_idMVAoldDM2017v1 branch doesn't exist");
        int bytes = b_Tau_idMVAoldDM2017v1_->GetEntry(index);
        v_Tau_idMVAoldDM2017v1_ = vector<UChar_t>(Tau_idMVAoldDM2017v1_,Tau_idMVAoldDM2017v1_+bytes/sizeof(Tau_idMVAoldDM2017v1_[0]));
        loaded_Tau_idMVAoldDM2017v1_ = true;
    }
    return v_Tau_idMVAoldDM2017v1_;
}
const vector<UChar_t> &Nano::Tau_idMVAoldDM2017v2() {
    if (!loaded_Tau_idMVAoldDM2017v2_) counter_uncached_Tau_idMVAoldDM2017v2_++;
    else counter_cached_Tau_idMVAoldDM2017v2_++;
    if (!loaded_Tau_idMVAoldDM2017v2_) {
        if (!b_Tau_idMVAoldDM2017v2_) throw std::runtime_error("Tau_idMVAoldDM2017v2 branch doesn't exist");
        int bytes = b_Tau_idMVAoldDM2017v2_->GetEntry(index);
        v_Tau_idMVAoldDM2017v2_ = vector<UChar_t>(Tau_idMVAoldDM2017v2_,Tau_idMVAoldDM2017v2_+bytes/sizeof(Tau_idMVAoldDM2017v2_[0]));
        loaded_Tau_idMVAoldDM2017v2_ = true;
    }
    return v_Tau_idMVAoldDM2017v2_;
}
const vector<UChar_t> &Nano::Tau_idMVAoldDMdR032017v2() {
    if (!loaded_Tau_idMVAoldDMdR032017v2_) counter_uncached_Tau_idMVAoldDMdR032017v2_++;
    else counter_cached_Tau_idMVAoldDMdR032017v2_++;
    if (!loaded_Tau_idMVAoldDMdR032017v2_) {
        if (!b_Tau_idMVAoldDMdR032017v2_) throw std::runtime_error("Tau_idMVAoldDMdR032017v2 branch doesn't exist");
        int bytes = b_Tau_idMVAoldDMdR032017v2_->GetEntry(index);
        v_Tau_idMVAoldDMdR032017v2_ = vector<UChar_t>(Tau_idMVAoldDMdR032017v2_,Tau_idMVAoldDMdR032017v2_+bytes/sizeof(Tau_idMVAoldDMdR032017v2_[0]));
        loaded_Tau_idMVAoldDMdR032017v2_ = true;
    }
    return v_Tau_idMVAoldDMdR032017v2_;
}
const vector<int> &Nano::Tau_jetIdx() {
    if (!loaded_Tau_jetIdx_) counter_uncached_Tau_jetIdx_++;
    else counter_cached_Tau_jetIdx_++;
    if (!loaded_Tau_jetIdx_) {
        if (!b_Tau_jetIdx_) throw std::runtime_error("Tau_jetIdx branch doesn't exist");
        int bytes = b_Tau_jetIdx_->GetEntry(index);
        v_Tau_jetIdx_ = vector<int>(Tau_jetIdx_,Tau_jetIdx_+bytes/sizeof(Tau_jetIdx_[0]));
        loaded_Tau_jetIdx_ = true;
    }
    return v_Tau_jetIdx_;
}
const vector<float> &Nano::Tau_leadTkDeltaEta() {
    if (!loaded_Tau_leadTkDeltaEta_) counter_uncached_Tau_leadTkDeltaEta_++;
    else counter_cached_Tau_leadTkDeltaEta_++;
    if (!loaded_Tau_leadTkDeltaEta_) {
        if (!b_Tau_leadTkDeltaEta_) throw std::runtime_error("Tau_leadTkDeltaEta branch doesn't exist");
        int bytes = b_Tau_leadTkDeltaEta_->GetEntry(index);
        v_Tau_leadTkDeltaEta_ = vector<float>(Tau_leadTkDeltaEta_,Tau_leadTkDeltaEta_+bytes/sizeof(Tau_leadTkDeltaEta_[0]));
        loaded_Tau_leadTkDeltaEta_ = true;
    }
    return v_Tau_leadTkDeltaEta_;
}
const vector<float> &Nano::Tau_leadTkDeltaPhi() {
    if (!loaded_Tau_leadTkDeltaPhi_) counter_uncached_Tau_leadTkDeltaPhi_++;
    else counter_cached_Tau_leadTkDeltaPhi_++;
    if (!loaded_Tau_leadTkDeltaPhi_) {
        if (!b_Tau_leadTkDeltaPhi_) throw std::runtime_error("Tau_leadTkDeltaPhi branch doesn't exist");
        int bytes = b_Tau_leadTkDeltaPhi_->GetEntry(index);
        v_Tau_leadTkDeltaPhi_ = vector<float>(Tau_leadTkDeltaPhi_,Tau_leadTkDeltaPhi_+bytes/sizeof(Tau_leadTkDeltaPhi_[0]));
        loaded_Tau_leadTkDeltaPhi_ = true;
    }
    return v_Tau_leadTkDeltaPhi_;
}
const vector<float> &Nano::Tau_leadTkPtOverTauPt() {
    if (!loaded_Tau_leadTkPtOverTauPt_) counter_uncached_Tau_leadTkPtOverTauPt_++;
    else counter_cached_Tau_leadTkPtOverTauPt_++;
    if (!loaded_Tau_leadTkPtOverTauPt_) {
        if (!b_Tau_leadTkPtOverTauPt_) throw std::runtime_error("Tau_leadTkPtOverTauPt branch doesn't exist");
        int bytes = b_Tau_leadTkPtOverTauPt_->GetEntry(index);
        v_Tau_leadTkPtOverTauPt_ = vector<float>(Tau_leadTkPtOverTauPt_,Tau_leadTkPtOverTauPt_+bytes/sizeof(Tau_leadTkPtOverTauPt_[0]));
        loaded_Tau_leadTkPtOverTauPt_ = true;
    }
    return v_Tau_leadTkPtOverTauPt_;
}
const vector<float> &Nano::Tau_mass() {
    if (!loaded_Tau_mass_) counter_uncached_Tau_mass_++;
    else counter_cached_Tau_mass_++;
    if (!loaded_Tau_mass_) {
        if (!b_Tau_mass_) throw std::runtime_error("Tau_mass branch doesn't exist");
        int bytes = b_Tau_mass_->GetEntry(index);
        v_Tau_mass_ = vector<float>(Tau_mass_,Tau_mass_+bytes/sizeof(Tau_mass_[0]));
        loaded_Tau_mass_ = true;
    }
    return v_Tau_mass_;
}
const vector<int> &Nano::Tau_muIdx() {
    if (!loaded_Tau_muIdx_) counter_uncached_Tau_muIdx_++;
    else counter_cached_Tau_muIdx_++;
    if (!loaded_Tau_muIdx_) {
        if (!b_Tau_muIdx_) throw std::runtime_error("Tau_muIdx branch doesn't exist");
        int bytes = b_Tau_muIdx_->GetEntry(index);
        v_Tau_muIdx_ = vector<int>(Tau_muIdx_,Tau_muIdx_+bytes/sizeof(Tau_muIdx_[0]));
        loaded_Tau_muIdx_ = true;
    }
    return v_Tau_muIdx_;
}
const vector<int> &Nano::Tau_nSVs() {
    if (!loaded_Tau_nSVs_) counter_uncached_Tau_nSVs_++;
    else counter_cached_Tau_nSVs_++;
    if (!loaded_Tau_nSVs_) {
        if (!b_Tau_nSVs_) throw std::runtime_error("Tau_nSVs branch doesn't exist");
        int bytes = b_Tau_nSVs_->GetEntry(index);
        v_Tau_nSVs_ = vector<int>(Tau_nSVs_,Tau_nSVs_+bytes/sizeof(Tau_nSVs_[0]));
        loaded_Tau_nSVs_ = true;
    }
    return v_Tau_nSVs_;
}
const vector<float> &Nano::Tau_neutralIso() {
    if (!loaded_Tau_neutralIso_) counter_uncached_Tau_neutralIso_++;
    else counter_cached_Tau_neutralIso_++;
    if (!loaded_Tau_neutralIso_) {
        if (!b_Tau_neutralIso_) throw std::runtime_error("Tau_neutralIso branch doesn't exist");
        int bytes = b_Tau_neutralIso_->GetEntry(index);
        v_Tau_neutralIso_ = vector<float>(Tau_neutralIso_,Tau_neutralIso_+bytes/sizeof(Tau_neutralIso_[0]));
        loaded_Tau_neutralIso_ = true;
    }
    return v_Tau_neutralIso_;
}
const vector<LorentzVector> &Nano::Tau_p4() {
    if (!loaded_Tau_p4_) counter_uncached_Tau_p4_++;
    else counter_cached_Tau_p4_++;
    if (!loaded_Tau_p4_) {
        v_Tau_p4_.clear();
        vector<float> pts = Nano::Tau_pt();
        vector<float> etas = Nano::Tau_eta();
        vector<float> phis = Nano::Tau_phi();
        vector<float> masses = Nano::Tau_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_Tau_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_Tau_p4_ = true;
    }
    return v_Tau_p4_;
}
const vector<float> &Nano::Tau_phi() {
    if (!loaded_Tau_phi_) counter_uncached_Tau_phi_++;
    else counter_cached_Tau_phi_++;
    if (!loaded_Tau_phi_) {
        if (!b_Tau_phi_) throw std::runtime_error("Tau_phi branch doesn't exist");
        int bytes = b_Tau_phi_->GetEntry(index);
        v_Tau_phi_ = vector<float>(Tau_phi_,Tau_phi_+bytes/sizeof(Tau_phi_[0]));
        loaded_Tau_phi_ = true;
    }
    return v_Tau_phi_;
}
const vector<float> &Nano::Tau_photonsOutsideSignalCone() {
    if (!loaded_Tau_photonsOutsideSignalCone_) counter_uncached_Tau_photonsOutsideSignalCone_++;
    else counter_cached_Tau_photonsOutsideSignalCone_++;
    if (!loaded_Tau_photonsOutsideSignalCone_) {
        if (!b_Tau_photonsOutsideSignalCone_) throw std::runtime_error("Tau_photonsOutsideSignalCone branch doesn't exist");
        int bytes = b_Tau_photonsOutsideSignalCone_->GetEntry(index);
        v_Tau_photonsOutsideSignalCone_ = vector<float>(Tau_photonsOutsideSignalCone_,Tau_photonsOutsideSignalCone_+bytes/sizeof(Tau_photonsOutsideSignalCone_[0]));
        loaded_Tau_photonsOutsideSignalCone_ = true;
    }
    return v_Tau_photonsOutsideSignalCone_;
}
const vector<float> &Nano::Tau_pt() {
    if (!loaded_Tau_pt_) counter_uncached_Tau_pt_++;
    else counter_cached_Tau_pt_++;
    if (!loaded_Tau_pt_) {
        if (!b_Tau_pt_) throw std::runtime_error("Tau_pt branch doesn't exist");
        int bytes = b_Tau_pt_->GetEntry(index);
        v_Tau_pt_ = vector<float>(Tau_pt_,Tau_pt_+bytes/sizeof(Tau_pt_[0]));
        loaded_Tau_pt_ = true;
    }
    return v_Tau_pt_;
}
const vector<float> &Nano::Tau_puCorr() {
    if (!loaded_Tau_puCorr_) counter_uncached_Tau_puCorr_++;
    else counter_cached_Tau_puCorr_++;
    if (!loaded_Tau_puCorr_) {
        if (!b_Tau_puCorr_) throw std::runtime_error("Tau_puCorr branch doesn't exist");
        int bytes = b_Tau_puCorr_->GetEntry(index);
        v_Tau_puCorr_ = vector<float>(Tau_puCorr_,Tau_puCorr_+bytes/sizeof(Tau_puCorr_[0]));
        loaded_Tau_puCorr_ = true;
    }
    return v_Tau_puCorr_;
}
const vector<float> &Nano::Tau_rawAntiEle() {
    if (!loaded_Tau_rawAntiEle_) counter_uncached_Tau_rawAntiEle_++;
    else counter_cached_Tau_rawAntiEle_++;
    if (!loaded_Tau_rawAntiEle_) {
        if (!b_Tau_rawAntiEle_) throw std::runtime_error("Tau_rawAntiEle branch doesn't exist");
        int bytes = b_Tau_rawAntiEle_->GetEntry(index);
        v_Tau_rawAntiEle_ = vector<float>(Tau_rawAntiEle_,Tau_rawAntiEle_+bytes/sizeof(Tau_rawAntiEle_[0]));
        loaded_Tau_rawAntiEle_ = true;
    }
    return v_Tau_rawAntiEle_;
}
const vector<float> &Nano::Tau_rawAntiEle2018() {
    if (!loaded_Tau_rawAntiEle2018_) counter_uncached_Tau_rawAntiEle2018_++;
    else counter_cached_Tau_rawAntiEle2018_++;
    if (!loaded_Tau_rawAntiEle2018_) {
        if (!b_Tau_rawAntiEle2018_) throw std::runtime_error("Tau_rawAntiEle2018 branch doesn't exist");
        int bytes = b_Tau_rawAntiEle2018_->GetEntry(index);
        v_Tau_rawAntiEle2018_ = vector<float>(Tau_rawAntiEle2018_,Tau_rawAntiEle2018_+bytes/sizeof(Tau_rawAntiEle2018_[0]));
        loaded_Tau_rawAntiEle2018_ = true;
    }
    return v_Tau_rawAntiEle2018_;
}
const vector<int> &Nano::Tau_rawAntiEleCat() {
    if (!loaded_Tau_rawAntiEleCat_) counter_uncached_Tau_rawAntiEleCat_++;
    else counter_cached_Tau_rawAntiEleCat_++;
    if (!loaded_Tau_rawAntiEleCat_) {
        if (!b_Tau_rawAntiEleCat_) throw std::runtime_error("Tau_rawAntiEleCat branch doesn't exist");
        int bytes = b_Tau_rawAntiEleCat_->GetEntry(index);
        v_Tau_rawAntiEleCat_ = vector<int>(Tau_rawAntiEleCat_,Tau_rawAntiEleCat_+bytes/sizeof(Tau_rawAntiEleCat_[0]));
        loaded_Tau_rawAntiEleCat_ = true;
    }
    return v_Tau_rawAntiEleCat_;
}
const vector<int> &Nano::Tau_rawAntiEleCat2018() {
    if (!loaded_Tau_rawAntiEleCat2018_) counter_uncached_Tau_rawAntiEleCat2018_++;
    else counter_cached_Tau_rawAntiEleCat2018_++;
    if (!loaded_Tau_rawAntiEleCat2018_) {
        if (!b_Tau_rawAntiEleCat2018_) throw std::runtime_error("Tau_rawAntiEleCat2018 branch doesn't exist");
        int bytes = b_Tau_rawAntiEleCat2018_->GetEntry(index);
        v_Tau_rawAntiEleCat2018_ = vector<int>(Tau_rawAntiEleCat2018_,Tau_rawAntiEleCat2018_+bytes/sizeof(Tau_rawAntiEleCat2018_[0]));
        loaded_Tau_rawAntiEleCat2018_ = true;
    }
    return v_Tau_rawAntiEleCat2018_;
}
const vector<float> &Nano::Tau_rawDeepTau2017v2p1VSe() {
    if (!loaded_Tau_rawDeepTau2017v2p1VSe_) counter_uncached_Tau_rawDeepTau2017v2p1VSe_++;
    else counter_cached_Tau_rawDeepTau2017v2p1VSe_++;
    if (!loaded_Tau_rawDeepTau2017v2p1VSe_) {
        if (!b_Tau_rawDeepTau2017v2p1VSe_) throw std::runtime_error("Tau_rawDeepTau2017v2p1VSe branch doesn't exist");
        int bytes = b_Tau_rawDeepTau2017v2p1VSe_->GetEntry(index);
        v_Tau_rawDeepTau2017v2p1VSe_ = vector<float>(Tau_rawDeepTau2017v2p1VSe_,Tau_rawDeepTau2017v2p1VSe_+bytes/sizeof(Tau_rawDeepTau2017v2p1VSe_[0]));
        loaded_Tau_rawDeepTau2017v2p1VSe_ = true;
    }
    return v_Tau_rawDeepTau2017v2p1VSe_;
}
const vector<float> &Nano::Tau_rawDeepTau2017v2p1VSjet() {
    if (!loaded_Tau_rawDeepTau2017v2p1VSjet_) counter_uncached_Tau_rawDeepTau2017v2p1VSjet_++;
    else counter_cached_Tau_rawDeepTau2017v2p1VSjet_++;
    if (!loaded_Tau_rawDeepTau2017v2p1VSjet_) {
        if (!b_Tau_rawDeepTau2017v2p1VSjet_) throw std::runtime_error("Tau_rawDeepTau2017v2p1VSjet branch doesn't exist");
        int bytes = b_Tau_rawDeepTau2017v2p1VSjet_->GetEntry(index);
        v_Tau_rawDeepTau2017v2p1VSjet_ = vector<float>(Tau_rawDeepTau2017v2p1VSjet_,Tau_rawDeepTau2017v2p1VSjet_+bytes/sizeof(Tau_rawDeepTau2017v2p1VSjet_[0]));
        loaded_Tau_rawDeepTau2017v2p1VSjet_ = true;
    }
    return v_Tau_rawDeepTau2017v2p1VSjet_;
}
const vector<float> &Nano::Tau_rawDeepTau2017v2p1VSmu() {
    if (!loaded_Tau_rawDeepTau2017v2p1VSmu_) counter_uncached_Tau_rawDeepTau2017v2p1VSmu_++;
    else counter_cached_Tau_rawDeepTau2017v2p1VSmu_++;
    if (!loaded_Tau_rawDeepTau2017v2p1VSmu_) {
        if (!b_Tau_rawDeepTau2017v2p1VSmu_) throw std::runtime_error("Tau_rawDeepTau2017v2p1VSmu branch doesn't exist");
        int bytes = b_Tau_rawDeepTau2017v2p1VSmu_->GetEntry(index);
        v_Tau_rawDeepTau2017v2p1VSmu_ = vector<float>(Tau_rawDeepTau2017v2p1VSmu_,Tau_rawDeepTau2017v2p1VSmu_+bytes/sizeof(Tau_rawDeepTau2017v2p1VSmu_[0]));
        loaded_Tau_rawDeepTau2017v2p1VSmu_ = true;
    }
    return v_Tau_rawDeepTau2017v2p1VSmu_;
}
const vector<float> &Nano::Tau_rawDeepTau2018v2p5VSe() {
    if (!loaded_Tau_rawDeepTau2018v2p5VSe_) counter_uncached_Tau_rawDeepTau2018v2p5VSe_++;
    else counter_cached_Tau_rawDeepTau2018v2p5VSe_++;
    if (!loaded_Tau_rawDeepTau2018v2p5VSe_) {
        if (!b_Tau_rawDeepTau2018v2p5VSe_) throw std::runtime_error("Tau_rawDeepTau2018v2p5VSe branch doesn't exist");
        int bytes = b_Tau_rawDeepTau2018v2p5VSe_->GetEntry(index);
        v_Tau_rawDeepTau2018v2p5VSe_ = vector<float>(Tau_rawDeepTau2018v2p5VSe_,Tau_rawDeepTau2018v2p5VSe_+bytes/sizeof(Tau_rawDeepTau2018v2p5VSe_[0]));
        loaded_Tau_rawDeepTau2018v2p5VSe_ = true;
    }
    return v_Tau_rawDeepTau2018v2p5VSe_;
}
const vector<float> &Nano::Tau_rawDeepTau2018v2p5VSjet() {
    if (!loaded_Tau_rawDeepTau2018v2p5VSjet_) counter_uncached_Tau_rawDeepTau2018v2p5VSjet_++;
    else counter_cached_Tau_rawDeepTau2018v2p5VSjet_++;
    if (!loaded_Tau_rawDeepTau2018v2p5VSjet_) {
        if (!b_Tau_rawDeepTau2018v2p5VSjet_) throw std::runtime_error("Tau_rawDeepTau2018v2p5VSjet branch doesn't exist");
        int bytes = b_Tau_rawDeepTau2018v2p5VSjet_->GetEntry(index);
        v_Tau_rawDeepTau2018v2p5VSjet_ = vector<float>(Tau_rawDeepTau2018v2p5VSjet_,Tau_rawDeepTau2018v2p5VSjet_+bytes/sizeof(Tau_rawDeepTau2018v2p5VSjet_[0]));
        loaded_Tau_rawDeepTau2018v2p5VSjet_ = true;
    }
    return v_Tau_rawDeepTau2018v2p5VSjet_;
}
const vector<float> &Nano::Tau_rawDeepTau2018v2p5VSmu() {
    if (!loaded_Tau_rawDeepTau2018v2p5VSmu_) counter_uncached_Tau_rawDeepTau2018v2p5VSmu_++;
    else counter_cached_Tau_rawDeepTau2018v2p5VSmu_++;
    if (!loaded_Tau_rawDeepTau2018v2p5VSmu_) {
        if (!b_Tau_rawDeepTau2018v2p5VSmu_) throw std::runtime_error("Tau_rawDeepTau2018v2p5VSmu branch doesn't exist");
        int bytes = b_Tau_rawDeepTau2018v2p5VSmu_->GetEntry(index);
        v_Tau_rawDeepTau2018v2p5VSmu_ = vector<float>(Tau_rawDeepTau2018v2p5VSmu_,Tau_rawDeepTau2018v2p5VSmu_+bytes/sizeof(Tau_rawDeepTau2018v2p5VSmu_[0]));
        loaded_Tau_rawDeepTau2018v2p5VSmu_ = true;
    }
    return v_Tau_rawDeepTau2018v2p5VSmu_;
}
const vector<float> &Nano::Tau_rawIso() {
    if (!loaded_Tau_rawIso_) counter_uncached_Tau_rawIso_++;
    else counter_cached_Tau_rawIso_++;
    if (!loaded_Tau_rawIso_) {
        if (!b_Tau_rawIso_) throw std::runtime_error("Tau_rawIso branch doesn't exist");
        int bytes = b_Tau_rawIso_->GetEntry(index);
        v_Tau_rawIso_ = vector<float>(Tau_rawIso_,Tau_rawIso_+bytes/sizeof(Tau_rawIso_[0]));
        loaded_Tau_rawIso_ = true;
    }
    return v_Tau_rawIso_;
}
const vector<float> &Nano::Tau_rawIsodR03() {
    if (!loaded_Tau_rawIsodR03_) counter_uncached_Tau_rawIsodR03_++;
    else counter_cached_Tau_rawIsodR03_++;
    if (!loaded_Tau_rawIsodR03_) {
        if (!b_Tau_rawIsodR03_) throw std::runtime_error("Tau_rawIsodR03 branch doesn't exist");
        int bytes = b_Tau_rawIsodR03_->GetEntry(index);
        v_Tau_rawIsodR03_ = vector<float>(Tau_rawIsodR03_,Tau_rawIsodR03_+bytes/sizeof(Tau_rawIsodR03_[0]));
        loaded_Tau_rawIsodR03_ = true;
    }
    return v_Tau_rawIsodR03_;
}
const vector<float> &Nano::Tau_rawMVAnewDM2017v2() {
    if (!loaded_Tau_rawMVAnewDM2017v2_) counter_uncached_Tau_rawMVAnewDM2017v2_++;
    else counter_cached_Tau_rawMVAnewDM2017v2_++;
    if (!loaded_Tau_rawMVAnewDM2017v2_) {
        if (!b_Tau_rawMVAnewDM2017v2_) throw std::runtime_error("Tau_rawMVAnewDM2017v2 branch doesn't exist");
        int bytes = b_Tau_rawMVAnewDM2017v2_->GetEntry(index);
        v_Tau_rawMVAnewDM2017v2_ = vector<float>(Tau_rawMVAnewDM2017v2_,Tau_rawMVAnewDM2017v2_+bytes/sizeof(Tau_rawMVAnewDM2017v2_[0]));
        loaded_Tau_rawMVAnewDM2017v2_ = true;
    }
    return v_Tau_rawMVAnewDM2017v2_;
}
const vector<float> &Nano::Tau_rawMVAoldDM() {
    if (!loaded_Tau_rawMVAoldDM_) counter_uncached_Tau_rawMVAoldDM_++;
    else counter_cached_Tau_rawMVAoldDM_++;
    if (!loaded_Tau_rawMVAoldDM_) {
        if (!b_Tau_rawMVAoldDM_) throw std::runtime_error("Tau_rawMVAoldDM branch doesn't exist");
        int bytes = b_Tau_rawMVAoldDM_->GetEntry(index);
        v_Tau_rawMVAoldDM_ = vector<float>(Tau_rawMVAoldDM_,Tau_rawMVAoldDM_+bytes/sizeof(Tau_rawMVAoldDM_[0]));
        loaded_Tau_rawMVAoldDM_ = true;
    }
    return v_Tau_rawMVAoldDM_;
}
const vector<float> &Nano::Tau_rawMVAoldDM2017v1() {
    if (!loaded_Tau_rawMVAoldDM2017v1_) counter_uncached_Tau_rawMVAoldDM2017v1_++;
    else counter_cached_Tau_rawMVAoldDM2017v1_++;
    if (!loaded_Tau_rawMVAoldDM2017v1_) {
        if (!b_Tau_rawMVAoldDM2017v1_) throw std::runtime_error("Tau_rawMVAoldDM2017v1 branch doesn't exist");
        int bytes = b_Tau_rawMVAoldDM2017v1_->GetEntry(index);
        v_Tau_rawMVAoldDM2017v1_ = vector<float>(Tau_rawMVAoldDM2017v1_,Tau_rawMVAoldDM2017v1_+bytes/sizeof(Tau_rawMVAoldDM2017v1_[0]));
        loaded_Tau_rawMVAoldDM2017v1_ = true;
    }
    return v_Tau_rawMVAoldDM2017v1_;
}
const vector<float> &Nano::Tau_rawMVAoldDM2017v2() {
    if (!loaded_Tau_rawMVAoldDM2017v2_) counter_uncached_Tau_rawMVAoldDM2017v2_++;
    else counter_cached_Tau_rawMVAoldDM2017v2_++;
    if (!loaded_Tau_rawMVAoldDM2017v2_) {
        if (!b_Tau_rawMVAoldDM2017v2_) throw std::runtime_error("Tau_rawMVAoldDM2017v2 branch doesn't exist");
        int bytes = b_Tau_rawMVAoldDM2017v2_->GetEntry(index);
        v_Tau_rawMVAoldDM2017v2_ = vector<float>(Tau_rawMVAoldDM2017v2_,Tau_rawMVAoldDM2017v2_+bytes/sizeof(Tau_rawMVAoldDM2017v2_[0]));
        loaded_Tau_rawMVAoldDM2017v2_ = true;
    }
    return v_Tau_rawMVAoldDM2017v2_;
}
const vector<float> &Nano::Tau_rawMVAoldDMdR032017v2() {
    if (!loaded_Tau_rawMVAoldDMdR032017v2_) counter_uncached_Tau_rawMVAoldDMdR032017v2_++;
    else counter_cached_Tau_rawMVAoldDMdR032017v2_++;
    if (!loaded_Tau_rawMVAoldDMdR032017v2_) {
        if (!b_Tau_rawMVAoldDMdR032017v2_) throw std::runtime_error("Tau_rawMVAoldDMdR032017v2 branch doesn't exist");
        int bytes = b_Tau_rawMVAoldDMdR032017v2_->GetEntry(index);
        v_Tau_rawMVAoldDMdR032017v2_ = vector<float>(Tau_rawMVAoldDMdR032017v2_,Tau_rawMVAoldDMdR032017v2_+bytes/sizeof(Tau_rawMVAoldDMdR032017v2_[0]));
        loaded_Tau_rawMVAoldDMdR032017v2_ = true;
    }
    return v_Tau_rawMVAoldDMdR032017v2_;
}
const vector<int> &Nano::Tau_svIdx1() {
    if (!loaded_Tau_svIdx1_) counter_uncached_Tau_svIdx1_++;
    else counter_cached_Tau_svIdx1_++;
    if (!loaded_Tau_svIdx1_) {
        if (!b_Tau_svIdx1_) throw std::runtime_error("Tau_svIdx1 branch doesn't exist");
        int bytes = b_Tau_svIdx1_->GetEntry(index);
        v_Tau_svIdx1_ = vector<int>(Tau_svIdx1_,Tau_svIdx1_+bytes/sizeof(Tau_svIdx1_[0]));
        loaded_Tau_svIdx1_ = true;
    }
    return v_Tau_svIdx1_;
}
const vector<int> &Nano::Tau_svIdx2() {
    if (!loaded_Tau_svIdx2_) counter_uncached_Tau_svIdx2_++;
    else counter_cached_Tau_svIdx2_++;
    if (!loaded_Tau_svIdx2_) {
        if (!b_Tau_svIdx2_) throw std::runtime_error("Tau_svIdx2 branch doesn't exist");
        int bytes = b_Tau_svIdx2_->GetEntry(index);
        v_Tau_svIdx2_ = vector<int>(Tau_svIdx2_,Tau_svIdx2_+bytes/sizeof(Tau_svIdx2_[0]));
        loaded_Tau_svIdx2_ = true;
    }
    return v_Tau_svIdx2_;
}
const float &Nano::TkMET_phi() {
    if (!loaded_TkMET_phi_) counter_uncached_TkMET_phi_++;
    else counter_cached_TkMET_phi_++;
    if (!loaded_TkMET_phi_) {
        if (!b_TkMET_phi_) throw std::runtime_error("TkMET_phi branch doesn't exist");
        b_TkMET_phi_->GetEntry(index);
        loaded_TkMET_phi_ = true;
    }
    return TkMET_phi_;
}
const float &Nano::TkMET_pt() {
    if (!loaded_TkMET_pt_) counter_uncached_TkMET_pt_++;
    else counter_cached_TkMET_pt_++;
    if (!loaded_TkMET_pt_) {
        if (!b_TkMET_pt_) throw std::runtime_error("TkMET_pt branch doesn't exist");
        b_TkMET_pt_->GetEntry(index);
        loaded_TkMET_pt_ = true;
    }
    return TkMET_pt_;
}
const float &Nano::TkMET_sumEt() {
    if (!loaded_TkMET_sumEt_) counter_uncached_TkMET_sumEt_++;
    else counter_cached_TkMET_sumEt_++;
    if (!loaded_TkMET_sumEt_) {
        if (!b_TkMET_sumEt_) throw std::runtime_error("TkMET_sumEt branch doesn't exist");
        b_TkMET_sumEt_->GetEntry(index);
        loaded_TkMET_sumEt_ = true;
    }
    return TkMET_sumEt_;
}
const vector<float> &Nano::TrigObj_eta() {
    if (!loaded_TrigObj_eta_) counter_uncached_TrigObj_eta_++;
    else counter_cached_TrigObj_eta_++;
    if (!loaded_TrigObj_eta_) {
        if (!b_TrigObj_eta_) throw std::runtime_error("TrigObj_eta branch doesn't exist");
        int bytes = b_TrigObj_eta_->GetEntry(index);
        v_TrigObj_eta_ = vector<float>(TrigObj_eta_,TrigObj_eta_+bytes/sizeof(TrigObj_eta_[0]));
        loaded_TrigObj_eta_ = true;
    }
    return v_TrigObj_eta_;
}
const vector<int> &Nano::TrigObj_filterBits() {
    if (!loaded_TrigObj_filterBits_) counter_uncached_TrigObj_filterBits_++;
    else counter_cached_TrigObj_filterBits_++;
    if (!loaded_TrigObj_filterBits_) {
        if (!b_TrigObj_filterBits_) throw std::runtime_error("TrigObj_filterBits branch doesn't exist");
        int bytes = b_TrigObj_filterBits_->GetEntry(index);
        v_TrigObj_filterBits_ = vector<int>(TrigObj_filterBits_,TrigObj_filterBits_+bytes/sizeof(TrigObj_filterBits_[0]));
        loaded_TrigObj_filterBits_ = true;
    }
    return v_TrigObj_filterBits_;
}
const vector<int> &Nano::TrigObj_id() {
    if (!loaded_TrigObj_id_) counter_uncached_TrigObj_id_++;
    else counter_cached_TrigObj_id_++;
    if (!loaded_TrigObj_id_) {
        if (!b_TrigObj_id_) throw std::runtime_error("TrigObj_id branch doesn't exist");
        int bytes = b_TrigObj_id_->GetEntry(index);
        v_TrigObj_id_ = vector<int>(TrigObj_id_,TrigObj_id_+bytes/sizeof(TrigObj_id_[0]));
        loaded_TrigObj_id_ = true;
    }
    return v_TrigObj_id_;
}
const vector<int> &Nano::TrigObj_l1charge() {
    if (!loaded_TrigObj_l1charge_) counter_uncached_TrigObj_l1charge_++;
    else counter_cached_TrigObj_l1charge_++;
    if (!loaded_TrigObj_l1charge_) {
        if (!b_TrigObj_l1charge_) throw std::runtime_error("TrigObj_l1charge branch doesn't exist");
        int bytes = b_TrigObj_l1charge_->GetEntry(index);
        v_TrigObj_l1charge_ = vector<int>(TrigObj_l1charge_,TrigObj_l1charge_+bytes/sizeof(TrigObj_l1charge_[0]));
        loaded_TrigObj_l1charge_ = true;
    }
    return v_TrigObj_l1charge_;
}
const vector<int> &Nano::TrigObj_l1iso() {
    if (!loaded_TrigObj_l1iso_) counter_uncached_TrigObj_l1iso_++;
    else counter_cached_TrigObj_l1iso_++;
    if (!loaded_TrigObj_l1iso_) {
        if (!b_TrigObj_l1iso_) throw std::runtime_error("TrigObj_l1iso branch doesn't exist");
        int bytes = b_TrigObj_l1iso_->GetEntry(index);
        v_TrigObj_l1iso_ = vector<int>(TrigObj_l1iso_,TrigObj_l1iso_+bytes/sizeof(TrigObj_l1iso_[0]));
        loaded_TrigObj_l1iso_ = true;
    }
    return v_TrigObj_l1iso_;
}
const vector<float> &Nano::TrigObj_l1pt() {
    if (!loaded_TrigObj_l1pt_) counter_uncached_TrigObj_l1pt_++;
    else counter_cached_TrigObj_l1pt_++;
    if (!loaded_TrigObj_l1pt_) {
        if (!b_TrigObj_l1pt_) throw std::runtime_error("TrigObj_l1pt branch doesn't exist");
        int bytes = b_TrigObj_l1pt_->GetEntry(index);
        v_TrigObj_l1pt_ = vector<float>(TrigObj_l1pt_,TrigObj_l1pt_+bytes/sizeof(TrigObj_l1pt_[0]));
        loaded_TrigObj_l1pt_ = true;
    }
    return v_TrigObj_l1pt_;
}
const vector<float> &Nano::TrigObj_l1pt_2() {
    if (!loaded_TrigObj_l1pt_2_) counter_uncached_TrigObj_l1pt_2_++;
    else counter_cached_TrigObj_l1pt_2_++;
    if (!loaded_TrigObj_l1pt_2_) {
        if (!b_TrigObj_l1pt_2_) throw std::runtime_error("TrigObj_l1pt_2 branch doesn't exist");
        int bytes = b_TrigObj_l1pt_2_->GetEntry(index);
        v_TrigObj_l1pt_2_ = vector<float>(TrigObj_l1pt_2_,TrigObj_l1pt_2_+bytes/sizeof(TrigObj_l1pt_2_[0]));
        loaded_TrigObj_l1pt_2_ = true;
    }
    return v_TrigObj_l1pt_2_;
}
const vector<float> &Nano::TrigObj_l2pt() {
    if (!loaded_TrigObj_l2pt_) counter_uncached_TrigObj_l2pt_++;
    else counter_cached_TrigObj_l2pt_++;
    if (!loaded_TrigObj_l2pt_) {
        if (!b_TrigObj_l2pt_) throw std::runtime_error("TrigObj_l2pt branch doesn't exist");
        int bytes = b_TrigObj_l2pt_->GetEntry(index);
        v_TrigObj_l2pt_ = vector<float>(TrigObj_l2pt_,TrigObj_l2pt_+bytes/sizeof(TrigObj_l2pt_[0]));
        loaded_TrigObj_l2pt_ = true;
    }
    return v_TrigObj_l2pt_;
}
const vector<float> &Nano::TrigObj_phi() {
    if (!loaded_TrigObj_phi_) counter_uncached_TrigObj_phi_++;
    else counter_cached_TrigObj_phi_++;
    if (!loaded_TrigObj_phi_) {
        if (!b_TrigObj_phi_) throw std::runtime_error("TrigObj_phi branch doesn't exist");
        int bytes = b_TrigObj_phi_->GetEntry(index);
        v_TrigObj_phi_ = vector<float>(TrigObj_phi_,TrigObj_phi_+bytes/sizeof(TrigObj_phi_[0]));
        loaded_TrigObj_phi_ = true;
    }
    return v_TrigObj_phi_;
}
const vector<float> &Nano::TrigObj_pt() {
    if (!loaded_TrigObj_pt_) counter_uncached_TrigObj_pt_++;
    else counter_cached_TrigObj_pt_++;
    if (!loaded_TrigObj_pt_) {
        if (!b_TrigObj_pt_) throw std::runtime_error("TrigObj_pt branch doesn't exist");
        int bytes = b_TrigObj_pt_->GetEntry(index);
        v_TrigObj_pt_ = vector<float>(TrigObj_pt_,TrigObj_pt_+bytes/sizeof(TrigObj_pt_[0]));
        loaded_TrigObj_pt_ = true;
    }
    return v_TrigObj_pt_;
}
const vector<int> &Nano::WCnames() {
    if (!loaded_WCnames_) counter_uncached_WCnames_++;
    else counter_cached_WCnames_++;
    if (!loaded_WCnames_) {
        if (!b_WCnames_) throw std::runtime_error("WCnames branch doesn't exist");
        int bytes = b_WCnames_->GetEntry(index);
        v_WCnames_ = vector<int>(WCnames_,WCnames_+bytes/sizeof(WCnames_[0]));
        loaded_WCnames_ = true;
    }
    return v_WCnames_;
}
const vector<int> &Nano::boostedTau_charge() {
    if (!loaded_boostedTau_charge_) counter_uncached_boostedTau_charge_++;
    else counter_cached_boostedTau_charge_++;
    if (!loaded_boostedTau_charge_) {
        if (!b_boostedTau_charge_) throw std::runtime_error("boostedTau_charge branch doesn't exist");
        int bytes = b_boostedTau_charge_->GetEntry(index);
        v_boostedTau_charge_ = vector<int>(boostedTau_charge_,boostedTau_charge_+bytes/sizeof(boostedTau_charge_[0]));
        loaded_boostedTau_charge_ = true;
    }
    return v_boostedTau_charge_;
}
const vector<float> &Nano::boostedTau_chargedIso() {
    if (!loaded_boostedTau_chargedIso_) counter_uncached_boostedTau_chargedIso_++;
    else counter_cached_boostedTau_chargedIso_++;
    if (!loaded_boostedTau_chargedIso_) {
        if (!b_boostedTau_chargedIso_) throw std::runtime_error("boostedTau_chargedIso branch doesn't exist");
        int bytes = b_boostedTau_chargedIso_->GetEntry(index);
        v_boostedTau_chargedIso_ = vector<float>(boostedTau_chargedIso_,boostedTau_chargedIso_+bytes/sizeof(boostedTau_chargedIso_[0]));
        loaded_boostedTau_chargedIso_ = true;
    }
    return v_boostedTau_chargedIso_;
}
const vector<int> &Nano::boostedTau_decayMode() {
    if (!loaded_boostedTau_decayMode_) counter_uncached_boostedTau_decayMode_++;
    else counter_cached_boostedTau_decayMode_++;
    if (!loaded_boostedTau_decayMode_) {
        if (!b_boostedTau_decayMode_) throw std::runtime_error("boostedTau_decayMode branch doesn't exist");
        int bytes = b_boostedTau_decayMode_->GetEntry(index);
        v_boostedTau_decayMode_ = vector<int>(boostedTau_decayMode_,boostedTau_decayMode_+bytes/sizeof(boostedTau_decayMode_[0]));
        loaded_boostedTau_decayMode_ = true;
    }
    return v_boostedTau_decayMode_;
}
const vector<float> &Nano::boostedTau_eta() {
    if (!loaded_boostedTau_eta_) counter_uncached_boostedTau_eta_++;
    else counter_cached_boostedTau_eta_++;
    if (!loaded_boostedTau_eta_) {
        if (!b_boostedTau_eta_) throw std::runtime_error("boostedTau_eta branch doesn't exist");
        int bytes = b_boostedTau_eta_->GetEntry(index);
        v_boostedTau_eta_ = vector<float>(boostedTau_eta_,boostedTau_eta_+bytes/sizeof(boostedTau_eta_[0]));
        loaded_boostedTau_eta_ = true;
    }
    return v_boostedTau_eta_;
}
const vector<UChar_t> &Nano::boostedTau_genPartFlav() {
    if (!loaded_boostedTau_genPartFlav_) counter_uncached_boostedTau_genPartFlav_++;
    else counter_cached_boostedTau_genPartFlav_++;
    if (!loaded_boostedTau_genPartFlav_) {
        if (!b_boostedTau_genPartFlav_) throw std::runtime_error("boostedTau_genPartFlav branch doesn't exist");
        int bytes = b_boostedTau_genPartFlav_->GetEntry(index);
        v_boostedTau_genPartFlav_ = vector<UChar_t>(boostedTau_genPartFlav_,boostedTau_genPartFlav_+bytes/sizeof(boostedTau_genPartFlav_[0]));
        loaded_boostedTau_genPartFlav_ = true;
    }
    return v_boostedTau_genPartFlav_;
}
const vector<int> &Nano::boostedTau_genPartIdx() {
    if (!loaded_boostedTau_genPartIdx_) counter_uncached_boostedTau_genPartIdx_++;
    else counter_cached_boostedTau_genPartIdx_++;
    if (!loaded_boostedTau_genPartIdx_) {
        if (!b_boostedTau_genPartIdx_) throw std::runtime_error("boostedTau_genPartIdx branch doesn't exist");
        int bytes = b_boostedTau_genPartIdx_->GetEntry(index);
        v_boostedTau_genPartIdx_ = vector<int>(boostedTau_genPartIdx_,boostedTau_genPartIdx_+bytes/sizeof(boostedTau_genPartIdx_[0]));
        loaded_boostedTau_genPartIdx_ = true;
    }
    return v_boostedTau_genPartIdx_;
}
const vector<UChar_t> &Nano::boostedTau_idAntiEle2018() {
    if (!loaded_boostedTau_idAntiEle2018_) counter_uncached_boostedTau_idAntiEle2018_++;
    else counter_cached_boostedTau_idAntiEle2018_++;
    if (!loaded_boostedTau_idAntiEle2018_) {
        if (!b_boostedTau_idAntiEle2018_) throw std::runtime_error("boostedTau_idAntiEle2018 branch doesn't exist");
        int bytes = b_boostedTau_idAntiEle2018_->GetEntry(index);
        v_boostedTau_idAntiEle2018_ = vector<UChar_t>(boostedTau_idAntiEle2018_,boostedTau_idAntiEle2018_+bytes/sizeof(boostedTau_idAntiEle2018_[0]));
        loaded_boostedTau_idAntiEle2018_ = true;
    }
    return v_boostedTau_idAntiEle2018_;
}
const vector<UChar_t> &Nano::boostedTau_idAntiMu() {
    if (!loaded_boostedTau_idAntiMu_) counter_uncached_boostedTau_idAntiMu_++;
    else counter_cached_boostedTau_idAntiMu_++;
    if (!loaded_boostedTau_idAntiMu_) {
        if (!b_boostedTau_idAntiMu_) throw std::runtime_error("boostedTau_idAntiMu branch doesn't exist");
        int bytes = b_boostedTau_idAntiMu_->GetEntry(index);
        v_boostedTau_idAntiMu_ = vector<UChar_t>(boostedTau_idAntiMu_,boostedTau_idAntiMu_+bytes/sizeof(boostedTau_idAntiMu_[0]));
        loaded_boostedTau_idAntiMu_ = true;
    }
    return v_boostedTau_idAntiMu_;
}
const vector<UChar_t> &Nano::boostedTau_idMVAnewDM2017v2() {
    if (!loaded_boostedTau_idMVAnewDM2017v2_) counter_uncached_boostedTau_idMVAnewDM2017v2_++;
    else counter_cached_boostedTau_idMVAnewDM2017v2_++;
    if (!loaded_boostedTau_idMVAnewDM2017v2_) {
        if (!b_boostedTau_idMVAnewDM2017v2_) throw std::runtime_error("boostedTau_idMVAnewDM2017v2 branch doesn't exist");
        int bytes = b_boostedTau_idMVAnewDM2017v2_->GetEntry(index);
        v_boostedTau_idMVAnewDM2017v2_ = vector<UChar_t>(boostedTau_idMVAnewDM2017v2_,boostedTau_idMVAnewDM2017v2_+bytes/sizeof(boostedTau_idMVAnewDM2017v2_[0]));
        loaded_boostedTau_idMVAnewDM2017v2_ = true;
    }
    return v_boostedTau_idMVAnewDM2017v2_;
}
const vector<UChar_t> &Nano::boostedTau_idMVAoldDM2017v2() {
    if (!loaded_boostedTau_idMVAoldDM2017v2_) counter_uncached_boostedTau_idMVAoldDM2017v2_++;
    else counter_cached_boostedTau_idMVAoldDM2017v2_++;
    if (!loaded_boostedTau_idMVAoldDM2017v2_) {
        if (!b_boostedTau_idMVAoldDM2017v2_) throw std::runtime_error("boostedTau_idMVAoldDM2017v2 branch doesn't exist");
        int bytes = b_boostedTau_idMVAoldDM2017v2_->GetEntry(index);
        v_boostedTau_idMVAoldDM2017v2_ = vector<UChar_t>(boostedTau_idMVAoldDM2017v2_,boostedTau_idMVAoldDM2017v2_+bytes/sizeof(boostedTau_idMVAoldDM2017v2_[0]));
        loaded_boostedTau_idMVAoldDM2017v2_ = true;
    }
    return v_boostedTau_idMVAoldDM2017v2_;
}
const vector<UChar_t> &Nano::boostedTau_idMVAoldDMdR032017v2() {
    if (!loaded_boostedTau_idMVAoldDMdR032017v2_) counter_uncached_boostedTau_idMVAoldDMdR032017v2_++;
    else counter_cached_boostedTau_idMVAoldDMdR032017v2_++;
    if (!loaded_boostedTau_idMVAoldDMdR032017v2_) {
        if (!b_boostedTau_idMVAoldDMdR032017v2_) throw std::runtime_error("boostedTau_idMVAoldDMdR032017v2 branch doesn't exist");
        int bytes = b_boostedTau_idMVAoldDMdR032017v2_->GetEntry(index);
        v_boostedTau_idMVAoldDMdR032017v2_ = vector<UChar_t>(boostedTau_idMVAoldDMdR032017v2_,boostedTau_idMVAoldDMdR032017v2_+bytes/sizeof(boostedTau_idMVAoldDMdR032017v2_[0]));
        loaded_boostedTau_idMVAoldDMdR032017v2_ = true;
    }
    return v_boostedTau_idMVAoldDMdR032017v2_;
}
const vector<int> &Nano::boostedTau_jetIdx() {
    if (!loaded_boostedTau_jetIdx_) counter_uncached_boostedTau_jetIdx_++;
    else counter_cached_boostedTau_jetIdx_++;
    if (!loaded_boostedTau_jetIdx_) {
        if (!b_boostedTau_jetIdx_) throw std::runtime_error("boostedTau_jetIdx branch doesn't exist");
        int bytes = b_boostedTau_jetIdx_->GetEntry(index);
        v_boostedTau_jetIdx_ = vector<int>(boostedTau_jetIdx_,boostedTau_jetIdx_+bytes/sizeof(boostedTau_jetIdx_[0]));
        loaded_boostedTau_jetIdx_ = true;
    }
    return v_boostedTau_jetIdx_;
}
const vector<float> &Nano::boostedTau_leadTkDeltaEta() {
    if (!loaded_boostedTau_leadTkDeltaEta_) counter_uncached_boostedTau_leadTkDeltaEta_++;
    else counter_cached_boostedTau_leadTkDeltaEta_++;
    if (!loaded_boostedTau_leadTkDeltaEta_) {
        if (!b_boostedTau_leadTkDeltaEta_) throw std::runtime_error("boostedTau_leadTkDeltaEta branch doesn't exist");
        int bytes = b_boostedTau_leadTkDeltaEta_->GetEntry(index);
        v_boostedTau_leadTkDeltaEta_ = vector<float>(boostedTau_leadTkDeltaEta_,boostedTau_leadTkDeltaEta_+bytes/sizeof(boostedTau_leadTkDeltaEta_[0]));
        loaded_boostedTau_leadTkDeltaEta_ = true;
    }
    return v_boostedTau_leadTkDeltaEta_;
}
const vector<float> &Nano::boostedTau_leadTkDeltaPhi() {
    if (!loaded_boostedTau_leadTkDeltaPhi_) counter_uncached_boostedTau_leadTkDeltaPhi_++;
    else counter_cached_boostedTau_leadTkDeltaPhi_++;
    if (!loaded_boostedTau_leadTkDeltaPhi_) {
        if (!b_boostedTau_leadTkDeltaPhi_) throw std::runtime_error("boostedTau_leadTkDeltaPhi branch doesn't exist");
        int bytes = b_boostedTau_leadTkDeltaPhi_->GetEntry(index);
        v_boostedTau_leadTkDeltaPhi_ = vector<float>(boostedTau_leadTkDeltaPhi_,boostedTau_leadTkDeltaPhi_+bytes/sizeof(boostedTau_leadTkDeltaPhi_[0]));
        loaded_boostedTau_leadTkDeltaPhi_ = true;
    }
    return v_boostedTau_leadTkDeltaPhi_;
}
const vector<float> &Nano::boostedTau_leadTkPtOverTauPt() {
    if (!loaded_boostedTau_leadTkPtOverTauPt_) counter_uncached_boostedTau_leadTkPtOverTauPt_++;
    else counter_cached_boostedTau_leadTkPtOverTauPt_++;
    if (!loaded_boostedTau_leadTkPtOverTauPt_) {
        if (!b_boostedTau_leadTkPtOverTauPt_) throw std::runtime_error("boostedTau_leadTkPtOverTauPt branch doesn't exist");
        int bytes = b_boostedTau_leadTkPtOverTauPt_->GetEntry(index);
        v_boostedTau_leadTkPtOverTauPt_ = vector<float>(boostedTau_leadTkPtOverTauPt_,boostedTau_leadTkPtOverTauPt_+bytes/sizeof(boostedTau_leadTkPtOverTauPt_[0]));
        loaded_boostedTau_leadTkPtOverTauPt_ = true;
    }
    return v_boostedTau_leadTkPtOverTauPt_;
}
const vector<float> &Nano::boostedTau_mass() {
    if (!loaded_boostedTau_mass_) counter_uncached_boostedTau_mass_++;
    else counter_cached_boostedTau_mass_++;
    if (!loaded_boostedTau_mass_) {
        if (!b_boostedTau_mass_) throw std::runtime_error("boostedTau_mass branch doesn't exist");
        int bytes = b_boostedTau_mass_->GetEntry(index);
        v_boostedTau_mass_ = vector<float>(boostedTau_mass_,boostedTau_mass_+bytes/sizeof(boostedTau_mass_[0]));
        loaded_boostedTau_mass_ = true;
    }
    return v_boostedTau_mass_;
}
const vector<float> &Nano::boostedTau_neutralIso() {
    if (!loaded_boostedTau_neutralIso_) counter_uncached_boostedTau_neutralIso_++;
    else counter_cached_boostedTau_neutralIso_++;
    if (!loaded_boostedTau_neutralIso_) {
        if (!b_boostedTau_neutralIso_) throw std::runtime_error("boostedTau_neutralIso branch doesn't exist");
        int bytes = b_boostedTau_neutralIso_->GetEntry(index);
        v_boostedTau_neutralIso_ = vector<float>(boostedTau_neutralIso_,boostedTau_neutralIso_+bytes/sizeof(boostedTau_neutralIso_[0]));
        loaded_boostedTau_neutralIso_ = true;
    }
    return v_boostedTau_neutralIso_;
}
const vector<LorentzVector> &Nano::boostedTau_p4() {
    if (!loaded_boostedTau_p4_) counter_uncached_boostedTau_p4_++;
    else counter_cached_boostedTau_p4_++;
    if (!loaded_boostedTau_p4_) {
        v_boostedTau_p4_.clear();
        vector<float> pts = Nano::boostedTau_pt();
        vector<float> etas = Nano::boostedTau_eta();
        vector<float> phis = Nano::boostedTau_phi();
        vector<float> masses = Nano::boostedTau_mass();
        for (unsigned int i=0; i < pts.size(); i++) {
            v_boostedTau_p4_.push_back(LorentzVector(pts[i],etas[i],phis[i],masses[i]));
        }
        loaded_boostedTau_p4_ = true;
    }
    return v_boostedTau_p4_;
}
const vector<float> &Nano::boostedTau_phi() {
    if (!loaded_boostedTau_phi_) counter_uncached_boostedTau_phi_++;
    else counter_cached_boostedTau_phi_++;
    if (!loaded_boostedTau_phi_) {
        if (!b_boostedTau_phi_) throw std::runtime_error("boostedTau_phi branch doesn't exist");
        int bytes = b_boostedTau_phi_->GetEntry(index);
        v_boostedTau_phi_ = vector<float>(boostedTau_phi_,boostedTau_phi_+bytes/sizeof(boostedTau_phi_[0]));
        loaded_boostedTau_phi_ = true;
    }
    return v_boostedTau_phi_;
}
const vector<float> &Nano::boostedTau_photonsOutsideSignalCone() {
    if (!loaded_boostedTau_photonsOutsideSignalCone_) counter_uncached_boostedTau_photonsOutsideSignalCone_++;
    else counter_cached_boostedTau_photonsOutsideSignalCone_++;
    if (!loaded_boostedTau_photonsOutsideSignalCone_) {
        if (!b_boostedTau_photonsOutsideSignalCone_) throw std::runtime_error("boostedTau_photonsOutsideSignalCone branch doesn't exist");
        int bytes = b_boostedTau_photonsOutsideSignalCone_->GetEntry(index);
        v_boostedTau_photonsOutsideSignalCone_ = vector<float>(boostedTau_photonsOutsideSignalCone_,boostedTau_photonsOutsideSignalCone_+bytes/sizeof(boostedTau_photonsOutsideSignalCone_[0]));
        loaded_boostedTau_photonsOutsideSignalCone_ = true;
    }
    return v_boostedTau_photonsOutsideSignalCone_;
}
const vector<float> &Nano::boostedTau_pt() {
    if (!loaded_boostedTau_pt_) counter_uncached_boostedTau_pt_++;
    else counter_cached_boostedTau_pt_++;
    if (!loaded_boostedTau_pt_) {
        if (!b_boostedTau_pt_) throw std::runtime_error("boostedTau_pt branch doesn't exist");
        int bytes = b_boostedTau_pt_->GetEntry(index);
        v_boostedTau_pt_ = vector<float>(boostedTau_pt_,boostedTau_pt_+bytes/sizeof(boostedTau_pt_[0]));
        loaded_boostedTau_pt_ = true;
    }
    return v_boostedTau_pt_;
}
const vector<float> &Nano::boostedTau_puCorr() {
    if (!loaded_boostedTau_puCorr_) counter_uncached_boostedTau_puCorr_++;
    else counter_cached_boostedTau_puCorr_++;
    if (!loaded_boostedTau_puCorr_) {
        if (!b_boostedTau_puCorr_) throw std::runtime_error("boostedTau_puCorr branch doesn't exist");
        int bytes = b_boostedTau_puCorr_->GetEntry(index);
        v_boostedTau_puCorr_ = vector<float>(boostedTau_puCorr_,boostedTau_puCorr_+bytes/sizeof(boostedTau_puCorr_[0]));
        loaded_boostedTau_puCorr_ = true;
    }
    return v_boostedTau_puCorr_;
}
const vector<float> &Nano::boostedTau_rawAntiEle2018() {
    if (!loaded_boostedTau_rawAntiEle2018_) counter_uncached_boostedTau_rawAntiEle2018_++;
    else counter_cached_boostedTau_rawAntiEle2018_++;
    if (!loaded_boostedTau_rawAntiEle2018_) {
        if (!b_boostedTau_rawAntiEle2018_) throw std::runtime_error("boostedTau_rawAntiEle2018 branch doesn't exist");
        int bytes = b_boostedTau_rawAntiEle2018_->GetEntry(index);
        v_boostedTau_rawAntiEle2018_ = vector<float>(boostedTau_rawAntiEle2018_,boostedTau_rawAntiEle2018_+bytes/sizeof(boostedTau_rawAntiEle2018_[0]));
        loaded_boostedTau_rawAntiEle2018_ = true;
    }
    return v_boostedTau_rawAntiEle2018_;
}
const vector<int> &Nano::boostedTau_rawAntiEleCat2018() {
    if (!loaded_boostedTau_rawAntiEleCat2018_) counter_uncached_boostedTau_rawAntiEleCat2018_++;
    else counter_cached_boostedTau_rawAntiEleCat2018_++;
    if (!loaded_boostedTau_rawAntiEleCat2018_) {
        if (!b_boostedTau_rawAntiEleCat2018_) throw std::runtime_error("boostedTau_rawAntiEleCat2018 branch doesn't exist");
        int bytes = b_boostedTau_rawAntiEleCat2018_->GetEntry(index);
        v_boostedTau_rawAntiEleCat2018_ = vector<int>(boostedTau_rawAntiEleCat2018_,boostedTau_rawAntiEleCat2018_+bytes/sizeof(boostedTau_rawAntiEleCat2018_[0]));
        loaded_boostedTau_rawAntiEleCat2018_ = true;
    }
    return v_boostedTau_rawAntiEleCat2018_;
}
const vector<float> &Nano::boostedTau_rawIso() {
    if (!loaded_boostedTau_rawIso_) counter_uncached_boostedTau_rawIso_++;
    else counter_cached_boostedTau_rawIso_++;
    if (!loaded_boostedTau_rawIso_) {
        if (!b_boostedTau_rawIso_) throw std::runtime_error("boostedTau_rawIso branch doesn't exist");
        int bytes = b_boostedTau_rawIso_->GetEntry(index);
        v_boostedTau_rawIso_ = vector<float>(boostedTau_rawIso_,boostedTau_rawIso_+bytes/sizeof(boostedTau_rawIso_[0]));
        loaded_boostedTau_rawIso_ = true;
    }
    return v_boostedTau_rawIso_;
}
const vector<float> &Nano::boostedTau_rawIsodR03() {
    if (!loaded_boostedTau_rawIsodR03_) counter_uncached_boostedTau_rawIsodR03_++;
    else counter_cached_boostedTau_rawIsodR03_++;
    if (!loaded_boostedTau_rawIsodR03_) {
        if (!b_boostedTau_rawIsodR03_) throw std::runtime_error("boostedTau_rawIsodR03 branch doesn't exist");
        int bytes = b_boostedTau_rawIsodR03_->GetEntry(index);
        v_boostedTau_rawIsodR03_ = vector<float>(boostedTau_rawIsodR03_,boostedTau_rawIsodR03_+bytes/sizeof(boostedTau_rawIsodR03_[0]));
        loaded_boostedTau_rawIsodR03_ = true;
    }
    return v_boostedTau_rawIsodR03_;
}
const vector<float> &Nano::boostedTau_rawMVAnewDM2017v2() {
    if (!loaded_boostedTau_rawMVAnewDM2017v2_) counter_uncached_boostedTau_rawMVAnewDM2017v2_++;
    else counter_cached_boostedTau_rawMVAnewDM2017v2_++;
    if (!loaded_boostedTau_rawMVAnewDM2017v2_) {
        if (!b_boostedTau_rawMVAnewDM2017v2_) throw std::runtime_error("boostedTau_rawMVAnewDM2017v2 branch doesn't exist");
        int bytes = b_boostedTau_rawMVAnewDM2017v2_->GetEntry(index);
        v_boostedTau_rawMVAnewDM2017v2_ = vector<float>(boostedTau_rawMVAnewDM2017v2_,boostedTau_rawMVAnewDM2017v2_+bytes/sizeof(boostedTau_rawMVAnewDM2017v2_[0]));
        loaded_boostedTau_rawMVAnewDM2017v2_ = true;
    }
    return v_boostedTau_rawMVAnewDM2017v2_;
}
const vector<float> &Nano::boostedTau_rawMVAoldDM2017v2() {
    if (!loaded_boostedTau_rawMVAoldDM2017v2_) counter_uncached_boostedTau_rawMVAoldDM2017v2_++;
    else counter_cached_boostedTau_rawMVAoldDM2017v2_++;
    if (!loaded_boostedTau_rawMVAoldDM2017v2_) {
        if (!b_boostedTau_rawMVAoldDM2017v2_) throw std::runtime_error("boostedTau_rawMVAoldDM2017v2 branch doesn't exist");
        int bytes = b_boostedTau_rawMVAoldDM2017v2_->GetEntry(index);
        v_boostedTau_rawMVAoldDM2017v2_ = vector<float>(boostedTau_rawMVAoldDM2017v2_,boostedTau_rawMVAoldDM2017v2_+bytes/sizeof(boostedTau_rawMVAoldDM2017v2_[0]));
        loaded_boostedTau_rawMVAoldDM2017v2_ = true;
    }
    return v_boostedTau_rawMVAoldDM2017v2_;
}
const vector<float> &Nano::boostedTau_rawMVAoldDMdR032017v2() {
    if (!loaded_boostedTau_rawMVAoldDMdR032017v2_) counter_uncached_boostedTau_rawMVAoldDMdR032017v2_++;
    else counter_cached_boostedTau_rawMVAoldDMdR032017v2_++;
    if (!loaded_boostedTau_rawMVAoldDMdR032017v2_) {
        if (!b_boostedTau_rawMVAoldDMdR032017v2_) throw std::runtime_error("boostedTau_rawMVAoldDMdR032017v2 branch doesn't exist");
        int bytes = b_boostedTau_rawMVAoldDMdR032017v2_->GetEntry(index);
        v_boostedTau_rawMVAoldDMdR032017v2_ = vector<float>(boostedTau_rawMVAoldDMdR032017v2_,boostedTau_rawMVAoldDMdR032017v2_+bytes/sizeof(boostedTau_rawMVAoldDMdR032017v2_[0]));
        loaded_boostedTau_rawMVAoldDMdR032017v2_ = true;
    }
    return v_boostedTau_rawMVAoldDMdR032017v2_;
}
const float &Nano::btagWeight_CSVV2() {
    if (!loaded_btagWeight_CSVV2_) counter_uncached_btagWeight_CSVV2_++;
    else counter_cached_btagWeight_CSVV2_++;
    if (!loaded_btagWeight_CSVV2_) {
        if (!b_btagWeight_CSVV2_) throw std::runtime_error("btagWeight_CSVV2 branch doesn't exist");
        b_btagWeight_CSVV2_->GetEntry(index);
        loaded_btagWeight_CSVV2_ = true;
    }
    return btagWeight_CSVV2_;
}
const float &Nano::btagWeight_DeepCSVB() {
    if (!loaded_btagWeight_DeepCSVB_) counter_uncached_btagWeight_DeepCSVB_++;
    else counter_cached_btagWeight_DeepCSVB_++;
    if (!loaded_btagWeight_DeepCSVB_) {
        if (!b_btagWeight_DeepCSVB_) throw std::runtime_error("btagWeight_DeepCSVB branch doesn't exist");
        b_btagWeight_DeepCSVB_->GetEntry(index);
        loaded_btagWeight_DeepCSVB_ = true;
    }
    return btagWeight_DeepCSVB_;
}
const UInt_t &Nano::bunchCrossing() {
    if (!loaded_bunchCrossing_) counter_uncached_bunchCrossing_++;
    else counter_cached_bunchCrossing_++;
    if (!loaded_bunchCrossing_) {
        if (!b_bunchCrossing_) throw std::runtime_error("bunchCrossing branch doesn't exist");
        b_bunchCrossing_->GetEntry(index);
        loaded_bunchCrossing_ = true;
    }
    return bunchCrossing_;
}
const ULong64_t &Nano::event() {
    if (!loaded_event_) counter_uncached_event_++;
    else counter_cached_event_++;
    if (!loaded_event_) {
        if (!b_event_) throw std::runtime_error("event branch doesn't exist");
        b_event_->GetEntry(index);
        loaded_event_ = true;
    }
    return event_;
}
const float &Nano::fixedGridRhoFastjetAll() {
    if (!loaded_fixedGridRhoFastjetAll_) counter_uncached_fixedGridRhoFastjetAll_++;
    else counter_cached_fixedGridRhoFastjetAll_++;
    if (!loaded_fixedGridRhoFastjetAll_) {
        if (!b_fixedGridRhoFastjetAll_) throw std::runtime_error("fixedGridRhoFastjetAll branch doesn't exist");
        b_fixedGridRhoFastjetAll_->GetEntry(index);
        loaded_fixedGridRhoFastjetAll_ = true;
    }
    return fixedGridRhoFastjetAll_;
}
const float &Nano::fixedGridRhoFastjetCentral() {
    if (!loaded_fixedGridRhoFastjetCentral_) counter_uncached_fixedGridRhoFastjetCentral_++;
    else counter_cached_fixedGridRhoFastjetCentral_++;
    if (!loaded_fixedGridRhoFastjetCentral_) {
        if (!b_fixedGridRhoFastjetCentral_) throw std::runtime_error("fixedGridRhoFastjetCentral branch doesn't exist");
        b_fixedGridRhoFastjetCentral_->GetEntry(index);
        loaded_fixedGridRhoFastjetCentral_ = true;
    }
    return fixedGridRhoFastjetCentral_;
}
const float &Nano::fixedGridRhoFastjetCentralCalo() {
    if (!loaded_fixedGridRhoFastjetCentralCalo_) counter_uncached_fixedGridRhoFastjetCentralCalo_++;
    else counter_cached_fixedGridRhoFastjetCentralCalo_++;
    if (!loaded_fixedGridRhoFastjetCentralCalo_) {
        if (!b_fixedGridRhoFastjetCentralCalo_) throw std::runtime_error("fixedGridRhoFastjetCentralCalo branch doesn't exist");
        b_fixedGridRhoFastjetCentralCalo_->GetEntry(index);
        loaded_fixedGridRhoFastjetCentralCalo_ = true;
    }
    return fixedGridRhoFastjetCentralCalo_;
}
const float &Nano::fixedGridRhoFastjetCentralChargedPileUp() {
    if (!loaded_fixedGridRhoFastjetCentralChargedPileUp_) counter_uncached_fixedGridRhoFastjetCentralChargedPileUp_++;
    else counter_cached_fixedGridRhoFastjetCentralChargedPileUp_++;
    if (!loaded_fixedGridRhoFastjetCentralChargedPileUp_) {
        if (!b_fixedGridRhoFastjetCentralChargedPileUp_) throw std::runtime_error("fixedGridRhoFastjetCentralChargedPileUp branch doesn't exist");
        b_fixedGridRhoFastjetCentralChargedPileUp_->GetEntry(index);
        loaded_fixedGridRhoFastjetCentralChargedPileUp_ = true;
    }
    return fixedGridRhoFastjetCentralChargedPileUp_;
}
const float &Nano::fixedGridRhoFastjetCentralNeutral() {
    if (!loaded_fixedGridRhoFastjetCentralNeutral_) counter_uncached_fixedGridRhoFastjetCentralNeutral_++;
    else counter_cached_fixedGridRhoFastjetCentralNeutral_++;
    if (!loaded_fixedGridRhoFastjetCentralNeutral_) {
        if (!b_fixedGridRhoFastjetCentralNeutral_) throw std::runtime_error("fixedGridRhoFastjetCentralNeutral branch doesn't exist");
        b_fixedGridRhoFastjetCentralNeutral_->GetEntry(index);
        loaded_fixedGridRhoFastjetCentralNeutral_ = true;
    }
    return fixedGridRhoFastjetCentralNeutral_;
}
const int &Nano::genTtbarId() {
    if (!loaded_genTtbarId_) counter_uncached_genTtbarId_++;
    else counter_cached_genTtbarId_++;
    if (!loaded_genTtbarId_) {
        if (!b_genTtbarId_) throw std::runtime_error("genTtbarId branch doesn't exist");
        b_genTtbarId_->GetEntry(index);
        loaded_genTtbarId_ = true;
    }
    return genTtbarId_;
}
const float &Nano::genWeight() {
    if (!loaded_genWeight_) counter_uncached_genWeight_++;
    else counter_cached_genWeight_++;
    if (!loaded_genWeight_) {
        if (!b_genWeight_) throw std::runtime_error("genWeight branch doesn't exist");
        b_genWeight_->GetEntry(index);
        loaded_genWeight_ = true;
    }
    return genWeight_;
}
const UInt_t &Nano::luminosityBlock() {
    if (!loaded_luminosityBlock_) counter_uncached_luminosityBlock_++;
    else counter_cached_luminosityBlock_++;
    if (!loaded_luminosityBlock_) {
        if (!b_luminosityBlock_) throw std::runtime_error("luminosityBlock branch doesn't exist");
        b_luminosityBlock_->GetEntry(index);
        loaded_luminosityBlock_ = true;
    }
    return luminosityBlock_;
}
const UInt_t &Nano::nCorrT1METJet() {
    if (!loaded_nCorrT1METJet_) counter_uncached_nCorrT1METJet_++;
    else counter_cached_nCorrT1METJet_++;
    if (!loaded_nCorrT1METJet_) {
        if (!b_nCorrT1METJet_) throw std::runtime_error("nCorrT1METJet branch doesn't exist");
        b_nCorrT1METJet_->GetEntry(index);
        loaded_nCorrT1METJet_ = true;
    }
    return nCorrT1METJet_;
}
const UInt_t &Nano::nEFTfitCoefficients() {
    if (!loaded_nEFTfitCoefficients_) counter_uncached_nEFTfitCoefficients_++;
    else counter_cached_nEFTfitCoefficients_++;
    if (!loaded_nEFTfitCoefficients_) {
        if (!b_nEFTfitCoefficients_) throw std::runtime_error("nEFTfitCoefficients branch doesn't exist");
        b_nEFTfitCoefficients_->GetEntry(index);
        loaded_nEFTfitCoefficients_ = true;
    }
    return nEFTfitCoefficients_;
}
const UInt_t &Nano::nElectron() {
    if (!loaded_nElectron_) counter_uncached_nElectron_++;
    else counter_cached_nElectron_++;
    if (!loaded_nElectron_) {
        if (!b_nElectron_) throw std::runtime_error("nElectron branch doesn't exist");
        b_nElectron_->GetEntry(index);
        loaded_nElectron_ = true;
    }
    return nElectron_;
}
const UInt_t &Nano::nFatJet() {
    if (!loaded_nFatJet_) counter_uncached_nFatJet_++;
    else counter_cached_nFatJet_++;
    if (!loaded_nFatJet_) {
        if (!b_nFatJet_) throw std::runtime_error("nFatJet branch doesn't exist");
        b_nFatJet_->GetEntry(index);
        loaded_nFatJet_ = true;
    }
    return nFatJet_;
}
const UInt_t &Nano::nFsrPhoton() {
    if (!loaded_nFsrPhoton_) counter_uncached_nFsrPhoton_++;
    else counter_cached_nFsrPhoton_++;
    if (!loaded_nFsrPhoton_) {
        if (!b_nFsrPhoton_) throw std::runtime_error("nFsrPhoton branch doesn't exist");
        b_nFsrPhoton_->GetEntry(index);
        loaded_nFsrPhoton_ = true;
    }
    return nFsrPhoton_;
}
const UInt_t &Nano::nGenDressedLepton() {
    if (!loaded_nGenDressedLepton_) counter_uncached_nGenDressedLepton_++;
    else counter_cached_nGenDressedLepton_++;
    if (!loaded_nGenDressedLepton_) {
        if (!b_nGenDressedLepton_) throw std::runtime_error("nGenDressedLepton branch doesn't exist");
        b_nGenDressedLepton_->GetEntry(index);
        loaded_nGenDressedLepton_ = true;
    }
    return nGenDressedLepton_;
}
const UInt_t &Nano::nGenIsolatedPhoton() {
    if (!loaded_nGenIsolatedPhoton_) counter_uncached_nGenIsolatedPhoton_++;
    else counter_cached_nGenIsolatedPhoton_++;
    if (!loaded_nGenIsolatedPhoton_) {
        if (!b_nGenIsolatedPhoton_) throw std::runtime_error("nGenIsolatedPhoton branch doesn't exist");
        b_nGenIsolatedPhoton_->GetEntry(index);
        loaded_nGenIsolatedPhoton_ = true;
    }
    return nGenIsolatedPhoton_;
}
const UInt_t &Nano::nGenJet() {
    if (!loaded_nGenJet_) counter_uncached_nGenJet_++;
    else counter_cached_nGenJet_++;
    if (!loaded_nGenJet_) {
        if (!b_nGenJet_) throw std::runtime_error("nGenJet branch doesn't exist");
        b_nGenJet_->GetEntry(index);
        loaded_nGenJet_ = true;
    }
    return nGenJet_;
}
const UInt_t &Nano::nGenJetAK8() {
    if (!loaded_nGenJetAK8_) counter_uncached_nGenJetAK8_++;
    else counter_cached_nGenJetAK8_++;
    if (!loaded_nGenJetAK8_) {
        if (!b_nGenJetAK8_) throw std::runtime_error("nGenJetAK8 branch doesn't exist");
        b_nGenJetAK8_->GetEntry(index);
        loaded_nGenJetAK8_ = true;
    }
    return nGenJetAK8_;
}
const UInt_t &Nano::nGenPart() {
    if (!loaded_nGenPart_) counter_uncached_nGenPart_++;
    else counter_cached_nGenPart_++;
    if (!loaded_nGenPart_) {
        if (!b_nGenPart_) throw std::runtime_error("nGenPart branch doesn't exist");
        b_nGenPart_->GetEntry(index);
        loaded_nGenPart_ = true;
    }
    return nGenPart_;
}
const UInt_t &Nano::nGenProton() {
    if (!loaded_nGenProton_) counter_uncached_nGenProton_++;
    else counter_cached_nGenProton_++;
    if (!loaded_nGenProton_) {
        if (!b_nGenProton_) throw std::runtime_error("nGenProton branch doesn't exist");
        b_nGenProton_->GetEntry(index);
        loaded_nGenProton_ = true;
    }
    return nGenProton_;
}
const UInt_t &Nano::nGenVisTau() {
    if (!loaded_nGenVisTau_) counter_uncached_nGenVisTau_++;
    else counter_cached_nGenVisTau_++;
    if (!loaded_nGenVisTau_) {
        if (!b_nGenVisTau_) throw std::runtime_error("nGenVisTau branch doesn't exist");
        b_nGenVisTau_->GetEntry(index);
        loaded_nGenVisTau_ = true;
    }
    return nGenVisTau_;
}
const UInt_t &Nano::nIsoTrack() {
    if (!loaded_nIsoTrack_) counter_uncached_nIsoTrack_++;
    else counter_cached_nIsoTrack_++;
    if (!loaded_nIsoTrack_) {
        if (!b_nIsoTrack_) throw std::runtime_error("nIsoTrack branch doesn't exist");
        b_nIsoTrack_->GetEntry(index);
        loaded_nIsoTrack_ = true;
    }
    return nIsoTrack_;
}
const UInt_t &Nano::nJet() {
    if (!loaded_nJet_) counter_uncached_nJet_++;
    else counter_cached_nJet_++;
    if (!loaded_nJet_) {
        if (!b_nJet_) throw std::runtime_error("nJet branch doesn't exist");
        b_nJet_->GetEntry(index);
        loaded_nJet_ = true;
    }
    return nJet_;
}
const UInt_t &Nano::nLHEPart() {
    if (!loaded_nLHEPart_) counter_uncached_nLHEPart_++;
    else counter_cached_nLHEPart_++;
    if (!loaded_nLHEPart_) {
        if (!b_nLHEPart_) throw std::runtime_error("nLHEPart branch doesn't exist");
        b_nLHEPart_->GetEntry(index);
        loaded_nLHEPart_ = true;
    }
    return nLHEPart_;
}
const UInt_t &Nano::nLHEPdfWeight() {
    if (!loaded_nLHEPdfWeight_) counter_uncached_nLHEPdfWeight_++;
    else counter_cached_nLHEPdfWeight_++;
    if (!loaded_nLHEPdfWeight_) {
        if (!b_nLHEPdfWeight_) throw std::runtime_error("nLHEPdfWeight branch doesn't exist");
        b_nLHEPdfWeight_->GetEntry(index);
        loaded_nLHEPdfWeight_ = true;
    }
    return nLHEPdfWeight_;
}
const UInt_t &Nano::nLHEReweightingWeight() {
    if (!loaded_nLHEReweightingWeight_) counter_uncached_nLHEReweightingWeight_++;
    else counter_cached_nLHEReweightingWeight_++;
    if (!loaded_nLHEReweightingWeight_) {
        if (!b_nLHEReweightingWeight_) throw std::runtime_error("nLHEReweightingWeight branch doesn't exist");
        b_nLHEReweightingWeight_->GetEntry(index);
        loaded_nLHEReweightingWeight_ = true;
    }
    return nLHEReweightingWeight_;
}
const UInt_t &Nano::nLHEScaleWeight() {
    if (!loaded_nLHEScaleWeight_) counter_uncached_nLHEScaleWeight_++;
    else counter_cached_nLHEScaleWeight_++;
    if (!loaded_nLHEScaleWeight_) {
        if (!b_nLHEScaleWeight_) throw std::runtime_error("nLHEScaleWeight branch doesn't exist");
        b_nLHEScaleWeight_->GetEntry(index);
        loaded_nLHEScaleWeight_ = true;
    }
    return nLHEScaleWeight_;
}
const UInt_t &Nano::nLowPtElectron() {
    if (!loaded_nLowPtElectron_) counter_uncached_nLowPtElectron_++;
    else counter_cached_nLowPtElectron_++;
    if (!loaded_nLowPtElectron_) {
        if (!b_nLowPtElectron_) throw std::runtime_error("nLowPtElectron branch doesn't exist");
        b_nLowPtElectron_->GetEntry(index);
        loaded_nLowPtElectron_ = true;
    }
    return nLowPtElectron_;
}
const UInt_t &Nano::nMuon() {
    if (!loaded_nMuon_) counter_uncached_nMuon_++;
    else counter_cached_nMuon_++;
    if (!loaded_nMuon_) {
        if (!b_nMuon_) throw std::runtime_error("nMuon branch doesn't exist");
        b_nMuon_->GetEntry(index);
        loaded_nMuon_ = true;
    }
    return nMuon_;
}
const UInt_t &Nano::nOtherPV() {
    if (!loaded_nOtherPV_) counter_uncached_nOtherPV_++;
    else counter_cached_nOtherPV_++;
    if (!loaded_nOtherPV_) {
        if (!b_nOtherPV_) throw std::runtime_error("nOtherPV branch doesn't exist");
        b_nOtherPV_->GetEntry(index);
        loaded_nOtherPV_ = true;
    }
    return nOtherPV_;
}
const UInt_t &Nano::nPPSLocalTrack() {
    if (!loaded_nPPSLocalTrack_) counter_uncached_nPPSLocalTrack_++;
    else counter_cached_nPPSLocalTrack_++;
    if (!loaded_nPPSLocalTrack_) {
        if (!b_nPPSLocalTrack_) throw std::runtime_error("nPPSLocalTrack branch doesn't exist");
        b_nPPSLocalTrack_->GetEntry(index);
        loaded_nPPSLocalTrack_ = true;
    }
    return nPPSLocalTrack_;
}
const UInt_t &Nano::nPSWeight() {
    if (!loaded_nPSWeight_) counter_uncached_nPSWeight_++;
    else counter_cached_nPSWeight_++;
    if (!loaded_nPSWeight_) {
        if (!b_nPSWeight_) throw std::runtime_error("nPSWeight branch doesn't exist");
        b_nPSWeight_->GetEntry(index);
        loaded_nPSWeight_ = true;
    }
    return nPSWeight_;
}
const UInt_t &Nano::nPhoton() {
    if (!loaded_nPhoton_) counter_uncached_nPhoton_++;
    else counter_cached_nPhoton_++;
    if (!loaded_nPhoton_) {
        if (!b_nPhoton_) throw std::runtime_error("nPhoton branch doesn't exist");
        b_nPhoton_->GetEntry(index);
        loaded_nPhoton_ = true;
    }
    return nPhoton_;
}
const UInt_t &Nano::nProton_multiRP() {
    if (!loaded_nProton_multiRP_) counter_uncached_nProton_multiRP_++;
    else counter_cached_nProton_multiRP_++;
    if (!loaded_nProton_multiRP_) {
        if (!b_nProton_multiRP_) throw std::runtime_error("nProton_multiRP branch doesn't exist");
        b_nProton_multiRP_->GetEntry(index);
        loaded_nProton_multiRP_ = true;
    }
    return nProton_multiRP_;
}
const UInt_t &Nano::nProton_singleRP() {
    if (!loaded_nProton_singleRP_) counter_uncached_nProton_singleRP_++;
    else counter_cached_nProton_singleRP_++;
    if (!loaded_nProton_singleRP_) {
        if (!b_nProton_singleRP_) throw std::runtime_error("nProton_singleRP branch doesn't exist");
        b_nProton_singleRP_->GetEntry(index);
        loaded_nProton_singleRP_ = true;
    }
    return nProton_singleRP_;
}
const UInt_t &Nano::nSV() {
    if (!loaded_nSV_) counter_uncached_nSV_++;
    else counter_cached_nSV_++;
    if (!loaded_nSV_) {
        if (!b_nSV_) throw std::runtime_error("nSV branch doesn't exist");
        b_nSV_->GetEntry(index);
        loaded_nSV_ = true;
    }
    return nSV_;
}
const UInt_t &Nano::nSoftActivityJet() {
    if (!loaded_nSoftActivityJet_) counter_uncached_nSoftActivityJet_++;
    else counter_cached_nSoftActivityJet_++;
    if (!loaded_nSoftActivityJet_) {
        if (!b_nSoftActivityJet_) throw std::runtime_error("nSoftActivityJet branch doesn't exist");
        b_nSoftActivityJet_->GetEntry(index);
        loaded_nSoftActivityJet_ = true;
    }
    return nSoftActivityJet_;
}
const UInt_t &Nano::nSubGenJetAK8() {
    if (!loaded_nSubGenJetAK8_) counter_uncached_nSubGenJetAK8_++;
    else counter_cached_nSubGenJetAK8_++;
    if (!loaded_nSubGenJetAK8_) {
        if (!b_nSubGenJetAK8_) throw std::runtime_error("nSubGenJetAK8 branch doesn't exist");
        b_nSubGenJetAK8_->GetEntry(index);
        loaded_nSubGenJetAK8_ = true;
    }
    return nSubGenJetAK8_;
}
const UInt_t &Nano::nSubJet() {
    if (!loaded_nSubJet_) counter_uncached_nSubJet_++;
    else counter_cached_nSubJet_++;
    if (!loaded_nSubJet_) {
        if (!b_nSubJet_) throw std::runtime_error("nSubJet branch doesn't exist");
        b_nSubJet_->GetEntry(index);
        loaded_nSubJet_ = true;
    }
    return nSubJet_;
}
const UInt_t &Nano::nTau() {
    if (!loaded_nTau_) counter_uncached_nTau_++;
    else counter_cached_nTau_++;
    if (!loaded_nTau_) {
        if (!b_nTau_) throw std::runtime_error("nTau branch doesn't exist");
        b_nTau_->GetEntry(index);
        loaded_nTau_ = true;
    }
    return nTau_;
}
const UInt_t &Nano::nTrigObj() {
    if (!loaded_nTrigObj_) counter_uncached_nTrigObj_++;
    else counter_cached_nTrigObj_++;
    if (!loaded_nTrigObj_) {
        if (!b_nTrigObj_) throw std::runtime_error("nTrigObj branch doesn't exist");
        b_nTrigObj_->GetEntry(index);
        loaded_nTrigObj_ = true;
    }
    return nTrigObj_;
}
const UInt_t &Nano::nWCnames() {
    if (!loaded_nWCnames_) counter_uncached_nWCnames_++;
    else counter_cached_nWCnames_++;
    if (!loaded_nWCnames_) {
        if (!b_nWCnames_) throw std::runtime_error("nWCnames branch doesn't exist");
        b_nWCnames_->GetEntry(index);
        loaded_nWCnames_ = true;
    }
    return nWCnames_;
}
const UInt_t &Nano::nboostedTau() {
    if (!loaded_nboostedTau_) counter_uncached_nboostedTau_++;
    else counter_cached_nboostedTau_++;
    if (!loaded_nboostedTau_) {
        if (!b_nboostedTau_) throw std::runtime_error("nboostedTau branch doesn't exist");
        b_nboostedTau_->GetEntry(index);
        loaded_nboostedTau_ = true;
    }
    return nboostedTau_;
}
const float &Nano::puWeight() {
    if (!loaded_puWeight_) counter_uncached_puWeight_++;
    else counter_cached_puWeight_++;
    if (!loaded_puWeight_) {
        if (!b_puWeight_) throw std::runtime_error("puWeight branch doesn't exist");
        b_puWeight_->GetEntry(index);
        loaded_puWeight_ = true;
    }
    return puWeight_;
}
const float &Nano::puWeightDown() {
    if (!loaded_puWeightDown_) counter_uncached_puWeightDown_++;
    else counter_cached_puWeightDown_++;
    if (!loaded_puWeightDown_) {
        if (!b_puWeightDown_) throw std::runtime_error("puWeightDown branch doesn't exist");
        b_puWeightDown_->GetEntry(index);
        loaded_puWeightDown_ = true;
    }
    return puWeightDown_;
}
const float &Nano::puWeightUp() {
    if (!loaded_puWeightUp_) counter_uncached_puWeightUp_++;
    else counter_cached_puWeightUp_++;
    if (!loaded_puWeightUp_) {
        if (!b_puWeightUp_) throw std::runtime_error("puWeightUp branch doesn't exist");
        b_puWeightUp_->GetEntry(index);
        loaded_puWeightUp_ = true;
    }
    return puWeightUp_;
}
const UInt_t &Nano::run() {
    if (!loaded_run_) counter_uncached_run_++;
    else counter_cached_run_++;
    if (!loaded_run_) {
        if (!b_run_) throw std::runtime_error("run branch doesn't exist");
        b_run_->GetEntry(index);
        loaded_run_ = true;
    }
    return run_;
}

namespace tas {
    const float &BeamSpot_sigmaZ() { return nt.BeamSpot_sigmaZ(); }
    const float &BeamSpot_sigmaZError() { return nt.BeamSpot_sigmaZError(); }
    const Char_t &BeamSpot_type() { return nt.BeamSpot_type(); }
    const float &BeamSpot_z() { return nt.BeamSpot_z(); }
    const float &BeamSpot_zError() { return nt.BeamSpot_zError(); }
    const float &CaloMET_phi() { return nt.CaloMET_phi(); }
    const float &CaloMET_pt() { return nt.CaloMET_pt(); }
    const float &CaloMET_sumEt() { return nt.CaloMET_sumEt(); }
    const float &ChsMET_phi() { return nt.ChsMET_phi(); }
    const float &ChsMET_pt() { return nt.ChsMET_pt(); }
    const float &ChsMET_sumEt() { return nt.ChsMET_sumEt(); }
    const vector<float> &CorrT1METJet_area() { return nt.CorrT1METJet_area(); }
    const vector<float> &CorrT1METJet_eta() { return nt.CorrT1METJet_eta(); }
    const vector<float> &CorrT1METJet_muonSubtrFactor() { return nt.CorrT1METJet_muonSubtrFactor(); }
    const vector<float> &CorrT1METJet_phi() { return nt.CorrT1METJet_phi(); }
    const vector<float> &CorrT1METJet_rawPt() { return nt.CorrT1METJet_rawPt(); }
    const float &DeepMETResolutionTune_phi() { return nt.DeepMETResolutionTune_phi(); }
    const float &DeepMETResolutionTune_pt() { return nt.DeepMETResolutionTune_pt(); }
    const float &DeepMETResponseTune_phi() { return nt.DeepMETResponseTune_phi(); }
    const float &DeepMETResponseTune_pt() { return nt.DeepMETResponseTune_pt(); }
    const vector<float> &EFTfitCoefficients() { return nt.EFTfitCoefficients(); }
    const vector<float> &Electron_CutBased_LooseID_SF() { return nt.Electron_CutBased_LooseID_SF(); }
    const vector<float> &Electron_CutBased_LooseID_SFerr() { return nt.Electron_CutBased_LooseID_SFerr(); }
    const vector<float> &Electron_CutBased_MediumID_SF() { return nt.Electron_CutBased_MediumID_SF(); }
    const vector<float> &Electron_CutBased_MediumID_SFerr() { return nt.Electron_CutBased_MediumID_SFerr(); }
    const vector<float> &Electron_CutBased_TightID_SF() { return nt.Electron_CutBased_TightID_SF(); }
    const vector<float> &Electron_CutBased_TightID_SFerr() { return nt.Electron_CutBased_TightID_SFerr(); }
    const vector<float> &Electron_CutBased_VetoID_SF() { return nt.Electron_CutBased_VetoID_SF(); }
    const vector<float> &Electron_CutBased_VetoID_SFerr() { return nt.Electron_CutBased_VetoID_SFerr(); }
    const vector<float> &Electron_MVAFall17V2Iso_WP80_SF() { return nt.Electron_MVAFall17V2Iso_WP80_SF(); }
    const vector<float> &Electron_MVAFall17V2Iso_WP80_SFerr() { return nt.Electron_MVAFall17V2Iso_WP80_SFerr(); }
    const vector<float> &Electron_MVAFall17V2Iso_WP90_SF() { return nt.Electron_MVAFall17V2Iso_WP90_SF(); }
    const vector<float> &Electron_MVAFall17V2Iso_WP90_SFerr() { return nt.Electron_MVAFall17V2Iso_WP90_SFerr(); }
    const vector<float> &Electron_MVAFall17V2noIso_WP80_SF() { return nt.Electron_MVAFall17V2noIso_WP80_SF(); }
    const vector<float> &Electron_MVAFall17V2noIso_WP80_SFerr() { return nt.Electron_MVAFall17V2noIso_WP80_SFerr(); }
    const vector<float> &Electron_MVAFall17V2noIso_WP90_SF() { return nt.Electron_MVAFall17V2noIso_WP90_SF(); }
    const vector<float> &Electron_MVAFall17V2noIso_WP90_SFerr() { return nt.Electron_MVAFall17V2noIso_WP90_SFerr(); }
    const vector<float> &Electron_RECO_SF() { return nt.Electron_RECO_SF(); }
    const vector<float> &Electron_RECO_SFerr() { return nt.Electron_RECO_SFerr(); }
    const vector<int> &Electron_charge() { return nt.Electron_charge(); }
    const vector<UChar_t> &Electron_cleanmask() { return nt.Electron_cleanmask(); }
    const vector<bool> &Electron_convVeto() { return nt.Electron_convVeto(); }
    const vector<int> &Electron_cutBased() { return nt.Electron_cutBased(); }
    const vector<int> &Electron_cutBased17() { return nt.Electron_cutBased17(); }
    const vector<int> &Electron_cutBased_Fall17V2() { return nt.Electron_cutBased_Fall17V2(); }
    const vector<int> &Electron_cutBased_Fall17_V1() { return nt.Electron_cutBased_Fall17_V1(); }
    const vector<bool> &Electron_cutBased_HEEP() { return nt.Electron_cutBased_HEEP(); }
    const vector<int> &Electron_cutBased_HLTPreSel() { return nt.Electron_cutBased_HLTPreSel(); }
    const vector<float> &Electron_dEscaleDown() { return nt.Electron_dEscaleDown(); }
    const vector<float> &Electron_dEscaleUp() { return nt.Electron_dEscaleUp(); }
    const vector<float> &Electron_dEsigmaDown() { return nt.Electron_dEsigmaDown(); }
    const vector<float> &Electron_dEsigmaUp() { return nt.Electron_dEsigmaUp(); }
    const vector<float> &Electron_deltaEtaSC() { return nt.Electron_deltaEtaSC(); }
    const vector<float> &Electron_dr03EcalRecHitSumEt() { return nt.Electron_dr03EcalRecHitSumEt(); }
    const vector<float> &Electron_dr03HcalDepth1TowerSumEt() { return nt.Electron_dr03HcalDepth1TowerSumEt(); }
    const vector<float> &Electron_dr03TkSumPt() { return nt.Electron_dr03TkSumPt(); }
    const vector<float> &Electron_dr03TkSumPtHEEP() { return nt.Electron_dr03TkSumPtHEEP(); }
    const vector<float> &Electron_dxy() { return nt.Electron_dxy(); }
    const vector<float> &Electron_dxyErr() { return nt.Electron_dxyErr(); }
    const vector<float> &Electron_dz() { return nt.Electron_dz(); }
    const vector<float> &Electron_dzErr() { return nt.Electron_dzErr(); }
    const vector<float> &Electron_eCorr() { return nt.Electron_eCorr(); }
    const vector<float> &Electron_eInvMinusPInv() { return nt.Electron_eInvMinusPInv(); }
    const vector<float> &Electron_energyErr() { return nt.Electron_energyErr(); }
    const vector<float> &Electron_eta() { return nt.Electron_eta(); }
    const vector<int> &Electron_fsrPhotonIdx() { return nt.Electron_fsrPhotonIdx(); }
    const vector<UChar_t> &Electron_genPartFlav() { return nt.Electron_genPartFlav(); }
    const vector<int> &Electron_genPartIdx() { return nt.Electron_genPartIdx(); }
    const vector<float> &Electron_hoe() { return nt.Electron_hoe(); }
    const vector<float> &Electron_ip3d() { return nt.Electron_ip3d(); }
    const vector<bool> &Electron_isPFcand() { return nt.Electron_isPFcand(); }
    const vector<int> &Electron_jetIdx() { return nt.Electron_jetIdx(); }
    const vector<UChar_t> &Electron_jetNDauCharged() { return nt.Electron_jetNDauCharged(); }
    const vector<float> &Electron_jetPtRelv2() { return nt.Electron_jetPtRelv2(); }
    const vector<float> &Electron_jetRelIso() { return nt.Electron_jetRelIso(); }
    const vector<float> &Electron_jetRelIso_Fall17V2() { return nt.Electron_jetRelIso_Fall17V2(); }
    const vector<UChar_t> &Electron_lostHits() { return nt.Electron_lostHits(); }
    const vector<float> &Electron_mass() { return nt.Electron_mass(); }
    const vector<float> &Electron_miniPFRelIso_all() { return nt.Electron_miniPFRelIso_all(); }
    const vector<float> &Electron_miniPFRelIso_all_Fall17V2() { return nt.Electron_miniPFRelIso_all_Fall17V2(); }
    const vector<float> &Electron_miniPFRelIso_chg() { return nt.Electron_miniPFRelIso_chg(); }
    const vector<float> &Electron_miniPFRelIso_chg_Fall17V2() { return nt.Electron_miniPFRelIso_chg_Fall17V2(); }
    const vector<float> &Electron_mvaFall17Iso() { return nt.Electron_mvaFall17Iso(); }
    const vector<bool> &Electron_mvaFall17Iso_WP80() { return nt.Electron_mvaFall17Iso_WP80(); }
    const vector<bool> &Electron_mvaFall17Iso_WP90() { return nt.Electron_mvaFall17Iso_WP90(); }
    const vector<bool> &Electron_mvaFall17Iso_WPL() { return nt.Electron_mvaFall17Iso_WPL(); }
    const vector<float> &Electron_mvaFall17V1Iso() { return nt.Electron_mvaFall17V1Iso(); }
    const vector<bool> &Electron_mvaFall17V1Iso_WP80() { return nt.Electron_mvaFall17V1Iso_WP80(); }
    const vector<bool> &Electron_mvaFall17V1Iso_WP90() { return nt.Electron_mvaFall17V1Iso_WP90(); }
    const vector<bool> &Electron_mvaFall17V1Iso_WPL() { return nt.Electron_mvaFall17V1Iso_WPL(); }
    const vector<float> &Electron_mvaFall17V1noIso() { return nt.Electron_mvaFall17V1noIso(); }
    const vector<bool> &Electron_mvaFall17V1noIso_WP80() { return nt.Electron_mvaFall17V1noIso_WP80(); }
    const vector<bool> &Electron_mvaFall17V1noIso_WP90() { return nt.Electron_mvaFall17V1noIso_WP90(); }
    const vector<bool> &Electron_mvaFall17V1noIso_WPL() { return nt.Electron_mvaFall17V1noIso_WPL(); }
    const vector<float> &Electron_mvaFall17V2Iso() { return nt.Electron_mvaFall17V2Iso(); }
    const vector<bool> &Electron_mvaFall17V2Iso_WP80() { return nt.Electron_mvaFall17V2Iso_WP80(); }
    const vector<bool> &Electron_mvaFall17V2Iso_WP90() { return nt.Electron_mvaFall17V2Iso_WP90(); }
    const vector<bool> &Electron_mvaFall17V2Iso_WPL() { return nt.Electron_mvaFall17V2Iso_WPL(); }
    const vector<float> &Electron_mvaFall17V2noIso() { return nt.Electron_mvaFall17V2noIso(); }
    const vector<bool> &Electron_mvaFall17V2noIso_WP80() { return nt.Electron_mvaFall17V2noIso_WP80(); }
    const vector<bool> &Electron_mvaFall17V2noIso_WP90() { return nt.Electron_mvaFall17V2noIso_WP90(); }
    const vector<bool> &Electron_mvaFall17V2noIso_WPL() { return nt.Electron_mvaFall17V2noIso_WPL(); }
    const vector<float> &Electron_mvaFall17noIso() { return nt.Electron_mvaFall17noIso(); }
    const vector<bool> &Electron_mvaFall17noIso_WP80() { return nt.Electron_mvaFall17noIso_WP80(); }
    const vector<bool> &Electron_mvaFall17noIso_WP90() { return nt.Electron_mvaFall17noIso_WP90(); }
    const vector<bool> &Electron_mvaFall17noIso_WPL() { return nt.Electron_mvaFall17noIso_WPL(); }
    const vector<float> &Electron_mvaHZZIso() { return nt.Electron_mvaHZZIso(); }
    const vector<float> &Electron_mvaIso() { return nt.Electron_mvaIso(); }
    const vector<float> &Electron_mvaIso_Fall17V2() { return nt.Electron_mvaIso_Fall17V2(); }
    const vector<bool> &Electron_mvaIso_Fall17V2_WP80() { return nt.Electron_mvaIso_Fall17V2_WP80(); }
    const vector<bool> &Electron_mvaIso_Fall17V2_WP90() { return nt.Electron_mvaIso_Fall17V2_WP90(); }
    const vector<bool> &Electron_mvaIso_Fall17V2_WPL() { return nt.Electron_mvaIso_Fall17V2_WPL(); }
    const vector<bool> &Electron_mvaIso_WP80() { return nt.Electron_mvaIso_WP80(); }
    const vector<bool> &Electron_mvaIso_WP90() { return nt.Electron_mvaIso_WP90(); }
    const vector<float> &Electron_mvaNoIso() { return nt.Electron_mvaNoIso(); }
    const vector<float> &Electron_mvaNoIso_Fall17V2() { return nt.Electron_mvaNoIso_Fall17V2(); }
    const vector<bool> &Electron_mvaNoIso_Fall17V2_WP80() { return nt.Electron_mvaNoIso_Fall17V2_WP80(); }
    const vector<bool> &Electron_mvaNoIso_Fall17V2_WP90() { return nt.Electron_mvaNoIso_Fall17V2_WP90(); }
    const vector<bool> &Electron_mvaNoIso_Fall17V2_WPL() { return nt.Electron_mvaNoIso_Fall17V2_WPL(); }
    const vector<bool> &Electron_mvaNoIso_WP80() { return nt.Electron_mvaNoIso_WP80(); }
    const vector<bool> &Electron_mvaNoIso_WP90() { return nt.Electron_mvaNoIso_WP90(); }
    const vector<float> &Electron_mvaSpring16GP() { return nt.Electron_mvaSpring16GP(); }
    const vector<bool> &Electron_mvaSpring16GP_WP80() { return nt.Electron_mvaSpring16GP_WP80(); }
    const vector<bool> &Electron_mvaSpring16GP_WP90() { return nt.Electron_mvaSpring16GP_WP90(); }
    const vector<float> &Electron_mvaSpring16HZZ() { return nt.Electron_mvaSpring16HZZ(); }
    const vector<bool> &Electron_mvaSpring16HZZ_WPL() { return nt.Electron_mvaSpring16HZZ_WPL(); }
    const vector<float> &Electron_mvaTTH() { return nt.Electron_mvaTTH(); }
    // NOTE: this is a custom branch; temporarily added for convenience
    const vector<float> &Electron_mvaTTHUL() { return nt.Electron_mvaTTHUL(); }
    //
    const vector<LorentzVector> &Electron_p4() { return nt.Electron_p4(); }
    const vector<int> &Electron_pdgId() { return nt.Electron_pdgId(); }
    const vector<float> &Electron_pfRelIso03_all() { return nt.Electron_pfRelIso03_all(); }
    const vector<float> &Electron_pfRelIso03_all_Fall17V2() { return nt.Electron_pfRelIso03_all_Fall17V2(); }
    const vector<float> &Electron_pfRelIso03_chg() { return nt.Electron_pfRelIso03_chg(); }
    const vector<float> &Electron_pfRelIso03_chg_Fall17V2() { return nt.Electron_pfRelIso03_chg_Fall17V2(); }
    const vector<float> &Electron_phi() { return nt.Electron_phi(); }
    const vector<int> &Electron_photonIdx() { return nt.Electron_photonIdx(); }
    const vector<float> &Electron_pt() { return nt.Electron_pt(); }
    const vector<float> &Electron_r9() { return nt.Electron_r9(); }
    const vector<float> &Electron_scEtOverPt() { return nt.Electron_scEtOverPt(); }
    const vector<UChar_t> &Electron_seedGain() { return nt.Electron_seedGain(); }
    const vector<Char_t> &Electron_seediEtaOriX() { return nt.Electron_seediEtaOriX(); }
    const vector<int> &Electron_seediPhiOriY() { return nt.Electron_seediPhiOriY(); }
    const vector<float> &Electron_sieie() { return nt.Electron_sieie(); }
    const vector<float> &Electron_sip3d() { return nt.Electron_sip3d(); }
    const vector<int> &Electron_svIdx() { return nt.Electron_svIdx(); }
    const vector<int> &Electron_tightCharge() { return nt.Electron_tightCharge(); }
    const vector<int> &Electron_vidNestedWPBitmap() { return nt.Electron_vidNestedWPBitmap(); }
    const vector<int> &Electron_vidNestedWPBitmapHEEP() { return nt.Electron_vidNestedWPBitmapHEEP(); }
    const vector<int> &Electron_vidNestedWPBitmap_Fall17V2() { return nt.Electron_vidNestedWPBitmap_Fall17V2(); }
    const vector<float> &FatJet_area() { return nt.FatJet_area(); }
    const vector<float> &FatJet_btagCMVA() { return nt.FatJet_btagCMVA(); }
    const vector<float> &FatJet_btagCSVV2() { return nt.FatJet_btagCSVV2(); }
    const vector<float> &FatJet_btagDDBvL() { return nt.FatJet_btagDDBvL(); }
    const vector<float> &FatJet_btagDDBvLV2() { return nt.FatJet_btagDDBvLV2(); }
    const vector<float> &FatJet_btagDDBvL_noMD() { return nt.FatJet_btagDDBvL_noMD(); }
    const vector<float> &FatJet_btagDDCvB() { return nt.FatJet_btagDDCvB(); }
    const vector<float> &FatJet_btagDDCvBV2() { return nt.FatJet_btagDDCvBV2(); }
    const vector<float> &FatJet_btagDDCvB_noMD() { return nt.FatJet_btagDDCvB_noMD(); }
    const vector<float> &FatJet_btagDDCvL() { return nt.FatJet_btagDDCvL(); }
    const vector<float> &FatJet_btagDDCvLV2() { return nt.FatJet_btagDDCvLV2(); }
    const vector<float> &FatJet_btagDDCvL_noMD() { return nt.FatJet_btagDDCvL_noMD(); }
    const vector<float> &FatJet_btagDeepB() { return nt.FatJet_btagDeepB(); }
    const vector<float> &FatJet_btagHbb() { return nt.FatJet_btagHbb(); }
    const vector<float> &FatJet_corr_JEC() { return nt.FatJet_corr_JEC(); }
    const vector<float> &FatJet_corr_JER() { return nt.FatJet_corr_JER(); }
    const vector<float> &FatJet_corr_JMR() { return nt.FatJet_corr_JMR(); }
    const vector<float> &FatJet_corr_JMS() { return nt.FatJet_corr_JMS(); }
    const vector<float> &FatJet_deepTagMD_H4qvsQCD() { return nt.FatJet_deepTagMD_H4qvsQCD(); }
    const vector<float> &FatJet_deepTagMD_HbbvsQCD() { return nt.FatJet_deepTagMD_HbbvsQCD(); }
    const vector<float> &FatJet_deepTagMD_TvsQCD() { return nt.FatJet_deepTagMD_TvsQCD(); }
    const vector<float> &FatJet_deepTagMD_WvsQCD() { return nt.FatJet_deepTagMD_WvsQCD(); }
    const vector<float> &FatJet_deepTagMD_ZHbbvsQCD() { return nt.FatJet_deepTagMD_ZHbbvsQCD(); }
    const vector<float> &FatJet_deepTagMD_ZHccvsQCD() { return nt.FatJet_deepTagMD_ZHccvsQCD(); }
    const vector<float> &FatJet_deepTagMD_ZbbvsQCD() { return nt.FatJet_deepTagMD_ZbbvsQCD(); }
    const vector<float> &FatJet_deepTagMD_ZvsQCD() { return nt.FatJet_deepTagMD_ZvsQCD(); }
    const vector<float> &FatJet_deepTagMD_bbvsLight() { return nt.FatJet_deepTagMD_bbvsLight(); }
    const vector<float> &FatJet_deepTagMD_ccvsLight() { return nt.FatJet_deepTagMD_ccvsLight(); }
    const vector<float> &FatJet_deepTag_H() { return nt.FatJet_deepTag_H(); }
    const vector<float> &FatJet_deepTag_QCD() { return nt.FatJet_deepTag_QCD(); }
    const vector<float> &FatJet_deepTag_QCDothers() { return nt.FatJet_deepTag_QCDothers(); }
    const vector<float> &FatJet_deepTag_TvsQCD() { return nt.FatJet_deepTag_TvsQCD(); }
    const vector<float> &FatJet_deepTag_WvsQCD() { return nt.FatJet_deepTag_WvsQCD(); }
    const vector<float> &FatJet_deepTag_ZvsQCD() { return nt.FatJet_deepTag_ZvsQCD(); }
    const vector<int> &FatJet_electronIdx3SJ() { return nt.FatJet_electronIdx3SJ(); }
    const vector<float> &FatJet_eta() { return nt.FatJet_eta(); }
    const vector<int> &FatJet_genJetAK8Idx() { return nt.FatJet_genJetAK8Idx(); }
    const vector<int> &FatJet_hadronFlavour() { return nt.FatJet_hadronFlavour(); }
    const vector<int> &FatJet_jetId() { return nt.FatJet_jetId(); }
    const vector<float> &FatJet_lsf3() { return nt.FatJet_lsf3(); }
    const vector<float> &FatJet_mass() { return nt.FatJet_mass(); }
    const vector<float> &FatJet_mass_jerDown() { return nt.FatJet_mass_jerDown(); }
    const vector<float> &FatJet_mass_jerUp() { return nt.FatJet_mass_jerUp(); }
    const vector<float> &FatJet_mass_jesTotalDown() { return nt.FatJet_mass_jesTotalDown(); }
    const vector<float> &FatJet_mass_jesTotalUp() { return nt.FatJet_mass_jesTotalUp(); }
    const vector<float> &FatJet_mass_jmrDown() { return nt.FatJet_mass_jmrDown(); }
    const vector<float> &FatJet_mass_jmrUp() { return nt.FatJet_mass_jmrUp(); }
    const vector<float> &FatJet_mass_jmsDown() { return nt.FatJet_mass_jmsDown(); }
    const vector<float> &FatJet_mass_jmsUp() { return nt.FatJet_mass_jmsUp(); }
    const vector<float> &FatJet_mass_nom() { return nt.FatJet_mass_nom(); }
    const vector<float> &FatJet_mass_raw() { return nt.FatJet_mass_raw(); }
    const vector<float> &FatJet_msoftdrop() { return nt.FatJet_msoftdrop(); }
    const vector<float> &FatJet_msoftdrop_corr_JMR() { return nt.FatJet_msoftdrop_corr_JMR(); }
    const vector<float> &FatJet_msoftdrop_corr_JMS() { return nt.FatJet_msoftdrop_corr_JMS(); }
    const vector<float> &FatJet_msoftdrop_corr_PUPPI() { return nt.FatJet_msoftdrop_corr_PUPPI(); }
    const vector<float> &FatJet_msoftdrop_jerDown() { return nt.FatJet_msoftdrop_jerDown(); }
    const vector<float> &FatJet_msoftdrop_jerUp() { return nt.FatJet_msoftdrop_jerUp(); }
    const vector<float> &FatJet_msoftdrop_jesTotalDown() { return nt.FatJet_msoftdrop_jesTotalDown(); }
    const vector<float> &FatJet_msoftdrop_jesTotalUp() { return nt.FatJet_msoftdrop_jesTotalUp(); }
    const vector<float> &FatJet_msoftdrop_jmrDown() { return nt.FatJet_msoftdrop_jmrDown(); }
    const vector<float> &FatJet_msoftdrop_jmrUp() { return nt.FatJet_msoftdrop_jmrUp(); }
    const vector<float> &FatJet_msoftdrop_jmsDown() { return nt.FatJet_msoftdrop_jmsDown(); }
    const vector<float> &FatJet_msoftdrop_jmsUp() { return nt.FatJet_msoftdrop_jmsUp(); }
    const vector<float> &FatJet_msoftdrop_nom() { return nt.FatJet_msoftdrop_nom(); }
    const vector<float> &FatJet_msoftdrop_raw() { return nt.FatJet_msoftdrop_raw(); }
    const vector<float> &FatJet_msoftdrop_tau21DDT_jerDown() { return nt.FatJet_msoftdrop_tau21DDT_jerDown(); }
    const vector<float> &FatJet_msoftdrop_tau21DDT_jerUp() { return nt.FatJet_msoftdrop_tau21DDT_jerUp(); }
    const vector<float> &FatJet_msoftdrop_tau21DDT_jmrDown() { return nt.FatJet_msoftdrop_tau21DDT_jmrDown(); }
    const vector<float> &FatJet_msoftdrop_tau21DDT_jmrUp() { return nt.FatJet_msoftdrop_tau21DDT_jmrUp(); }
    const vector<float> &FatJet_msoftdrop_tau21DDT_jmsDown() { return nt.FatJet_msoftdrop_tau21DDT_jmsDown(); }
    const vector<float> &FatJet_msoftdrop_tau21DDT_jmsUp() { return nt.FatJet_msoftdrop_tau21DDT_jmsUp(); }
    const vector<float> &FatJet_msoftdrop_tau21DDT_nom() { return nt.FatJet_msoftdrop_tau21DDT_nom(); }
    const vector<int> &FatJet_muonIdx3SJ() { return nt.FatJet_muonIdx3SJ(); }
    const vector<float> &FatJet_n2b1() { return nt.FatJet_n2b1(); }
    const vector<float> &FatJet_n3b1() { return nt.FatJet_n3b1(); }
    const vector<UChar_t> &FatJet_nBHadrons() { return nt.FatJet_nBHadrons(); }
    const vector<UChar_t> &FatJet_nCHadrons() { return nt.FatJet_nCHadrons(); }
    const vector<UChar_t> &FatJet_nConstituents() { return nt.FatJet_nConstituents(); }
    const vector<LorentzVector> &FatJet_p4() { return nt.FatJet_p4(); }
    const vector<float> &FatJet_particleNetMD_QCD() { return nt.FatJet_particleNetMD_QCD(); }
    const vector<float> &FatJet_particleNetMD_Xbb() { return nt.FatJet_particleNetMD_Xbb(); }
    const vector<float> &FatJet_particleNetMD_Xcc() { return nt.FatJet_particleNetMD_Xcc(); }
    const vector<float> &FatJet_particleNetMD_Xqq() { return nt.FatJet_particleNetMD_Xqq(); }
    const vector<float> &FatJet_particleNet_H4qvsQCD() { return nt.FatJet_particleNet_H4qvsQCD(); }
    const vector<float> &FatJet_particleNet_HbbvsQCD() { return nt.FatJet_particleNet_HbbvsQCD(); }
    const vector<float> &FatJet_particleNet_HccvsQCD() { return nt.FatJet_particleNet_HccvsQCD(); }
    const vector<float> &FatJet_particleNet_QCD() { return nt.FatJet_particleNet_QCD(); }
    const vector<float> &FatJet_particleNet_TvsQCD() { return nt.FatJet_particleNet_TvsQCD(); }
    const vector<float> &FatJet_particleNet_WvsQCD() { return nt.FatJet_particleNet_WvsQCD(); }
    const vector<float> &FatJet_particleNet_ZvsQCD() { return nt.FatJet_particleNet_ZvsQCD(); }
    const vector<float> &FatJet_particleNet_mass() { return nt.FatJet_particleNet_mass(); }
    const vector<float> &FatJet_phi() { return nt.FatJet_phi(); }
    const vector<float> &FatJet_pt() { return nt.FatJet_pt(); }
    const vector<float> &FatJet_pt_jerDown() { return nt.FatJet_pt_jerDown(); }
    const vector<float> &FatJet_pt_jerUp() { return nt.FatJet_pt_jerUp(); }
    const vector<float> &FatJet_pt_jesTotalDown() { return nt.FatJet_pt_jesTotalDown(); }
    const vector<float> &FatJet_pt_jesTotalUp() { return nt.FatJet_pt_jesTotalUp(); }
    const vector<float> &FatJet_pt_nom() { return nt.FatJet_pt_nom(); }
    const vector<float> &FatJet_pt_raw() { return nt.FatJet_pt_raw(); }
    const vector<float> &FatJet_rawFactor() { return nt.FatJet_rawFactor(); }
    const vector<int> &FatJet_subJetIdx1() { return nt.FatJet_subJetIdx1(); }
    const vector<int> &FatJet_subJetIdx2() { return nt.FatJet_subJetIdx2(); }
    const vector<float> &FatJet_tau1() { return nt.FatJet_tau1(); }
    const vector<float> &FatJet_tau2() { return nt.FatJet_tau2(); }
    const vector<float> &FatJet_tau3() { return nt.FatJet_tau3(); }
    const vector<float> &FatJet_tau4() { return nt.FatJet_tau4(); }
    const bool &Flag_BadChargedCandidateFilter() { return nt.Flag_BadChargedCandidateFilter(); }
    const bool &Flag_BadChargedCandidateFilter_pRECO() { return nt.Flag_BadChargedCandidateFilter_pRECO(); }
    const bool &Flag_BadChargedCandidateSummer16Filter() { return nt.Flag_BadChargedCandidateSummer16Filter(); }
    const bool &Flag_BadChargedCandidateSummer16Filter_pRECO() { return nt.Flag_BadChargedCandidateSummer16Filter_pRECO(); }
    const bool &Flag_BadPFMuonDzFilter() { return nt.Flag_BadPFMuonDzFilter(); }
    const bool &Flag_BadPFMuonFilter() { return nt.Flag_BadPFMuonFilter(); }
    const bool &Flag_BadPFMuonFilter_pRECO() { return nt.Flag_BadPFMuonFilter_pRECO(); }
    const bool &Flag_BadPFMuonSummer16Filter() { return nt.Flag_BadPFMuonSummer16Filter(); }
    const bool &Flag_BadPFMuonSummer16Filter_pRECO() { return nt.Flag_BadPFMuonSummer16Filter_pRECO(); }
    const bool &Flag_CSCTightHalo2015Filter() { return nt.Flag_CSCTightHalo2015Filter(); }
    const bool &Flag_CSCTightHalo2015Filter_pRECO() { return nt.Flag_CSCTightHalo2015Filter_pRECO(); }
    const bool &Flag_CSCTightHaloFilter() { return nt.Flag_CSCTightHaloFilter(); }
    const bool &Flag_CSCTightHaloFilter_pRECO() { return nt.Flag_CSCTightHaloFilter_pRECO(); }
    const bool &Flag_CSCTightHaloTrkMuUnvetoFilter() { return nt.Flag_CSCTightHaloTrkMuUnvetoFilter(); }
    const bool &Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO() { return nt.Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO(); }
    const bool &Flag_EcalDeadCellBoundaryEnergyFilter() { return nt.Flag_EcalDeadCellBoundaryEnergyFilter(); }
    const bool &Flag_EcalDeadCellBoundaryEnergyFilter_pRECO() { return nt.Flag_EcalDeadCellBoundaryEnergyFilter_pRECO(); }
    const bool &Flag_EcalDeadCellTriggerPrimitiveFilter() { return nt.Flag_EcalDeadCellTriggerPrimitiveFilter(); }
    const bool &Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO() { return nt.Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO(); }
    const bool &Flag_HBHENoiseFilter() { return nt.Flag_HBHENoiseFilter(); }
    const bool &Flag_HBHENoiseFilter_pRECO() { return nt.Flag_HBHENoiseFilter_pRECO(); }
    const bool &Flag_HBHENoiseIsoFilter() { return nt.Flag_HBHENoiseIsoFilter(); }
    const bool &Flag_HBHENoiseIsoFilter_pRECO() { return nt.Flag_HBHENoiseIsoFilter_pRECO(); }
    const bool &Flag_HcalStripHaloFilter() { return nt.Flag_HcalStripHaloFilter(); }
    const bool &Flag_HcalStripHaloFilter_pRECO() { return nt.Flag_HcalStripHaloFilter_pRECO(); }
    const bool &Flag_METFilters() { return nt.Flag_METFilters(); }
    const bool &Flag_METFilters_pRECO() { return nt.Flag_METFilters_pRECO(); }
    const bool &Flag_chargedHadronTrackResolutionFilter() { return nt.Flag_chargedHadronTrackResolutionFilter(); }
    const bool &Flag_chargedHadronTrackResolutionFilter_pRECO() { return nt.Flag_chargedHadronTrackResolutionFilter_pRECO(); }
    const bool &Flag_ecalBadCalibFilter() { return nt.Flag_ecalBadCalibFilter(); }
    const bool &Flag_ecalBadCalibFilter_pRECO() { return nt.Flag_ecalBadCalibFilter_pRECO(); }
    const bool &Flag_ecalLaserCorrFilter() { return nt.Flag_ecalLaserCorrFilter(); }
    const bool &Flag_ecalLaserCorrFilter_pRECO() { return nt.Flag_ecalLaserCorrFilter_pRECO(); }
    const bool &Flag_eeBadScFilter() { return nt.Flag_eeBadScFilter(); }
    const bool &Flag_eeBadScFilter_pRECO() { return nt.Flag_eeBadScFilter_pRECO(); }
    const bool &Flag_globalSuperTightHalo2016Filter() { return nt.Flag_globalSuperTightHalo2016Filter(); }
    const bool &Flag_globalSuperTightHalo2016Filter_pRECO() { return nt.Flag_globalSuperTightHalo2016Filter_pRECO(); }
    const bool &Flag_globalTightHalo2016Filter() { return nt.Flag_globalTightHalo2016Filter(); }
    const bool &Flag_globalTightHalo2016Filter_pRECO() { return nt.Flag_globalTightHalo2016Filter_pRECO(); }
    const bool &Flag_goodVertices() { return nt.Flag_goodVertices(); }
    const bool &Flag_goodVertices_pRECO() { return nt.Flag_goodVertices_pRECO(); }
    const bool &Flag_hcalLaserEventFilter() { return nt.Flag_hcalLaserEventFilter(); }
    const bool &Flag_hcalLaserEventFilter_pRECO() { return nt.Flag_hcalLaserEventFilter_pRECO(); }
    const bool &Flag_hfNoisyHitsFilter() { return nt.Flag_hfNoisyHitsFilter(); }
    const bool &Flag_muonBadTrackFilter() { return nt.Flag_muonBadTrackFilter(); }
    const bool &Flag_muonBadTrackFilter_pRECO() { return nt.Flag_muonBadTrackFilter_pRECO(); }
    const bool &Flag_trkPOGFilters() { return nt.Flag_trkPOGFilters(); }
    const bool &Flag_trkPOGFilters_pRECO() { return nt.Flag_trkPOGFilters_pRECO(); }
    const bool &Flag_trkPOG_logErrorTooManyClusters() { return nt.Flag_trkPOG_logErrorTooManyClusters(); }
    const bool &Flag_trkPOG_logErrorTooManyClusters_pRECO() { return nt.Flag_trkPOG_logErrorTooManyClusters_pRECO(); }
    const bool &Flag_trkPOG_manystripclus53X() { return nt.Flag_trkPOG_manystripclus53X(); }
    const bool &Flag_trkPOG_manystripclus53X_pRECO() { return nt.Flag_trkPOG_manystripclus53X_pRECO(); }
    const bool &Flag_trkPOG_toomanystripclus53X() { return nt.Flag_trkPOG_toomanystripclus53X(); }
    const bool &Flag_trkPOG_toomanystripclus53X_pRECO() { return nt.Flag_trkPOG_toomanystripclus53X_pRECO(); }
    const vector<float> &FsrPhoton_dROverEt2() { return nt.FsrPhoton_dROverEt2(); }
    const vector<int> &FsrPhoton_electronIdx() { return nt.FsrPhoton_electronIdx(); }
    const vector<float> &FsrPhoton_eta() { return nt.FsrPhoton_eta(); }
    const vector<int> &FsrPhoton_muonIdx() { return nt.FsrPhoton_muonIdx(); }
    const vector<float> &FsrPhoton_phi() { return nt.FsrPhoton_phi(); }
    const vector<float> &FsrPhoton_pt() { return nt.FsrPhoton_pt(); }
    const vector<float> &FsrPhoton_relIso03() { return nt.FsrPhoton_relIso03(); }
    const vector<float> &GenDressedLepton_eta() { return nt.GenDressedLepton_eta(); }
    const vector<bool> &GenDressedLepton_hasTauAnc() { return nt.GenDressedLepton_hasTauAnc(); }
    const vector<float> &GenDressedLepton_mass() { return nt.GenDressedLepton_mass(); }
    const vector<LorentzVector> &GenDressedLepton_p4() { return nt.GenDressedLepton_p4(); }
    const vector<int> &GenDressedLepton_pdgId() { return nt.GenDressedLepton_pdgId(); }
    const vector<float> &GenDressedLepton_phi() { return nt.GenDressedLepton_phi(); }
    const vector<float> &GenDressedLepton_pt() { return nt.GenDressedLepton_pt(); }
    const vector<float> &GenIsolatedPhoton_eta() { return nt.GenIsolatedPhoton_eta(); }
    const vector<float> &GenIsolatedPhoton_mass() { return nt.GenIsolatedPhoton_mass(); }
    const vector<LorentzVector> &GenIsolatedPhoton_p4() { return nt.GenIsolatedPhoton_p4(); }
    const vector<float> &GenIsolatedPhoton_phi() { return nt.GenIsolatedPhoton_phi(); }
    const vector<float> &GenIsolatedPhoton_pt() { return nt.GenIsolatedPhoton_pt(); }
    const vector<float> &GenJetAK8_eta() { return nt.GenJetAK8_eta(); }
    const vector<UChar_t> &GenJetAK8_hadronFlavour() { return nt.GenJetAK8_hadronFlavour(); }
    const vector<float> &GenJetAK8_mass() { return nt.GenJetAK8_mass(); }
    const vector<LorentzVector> &GenJetAK8_p4() { return nt.GenJetAK8_p4(); }
    const vector<int> &GenJetAK8_partonFlavour() { return nt.GenJetAK8_partonFlavour(); }
    const vector<float> &GenJetAK8_phi() { return nt.GenJetAK8_phi(); }
    const vector<float> &GenJetAK8_pt() { return nt.GenJetAK8_pt(); }
    const vector<float> &GenJet_eta() { return nt.GenJet_eta(); }
    const vector<UChar_t> &GenJet_hadronFlavour() { return nt.GenJet_hadronFlavour(); }
    const vector<float> &GenJet_mass() { return nt.GenJet_mass(); }
    const vector<LorentzVector> &GenJet_p4() { return nt.GenJet_p4(); }
    const vector<int> &GenJet_partonFlavour() { return nt.GenJet_partonFlavour(); }
    const vector<float> &GenJet_phi() { return nt.GenJet_phi(); }
    const vector<float> &GenJet_pt() { return nt.GenJet_pt(); }
    const float &GenMET_phi() { return nt.GenMET_phi(); }
    const float &GenMET_pt() { return nt.GenMET_pt(); }
    const vector<float> &GenPart_eta() { return nt.GenPart_eta(); }
    const vector<int> &GenPart_genPartIdxMother() { return nt.GenPart_genPartIdxMother(); }
    const vector<float> &GenPart_mass() { return nt.GenPart_mass(); }
    const vector<LorentzVector> &GenPart_p4() { return nt.GenPart_p4(); }
    const vector<int> &GenPart_pdgId() { return nt.GenPart_pdgId(); }
    const vector<float> &GenPart_phi() { return nt.GenPart_phi(); }
    const vector<float> &GenPart_pt() { return nt.GenPart_pt(); }
    const vector<int> &GenPart_status() { return nt.GenPart_status(); }
    const vector<int> &GenPart_statusFlags() { return nt.GenPart_statusFlags(); }
    const vector<bool> &GenProton_isPU() { return nt.GenProton_isPU(); }
    const vector<float> &GenProton_px() { return nt.GenProton_px(); }
    const vector<float> &GenProton_py() { return nt.GenProton_py(); }
    const vector<float> &GenProton_pz() { return nt.GenProton_pz(); }
    const vector<float> &GenProton_vz() { return nt.GenProton_vz(); }
    const vector<int> &GenVisTau_charge() { return nt.GenVisTau_charge(); }
    const vector<float> &GenVisTau_eta() { return nt.GenVisTau_eta(); }
    const vector<int> &GenVisTau_genPartIdxMother() { return nt.GenVisTau_genPartIdxMother(); }
    const vector<float> &GenVisTau_mass() { return nt.GenVisTau_mass(); }
    const vector<LorentzVector> &GenVisTau_p4() { return nt.GenVisTau_p4(); }
    const vector<float> &GenVisTau_phi() { return nt.GenVisTau_phi(); }
    const vector<float> &GenVisTau_pt() { return nt.GenVisTau_pt(); }
    const vector<int> &GenVisTau_status() { return nt.GenVisTau_status(); }
    const float &GenVtx_t0() { return nt.GenVtx_t0(); }
    const float &GenVtx_x() { return nt.GenVtx_x(); }
    const float &GenVtx_y() { return nt.GenVtx_y(); }
    const float &GenVtx_z() { return nt.GenVtx_z(); }
    const float &Generator_binvar() { return nt.Generator_binvar(); }
    const int &Generator_id1() { return nt.Generator_id1(); }
    const int &Generator_id2() { return nt.Generator_id2(); }
    const float &Generator_scalePDF() { return nt.Generator_scalePDF(); }
    const float &Generator_weight() { return nt.Generator_weight(); }
    const float &Generator_x1() { return nt.Generator_x1(); }
    const float &Generator_x2() { return nt.Generator_x2(); }
    const float &Generator_xpdf1() { return nt.Generator_xpdf1(); }
    const float &Generator_xpdf2() { return nt.Generator_xpdf2(); }
    const bool &HLT_AK4CaloJet100() { return nt.HLT_AK4CaloJet100(); }
    const bool &HLT_AK4CaloJet120() { return nt.HLT_AK4CaloJet120(); }
    const bool &HLT_AK4CaloJet30() { return nt.HLT_AK4CaloJet30(); }
    const bool &HLT_AK4CaloJet40() { return nt.HLT_AK4CaloJet40(); }
    const bool &HLT_AK4CaloJet50() { return nt.HLT_AK4CaloJet50(); }
    const bool &HLT_AK4CaloJet80() { return nt.HLT_AK4CaloJet80(); }
    const bool &HLT_AK4PFJet100() { return nt.HLT_AK4PFJet100(); }
    const bool &HLT_AK4PFJet120() { return nt.HLT_AK4PFJet120(); }
    const bool &HLT_AK4PFJet30() { return nt.HLT_AK4PFJet30(); }
    const bool &HLT_AK4PFJet50() { return nt.HLT_AK4PFJet50(); }
    const bool &HLT_AK4PFJet80() { return nt.HLT_AK4PFJet80(); }
    const bool &HLT_AK8DiPFJet250_200_TrimMass30() { return nt.HLT_AK8DiPFJet250_200_TrimMass30(); }
    const bool &HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20() { return nt.HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20(); }
    const bool &HLT_AK8DiPFJet250_250_MassSD30() { return nt.HLT_AK8DiPFJet250_250_MassSD30(); }
    const bool &HLT_AK8DiPFJet250_250_MassSD50() { return nt.HLT_AK8DiPFJet250_250_MassSD50(); }
    const bool &HLT_AK8DiPFJet260_260_MassSD30() { return nt.HLT_AK8DiPFJet260_260_MassSD30(); }
    const bool &HLT_AK8DiPFJet270_270_MassSD30() { return nt.HLT_AK8DiPFJet270_270_MassSD30(); }
    const bool &HLT_AK8DiPFJet280_200_TrimMass30() { return nt.HLT_AK8DiPFJet280_200_TrimMass30(); }
    const bool &HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087() { return nt.HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087(); }
    const bool &HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20() { return nt.HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20(); }
    const bool &HLT_AK8DiPFJet300_200_TrimMass30() { return nt.HLT_AK8DiPFJet300_200_TrimMass30(); }
    const bool &HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087() { return nt.HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087(); }
    const bool &HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20() { return nt.HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20(); }
    const bool &HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20() { return nt.HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20(); }
    const bool &HLT_AK8PFHT650_TrimR0p1PT0p03Mass50() { return nt.HLT_AK8PFHT650_TrimR0p1PT0p03Mass50(); }
    const bool &HLT_AK8PFHT700_TrimR0p1PT0p03Mass50() { return nt.HLT_AK8PFHT700_TrimR0p1PT0p03Mass50(); }
    const bool &HLT_AK8PFHT750_TrimMass50() { return nt.HLT_AK8PFHT750_TrimMass50(); }
    const bool &HLT_AK8PFHT800_TrimMass50() { return nt.HLT_AK8PFHT800_TrimMass50(); }
    const bool &HLT_AK8PFHT850_TrimMass50() { return nt.HLT_AK8PFHT850_TrimMass50(); }
    const bool &HLT_AK8PFHT900_TrimMass50() { return nt.HLT_AK8PFHT900_TrimMass50(); }
    const bool &HLT_AK8PFJet140() { return nt.HLT_AK8PFJet140(); }
    const bool &HLT_AK8PFJet15() { return nt.HLT_AK8PFJet15(); }
    const bool &HLT_AK8PFJet200() { return nt.HLT_AK8PFJet200(); }
    const bool &HLT_AK8PFJet230_SoftDropMass40() { return nt.HLT_AK8PFJet230_SoftDropMass40(); }
    const bool &HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35() { return nt.HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35(); }
    const bool &HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30() { return nt.HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30(); }
    const bool &HLT_AK8PFJet25() { return nt.HLT_AK8PFJet25(); }
    const bool &HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35() { return nt.HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35(); }
    const bool &HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30() { return nt.HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30(); }
    const bool &HLT_AK8PFJet260() { return nt.HLT_AK8PFJet260(); }
    const bool &HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35() { return nt.HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35(); }
    const bool &HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30() { return nt.HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30(); }
    const bool &HLT_AK8PFJet320() { return nt.HLT_AK8PFJet320(); }
    const bool &HLT_AK8PFJet330_PFAK8BTagCSV_p1() { return nt.HLT_AK8PFJet330_PFAK8BTagCSV_p1(); }
    const bool &HLT_AK8PFJet330_PFAK8BTagCSV_p17() { return nt.HLT_AK8PFJet330_PFAK8BTagCSV_p17(); }
    const bool &HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1() { return nt.HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1(); }
    const bool &HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17() { return nt.HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17(); }
    const bool &HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1() { return nt.HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1(); }
    const bool &HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17() { return nt.HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17(); }
    const bool &HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2() { return nt.HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2(); }
    const bool &HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4() { return nt.HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4(); }
    const bool &HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02() { return nt.HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02(); }
    const bool &HLT_AK8PFJet360_TrimMass30() { return nt.HLT_AK8PFJet360_TrimMass30(); }
    const bool &HLT_AK8PFJet380_TrimMass30() { return nt.HLT_AK8PFJet380_TrimMass30(); }
    const bool &HLT_AK8PFJet40() { return nt.HLT_AK8PFJet40(); }
    const bool &HLT_AK8PFJet400() { return nt.HLT_AK8PFJet400(); }
    const bool &HLT_AK8PFJet400_MassSD30() { return nt.HLT_AK8PFJet400_MassSD30(); }
    const bool &HLT_AK8PFJet400_SoftDropMass40() { return nt.HLT_AK8PFJet400_SoftDropMass40(); }
    const bool &HLT_AK8PFJet400_TrimMass30() { return nt.HLT_AK8PFJet400_TrimMass30(); }
    const bool &HLT_AK8PFJet420_MassSD30() { return nt.HLT_AK8PFJet420_MassSD30(); }
    const bool &HLT_AK8PFJet420_TrimMass30() { return nt.HLT_AK8PFJet420_TrimMass30(); }
    const bool &HLT_AK8PFJet425_SoftDropMass40() { return nt.HLT_AK8PFJet425_SoftDropMass40(); }
    const bool &HLT_AK8PFJet450() { return nt.HLT_AK8PFJet450(); }
    const bool &HLT_AK8PFJet450_MassSD30() { return nt.HLT_AK8PFJet450_MassSD30(); }
    const bool &HLT_AK8PFJet450_SoftDropMass40() { return nt.HLT_AK8PFJet450_SoftDropMass40(); }
    const bool &HLT_AK8PFJet500() { return nt.HLT_AK8PFJet500(); }
    const bool &HLT_AK8PFJet550() { return nt.HLT_AK8PFJet550(); }
    const bool &HLT_AK8PFJet60() { return nt.HLT_AK8PFJet60(); }
    const bool &HLT_AK8PFJet80() { return nt.HLT_AK8PFJet80(); }
    const bool &HLT_AK8PFJetFwd140() { return nt.HLT_AK8PFJetFwd140(); }
    const bool &HLT_AK8PFJetFwd15() { return nt.HLT_AK8PFJetFwd15(); }
    const bool &HLT_AK8PFJetFwd200() { return nt.HLT_AK8PFJetFwd200(); }
    const bool &HLT_AK8PFJetFwd25() { return nt.HLT_AK8PFJetFwd25(); }
    const bool &HLT_AK8PFJetFwd260() { return nt.HLT_AK8PFJetFwd260(); }
    const bool &HLT_AK8PFJetFwd320() { return nt.HLT_AK8PFJetFwd320(); }
    const bool &HLT_AK8PFJetFwd40() { return nt.HLT_AK8PFJetFwd40(); }
    const bool &HLT_AK8PFJetFwd400() { return nt.HLT_AK8PFJetFwd400(); }
    const bool &HLT_AK8PFJetFwd450() { return nt.HLT_AK8PFJetFwd450(); }
    const bool &HLT_AK8PFJetFwd500() { return nt.HLT_AK8PFJetFwd500(); }
    const bool &HLT_AK8PFJetFwd60() { return nt.HLT_AK8PFJetFwd60(); }
    const bool &HLT_AK8PFJetFwd80() { return nt.HLT_AK8PFJetFwd80(); }
    const bool &HLT_BTagMu_AK4DiJet110_Mu5() { return nt.HLT_BTagMu_AK4DiJet110_Mu5(); }
    const bool &HLT_BTagMu_AK4DiJet110_Mu5_noalgo() { return nt.HLT_BTagMu_AK4DiJet110_Mu5_noalgo(); }
    const bool &HLT_BTagMu_AK4DiJet170_Mu5() { return nt.HLT_BTagMu_AK4DiJet170_Mu5(); }
    const bool &HLT_BTagMu_AK4DiJet170_Mu5_noalgo() { return nt.HLT_BTagMu_AK4DiJet170_Mu5_noalgo(); }
    const bool &HLT_BTagMu_AK4DiJet20_Mu5() { return nt.HLT_BTagMu_AK4DiJet20_Mu5(); }
    const bool &HLT_BTagMu_AK4DiJet20_Mu5_noalgo() { return nt.HLT_BTagMu_AK4DiJet20_Mu5_noalgo(); }
    const bool &HLT_BTagMu_AK4DiJet40_Mu5() { return nt.HLT_BTagMu_AK4DiJet40_Mu5(); }
    const bool &HLT_BTagMu_AK4DiJet40_Mu5_noalgo() { return nt.HLT_BTagMu_AK4DiJet40_Mu5_noalgo(); }
    const bool &HLT_BTagMu_AK4DiJet70_Mu5() { return nt.HLT_BTagMu_AK4DiJet70_Mu5(); }
    const bool &HLT_BTagMu_AK4DiJet70_Mu5_noalgo() { return nt.HLT_BTagMu_AK4DiJet70_Mu5_noalgo(); }
    const bool &HLT_BTagMu_AK4Jet300_Mu5() { return nt.HLT_BTagMu_AK4Jet300_Mu5(); }
    const bool &HLT_BTagMu_AK4Jet300_Mu5_noalgo() { return nt.HLT_BTagMu_AK4Jet300_Mu5_noalgo(); }
    const bool &HLT_BTagMu_AK8DiJet170_Mu5() { return nt.HLT_BTagMu_AK8DiJet170_Mu5(); }
    const bool &HLT_BTagMu_AK8DiJet170_Mu5_noalgo() { return nt.HLT_BTagMu_AK8DiJet170_Mu5_noalgo(); }
    const bool &HLT_BTagMu_AK8Jet170_DoubleMu5() { return nt.HLT_BTagMu_AK8Jet170_DoubleMu5(); }
    const bool &HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo() { return nt.HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo(); }
    const bool &HLT_BTagMu_AK8Jet300_Mu5() { return nt.HLT_BTagMu_AK8Jet300_Mu5(); }
    const bool &HLT_BTagMu_AK8Jet300_Mu5_noalgo() { return nt.HLT_BTagMu_AK8Jet300_Mu5_noalgo(); }
    const bool &HLT_BTagMu_DiJet110_Mu5() { return nt.HLT_BTagMu_DiJet110_Mu5(); }
    const bool &HLT_BTagMu_DiJet170_Mu5() { return nt.HLT_BTagMu_DiJet170_Mu5(); }
    const bool &HLT_BTagMu_DiJet20_Mu5() { return nt.HLT_BTagMu_DiJet20_Mu5(); }
    const bool &HLT_BTagMu_DiJet40_Mu5() { return nt.HLT_BTagMu_DiJet40_Mu5(); }
    const bool &HLT_BTagMu_DiJet70_Mu5() { return nt.HLT_BTagMu_DiJet70_Mu5(); }
    const bool &HLT_BTagMu_Jet300_Mu5() { return nt.HLT_BTagMu_Jet300_Mu5(); }
    const bool &HLT_CDC_L2cosmic_10_er1p0() { return nt.HLT_CDC_L2cosmic_10_er1p0(); }
    const bool &HLT_CDC_L2cosmic_5_er1p0() { return nt.HLT_CDC_L2cosmic_5_er1p0(); }
    const bool &HLT_CDC_L2cosmic_5p5_er1p0() { return nt.HLT_CDC_L2cosmic_5p5_er1p0(); }
    const bool &HLT_CaloJet260() { return nt.HLT_CaloJet260(); }
    const bool &HLT_CaloJet500_NoJetID() { return nt.HLT_CaloJet500_NoJetID(); }
    const bool &HLT_CaloJet550_NoJetID() { return nt.HLT_CaloJet550_NoJetID(); }
    const bool &HLT_CaloMET100_HBHECleaned() { return nt.HLT_CaloMET100_HBHECleaned(); }
    const bool &HLT_CaloMET100_NotCleaned() { return nt.HLT_CaloMET100_NotCleaned(); }
    const bool &HLT_CaloMET110_NotCleaned() { return nt.HLT_CaloMET110_NotCleaned(); }
    const bool &HLT_CaloMET250_HBHECleaned() { return nt.HLT_CaloMET250_HBHECleaned(); }
    const bool &HLT_CaloMET250_NotCleaned() { return nt.HLT_CaloMET250_NotCleaned(); }
    const bool &HLT_CaloMET300_HBHECleaned() { return nt.HLT_CaloMET300_HBHECleaned(); }
    const bool &HLT_CaloMET350_HBHECleaned() { return nt.HLT_CaloMET350_HBHECleaned(); }
    const bool &HLT_CaloMET350_NotCleaned() { return nt.HLT_CaloMET350_NotCleaned(); }
    const bool &HLT_CaloMET60_DTCluster50() { return nt.HLT_CaloMET60_DTCluster50(); }
    const bool &HLT_CaloMET60_DTClusterNoMB1S50() { return nt.HLT_CaloMET60_DTClusterNoMB1S50(); }
    const bool &HLT_CaloMET70_HBHECleaned() { return nt.HLT_CaloMET70_HBHECleaned(); }
    const bool &HLT_CaloMET80_HBHECleaned() { return nt.HLT_CaloMET80_HBHECleaned(); }
    const bool &HLT_CaloMET80_NotCleaned() { return nt.HLT_CaloMET80_NotCleaned(); }
    const bool &HLT_CaloMET90_HBHECleaned() { return nt.HLT_CaloMET90_HBHECleaned(); }
    const bool &HLT_CaloMET90_NotCleaned() { return nt.HLT_CaloMET90_NotCleaned(); }
    const bool &HLT_CaloMHT90() { return nt.HLT_CaloMHT90(); }
    const bool &HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight() { return nt.HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight(); }
    const bool &HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067() { return nt.HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067(); }
    const bool &HLT_CascadeMu100() { return nt.HLT_CascadeMu100(); }
    const bool &HLT_CscCluster_Loose() { return nt.HLT_CscCluster_Loose(); }
    const bool &HLT_CscCluster_Medium() { return nt.HLT_CscCluster_Medium(); }
    const bool &HLT_CscCluster_Tight() { return nt.HLT_CscCluster_Tight(); }
    const bool &HLT_DiCentralPFJet170() { return nt.HLT_DiCentralPFJet170(); }
    const bool &HLT_DiCentralPFJet170_CFMax0p1() { return nt.HLT_DiCentralPFJet170_CFMax0p1(); }
    const bool &HLT_DiCentralPFJet220_CFMax0p3() { return nt.HLT_DiCentralPFJet220_CFMax0p3(); }
    const bool &HLT_DiCentralPFJet330_CFMax0p5() { return nt.HLT_DiCentralPFJet330_CFMax0p5(); }
    const bool &HLT_DiCentralPFJet430() { return nt.HLT_DiCentralPFJet430(); }
    const bool &HLT_DiCentralPFJet55_PFMET110() { return nt.HLT_DiCentralPFJet55_PFMET110(); }
    const bool &HLT_DiEle27_WPTightCaloOnly_L1DoubleEG() { return nt.HLT_DiEle27_WPTightCaloOnly_L1DoubleEG(); }
    const bool &HLT_DiJet110_35_Mjj650_PFMET110() { return nt.HLT_DiJet110_35_Mjj650_PFMET110(); }
    const bool &HLT_DiJet110_35_Mjj650_PFMET120() { return nt.HLT_DiJet110_35_Mjj650_PFMET120(); }
    const bool &HLT_DiJet110_35_Mjj650_PFMET130() { return nt.HLT_DiJet110_35_Mjj650_PFMET130(); }
    const bool &HLT_DiJetVBFMu_PassThrough() { return nt.HLT_DiJetVBFMu_PassThrough(); }
    const bool &HLT_DiJetVBF_PassThrough() { return nt.HLT_DiJetVBF_PassThrough(); }
    const bool &HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8() { return nt.HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8(); }
    const bool &HLT_DiMu9_Ele9_CaloIdL_TrackIdL() { return nt.HLT_DiMu9_Ele9_CaloIdL_TrackIdL(); }
    const bool &HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ() { return nt.HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ(); }
    const bool &HLT_DiPFJet15_FBEta3_NoCaloMatched() { return nt.HLT_DiPFJet15_FBEta3_NoCaloMatched(); }
    const bool &HLT_DiPFJet15_NoCaloMatched() { return nt.HLT_DiPFJet15_NoCaloMatched(); }
    const bool &HLT_DiPFJet25_FBEta3_NoCaloMatched() { return nt.HLT_DiPFJet25_FBEta3_NoCaloMatched(); }
    const bool &HLT_DiPFJet25_NoCaloMatched() { return nt.HLT_DiPFJet25_NoCaloMatched(); }
    const bool &HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140() { return nt.HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140(); }
    const bool &HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80() { return nt.HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80(); }
    const bool &HLT_DiPFJetAve100_HFJEC() { return nt.HLT_DiPFJetAve100_HFJEC(); }
    const bool &HLT_DiPFJetAve140() { return nt.HLT_DiPFJetAve140(); }
    const bool &HLT_DiPFJetAve15_HFJEC() { return nt.HLT_DiPFJetAve15_HFJEC(); }
    const bool &HLT_DiPFJetAve160_HFJEC() { return nt.HLT_DiPFJetAve160_HFJEC(); }
    const bool &HLT_DiPFJetAve200() { return nt.HLT_DiPFJetAve200(); }
    const bool &HLT_DiPFJetAve220_HFJEC() { return nt.HLT_DiPFJetAve220_HFJEC(); }
    const bool &HLT_DiPFJetAve25_HFJEC() { return nt.HLT_DiPFJetAve25_HFJEC(); }
    const bool &HLT_DiPFJetAve260() { return nt.HLT_DiPFJetAve260(); }
    const bool &HLT_DiPFJetAve260_HFJEC() { return nt.HLT_DiPFJetAve260_HFJEC(); }
    const bool &HLT_DiPFJetAve300_HFJEC() { return nt.HLT_DiPFJetAve300_HFJEC(); }
    const bool &HLT_DiPFJetAve320() { return nt.HLT_DiPFJetAve320(); }
    const bool &HLT_DiPFJetAve35_HFJEC() { return nt.HLT_DiPFJetAve35_HFJEC(); }
    const bool &HLT_DiPFJetAve40() { return nt.HLT_DiPFJetAve40(); }
    const bool &HLT_DiPFJetAve400() { return nt.HLT_DiPFJetAve400(); }
    const bool &HLT_DiPFJetAve500() { return nt.HLT_DiPFJetAve500(); }
    const bool &HLT_DiPFJetAve60() { return nt.HLT_DiPFJetAve60(); }
    const bool &HLT_DiPFJetAve60_HFJEC() { return nt.HLT_DiPFJetAve60_HFJEC(); }
    const bool &HLT_DiPFJetAve80() { return nt.HLT_DiPFJetAve80(); }
    const bool &HLT_DiPFJetAve80_HFJEC() { return nt.HLT_DiPFJetAve80_HFJEC(); }
    const bool &HLT_DiPhoton10Time1ns() { return nt.HLT_DiPhoton10Time1ns(); }
    const bool &HLT_DiPhoton10Time1p2ns() { return nt.HLT_DiPhoton10Time1p2ns(); }
    const bool &HLT_DiPhoton10Time1p4ns() { return nt.HLT_DiPhoton10Time1p4ns(); }
    const bool &HLT_DiPhoton10Time1p6ns() { return nt.HLT_DiPhoton10Time1p6ns(); }
    const bool &HLT_DiPhoton10Time1p8ns() { return nt.HLT_DiPhoton10Time1p8ns(); }
    const bool &HLT_DiPhoton10Time2ns() { return nt.HLT_DiPhoton10Time2ns(); }
    const bool &HLT_DiPhoton10_CaloIdL() { return nt.HLT_DiPhoton10_CaloIdL(); }
    const bool &HLT_DiPhoton10sminlt0p1() { return nt.HLT_DiPhoton10sminlt0p1(); }
    const bool &HLT_DiPhoton10sminlt0p12() { return nt.HLT_DiPhoton10sminlt0p12(); }
    const bool &HLT_DiSC30_18_EIso_AND_HE_Mass70() { return nt.HLT_DiSC30_18_EIso_AND_HE_Mass70(); }
    const bool &HLT_Dimuon0_Jpsi() { return nt.HLT_Dimuon0_Jpsi(); }
    const bool &HLT_Dimuon0_Jpsi3p5_Muon2() { return nt.HLT_Dimuon0_Jpsi3p5_Muon2(); }
    const bool &HLT_Dimuon0_Jpsi_L1_4R_0er1p5R() { return nt.HLT_Dimuon0_Jpsi_L1_4R_0er1p5R(); }
    const bool &HLT_Dimuon0_Jpsi_L1_NoOS() { return nt.HLT_Dimuon0_Jpsi_L1_NoOS(); }
    const bool &HLT_Dimuon0_Jpsi_Muon() { return nt.HLT_Dimuon0_Jpsi_Muon(); }
    const bool &HLT_Dimuon0_Jpsi_NoVertexing() { return nt.HLT_Dimuon0_Jpsi_NoVertexing(); }
    const bool &HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R() { return nt.HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R(); }
    const bool &HLT_Dimuon0_Jpsi_NoVertexing_NoOS() { return nt.HLT_Dimuon0_Jpsi_NoVertexing_NoOS(); }
    const bool &HLT_Dimuon0_LowMass() { return nt.HLT_Dimuon0_LowMass(); }
    const bool &HLT_Dimuon0_LowMass_L1_0er1p5() { return nt.HLT_Dimuon0_LowMass_L1_0er1p5(); }
    const bool &HLT_Dimuon0_LowMass_L1_0er1p5R() { return nt.HLT_Dimuon0_LowMass_L1_0er1p5R(); }
    const bool &HLT_Dimuon0_LowMass_L1_4() { return nt.HLT_Dimuon0_LowMass_L1_4(); }
    const bool &HLT_Dimuon0_LowMass_L1_4R() { return nt.HLT_Dimuon0_LowMass_L1_4R(); }
    const bool &HLT_Dimuon0_LowMass_L1_TM530() { return nt.HLT_Dimuon0_LowMass_L1_TM530(); }
    const bool &HLT_Dimuon0_Phi_Barrel() { return nt.HLT_Dimuon0_Phi_Barrel(); }
    const bool &HLT_Dimuon0_Upsilon_L1_4p5() { return nt.HLT_Dimuon0_Upsilon_L1_4p5(); }
    const bool &HLT_Dimuon0_Upsilon_L1_4p5NoOS() { return nt.HLT_Dimuon0_Upsilon_L1_4p5NoOS(); }
    const bool &HLT_Dimuon0_Upsilon_L1_4p5er2p0() { return nt.HLT_Dimuon0_Upsilon_L1_4p5er2p0(); }
    const bool &HLT_Dimuon0_Upsilon_L1_4p5er2p0M() { return nt.HLT_Dimuon0_Upsilon_L1_4p5er2p0M(); }
    const bool &HLT_Dimuon0_Upsilon_L1_5() { return nt.HLT_Dimuon0_Upsilon_L1_5(); }
    const bool &HLT_Dimuon0_Upsilon_L1_5M() { return nt.HLT_Dimuon0_Upsilon_L1_5M(); }
    const bool &HLT_Dimuon0_Upsilon_Muon() { return nt.HLT_Dimuon0_Upsilon_Muon(); }
    const bool &HLT_Dimuon0_Upsilon_Muon_L1_TM0() { return nt.HLT_Dimuon0_Upsilon_Muon_L1_TM0(); }
    const bool &HLT_Dimuon0_Upsilon_Muon_NoL1Mass() { return nt.HLT_Dimuon0_Upsilon_Muon_NoL1Mass(); }
    const bool &HLT_Dimuon0_Upsilon_NoVertexing() { return nt.HLT_Dimuon0_Upsilon_NoVertexing(); }
    const bool &HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing() { return nt.HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing(); }
    const bool &HLT_Dimuon0er16_Jpsi_NoVertexing() { return nt.HLT_Dimuon0er16_Jpsi_NoVertexing(); }
    const bool &HLT_Dimuon10_Jpsi_Barrel() { return nt.HLT_Dimuon10_Jpsi_Barrel(); }
    const bool &HLT_Dimuon10_PsiPrime_Barrel_Seagulls() { return nt.HLT_Dimuon10_PsiPrime_Barrel_Seagulls(); }
    const bool &HLT_Dimuon10_Upsilon_Barrel_Seagulls() { return nt.HLT_Dimuon10_Upsilon_Barrel_Seagulls(); }
    const bool &HLT_Dimuon10_Upsilon_y1p4() { return nt.HLT_Dimuon10_Upsilon_y1p4(); }
    const bool &HLT_Dimuon12_Upsilon_eta1p5() { return nt.HLT_Dimuon12_Upsilon_eta1p5(); }
    const bool &HLT_Dimuon12_Upsilon_y1p4() { return nt.HLT_Dimuon12_Upsilon_y1p4(); }
    const bool &HLT_Dimuon13_PsiPrime() { return nt.HLT_Dimuon13_PsiPrime(); }
    const bool &HLT_Dimuon13_Upsilon() { return nt.HLT_Dimuon13_Upsilon(); }
    const bool &HLT_Dimuon14_Phi_Barrel_Seagulls() { return nt.HLT_Dimuon14_Phi_Barrel_Seagulls(); }
    const bool &HLT_Dimuon14_PsiPrime() { return nt.HLT_Dimuon14_PsiPrime(); }
    const bool &HLT_Dimuon14_PsiPrime_noCorrL1() { return nt.HLT_Dimuon14_PsiPrime_noCorrL1(); }
    const bool &HLT_Dimuon16_Jpsi() { return nt.HLT_Dimuon16_Jpsi(); }
    const bool &HLT_Dimuon18_PsiPrime() { return nt.HLT_Dimuon18_PsiPrime(); }
    const bool &HLT_Dimuon18_PsiPrime_noCorrL1() { return nt.HLT_Dimuon18_PsiPrime_noCorrL1(); }
    const bool &HLT_Dimuon20_Jpsi() { return nt.HLT_Dimuon20_Jpsi(); }
    const bool &HLT_Dimuon20_Jpsi_Barrel_Seagulls() { return nt.HLT_Dimuon20_Jpsi_Barrel_Seagulls(); }
    const bool &HLT_Dimuon24_Phi_noCorrL1() { return nt.HLT_Dimuon24_Phi_noCorrL1(); }
    const bool &HLT_Dimuon24_Upsilon_noCorrL1() { return nt.HLT_Dimuon24_Upsilon_noCorrL1(); }
    const bool &HLT_Dimuon25_Jpsi() { return nt.HLT_Dimuon25_Jpsi(); }
    const bool &HLT_Dimuon25_Jpsi_noCorrL1() { return nt.HLT_Dimuon25_Jpsi_noCorrL1(); }
    const bool &HLT_Dimuon6_Jpsi_NoVertexing() { return nt.HLT_Dimuon6_Jpsi_NoVertexing(); }
    const bool &HLT_Dimuon8_PsiPrime_Barrel() { return nt.HLT_Dimuon8_PsiPrime_Barrel(); }
    const bool &HLT_Dimuon8_Upsilon_Barrel() { return nt.HLT_Dimuon8_Upsilon_Barrel(); }
    const bool &HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT() { return nt.HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT(); }
    const bool &HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT() { return nt.HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT(); }
    const bool &HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT() { return nt.HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT(); }
    const bool &HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT() { return nt.HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT(); }
    const bool &HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55() { return nt.HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55(); }
    const bool &HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55() { return nt.HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55(); }
    const bool &HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55() { return nt.HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55(); }
    const bool &HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55() { return nt.HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55(); }
    const bool &HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55() { return nt.HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55(); }
    const bool &HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55() { return nt.HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55(); }
    const bool &HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55() { return nt.HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55(); }
    const bool &HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55() { return nt.HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55(); }
    const bool &HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId() { return nt.HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId(); }
    const bool &HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55() { return nt.HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55(); }
    const bool &HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto() { return nt.HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto(); }
    const bool &HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55() { return nt.HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55(); }
    const bool &HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70() { return nt.HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70(); }
    const bool &HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90() { return nt.HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90(); }
    const bool &HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55() { return nt.HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55(); }
    const bool &HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90() { return nt.HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90(); }
    const bool &HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95() { return nt.HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95(); }
    const bool &HLT_DoubleEle10_eta1p22_mMax6() { return nt.HLT_DoubleEle10_eta1p22_mMax6(); }
    const bool &HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf() { return nt.HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf(); }
    const bool &HLT_DoubleEle24_eta2p1_WPTight_Gsf() { return nt.HLT_DoubleEle24_eta2p1_WPTight_Gsf(); }
    const bool &HLT_DoubleEle25_CaloIdL_GsfTrkIdVL() { return nt.HLT_DoubleEle25_CaloIdL_GsfTrkIdVL(); }
    const bool &HLT_DoubleEle25_CaloIdL_MW() { return nt.HLT_DoubleEle25_CaloIdL_MW(); }
    const bool &HLT_DoubleEle27_CaloIdL_MW() { return nt.HLT_DoubleEle27_CaloIdL_MW(); }
    const bool &HLT_DoubleEle33_CaloIdL() { return nt.HLT_DoubleEle33_CaloIdL(); }
    const bool &HLT_DoubleEle33_CaloIdL_GsfTrkIdVL() { return nt.HLT_DoubleEle33_CaloIdL_GsfTrkIdVL(); }
    const bool &HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW() { return nt.HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW(); }
    const bool &HLT_DoubleEle33_CaloIdL_MW() { return nt.HLT_DoubleEle33_CaloIdL_MW(); }
    const bool &HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL() { return nt.HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL(); }
    const bool &HLT_DoubleEle4_eta1p22_mMax6() { return nt.HLT_DoubleEle4_eta1p22_mMax6(); }
    const bool &HLT_DoubleEle4p5_eta1p22_mMax6() { return nt.HLT_DoubleEle4p5_eta1p22_mMax6(); }
    const bool &HLT_DoubleEle5_eta1p22_mMax6() { return nt.HLT_DoubleEle5_eta1p22_mMax6(); }
    const bool &HLT_DoubleEle5p5_eta1p22_mMax6() { return nt.HLT_DoubleEle5p5_eta1p22_mMax6(); }
    const bool &HLT_DoubleEle6_eta1p22_mMax6() { return nt.HLT_DoubleEle6_eta1p22_mMax6(); }
    const bool &HLT_DoubleEle6p5_eta1p22_mMax6() { return nt.HLT_DoubleEle6p5_eta1p22_mMax6(); }
    const bool &HLT_DoubleEle7_eta1p22_mMax6() { return nt.HLT_DoubleEle7_eta1p22_mMax6(); }
    const bool &HLT_DoubleEle7p5_eta1p22_mMax6() { return nt.HLT_DoubleEle7p5_eta1p22_mMax6(); }
    const bool &HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350() { return nt.HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350(); }
    const bool &HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250() { return nt.HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250(); }
    const bool &HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300() { return nt.HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300(); }
    const bool &HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350() { return nt.HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350(); }
    const bool &HLT_DoubleEle8_eta1p22_mMax6() { return nt.HLT_DoubleEle8_eta1p22_mMax6(); }
    const bool &HLT_DoubleEle8p5_eta1p22_mMax6() { return nt.HLT_DoubleEle8p5_eta1p22_mMax6(); }
    const bool &HLT_DoubleEle9_eta1p22_mMax6() { return nt.HLT_DoubleEle9_eta1p22_mMax6(); }
    const bool &HLT_DoubleEle9p5_eta1p22_mMax6() { return nt.HLT_DoubleEle9p5_eta1p22_mMax6(); }
    const bool &HLT_DoubleIsoMu17_eta2p1() { return nt.HLT_DoubleIsoMu17_eta2p1(); }
    const bool &HLT_DoubleIsoMu17_eta2p1_noDzCut() { return nt.HLT_DoubleIsoMu17_eta2p1_noDzCut(); }
    const bool &HLT_DoubleIsoMu20_eta2p1() { return nt.HLT_DoubleIsoMu20_eta2p1(); }
    const bool &HLT_DoubleIsoMu24_eta2p1() { return nt.HLT_DoubleIsoMu24_eta2p1(); }
    const bool &HLT_DoubleJet90_Double30_DoubleBTagCSV_p087() { return nt.HLT_DoubleJet90_Double30_DoubleBTagCSV_p087(); }
    const bool &HLT_DoubleJet90_Double30_TripleBTagCSV_p087() { return nt.HLT_DoubleJet90_Double30_TripleBTagCSV_p087(); }
    const bool &HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6() { return nt.HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6(); }
    const bool &HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160() { return nt.HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160(); }
    const bool &HLT_DoubleJetsC100_SingleBTagCSV_p014() { return nt.HLT_DoubleJetsC100_SingleBTagCSV_p014(); }
    const bool &HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350() { return nt.HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350(); }
    const bool &HLT_DoubleJetsC100_SingleBTagCSV_p026() { return nt.HLT_DoubleJetsC100_SingleBTagCSV_p026(); }
    const bool &HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350() { return nt.HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350(); }
    const bool &HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6() { return nt.HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6(); }
    const bool &HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172() { return nt.HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172(); }
    const bool &HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm() { return nt.HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm(); }
    const bool &HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm() { return nt.HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm(); }
    const bool &HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm() { return nt.HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm(); }
    const bool &HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm() { return nt.HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm(); }
    const bool &HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm() { return nt.HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm(); }
    const bool &HLT_DoubleL2Mu23NoVtx_2Cha() { return nt.HLT_DoubleL2Mu23NoVtx_2Cha(); }
    const bool &HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed() { return nt.HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed(); }
    const bool &HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched() { return nt.HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched(); }
    const bool &HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched() { return nt.HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched(); }
    const bool &HLT_DoubleL2Mu25NoVtx_2Cha() { return nt.HLT_DoubleL2Mu25NoVtx_2Cha(); }
    const bool &HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed() { return nt.HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed(); }
    const bool &HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4() { return nt.HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4(); }
    const bool &HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched() { return nt.HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched(); }
    const bool &HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4() { return nt.HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4(); }
    const bool &HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched() { return nt.HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched(); }
    const bool &HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4() { return nt.HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4(); }
    const bool &HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4() { return nt.HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4(); }
    const bool &HLT_DoubleL2Mu50() { return nt.HLT_DoubleL2Mu50(); }
    const bool &HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm() { return nt.HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm(); }
    const bool &HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm() { return nt.HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm(); }
    const bool &HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm() { return nt.HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm(); }
    const bool &HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm() { return nt.HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm(); }
    const bool &HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm() { return nt.HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm(); }
    const bool &HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm() { return nt.HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm(); }
    const bool &HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg() { return nt.HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg(); }
    const bool &HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg() { return nt.HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg() { return nt.HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg(); }
    const bool &HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg() { return nt.HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1() { return nt.HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1(); }
    const bool &HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg() { return nt.HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg(); }
    const bool &HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg() { return nt.HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg() { return nt.HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg(); }
    const bool &HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg() { return nt.HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg() { return nt.HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg() { return nt.HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg(); }
    const bool &HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg() { return nt.HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg() { return nt.HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg(); }
    const bool &HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1() { return nt.HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1(); }
    const bool &HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg() { return nt.HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg() { return nt.HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1() { return nt.HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1(); }
    const bool &HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg() { return nt.HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60() { return nt.HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60(); }
    const bool &HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75() { return nt.HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75(); }
    const bool &HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1() { return nt.HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1(); }
    const bool &HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg() { return nt.HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg() { return nt.HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1() { return nt.HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1(); }
    const bool &HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg() { return nt.HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleMu0() { return nt.HLT_DoubleMu0(); }
    const bool &HLT_DoubleMu18NoFiltersNoVtx() { return nt.HLT_DoubleMu18NoFiltersNoVtx(); }
    const bool &HLT_DoubleMu20_7_Mass0to30_L1_DM4() { return nt.HLT_DoubleMu20_7_Mass0to30_L1_DM4(); }
    const bool &HLT_DoubleMu20_7_Mass0to30_L1_DM4EG() { return nt.HLT_DoubleMu20_7_Mass0to30_L1_DM4EG(); }
    const bool &HLT_DoubleMu20_7_Mass0to30_Photon23() { return nt.HLT_DoubleMu20_7_Mass0to30_Photon23(); }
    const bool &HLT_DoubleMu23NoFiltersNoVtxDisplaced() { return nt.HLT_DoubleMu23NoFiltersNoVtxDisplaced(); }
    const bool &HLT_DoubleMu28NoFiltersNoVtxDisplaced() { return nt.HLT_DoubleMu28NoFiltersNoVtxDisplaced(); }
    const bool &HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi() { return nt.HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi(); }
    const bool &HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi() { return nt.HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi(); }
    const bool &HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05() { return nt.HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05(); }
    const bool &HLT_DoubleMu33NoFiltersNoVtx() { return nt.HLT_DoubleMu33NoFiltersNoVtx(); }
    const bool &HLT_DoubleMu33NoFiltersNoVtxDisplaced() { return nt.HLT_DoubleMu33NoFiltersNoVtxDisplaced(); }
    const bool &HLT_DoubleMu38NoFiltersNoVtx() { return nt.HLT_DoubleMu38NoFiltersNoVtx(); }
    const bool &HLT_DoubleMu3_DCA_PFMET50_PFMHT60() { return nt.HLT_DoubleMu3_DCA_PFMET50_PFMHT60(); }
    const bool &HLT_DoubleMu3_DZ_PFMET50_PFMHT60() { return nt.HLT_DoubleMu3_DZ_PFMET50_PFMHT60(); }
    const bool &HLT_DoubleMu3_DZ_PFMET70_PFMHT70() { return nt.HLT_DoubleMu3_DZ_PFMET70_PFMHT70(); }
    const bool &HLT_DoubleMu3_DZ_PFMET90_PFMHT90() { return nt.HLT_DoubleMu3_DZ_PFMET90_PFMHT90(); }
    const bool &HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon() { return nt.HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon(); }
    const bool &HLT_DoubleMu3_PFMET50() { return nt.HLT_DoubleMu3_PFMET50(); }
    const bool &HLT_DoubleMu3_TkMu_DsTau3Mu() { return nt.HLT_DoubleMu3_TkMu_DsTau3Mu(); }
    const bool &HLT_DoubleMu3_Trk_Tau3mu() { return nt.HLT_DoubleMu3_Trk_Tau3mu(); }
    const bool &HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass() { return nt.HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass(); }
    const bool &HLT_DoubleMu40NoFiltersNoVtxDisplaced() { return nt.HLT_DoubleMu40NoFiltersNoVtxDisplaced(); }
    const bool &HLT_DoubleMu43NoFiltersNoVtx() { return nt.HLT_DoubleMu43NoFiltersNoVtx(); }
    const bool &HLT_DoubleMu48NoFiltersNoVtx() { return nt.HLT_DoubleMu48NoFiltersNoVtx(); }
    const bool &HLT_DoubleMu4_3_Bs() { return nt.HLT_DoubleMu4_3_Bs(); }
    const bool &HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG() { return nt.HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG(); }
    const bool &HLT_DoubleMu4_3_Jpsi() { return nt.HLT_DoubleMu4_3_Jpsi(); }
    const bool &HLT_DoubleMu4_3_Jpsi_Displaced() { return nt.HLT_DoubleMu4_3_Jpsi_Displaced(); }
    const bool &HLT_DoubleMu4_3_LowMass() { return nt.HLT_DoubleMu4_3_LowMass(); }
    const bool &HLT_DoubleMu4_3_Photon4_BsToMMG() { return nt.HLT_DoubleMu4_3_Photon4_BsToMMG(); }
    const bool &HLT_DoubleMu4_JpsiTrkTrk_Displaced() { return nt.HLT_DoubleMu4_JpsiTrkTrk_Displaced(); }
    const bool &HLT_DoubleMu4_JpsiTrk_Bc() { return nt.HLT_DoubleMu4_JpsiTrk_Bc(); }
    const bool &HLT_DoubleMu4_JpsiTrk_Displaced() { return nt.HLT_DoubleMu4_JpsiTrk_Displaced(); }
    const bool &HLT_DoubleMu4_Jpsi_Displaced() { return nt.HLT_DoubleMu4_Jpsi_Displaced(); }
    const bool &HLT_DoubleMu4_Jpsi_NoVertexing() { return nt.HLT_DoubleMu4_Jpsi_NoVertexing(); }
    const bool &HLT_DoubleMu4_LowMassNonResonantTrk_Displaced() { return nt.HLT_DoubleMu4_LowMassNonResonantTrk_Displaced(); }
    const bool &HLT_DoubleMu4_LowMass_Displaced() { return nt.HLT_DoubleMu4_LowMass_Displaced(); }
    const bool &HLT_DoubleMu4_Mass3p8_DZ_PFHT350() { return nt.HLT_DoubleMu4_Mass3p8_DZ_PFHT350(); }
    const bool &HLT_DoubleMu4_Mass8_DZ_PFHT350() { return nt.HLT_DoubleMu4_Mass8_DZ_PFHT350(); }
    const bool &HLT_DoubleMu4_MuMuTrk_Displaced() { return nt.HLT_DoubleMu4_MuMuTrk_Displaced(); }
    const bool &HLT_DoubleMu4_PsiPrimeTrk_Displaced() { return nt.HLT_DoubleMu4_PsiPrimeTrk_Displaced(); }
    const bool &HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL() { return nt.HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL(); }
    const bool &HLT_DoubleMu8_Mass8_PFHT250() { return nt.HLT_DoubleMu8_Mass8_PFHT250(); }
    const bool &HLT_DoubleMu8_Mass8_PFHT300() { return nt.HLT_DoubleMu8_Mass8_PFHT300(); }
    const bool &HLT_DoubleMu8_Mass8_PFHT350() { return nt.HLT_DoubleMu8_Mass8_PFHT350(); }
    const bool &HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33() { return nt.HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33(); }
    const bool &HLT_DoublePFJets100_CaloBTagCSV_p33() { return nt.HLT_DoublePFJets100_CaloBTagCSV_p33(); }
    const bool &HLT_DoublePFJets100_CaloBTagCSV_p79() { return nt.HLT_DoublePFJets100_CaloBTagCSV_p79(); }
    const bool &HLT_DoublePFJets100_CaloBTagDeepCSV_p71() { return nt.HLT_DoublePFJets100_CaloBTagDeepCSV_p71(); }
    const bool &HLT_DoublePFJets100_PFBTagDeepCSV_p71() { return nt.HLT_DoublePFJets100_PFBTagDeepCSV_p71(); }
    const bool &HLT_DoublePFJets100_PFBTagDeepJet_p71() { return nt.HLT_DoublePFJets100_PFBTagDeepJet_p71(); }
    const bool &HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33() { return nt.HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33(); }
    const bool &HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79() { return nt.HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79(); }
    const bool &HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71() { return nt.HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71(); }
    const bool &HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71() { return nt.HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71(); }
    const bool &HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71() { return nt.HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71(); }
    const bool &HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33() { return nt.HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33(); }
    const bool &HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79() { return nt.HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79(); }
    const bool &HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71() { return nt.HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71(); }
    const bool &HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71() { return nt.HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71(); }
    const bool &HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71() { return nt.HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71(); }
    const bool &HLT_DoublePFJets200_CaloBTagCSV_p33() { return nt.HLT_DoublePFJets200_CaloBTagCSV_p33(); }
    const bool &HLT_DoublePFJets200_CaloBTagCSV_p79() { return nt.HLT_DoublePFJets200_CaloBTagCSV_p79(); }
    const bool &HLT_DoublePFJets200_CaloBTagDeepCSV_p71() { return nt.HLT_DoublePFJets200_CaloBTagDeepCSV_p71(); }
    const bool &HLT_DoublePFJets200_PFBTagDeepCSV_p71() { return nt.HLT_DoublePFJets200_PFBTagDeepCSV_p71(); }
    const bool &HLT_DoublePFJets200_PFBTagDeepJet_p71() { return nt.HLT_DoublePFJets200_PFBTagDeepJet_p71(); }
    const bool &HLT_DoublePFJets350_CaloBTagCSV_p33() { return nt.HLT_DoublePFJets350_CaloBTagCSV_p33(); }
    const bool &HLT_DoublePFJets350_CaloBTagCSV_p79() { return nt.HLT_DoublePFJets350_CaloBTagCSV_p79(); }
    const bool &HLT_DoublePFJets350_CaloBTagDeepCSV_p71() { return nt.HLT_DoublePFJets350_CaloBTagDeepCSV_p71(); }
    const bool &HLT_DoublePFJets350_PFBTagDeepCSV_p71() { return nt.HLT_DoublePFJets350_PFBTagDeepCSV_p71(); }
    const bool &HLT_DoublePFJets350_PFBTagDeepJet_p71() { return nt.HLT_DoublePFJets350_PFBTagDeepJet_p71(); }
    const bool &HLT_DoublePFJets40_CaloBTagCSV_p33() { return nt.HLT_DoublePFJets40_CaloBTagCSV_p33(); }
    const bool &HLT_DoublePFJets40_CaloBTagCSV_p79() { return nt.HLT_DoublePFJets40_CaloBTagCSV_p79(); }
    const bool &HLT_DoublePFJets40_CaloBTagDeepCSV_p71() { return nt.HLT_DoublePFJets40_CaloBTagDeepCSV_p71(); }
    const bool &HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1() { return nt.HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1(); }
    const bool &HLT_DoublePFJets40_PFBTagDeepCSV_p71() { return nt.HLT_DoublePFJets40_PFBTagDeepCSV_p71(); }
    const bool &HLT_DoublePFJets40_PFBTagDeepJet_p71() { return nt.HLT_DoublePFJets40_PFBTagDeepJet_p71(); }
    const bool &HLT_DoublePhoton33_CaloIdL() { return nt.HLT_DoublePhoton33_CaloIdL(); }
    const bool &HLT_DoublePhoton60() { return nt.HLT_DoublePhoton60(); }
    const bool &HLT_DoublePhoton70() { return nt.HLT_DoublePhoton70(); }
    const bool &HLT_DoublePhoton85() { return nt.HLT_DoublePhoton85(); }
    const bool &HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg() { return nt.HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg(); }
    const bool &HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg() { return nt.HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg() { return nt.HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg(); }
    const bool &HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg() { return nt.HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg() { return nt.HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg(); }
    const bool &HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1() { return nt.HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1(); }
    const bool &HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg() { return nt.HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg() { return nt.HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg(); }
    const bool &HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg() { return nt.HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg() { return nt.HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1() { return nt.HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1(); }
    const bool &HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg() { return nt.HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg(); }
    const bool &HLT_DoubleTrkMu_16_6_NoFiltersNoVtx() { return nt.HLT_DoubleTrkMu_16_6_NoFiltersNoVtx(); }
    const bool &HLT_ECALHT800() { return nt.HLT_ECALHT800(); }
    const bool &HLT_EcalCalibration() { return nt.HLT_EcalCalibration(); }
    const bool &HLT_Ele105_CaloIdVT_GsfTrkIdT() { return nt.HLT_Ele105_CaloIdVT_GsfTrkIdT(); }
    const bool &HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13() { return nt.HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13(); }
    const bool &HLT_Ele115_CaloIdVT_GsfTrkIdT() { return nt.HLT_Ele115_CaloIdVT_GsfTrkIdT(); }
    const bool &HLT_Ele12_CaloIdL_TrackIdL_IsoVL() { return nt.HLT_Ele12_CaloIdL_TrackIdL_IsoVL(); }
    const bool &HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30() { return nt.HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30(); }
    const bool &HLT_Ele12_CaloIdM_TrackIdM_PFJet30() { return nt.HLT_Ele12_CaloIdM_TrackIdM_PFJet30(); }
    const bool &HLT_Ele135_CaloIdVT_GsfTrkIdT() { return nt.HLT_Ele135_CaloIdVT_GsfTrkIdT(); }
    const bool &HLT_Ele145_CaloIdVT_GsfTrkIdT() { return nt.HLT_Ele145_CaloIdVT_GsfTrkIdT(); }
    const bool &HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30() { return nt.HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30(); }
    const bool &HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL() { return nt.HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL(); }
    const bool &HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400() { return nt.HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400(); }
    const bool &HLT_Ele15_IsoVVVL_PFHT350() { return nt.HLT_Ele15_IsoVVVL_PFHT350(); }
    const bool &HLT_Ele15_IsoVVVL_PFHT350_PFMET50() { return nt.HLT_Ele15_IsoVVVL_PFHT350_PFMET50(); }
    const bool &HLT_Ele15_IsoVVVL_PFHT400() { return nt.HLT_Ele15_IsoVVVL_PFHT400(); }
    const bool &HLT_Ele15_IsoVVVL_PFHT400_PFMET50() { return nt.HLT_Ele15_IsoVVVL_PFHT400_PFMET50(); }
    const bool &HLT_Ele15_IsoVVVL_PFHT450() { return nt.HLT_Ele15_IsoVVVL_PFHT450(); }
    const bool &HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5() { return nt.HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5(); }
    const bool &HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5() { return nt.HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5(); }
    const bool &HLT_Ele15_IsoVVVL_PFHT450_PFMET50() { return nt.HLT_Ele15_IsoVVVL_PFHT450_PFMET50(); }
    const bool &HLT_Ele15_IsoVVVL_PFHT600() { return nt.HLT_Ele15_IsoVVVL_PFHT600(); }
    const bool &HLT_Ele15_WPLoose_Gsf() { return nt.HLT_Ele15_WPLoose_Gsf(); }
    const bool &HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL() { return nt.HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL(); }
    const bool &HLT_Ele17_CaloIdL_GsfTrkIdVL() { return nt.HLT_Ele17_CaloIdL_GsfTrkIdVL(); }
    const bool &HLT_Ele17_CaloIdL_TrackIdL_IsoVL() { return nt.HLT_Ele17_CaloIdL_TrackIdL_IsoVL(); }
    const bool &HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30() { return nt.HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30(); }
    const bool &HLT_Ele17_CaloIdM_TrackIdM_PFJet30() { return nt.HLT_Ele17_CaloIdM_TrackIdM_PFJet30(); }
    const bool &HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL() { return nt.HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL(); }
    const bool &HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ() { return nt.HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ(); }
    const bool &HLT_Ele17_Ele8_Gsf() { return nt.HLT_Ele17_Ele8_Gsf(); }
    const bool &HLT_Ele17_WPLoose_Gsf() { return nt.HLT_Ele17_WPLoose_Gsf(); }
    const bool &HLT_Ele200_CaloIdVT_GsfTrkIdT() { return nt.HLT_Ele200_CaloIdVT_GsfTrkIdT(); }
    const bool &HLT_Ele20_WPLoose_Gsf() { return nt.HLT_Ele20_WPLoose_Gsf(); }
    const bool &HLT_Ele20_WPTight_Gsf() { return nt.HLT_Ele20_WPTight_Gsf(); }
    const bool &HLT_Ele20_eta2p1_WPLoose_Gsf() { return nt.HLT_Ele20_eta2p1_WPLoose_Gsf(); }
    const bool &HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28() { return nt.HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28(); }
    const bool &HLT_Ele22_eta2p1_WPLoose_Gsf() { return nt.HLT_Ele22_eta2p1_WPLoose_Gsf(); }
    const bool &HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1() { return nt.HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1(); }
    const bool &HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29() { return nt.HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29(); }
    const bool &HLT_Ele23_CaloIdL_TrackIdL_IsoVL() { return nt.HLT_Ele23_CaloIdL_TrackIdL_IsoVL(); }
    const bool &HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30() { return nt.HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30(); }
    const bool &HLT_Ele23_CaloIdM_TrackIdM_PFJet30() { return nt.HLT_Ele23_CaloIdM_TrackIdM_PFJet30(); }
    const bool &HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL() { return nt.HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL(); }
    const bool &HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ() { return nt.HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ(); }
    const bool &HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded() { return nt.HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded(); }
    const bool &HLT_Ele23_WPLoose_Gsf() { return nt.HLT_Ele23_WPLoose_Gsf(); }
    const bool &HLT_Ele23_WPLoose_Gsf_WHbbBoost() { return nt.HLT_Ele23_WPLoose_Gsf_WHbbBoost(); }
    const bool &HLT_Ele24_eta2p1_WPLoose_Gsf() { return nt.HLT_Ele24_eta2p1_WPLoose_Gsf(); }
    const bool &HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20() { return nt.HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20(); }
    const bool &HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1() { return nt.HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1(); }
    const bool &HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30() { return nt.HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30(); }
    const bool &HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1() { return nt.HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1(); }
    const bool &HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1() { return nt.HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1(); }
    const bool &HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1() { return nt.HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1(); }
    const bool &HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1() { return nt.HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1(); }
    const bool &HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1() { return nt.HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1(); }
    const bool &HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1() { return nt.HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1(); }
    const bool &HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1() { return nt.HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1(); }
    const bool &HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1() { return nt.HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1(); }
    const bool &HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1() { return nt.HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1(); }
    const bool &HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1() { return nt.HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1(); }
    const bool &HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1() { return nt.HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1(); }
    const bool &HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1() { return nt.HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1(); }
    const bool &HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1() { return nt.HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1(); }
    const bool &HLT_Ele250_CaloIdVT_GsfTrkIdT() { return nt.HLT_Ele250_CaloIdVT_GsfTrkIdT(); }
    const bool &HLT_Ele25_WPTight_Gsf() { return nt.HLT_Ele25_WPTight_Gsf(); }
    const bool &HLT_Ele25_eta2p1_WPLoose_Gsf() { return nt.HLT_Ele25_eta2p1_WPLoose_Gsf(); }
    const bool &HLT_Ele25_eta2p1_WPTight_Gsf() { return nt.HLT_Ele25_eta2p1_WPTight_Gsf(); }
    const bool &HLT_Ele27_Ele37_CaloIdL_MW() { return nt.HLT_Ele27_Ele37_CaloIdL_MW(); }
    const bool &HLT_Ele27_HighEta_Ele20_Mass55() { return nt.HLT_Ele27_HighEta_Ele20_Mass55(); }
    const bool &HLT_Ele27_WPLoose_Gsf() { return nt.HLT_Ele27_WPLoose_Gsf(); }
    const bool &HLT_Ele27_WPLoose_Gsf_WHbbBoost() { return nt.HLT_Ele27_WPLoose_Gsf_WHbbBoost(); }
    const bool &HLT_Ele27_WPTight_Gsf() { return nt.HLT_Ele27_WPTight_Gsf(); }
    const bool &HLT_Ele27_WPTight_Gsf_L1JetTauSeeded() { return nt.HLT_Ele27_WPTight_Gsf_L1JetTauSeeded(); }
    const bool &HLT_Ele27_eta2p1_WPLoose_Gsf() { return nt.HLT_Ele27_eta2p1_WPLoose_Gsf(); }
    const bool &HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg() { return nt.HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg(); }
    const bool &HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg() { return nt.HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg(); }
    const bool &HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg() { return nt.HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg(); }
    const bool &HLT_Ele27_eta2p1_WPLoose_Gsf_HT200() { return nt.HLT_Ele27_eta2p1_WPLoose_Gsf_HT200(); }
    const bool &HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1() { return nt.HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1(); }
    const bool &HLT_Ele27_eta2p1_WPTight_Gsf() { return nt.HLT_Ele27_eta2p1_WPTight_Gsf(); }
    const bool &HLT_Ele28_HighEta_SC20_Mass55() { return nt.HLT_Ele28_HighEta_SC20_Mass55(); }
    const bool &HLT_Ele28_WPTight_Gsf() { return nt.HLT_Ele28_WPTight_Gsf(); }
    const bool &HLT_Ele28_eta2p1_WPTight_Gsf_HT150() { return nt.HLT_Ele28_eta2p1_WPTight_Gsf_HT150(); }
    const bool &HLT_Ele300_CaloIdVT_GsfTrkIdT() { return nt.HLT_Ele300_CaloIdVT_GsfTrkIdT(); }
    const bool &HLT_Ele30WP60_Ele8_Mass55() { return nt.HLT_Ele30WP60_Ele8_Mass55(); }
    const bool &HLT_Ele30WP60_SC4_Mass55() { return nt.HLT_Ele30WP60_SC4_Mass55(); }
    const bool &HLT_Ele30_WPTight_Gsf() { return nt.HLT_Ele30_WPTight_Gsf(); }
    const bool &HLT_Ele30_eta2p1_WPLoose_Gsf() { return nt.HLT_Ele30_eta2p1_WPLoose_Gsf(); }
    const bool &HLT_Ele30_eta2p1_WPTight_Gsf() { return nt.HLT_Ele30_eta2p1_WPTight_Gsf(); }
    const bool &HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned() { return nt.HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned(); }
    const bool &HLT_Ele32_WPTight_Gsf() { return nt.HLT_Ele32_WPTight_Gsf(); }
    const bool &HLT_Ele32_WPTight_Gsf_L1DoubleEG() { return nt.HLT_Ele32_WPTight_Gsf_L1DoubleEG(); }
    const bool &HLT_Ele32_eta2p1_WPLoose_Gsf() { return nt.HLT_Ele32_eta2p1_WPLoose_Gsf(); }
    const bool &HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1() { return nt.HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1(); }
    const bool &HLT_Ele32_eta2p1_WPTight_Gsf() { return nt.HLT_Ele32_eta2p1_WPTight_Gsf(); }
    const bool &HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50() { return nt.HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50(); }
    const bool &HLT_Ele35_WPLoose_Gsf() { return nt.HLT_Ele35_WPLoose_Gsf(); }
    const bool &HLT_Ele35_WPTight_Gsf() { return nt.HLT_Ele35_WPTight_Gsf(); }
    const bool &HLT_Ele35_WPTight_Gsf_L1EGMT() { return nt.HLT_Ele35_WPTight_Gsf_L1EGMT(); }
    const bool &HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1() { return nt.HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1(); }
    const bool &HLT_Ele38_WPTight_Gsf() { return nt.HLT_Ele38_WPTight_Gsf(); }
    const bool &HLT_Ele40_WPTight_Gsf() { return nt.HLT_Ele40_WPTight_Gsf(); }
    const bool &HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50() { return nt.HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50(); }
    const bool &HLT_Ele45_WPLoose_Gsf() { return nt.HLT_Ele45_WPLoose_Gsf(); }
    const bool &HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded() { return nt.HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded(); }
    const bool &HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40() { return nt.HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40(); }
    const bool &HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35() { return nt.HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35(); }
    const bool &HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140() { return nt.HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140(); }
    const bool &HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165() { return nt.HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165(); }
    const bool &HLT_Ele50_IsoVVVL_PFHT400() { return nt.HLT_Ele50_IsoVVVL_PFHT400(); }
    const bool &HLT_Ele50_IsoVVVL_PFHT450() { return nt.HLT_Ele50_IsoVVVL_PFHT450(); }
    const bool &HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30() { return nt.HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30(); }
    const bool &HLT_Ele8_CaloIdM_TrackIdM_PFJet30() { return nt.HLT_Ele8_CaloIdM_TrackIdM_PFJet30(); }
    const bool &HLT_EphemeralPhysics() { return nt.HLT_EphemeralPhysics(); }
    const bool &HLT_EphemeralZeroBias() { return nt.HLT_EphemeralZeroBias(); }
    const bool &HLT_ExpressMuons() { return nt.HLT_ExpressMuons(); }
    const bool &HLT_FullTrack_Multiplicity100() { return nt.HLT_FullTrack_Multiplicity100(); }
    const bool &HLT_FullTrack_Multiplicity105() { return nt.HLT_FullTrack_Multiplicity105(); }
    const bool &HLT_FullTrack_Multiplicity130() { return nt.HLT_FullTrack_Multiplicity130(); }
    const bool &HLT_FullTrack_Multiplicity135() { return nt.HLT_FullTrack_Multiplicity135(); }
    const bool &HLT_FullTrack_Multiplicity155() { return nt.HLT_FullTrack_Multiplicity155(); }
    const bool &HLT_FullTrack_Multiplicity85() { return nt.HLT_FullTrack_Multiplicity85(); }
    const bool &HLT_FullTracks_Multiplicity100() { return nt.HLT_FullTracks_Multiplicity100(); }
    const bool &HLT_FullTracks_Multiplicity130() { return nt.HLT_FullTracks_Multiplicity130(); }
    const bool &HLT_FullTracks_Multiplicity150() { return nt.HLT_FullTracks_Multiplicity150(); }
    const bool &HLT_FullTracks_Multiplicity80() { return nt.HLT_FullTracks_Multiplicity80(); }
    const bool &HLT_GlobalRunHPDNoise() { return nt.HLT_GlobalRunHPDNoise(); }
    const bool &HLT_HISinglePhoton10() { return nt.HLT_HISinglePhoton10(); }
    const bool &HLT_HISinglePhoton10_Eta3p1ForPPRef() { return nt.HLT_HISinglePhoton10_Eta3p1ForPPRef(); }
    const bool &HLT_HISinglePhoton15() { return nt.HLT_HISinglePhoton15(); }
    const bool &HLT_HISinglePhoton20() { return nt.HLT_HISinglePhoton20(); }
    const bool &HLT_HISinglePhoton20_Eta3p1ForPPRef() { return nt.HLT_HISinglePhoton20_Eta3p1ForPPRef(); }
    const bool &HLT_HISinglePhoton30_Eta3p1ForPPRef() { return nt.HLT_HISinglePhoton30_Eta3p1ForPPRef(); }
    const bool &HLT_HISinglePhoton40() { return nt.HLT_HISinglePhoton40(); }
    const bool &HLT_HISinglePhoton40_Eta3p1ForPPRef() { return nt.HLT_HISinglePhoton40_Eta3p1ForPPRef(); }
    const bool &HLT_HISinglePhoton50_Eta3p1ForPPRef() { return nt.HLT_HISinglePhoton50_Eta3p1ForPPRef(); }
    const bool &HLT_HISinglePhoton60() { return nt.HLT_HISinglePhoton60(); }
    const bool &HLT_HISinglePhoton60_Eta3p1ForPPRef() { return nt.HLT_HISinglePhoton60_Eta3p1ForPPRef(); }
    const bool &HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack() { return nt.HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack(); }
    const bool &HLT_HT200() { return nt.HLT_HT200(); }
    const bool &HLT_HT2000() { return nt.HLT_HT2000(); }
    const bool &HLT_HT200_DisplacedDijet40_DisplacedTrack() { return nt.HLT_HT200_DisplacedDijet40_DisplacedTrack(); }
    const bool &HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless() { return nt.HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless(); }
    const bool &HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive() { return nt.HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive(); }
    const bool &HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless() { return nt.HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless(); }
    const bool &HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive() { return nt.HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive(); }
    const bool &HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5() { return nt.HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5(); }
    const bool &HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5() { return nt.HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5(); }
    const bool &HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack() { return nt.HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack(); }
    const bool &HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5() { return nt.HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5(); }
    const bool &HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack() { return nt.HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack(); }
    const bool &HLT_HT2500() { return nt.HLT_HT2500(); }
    const bool &HLT_HT250_CaloMET70() { return nt.HLT_HT250_CaloMET70(); }
    const bool &HLT_HT250_DisplacedDijet40_DisplacedTrack() { return nt.HLT_HT250_DisplacedDijet40_DisplacedTrack(); }
    const bool &HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack() { return nt.HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack(); }
    const bool &HLT_HT275() { return nt.HLT_HT275(); }
    const bool &HLT_HT300PT30_QuadJet_75_60_45_40() { return nt.HLT_HT300PT30_QuadJet_75_60_45_40(); }
    const bool &HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07() { return nt.HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07(); }
    const bool &HLT_HT300_Beamspot() { return nt.HLT_HT300_Beamspot(); }
    const bool &HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive() { return nt.HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive(); }
    const bool &HLT_HT325() { return nt.HLT_HT325(); }
    const bool &HLT_HT350_DisplacedDijet40_DisplacedTrack() { return nt.HLT_HT350_DisplacedDijet40_DisplacedTrack(); }
    const bool &HLT_HT350_DisplacedDijet40_Inclusive() { return nt.HLT_HT350_DisplacedDijet40_Inclusive(); }
    const bool &HLT_HT350_DisplacedDijet80_DisplacedTrack() { return nt.HLT_HT350_DisplacedDijet80_DisplacedTrack(); }
    const bool &HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack() { return nt.HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack(); }
    const bool &HLT_HT400_DisplacedDijet40_DisplacedTrack() { return nt.HLT_HT400_DisplacedDijet40_DisplacedTrack(); }
    const bool &HLT_HT400_DisplacedDijet40_Inclusive() { return nt.HLT_HT400_DisplacedDijet40_Inclusive(); }
    const bool &HLT_HT410to430() { return nt.HLT_HT410to430(); }
    const bool &HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive() { return nt.HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive(); }
    const bool &HLT_HT425() { return nt.HLT_HT425(); }
    const bool &HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive() { return nt.HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive(); }
    const bool &HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless() { return nt.HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless(); }
    const bool &HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive() { return nt.HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive(); }
    const bool &HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive() { return nt.HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive(); }
    const bool &HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless() { return nt.HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless(); }
    const bool &HLT_HT430_DelayedJet40_SingleDelay1nsInclusive() { return nt.HLT_HT430_DelayedJet40_SingleDelay1nsInclusive(); }
    const bool &HLT_HT430_DelayedJet40_SingleDelay1nsTrackless() { return nt.HLT_HT430_DelayedJet40_SingleDelay1nsTrackless(); }
    const bool &HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive() { return nt.HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive(); }
    const bool &HLT_HT430_DelayedJet40_SingleDelay2nsInclusive() { return nt.HLT_HT430_DelayedJet40_SingleDelay2nsInclusive(); }
    const bool &HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5() { return nt.HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5(); }
    const bool &HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5() { return nt.HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5(); }
    const bool &HLT_HT430_DisplacedDijet40_DisplacedTrack() { return nt.HLT_HT430_DisplacedDijet40_DisplacedTrack(); }
    const bool &HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5() { return nt.HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5(); }
    const bool &HLT_HT430_DisplacedDijet60_DisplacedTrack() { return nt.HLT_HT430_DisplacedDijet60_DisplacedTrack(); }
    const bool &HLT_HT430_DisplacedDijet80_DisplacedTrack() { return nt.HLT_HT430_DisplacedDijet80_DisplacedTrack(); }
    const bool &HLT_HT430to450() { return nt.HLT_HT430to450(); }
    const bool &HLT_HT450_Beamspot() { return nt.HLT_HT450_Beamspot(); }
    const bool &HLT_HT450to470() { return nt.HLT_HT450to470(); }
    const bool &HLT_HT470to500() { return nt.HLT_HT470to500(); }
    const bool &HLT_HT500_DisplacedDijet40_DisplacedTrack() { return nt.HLT_HT500_DisplacedDijet40_DisplacedTrack(); }
    const bool &HLT_HT500_DisplacedDijet40_Inclusive() { return nt.HLT_HT500_DisplacedDijet40_Inclusive(); }
    const bool &HLT_HT500to550() { return nt.HLT_HT500to550(); }
    const bool &HLT_HT550_DisplacedDijet40_Inclusive() { return nt.HLT_HT550_DisplacedDijet40_Inclusive(); }
    const bool &HLT_HT550_DisplacedDijet60_Inclusive() { return nt.HLT_HT550_DisplacedDijet60_Inclusive(); }
    const bool &HLT_HT550_DisplacedDijet80_Inclusive() { return nt.HLT_HT550_DisplacedDijet80_Inclusive(); }
    const bool &HLT_HT550to650() { return nt.HLT_HT550to650(); }
    const bool &HLT_HT575() { return nt.HLT_HT575(); }
    const bool &HLT_HT650() { return nt.HLT_HT650(); }
    const bool &HLT_HT650_DisplacedDijet60_Inclusive() { return nt.HLT_HT650_DisplacedDijet60_Inclusive(); }
    const bool &HLT_HT650_DisplacedDijet80_Inclusive() { return nt.HLT_HT650_DisplacedDijet80_Inclusive(); }
    const bool &HLT_HT750_DisplacedDijet80_Inclusive() { return nt.HLT_HT750_DisplacedDijet80_Inclusive(); }
    const bool &HLT_HcalCalibration() { return nt.HLT_HcalCalibration(); }
    const bool &HLT_HcalIsolatedbunch() { return nt.HLT_HcalIsolatedbunch(); }
    const bool &HLT_HcalNZS() { return nt.HLT_HcalNZS(); }
    const bool &HLT_HcalPhiSym() { return nt.HLT_HcalPhiSym(); }
    const bool &HLT_HighPtTkMu100() { return nt.HLT_HighPtTkMu100(); }
    const bool &HLT_IsoMu16_eta2p1_MET30() { return nt.HLT_IsoMu16_eta2p1_MET30(); }
    const bool &HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1() { return nt.HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1(); }
    const bool &HLT_IsoMu17_eta2p1() { return nt.HLT_IsoMu17_eta2p1(); }
    const bool &HLT_IsoMu17_eta2p1_LooseIsoPFTau20() { return nt.HLT_IsoMu17_eta2p1_LooseIsoPFTau20(); }
    const bool &HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1() { return nt.HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1(); }
    const bool &HLT_IsoMu18() { return nt.HLT_IsoMu18(); }
    const bool &HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20() { return nt.HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20(); }
    const bool &HLT_IsoMu19_eta2p1_LooseIsoPFTau20() { return nt.HLT_IsoMu19_eta2p1_LooseIsoPFTau20(); }
    const bool &HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1() { return nt.HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1(); }
    const bool &HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg() { return nt.HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg(); }
    const bool &HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg() { return nt.HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg(); }
    const bool &HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg() { return nt.HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg(); }
    const bool &HLT_IsoMu20() { return nt.HLT_IsoMu20(); }
    const bool &HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1() { return nt.HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1(); }
    const bool &HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1() { return nt.HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1(); }
    const bool &HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1() { return nt.HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1(); }
    const bool &HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1() { return nt.HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1(); }
    const bool &HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1() { return nt.HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1(); }
    const bool &HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1() { return nt.HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1(); }
    const bool &HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1() { return nt.HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1(); }
    const bool &HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1() { return nt.HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1(); }
    const bool &HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1() { return nt.HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1(); }
    const bool &HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1() { return nt.HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1(); }
    const bool &HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1() { return nt.HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1(); }
    const bool &HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1() { return nt.HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1(); }
    const bool &HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1() { return nt.HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1(); }
    const bool &HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1() { return nt.HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1(); }
    const bool &HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1() { return nt.HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1(); }
    const bool &HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg() { return nt.HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg(); }
    const bool &HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg() { return nt.HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg(); }
    const bool &HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg() { return nt.HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg(); }
    const bool &HLT_IsoMu22() { return nt.HLT_IsoMu22(); }
    const bool &HLT_IsoMu22_eta2p1() { return nt.HLT_IsoMu22_eta2p1(); }
    const bool &HLT_IsoMu24() { return nt.HLT_IsoMu24(); }
    const bool &HLT_IsoMu24_TwoProngs35() { return nt.HLT_IsoMu24_TwoProngs35(); }
    const bool &HLT_IsoMu24_eta2p1() { return nt.HLT_IsoMu24_eta2p1(); }
    const bool &HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1() { return nt.HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1(); }
    const bool &HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1() { return nt.HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1(); }
    const bool &HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1() { return nt.HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1() { return nt.HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1() { return nt.HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1(); }
    const bool &HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1() { return nt.HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1() { return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1(); }
    const bool &HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1() { return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1(); }
    const bool &HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1() { return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1() { return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1() { return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1() { return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr() { return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr(); }
    const bool &HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1() { return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1() { return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1() { return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1() { return nt.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1(); }
    const bool &HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1() { return nt.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1() { return nt.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1() { return nt.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1() { return nt.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1() { return nt.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1() { return nt.HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1(); }
    const bool &HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1() { return nt.HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1(); }
    const bool &HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1() { return nt.HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1() { return nt.HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1() { return nt.HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1() { return nt.HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1() { return nt.HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1(); }
    const bool &HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1() { return nt.HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1(); }
    const bool &HLT_IsoMu27() { return nt.HLT_IsoMu27(); }
    const bool &HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1() { return nt.HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1(); }
    const bool &HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1() { return nt.HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1(); }
    const bool &HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1() { return nt.HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1(); }
    const bool &HLT_IsoMu27_MET90() { return nt.HLT_IsoMu27_MET90(); }
    const bool &HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1() { return nt.HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1(); }
    const bool &HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1() { return nt.HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1(); }
    const bool &HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1() { return nt.HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1(); }
    const bool &HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1() { return nt.HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1(); }
    const bool &HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1() { return nt.HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1(); }
    const bool &HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1() { return nt.HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1(); }
    const bool &HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1() { return nt.HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1(); }
    const bool &HLT_IsoMu30() { return nt.HLT_IsoMu30(); }
    const bool &HLT_IsoMu50_AK8PFJet230_SoftDropMass40() { return nt.HLT_IsoMu50_AK8PFJet230_SoftDropMass40(); }
    const bool &HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35() { return nt.HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35(); }
    const bool &HLT_IsoTkMu18() { return nt.HLT_IsoTkMu18(); }
    const bool &HLT_IsoTkMu20() { return nt.HLT_IsoTkMu20(); }
    const bool &HLT_IsoTkMu22() { return nt.HLT_IsoTkMu22(); }
    const bool &HLT_IsoTkMu22_eta2p1() { return nt.HLT_IsoTkMu22_eta2p1(); }
    const bool &HLT_IsoTkMu24() { return nt.HLT_IsoTkMu24(); }
    const bool &HLT_IsoTkMu24_eta2p1() { return nt.HLT_IsoTkMu24_eta2p1(); }
    const bool &HLT_IsoTkMu27() { return nt.HLT_IsoTkMu27(); }
    const bool &HLT_IsoTrackHB() { return nt.HLT_IsoTrackHB(); }
    const bool &HLT_IsoTrackHE() { return nt.HLT_IsoTrackHE(); }
    const bool &HLT_JetE30_NoBPTX() { return nt.HLT_JetE30_NoBPTX(); }
    const bool &HLT_JetE30_NoBPTX3BX() { return nt.HLT_JetE30_NoBPTX3BX(); }
    const bool &HLT_JetE50_NoBPTX3BX() { return nt.HLT_JetE50_NoBPTX3BX(); }
    const bool &HLT_JetE70_NoBPTX3BX() { return nt.HLT_JetE70_NoBPTX3BX(); }
    const bool &HLT_L1BeamGasMinus() { return nt.HLT_L1BeamGasMinus(); }
    const bool &HLT_L1BeamGasPlus() { return nt.HLT_L1BeamGasPlus(); }
    const bool &HLT_L1BptxMinus() { return nt.HLT_L1BptxMinus(); }
    const bool &HLT_L1BptxPlus() { return nt.HLT_L1BptxPlus(); }
    const bool &HLT_L1BptxXOR() { return nt.HLT_L1BptxXOR(); }
    const bool &HLT_L1CSCShower_DTCluster50() { return nt.HLT_L1CSCShower_DTCluster50(); }
    const bool &HLT_L1CSCShower_DTCluster75() { return nt.HLT_L1CSCShower_DTCluster75(); }
    const bool &HLT_L1ETMHadSeeds() { return nt.HLT_L1ETMHadSeeds(); }
    const bool &HLT_L1FatEvents() { return nt.HLT_L1FatEvents(); }
    const bool &HLT_L1FatEvents_part0() { return nt.HLT_L1FatEvents_part0(); }
    const bool &HLT_L1FatEvents_part1() { return nt.HLT_L1FatEvents_part1(); }
    const bool &HLT_L1FatEvents_part2() { return nt.HLT_L1FatEvents_part2(); }
    const bool &HLT_L1FatEvents_part3() { return nt.HLT_L1FatEvents_part3(); }
    const bool &HLT_L1MET_DTCluster50() { return nt.HLT_L1MET_DTCluster50(); }
    const bool &HLT_L1MET_DTClusterNoMB1S50() { return nt.HLT_L1MET_DTClusterNoMB1S50(); }
    const bool &HLT_L1MinimumBiasHF0OR() { return nt.HLT_L1MinimumBiasHF0OR(); }
    const bool &HLT_L1MinimumBiasHF_AND() { return nt.HLT_L1MinimumBiasHF_AND(); }
    const bool &HLT_L1MinimumBiasHF_OR() { return nt.HLT_L1MinimumBiasHF_OR(); }
    const bool &HLT_L1MinimumBiasHF_OR_part0() { return nt.HLT_L1MinimumBiasHF_OR_part0(); }
    const bool &HLT_L1MinimumBiasHF_OR_part1() { return nt.HLT_L1MinimumBiasHF_OR_part1(); }
    const bool &HLT_L1MinimumBiasHF_OR_part2() { return nt.HLT_L1MinimumBiasHF_OR_part2(); }
    const bool &HLT_L1MinimumBiasHF_OR_part3() { return nt.HLT_L1MinimumBiasHF_OR_part3(); }
    const bool &HLT_L1MinimumBiasHF_OR_part4() { return nt.HLT_L1MinimumBiasHF_OR_part4(); }
    const bool &HLT_L1MinimumBiasHF_OR_part5() { return nt.HLT_L1MinimumBiasHF_OR_part5(); }
    const bool &HLT_L1MinimumBiasHF_OR_part6() { return nt.HLT_L1MinimumBiasHF_OR_part6(); }
    const bool &HLT_L1MinimumBiasHF_OR_part7() { return nt.HLT_L1MinimumBiasHF_OR_part7(); }
    const bool &HLT_L1MinimumBiasHF_OR_part8() { return nt.HLT_L1MinimumBiasHF_OR_part8(); }
    const bool &HLT_L1MinimumBiasHF_OR_part9() { return nt.HLT_L1MinimumBiasHF_OR_part9(); }
    const bool &HLT_L1Mu6HT240() { return nt.HLT_L1Mu6HT240(); }
    const bool &HLT_L1NotBptxOR() { return nt.HLT_L1NotBptxOR(); }
    const bool &HLT_L1SingleMu16() { return nt.HLT_L1SingleMu16(); }
    const bool &HLT_L1SingleMu18() { return nt.HLT_L1SingleMu18(); }
    const bool &HLT_L1SingleMu25() { return nt.HLT_L1SingleMu25(); }
    const bool &HLT_L1SingleMuCosmics() { return nt.HLT_L1SingleMuCosmics(); }
    const bool &HLT_L1SingleMuOpen() { return nt.HLT_L1SingleMuOpen(); }
    const bool &HLT_L1SingleMuOpen_DT() { return nt.HLT_L1SingleMuOpen_DT(); }
    const bool &HLT_L1UnpairedBunchBptxMinus() { return nt.HLT_L1UnpairedBunchBptxMinus(); }
    const bool &HLT_L1UnpairedBunchBptxPlus() { return nt.HLT_L1UnpairedBunchBptxPlus(); }
    const bool &HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142() { return nt.HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142(); }
    const bool &HLT_L1_DoubleJet30_Mass_Min400_Mu10() { return nt.HLT_L1_DoubleJet30_Mass_Min400_Mu10(); }
    const bool &HLT_L1_TripleJet_VBF() { return nt.HLT_L1_TripleJet_VBF(); }
    const bool &HLT_L2DoubleMu23_NoVertex() { return nt.HLT_L2DoubleMu23_NoVertex(); }
    const bool &HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10() { return nt.HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10(); }
    const bool &HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10() { return nt.HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10(); }
    const bool &HLT_L2Mu10() { return nt.HLT_L2Mu10(); }
    const bool &HLT_L2Mu10NoVtx_2Cha() { return nt.HLT_L2Mu10NoVtx_2Cha(); }
    const bool &HLT_L2Mu10NoVtx_2Cha_CosmicSeed() { return nt.HLT_L2Mu10NoVtx_2Cha_CosmicSeed(); }
    const bool &HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm() { return nt.HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm(); }
    const bool &HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm() { return nt.HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm(); }
    const bool &HLT_L2Mu10_NoVertex_NoBPTX() { return nt.HLT_L2Mu10_NoVertex_NoBPTX(); }
    const bool &HLT_L2Mu10_NoVertex_NoBPTX3BX() { return nt.HLT_L2Mu10_NoVertex_NoBPTX3BX(); }
    const bool &HLT_L2Mu23NoVtx_2Cha() { return nt.HLT_L2Mu23NoVtx_2Cha(); }
    const bool &HLT_L2Mu23NoVtx_2Cha_CosmicSeed() { return nt.HLT_L2Mu23NoVtx_2Cha_CosmicSeed(); }
    const bool &HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX() { return nt.HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX(); }
    const bool &HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX() { return nt.HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX(); }
    const bool &HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX() { return nt.HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX(); }
    const bool &HLT_L2Mu50() { return nt.HLT_L2Mu50(); }
    const bool &HLT_L3Mu10NoVtx() { return nt.HLT_L3Mu10NoVtx(); }
    const bool &HLT_L3Mu10NoVtx_DxyMin0p01cm() { return nt.HLT_L3Mu10NoVtx_DxyMin0p01cm(); }
    const bool &HLT_L3dTksMu10_NoVtx_DxyMin0p01cm() { return nt.HLT_L3dTksMu10_NoVtx_DxyMin0p01cm(); }
    const bool &HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1() { return nt.HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1(); }
    const bool &HLT_LooseIsoPFTau50_Trk30_eta2p1() { return nt.HLT_LooseIsoPFTau50_Trk30_eta2p1(); }
    const bool &HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110() { return nt.HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110(); }
    const bool &HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120() { return nt.HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120(); }
    const bool &HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80() { return nt.HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80(); }
    const bool &HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90() { return nt.HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90(); }
    const bool &HLT_MET100() { return nt.HLT_MET100(); }
    const bool &HLT_MET105_IsoTrk50() { return nt.HLT_MET105_IsoTrk50(); }
    const bool &HLT_MET120_IsoTrk50() { return nt.HLT_MET120_IsoTrk50(); }
    const bool &HLT_MET150() { return nt.HLT_MET150(); }
    const bool &HLT_MET200() { return nt.HLT_MET200(); }
    const bool &HLT_MET250() { return nt.HLT_MET250(); }
    const bool &HLT_MET300() { return nt.HLT_MET300(); }
    const bool &HLT_MET600() { return nt.HLT_MET600(); }
    const bool &HLT_MET60_IsoTrk35_Loose() { return nt.HLT_MET60_IsoTrk35_Loose(); }
    const bool &HLT_MET700() { return nt.HLT_MET700(); }
    const bool &HLT_MET75_IsoTrk50() { return nt.HLT_MET75_IsoTrk50(); }
    const bool &HLT_MET90_IsoTrk50() { return nt.HLT_MET90_IsoTrk50(); }
    const bool &HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr() { return nt.HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr(); }
    const bool &HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1() { return nt.HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1(); }
    const bool &HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr() { return nt.HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr(); }
    const bool &HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1() { return nt.HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1(); }
    const bool &HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1() { return nt.HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1(); }
    const bool &HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr() { return nt.HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr(); }
    const bool &HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100() { return nt.HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100(); }
    const bool &HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110() { return nt.HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110(); }
    const bool &HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120() { return nt.HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120(); }
    const bool &HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130() { return nt.HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130(); }
    const bool &HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140() { return nt.HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140(); }
    const bool &HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90() { return nt.HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90(); }
    const bool &HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight() { return nt.HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight(); }
    const bool &HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight() { return nt.HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight(); }
    const bool &HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight() { return nt.HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight(); }
    const bool &HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight() { return nt.HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight(); }
    const bool &HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight() { return nt.HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight(); }
    const bool &HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight() { return nt.HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight(); }
    const bool &HLT_Mu0_L1DoubleMu() { return nt.HLT_Mu0_L1DoubleMu(); }
    const bool &HLT_Mu10_CentralPFJet30_BTagCSV_p13() { return nt.HLT_Mu10_CentralPFJet30_BTagCSV_p13(); }
    const bool &HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60() { return nt.HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60(); }
    const bool &HLT_Mu10p5_IP3p5_part0() { return nt.HLT_Mu10p5_IP3p5_part0(); }
    const bool &HLT_Mu10p5_IP3p5_part1() { return nt.HLT_Mu10p5_IP3p5_part1(); }
    const bool &HLT_Mu10p5_IP3p5_part2() { return nt.HLT_Mu10p5_IP3p5_part2(); }
    const bool &HLT_Mu10p5_IP3p5_part3() { return nt.HLT_Mu10p5_IP3p5_part3(); }
    const bool &HLT_Mu10p5_IP3p5_part4() { return nt.HLT_Mu10p5_IP3p5_part4(); }
    const bool &HLT_Mu10p5_IP3p5_part5() { return nt.HLT_Mu10p5_IP3p5_part5(); }
    const bool &HLT_Mu12() { return nt.HLT_Mu12(); }
    const bool &HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33() { return nt.HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33(); }
    const bool &HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79() { return nt.HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79(); }
    const bool &HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71() { return nt.HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71(); }
    const bool &HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71() { return nt.HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71(); }
    const bool &HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71() { return nt.HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71(); }
    const bool &HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33() { return nt.HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33(); }
    const bool &HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79() { return nt.HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79(); }
    const bool &HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71() { return nt.HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71(); }
    const bool &HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71() { return nt.HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71(); }
    const bool &HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71() { return nt.HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71(); }
    const bool &HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33() { return nt.HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33(); }
    const bool &HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79() { return nt.HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79(); }
    const bool &HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71() { return nt.HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71(); }
    const bool &HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71() { return nt.HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71(); }
    const bool &HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71() { return nt.HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71(); }
    const bool &HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33() { return nt.HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33(); }
    const bool &HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79() { return nt.HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79(); }
    const bool &HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71() { return nt.HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71(); }
    const bool &HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71() { return nt.HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71(); }
    const bool &HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71() { return nt.HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71(); }
    const bool &HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33() { return nt.HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33(); }
    const bool &HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79() { return nt.HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79(); }
    const bool &HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71() { return nt.HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71(); }
    const bool &HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71() { return nt.HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71(); }
    const bool &HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71() { return nt.HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71(); }
    const bool &HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33() { return nt.HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33(); }
    const bool &HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79() { return nt.HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79(); }
    const bool &HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71() { return nt.HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71(); }
    const bool &HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71() { return nt.HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71(); }
    const bool &HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71() { return nt.HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71(); }
    const bool &HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33() { return nt.HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33(); }
    const bool &HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79() { return nt.HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79(); }
    const bool &HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71() { return nt.HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71(); }
    const bool &HLT_Mu12_DoublePhoton20() { return nt.HLT_Mu12_DoublePhoton20(); }
    const bool &HLT_Mu12_IP6() { return nt.HLT_Mu12_IP6(); }
    const bool &HLT_Mu12_IP6_ToCSCS() { return nt.HLT_Mu12_IP6_ToCSCS(); }
    const bool &HLT_Mu12_IP6_part0() { return nt.HLT_Mu12_IP6_part0(); }
    const bool &HLT_Mu12_IP6_part1() { return nt.HLT_Mu12_IP6_part1(); }
    const bool &HLT_Mu12_IP6_part2() { return nt.HLT_Mu12_IP6_part2(); }
    const bool &HLT_Mu12_IP6_part3() { return nt.HLT_Mu12_IP6_part3(); }
    const bool &HLT_Mu12_IP6_part4() { return nt.HLT_Mu12_IP6_part4(); }
    const bool &HLT_Mu12_Photon25_CaloIdL() { return nt.HLT_Mu12_Photon25_CaloIdL(); }
    const bool &HLT_Mu12_Photon25_CaloIdL_L1ISO() { return nt.HLT_Mu12_Photon25_CaloIdL_L1ISO(); }
    const bool &HLT_Mu12_Photon25_CaloIdL_L1OR() { return nt.HLT_Mu12_Photon25_CaloIdL_L1OR(); }
    const bool &HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL() { return nt.HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL(); }
    const bool &HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ() { return nt.HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ(); }
    const bool &HLT_Mu12eta2p3() { return nt.HLT_Mu12eta2p3(); }
    const bool &HLT_Mu12eta2p3_PFJet40() { return nt.HLT_Mu12eta2p3_PFJet40(); }
    const bool &HLT_Mu14er_PFMET100() { return nt.HLT_Mu14er_PFMET100(); }
    const bool &HLT_Mu15() { return nt.HLT_Mu15(); }
    const bool &HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400() { return nt.HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400(); }
    const bool &HLT_Mu15_IsoVVVL_PFHT350() { return nt.HLT_Mu15_IsoVVVL_PFHT350(); }
    const bool &HLT_Mu15_IsoVVVL_PFHT350_PFMET50() { return nt.HLT_Mu15_IsoVVVL_PFHT350_PFMET50(); }
    const bool &HLT_Mu15_IsoVVVL_PFHT400() { return nt.HLT_Mu15_IsoVVVL_PFHT400(); }
    const bool &HLT_Mu15_IsoVVVL_PFHT400_PFMET50() { return nt.HLT_Mu15_IsoVVVL_PFHT400_PFMET50(); }
    const bool &HLT_Mu15_IsoVVVL_PFHT450() { return nt.HLT_Mu15_IsoVVVL_PFHT450(); }
    const bool &HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5() { return nt.HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5(); }
    const bool &HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5() { return nt.HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5(); }
    const bool &HLT_Mu15_IsoVVVL_PFHT450_PFMET50() { return nt.HLT_Mu15_IsoVVVL_PFHT450_PFMET50(); }
    const bool &HLT_Mu15_IsoVVVL_PFHT600() { return nt.HLT_Mu15_IsoVVVL_PFHT600(); }
    const bool &HLT_Mu16_TkMu0_dEta18_Onia() { return nt.HLT_Mu16_TkMu0_dEta18_Onia(); }
    const bool &HLT_Mu16_TkMu0_dEta18_Phi() { return nt.HLT_Mu16_TkMu0_dEta18_Phi(); }
    const bool &HLT_Mu16_eta2p1_MET30() { return nt.HLT_Mu16_eta2p1_MET30(); }
    const bool &HLT_Mu17() { return nt.HLT_Mu17(); }
    const bool &HLT_Mu17_Mu8() { return nt.HLT_Mu17_Mu8(); }
    const bool &HLT_Mu17_Mu8_DZ() { return nt.HLT_Mu17_Mu8_DZ(); }
    const bool &HLT_Mu17_Mu8_SameSign() { return nt.HLT_Mu17_Mu8_SameSign(); }
    const bool &HLT_Mu17_Mu8_SameSign_DZ() { return nt.HLT_Mu17_Mu8_SameSign_DZ(); }
    const bool &HLT_Mu17_Photon22_CaloIdL_L1ISO() { return nt.HLT_Mu17_Photon22_CaloIdL_L1ISO(); }
    const bool &HLT_Mu17_Photon30_CaloIdL_L1ISO() { return nt.HLT_Mu17_Photon30_CaloIdL_L1ISO(); }
    const bool &HLT_Mu17_Photon30_IsoCaloId() { return nt.HLT_Mu17_Photon30_IsoCaloId(); }
    const bool &HLT_Mu17_Photon35_CaloIdL_L1ISO() { return nt.HLT_Mu17_Photon35_CaloIdL_L1ISO(); }
    const bool &HLT_Mu17_TkMu8_DZ() { return nt.HLT_Mu17_TkMu8_DZ(); }
    const bool &HLT_Mu17_TrkIsoVVL() { return nt.HLT_Mu17_TrkIsoVVL(); }
    const bool &HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL() { return nt.HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL(); }
    const bool &HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL() { return nt.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL(); }
    const bool &HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ() { return nt.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ(); }
    const bool &HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8() { return nt.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8(); }
    const bool &HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8() { return nt.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8(); }
    const bool &HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL() { return nt.HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL(); }
    const bool &HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ() { return nt.HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ(); }
    const bool &HLT_Mu18_Mu9() { return nt.HLT_Mu18_Mu9(); }
    const bool &HLT_Mu18_Mu9_DZ() { return nt.HLT_Mu18_Mu9_DZ(); }
    const bool &HLT_Mu18_Mu9_SameSign() { return nt.HLT_Mu18_Mu9_SameSign(); }
    const bool &HLT_Mu18_Mu9_SameSign_DZ() { return nt.HLT_Mu18_Mu9_SameSign_DZ(); }
    const bool &HLT_Mu19() { return nt.HLT_Mu19(); }
    const bool &HLT_Mu19_TrkIsoVVL() { return nt.HLT_Mu19_TrkIsoVVL(); }
    const bool &HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL() { return nt.HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL(); }
    const bool &HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ() { return nt.HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ(); }
    const bool &HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8() { return nt.HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8(); }
    const bool &HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8() { return nt.HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8(); }
    const bool &HLT_Mu20() { return nt.HLT_Mu20(); }
    const bool &HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId() { return nt.HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId(); }
    const bool &HLT_Mu20_Mu10() { return nt.HLT_Mu20_Mu10(); }
    const bool &HLT_Mu20_Mu10_DZ() { return nt.HLT_Mu20_Mu10_DZ(); }
    const bool &HLT_Mu20_Mu10_SameSign() { return nt.HLT_Mu20_Mu10_SameSign(); }
    const bool &HLT_Mu20_Mu10_SameSign_DZ() { return nt.HLT_Mu20_Mu10_SameSign_DZ(); }
    const bool &HLT_Mu20_TkMu0_Phi() { return nt.HLT_Mu20_TkMu0_Phi(); }
    const bool &HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL() { return nt.HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL(); }
    const bool &HLT_Mu23_Mu12() { return nt.HLT_Mu23_Mu12(); }
    const bool &HLT_Mu23_Mu12_DZ() { return nt.HLT_Mu23_Mu12_DZ(); }
    const bool &HLT_Mu23_Mu12_SameSign() { return nt.HLT_Mu23_Mu12_SameSign(); }
    const bool &HLT_Mu23_Mu12_SameSign_DZ() { return nt.HLT_Mu23_Mu12_SameSign_DZ(); }
    const bool &HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL() { return nt.HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL(); }
    const bool &HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ() { return nt.HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ(); }
    const bool &HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL() { return nt.HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL(); }
    const bool &HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ() { return nt.HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ(); }
    const bool &HLT_Mu24_eta2p1() { return nt.HLT_Mu24_eta2p1(); }
    const bool &HLT_Mu25_TkMu0_Onia() { return nt.HLT_Mu25_TkMu0_Onia(); }
    const bool &HLT_Mu25_TkMu0_Phi() { return nt.HLT_Mu25_TkMu0_Phi(); }
    const bool &HLT_Mu25_TkMu0_dEta18_Onia() { return nt.HLT_Mu25_TkMu0_dEta18_Onia(); }
    const bool &HLT_Mu27() { return nt.HLT_Mu27(); }
    const bool &HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL() { return nt.HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL(); }
    const bool &HLT_Mu27_Ele37_CaloIdL_MW() { return nt.HLT_Mu27_Ele37_CaloIdL_MW(); }
    const bool &HLT_Mu27_TkMu8() { return nt.HLT_Mu27_TkMu8(); }
    const bool &HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL() { return nt.HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL(); }
    const bool &HLT_Mu28NoFiltersNoVtx_CentralCaloJet40() { return nt.HLT_Mu28NoFiltersNoVtx_CentralCaloJet40(); }
    const bool &HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose() { return nt.HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose(); }
    const bool &HLT_Mu300() { return nt.HLT_Mu300(); }
    const bool &HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL() { return nt.HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL(); }
    const bool &HLT_Mu30_TkMu0_Onia() { return nt.HLT_Mu30_TkMu0_Onia(); }
    const bool &HLT_Mu30_TkMu0_Psi() { return nt.HLT_Mu30_TkMu0_Psi(); }
    const bool &HLT_Mu30_TkMu0_Upsilon() { return nt.HLT_Mu30_TkMu0_Upsilon(); }
    const bool &HLT_Mu30_TkMu11() { return nt.HLT_Mu30_TkMu11(); }
    const bool &HLT_Mu30_eta2p1_PFJet150_PFJet50() { return nt.HLT_Mu30_eta2p1_PFJet150_PFJet50(); }
    const bool &HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose() { return nt.HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose(); }
    const bool &HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight() { return nt.HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight(); }
    const bool &HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL() { return nt.HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL(); }
    const bool &HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL() { return nt.HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL(); }
    const bool &HLT_Mu350() { return nt.HLT_Mu350(); }
    const bool &HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL() { return nt.HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL(); }
    const bool &HLT_Mu37_Ele27_CaloIdL_MW() { return nt.HLT_Mu37_Ele27_CaloIdL_MW(); }
    const bool &HLT_Mu37_TkMu27() { return nt.HLT_Mu37_TkMu27(); }
    const bool &HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose() { return nt.HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose(); }
    const bool &HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight() { return nt.HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight(); }
    const bool &HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL() { return nt.HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL(); }
    const bool &HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose() { return nt.HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose(); }
    const bool &HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL() { return nt.HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL(); }
    const bool &HLT_Mu3_L1SingleMu5orSingleMu7() { return nt.HLT_Mu3_L1SingleMu5orSingleMu7(); }
    const bool &HLT_Mu3_PFJet40() { return nt.HLT_Mu3_PFJet40(); }
    const bool &HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight() { return nt.HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight(); }
    const bool &HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight() { return nt.HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight(); }
    const bool &HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight() { return nt.HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight(); }
    const bool &HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight() { return nt.HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight(); }
    const bool &HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight() { return nt.HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight(); }
    const bool &HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight() { return nt.HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight(); }
    const bool &HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight() { return nt.HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight(); }
    const bool &HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight() { return nt.HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight(); }
    const bool &HLT_Mu3er_PFHT140_PFMET125() { return nt.HLT_Mu3er_PFHT140_PFMET125(); }
    const bool &HLT_Mu40_TkMu11() { return nt.HLT_Mu40_TkMu11(); }
    const bool &HLT_Mu40_eta2p1_PFJet200_PFJet50() { return nt.HLT_Mu40_eta2p1_PFJet200_PFJet50(); }
    const bool &HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL() { return nt.HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL(); }
    const bool &HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL() { return nt.HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL(); }
    const bool &HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL() { return nt.HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL(); }
    const bool &HLT_Mu45_eta2p1() { return nt.HLT_Mu45_eta2p1(); }
    const bool &HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL() { return nt.HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL(); }
    const bool &HLT_Mu4_L1DoubleMu() { return nt.HLT_Mu4_L1DoubleMu(); }
    const bool &HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60() { return nt.HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60(); }
    const bool &HLT_Mu50() { return nt.HLT_Mu50(); }
    const bool &HLT_Mu50_IsoVVVL_PFHT400() { return nt.HLT_Mu50_IsoVVVL_PFHT400(); }
    const bool &HLT_Mu50_IsoVVVL_PFHT450() { return nt.HLT_Mu50_IsoVVVL_PFHT450(); }
    const bool &HLT_Mu50_L1SingleMuShower() { return nt.HLT_Mu50_L1SingleMuShower(); }
    const bool &HLT_Mu55() { return nt.HLT_Mu55(); }
    const bool &HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5() { return nt.HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5(); }
    const bool &HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose() { return nt.HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose(); }
    const bool &HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5() { return nt.HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5(); }
    const bool &HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose() { return nt.HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose(); }
    const bool &HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5() { return nt.HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5(); }
    const bool &HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose() { return nt.HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose(); }
    const bool &HLT_Mu6_PFHT200_PFMET100() { return nt.HLT_Mu6_PFHT200_PFMET100(); }
    const bool &HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067() { return nt.HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067(); }
    const bool &HLT_Mu7_IP4_ToCSCS() { return nt.HLT_Mu7_IP4_ToCSCS(); }
    const bool &HLT_Mu7_IP4_part0() { return nt.HLT_Mu7_IP4_part0(); }
    const bool &HLT_Mu7_IP4_part1() { return nt.HLT_Mu7_IP4_part1(); }
    const bool &HLT_Mu7_IP4_part2() { return nt.HLT_Mu7_IP4_part2(); }
    const bool &HLT_Mu7_IP4_part3() { return nt.HLT_Mu7_IP4_part3(); }
    const bool &HLT_Mu7_IP4_part4() { return nt.HLT_Mu7_IP4_part4(); }
    const bool &HLT_Mu7p5_L2Mu2_Jpsi() { return nt.HLT_Mu7p5_L2Mu2_Jpsi(); }
    const bool &HLT_Mu7p5_L2Mu2_Upsilon() { return nt.HLT_Mu7p5_L2Mu2_Upsilon(); }
    const bool &HLT_Mu7p5_Track2_Jpsi() { return nt.HLT_Mu7p5_Track2_Jpsi(); }
    const bool &HLT_Mu7p5_Track2_Upsilon() { return nt.HLT_Mu7p5_Track2_Upsilon(); }
    const bool &HLT_Mu7p5_Track3p5_Jpsi() { return nt.HLT_Mu7p5_Track3p5_Jpsi(); }
    const bool &HLT_Mu7p5_Track3p5_Upsilon() { return nt.HLT_Mu7p5_Track3p5_Upsilon(); }
    const bool &HLT_Mu7p5_Track7_Jpsi() { return nt.HLT_Mu7p5_Track7_Jpsi(); }
    const bool &HLT_Mu7p5_Track7_Upsilon() { return nt.HLT_Mu7p5_Track7_Upsilon(); }
    const bool &HLT_Mu8() { return nt.HLT_Mu8(); }
    const bool &HLT_Mu8_DiEle12_CaloIdL_TrackIdL() { return nt.HLT_Mu8_DiEle12_CaloIdL_TrackIdL(); }
    const bool &HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ() { return nt.HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ(); }
    const bool &HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250() { return nt.HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250(); }
    const bool &HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300() { return nt.HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300(); }
    const bool &HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350() { return nt.HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350(); }
    const bool &HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ() { return nt.HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ(); }
    const bool &HLT_Mu8_IP3_ToCSCS() { return nt.HLT_Mu8_IP3_ToCSCS(); }
    const bool &HLT_Mu8_IP3_part0() { return nt.HLT_Mu8_IP3_part0(); }
    const bool &HLT_Mu8_IP3_part1() { return nt.HLT_Mu8_IP3_part1(); }
    const bool &HLT_Mu8_IP3_part2() { return nt.HLT_Mu8_IP3_part2(); }
    const bool &HLT_Mu8_IP3_part3() { return nt.HLT_Mu8_IP3_part3(); }
    const bool &HLT_Mu8_IP3_part4() { return nt.HLT_Mu8_IP3_part4(); }
    const bool &HLT_Mu8_IP3_part5() { return nt.HLT_Mu8_IP3_part5(); }
    const bool &HLT_Mu8_IP5_ToCSCS() { return nt.HLT_Mu8_IP5_ToCSCS(); }
    const bool &HLT_Mu8_IP5_part0() { return nt.HLT_Mu8_IP5_part0(); }
    const bool &HLT_Mu8_IP5_part1() { return nt.HLT_Mu8_IP5_part1(); }
    const bool &HLT_Mu8_IP5_part2() { return nt.HLT_Mu8_IP5_part2(); }
    const bool &HLT_Mu8_IP5_part3() { return nt.HLT_Mu8_IP5_part3(); }
    const bool &HLT_Mu8_IP5_part4() { return nt.HLT_Mu8_IP5_part4(); }
    const bool &HLT_Mu8_IP6_ToCSCS() { return nt.HLT_Mu8_IP6_ToCSCS(); }
    const bool &HLT_Mu8_IP6_part0() { return nt.HLT_Mu8_IP6_part0(); }
    const bool &HLT_Mu8_IP6_part1() { return nt.HLT_Mu8_IP6_part1(); }
    const bool &HLT_Mu8_IP6_part2() { return nt.HLT_Mu8_IP6_part2(); }
    const bool &HLT_Mu8_IP6_part3() { return nt.HLT_Mu8_IP6_part3(); }
    const bool &HLT_Mu8_IP6_part4() { return nt.HLT_Mu8_IP6_part4(); }
    const bool &HLT_Mu8_TrkIsoVVL() { return nt.HLT_Mu8_TrkIsoVVL(); }
    const bool &HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60() { return nt.HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60(); }
    const bool &HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL() { return nt.HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL(); }
    const bool &HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL() { return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL(); }
    const bool &HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ() { return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ(); }
    const bool &HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30() { return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30(); }
    const bool &HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5() { return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5(); }
    const bool &HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30() { return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30(); }
    const bool &HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65() { return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65(); }
    const bool &HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5() { return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5(); }
    const bool &HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5() { return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5(); }
    const bool &HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30() { return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30(); }
    const bool &HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65() { return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65(); }
    const bool &HLT_Mu8p5_IP3p5_part0() { return nt.HLT_Mu8p5_IP3p5_part0(); }
    const bool &HLT_Mu8p5_IP3p5_part1() { return nt.HLT_Mu8p5_IP3p5_part1(); }
    const bool &HLT_Mu8p5_IP3p5_part2() { return nt.HLT_Mu8p5_IP3p5_part2(); }
    const bool &HLT_Mu8p5_IP3p5_part3() { return nt.HLT_Mu8p5_IP3p5_part3(); }
    const bool &HLT_Mu8p5_IP3p5_part4() { return nt.HLT_Mu8p5_IP3p5_part4(); }
    const bool &HLT_Mu8p5_IP3p5_part5() { return nt.HLT_Mu8p5_IP3p5_part5(); }
    const bool &HLT_Mu9_IP0_part0() { return nt.HLT_Mu9_IP0_part0(); }
    const bool &HLT_Mu9_IP3_part0() { return nt.HLT_Mu9_IP3_part0(); }
    const bool &HLT_Mu9_IP4_ToCSCS() { return nt.HLT_Mu9_IP4_ToCSCS(); }
    const bool &HLT_Mu9_IP4_part0() { return nt.HLT_Mu9_IP4_part0(); }
    const bool &HLT_Mu9_IP4_part1() { return nt.HLT_Mu9_IP4_part1(); }
    const bool &HLT_Mu9_IP4_part2() { return nt.HLT_Mu9_IP4_part2(); }
    const bool &HLT_Mu9_IP4_part3() { return nt.HLT_Mu9_IP4_part3(); }
    const bool &HLT_Mu9_IP4_part4() { return nt.HLT_Mu9_IP4_part4(); }
    const bool &HLT_Mu9_IP5_ToCSCS() { return nt.HLT_Mu9_IP5_ToCSCS(); }
    const bool &HLT_Mu9_IP5_part0() { return nt.HLT_Mu9_IP5_part0(); }
    const bool &HLT_Mu9_IP5_part1() { return nt.HLT_Mu9_IP5_part1(); }
    const bool &HLT_Mu9_IP5_part2() { return nt.HLT_Mu9_IP5_part2(); }
    const bool &HLT_Mu9_IP5_part3() { return nt.HLT_Mu9_IP5_part3(); }
    const bool &HLT_Mu9_IP5_part4() { return nt.HLT_Mu9_IP5_part4(); }
    const bool &HLT_Mu9_IP6_ToCSCS() { return nt.HLT_Mu9_IP6_ToCSCS(); }
    const bool &HLT_Mu9_IP6_part0() { return nt.HLT_Mu9_IP6_part0(); }
    const bool &HLT_Mu9_IP6_part1() { return nt.HLT_Mu9_IP6_part1(); }
    const bool &HLT_Mu9_IP6_part2() { return nt.HLT_Mu9_IP6_part2(); }
    const bool &HLT_Mu9_IP6_part3() { return nt.HLT_Mu9_IP6_part3(); }
    const bool &HLT_Mu9_IP6_part4() { return nt.HLT_Mu9_IP6_part4(); }
    const bool &HLT_Mu9_IP6_part5() { return nt.HLT_Mu9_IP6_part5(); }
    const bool &HLT_OldMu100() { return nt.HLT_OldMu100(); }
    const bool &HLT_OnlineMonitorGroup() { return nt.HLT_OnlineMonitorGroup(); }
    const bool &HLT_PFHT1050() { return nt.HLT_PFHT1050(); }
    const bool &HLT_PFHT125() { return nt.HLT_PFHT125(); }
    const bool &HLT_PFHT180() { return nt.HLT_PFHT180(); }
    const bool &HLT_PFHT200() { return nt.HLT_PFHT200(); }
    const bool &HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57() { return nt.HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57(); }
    const bool &HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63() { return nt.HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63(); }
    const bool &HLT_PFHT200_PFAlphaT0p51() { return nt.HLT_PFHT200_PFAlphaT0p51(); }
    const bool &HLT_PFHT250() { return nt.HLT_PFHT250(); }
    const bool &HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55() { return nt.HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55(); }
    const bool &HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58() { return nt.HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58(); }
    const bool &HLT_PFHT300() { return nt.HLT_PFHT300(); }
    const bool &HLT_PFHT300PT30_QuadPFJet_75_60_45_40() { return nt.HLT_PFHT300PT30_QuadPFJet_75_60_45_40(); }
    const bool &HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0() { return nt.HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0(); }
    const bool &HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53() { return nt.HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53(); }
    const bool &HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54() { return nt.HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54(); }
    const bool &HLT_PFHT300_PFMET100() { return nt.HLT_PFHT300_PFMET100(); }
    const bool &HLT_PFHT300_PFMET110() { return nt.HLT_PFHT300_PFMET110(); }
    const bool &HLT_PFHT330PT30_QuadPFJet_75_60_45_40() { return nt.HLT_PFHT330PT30_QuadPFJet_75_60_45_40(); }
    const bool &HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5() { return nt.HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5(); }
    const bool &HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5() { return nt.HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5(); }
    const bool &HLT_PFHT350() { return nt.HLT_PFHT350(); }
    const bool &HLT_PFHT350MinPFJet15() { return nt.HLT_PFHT350MinPFJet15(); }
    const bool &HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52() { return nt.HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52(); }
    const bool &HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53() { return nt.HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53(); }
    const bool &HLT_PFHT370() { return nt.HLT_PFHT370(); }
    const bool &HLT_PFHT380_SixJet32_DoubleBTagCSV_p075() { return nt.HLT_PFHT380_SixJet32_DoubleBTagCSV_p075(); }
    const bool &HLT_PFHT380_SixPFJet32() { return nt.HLT_PFHT380_SixPFJet32(); }
    const bool &HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2() { return nt.HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2(); }
    const bool &HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2() { return nt.HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2(); }
    const bool &HLT_PFHT400() { return nt.HLT_PFHT400(); }
    const bool &HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51() { return nt.HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51(); }
    const bool &HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52() { return nt.HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52(); }
    const bool &HLT_PFHT400_FivePFJet_100_100_60_30_30() { return nt.HLT_PFHT400_FivePFJet_100_100_60_30_30(); }
    const bool &HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5() { return nt.HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5(); }
    const bool &HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5() { return nt.HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5(); }
    const bool &HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5() { return nt.HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5(); }
    const bool &HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5() { return nt.HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5(); }
    const bool &HLT_PFHT400_SixJet30() { return nt.HLT_PFHT400_SixJet30(); }
    const bool &HLT_PFHT400_SixJet30_DoubleBTagCSV_p056() { return nt.HLT_PFHT400_SixJet30_DoubleBTagCSV_p056(); }
    const bool &HLT_PFHT400_SixPFJet32() { return nt.HLT_PFHT400_SixPFJet32(); }
    const bool &HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94() { return nt.HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94(); }
    const bool &HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94() { return nt.HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94(); }
    const bool &HLT_PFHT430() { return nt.HLT_PFHT430(); }
    const bool &HLT_PFHT430_SixJet40_BTagCSV_p080() { return nt.HLT_PFHT430_SixJet40_BTagCSV_p080(); }
    const bool &HLT_PFHT430_SixPFJet40() { return nt.HLT_PFHT430_SixPFJet40(); }
    const bool &HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5() { return nt.HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5(); }
    const bool &HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5() { return nt.HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5(); }
    const bool &HLT_PFHT450_SixJet40() { return nt.HLT_PFHT450_SixJet40(); }
    const bool &HLT_PFHT450_SixJet40_BTagCSV_p056() { return nt.HLT_PFHT450_SixJet40_BTagCSV_p056(); }
    const bool &HLT_PFHT450_SixPFJet36() { return nt.HLT_PFHT450_SixPFJet36(); }
    const bool &HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59() { return nt.HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59(); }
    const bool &HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59() { return nt.HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59(); }
    const bool &HLT_PFHT475() { return nt.HLT_PFHT475(); }
    const bool &HLT_PFHT500_PFMET100_PFMHT100_IDTight() { return nt.HLT_PFHT500_PFMET100_PFMHT100_IDTight(); }
    const bool &HLT_PFHT500_PFMET110_PFMHT110_IDTight() { return nt.HLT_PFHT500_PFMET110_PFMHT110_IDTight(); }
    const bool &HLT_PFHT510() { return nt.HLT_PFHT510(); }
    const bool &HLT_PFHT550_4JetPt50() { return nt.HLT_PFHT550_4JetPt50(); }
    const bool &HLT_PFHT590() { return nt.HLT_PFHT590(); }
    const bool &HLT_PFHT600() { return nt.HLT_PFHT600(); }
    const bool &HLT_PFHT650() { return nt.HLT_PFHT650(); }
    const bool &HLT_PFHT650_4JetPt50() { return nt.HLT_PFHT650_4JetPt50(); }
    const bool &HLT_PFHT650_WideJetMJJ900DEtaJJ1p5() { return nt.HLT_PFHT650_WideJetMJJ900DEtaJJ1p5(); }
    const bool &HLT_PFHT650_WideJetMJJ950DEtaJJ1p5() { return nt.HLT_PFHT650_WideJetMJJ950DEtaJJ1p5(); }
    const bool &HLT_PFHT680() { return nt.HLT_PFHT680(); }
    const bool &HLT_PFHT700_PFMET85_PFMHT85_IDTight() { return nt.HLT_PFHT700_PFMET85_PFMHT85_IDTight(); }
    const bool &HLT_PFHT700_PFMET95_PFMHT95_IDTight() { return nt.HLT_PFHT700_PFMET95_PFMHT95_IDTight(); }
    const bool &HLT_PFHT750_4JetPt50() { return nt.HLT_PFHT750_4JetPt50(); }
    const bool &HLT_PFHT750_4JetPt70() { return nt.HLT_PFHT750_4JetPt70(); }
    const bool &HLT_PFHT750_4JetPt80() { return nt.HLT_PFHT750_4JetPt80(); }
    const bool &HLT_PFHT780() { return nt.HLT_PFHT780(); }
    const bool &HLT_PFHT800() { return nt.HLT_PFHT800(); }
    const bool &HLT_PFHT800_4JetPt50() { return nt.HLT_PFHT800_4JetPt50(); }
    const bool &HLT_PFHT800_PFMET75_PFMHT75_IDTight() { return nt.HLT_PFHT800_PFMET75_PFMHT75_IDTight(); }
    const bool &HLT_PFHT800_PFMET85_PFMHT85_IDTight() { return nt.HLT_PFHT800_PFMET85_PFMHT85_IDTight(); }
    const bool &HLT_PFHT850_4JetPt50() { return nt.HLT_PFHT850_4JetPt50(); }
    const bool &HLT_PFHT890() { return nt.HLT_PFHT890(); }
    const bool &HLT_PFHT900() { return nt.HLT_PFHT900(); }
    const bool &HLT_PFJet110() { return nt.HLT_PFJet110(); }
    const bool &HLT_PFJet140() { return nt.HLT_PFJet140(); }
    const bool &HLT_PFJet15() { return nt.HLT_PFJet15(); }
    const bool &HLT_PFJet15_NoCaloMatched() { return nt.HLT_PFJet15_NoCaloMatched(); }
    const bool &HLT_PFJet200() { return nt.HLT_PFJet200(); }
    const bool &HLT_PFJet25() { return nt.HLT_PFJet25(); }
    const bool &HLT_PFJet25_NoCaloMatched() { return nt.HLT_PFJet25_NoCaloMatched(); }
    const bool &HLT_PFJet260() { return nt.HLT_PFJet260(); }
    const bool &HLT_PFJet320() { return nt.HLT_PFJet320(); }
    const bool &HLT_PFJet40() { return nt.HLT_PFJet40(); }
    const bool &HLT_PFJet400() { return nt.HLT_PFJet400(); }
    const bool &HLT_PFJet40_GPUvsCPU() { return nt.HLT_PFJet40_GPUvsCPU(); }
    const bool &HLT_PFJet450() { return nt.HLT_PFJet450(); }
    const bool &HLT_PFJet500() { return nt.HLT_PFJet500(); }
    const bool &HLT_PFJet550() { return nt.HLT_PFJet550(); }
    const bool &HLT_PFJet60() { return nt.HLT_PFJet60(); }
    const bool &HLT_PFJet80() { return nt.HLT_PFJet80(); }
    const bool &HLT_PFJetFwd140() { return nt.HLT_PFJetFwd140(); }
    const bool &HLT_PFJetFwd15() { return nt.HLT_PFJetFwd15(); }
    const bool &HLT_PFJetFwd200() { return nt.HLT_PFJetFwd200(); }
    const bool &HLT_PFJetFwd25() { return nt.HLT_PFJetFwd25(); }
    const bool &HLT_PFJetFwd260() { return nt.HLT_PFJetFwd260(); }
    const bool &HLT_PFJetFwd320() { return nt.HLT_PFJetFwd320(); }
    const bool &HLT_PFJetFwd40() { return nt.HLT_PFJetFwd40(); }
    const bool &HLT_PFJetFwd400() { return nt.HLT_PFJetFwd400(); }
    const bool &HLT_PFJetFwd450() { return nt.HLT_PFJetFwd450(); }
    const bool &HLT_PFJetFwd500() { return nt.HLT_PFJetFwd500(); }
    const bool &HLT_PFJetFwd60() { return nt.HLT_PFJetFwd60(); }
    const bool &HLT_PFJetFwd80() { return nt.HLT_PFJetFwd80(); }
    const bool &HLT_PFMET100_PFMHT100_IDTight() { return nt.HLT_PFMET100_PFMHT100_IDTight(); }
    const bool &HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned() { return nt.HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned(); }
    const bool &HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1() { return nt.HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1(); }
    const bool &HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1() { return nt.HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1(); }
    const bool &HLT_PFMET100_PFMHT100_IDTight_PFHT60() { return nt.HLT_PFMET100_PFMHT100_IDTight_PFHT60(); }
    const bool &HLT_PFMET105_IsoTrk50() { return nt.HLT_PFMET105_IsoTrk50(); }
    const bool &HLT_PFMET110_PFJet100() { return nt.HLT_PFMET110_PFJet100(); }
    const bool &HLT_PFMET110_PFMHT110_IDTight() { return nt.HLT_PFMET110_PFMHT110_IDTight(); }
    const bool &HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1() { return nt.HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1(); }
    const bool &HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1() { return nt.HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1(); }
    const bool &HLT_PFMET120_BTagCSV_p067() { return nt.HLT_PFMET120_BTagCSV_p067(); }
    const bool &HLT_PFMET120_Mu5() { return nt.HLT_PFMET120_Mu5(); }
    const bool &HLT_PFMET120_PFMHT120_IDTight() { return nt.HLT_PFMET120_PFMHT120_IDTight(); }
    const bool &HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1() { return nt.HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1(); }
    const bool &HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1() { return nt.HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1(); }
    const bool &HLT_PFMET120_PFMHT120_IDTight_HFCleaned() { return nt.HLT_PFMET120_PFMHT120_IDTight_HFCleaned(); }
    const bool &HLT_PFMET120_PFMHT120_IDTight_PFHT60() { return nt.HLT_PFMET120_PFMHT120_IDTight_PFHT60(); }
    const bool &HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned() { return nt.HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned(); }
    const bool &HLT_PFMET130_PFMHT130_IDTight() { return nt.HLT_PFMET130_PFMHT130_IDTight(); }
    const bool &HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1() { return nt.HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1(); }
    const bool &HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1() { return nt.HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1(); }
    const bool &HLT_PFMET140_PFMHT140_IDTight() { return nt.HLT_PFMET140_PFMHT140_IDTight(); }
    const bool &HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1() { return nt.HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1(); }
    const bool &HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1() { return nt.HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1(); }
    const bool &HLT_PFMET170_BeamHaloCleaned() { return nt.HLT_PFMET170_BeamHaloCleaned(); }
    const bool &HLT_PFMET170_HBHECleaned() { return nt.HLT_PFMET170_HBHECleaned(); }
    const bool &HLT_PFMET170_HBHE_BeamHaloCleaned() { return nt.HLT_PFMET170_HBHE_BeamHaloCleaned(); }
    const bool &HLT_PFMET170_JetIdCleaned() { return nt.HLT_PFMET170_JetIdCleaned(); }
    const bool &HLT_PFMET170_NoiseCleaned() { return nt.HLT_PFMET170_NoiseCleaned(); }
    const bool &HLT_PFMET170_NotCleaned() { return nt.HLT_PFMET170_NotCleaned(); }
    const bool &HLT_PFMET200_BeamHaloCleaned() { return nt.HLT_PFMET200_BeamHaloCleaned(); }
    const bool &HLT_PFMET200_HBHECleaned() { return nt.HLT_PFMET200_HBHECleaned(); }
    const bool &HLT_PFMET200_HBHE_BeamHaloCleaned() { return nt.HLT_PFMET200_HBHE_BeamHaloCleaned(); }
    const bool &HLT_PFMET200_NotCleaned() { return nt.HLT_PFMET200_NotCleaned(); }
    const bool &HLT_PFMET250_HBHECleaned() { return nt.HLT_PFMET250_HBHECleaned(); }
    const bool &HLT_PFMET250_NotCleaned() { return nt.HLT_PFMET250_NotCleaned(); }
    const bool &HLT_PFMET300() { return nt.HLT_PFMET300(); }
    const bool &HLT_PFMET300_HBHECleaned() { return nt.HLT_PFMET300_HBHECleaned(); }
    const bool &HLT_PFMET300_NotCleaned() { return nt.HLT_PFMET300_NotCleaned(); }
    const bool &HLT_PFMET400() { return nt.HLT_PFMET400(); }
    const bool &HLT_PFMET500() { return nt.HLT_PFMET500(); }
    const bool &HLT_PFMET600() { return nt.HLT_PFMET600(); }
    const bool &HLT_PFMET90_PFMHT90_IDTight() { return nt.HLT_PFMET90_PFMHT90_IDTight(); }
    const bool &HLT_PFMETNoMu100_PFMHTNoMu100_IDTight() { return nt.HLT_PFMETNoMu100_PFMHTNoMu100_IDTight(); }
    const bool &HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60() { return nt.HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60(); }
    const bool &HLT_PFMETNoMu110_PFMHTNoMu110_IDTight() { return nt.HLT_PFMETNoMu110_PFMHTNoMu110_IDTight(); }
    const bool &HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF() { return nt.HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF(); }
    const bool &HLT_PFMETNoMu120_PFMHTNoMu120_IDTight() { return nt.HLT_PFMETNoMu120_PFMHTNoMu120_IDTight(); }
    const bool &HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF() { return nt.HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF(); }
    const bool &HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned() { return nt.HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned(); }
    const bool &HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60() { return nt.HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60(); }
    const bool &HLT_PFMETNoMu130_PFMHTNoMu130_IDTight() { return nt.HLT_PFMETNoMu130_PFMHTNoMu130_IDTight(); }
    const bool &HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF() { return nt.HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF(); }
    const bool &HLT_PFMETNoMu140_PFMHTNoMu140_IDTight() { return nt.HLT_PFMETNoMu140_PFMHTNoMu140_IDTight(); }
    const bool &HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF() { return nt.HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF(); }
    const bool &HLT_PFMETNoMu90_PFMHTNoMu90_IDTight() { return nt.HLT_PFMETNoMu90_PFMHTNoMu90_IDTight(); }
    const bool &HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60() { return nt.HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60(); }
    const bool &HLT_PFMETTypeOne110_PFMHT110_IDTight() { return nt.HLT_PFMETTypeOne110_PFMHT110_IDTight(); }
    const bool &HLT_PFMETTypeOne120_PFMHT120_IDTight() { return nt.HLT_PFMETTypeOne120_PFMHT120_IDTight(); }
    const bool &HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned() { return nt.HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned(); }
    const bool &HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60() { return nt.HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60(); }
    const bool &HLT_PFMETTypeOne130_PFMHT130_IDTight() { return nt.HLT_PFMETTypeOne130_PFMHT130_IDTight(); }
    const bool &HLT_PFMETTypeOne140_PFMHT140_IDTight() { return nt.HLT_PFMETTypeOne140_PFMHT140_IDTight(); }
    const bool &HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned() { return nt.HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned(); }
    const bool &HLT_PFMETTypeOne200_BeamHaloCleaned() { return nt.HLT_PFMETTypeOne200_BeamHaloCleaned(); }
    const bool &HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned() { return nt.HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned(); }
    const bool &HLT_PFTau120_eta2p1() { return nt.HLT_PFTau120_eta2p1(); }
    const bool &HLT_PFTau140_eta2p1() { return nt.HLT_PFTau140_eta2p1(); }
    const bool &HLT_PPSMaxTracksPerArm1() { return nt.HLT_PPSMaxTracksPerArm1(); }
    const bool &HLT_PPSMaxTracksPerRP4() { return nt.HLT_PPSMaxTracksPerRP4(); }
    const bool &HLT_Photon100EBHE10() { return nt.HLT_Photon100EBHE10(); }
    const bool &HLT_Photon100EB_TightID_TightIso() { return nt.HLT_Photon100EB_TightID_TightIso(); }
    const bool &HLT_Photon100EEHE10() { return nt.HLT_Photon100EEHE10(); }
    const bool &HLT_Photon100EE_TightID_TightIso() { return nt.HLT_Photon100EE_TightID_TightIso(); }
    const bool &HLT_Photon110EB_TightID_TightIso() { return nt.HLT_Photon110EB_TightID_TightIso(); }
    const bool &HLT_Photon120() { return nt.HLT_Photon120(); }
    const bool &HLT_Photon120EB_TightID_TightIso() { return nt.HLT_Photon120EB_TightID_TightIso(); }
    const bool &HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40() { return nt.HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40(); }
    const bool &HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF() { return nt.HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF(); }
    const bool &HLT_Photon120_R9Id90_HE10_IsoM() { return nt.HLT_Photon120_R9Id90_HE10_IsoM(); }
    const bool &HLT_Photon125() { return nt.HLT_Photon125(); }
    const bool &HLT_Photon135_PFMET100() { return nt.HLT_Photon135_PFMET100(); }
    const bool &HLT_Photon150() { return nt.HLT_Photon150(); }
    const bool &HLT_Photon165_HE10() { return nt.HLT_Photon165_HE10(); }
    const bool &HLT_Photon165_R9Id90_HE10_IsoM() { return nt.HLT_Photon165_R9Id90_HE10_IsoM(); }
    const bool &HLT_Photon175() { return nt.HLT_Photon175(); }
    const bool &HLT_Photon20() { return nt.HLT_Photon20(); }
    const bool &HLT_Photon200() { return nt.HLT_Photon200(); }
    const bool &HLT_Photon20_CaloIdVL_IsoL() { return nt.HLT_Photon20_CaloIdVL_IsoL(); }
    const bool &HLT_Photon20_HoverELoose() { return nt.HLT_Photon20_HoverELoose(); }
    const bool &HLT_Photon22() { return nt.HLT_Photon22(); }
    const bool &HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40() { return nt.HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40(); }
    const bool &HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF() { return nt.HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF(); }
    const bool &HLT_Photon22_R9Id90_HE10_IsoM() { return nt.HLT_Photon22_R9Id90_HE10_IsoM(); }
    const bool &HLT_Photon25() { return nt.HLT_Photon25(); }
    const bool &HLT_Photon250_NoHE() { return nt.HLT_Photon250_NoHE(); }
    const bool &HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60() { return nt.HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60(); }
    const bool &HLT_Photon30() { return nt.HLT_Photon30(); }
    const bool &HLT_Photon300_NoHE() { return nt.HLT_Photon300_NoHE(); }
    const bool &HLT_Photon30EB_TightID_TightIso() { return nt.HLT_Photon30EB_TightID_TightIso(); }
    const bool &HLT_Photon30_HoverELoose() { return nt.HLT_Photon30_HoverELoose(); }
    const bool &HLT_Photon30_R9Id90_HE10_IsoM() { return nt.HLT_Photon30_R9Id90_HE10_IsoM(); }
    const bool &HLT_Photon33() { return nt.HLT_Photon33(); }
    const bool &HLT_Photon35_TwoProngs35() { return nt.HLT_Photon35_TwoProngs35(); }
    const bool &HLT_Photon36() { return nt.HLT_Photon36(); }
    const bool &HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15() { return nt.HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15(); }
    const bool &HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40() { return nt.HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40(); }
    const bool &HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF() { return nt.HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF(); }
    const bool &HLT_Photon36_R9Id90_HE10_IsoM() { return nt.HLT_Photon36_R9Id90_HE10_IsoM(); }
    const bool &HLT_Photon40_HoverELoose() { return nt.HLT_Photon40_HoverELoose(); }
    const bool &HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15() { return nt.HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15(); }
    const bool &HLT_Photon50() { return nt.HLT_Photon50(); }
    const bool &HLT_Photon500() { return nt.HLT_Photon500(); }
    const bool &HLT_Photon50_HoverELoose() { return nt.HLT_Photon50_HoverELoose(); }
    const bool &HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40() { return nt.HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40(); }
    const bool &HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF() { return nt.HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF(); }
    const bool &HLT_Photon50_R9Id90_HE10_IsoM() { return nt.HLT_Photon50_R9Id90_HE10_IsoM(); }
    const bool &HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50() { return nt.HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50(); }
    const bool &HLT_Photon600() { return nt.HLT_Photon600(); }
    const bool &HLT_Photon60_HoverELoose() { return nt.HLT_Photon60_HoverELoose(); }
    const bool &HLT_Photon60_R9Id90_CaloIdL_IsoL() { return nt.HLT_Photon60_R9Id90_CaloIdL_IsoL(); }
    const bool &HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL() { return nt.HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL(); }
    const bool &HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15() { return nt.HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15(); }
    const bool &HLT_Photon75() { return nt.HLT_Photon75(); }
    const bool &HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40() { return nt.HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40(); }
    const bool &HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF() { return nt.HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF(); }
    const bool &HLT_Photon75_R9Id90_HE10_IsoM() { return nt.HLT_Photon75_R9Id90_HE10_IsoM(); }
    const bool &HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3() { return nt.HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3(); }
    const bool &HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3() { return nt.HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3(); }
    const bool &HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3() { return nt.HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3(); }
    const bool &HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3() { return nt.HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3(); }
    const bool &HLT_Photon90() { return nt.HLT_Photon90(); }
    const bool &HLT_Photon90_CaloIdL_HT300() { return nt.HLT_Photon90_CaloIdL_HT300(); }
    const bool &HLT_Photon90_CaloIdL_PFHT500() { return nt.HLT_Photon90_CaloIdL_PFHT500(); }
    const bool &HLT_Photon90_CaloIdL_PFHT600() { return nt.HLT_Photon90_CaloIdL_PFHT600(); }
    const bool &HLT_Photon90_CaloIdL_PFHT700() { return nt.HLT_Photon90_CaloIdL_PFHT700(); }
    const bool &HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40() { return nt.HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40(); }
    const bool &HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF() { return nt.HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF(); }
    const bool &HLT_Photon90_R9Id90_HE10_IsoM() { return nt.HLT_Photon90_R9Id90_HE10_IsoM(); }
    const bool &HLT_Physics() { return nt.HLT_Physics(); }
    const bool &HLT_Physics_part0() { return nt.HLT_Physics_part0(); }
    const bool &HLT_Physics_part1() { return nt.HLT_Physics_part1(); }
    const bool &HLT_Physics_part2() { return nt.HLT_Physics_part2(); }
    const bool &HLT_Physics_part3() { return nt.HLT_Physics_part3(); }
    const bool &HLT_Physics_part4() { return nt.HLT_Physics_part4(); }
    const bool &HLT_Physics_part5() { return nt.HLT_Physics_part5(); }
    const bool &HLT_Physics_part6() { return nt.HLT_Physics_part6(); }
    const bool &HLT_Physics_part7() { return nt.HLT_Physics_part7(); }
    const bool &HLT_PixelTracks_Multiplicity110ForEndOfFill() { return nt.HLT_PixelTracks_Multiplicity110ForEndOfFill(); }
    const bool &HLT_PixelTracks_Multiplicity135ForEndOfFill() { return nt.HLT_PixelTracks_Multiplicity135ForEndOfFill(); }
    const bool &HLT_PixelTracks_Multiplicity160ForEndOfFill() { return nt.HLT_PixelTracks_Multiplicity160ForEndOfFill(); }
    const bool &HLT_PixelTracks_Multiplicity60ForEndOfFill() { return nt.HLT_PixelTracks_Multiplicity60ForEndOfFill(); }
    const bool &HLT_PixelTracks_Multiplicity85ForEndOfFill() { return nt.HLT_PixelTracks_Multiplicity85ForEndOfFill(); }
    const bool &HLT_QuadJet45_DoubleBTagCSV_p087() { return nt.HLT_QuadJet45_DoubleBTagCSV_p087(); }
    const bool &HLT_QuadJet45_TripleBTagCSV_p087() { return nt.HLT_QuadJet45_TripleBTagCSV_p087(); }
    const bool &HLT_QuadMuon0_Dimuon0_Jpsi() { return nt.HLT_QuadMuon0_Dimuon0_Jpsi(); }
    const bool &HLT_QuadMuon0_Dimuon0_Upsilon() { return nt.HLT_QuadMuon0_Dimuon0_Upsilon(); }
    const bool &HLT_QuadPFJet103_88_75_15() { return nt.HLT_QuadPFJet103_88_75_15(); }
    const bool &HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2() { return nt.HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2(); }
    const bool &HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1() { return nt.HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1(); }
    const bool &HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1() { return nt.HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1(); }
    const bool &HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1() { return nt.HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1(); }
    const bool &HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2() { return nt.HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2(); }
    const bool &HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2() { return nt.HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2(); }
    const bool &HLT_QuadPFJet105_88_76_15() { return nt.HLT_QuadPFJet105_88_76_15(); }
    const bool &HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2() { return nt.HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2(); }
    const bool &HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1() { return nt.HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1(); }
    const bool &HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1() { return nt.HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1(); }
    const bool &HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2() { return nt.HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2(); }
    const bool &HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2() { return nt.HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2(); }
    const bool &HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1() { return nt.HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1(); }
    const bool &HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1() { return nt.HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1(); }
    const bool &HLT_QuadPFJet111_90_80_15() { return nt.HLT_QuadPFJet111_90_80_15(); }
    const bool &HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2() { return nt.HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2(); }
    const bool &HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1() { return nt.HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1(); }
    const bool &HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1() { return nt.HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1(); }
    const bool &HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1() { return nt.HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1(); }
    const bool &HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2() { return nt.HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2(); }
    const bool &HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2() { return nt.HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2(); }
    const bool &HLT_QuadPFJet70_50_40_30() { return nt.HLT_QuadPFJet70_50_40_30(); }
    const bool &HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65() { return nt.HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65(); }
    const bool &HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65() { return nt.HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65(); }
    const bool &HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65() { return nt.HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65(); }
    const bool &HLT_QuadPFJet98_83_71_15() { return nt.HLT_QuadPFJet98_83_71_15(); }
    const bool &HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2() { return nt.HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2(); }
    const bool &HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1() { return nt.HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1(); }
    const bool &HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1() { return nt.HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1(); }
    const bool &HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2() { return nt.HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2(); }
    const bool &HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460() { return nt.HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460(); }
    const bool &HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500() { return nt.HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500(); }
    const bool &HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200() { return nt.HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200(); }
    const bool &HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240() { return nt.HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240(); }
    const bool &HLT_QuadPFJet_VBF() { return nt.HLT_QuadPFJet_VBF(); }
    const bool &HLT_Random() { return nt.HLT_Random(); }
    const bool &HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200() { return nt.HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200(); }
    const bool &HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200() { return nt.HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200(); }
    const bool &HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200() { return nt.HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200(); }
    const bool &HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200() { return nt.HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200(); }
    const bool &HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200() { return nt.HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200(); }
    const bool &HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200() { return nt.HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200(); }
    const bool &HLT_Rsq0p25() { return nt.HLT_Rsq0p25(); }
    const bool &HLT_Rsq0p25_Calo() { return nt.HLT_Rsq0p25_Calo(); }
    const bool &HLT_Rsq0p30() { return nt.HLT_Rsq0p30(); }
    const bool &HLT_Rsq0p35() { return nt.HLT_Rsq0p35(); }
    const bool &HLT_Rsq0p40() { return nt.HLT_Rsq0p40(); }
    const bool &HLT_RsqMR240_Rsq0p09_MR200() { return nt.HLT_RsqMR240_Rsq0p09_MR200(); }
    const bool &HLT_RsqMR240_Rsq0p09_MR200_4jet() { return nt.HLT_RsqMR240_Rsq0p09_MR200_4jet(); }
    const bool &HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo() { return nt.HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo(); }
    const bool &HLT_RsqMR240_Rsq0p09_MR200_Calo() { return nt.HLT_RsqMR240_Rsq0p09_MR200_Calo(); }
    const bool &HLT_RsqMR270_Rsq0p09_MR200() { return nt.HLT_RsqMR270_Rsq0p09_MR200(); }
    const bool &HLT_RsqMR270_Rsq0p09_MR200_4jet() { return nt.HLT_RsqMR270_Rsq0p09_MR200_4jet(); }
    const bool &HLT_RsqMR300_Rsq0p09_MR200() { return nt.HLT_RsqMR300_Rsq0p09_MR200(); }
    const bool &HLT_RsqMR300_Rsq0p09_MR200_4jet() { return nt.HLT_RsqMR300_Rsq0p09_MR200_4jet(); }
    const bool &HLT_RsqMR320_Rsq0p09_MR200() { return nt.HLT_RsqMR320_Rsq0p09_MR200(); }
    const bool &HLT_RsqMR320_Rsq0p09_MR200_4jet() { return nt.HLT_RsqMR320_Rsq0p09_MR200_4jet(); }
    const bool &HLT_SingleCentralPFJet170_CFMax0p1() { return nt.HLT_SingleCentralPFJet170_CFMax0p1(); }
    const bool &HLT_SingleJet30_Mu12_SinglePFJet40() { return nt.HLT_SingleJet30_Mu12_SinglePFJet40(); }
    const bool &HLT_SinglePhoton10_Eta3p1ForPPRef() { return nt.HLT_SinglePhoton10_Eta3p1ForPPRef(); }
    const bool &HLT_SinglePhoton20_Eta3p1ForPPRef() { return nt.HLT_SinglePhoton20_Eta3p1ForPPRef(); }
    const bool &HLT_SinglePhoton30_Eta3p1ForPPRef() { return nt.HLT_SinglePhoton30_Eta3p1ForPPRef(); }
    const bool &HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10() { return nt.HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10(); }
    const bool &HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1() { return nt.HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1(); }
    const bool &HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10() { return nt.HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10(); }
    const bool &HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1() { return nt.HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1(); }
    const bool &HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15() { return nt.HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15(); }
    const bool &HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1() { return nt.HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1(); }
    const bool &HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15() { return nt.HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15(); }
    const bool &HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1() { return nt.HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1(); }
    const bool &HLT_TkMu100() { return nt.HLT_TkMu100(); }
    const bool &HLT_TkMu17() { return nt.HLT_TkMu17(); }
    const bool &HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL() { return nt.HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL(); }
    const bool &HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ() { return nt.HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ(); }
    const bool &HLT_TkMu20() { return nt.HLT_TkMu20(); }
    const bool &HLT_TkMu24_eta2p1() { return nt.HLT_TkMu24_eta2p1(); }
    const bool &HLT_TkMu27() { return nt.HLT_TkMu27(); }
    const bool &HLT_TkMu50() { return nt.HLT_TkMu50(); }
    const bool &HLT_Trimuon2_Upsilon5_Muon() { return nt.HLT_Trimuon2_Upsilon5_Muon(); }
    const bool &HLT_Trimuon5_3p5_2_Upsilon_Muon() { return nt.HLT_Trimuon5_3p5_2_Upsilon_Muon(); }
    const bool &HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon() { return nt.HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon(); }
    const bool &HLT_TripleJet110_35_35_Mjj650_PFMET110() { return nt.HLT_TripleJet110_35_35_Mjj650_PFMET110(); }
    const bool &HLT_TripleJet110_35_35_Mjj650_PFMET120() { return nt.HLT_TripleJet110_35_35_Mjj650_PFMET120(); }
    const bool &HLT_TripleJet110_35_35_Mjj650_PFMET130() { return nt.HLT_TripleJet110_35_35_Mjj650_PFMET130(); }
    const bool &HLT_TripleMu_10_5_5_DZ() { return nt.HLT_TripleMu_10_5_5_DZ(); }
    const bool &HLT_TripleMu_12_10_5() { return nt.HLT_TripleMu_12_10_5(); }
    const bool &HLT_TripleMu_5_3_3() { return nt.HLT_TripleMu_5_3_3(); }
    const bool &HLT_TripleMu_5_3_3_DZ_Mass3p8() { return nt.HLT_TripleMu_5_3_3_DZ_Mass3p8(); }
    const bool &HLT_TripleMu_5_3_3_Mass3p8_DCA() { return nt.HLT_TripleMu_5_3_3_Mass3p8_DCA(); }
    const bool &HLT_TripleMu_5_3_3_Mass3p8_DZ() { return nt.HLT_TripleMu_5_3_3_Mass3p8_DZ(); }
    const bool &HLT_TripleMu_5_3_3_Mass3p8to60_DCA() { return nt.HLT_TripleMu_5_3_3_Mass3p8to60_DCA(); }
    const bool &HLT_TripleMu_5_3_3_Mass3p8to60_DZ() { return nt.HLT_TripleMu_5_3_3_Mass3p8to60_DZ(); }
    const bool &HLT_TriplePhoton_20_20_20_CaloIdLV2() { return nt.HLT_TriplePhoton_20_20_20_CaloIdLV2(); }
    const bool &HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL() { return nt.HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL(); }
    const bool &HLT_TriplePhoton_30_30_10_CaloIdLV2() { return nt.HLT_TriplePhoton_30_30_10_CaloIdLV2(); }
    const bool &HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL() { return nt.HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL(); }
    const bool &HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL() { return nt.HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL(); }
    const bool &HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx() { return nt.HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx(); }
    const bool &HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx() { return nt.HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx(); }
    const bool &HLT_TrkMu16NoFiltersNoVtx() { return nt.HLT_TrkMu16NoFiltersNoVtx(); }
    const bool &HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx() { return nt.HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx(); }
    const bool &HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx() { return nt.HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx(); }
    const bool &HLT_TrkMu6NoFiltersNoVtx() { return nt.HLT_TrkMu6NoFiltersNoVtx(); }
    const bool &HLT_UncorrectedJetE30_NoBPTX() { return nt.HLT_UncorrectedJetE30_NoBPTX(); }
    const bool &HLT_UncorrectedJetE30_NoBPTX3BX() { return nt.HLT_UncorrectedJetE30_NoBPTX3BX(); }
    const bool &HLT_UncorrectedJetE60_NoBPTX3BX() { return nt.HLT_UncorrectedJetE60_NoBPTX3BX(); }
    const bool &HLT_UncorrectedJetE70_NoBPTX3BX() { return nt.HLT_UncorrectedJetE70_NoBPTX3BX(); }
    const bool &HLT_VBF_DisplacedJet40_DisplacedTrack() { return nt.HLT_VBF_DisplacedJet40_DisplacedTrack(); }
    const bool &HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5() { return nt.HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5(); }
    const bool &HLT_VBF_DisplacedJet40_Hadronic() { return nt.HLT_VBF_DisplacedJet40_Hadronic(); }
    const bool &HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack() { return nt.HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack(); }
    const bool &HLT_VBF_DisplacedJet40_TightID_DisplacedTrack() { return nt.HLT_VBF_DisplacedJet40_TightID_DisplacedTrack(); }
    const bool &HLT_VBF_DisplacedJet40_TightID_Hadronic() { return nt.HLT_VBF_DisplacedJet40_TightID_Hadronic(); }
    const bool &HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack() { return nt.HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack(); }
    const bool &HLT_VBF_DisplacedJet40_VTightID_Hadronic() { return nt.HLT_VBF_DisplacedJet40_VTightID_Hadronic(); }
    const bool &HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack() { return nt.HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack(); }
    const bool &HLT_VBF_DisplacedJet40_VVTightID_Hadronic() { return nt.HLT_VBF_DisplacedJet40_VVTightID_Hadronic(); }
    const bool &HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1() { return nt.HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1(); }
    const bool &HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg() { return nt.HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg(); }
    const bool &HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1() { return nt.HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1(); }
    const bool &HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1() { return nt.HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1(); }
    const bool &HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg() { return nt.HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg(); }
    const bool &HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1() { return nt.HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1(); }
    const bool &HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1() { return nt.HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1(); }
    const bool &HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1() { return nt.HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1(); }
    const bool &HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg() { return nt.HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg(); }
    const bool &HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1() { return nt.HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1(); }
    const bool &HLT_VLooseIsoPFTau120_Trk50_eta2p1() { return nt.HLT_VLooseIsoPFTau120_Trk50_eta2p1(); }
    const bool &HLT_VLooseIsoPFTau140_Trk50_eta2p1() { return nt.HLT_VLooseIsoPFTau140_Trk50_eta2p1(); }
    const bool &HLT_ZeroBias() { return nt.HLT_ZeroBias(); }
    const bool &HLT_ZeroBias_Alignment() { return nt.HLT_ZeroBias_Alignment(); }
    const bool &HLT_ZeroBias_Beamspot() { return nt.HLT_ZeroBias_Beamspot(); }
    const bool &HLT_ZeroBias_FirstBXAfterTrain() { return nt.HLT_ZeroBias_FirstBXAfterTrain(); }
    const bool &HLT_ZeroBias_FirstCollisionAfterAbortGap() { return nt.HLT_ZeroBias_FirstCollisionAfterAbortGap(); }
    const bool &HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS() { return nt.HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS(); }
    const bool &HLT_ZeroBias_FirstCollisionAfterAbortGap_copy() { return nt.HLT_ZeroBias_FirstCollisionAfterAbortGap_copy(); }
    const bool &HLT_ZeroBias_FirstCollisionInTrain() { return nt.HLT_ZeroBias_FirstCollisionInTrain(); }
    const bool &HLT_ZeroBias_IsolatedBunches() { return nt.HLT_ZeroBias_IsolatedBunches(); }
    const bool &HLT_ZeroBias_LastCollisionInTrain() { return nt.HLT_ZeroBias_LastCollisionInTrain(); }
    const bool &HLT_ZeroBias_part0() { return nt.HLT_ZeroBias_part0(); }
    const bool &HLT_ZeroBias_part1() { return nt.HLT_ZeroBias_part1(); }
    const bool &HLT_ZeroBias_part2() { return nt.HLT_ZeroBias_part2(); }
    const bool &HLT_ZeroBias_part3() { return nt.HLT_ZeroBias_part3(); }
    const bool &HLT_ZeroBias_part4() { return nt.HLT_ZeroBias_part4(); }
    const bool &HLT_ZeroBias_part5() { return nt.HLT_ZeroBias_part5(); }
    const bool &HLT_ZeroBias_part6() { return nt.HLT_ZeroBias_part6(); }
    const bool &HLT_ZeroBias_part7() { return nt.HLT_ZeroBias_part7(); }
    const bool &HLT_ZeroBias_part8() { return nt.HLT_ZeroBias_part8(); }
    const bool &HLT_ZeroBias_part9() { return nt.HLT_ZeroBias_part9(); }
    const bool &HLTriggerFinalPath() { return nt.HLTriggerFinalPath(); }
    const bool &HLTriggerFirstPath() { return nt.HLTriggerFirstPath(); }
    const float &HTXS_Higgs_pt() { return nt.HTXS_Higgs_pt(); }
    const float &HTXS_Higgs_y() { return nt.HTXS_Higgs_y(); }
    const UChar_t &HTXS_njets25() { return nt.HTXS_njets25(); }
    const UChar_t &HTXS_njets30() { return nt.HTXS_njets30(); }
    const int &HTXS_stage1_1_cat_pTjet25GeV() { return nt.HTXS_stage1_1_cat_pTjet25GeV(); }
    const int &HTXS_stage1_1_cat_pTjet30GeV() { return nt.HTXS_stage1_1_cat_pTjet30GeV(); }
    const int &HTXS_stage1_1_fine_cat_pTjet25GeV() { return nt.HTXS_stage1_1_fine_cat_pTjet25GeV(); }
    const int &HTXS_stage1_1_fine_cat_pTjet30GeV() { return nt.HTXS_stage1_1_fine_cat_pTjet30GeV(); }
    const int &HTXS_stage1_2_cat_pTjet25GeV() { return nt.HTXS_stage1_2_cat_pTjet25GeV(); }
    const int &HTXS_stage1_2_cat_pTjet30GeV() { return nt.HTXS_stage1_2_cat_pTjet30GeV(); }
    const int &HTXS_stage1_2_fine_cat_pTjet25GeV() { return nt.HTXS_stage1_2_fine_cat_pTjet25GeV(); }
    const int &HTXS_stage1_2_fine_cat_pTjet30GeV() { return nt.HTXS_stage1_2_fine_cat_pTjet30GeV(); }
    const int &HTXS_stage_0() { return nt.HTXS_stage_0(); }
    const int &HTXS_stage_1_pTjet25() { return nt.HTXS_stage_1_pTjet25(); }
    const int &HTXS_stage_1_pTjet30() { return nt.HTXS_stage_1_pTjet30(); }
    const vector<int> &IsoTrack_charge() { return nt.IsoTrack_charge(); }
    const vector<float> &IsoTrack_dxy() { return nt.IsoTrack_dxy(); }
    const vector<float> &IsoTrack_dz() { return nt.IsoTrack_dz(); }
    const vector<float> &IsoTrack_eta() { return nt.IsoTrack_eta(); }
    const vector<int> &IsoTrack_fromPV() { return nt.IsoTrack_fromPV(); }
    const vector<bool> &IsoTrack_isFromLostTrack() { return nt.IsoTrack_isFromLostTrack(); }
    const vector<bool> &IsoTrack_isHighPurityTrack() { return nt.IsoTrack_isHighPurityTrack(); }
    const vector<bool> &IsoTrack_isPFcand() { return nt.IsoTrack_isPFcand(); }
    const vector<float> &IsoTrack_miniPFRelIso_all() { return nt.IsoTrack_miniPFRelIso_all(); }
    const vector<float> &IsoTrack_miniPFRelIso_chg() { return nt.IsoTrack_miniPFRelIso_chg(); }
    const vector<int> &IsoTrack_pdgId() { return nt.IsoTrack_pdgId(); }
    const vector<float> &IsoTrack_pfRelIso03_all() { return nt.IsoTrack_pfRelIso03_all(); }
    const vector<float> &IsoTrack_pfRelIso03_chg() { return nt.IsoTrack_pfRelIso03_chg(); }
    const vector<float> &IsoTrack_phi() { return nt.IsoTrack_phi(); }
    const vector<float> &IsoTrack_pt() { return nt.IsoTrack_pt(); }
    const vector<float> &Jet_area() { return nt.Jet_area(); }
    const vector<float> &Jet_bReg() { return nt.Jet_bReg(); }
    const vector<float> &Jet_bRegCorr() { return nt.Jet_bRegCorr(); }
    const vector<float> &Jet_bRegRes() { return nt.Jet_bRegRes(); }
    const vector<float> &Jet_btagCMVA() { return nt.Jet_btagCMVA(); }
    const vector<float> &Jet_btagCSVV2() { return nt.Jet_btagCSVV2(); }
    const vector<float> &Jet_btagDeepB() { return nt.Jet_btagDeepB(); }
    const vector<float> &Jet_btagDeepC() { return nt.Jet_btagDeepC(); }
    const vector<float> &Jet_btagDeepCvB() { return nt.Jet_btagDeepCvB(); }
    const vector<float> &Jet_btagDeepCvL() { return nt.Jet_btagDeepCvL(); }
    const vector<float> &Jet_btagDeepFlavB() { return nt.Jet_btagDeepFlavB(); }
    const vector<float> &Jet_btagDeepFlavC() { return nt.Jet_btagDeepFlavC(); }
    const vector<float> &Jet_btagDeepFlavCvB() { return nt.Jet_btagDeepFlavCvB(); }
    const vector<float> &Jet_btagDeepFlavCvL() { return nt.Jet_btagDeepFlavCvL(); }
    const vector<float> &Jet_btagDeepFlavQG() { return nt.Jet_btagDeepFlavQG(); }
    const vector<float> &Jet_cRegCorr() { return nt.Jet_cRegCorr(); }
    const vector<float> &Jet_cRegRes() { return nt.Jet_cRegRes(); }
    const vector<float> &Jet_chEmEF() { return nt.Jet_chEmEF(); }
    const vector<float> &Jet_chFPV0EF() { return nt.Jet_chFPV0EF(); }
    const vector<float> &Jet_chFPV1EF() { return nt.Jet_chFPV1EF(); }
    const vector<float> &Jet_chFPV2EF() { return nt.Jet_chFPV2EF(); }
    const vector<float> &Jet_chFPV3EF() { return nt.Jet_chFPV3EF(); }
    const vector<float> &Jet_chHEF() { return nt.Jet_chHEF(); }
    const vector<UChar_t> &Jet_cleanmask() { return nt.Jet_cleanmask(); }
    const vector<float> &Jet_corr_JEC() { return nt.Jet_corr_JEC(); }
    const vector<float> &Jet_corr_JER() { return nt.Jet_corr_JER(); }
    const vector<int> &Jet_electronIdx1() { return nt.Jet_electronIdx1(); }
    const vector<int> &Jet_electronIdx2() { return nt.Jet_electronIdx2(); }
    const vector<float> &Jet_eta() { return nt.Jet_eta(); }
    const vector<int> &Jet_genJetIdx() { return nt.Jet_genJetIdx(); }
    const vector<int> &Jet_hadronFlavour() { return nt.Jet_hadronFlavour(); }
    const vector<int> &Jet_hfadjacentEtaStripsSize() { return nt.Jet_hfadjacentEtaStripsSize(); }
    const vector<int> &Jet_hfcentralEtaStripSize() { return nt.Jet_hfcentralEtaStripSize(); }
    const vector<float> &Jet_hfsigmaEtaEta() { return nt.Jet_hfsigmaEtaEta(); }
    const vector<float> &Jet_hfsigmaPhiPhi() { return nt.Jet_hfsigmaPhiPhi(); }
    const vector<int> &Jet_jetId() { return nt.Jet_jetId(); }
    const vector<float> &Jet_mass() { return nt.Jet_mass(); }
    const vector<float> &Jet_mass_jerDown() { return nt.Jet_mass_jerDown(); }
    const vector<float> &Jet_mass_jerUp() { return nt.Jet_mass_jerUp(); }
    const vector<float> &Jet_mass_jesHEMIssueDown() { return nt.Jet_mass_jesHEMIssueDown(); }
    const vector<float> &Jet_mass_jesHEMIssueUp() { return nt.Jet_mass_jesHEMIssueUp(); }
    const vector<float> &Jet_mass_jesTotalDown() { return nt.Jet_mass_jesTotalDown(); }
    const vector<float> &Jet_mass_jesTotalUp() { return nt.Jet_mass_jesTotalUp(); }
    const vector<float> &Jet_mass_nom() { return nt.Jet_mass_nom(); }
    const vector<float> &Jet_mass_raw() { return nt.Jet_mass_raw(); }
    const vector<float> &Jet_muEF() { return nt.Jet_muEF(); }
    const vector<int> &Jet_muonIdx1() { return nt.Jet_muonIdx1(); }
    const vector<int> &Jet_muonIdx2() { return nt.Jet_muonIdx2(); }
    const vector<float> &Jet_muonSubtrFactor() { return nt.Jet_muonSubtrFactor(); }
    const vector<UChar_t> &Jet_nConstituents() { return nt.Jet_nConstituents(); }
    const vector<int> &Jet_nElectrons() { return nt.Jet_nElectrons(); }
    const vector<int> &Jet_nMuons() { return nt.Jet_nMuons(); }
    const vector<int> &Jet_nSVs() { return nt.Jet_nSVs(); }
    const vector<float> &Jet_neEmEF() { return nt.Jet_neEmEF(); }
    const vector<float> &Jet_neHEF() { return nt.Jet_neHEF(); }
    const vector<LorentzVector> &Jet_p4() { return nt.Jet_p4(); }
    const vector<int> &Jet_partonFlavour() { return nt.Jet_partonFlavour(); }
    const vector<float> &Jet_phi() { return nt.Jet_phi(); }
    const vector<float> &Jet_pt() { return nt.Jet_pt(); }
    const vector<float> &Jet_pt_jerDown() { return nt.Jet_pt_jerDown(); }
    const vector<float> &Jet_pt_jerUp() { return nt.Jet_pt_jerUp(); }
    const vector<float> &Jet_pt_jesHEMIssueDown() { return nt.Jet_pt_jesHEMIssueDown(); }
    const vector<float> &Jet_pt_jesHEMIssueUp() { return nt.Jet_pt_jesHEMIssueUp(); }
    const vector<float> &Jet_pt_jesTotalDown() { return nt.Jet_pt_jesTotalDown(); }
    const vector<float> &Jet_pt_jesTotalUp() { return nt.Jet_pt_jesTotalUp(); }
    const vector<float> &Jet_pt_nom() { return nt.Jet_pt_nom(); }
    const vector<float> &Jet_pt_raw() { return nt.Jet_pt_raw(); }
    const vector<int> &Jet_puId() { return nt.Jet_puId(); }
    const vector<float> &Jet_puIdDisc() { return nt.Jet_puIdDisc(); }
    const vector<float> &Jet_qgl() { return nt.Jet_qgl(); }
    const vector<float> &Jet_rawFactor() { return nt.Jet_rawFactor(); }
    const vector<int> &Jet_svIdx1() { return nt.Jet_svIdx1(); }
    const vector<int> &Jet_svIdx2() { return nt.Jet_svIdx2(); }
    const float &L1PreFiringWeight_Dn() { return nt.L1PreFiringWeight_Dn(); }
    const float &L1PreFiringWeight_ECAL_Dn() { return nt.L1PreFiringWeight_ECAL_Dn(); }
    const float &L1PreFiringWeight_ECAL_Nom() { return nt.L1PreFiringWeight_ECAL_Nom(); }
    const float &L1PreFiringWeight_ECAL_Up() { return nt.L1PreFiringWeight_ECAL_Up(); }
    const float &L1PreFiringWeight_Muon_Nom() { return nt.L1PreFiringWeight_Muon_Nom(); }
    const float &L1PreFiringWeight_Muon_StatDn() { return nt.L1PreFiringWeight_Muon_StatDn(); }
    const float &L1PreFiringWeight_Muon_StatUp() { return nt.L1PreFiringWeight_Muon_StatUp(); }
    const float &L1PreFiringWeight_Muon_SystDn() { return nt.L1PreFiringWeight_Muon_SystDn(); }
    const float &L1PreFiringWeight_Muon_SystUp() { return nt.L1PreFiringWeight_Muon_SystUp(); }
    const float &L1PreFiringWeight_Nom() { return nt.L1PreFiringWeight_Nom(); }
    const float &L1PreFiringWeight_Up() { return nt.L1PreFiringWeight_Up(); }
    const bool &L1Reco_step() { return nt.L1Reco_step(); }
    const bool &L1_AlwaysTrue() { return nt.L1_AlwaysTrue(); }
    const bool &L1_BPTX_AND_NIM() { return nt.L1_BPTX_AND_NIM(); }
    const bool &L1_BPTX_AND_Ref1_VME() { return nt.L1_BPTX_AND_Ref1_VME(); }
    const bool &L1_BPTX_AND_Ref2_NIM() { return nt.L1_BPTX_AND_Ref2_NIM(); }
    const bool &L1_BPTX_AND_Ref3_VME() { return nt.L1_BPTX_AND_Ref3_VME(); }
    const bool &L1_BPTX_AND_Ref4_VME() { return nt.L1_BPTX_AND_Ref4_VME(); }
    const bool &L1_BPTX_B1NotB2_NIM() { return nt.L1_BPTX_B1NotB2_NIM(); }
    const bool &L1_BPTX_B1NotB2_VME() { return nt.L1_BPTX_B1NotB2_VME(); }
    const bool &L1_BPTX_B1_NIM() { return nt.L1_BPTX_B1_NIM(); }
    const bool &L1_BPTX_B2NotB1_NIM() { return nt.L1_BPTX_B2NotB1_NIM(); }
    const bool &L1_BPTX_B2NotB1_VME() { return nt.L1_BPTX_B2NotB1_VME(); }
    const bool &L1_BPTX_B2_NIM() { return nt.L1_BPTX_B2_NIM(); }
    const bool &L1_BPTX_BeamGas_B1_VME() { return nt.L1_BPTX_BeamGas_B1_VME(); }
    const bool &L1_BPTX_BeamGas_B2_VME() { return nt.L1_BPTX_BeamGas_B2_VME(); }
    const bool &L1_BPTX_BeamGas_Ref1_VME() { return nt.L1_BPTX_BeamGas_Ref1_VME(); }
    const bool &L1_BPTX_BeamGas_Ref2_VME() { return nt.L1_BPTX_BeamGas_Ref2_VME(); }
    const bool &L1_BPTX_LUT1_AND() { return nt.L1_BPTX_LUT1_AND(); }
    const bool &L1_BPTX_LUT1_B1() { return nt.L1_BPTX_LUT1_B1(); }
    const bool &L1_BPTX_LUT1_B2() { return nt.L1_BPTX_LUT1_B2(); }
    const bool &L1_BPTX_LUT1_OR() { return nt.L1_BPTX_LUT1_OR(); }
    const bool &L1_BPTX_LUT2_AND() { return nt.L1_BPTX_LUT2_AND(); }
    const bool &L1_BPTX_LUT2_B1NotB2() { return nt.L1_BPTX_LUT2_B1NotB2(); }
    const bool &L1_BPTX_LUT2_B2NotB1() { return nt.L1_BPTX_LUT2_B2NotB1(); }
    const bool &L1_BPTX_LUT2_NotOR() { return nt.L1_BPTX_LUT2_NotOR(); }
    const bool &L1_BPTX_NotOR_NIM() { return nt.L1_BPTX_NotOR_NIM(); }
    const bool &L1_BPTX_NotOR_VME() { return nt.L1_BPTX_NotOR_VME(); }
    const bool &L1_BPTX_OR_NIM() { return nt.L1_BPTX_OR_NIM(); }
    const bool &L1_BPTX_OR_Ref3_VME() { return nt.L1_BPTX_OR_Ref3_VME(); }
    const bool &L1_BPTX_OR_Ref4_VME() { return nt.L1_BPTX_OR_Ref4_VME(); }
    const bool &L1_BPTX_RefAND_VME() { return nt.L1_BPTX_RefAND_VME(); }
    const bool &L1_BPTX_TRIG2_AND() { return nt.L1_BPTX_TRIG2_AND(); }
    const bool &L1_BPTX_TRIG2_B1NotB2() { return nt.L1_BPTX_TRIG2_B1NotB2(); }
    const bool &L1_BPTX_TRIG2_B2NotB1() { return nt.L1_BPTX_TRIG2_B2NotB1(); }
    const bool &L1_BPTX_TRIG2_NotOR() { return nt.L1_BPTX_TRIG2_NotOR(); }
    const bool &L1_BRIL_TRIG0_AND() { return nt.L1_BRIL_TRIG0_AND(); }
    const bool &L1_BRIL_TRIG0_FstBunchInTrain() { return nt.L1_BRIL_TRIG0_FstBunchInTrain(); }
    const bool &L1_BRIL_TRIG0_OR() { return nt.L1_BRIL_TRIG0_OR(); }
    const bool &L1_BRIL_TRIG0_delayedAND() { return nt.L1_BRIL_TRIG0_delayedAND(); }
    const bool &L1_BRIL_TRIG3_AND() { return nt.L1_BRIL_TRIG3_AND(); }
    const bool &L1_BRIL_TRIG3_delayedAND() { return nt.L1_BRIL_TRIG3_delayedAND(); }
    const bool &L1_BRIL_TRIG3_ref() { return nt.L1_BRIL_TRIG3_ref(); }
    const bool &L1_BeamGasB1() { return nt.L1_BeamGasB1(); }
    const bool &L1_BeamGasB2() { return nt.L1_BeamGasB2(); }
    const bool &L1_BeamGasMinus() { return nt.L1_BeamGasMinus(); }
    const bool &L1_BeamGasPlus() { return nt.L1_BeamGasPlus(); }
    const bool &L1_BptxMinus() { return nt.L1_BptxMinus(); }
    const bool &L1_BptxOR() { return nt.L1_BptxOR(); }
    const bool &L1_BptxPlus() { return nt.L1_BptxPlus(); }
    const bool &L1_BptxXOR() { return nt.L1_BptxXOR(); }
    const bool &L1_CDC_3_TOP120_DPHI1p570_3p142() { return nt.L1_CDC_3_TOP120_DPHI1p570_3p142(); }
    const bool &L1_CDC_3_TOP120_DPHI2p094_3p142() { return nt.L1_CDC_3_TOP120_DPHI2p094_3p142(); }
    const bool &L1_CDC_3_TOP120_DPHI2p618_3p142() { return nt.L1_CDC_3_TOP120_DPHI2p618_3p142(); }
    const bool &L1_CDC_3_TOP_DPHI2p618_3p142() { return nt.L1_CDC_3_TOP_DPHI2p618_3p142(); }
    const bool &L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142() { return nt.L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142(); }
    const bool &L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142() { return nt.L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142(); }
    const bool &L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142() { return nt.L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142(); }
    const bool &L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142() { return nt.L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142(); }
    const bool &L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142() { return nt.L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142(); }
    const bool &L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142() { return nt.L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142(); }
    const bool &L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142() { return nt.L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142(); }
    const bool &L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142() { return nt.L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142(); }
    const bool &L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142() { return nt.L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142(); }
    const bool &L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142() { return nt.L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142(); }
    const bool &L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142() { return nt.L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142(); }
    const bool &L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142() { return nt.L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142(); }
    const bool &L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142() { return nt.L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142(); }
    const bool &L1_CDCp1_3_TOP120_DPHI2p618_3p142() { return nt.L1_CDCp1_3_TOP120_DPHI2p618_3p142(); }
    const bool &L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142() { return nt.L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142(); }
    const bool &L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142() { return nt.L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142(); }
    const bool &L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142() { return nt.L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142(); }
    const bool &L1_CastorGap_BptxAND() { return nt.L1_CastorGap_BptxAND(); }
    const bool &L1_CastorHaloMuon() { return nt.L1_CastorHaloMuon(); }
    const bool &L1_CastorHaloMuon_BptxAND() { return nt.L1_CastorHaloMuon_BptxAND(); }
    const bool &L1_CastorHighJet_BptxAND() { return nt.L1_CastorHighJet_BptxAND(); }
    const bool &L1_CastorMediumJet_BptxAND() { return nt.L1_CastorMediumJet_BptxAND(); }
    const bool &L1_DoubleEG10_er1p2_dR_Max0p6() { return nt.L1_DoubleEG10_er1p2_dR_Max0p6(); }
    const bool &L1_DoubleEG10p5_er1p2_dR_Max0p6() { return nt.L1_DoubleEG10p5_er1p2_dR_Max0p6(); }
    const bool &L1_DoubleEG11_er1p2_dR_Max0p6() { return nt.L1_DoubleEG11_er1p2_dR_Max0p6(); }
    const bool &L1_DoubleEG4_er1p2_dR_Max0p9() { return nt.L1_DoubleEG4_er1p2_dR_Max0p9(); }
    const bool &L1_DoubleEG4p5_er1p2_dR_Max0p9() { return nt.L1_DoubleEG4p5_er1p2_dR_Max0p9(); }
    const bool &L1_DoubleEG5_er1p2_dR_Max0p9() { return nt.L1_DoubleEG5_er1p2_dR_Max0p9(); }
    const bool &L1_DoubleEG5p5_er1p2_dR_Max0p8() { return nt.L1_DoubleEG5p5_er1p2_dR_Max0p8(); }
    const bool &L1_DoubleEG6_HTT240er() { return nt.L1_DoubleEG6_HTT240er(); }
    const bool &L1_DoubleEG6_HTT250er() { return nt.L1_DoubleEG6_HTT250er(); }
    const bool &L1_DoubleEG6_HTT255() { return nt.L1_DoubleEG6_HTT255(); }
    const bool &L1_DoubleEG6_HTT255er() { return nt.L1_DoubleEG6_HTT255er(); }
    const bool &L1_DoubleEG6_HTT270er() { return nt.L1_DoubleEG6_HTT270er(); }
    const bool &L1_DoubleEG6_HTT300er() { return nt.L1_DoubleEG6_HTT300er(); }
    const bool &L1_DoubleEG6_er1p2_dR_Max0p8() { return nt.L1_DoubleEG6_er1p2_dR_Max0p8(); }
    const bool &L1_DoubleEG6p5_er1p2_dR_Max0p8() { return nt.L1_DoubleEG6p5_er1p2_dR_Max0p8(); }
    const bool &L1_DoubleEG7_er1p2_dR_Max0p8() { return nt.L1_DoubleEG7_er1p2_dR_Max0p8(); }
    const bool &L1_DoubleEG7p5_er1p2_dR_Max0p7() { return nt.L1_DoubleEG7p5_er1p2_dR_Max0p7(); }
    const bool &L1_DoubleEG8_er1p2_dR_Max0p7() { return nt.L1_DoubleEG8_er1p2_dR_Max0p7(); }
    const bool &L1_DoubleEG8er2p5_HTT260er() { return nt.L1_DoubleEG8er2p5_HTT260er(); }
    const bool &L1_DoubleEG8er2p5_HTT280er() { return nt.L1_DoubleEG8er2p5_HTT280er(); }
    const bool &L1_DoubleEG8er2p5_HTT300er() { return nt.L1_DoubleEG8er2p5_HTT300er(); }
    const bool &L1_DoubleEG8er2p5_HTT320er() { return nt.L1_DoubleEG8er2p5_HTT320er(); }
    const bool &L1_DoubleEG8er2p5_HTT340er() { return nt.L1_DoubleEG8er2p5_HTT340er(); }
    const bool &L1_DoubleEG8er2p6_HTT255er() { return nt.L1_DoubleEG8er2p6_HTT255er(); }
    const bool &L1_DoubleEG8er2p6_HTT270er() { return nt.L1_DoubleEG8er2p6_HTT270er(); }
    const bool &L1_DoubleEG8er2p6_HTT300er() { return nt.L1_DoubleEG8er2p6_HTT300er(); }
    const bool &L1_DoubleEG8p5_er1p2_dR_Max0p7() { return nt.L1_DoubleEG8p5_er1p2_dR_Max0p7(); }
    const bool &L1_DoubleEG9_er1p2_dR_Max0p7() { return nt.L1_DoubleEG9_er1p2_dR_Max0p7(); }
    const bool &L1_DoubleEG9p5_er1p2_dR_Max0p6() { return nt.L1_DoubleEG9p5_er1p2_dR_Max0p6(); }
    const bool &L1_DoubleEG_15_10() { return nt.L1_DoubleEG_15_10(); }
    const bool &L1_DoubleEG_15_10_er2p5() { return nt.L1_DoubleEG_15_10_er2p5(); }
    const bool &L1_DoubleEG_18_17() { return nt.L1_DoubleEG_18_17(); }
    const bool &L1_DoubleEG_20_10_er2p5() { return nt.L1_DoubleEG_20_10_er2p5(); }
    const bool &L1_DoubleEG_20_18() { return nt.L1_DoubleEG_20_18(); }
    const bool &L1_DoubleEG_22_10() { return nt.L1_DoubleEG_22_10(); }
    const bool &L1_DoubleEG_22_10_er2p5() { return nt.L1_DoubleEG_22_10_er2p5(); }
    const bool &L1_DoubleEG_22_12() { return nt.L1_DoubleEG_22_12(); }
    const bool &L1_DoubleEG_22_15() { return nt.L1_DoubleEG_22_15(); }
    const bool &L1_DoubleEG_23_10() { return nt.L1_DoubleEG_23_10(); }
    const bool &L1_DoubleEG_24_17() { return nt.L1_DoubleEG_24_17(); }
    const bool &L1_DoubleEG_25_12() { return nt.L1_DoubleEG_25_12(); }
    const bool &L1_DoubleEG_25_12_er2p5() { return nt.L1_DoubleEG_25_12_er2p5(); }
    const bool &L1_DoubleEG_25_13() { return nt.L1_DoubleEG_25_13(); }
    const bool &L1_DoubleEG_25_14() { return nt.L1_DoubleEG_25_14(); }
    const bool &L1_DoubleEG_25_14_er2p5() { return nt.L1_DoubleEG_25_14_er2p5(); }
    const bool &L1_DoubleEG_27_14_er2p5() { return nt.L1_DoubleEG_27_14_er2p5(); }
    const bool &L1_DoubleEG_Iso23_10() { return nt.L1_DoubleEG_Iso23_10(); }
    const bool &L1_DoubleEG_Iso24_10() { return nt.L1_DoubleEG_Iso24_10(); }
    const bool &L1_DoubleEG_LooseIso16_LooseIso12_er1p5() { return nt.L1_DoubleEG_LooseIso16_LooseIso12_er1p5(); }
    const bool &L1_DoubleEG_LooseIso18_LooseIso12_er1p5() { return nt.L1_DoubleEG_LooseIso18_LooseIso12_er1p5(); }
    const bool &L1_DoubleEG_LooseIso20_10_er2p5() { return nt.L1_DoubleEG_LooseIso20_10_er2p5(); }
    const bool &L1_DoubleEG_LooseIso20_LooseIso12_er1p5() { return nt.L1_DoubleEG_LooseIso20_LooseIso12_er1p5(); }
    const bool &L1_DoubleEG_LooseIso22_10_er2p5() { return nt.L1_DoubleEG_LooseIso22_10_er2p5(); }
    const bool &L1_DoubleEG_LooseIso22_12_er2p5() { return nt.L1_DoubleEG_LooseIso22_12_er2p5(); }
    const bool &L1_DoubleEG_LooseIso22_LooseIso12_er1p5() { return nt.L1_DoubleEG_LooseIso22_LooseIso12_er1p5(); }
    const bool &L1_DoubleEG_LooseIso23_10() { return nt.L1_DoubleEG_LooseIso23_10(); }
    const bool &L1_DoubleEG_LooseIso24_10() { return nt.L1_DoubleEG_LooseIso24_10(); }
    const bool &L1_DoubleEG_LooseIso25_12_er2p5() { return nt.L1_DoubleEG_LooseIso25_12_er2p5(); }
    const bool &L1_DoubleEG_LooseIso25_LooseIso12_er1p5() { return nt.L1_DoubleEG_LooseIso25_LooseIso12_er1p5(); }
    const bool &L1_DoubleIsoTau26er() { return nt.L1_DoubleIsoTau26er(); }
    const bool &L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5() { return nt.L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5(); }
    const bool &L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5() { return nt.L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5(); }
    const bool &L1_DoubleIsoTau27er() { return nt.L1_DoubleIsoTau27er(); }
    const bool &L1_DoubleIsoTau28er() { return nt.L1_DoubleIsoTau28er(); }
    const bool &L1_DoubleIsoTau28er2p1() { return nt.L1_DoubleIsoTau28er2p1(); }
    const bool &L1_DoubleIsoTau28er2p1_Mass_Max80() { return nt.L1_DoubleIsoTau28er2p1_Mass_Max80(); }
    const bool &L1_DoubleIsoTau28er2p1_Mass_Max90() { return nt.L1_DoubleIsoTau28er2p1_Mass_Max90(); }
    const bool &L1_DoubleIsoTau29er() { return nt.L1_DoubleIsoTau29er(); }
    const bool &L1_DoubleIsoTau30er() { return nt.L1_DoubleIsoTau30er(); }
    const bool &L1_DoubleIsoTau30er2p1() { return nt.L1_DoubleIsoTau30er2p1(); }
    const bool &L1_DoubleIsoTau30er2p1_Mass_Max80() { return nt.L1_DoubleIsoTau30er2p1_Mass_Max80(); }
    const bool &L1_DoubleIsoTau30er2p1_Mass_Max90() { return nt.L1_DoubleIsoTau30er2p1_Mass_Max90(); }
    const bool &L1_DoubleIsoTau32er() { return nt.L1_DoubleIsoTau32er(); }
    const bool &L1_DoubleIsoTau32er2p1() { return nt.L1_DoubleIsoTau32er2p1(); }
    const bool &L1_DoubleIsoTau33er() { return nt.L1_DoubleIsoTau33er(); }
    const bool &L1_DoubleIsoTau33er2p1() { return nt.L1_DoubleIsoTau33er2p1(); }
    const bool &L1_DoubleIsoTau34er() { return nt.L1_DoubleIsoTau34er(); }
    const bool &L1_DoubleIsoTau34er2p1() { return nt.L1_DoubleIsoTau34er2p1(); }
    const bool &L1_DoubleIsoTau35er() { return nt.L1_DoubleIsoTau35er(); }
    const bool &L1_DoubleIsoTau35er2p1() { return nt.L1_DoubleIsoTau35er2p1(); }
    const bool &L1_DoubleIsoTau36er() { return nt.L1_DoubleIsoTau36er(); }
    const bool &L1_DoubleIsoTau36er2p1() { return nt.L1_DoubleIsoTau36er2p1(); }
    const bool &L1_DoubleIsoTau38er2p1() { return nt.L1_DoubleIsoTau38er2p1(); }
    const bool &L1_DoubleJet100er2p3_dEta_Max1p6() { return nt.L1_DoubleJet100er2p3_dEta_Max1p6(); }
    const bool &L1_DoubleJet100er2p5() { return nt.L1_DoubleJet100er2p5(); }
    const bool &L1_DoubleJet100er2p7() { return nt.L1_DoubleJet100er2p7(); }
    const bool &L1_DoubleJet100er3p0() { return nt.L1_DoubleJet100er3p0(); }
    const bool &L1_DoubleJet112er2p3_dEta_Max1p6() { return nt.L1_DoubleJet112er2p3_dEta_Max1p6(); }
    const bool &L1_DoubleJet112er2p7() { return nt.L1_DoubleJet112er2p7(); }
    const bool &L1_DoubleJet112er3p0() { return nt.L1_DoubleJet112er3p0(); }
    const bool &L1_DoubleJet120er2p5() { return nt.L1_DoubleJet120er2p5(); }
    const bool &L1_DoubleJet120er2p7() { return nt.L1_DoubleJet120er2p7(); }
    const bool &L1_DoubleJet120er3p0() { return nt.L1_DoubleJet120er3p0(); }
    const bool &L1_DoubleJet12_ForwardBackward() { return nt.L1_DoubleJet12_ForwardBackward(); }
    const bool &L1_DoubleJet150er2p5() { return nt.L1_DoubleJet150er2p5(); }
    const bool &L1_DoubleJet150er2p7() { return nt.L1_DoubleJet150er2p7(); }
    const bool &L1_DoubleJet150er3p0() { return nt.L1_DoubleJet150er3p0(); }
    const bool &L1_DoubleJet16_ForwardBackward() { return nt.L1_DoubleJet16_ForwardBackward(); }
    const bool &L1_DoubleJet30_Mass_Min300_dEta_Max1p5() { return nt.L1_DoubleJet30_Mass_Min300_dEta_Max1p5(); }
    const bool &L1_DoubleJet30_Mass_Min320_dEta_Max1p5() { return nt.L1_DoubleJet30_Mass_Min320_dEta_Max1p5(); }
    const bool &L1_DoubleJet30_Mass_Min340_dEta_Max1p5() { return nt.L1_DoubleJet30_Mass_Min340_dEta_Max1p5(); }
    const bool &L1_DoubleJet30_Mass_Min360_dEta_Max1p5() { return nt.L1_DoubleJet30_Mass_Min360_dEta_Max1p5(); }
    const bool &L1_DoubleJet30_Mass_Min380_dEta_Max1p5() { return nt.L1_DoubleJet30_Mass_Min380_dEta_Max1p5(); }
    const bool &L1_DoubleJet30_Mass_Min400_Mu10() { return nt.L1_DoubleJet30_Mass_Min400_Mu10(); }
    const bool &L1_DoubleJet30_Mass_Min400_Mu6() { return nt.L1_DoubleJet30_Mass_Min400_Mu6(); }
    const bool &L1_DoubleJet30_Mass_Min400_dEta_Max1p5() { return nt.L1_DoubleJet30_Mass_Min400_dEta_Max1p5(); }
    const bool &L1_DoubleJet30_Mj30j30_400_Mu10() { return nt.L1_DoubleJet30_Mj30j30_400_Mu10(); }
    const bool &L1_DoubleJet30_Mj30j30_400_Mu6() { return nt.L1_DoubleJet30_Mj30j30_400_Mu6(); }
    const bool &L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5() { return nt.L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5(); }
    const bool &L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5() { return nt.L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5(); }
    const bool &L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5() { return nt.L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5(); }
    const bool &L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5() { return nt.L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5(); }
    const bool &L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5() { return nt.L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5(); }
    const bool &L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5() { return nt.L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5(); }
    const bool &L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp() { return nt.L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp(); }
    const bool &L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5() { return nt.L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5(); }
    const bool &L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450() { return nt.L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450(); }
    const bool &L1_DoubleJet40er2p5() { return nt.L1_DoubleJet40er2p5(); }
    const bool &L1_DoubleJet40er2p7() { return nt.L1_DoubleJet40er2p7(); }
    const bool &L1_DoubleJet40er3p0() { return nt.L1_DoubleJet40er3p0(); }
    const bool &L1_DoubleJet50er2p7() { return nt.L1_DoubleJet50er2p7(); }
    const bool &L1_DoubleJet50er3p0() { return nt.L1_DoubleJet50er3p0(); }
    const bool &L1_DoubleJet60er2p7() { return nt.L1_DoubleJet60er2p7(); }
    const bool &L1_DoubleJet60er2p7_ETM100() { return nt.L1_DoubleJet60er2p7_ETM100(); }
    const bool &L1_DoubleJet60er2p7_ETM60() { return nt.L1_DoubleJet60er2p7_ETM60(); }
    const bool &L1_DoubleJet60er2p7_ETM70() { return nt.L1_DoubleJet60er2p7_ETM70(); }
    const bool &L1_DoubleJet60er2p7_ETM80() { return nt.L1_DoubleJet60er2p7_ETM80(); }
    const bool &L1_DoubleJet60er2p7_ETM90() { return nt.L1_DoubleJet60er2p7_ETM90(); }
    const bool &L1_DoubleJet60er3p0() { return nt.L1_DoubleJet60er3p0(); }
    const bool &L1_DoubleJet60er3p0_ETM100() { return nt.L1_DoubleJet60er3p0_ETM100(); }
    const bool &L1_DoubleJet60er3p0_ETM60() { return nt.L1_DoubleJet60er3p0_ETM60(); }
    const bool &L1_DoubleJet60er3p0_ETM70() { return nt.L1_DoubleJet60er3p0_ETM70(); }
    const bool &L1_DoubleJet60er3p0_ETM80() { return nt.L1_DoubleJet60er3p0_ETM80(); }
    const bool &L1_DoubleJet60er3p0_ETM90() { return nt.L1_DoubleJet60er3p0_ETM90(); }
    const bool &L1_DoubleJet80er2p7() { return nt.L1_DoubleJet80er2p7(); }
    const bool &L1_DoubleJet80er3p0() { return nt.L1_DoubleJet80er3p0(); }
    const bool &L1_DoubleJet8_ForwardBackward() { return nt.L1_DoubleJet8_ForwardBackward(); }
    const bool &L1_DoubleJetC100() { return nt.L1_DoubleJetC100(); }
    const bool &L1_DoubleJetC112() { return nt.L1_DoubleJetC112(); }
    const bool &L1_DoubleJetC120() { return nt.L1_DoubleJetC120(); }
    const bool &L1_DoubleJetC40() { return nt.L1_DoubleJetC40(); }
    const bool &L1_DoubleJetC50() { return nt.L1_DoubleJetC50(); }
    const bool &L1_DoubleJetC60() { return nt.L1_DoubleJetC60(); }
    const bool &L1_DoubleJetC60_ETM60() { return nt.L1_DoubleJetC60_ETM60(); }
    const bool &L1_DoubleJetC80() { return nt.L1_DoubleJetC80(); }
    const bool &L1_DoubleJet_100_30_DoubleJet30_Mass_Min620() { return nt.L1_DoubleJet_100_30_DoubleJet30_Mass_Min620(); }
    const bool &L1_DoubleJet_100_30_Mj30j30_620() { return nt.L1_DoubleJet_100_30_Mj30j30_620(); }
    const bool &L1_DoubleJet_100_35_DoubleJet35_Mass_Min620() { return nt.L1_DoubleJet_100_35_DoubleJet35_Mass_Min620(); }
    const bool &L1_DoubleJet_110_35_DoubleJet35_Mass_Min620() { return nt.L1_DoubleJet_110_35_DoubleJet35_Mass_Min620(); }
    const bool &L1_DoubleJet_110_40_DoubleJet40_Mass_Min620() { return nt.L1_DoubleJet_110_40_DoubleJet40_Mass_Min620(); }
    const bool &L1_DoubleJet_115_35_DoubleJet35_Mass_Min620() { return nt.L1_DoubleJet_115_35_DoubleJet35_Mass_Min620(); }
    const bool &L1_DoubleJet_115_40_DoubleJet40_Mass_Min620() { return nt.L1_DoubleJet_115_40_DoubleJet40_Mass_Min620(); }
    const bool &L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28() { return nt.L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28(); }
    const bool &L1_DoubleJet_120_45_DoubleJet45_Mass_Min620() { return nt.L1_DoubleJet_120_45_DoubleJet45_Mass_Min620(); }
    const bool &L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28() { return nt.L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28(); }
    const bool &L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ() { return nt.L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ(); }
    const bool &L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp() { return nt.L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp(); }
    const bool &L1_DoubleJet_80_30_Mass_Min420_Mu8() { return nt.L1_DoubleJet_80_30_Mass_Min420_Mu8(); }
    const bool &L1_DoubleJet_90_30_DoubleJet30_Mass_Min620() { return nt.L1_DoubleJet_90_30_DoubleJet30_Mass_Min620(); }
    const bool &L1_DoubleJet_90_30_Mj30j30_620() { return nt.L1_DoubleJet_90_30_Mj30j30_620(); }
    const bool &L1_DoubleLLPJet40() { return nt.L1_DoubleLLPJet40(); }
    const bool &L1_DoubleLooseIsoEG22er2p1() { return nt.L1_DoubleLooseIsoEG22er2p1(); }
    const bool &L1_DoubleLooseIsoEG24er2p1() { return nt.L1_DoubleLooseIsoEG24er2p1(); }
    const bool &L1_DoubleMu0() { return nt.L1_DoubleMu0(); }
    const bool &L1_DoubleMu0_ETM40() { return nt.L1_DoubleMu0_ETM40(); }
    const bool &L1_DoubleMu0_ETM55() { return nt.L1_DoubleMu0_ETM55(); }
    const bool &L1_DoubleMu0_ETM60() { return nt.L1_DoubleMu0_ETM60(); }
    const bool &L1_DoubleMu0_ETM65() { return nt.L1_DoubleMu0_ETM65(); }
    const bool &L1_DoubleMu0_ETM70() { return nt.L1_DoubleMu0_ETM70(); }
    const bool &L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30() { return nt.L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30(); }
    const bool &L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30() { return nt.L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30(); }
    const bool &L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30() { return nt.L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30(); }
    const bool &L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30() { return nt.L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30(); }
    const bool &L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30() { return nt.L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30(); }
    const bool &L1_DoubleMu0_Mass_Min1() { return nt.L1_DoubleMu0_Mass_Min1(); }
    const bool &L1_DoubleMu0_OQ() { return nt.L1_DoubleMu0_OQ(); }
    const bool &L1_DoubleMu0_SQ() { return nt.L1_DoubleMu0_SQ(); }
    const bool &L1_DoubleMu0_SQ_OS() { return nt.L1_DoubleMu0_SQ_OS(); }
    const bool &L1_DoubleMu0_Upt15_Upt7() { return nt.L1_DoubleMu0_Upt15_Upt7(); }
    const bool &L1_DoubleMu0_Upt5_Upt5() { return nt.L1_DoubleMu0_Upt5_Upt5(); }
    const bool &L1_DoubleMu0_Upt6_IP_Min1_Upt4() { return nt.L1_DoubleMu0_Upt6_IP_Min1_Upt4(); }
    const bool &L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8() { return nt.L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8(); }
    const bool &L1_DoubleMu0er1p25_dEta_Max1p8_OS() { return nt.L1_DoubleMu0er1p25_dEta_Max1p8_OS(); }
    const bool &L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6() { return nt.L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6(); }
    const bool &L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4() { return nt.L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4(); }
    const bool &L1_DoubleMu0er1p4_dEta_Max1p8_OS() { return nt.L1_DoubleMu0er1p4_dEta_Max1p8_OS(); }
    const bool &L1_DoubleMu0er1p5_SQ() { return nt.L1_DoubleMu0er1p5_SQ(); }
    const bool &L1_DoubleMu0er1p5_SQ_OS() { return nt.L1_DoubleMu0er1p5_SQ_OS(); }
    const bool &L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4() { return nt.L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4(); }
    const bool &L1_DoubleMu0er1p5_SQ_dR_Max1p4() { return nt.L1_DoubleMu0er1p5_SQ_dR_Max1p4(); }
    const bool &L1_DoubleMu0er1p6_dEta_Max1p8() { return nt.L1_DoubleMu0er1p6_dEta_Max1p8(); }
    const bool &L1_DoubleMu0er1p6_dEta_Max1p8_OS() { return nt.L1_DoubleMu0er1p6_dEta_Max1p8_OS(); }
    const bool &L1_DoubleMu0er2_SQ_dR_Max1p4() { return nt.L1_DoubleMu0er2_SQ_dR_Max1p4(); }
    const bool &L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5() { return nt.L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5(); }
    const bool &L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6() { return nt.L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6(); }
    const bool &L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4() { return nt.L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4(); }
    const bool &L1_DoubleMu0er2p0_SQ_dEta_Max1p5() { return nt.L1_DoubleMu0er2p0_SQ_dEta_Max1p5(); }
    const bool &L1_DoubleMu0er2p0_SQ_dEta_Max1p6() { return nt.L1_DoubleMu0er2p0_SQ_dEta_Max1p6(); }
    const bool &L1_DoubleMu0er2p0_SQ_dR_Max1p4() { return nt.L1_DoubleMu0er2p0_SQ_dR_Max1p4(); }
    const bool &L1_DoubleMu10_SQ() { return nt.L1_DoubleMu10_SQ(); }
    const bool &L1_DoubleMu18er2p1() { return nt.L1_DoubleMu18er2p1(); }
    const bool &L1_DoubleMu18er2p1_SQ() { return nt.L1_DoubleMu18er2p1_SQ(); }
    const bool &L1_DoubleMu22er2p1() { return nt.L1_DoubleMu22er2p1(); }
    const bool &L1_DoubleMu3_OS_DoubleEG7p5Upsilon() { return nt.L1_DoubleMu3_OS_DoubleEG7p5Upsilon(); }
    const bool &L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20() { return nt.L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20(); }
    const bool &L1_DoubleMu3_SQ_ETMHF30_HTT60er() { return nt.L1_DoubleMu3_SQ_ETMHF30_HTT60er(); }
    const bool &L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5() { return nt.L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5(); }
    const bool &L1_DoubleMu3_SQ_ETMHF40_HTT60er() { return nt.L1_DoubleMu3_SQ_ETMHF40_HTT60er(); }
    const bool &L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30() { return nt.L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30(); }
    const bool &L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5() { return nt.L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5(); }
    const bool &L1_DoubleMu3_SQ_ETMHF50_HTT60er() { return nt.L1_DoubleMu3_SQ_ETMHF50_HTT60er(); }
    const bool &L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30() { return nt.L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30(); }
    const bool &L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5() { return nt.L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5(); }
    const bool &L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5() { return nt.L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5(); }
    const bool &L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30() { return nt.L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30(); }
    const bool &L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5() { return nt.L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5(); }
    const bool &L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30() { return nt.L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30(); }
    const bool &L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30() { return nt.L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30(); }
    const bool &L1_DoubleMu3_SQ_HTT100er() { return nt.L1_DoubleMu3_SQ_HTT100er(); }
    const bool &L1_DoubleMu3_SQ_HTT200er() { return nt.L1_DoubleMu3_SQ_HTT200er(); }
    const bool &L1_DoubleMu3_SQ_HTT220er() { return nt.L1_DoubleMu3_SQ_HTT220er(); }
    const bool &L1_DoubleMu3_SQ_HTT240er() { return nt.L1_DoubleMu3_SQ_HTT240er(); }
    const bool &L1_DoubleMu3_SQ_HTT260er() { return nt.L1_DoubleMu3_SQ_HTT260er(); }
    const bool &L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8() { return nt.L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8(); }
    const bool &L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4() { return nt.L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4(); }
    const bool &L1_DoubleMu4_OS_EG12() { return nt.L1_DoubleMu4_OS_EG12(); }
    const bool &L1_DoubleMu4_SQ_EG9er2p5() { return nt.L1_DoubleMu4_SQ_EG9er2p5(); }
    const bool &L1_DoubleMu4_SQ_OS() { return nt.L1_DoubleMu4_SQ_OS(); }
    const bool &L1_DoubleMu4_SQ_OS_dR_Max1p2() { return nt.L1_DoubleMu4_SQ_OS_dR_Max1p2(); }
    const bool &L1_DoubleMu4p5_SQ() { return nt.L1_DoubleMu4p5_SQ(); }
    const bool &L1_DoubleMu4p5_SQ_OS() { return nt.L1_DoubleMu4p5_SQ_OS(); }
    const bool &L1_DoubleMu4p5_SQ_OS_dR_Max1p2() { return nt.L1_DoubleMu4p5_SQ_OS_dR_Max1p2(); }
    const bool &L1_DoubleMu4p5er2p0_SQ_OS() { return nt.L1_DoubleMu4p5er2p0_SQ_OS(); }
    const bool &L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18() { return nt.L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18(); }
    const bool &L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18() { return nt.L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18(); }
    const bool &L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7() { return nt.L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7(); }
    const bool &L1_DoubleMu5Upsilon_OS_DoubleEG3() { return nt.L1_DoubleMu5Upsilon_OS_DoubleEG3(); }
    const bool &L1_DoubleMu5_OS_EG12() { return nt.L1_DoubleMu5_OS_EG12(); }
    const bool &L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20() { return nt.L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20(); }
    const bool &L1_DoubleMu5_SQ_EG9er2p5() { return nt.L1_DoubleMu5_SQ_EG9er2p5(); }
    const bool &L1_DoubleMu5_SQ_OS() { return nt.L1_DoubleMu5_SQ_OS(); }
    const bool &L1_DoubleMu5_SQ_OS_Mass7to18() { return nt.L1_DoubleMu5_SQ_OS_Mass7to18(); }
    const bool &L1_DoubleMu6_SQ_OS() { return nt.L1_DoubleMu6_SQ_OS(); }
    const bool &L1_DoubleMu7_EG14() { return nt.L1_DoubleMu7_EG14(); }
    const bool &L1_DoubleMu7_EG7() { return nt.L1_DoubleMu7_EG7(); }
    const bool &L1_DoubleMu7_SQ_EG7() { return nt.L1_DoubleMu7_SQ_EG7(); }
    const bool &L1_DoubleMu8_SQ() { return nt.L1_DoubleMu8_SQ(); }
    const bool &L1_DoubleMu9_SQ() { return nt.L1_DoubleMu9_SQ(); }
    const bool &L1_DoubleMuOpen() { return nt.L1_DoubleMuOpen(); }
    const bool &L1_DoubleMu_10_0_dEta_Max1p8() { return nt.L1_DoubleMu_10_0_dEta_Max1p8(); }
    const bool &L1_DoubleMu_10_3p5() { return nt.L1_DoubleMu_10_3p5(); }
    const bool &L1_DoubleMu_10_Open() { return nt.L1_DoubleMu_10_Open(); }
    const bool &L1_DoubleMu_11_4() { return nt.L1_DoubleMu_11_4(); }
    const bool &L1_DoubleMu_12_5() { return nt.L1_DoubleMu_12_5(); }
    const bool &L1_DoubleMu_12_8() { return nt.L1_DoubleMu_12_8(); }
    const bool &L1_DoubleMu_13_6() { return nt.L1_DoubleMu_13_6(); }
    const bool &L1_DoubleMu_15_5() { return nt.L1_DoubleMu_15_5(); }
    const bool &L1_DoubleMu_15_5_SQ() { return nt.L1_DoubleMu_15_5_SQ(); }
    const bool &L1_DoubleMu_15_7() { return nt.L1_DoubleMu_15_7(); }
    const bool &L1_DoubleMu_15_7_Mass_Min1() { return nt.L1_DoubleMu_15_7_Mass_Min1(); }
    const bool &L1_DoubleMu_15_7_SQ() { return nt.L1_DoubleMu_15_7_SQ(); }
    const bool &L1_DoubleMu_15_7_SQ_Mass_Min4() { return nt.L1_DoubleMu_15_7_SQ_Mass_Min4(); }
    const bool &L1_DoubleMu_20_2_SQ_Mass_Max20() { return nt.L1_DoubleMu_20_2_SQ_Mass_Max20(); }
    const bool &L1_DoubleTau50er() { return nt.L1_DoubleTau50er(); }
    const bool &L1_DoubleTau50er2p1() { return nt.L1_DoubleTau50er2p1(); }
    const bool &L1_DoubleTau70er() { return nt.L1_DoubleTau70er(); }
    const bool &L1_DoubleTau70er2p1() { return nt.L1_DoubleTau70er2p1(); }
    const bool &L1_EG25er2p1_HTT125er() { return nt.L1_EG25er2p1_HTT125er(); }
    const bool &L1_EG25er_HTT125() { return nt.L1_EG25er_HTT125(); }
    const bool &L1_EG27er2p1_HTT200er() { return nt.L1_EG27er2p1_HTT200er(); }
    const bool &L1_EG27er_HTT200() { return nt.L1_EG27er_HTT200(); }
    const bool &L1_EG40er2p1_Tau20er2p1_dR_Min0p3() { return nt.L1_EG40er2p1_Tau20er2p1_dR_Min0p3(); }
    const bool &L1_ETM100() { return nt.L1_ETM100(); }
    const bool &L1_ETM100_Jet60_dPhi_Min0p4() { return nt.L1_ETM100_Jet60_dPhi_Min0p4(); }
    const bool &L1_ETM105() { return nt.L1_ETM105(); }
    const bool &L1_ETM110() { return nt.L1_ETM110(); }
    const bool &L1_ETM110_Jet60_dPhi_Min0p4() { return nt.L1_ETM110_Jet60_dPhi_Min0p4(); }
    const bool &L1_ETM115() { return nt.L1_ETM115(); }
    const bool &L1_ETM120() { return nt.L1_ETM120(); }
    const bool &L1_ETM150() { return nt.L1_ETM150(); }
    const bool &L1_ETM30() { return nt.L1_ETM30(); }
    const bool &L1_ETM40() { return nt.L1_ETM40(); }
    const bool &L1_ETM50() { return nt.L1_ETM50(); }
    const bool &L1_ETM60() { return nt.L1_ETM60(); }
    const bool &L1_ETM60_Jet60_dPhi_Min0p4() { return nt.L1_ETM60_Jet60_dPhi_Min0p4(); }
    const bool &L1_ETM70() { return nt.L1_ETM70(); }
    const bool &L1_ETM70_Jet60_dPhi_Min0p4() { return nt.L1_ETM70_Jet60_dPhi_Min0p4(); }
    const bool &L1_ETM75() { return nt.L1_ETM75(); }
    const bool &L1_ETM75_Jet60_dPhi_Min0p4() { return nt.L1_ETM75_Jet60_dPhi_Min0p4(); }
    const bool &L1_ETM80() { return nt.L1_ETM80(); }
    const bool &L1_ETM80_Jet60_dPhi_Min0p4() { return nt.L1_ETM80_Jet60_dPhi_Min0p4(); }
    const bool &L1_ETM85() { return nt.L1_ETM85(); }
    const bool &L1_ETM90() { return nt.L1_ETM90(); }
    const bool &L1_ETM90_Jet60_dPhi_Min0p4() { return nt.L1_ETM90_Jet60_dPhi_Min0p4(); }
    const bool &L1_ETM95() { return nt.L1_ETM95(); }
    const bool &L1_ETMHF100() { return nt.L1_ETMHF100(); }
    const bool &L1_ETMHF100_HTT60() { return nt.L1_ETMHF100_HTT60(); }
    const bool &L1_ETMHF100_HTT60er() { return nt.L1_ETMHF100_HTT60er(); }
    const bool &L1_ETMHF100_Jet60_OR_DiJet30woTT28() { return nt.L1_ETMHF100_Jet60_OR_DiJet30woTT28(); }
    const bool &L1_ETMHF100_Jet60_OR_DoubleJet30() { return nt.L1_ETMHF100_Jet60_OR_DoubleJet30(); }
    const bool &L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30() { return nt.L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30(); }
    const bool &L1_ETMHF105_Jet60_OR_DoubleJet30() { return nt.L1_ETMHF105_Jet60_OR_DoubleJet30(); }
    const bool &L1_ETMHF110() { return nt.L1_ETMHF110(); }
    const bool &L1_ETMHF110_HTT60() { return nt.L1_ETMHF110_HTT60(); }
    const bool &L1_ETMHF110_HTT60er() { return nt.L1_ETMHF110_HTT60er(); }
    const bool &L1_ETMHF110_HTT60er_NotSecondBunchInTrain() { return nt.L1_ETMHF110_HTT60er_NotSecondBunchInTrain(); }
    const bool &L1_ETMHF110_Jet60_OR_DiJet30woTT28() { return nt.L1_ETMHF110_Jet60_OR_DiJet30woTT28(); }
    const bool &L1_ETMHF110_Jet60_OR_DoubleJet30() { return nt.L1_ETMHF110_Jet60_OR_DoubleJet30(); }
    const bool &L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30() { return nt.L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30(); }
    const bool &L1_ETMHF115_Jet60_OR_DoubleJet30() { return nt.L1_ETMHF115_Jet60_OR_DoubleJet30(); }
    const bool &L1_ETMHF120() { return nt.L1_ETMHF120(); }
    const bool &L1_ETMHF120_HTT60() { return nt.L1_ETMHF120_HTT60(); }
    const bool &L1_ETMHF120_HTT60er() { return nt.L1_ETMHF120_HTT60er(); }
    const bool &L1_ETMHF120_Jet60_OR_DiJet30woTT28() { return nt.L1_ETMHF120_Jet60_OR_DiJet30woTT28(); }
    const bool &L1_ETMHF120_Jet60_OR_DoubleJet30() { return nt.L1_ETMHF120_Jet60_OR_DoubleJet30(); }
    const bool &L1_ETMHF120_NotSecondBunchInTrain() { return nt.L1_ETMHF120_NotSecondBunchInTrain(); }
    const bool &L1_ETMHF130() { return nt.L1_ETMHF130(); }
    const bool &L1_ETMHF130_HTT60er() { return nt.L1_ETMHF130_HTT60er(); }
    const bool &L1_ETMHF140() { return nt.L1_ETMHF140(); }
    const bool &L1_ETMHF150() { return nt.L1_ETMHF150(); }
    const bool &L1_ETMHF70() { return nt.L1_ETMHF70(); }
    const bool &L1_ETMHF70_HTT60er() { return nt.L1_ETMHF70_HTT60er(); }
    const bool &L1_ETMHF70_Jet60_OR_DiJet30woTT28() { return nt.L1_ETMHF70_Jet60_OR_DiJet30woTT28(); }
    const bool &L1_ETMHF70_Jet60_OR_DoubleJet30() { return nt.L1_ETMHF70_Jet60_OR_DoubleJet30(); }
    const bool &L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30() { return nt.L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30(); }
    const bool &L1_ETMHF75_Jet60_OR_DoubleJet30() { return nt.L1_ETMHF75_Jet60_OR_DoubleJet30(); }
    const bool &L1_ETMHF80() { return nt.L1_ETMHF80(); }
    const bool &L1_ETMHF80_HTT60() { return nt.L1_ETMHF80_HTT60(); }
    const bool &L1_ETMHF80_HTT60er() { return nt.L1_ETMHF80_HTT60er(); }
    const bool &L1_ETMHF80_Jet60_OR_DiJet30woTT28() { return nt.L1_ETMHF80_Jet60_OR_DiJet30woTT28(); }
    const bool &L1_ETMHF80_Jet60_OR_DoubleJet30() { return nt.L1_ETMHF80_Jet60_OR_DoubleJet30(); }
    const bool &L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30() { return nt.L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30(); }
    const bool &L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1() { return nt.L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1(); }
    const bool &L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6() { return nt.L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6(); }
    const bool &L1_ETMHF85_Jet60_OR_DoubleJet30() { return nt.L1_ETMHF85_Jet60_OR_DoubleJet30(); }
    const bool &L1_ETMHF90() { return nt.L1_ETMHF90(); }
    const bool &L1_ETMHF90_HTT60() { return nt.L1_ETMHF90_HTT60(); }
    const bool &L1_ETMHF90_HTT60er() { return nt.L1_ETMHF90_HTT60er(); }
    const bool &L1_ETMHF90_Jet60_OR_DiJet30woTT28() { return nt.L1_ETMHF90_Jet60_OR_DiJet30woTT28(); }
    const bool &L1_ETMHF90_Jet60_OR_DoubleJet30() { return nt.L1_ETMHF90_Jet60_OR_DoubleJet30(); }
    const bool &L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30() { return nt.L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30(); }
    const bool &L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1() { return nt.L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1(); }
    const bool &L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6() { return nt.L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6(); }
    const bool &L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1() { return nt.L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1(); }
    const bool &L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6() { return nt.L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6(); }
    const bool &L1_ETMHF95_Jet60_OR_DoubleJet30() { return nt.L1_ETMHF95_Jet60_OR_DoubleJet30(); }
    const bool &L1_ETT100_BptxAND() { return nt.L1_ETT100_BptxAND(); }
    const bool &L1_ETT110_BptxAND() { return nt.L1_ETT110_BptxAND(); }
    const bool &L1_ETT1200() { return nt.L1_ETT1200(); }
    const bool &L1_ETT15_BptxAND() { return nt.L1_ETT15_BptxAND(); }
    const bool &L1_ETT1600() { return nt.L1_ETT1600(); }
    const bool &L1_ETT2000() { return nt.L1_ETT2000(); }
    const bool &L1_ETT25() { return nt.L1_ETT25(); }
    const bool &L1_ETT25_BptxAND() { return nt.L1_ETT25_BptxAND(); }
    const bool &L1_ETT35_BptxAND() { return nt.L1_ETT35_BptxAND(); }
    const bool &L1_ETT40() { return nt.L1_ETT40(); }
    const bool &L1_ETT40_BptxAND() { return nt.L1_ETT40_BptxAND(); }
    const bool &L1_ETT50_BptxAND() { return nt.L1_ETT50_BptxAND(); }
    const bool &L1_ETT55_BptxAND() { return nt.L1_ETT55_BptxAND(); }
    const bool &L1_ETT60() { return nt.L1_ETT60(); }
    const bool &L1_ETT60_BptxAND() { return nt.L1_ETT60_BptxAND(); }
    const bool &L1_ETT70_BptxAND() { return nt.L1_ETT70_BptxAND(); }
    const bool &L1_ETT75_BptxAND() { return nt.L1_ETT75_BptxAND(); }
    const bool &L1_ETT80_BptxAND() { return nt.L1_ETT80_BptxAND(); }
    const bool &L1_ETT85_BptxAND() { return nt.L1_ETT85_BptxAND(); }
    const bool &L1_ETT90_BptxAND() { return nt.L1_ETT90_BptxAND(); }
    const bool &L1_ETT95_BptxAND() { return nt.L1_ETT95_BptxAND(); }
    const bool &L1_FirstBunchAfterTrain() { return nt.L1_FirstBunchAfterTrain(); }
    const bool &L1_FirstBunchBeforeTrain() { return nt.L1_FirstBunchBeforeTrain(); }
    const bool &L1_FirstBunchInTrain() { return nt.L1_FirstBunchInTrain(); }
    const bool &L1_FirstCollisionInOrbit() { return nt.L1_FirstCollisionInOrbit(); }
    const bool &L1_FirstCollisionInTrain() { return nt.L1_FirstCollisionInTrain(); }
    const bool &L1_HCAL_LaserMon_Trig() { return nt.L1_HCAL_LaserMon_Trig(); }
    const bool &L1_HCAL_LaserMon_Veto() { return nt.L1_HCAL_LaserMon_Veto(); }
    const bool &L1_HTM100() { return nt.L1_HTM100(); }
    const bool &L1_HTM120() { return nt.L1_HTM120(); }
    const bool &L1_HTM130() { return nt.L1_HTM130(); }
    const bool &L1_HTM140() { return nt.L1_HTM140(); }
    const bool &L1_HTM150() { return nt.L1_HTM150(); }
    const bool &L1_HTM50() { return nt.L1_HTM50(); }
    const bool &L1_HTM60_HTT260() { return nt.L1_HTM60_HTT260(); }
    const bool &L1_HTM70() { return nt.L1_HTM70(); }
    const bool &L1_HTM80() { return nt.L1_HTM80(); }
    const bool &L1_HTM80_HTT220() { return nt.L1_HTM80_HTT220(); }
    const bool &L1_HTT120() { return nt.L1_HTT120(); }
    const bool &L1_HTT120_SingleLLPJet40() { return nt.L1_HTT120_SingleLLPJet40(); }
    const bool &L1_HTT120er() { return nt.L1_HTT120er(); }
    const bool &L1_HTT160() { return nt.L1_HTT160(); }
    const bool &L1_HTT160_SingleLLPJet50() { return nt.L1_HTT160_SingleLLPJet50(); }
    const bool &L1_HTT160er() { return nt.L1_HTT160er(); }
    const bool &L1_HTT200() { return nt.L1_HTT200(); }
    const bool &L1_HTT200_SingleLLPJet60() { return nt.L1_HTT200_SingleLLPJet60(); }
    const bool &L1_HTT200er() { return nt.L1_HTT200er(); }
    const bool &L1_HTT220() { return nt.L1_HTT220(); }
    const bool &L1_HTT220er() { return nt.L1_HTT220er(); }
    const bool &L1_HTT240() { return nt.L1_HTT240(); }
    const bool &L1_HTT240_SingleLLPJet70() { return nt.L1_HTT240_SingleLLPJet70(); }
    const bool &L1_HTT240er() { return nt.L1_HTT240er(); }
    const bool &L1_HTT250er_QuadJet_70_55_40_35_er2p5() { return nt.L1_HTT250er_QuadJet_70_55_40_35_er2p5(); }
    const bool &L1_HTT255() { return nt.L1_HTT255(); }
    const bool &L1_HTT255er() { return nt.L1_HTT255er(); }
    const bool &L1_HTT270() { return nt.L1_HTT270(); }
    const bool &L1_HTT270er() { return nt.L1_HTT270er(); }
    const bool &L1_HTT280() { return nt.L1_HTT280(); }
    const bool &L1_HTT280er() { return nt.L1_HTT280er(); }
    const bool &L1_HTT280er_QuadJet_70_55_40_35_er2p4() { return nt.L1_HTT280er_QuadJet_70_55_40_35_er2p4(); }
    const bool &L1_HTT280er_QuadJet_70_55_40_35_er2p5() { return nt.L1_HTT280er_QuadJet_70_55_40_35_er2p5(); }
    const bool &L1_HTT300() { return nt.L1_HTT300(); }
    const bool &L1_HTT300er() { return nt.L1_HTT300er(); }
    const bool &L1_HTT300er_QuadJet_70_55_40_35_er2p5() { return nt.L1_HTT300er_QuadJet_70_55_40_35_er2p5(); }
    const bool &L1_HTT320() { return nt.L1_HTT320(); }
    const bool &L1_HTT320er() { return nt.L1_HTT320er(); }
    const bool &L1_HTT320er_QuadJet_70_55_40_40_er2p4() { return nt.L1_HTT320er_QuadJet_70_55_40_40_er2p4(); }
    const bool &L1_HTT320er_QuadJet_70_55_40_40_er2p5() { return nt.L1_HTT320er_QuadJet_70_55_40_40_er2p5(); }
    const bool &L1_HTT320er_QuadJet_70_55_45_45_er2p5() { return nt.L1_HTT320er_QuadJet_70_55_45_45_er2p5(); }
    const bool &L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3() { return nt.L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3(); }
    const bool &L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3() { return nt.L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3(); }
    const bool &L1_HTT340er() { return nt.L1_HTT340er(); }
    const bool &L1_HTT340er_QuadJet_70_55_40_40_er2p5() { return nt.L1_HTT340er_QuadJet_70_55_40_40_er2p5(); }
    const bool &L1_HTT340er_QuadJet_70_55_45_45_er2p5() { return nt.L1_HTT340er_QuadJet_70_55_45_45_er2p5(); }
    const bool &L1_HTT360er() { return nt.L1_HTT360er(); }
    const bool &L1_HTT380er() { return nt.L1_HTT380er(); }
    const bool &L1_HTT400er() { return nt.L1_HTT400er(); }
    const bool &L1_HTT450er() { return nt.L1_HTT450er(); }
    const bool &L1_HTT500er() { return nt.L1_HTT500er(); }
    const bool &L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2() { return nt.L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2(); }
    const bool &L1_IsoEG18er_IsoTau24er_dEta_Min0p2() { return nt.L1_IsoEG18er_IsoTau24er_dEta_Min0p2(); }
    const bool &L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2() { return nt.L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2(); }
    const bool &L1_IsoEG20er_IsoTau25er_dEta_Min0p2() { return nt.L1_IsoEG20er_IsoTau25er_dEta_Min0p2(); }
    const bool &L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2() { return nt.L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2(); }
    const bool &L1_IsoEG22er_IsoTau26er_dEta_Min0p2() { return nt.L1_IsoEG22er_IsoTau26er_dEta_Min0p2(); }
    const bool &L1_IsoEG22er_Tau20er_dEta_Min0p2() { return nt.L1_IsoEG22er_Tau20er_dEta_Min0p2(); }
    const bool &L1_IsoEG24er2p1_HTT100er() { return nt.L1_IsoEG24er2p1_HTT100er(); }
    const bool &L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3() { return nt.L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3(); }
    const bool &L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0() { return nt.L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0(); }
    const bool &L1_IsoEG26er2p1_HTT100er() { return nt.L1_IsoEG26er2p1_HTT100er(); }
    const bool &L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3() { return nt.L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3(); }
    const bool &L1_IsoEG28er2p1_HTT100er() { return nt.L1_IsoEG28er2p1_HTT100er(); }
    const bool &L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3() { return nt.L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3(); }
    const bool &L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3() { return nt.L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3(); }
    const bool &L1_IsoEG32er2p5_Mt40() { return nt.L1_IsoEG32er2p5_Mt40(); }
    const bool &L1_IsoEG32er2p5_Mt44() { return nt.L1_IsoEG32er2p5_Mt44(); }
    const bool &L1_IsoEG32er2p5_Mt48() { return nt.L1_IsoEG32er2p5_Mt48(); }
    const bool &L1_IsoEG33_Mt40() { return nt.L1_IsoEG33_Mt40(); }
    const bool &L1_IsoEG33_Mt44() { return nt.L1_IsoEG33_Mt44(); }
    const bool &L1_IsoEG33_Mt48() { return nt.L1_IsoEG33_Mt48(); }
    const bool &L1_IsoTau40er2p1_ETMHF100() { return nt.L1_IsoTau40er2p1_ETMHF100(); }
    const bool &L1_IsoTau40er2p1_ETMHF110() { return nt.L1_IsoTau40er2p1_ETMHF110(); }
    const bool &L1_IsoTau40er2p1_ETMHF120() { return nt.L1_IsoTau40er2p1_ETMHF120(); }
    const bool &L1_IsoTau40er2p1_ETMHF80() { return nt.L1_IsoTau40er2p1_ETMHF80(); }
    const bool &L1_IsoTau40er2p1_ETMHF90() { return nt.L1_IsoTau40er2p1_ETMHF90(); }
    const bool &L1_IsoTau40er_ETM100() { return nt.L1_IsoTau40er_ETM100(); }
    const bool &L1_IsoTau40er_ETM105() { return nt.L1_IsoTau40er_ETM105(); }
    const bool &L1_IsoTau40er_ETM110() { return nt.L1_IsoTau40er_ETM110(); }
    const bool &L1_IsoTau40er_ETM115() { return nt.L1_IsoTau40er_ETM115(); }
    const bool &L1_IsoTau40er_ETM120() { return nt.L1_IsoTau40er_ETM120(); }
    const bool &L1_IsoTau40er_ETM80() { return nt.L1_IsoTau40er_ETM80(); }
    const bool &L1_IsoTau40er_ETM85() { return nt.L1_IsoTau40er_ETM85(); }
    const bool &L1_IsoTau40er_ETM90() { return nt.L1_IsoTau40er_ETM90(); }
    const bool &L1_IsoTau40er_ETM95() { return nt.L1_IsoTau40er_ETM95(); }
    const bool &L1_IsoTau40er_ETMHF100() { return nt.L1_IsoTau40er_ETMHF100(); }
    const bool &L1_IsoTau40er_ETMHF110() { return nt.L1_IsoTau40er_ETMHF110(); }
    const bool &L1_IsoTau40er_ETMHF120() { return nt.L1_IsoTau40er_ETMHF120(); }
    const bool &L1_IsoTau40er_ETMHF80() { return nt.L1_IsoTau40er_ETMHF80(); }
    const bool &L1_IsoTau40er_ETMHF90() { return nt.L1_IsoTau40er_ETMHF90(); }
    const bool &L1_IsoTau52er2p1_QuadJet36er2p5() { return nt.L1_IsoTau52er2p1_QuadJet36er2p5(); }
    const bool &L1_IsolatedBunch() { return nt.L1_IsolatedBunch(); }
    const bool &L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0() { return nt.L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0(); }
    const bool &L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0() { return nt.L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0(); }
    const bool &L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0() { return nt.L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0(); }
    const bool &L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0() { return nt.L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0(); }
    const bool &L1_LastBunchInTrain() { return nt.L1_LastBunchInTrain(); }
    const bool &L1_LastCollisionInTrain() { return nt.L1_LastCollisionInTrain(); }
    const bool &L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3() { return nt.L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3(); }
    const bool &L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3() { return nt.L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3(); }
    const bool &L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3() { return nt.L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3(); }
    const bool &L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3() { return nt.L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3(); }
    const bool &L1_LooseIsoEG24er2p1_HTT100er() { return nt.L1_LooseIsoEG24er2p1_HTT100er(); }
    const bool &L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3() { return nt.L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3(); }
    const bool &L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3() { return nt.L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3(); }
    const bool &L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3() { return nt.L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3(); }
    const bool &L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7() { return nt.L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7(); }
    const bool &L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0() { return nt.L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0(); }
    const bool &L1_LooseIsoEG26er2p1_HTT100er() { return nt.L1_LooseIsoEG26er2p1_HTT100er(); }
    const bool &L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3() { return nt.L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3(); }
    const bool &L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3() { return nt.L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3(); }
    const bool &L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3() { return nt.L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3(); }
    const bool &L1_LooseIsoEG28er2p1_HTT100er() { return nt.L1_LooseIsoEG28er2p1_HTT100er(); }
    const bool &L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3() { return nt.L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3(); }
    const bool &L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3() { return nt.L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3(); }
    const bool &L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3() { return nt.L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3(); }
    const bool &L1_LooseIsoEG30er2p1_HTT100er() { return nt.L1_LooseIsoEG30er2p1_HTT100er(); }
    const bool &L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3() { return nt.L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3(); }
    const bool &L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3() { return nt.L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3(); }
    const bool &L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3() { return nt.L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3(); }
    const bool &L1_MU20_EG15() { return nt.L1_MU20_EG15(); }
    const bool &L1_MinimumBiasHF0() { return nt.L1_MinimumBiasHF0(); }
    const bool &L1_MinimumBiasHF0_AND() { return nt.L1_MinimumBiasHF0_AND(); }
    const bool &L1_MinimumBiasHF0_AND_BptxAND() { return nt.L1_MinimumBiasHF0_AND_BptxAND(); }
    const bool &L1_MinimumBiasHF0_OR() { return nt.L1_MinimumBiasHF0_OR(); }
    const bool &L1_MinimumBiasHF0_OR_BptxAND() { return nt.L1_MinimumBiasHF0_OR_BptxAND(); }
    const bool &L1_MinimumBiasHF1_AND() { return nt.L1_MinimumBiasHF1_AND(); }
    const bool &L1_MinimumBiasHF1_AND_BptxAND() { return nt.L1_MinimumBiasHF1_AND_BptxAND(); }
    const bool &L1_MinimumBiasHF1_OR() { return nt.L1_MinimumBiasHF1_OR(); }
    const bool &L1_MinimumBiasHF1_OR_BptxAND() { return nt.L1_MinimumBiasHF1_OR_BptxAND(); }
    const bool &L1_Mu0er_ETM40() { return nt.L1_Mu0er_ETM40(); }
    const bool &L1_Mu0er_ETM55() { return nt.L1_Mu0er_ETM55(); }
    const bool &L1_Mu10er2p1_ETM30() { return nt.L1_Mu10er2p1_ETM30(); }
    const bool &L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6() { return nt.L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6(); }
    const bool &L1_Mu10er_ETM30() { return nt.L1_Mu10er_ETM30(); }
    const bool &L1_Mu10er_ETM50() { return nt.L1_Mu10er_ETM50(); }
    const bool &L1_Mu12_EG10() { return nt.L1_Mu12_EG10(); }
    const bool &L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6() { return nt.L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6(); }
    const bool &L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6() { return nt.L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6(); }
    const bool &L1_Mu14er2p1_ETM30() { return nt.L1_Mu14er2p1_ETM30(); }
    const bool &L1_Mu14er_ETM30() { return nt.L1_Mu14er_ETM30(); }
    const bool &L1_Mu15_HTT100er() { return nt.L1_Mu15_HTT100er(); }
    const bool &L1_Mu16er2p1_Tau20er2p1() { return nt.L1_Mu16er2p1_Tau20er2p1(); }
    const bool &L1_Mu16er2p1_Tau24er2p1() { return nt.L1_Mu16er2p1_Tau24er2p1(); }
    const bool &L1_Mu16er_Tau20er() { return nt.L1_Mu16er_Tau20er(); }
    const bool &L1_Mu16er_Tau24er() { return nt.L1_Mu16er_Tau24er(); }
    const bool &L1_Mu18_HTT100er() { return nt.L1_Mu18_HTT100er(); }
    const bool &L1_Mu18_Jet24er2p7() { return nt.L1_Mu18_Jet24er2p7(); }
    const bool &L1_Mu18_Jet24er3p0() { return nt.L1_Mu18_Jet24er3p0(); }
    const bool &L1_Mu18er2p1_IsoTau26er2p1() { return nt.L1_Mu18er2p1_IsoTau26er2p1(); }
    const bool &L1_Mu18er2p1_Tau20er2p1() { return nt.L1_Mu18er2p1_Tau20er2p1(); }
    const bool &L1_Mu18er2p1_Tau24er2p1() { return nt.L1_Mu18er2p1_Tau24er2p1(); }
    const bool &L1_Mu18er2p1_Tau26er2p1() { return nt.L1_Mu18er2p1_Tau26er2p1(); }
    const bool &L1_Mu18er2p1_Tau26er2p1_Jet55() { return nt.L1_Mu18er2p1_Tau26er2p1_Jet55(); }
    const bool &L1_Mu18er2p1_Tau26er2p1_Jet70() { return nt.L1_Mu18er2p1_Tau26er2p1_Jet70(); }
    const bool &L1_Mu18er_IsoTau26er() { return nt.L1_Mu18er_IsoTau26er(); }
    const bool &L1_Mu18er_Tau20er() { return nt.L1_Mu18er_Tau20er(); }
    const bool &L1_Mu18er_Tau24er() { return nt.L1_Mu18er_Tau24er(); }
    const bool &L1_Mu20_EG10() { return nt.L1_Mu20_EG10(); }
    const bool &L1_Mu20_EG10er2p5() { return nt.L1_Mu20_EG10er2p5(); }
    const bool &L1_Mu20_EG17() { return nt.L1_Mu20_EG17(); }
    const bool &L1_Mu20_IsoEG6() { return nt.L1_Mu20_IsoEG6(); }
    const bool &L1_Mu20_LooseIsoEG6() { return nt.L1_Mu20_LooseIsoEG6(); }
    const bool &L1_Mu20er2p1_IsoTau26er2p1() { return nt.L1_Mu20er2p1_IsoTau26er2p1(); }
    const bool &L1_Mu20er2p1_IsoTau27er2p1() { return nt.L1_Mu20er2p1_IsoTau27er2p1(); }
    const bool &L1_Mu20er_IsoTau26er() { return nt.L1_Mu20er_IsoTau26er(); }
    const bool &L1_Mu22er2p1_IsoTau28er2p1() { return nt.L1_Mu22er2p1_IsoTau28er2p1(); }
    const bool &L1_Mu22er2p1_IsoTau30er2p1() { return nt.L1_Mu22er2p1_IsoTau30er2p1(); }
    const bool &L1_Mu22er2p1_IsoTau32er2p1() { return nt.L1_Mu22er2p1_IsoTau32er2p1(); }
    const bool &L1_Mu22er2p1_IsoTau33er2p1() { return nt.L1_Mu22er2p1_IsoTau33er2p1(); }
    const bool &L1_Mu22er2p1_IsoTau34er2p1() { return nt.L1_Mu22er2p1_IsoTau34er2p1(); }
    const bool &L1_Mu22er2p1_IsoTau35er2p1() { return nt.L1_Mu22er2p1_IsoTau35er2p1(); }
    const bool &L1_Mu22er2p1_IsoTau36er2p1() { return nt.L1_Mu22er2p1_IsoTau36er2p1(); }
    const bool &L1_Mu22er2p1_IsoTau38er2p1() { return nt.L1_Mu22er2p1_IsoTau38er2p1(); }
    const bool &L1_Mu22er2p1_IsoTau40er2p1() { return nt.L1_Mu22er2p1_IsoTau40er2p1(); }
    const bool &L1_Mu22er2p1_Tau50er2p1() { return nt.L1_Mu22er2p1_Tau50er2p1(); }
    const bool &L1_Mu22er2p1_Tau70er2p1() { return nt.L1_Mu22er2p1_Tau70er2p1(); }
    const bool &L1_Mu22er_IsoTau26er() { return nt.L1_Mu22er_IsoTau26er(); }
    const bool &L1_Mu23_EG10() { return nt.L1_Mu23_EG10(); }
    const bool &L1_Mu23_IsoEG10() { return nt.L1_Mu23_IsoEG10(); }
    const bool &L1_Mu23_LooseIsoEG10() { return nt.L1_Mu23_LooseIsoEG10(); }
    const bool &L1_Mu25er_IsoTau26er() { return nt.L1_Mu25er_IsoTau26er(); }
    const bool &L1_Mu3_Jet120er2p5_dR_Max0p4() { return nt.L1_Mu3_Jet120er2p5_dR_Max0p4(); }
    const bool &L1_Mu3_Jet120er2p5_dR_Max0p8() { return nt.L1_Mu3_Jet120er2p5_dR_Max0p8(); }
    const bool &L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4() { return nt.L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4(); }
    const bool &L1_Mu3_Jet16er2p5_dR_Max0p4() { return nt.L1_Mu3_Jet16er2p5_dR_Max0p4(); }
    const bool &L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4() { return nt.L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4(); }
    const bool &L1_Mu3_Jet30er2p5() { return nt.L1_Mu3_Jet30er2p5(); }
    const bool &L1_Mu3_Jet35er2p5_dR_Max0p4() { return nt.L1_Mu3_Jet35er2p5_dR_Max0p4(); }
    const bool &L1_Mu3_Jet60er2p5_dR_Max0p4() { return nt.L1_Mu3_Jet60er2p5_dR_Max0p4(); }
    const bool &L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4() { return nt.L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4(); }
    const bool &L1_Mu3_Jet80er2p5_dR_Max0p4() { return nt.L1_Mu3_Jet80er2p5_dR_Max0p4(); }
    const bool &L1_Mu3_JetC120() { return nt.L1_Mu3_JetC120(); }
    const bool &L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4() { return nt.L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4(); }
    const bool &L1_Mu3_JetC16() { return nt.L1_Mu3_JetC16(); }
    const bool &L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4() { return nt.L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4(); }
    const bool &L1_Mu3_JetC60() { return nt.L1_Mu3_JetC60(); }
    const bool &L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4() { return nt.L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4(); }
    const bool &L1_Mu3er1p5_Jet100er2p5_ETMHF30() { return nt.L1_Mu3er1p5_Jet100er2p5_ETMHF30(); }
    const bool &L1_Mu3er1p5_Jet100er2p5_ETMHF40() { return nt.L1_Mu3er1p5_Jet100er2p5_ETMHF40(); }
    const bool &L1_Mu3er1p5_Jet100er2p5_ETMHF50() { return nt.L1_Mu3er1p5_Jet100er2p5_ETMHF50(); }
    const bool &L1_Mu5_EG15() { return nt.L1_Mu5_EG15(); }
    const bool &L1_Mu5_EG20() { return nt.L1_Mu5_EG20(); }
    const bool &L1_Mu5_EG23() { return nt.L1_Mu5_EG23(); }
    const bool &L1_Mu5_EG23er2p5() { return nt.L1_Mu5_EG23er2p5(); }
    const bool &L1_Mu5_IsoEG18() { return nt.L1_Mu5_IsoEG18(); }
    const bool &L1_Mu5_IsoEG20() { return nt.L1_Mu5_IsoEG20(); }
    const bool &L1_Mu5_LooseIsoEG18() { return nt.L1_Mu5_LooseIsoEG18(); }
    const bool &L1_Mu5_LooseIsoEG20() { return nt.L1_Mu5_LooseIsoEG20(); }
    const bool &L1_Mu5_LooseIsoEG20er2p5() { return nt.L1_Mu5_LooseIsoEG20er2p5(); }
    const bool &L1_Mu6_DoubleEG10() { return nt.L1_Mu6_DoubleEG10(); }
    const bool &L1_Mu6_DoubleEG10er2p5() { return nt.L1_Mu6_DoubleEG10er2p5(); }
    const bool &L1_Mu6_DoubleEG12er2p5() { return nt.L1_Mu6_DoubleEG12er2p5(); }
    const bool &L1_Mu6_DoubleEG15er2p5() { return nt.L1_Mu6_DoubleEG15er2p5(); }
    const bool &L1_Mu6_DoubleEG17() { return nt.L1_Mu6_DoubleEG17(); }
    const bool &L1_Mu6_DoubleEG17er2p5() { return nt.L1_Mu6_DoubleEG17er2p5(); }
    const bool &L1_Mu6_HTT200() { return nt.L1_Mu6_HTT200(); }
    const bool &L1_Mu6_HTT200er() { return nt.L1_Mu6_HTT200er(); }
    const bool &L1_Mu6_HTT240er() { return nt.L1_Mu6_HTT240er(); }
    const bool &L1_Mu6_HTT250er() { return nt.L1_Mu6_HTT250er(); }
    const bool &L1_Mu7_EG20er2p5() { return nt.L1_Mu7_EG20er2p5(); }
    const bool &L1_Mu7_EG23() { return nt.L1_Mu7_EG23(); }
    const bool &L1_Mu7_EG23er2p5() { return nt.L1_Mu7_EG23er2p5(); }
    const bool &L1_Mu7_IsoEG20() { return nt.L1_Mu7_IsoEG20(); }
    const bool &L1_Mu7_IsoEG23() { return nt.L1_Mu7_IsoEG23(); }
    const bool &L1_Mu7_LooseIsoEG20() { return nt.L1_Mu7_LooseIsoEG20(); }
    const bool &L1_Mu7_LooseIsoEG20er2p5() { return nt.L1_Mu7_LooseIsoEG20er2p5(); }
    const bool &L1_Mu7_LooseIsoEG23() { return nt.L1_Mu7_LooseIsoEG23(); }
    const bool &L1_Mu7_LooseIsoEG23er2p5() { return nt.L1_Mu7_LooseIsoEG23er2p5(); }
    const bool &L1_Mu8_HTT150() { return nt.L1_Mu8_HTT150(); }
    const bool &L1_Mu8_HTT150er() { return nt.L1_Mu8_HTT150er(); }
    const bool &L1_NotBptxOR() { return nt.L1_NotBptxOR(); }
    const bool &L1_QuadJet36er2p5_IsoTau52er2p1() { return nt.L1_QuadJet36er2p5_IsoTau52er2p1(); }
    const bool &L1_QuadJet36er2p7_IsoTau52er2p1() { return nt.L1_QuadJet36er2p7_IsoTau52er2p1(); }
    const bool &L1_QuadJet36er2p7_Tau52() { return nt.L1_QuadJet36er2p7_Tau52(); }
    const bool &L1_QuadJet36er3p0_IsoTau52er2p1() { return nt.L1_QuadJet36er3p0_IsoTau52er2p1(); }
    const bool &L1_QuadJet36er3p0_Tau52() { return nt.L1_QuadJet36er3p0_Tau52(); }
    const bool &L1_QuadJet40er2p7() { return nt.L1_QuadJet40er2p7(); }
    const bool &L1_QuadJet40er3p0() { return nt.L1_QuadJet40er3p0(); }
    const bool &L1_QuadJet50er2p7() { return nt.L1_QuadJet50er2p7(); }
    const bool &L1_QuadJet50er3p0() { return nt.L1_QuadJet50er3p0(); }
    const bool &L1_QuadJet60er2p5() { return nt.L1_QuadJet60er2p5(); }
    const bool &L1_QuadJet60er2p7() { return nt.L1_QuadJet60er2p7(); }
    const bool &L1_QuadJet60er3p0() { return nt.L1_QuadJet60er3p0(); }
    const bool &L1_QuadJetC36_Tau52() { return nt.L1_QuadJetC36_Tau52(); }
    const bool &L1_QuadJetC40() { return nt.L1_QuadJetC40(); }
    const bool &L1_QuadJetC50() { return nt.L1_QuadJetC50(); }
    const bool &L1_QuadJetC60() { return nt.L1_QuadJetC60(); }
    const bool &L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0() { return nt.L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0(); }
    const bool &L1_QuadMu0() { return nt.L1_QuadMu0(); }
    const bool &L1_QuadMu0_OQ() { return nt.L1_QuadMu0_OQ(); }
    const bool &L1_QuadMu0_SQ() { return nt.L1_QuadMu0_SQ(); }
    const bool &L1_SecondBunchInTrain() { return nt.L1_SecondBunchInTrain(); }
    const bool &L1_SecondLastBunchInTrain() { return nt.L1_SecondLastBunchInTrain(); }
    const bool &L1_SingleEG10() { return nt.L1_SingleEG10(); }
    const bool &L1_SingleEG10er2p5() { return nt.L1_SingleEG10er2p5(); }
    const bool &L1_SingleEG15() { return nt.L1_SingleEG15(); }
    const bool &L1_SingleEG15er2p5() { return nt.L1_SingleEG15er2p5(); }
    const bool &L1_SingleEG18() { return nt.L1_SingleEG18(); }
    const bool &L1_SingleEG24() { return nt.L1_SingleEG24(); }
    const bool &L1_SingleEG26() { return nt.L1_SingleEG26(); }
    const bool &L1_SingleEG26er2p5() { return nt.L1_SingleEG26er2p5(); }
    const bool &L1_SingleEG28() { return nt.L1_SingleEG28(); }
    const bool &L1_SingleEG28_FWD2p5() { return nt.L1_SingleEG28_FWD2p5(); }
    const bool &L1_SingleEG28er1p5() { return nt.L1_SingleEG28er1p5(); }
    const bool &L1_SingleEG28er2p1() { return nt.L1_SingleEG28er2p1(); }
    const bool &L1_SingleEG28er2p5() { return nt.L1_SingleEG28er2p5(); }
    const bool &L1_SingleEG2_BptxAND() { return nt.L1_SingleEG2_BptxAND(); }
    const bool &L1_SingleEG30() { return nt.L1_SingleEG30(); }
    const bool &L1_SingleEG32() { return nt.L1_SingleEG32(); }
    const bool &L1_SingleEG34() { return nt.L1_SingleEG34(); }
    const bool &L1_SingleEG34er2p1() { return nt.L1_SingleEG34er2p1(); }
    const bool &L1_SingleEG34er2p5() { return nt.L1_SingleEG34er2p5(); }
    const bool &L1_SingleEG36() { return nt.L1_SingleEG36(); }
    const bool &L1_SingleEG36er2p1() { return nt.L1_SingleEG36er2p1(); }
    const bool &L1_SingleEG36er2p5() { return nt.L1_SingleEG36er2p5(); }
    const bool &L1_SingleEG38() { return nt.L1_SingleEG38(); }
    const bool &L1_SingleEG38er2p1() { return nt.L1_SingleEG38er2p1(); }
    const bool &L1_SingleEG38er2p5() { return nt.L1_SingleEG38er2p5(); }
    const bool &L1_SingleEG40() { return nt.L1_SingleEG40(); }
    const bool &L1_SingleEG40er2p5() { return nt.L1_SingleEG40er2p5(); }
    const bool &L1_SingleEG42() { return nt.L1_SingleEG42(); }
    const bool &L1_SingleEG42er2p5() { return nt.L1_SingleEG42er2p5(); }
    const bool &L1_SingleEG45() { return nt.L1_SingleEG45(); }
    const bool &L1_SingleEG45er2p5() { return nt.L1_SingleEG45er2p5(); }
    const bool &L1_SingleEG5() { return nt.L1_SingleEG5(); }
    const bool &L1_SingleEG50() { return nt.L1_SingleEG50(); }
    const bool &L1_SingleEG60() { return nt.L1_SingleEG60(); }
    const bool &L1_SingleEG8er2p5() { return nt.L1_SingleEG8er2p5(); }
    const bool &L1_SingleIsoEG18() { return nt.L1_SingleIsoEG18(); }
    const bool &L1_SingleIsoEG18er() { return nt.L1_SingleIsoEG18er(); }
    const bool &L1_SingleIsoEG18er2p1() { return nt.L1_SingleIsoEG18er2p1(); }
    const bool &L1_SingleIsoEG20() { return nt.L1_SingleIsoEG20(); }
    const bool &L1_SingleIsoEG20er() { return nt.L1_SingleIsoEG20er(); }
    const bool &L1_SingleIsoEG20er2p1() { return nt.L1_SingleIsoEG20er2p1(); }
    const bool &L1_SingleIsoEG22() { return nt.L1_SingleIsoEG22(); }
    const bool &L1_SingleIsoEG22er() { return nt.L1_SingleIsoEG22er(); }
    const bool &L1_SingleIsoEG22er2p1() { return nt.L1_SingleIsoEG22er2p1(); }
    const bool &L1_SingleIsoEG24() { return nt.L1_SingleIsoEG24(); }
    const bool &L1_SingleIsoEG24er() { return nt.L1_SingleIsoEG24er(); }
    const bool &L1_SingleIsoEG24er1p5() { return nt.L1_SingleIsoEG24er1p5(); }
    const bool &L1_SingleIsoEG24er2p1() { return nt.L1_SingleIsoEG24er2p1(); }
    const bool &L1_SingleIsoEG26() { return nt.L1_SingleIsoEG26(); }
    const bool &L1_SingleIsoEG26er() { return nt.L1_SingleIsoEG26er(); }
    const bool &L1_SingleIsoEG26er1p5() { return nt.L1_SingleIsoEG26er1p5(); }
    const bool &L1_SingleIsoEG26er2p1() { return nt.L1_SingleIsoEG26er2p1(); }
    const bool &L1_SingleIsoEG26er2p5() { return nt.L1_SingleIsoEG26er2p5(); }
    const bool &L1_SingleIsoEG28() { return nt.L1_SingleIsoEG28(); }
    const bool &L1_SingleIsoEG28_FWD2p5() { return nt.L1_SingleIsoEG28_FWD2p5(); }
    const bool &L1_SingleIsoEG28er() { return nt.L1_SingleIsoEG28er(); }
    const bool &L1_SingleIsoEG28er1p5() { return nt.L1_SingleIsoEG28er1p5(); }
    const bool &L1_SingleIsoEG28er2p1() { return nt.L1_SingleIsoEG28er2p1(); }
    const bool &L1_SingleIsoEG28er2p5() { return nt.L1_SingleIsoEG28er2p5(); }
    const bool &L1_SingleIsoEG30() { return nt.L1_SingleIsoEG30(); }
    const bool &L1_SingleIsoEG30er() { return nt.L1_SingleIsoEG30er(); }
    const bool &L1_SingleIsoEG30er2p1() { return nt.L1_SingleIsoEG30er2p1(); }
    const bool &L1_SingleIsoEG30er2p5() { return nt.L1_SingleIsoEG30er2p5(); }
    const bool &L1_SingleIsoEG32() { return nt.L1_SingleIsoEG32(); }
    const bool &L1_SingleIsoEG32er() { return nt.L1_SingleIsoEG32er(); }
    const bool &L1_SingleIsoEG32er2p1() { return nt.L1_SingleIsoEG32er2p1(); }
    const bool &L1_SingleIsoEG32er2p5() { return nt.L1_SingleIsoEG32er2p5(); }
    const bool &L1_SingleIsoEG33er2p1() { return nt.L1_SingleIsoEG33er2p1(); }
    const bool &L1_SingleIsoEG34() { return nt.L1_SingleIsoEG34(); }
    const bool &L1_SingleIsoEG34er() { return nt.L1_SingleIsoEG34er(); }
    const bool &L1_SingleIsoEG34er2p1() { return nt.L1_SingleIsoEG34er2p1(); }
    const bool &L1_SingleIsoEG34er2p5() { return nt.L1_SingleIsoEG34er2p5(); }
    const bool &L1_SingleIsoEG35() { return nt.L1_SingleIsoEG35(); }
    const bool &L1_SingleIsoEG35er2p1() { return nt.L1_SingleIsoEG35er2p1(); }
    const bool &L1_SingleIsoEG36() { return nt.L1_SingleIsoEG36(); }
    const bool &L1_SingleIsoEG36er2p1() { return nt.L1_SingleIsoEG36er2p1(); }
    const bool &L1_SingleIsoEG37() { return nt.L1_SingleIsoEG37(); }
    const bool &L1_SingleIsoEG38() { return nt.L1_SingleIsoEG38(); }
    const bool &L1_SingleIsoEG38er2p1() { return nt.L1_SingleIsoEG38er2p1(); }
    const bool &L1_SingleIsoEG40() { return nt.L1_SingleIsoEG40(); }
    const bool &L1_SingleIsoEG40er2p1() { return nt.L1_SingleIsoEG40er2p1(); }
    const bool &L1_SingleIsoTau32er2p1() { return nt.L1_SingleIsoTau32er2p1(); }
    const bool &L1_SingleJet10erHE() { return nt.L1_SingleJet10erHE(); }
    const bool &L1_SingleJet12() { return nt.L1_SingleJet12(); }
    const bool &L1_SingleJet120() { return nt.L1_SingleJet120(); }
    const bool &L1_SingleJet120_FWD() { return nt.L1_SingleJet120_FWD(); }
    const bool &L1_SingleJet120_FWD3p0() { return nt.L1_SingleJet120_FWD3p0(); }
    const bool &L1_SingleJet120er2p5() { return nt.L1_SingleJet120er2p5(); }
    const bool &L1_SingleJet12_BptxAND() { return nt.L1_SingleJet12_BptxAND(); }
    const bool &L1_SingleJet12erHE() { return nt.L1_SingleJet12erHE(); }
    const bool &L1_SingleJet140() { return nt.L1_SingleJet140(); }
    const bool &L1_SingleJet140er2p5() { return nt.L1_SingleJet140er2p5(); }
    const bool &L1_SingleJet140er2p5_ETMHF70() { return nt.L1_SingleJet140er2p5_ETMHF70(); }
    const bool &L1_SingleJet140er2p5_ETMHF80() { return nt.L1_SingleJet140er2p5_ETMHF80(); }
    const bool &L1_SingleJet140er2p5_ETMHF90() { return nt.L1_SingleJet140er2p5_ETMHF90(); }
    const bool &L1_SingleJet150() { return nt.L1_SingleJet150(); }
    const bool &L1_SingleJet16() { return nt.L1_SingleJet16(); }
    const bool &L1_SingleJet160() { return nt.L1_SingleJet160(); }
    const bool &L1_SingleJet160er2p5() { return nt.L1_SingleJet160er2p5(); }
    const bool &L1_SingleJet170() { return nt.L1_SingleJet170(); }
    const bool &L1_SingleJet180() { return nt.L1_SingleJet180(); }
    const bool &L1_SingleJet180er2p5() { return nt.L1_SingleJet180er2p5(); }
    const bool &L1_SingleJet20() { return nt.L1_SingleJet20(); }
    const bool &L1_SingleJet200() { return nt.L1_SingleJet200(); }
    const bool &L1_SingleJet20er2p5_NotBptxOR() { return nt.L1_SingleJet20er2p5_NotBptxOR(); }
    const bool &L1_SingleJet20er2p5_NotBptxOR_3BX() { return nt.L1_SingleJet20er2p5_NotBptxOR_3BX(); }
    const bool &L1_SingleJet20er2p7_NotBptxOR() { return nt.L1_SingleJet20er2p7_NotBptxOR(); }
    const bool &L1_SingleJet20er2p7_NotBptxOR_3BX() { return nt.L1_SingleJet20er2p7_NotBptxOR_3BX(); }
    const bool &L1_SingleJet20er3p0_NotBptxOR() { return nt.L1_SingleJet20er3p0_NotBptxOR(); }
    const bool &L1_SingleJet20er3p0_NotBptxOR_3BX() { return nt.L1_SingleJet20er3p0_NotBptxOR_3BX(); }
    const bool &L1_SingleJet35() { return nt.L1_SingleJet35(); }
    const bool &L1_SingleJet35_FWD() { return nt.L1_SingleJet35_FWD(); }
    const bool &L1_SingleJet35_FWD3p0() { return nt.L1_SingleJet35_FWD3p0(); }
    const bool &L1_SingleJet35_HFm() { return nt.L1_SingleJet35_HFm(); }
    const bool &L1_SingleJet35_HFp() { return nt.L1_SingleJet35_HFp(); }
    const bool &L1_SingleJet35er2p5() { return nt.L1_SingleJet35er2p5(); }
    const bool &L1_SingleJet4() { return nt.L1_SingleJet4(); }
    const bool &L1_SingleJet43er2p5_NotBptxOR_3BX() { return nt.L1_SingleJet43er2p5_NotBptxOR_3BX(); }
    const bool &L1_SingleJet43er2p7_NotBptxOR_3BX() { return nt.L1_SingleJet43er2p7_NotBptxOR_3BX(); }
    const bool &L1_SingleJet43er3p0_NotBptxOR_3BX() { return nt.L1_SingleJet43er3p0_NotBptxOR_3BX(); }
    const bool &L1_SingleJet46er2p5_NotBptxOR_3BX() { return nt.L1_SingleJet46er2p5_NotBptxOR_3BX(); }
    const bool &L1_SingleJet46er2p7_NotBptxOR_3BX() { return nt.L1_SingleJet46er2p7_NotBptxOR_3BX(); }
    const bool &L1_SingleJet46er3p0_NotBptxOR_3BX() { return nt.L1_SingleJet46er3p0_NotBptxOR_3BX(); }
    const bool &L1_SingleJet60() { return nt.L1_SingleJet60(); }
    const bool &L1_SingleJet60_FWD() { return nt.L1_SingleJet60_FWD(); }
    const bool &L1_SingleJet60_FWD3p0() { return nt.L1_SingleJet60_FWD3p0(); }
    const bool &L1_SingleJet60_HFm() { return nt.L1_SingleJet60_HFm(); }
    const bool &L1_SingleJet60_HFp() { return nt.L1_SingleJet60_HFp(); }
    const bool &L1_SingleJet60er2p5() { return nt.L1_SingleJet60er2p5(); }
    const bool &L1_SingleJet8() { return nt.L1_SingleJet8(); }
    const bool &L1_SingleJet8_BptxAND() { return nt.L1_SingleJet8_BptxAND(); }
    const bool &L1_SingleJet8erHE() { return nt.L1_SingleJet8erHE(); }
    const bool &L1_SingleJet90() { return nt.L1_SingleJet90(); }
    const bool &L1_SingleJet90_FWD() { return nt.L1_SingleJet90_FWD(); }
    const bool &L1_SingleJet90_FWD3p0() { return nt.L1_SingleJet90_FWD3p0(); }
    const bool &L1_SingleJet90er2p5() { return nt.L1_SingleJet90er2p5(); }
    const bool &L1_SingleJetC20_NotBptxOR() { return nt.L1_SingleJetC20_NotBptxOR(); }
    const bool &L1_SingleJetC20_NotBptxOR_3BX() { return nt.L1_SingleJetC20_NotBptxOR_3BX(); }
    const bool &L1_SingleJetC32_NotBptxOR() { return nt.L1_SingleJetC32_NotBptxOR(); }
    const bool &L1_SingleJetC32_NotBptxOR_3BX() { return nt.L1_SingleJetC32_NotBptxOR_3BX(); }
    const bool &L1_SingleJetC36_NotBptxOR_3BX() { return nt.L1_SingleJetC36_NotBptxOR_3BX(); }
    const bool &L1_SingleJetC40_NotBptxOR_3BX() { return nt.L1_SingleJetC40_NotBptxOR_3BX(); }
    const bool &L1_SingleJetC40_NotBptxOR_5BX() { return nt.L1_SingleJetC40_NotBptxOR_5BX(); }
    const bool &L1_SingleLooseIsoEG26er1p5() { return nt.L1_SingleLooseIsoEG26er1p5(); }
    const bool &L1_SingleLooseIsoEG26er2p5() { return nt.L1_SingleLooseIsoEG26er2p5(); }
    const bool &L1_SingleLooseIsoEG28_FWD2p5() { return nt.L1_SingleLooseIsoEG28_FWD2p5(); }
    const bool &L1_SingleLooseIsoEG28er1p5() { return nt.L1_SingleLooseIsoEG28er1p5(); }
    const bool &L1_SingleLooseIsoEG28er2p1() { return nt.L1_SingleLooseIsoEG28er2p1(); }
    const bool &L1_SingleLooseIsoEG28er2p5() { return nt.L1_SingleLooseIsoEG28er2p5(); }
    const bool &L1_SingleLooseIsoEG30er1p5() { return nt.L1_SingleLooseIsoEG30er1p5(); }
    const bool &L1_SingleLooseIsoEG30er2p5() { return nt.L1_SingleLooseIsoEG30er2p5(); }
    const bool &L1_SingleMu0_BMTF() { return nt.L1_SingleMu0_BMTF(); }
    const bool &L1_SingleMu0_DQ() { return nt.L1_SingleMu0_DQ(); }
    const bool &L1_SingleMu0_EMTF() { return nt.L1_SingleMu0_EMTF(); }
    const bool &L1_SingleMu0_OMTF() { return nt.L1_SingleMu0_OMTF(); }
    const bool &L1_SingleMu10_LowQ() { return nt.L1_SingleMu10_LowQ(); }
    const bool &L1_SingleMu10er1p5() { return nt.L1_SingleMu10er1p5(); }
    const bool &L1_SingleMu11_LowQ() { return nt.L1_SingleMu11_LowQ(); }
    const bool &L1_SingleMu12() { return nt.L1_SingleMu12(); }
    const bool &L1_SingleMu12_DQ_BMTF() { return nt.L1_SingleMu12_DQ_BMTF(); }
    const bool &L1_SingleMu12_DQ_EMTF() { return nt.L1_SingleMu12_DQ_EMTF(); }
    const bool &L1_SingleMu12_DQ_OMTF() { return nt.L1_SingleMu12_DQ_OMTF(); }
    const bool &L1_SingleMu12_LowQ_BMTF() { return nt.L1_SingleMu12_LowQ_BMTF(); }
    const bool &L1_SingleMu12_LowQ_EMTF() { return nt.L1_SingleMu12_LowQ_EMTF(); }
    const bool &L1_SingleMu12_LowQ_OMTF() { return nt.L1_SingleMu12_LowQ_OMTF(); }
    const bool &L1_SingleMu12er1p5() { return nt.L1_SingleMu12er1p5(); }
    const bool &L1_SingleMu14() { return nt.L1_SingleMu14(); }
    const bool &L1_SingleMu14er() { return nt.L1_SingleMu14er(); }
    const bool &L1_SingleMu14er1p5() { return nt.L1_SingleMu14er1p5(); }
    const bool &L1_SingleMu14er2p1() { return nt.L1_SingleMu14er2p1(); }
    const bool &L1_SingleMu15_DQ() { return nt.L1_SingleMu15_DQ(); }
    const bool &L1_SingleMu16() { return nt.L1_SingleMu16(); }
    const bool &L1_SingleMu16er() { return nt.L1_SingleMu16er(); }
    const bool &L1_SingleMu16er1p5() { return nt.L1_SingleMu16er1p5(); }
    const bool &L1_SingleMu16er2p1() { return nt.L1_SingleMu16er2p1(); }
    const bool &L1_SingleMu18() { return nt.L1_SingleMu18(); }
    const bool &L1_SingleMu18er() { return nt.L1_SingleMu18er(); }
    const bool &L1_SingleMu18er1p5() { return nt.L1_SingleMu18er1p5(); }
    const bool &L1_SingleMu18er2p1() { return nt.L1_SingleMu18er2p1(); }
    const bool &L1_SingleMu20() { return nt.L1_SingleMu20(); }
    const bool &L1_SingleMu20er() { return nt.L1_SingleMu20er(); }
    const bool &L1_SingleMu20er2p1() { return nt.L1_SingleMu20er2p1(); }
    const bool &L1_SingleMu22() { return nt.L1_SingleMu22(); }
    const bool &L1_SingleMu22_BMTF() { return nt.L1_SingleMu22_BMTF(); }
    const bool &L1_SingleMu22_DQ() { return nt.L1_SingleMu22_DQ(); }
    const bool &L1_SingleMu22_EMTF() { return nt.L1_SingleMu22_EMTF(); }
    const bool &L1_SingleMu22_OMTF() { return nt.L1_SingleMu22_OMTF(); }
    const bool &L1_SingleMu22_OQ() { return nt.L1_SingleMu22_OQ(); }
    const bool &L1_SingleMu22er() { return nt.L1_SingleMu22er(); }
    const bool &L1_SingleMu22er2p1() { return nt.L1_SingleMu22er2p1(); }
    const bool &L1_SingleMu25() { return nt.L1_SingleMu25(); }
    const bool &L1_SingleMu25er() { return nt.L1_SingleMu25er(); }
    const bool &L1_SingleMu3() { return nt.L1_SingleMu3(); }
    const bool &L1_SingleMu30() { return nt.L1_SingleMu30(); }
    const bool &L1_SingleMu30er() { return nt.L1_SingleMu30er(); }
    const bool &L1_SingleMu5() { return nt.L1_SingleMu5(); }
    const bool &L1_SingleMu6er1p5() { return nt.L1_SingleMu6er1p5(); }
    const bool &L1_SingleMu7() { return nt.L1_SingleMu7(); }
    const bool &L1_SingleMu7_DQ() { return nt.L1_SingleMu7_DQ(); }
    const bool &L1_SingleMu7er1p5() { return nt.L1_SingleMu7er1p5(); }
    const bool &L1_SingleMu8er1p5() { return nt.L1_SingleMu8er1p5(); }
    const bool &L1_SingleMu9er1p5() { return nt.L1_SingleMu9er1p5(); }
    const bool &L1_SingleMuCosmics() { return nt.L1_SingleMuCosmics(); }
    const bool &L1_SingleMuCosmics_BMTF() { return nt.L1_SingleMuCosmics_BMTF(); }
    const bool &L1_SingleMuCosmics_EMTF() { return nt.L1_SingleMuCosmics_EMTF(); }
    const bool &L1_SingleMuCosmics_OMTF() { return nt.L1_SingleMuCosmics_OMTF(); }
    const bool &L1_SingleMuOpen() { return nt.L1_SingleMuOpen(); }
    const bool &L1_SingleMuOpen_NotBptxOR() { return nt.L1_SingleMuOpen_NotBptxOR(); }
    const bool &L1_SingleMuOpen_NotBptxOR_3BX() { return nt.L1_SingleMuOpen_NotBptxOR_3BX(); }
    const bool &L1_SingleMuOpen_er1p1_NotBptxOR_3BX() { return nt.L1_SingleMuOpen_er1p1_NotBptxOR_3BX(); }
    const bool &L1_SingleMuOpen_er1p4_NotBptxOR_3BX() { return nt.L1_SingleMuOpen_er1p4_NotBptxOR_3BX(); }
    const bool &L1_SingleMuShower_Nominal() { return nt.L1_SingleMuShower_Nominal(); }
    const bool &L1_SingleMuShower_Tight() { return nt.L1_SingleMuShower_Tight(); }
    const bool &L1_SingleTau100er() { return nt.L1_SingleTau100er(); }
    const bool &L1_SingleTau100er2p1() { return nt.L1_SingleTau100er2p1(); }
    const bool &L1_SingleTau120er() { return nt.L1_SingleTau120er(); }
    const bool &L1_SingleTau120er2p1() { return nt.L1_SingleTau120er2p1(); }
    const bool &L1_SingleTau130er2p1() { return nt.L1_SingleTau130er2p1(); }
    const bool &L1_SingleTau140er2p1() { return nt.L1_SingleTau140er2p1(); }
    const bool &L1_SingleTau20() { return nt.L1_SingleTau20(); }
    const bool &L1_SingleTau70er2p1() { return nt.L1_SingleTau70er2p1(); }
    const bool &L1_SingleTau80er() { return nt.L1_SingleTau80er(); }
    const bool &L1_SingleTau80er2p1() { return nt.L1_SingleTau80er2p1(); }
    const bool &L1_TOTEM_1() { return nt.L1_TOTEM_1(); }
    const bool &L1_TOTEM_2() { return nt.L1_TOTEM_2(); }
    const bool &L1_TOTEM_3() { return nt.L1_TOTEM_3(); }
    const bool &L1_TOTEM_4() { return nt.L1_TOTEM_4(); }
    const bool &L1_TripleEG16er2p5() { return nt.L1_TripleEG16er2p5(); }
    const bool &L1_TripleEG_14_10_8() { return nt.L1_TripleEG_14_10_8(); }
    const bool &L1_TripleEG_16_12_8_er2p5() { return nt.L1_TripleEG_16_12_8_er2p5(); }
    const bool &L1_TripleEG_16_15_8_er2p5() { return nt.L1_TripleEG_16_15_8_er2p5(); }
    const bool &L1_TripleEG_18_17_8() { return nt.L1_TripleEG_18_17_8(); }
    const bool &L1_TripleEG_18_17_8_er2p5() { return nt.L1_TripleEG_18_17_8_er2p5(); }
    const bool &L1_TripleEG_18_18_12_er2p5() { return nt.L1_TripleEG_18_18_12_er2p5(); }
    const bool &L1_TripleEG_Iso20_10_5() { return nt.L1_TripleEG_Iso20_10_5(); }
    const bool &L1_TripleEG_LooseIso20_10_5() { return nt.L1_TripleEG_LooseIso20_10_5(); }
    const bool &L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5() { return nt.L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5(); }
    const bool &L1_TripleJet_100_85_72_VBF() { return nt.L1_TripleJet_100_85_72_VBF(); }
    const bool &L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5() { return nt.L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5(); }
    const bool &L1_TripleJet_105_85_76_VBF() { return nt.L1_TripleJet_105_85_76_VBF(); }
    const bool &L1_TripleJet_84_68_48_VBF() { return nt.L1_TripleJet_84_68_48_VBF(); }
    const bool &L1_TripleJet_88_72_56_VBF() { return nt.L1_TripleJet_88_72_56_VBF(); }
    const bool &L1_TripleJet_92_76_64_VBF() { return nt.L1_TripleJet_92_76_64_VBF(); }
    const bool &L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5() { return nt.L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5(); }
    const bool &L1_TripleJet_98_83_71_VBF() { return nt.L1_TripleJet_98_83_71_VBF(); }
    const bool &L1_TripleMu0() { return nt.L1_TripleMu0(); }
    const bool &L1_TripleMu0_OQ() { return nt.L1_TripleMu0_OQ(); }
    const bool &L1_TripleMu0_SQ() { return nt.L1_TripleMu0_SQ(); }
    const bool &L1_TripleMu3() { return nt.L1_TripleMu3(); }
    const bool &L1_TripleMu3_SQ() { return nt.L1_TripleMu3_SQ(); }
    const bool &L1_TripleMu_2SQ_1p5SQ_0OQ() { return nt.L1_TripleMu_2SQ_1p5SQ_0OQ(); }
    const bool &L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12() { return nt.L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12(); }
    const bool &L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12() { return nt.L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12(); }
    const bool &L1_TripleMu_4_4_4() { return nt.L1_TripleMu_4_4_4(); }
    const bool &L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17() { return nt.L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17(); }
    const bool &L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14() { return nt.L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14(); }
    const bool &L1_TripleMu_5SQ_3SQ_0OQ() { return nt.L1_TripleMu_5SQ_3SQ_0OQ(); }
    const bool &L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9() { return nt.L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9(); }
    const bool &L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9() { return nt.L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9(); }
    const bool &L1_TripleMu_5_0_0() { return nt.L1_TripleMu_5_0_0(); }
    const bool &L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17() { return nt.L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17(); }
    const bool &L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17() { return nt.L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17(); }
    const bool &L1_TripleMu_5_3_3() { return nt.L1_TripleMu_5_3_3(); }
    const bool &L1_TripleMu_5_3_3_SQ() { return nt.L1_TripleMu_5_3_3_SQ(); }
    const bool &L1_TripleMu_5_3p5_2p5() { return nt.L1_TripleMu_5_3p5_2p5(); }
    const bool &L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17() { return nt.L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17(); }
    const bool &L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17() { return nt.L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17(); }
    const bool &L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17() { return nt.L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17(); }
    const bool &L1_TripleMu_5_5_3() { return nt.L1_TripleMu_5_5_3(); }
    const bool &L1_UnpairedBunchBptxMinus() { return nt.L1_UnpairedBunchBptxMinus(); }
    const bool &L1_UnpairedBunchBptxPlus() { return nt.L1_UnpairedBunchBptxPlus(); }
    const bool &L1_UnprefireableEvent() { return nt.L1_UnprefireableEvent(); }
    const bool &L1_ZeroBias() { return nt.L1_ZeroBias(); }
    const bool &L1_ZeroBias_FirstCollidingBunch() { return nt.L1_ZeroBias_FirstCollidingBunch(); }
    const bool &L1_ZeroBias_copy() { return nt.L1_ZeroBias_copy(); }
    const bool &L1simulation_step() { return nt.L1simulation_step(); }
    const vector<float> &LHEPart_eta() { return nt.LHEPart_eta(); }
    const vector<float> &LHEPart_incomingpz() { return nt.LHEPart_incomingpz(); }
    const vector<float> &LHEPart_mass() { return nt.LHEPart_mass(); }
    const vector<LorentzVector> &LHEPart_p4() { return nt.LHEPart_p4(); }
    const vector<int> &LHEPart_pdgId() { return nt.LHEPart_pdgId(); }
    const vector<float> &LHEPart_phi() { return nt.LHEPart_phi(); }
    const vector<float> &LHEPart_pt() { return nt.LHEPart_pt(); }
    const vector<int> &LHEPart_spin() { return nt.LHEPart_spin(); }
    const vector<int> &LHEPart_status() { return nt.LHEPart_status(); }
    const vector<float> &LHEPdfWeight() { return nt.LHEPdfWeight(); }
    const vector<float> &LHEReweightingWeight() { return nt.LHEReweightingWeight(); }
    const vector<float> &LHEScaleWeight() { return nt.LHEScaleWeight(); }
    const float &LHEWeight_dummy() { return nt.LHEWeight_dummy(); }
    const float &LHEWeight_originalXWGTUP() { return nt.LHEWeight_originalXWGTUP(); }
    const float &LHE_AlphaS() { return nt.LHE_AlphaS(); }
    const float &LHE_HT() { return nt.LHE_HT(); }
    const float &LHE_HTIncoming() { return nt.LHE_HTIncoming(); }
    const UChar_t &LHE_Nb() { return nt.LHE_Nb(); }
    const UChar_t &LHE_Nc() { return nt.LHE_Nc(); }
    const UChar_t &LHE_Nglu() { return nt.LHE_Nglu(); }
    const UChar_t &LHE_Njets() { return nt.LHE_Njets(); }
    const UChar_t &LHE_NpLO() { return nt.LHE_NpLO(); }
    const UChar_t &LHE_NpNLO() { return nt.LHE_NpNLO(); }
    const UChar_t &LHE_Nuds() { return nt.LHE_Nuds(); }
    const float &LHE_Vpt() { return nt.LHE_Vpt(); }
    const vector<float> &LowPtElectron_ID() { return nt.LowPtElectron_ID(); }
    const vector<int> &LowPtElectron_charge() { return nt.LowPtElectron_charge(); }
    const vector<bool> &LowPtElectron_convVeto() { return nt.LowPtElectron_convVeto(); }
    const vector<float> &LowPtElectron_convVtxRadius() { return nt.LowPtElectron_convVtxRadius(); }
    const vector<int> &LowPtElectron_convWP() { return nt.LowPtElectron_convWP(); }
    const vector<float> &LowPtElectron_deltaEtaSC() { return nt.LowPtElectron_deltaEtaSC(); }
    const vector<float> &LowPtElectron_dxy() { return nt.LowPtElectron_dxy(); }
    const vector<float> &LowPtElectron_dxyErr() { return nt.LowPtElectron_dxyErr(); }
    const vector<float> &LowPtElectron_dz() { return nt.LowPtElectron_dz(); }
    const vector<float> &LowPtElectron_dzErr() { return nt.LowPtElectron_dzErr(); }
    const vector<float> &LowPtElectron_eInvMinusPInv() { return nt.LowPtElectron_eInvMinusPInv(); }
    const vector<int> &LowPtElectron_electronIdx() { return nt.LowPtElectron_electronIdx(); }
    const vector<float> &LowPtElectron_embeddedID() { return nt.LowPtElectron_embeddedID(); }
    const vector<float> &LowPtElectron_energyErr() { return nt.LowPtElectron_energyErr(); }
    const vector<float> &LowPtElectron_eta() { return nt.LowPtElectron_eta(); }
    const vector<UChar_t> &LowPtElectron_genPartFlav() { return nt.LowPtElectron_genPartFlav(); }
    const vector<int> &LowPtElectron_genPartIdx() { return nt.LowPtElectron_genPartIdx(); }
    const vector<float> &LowPtElectron_hoe() { return nt.LowPtElectron_hoe(); }
    const vector<UChar_t> &LowPtElectron_lostHits() { return nt.LowPtElectron_lostHits(); }
    const vector<float> &LowPtElectron_mass() { return nt.LowPtElectron_mass(); }
    const vector<float> &LowPtElectron_miniPFRelIso_all() { return nt.LowPtElectron_miniPFRelIso_all(); }
    const vector<float> &LowPtElectron_miniPFRelIso_chg() { return nt.LowPtElectron_miniPFRelIso_chg(); }
    const vector<LorentzVector> &LowPtElectron_p4() { return nt.LowPtElectron_p4(); }
    const vector<int> &LowPtElectron_pdgId() { return nt.LowPtElectron_pdgId(); }
    const vector<float> &LowPtElectron_phi() { return nt.LowPtElectron_phi(); }
    const vector<int> &LowPtElectron_photonIdx() { return nt.LowPtElectron_photonIdx(); }
    const vector<float> &LowPtElectron_pt() { return nt.LowPtElectron_pt(); }
    const vector<float> &LowPtElectron_ptbiased() { return nt.LowPtElectron_ptbiased(); }
    const vector<float> &LowPtElectron_r9() { return nt.LowPtElectron_r9(); }
    const vector<float> &LowPtElectron_scEtOverPt() { return nt.LowPtElectron_scEtOverPt(); }
    const vector<float> &LowPtElectron_sieie() { return nt.LowPtElectron_sieie(); }
    const vector<float> &LowPtElectron_unbiased() { return nt.LowPtElectron_unbiased(); }
    const float &MET_MetUnclustEnUpDeltaX() { return nt.MET_MetUnclustEnUpDeltaX(); }
    const float &MET_MetUnclustEnUpDeltaY() { return nt.MET_MetUnclustEnUpDeltaY(); }
    const float &MET_T1Smear_phi() { return nt.MET_T1Smear_phi(); }
    const float &MET_T1Smear_phi_jerDown() { return nt.MET_T1Smear_phi_jerDown(); }
    const float &MET_T1Smear_phi_jerUp() { return nt.MET_T1Smear_phi_jerUp(); }
    const float &MET_T1Smear_phi_jesHEMIssueDown() { return nt.MET_T1Smear_phi_jesHEMIssueDown(); }
    const float &MET_T1Smear_phi_jesHEMIssueUp() { return nt.MET_T1Smear_phi_jesHEMIssueUp(); }
    const float &MET_T1Smear_phi_jesTotalDown() { return nt.MET_T1Smear_phi_jesTotalDown(); }
    const float &MET_T1Smear_phi_jesTotalUp() { return nt.MET_T1Smear_phi_jesTotalUp(); }
    const float &MET_T1Smear_phi_unclustEnDown() { return nt.MET_T1Smear_phi_unclustEnDown(); }
    const float &MET_T1Smear_phi_unclustEnUp() { return nt.MET_T1Smear_phi_unclustEnUp(); }
    const float &MET_T1Smear_pt() { return nt.MET_T1Smear_pt(); }
    const float &MET_T1Smear_pt_jerDown() { return nt.MET_T1Smear_pt_jerDown(); }
    const float &MET_T1Smear_pt_jerUp() { return nt.MET_T1Smear_pt_jerUp(); }
    const float &MET_T1Smear_pt_jesHEMIssueDown() { return nt.MET_T1Smear_pt_jesHEMIssueDown(); }
    const float &MET_T1Smear_pt_jesHEMIssueUp() { return nt.MET_T1Smear_pt_jesHEMIssueUp(); }
    const float &MET_T1Smear_pt_jesTotalDown() { return nt.MET_T1Smear_pt_jesTotalDown(); }
    const float &MET_T1Smear_pt_jesTotalUp() { return nt.MET_T1Smear_pt_jesTotalUp(); }
    const float &MET_T1Smear_pt_unclustEnDown() { return nt.MET_T1Smear_pt_unclustEnDown(); }
    const float &MET_T1Smear_pt_unclustEnUp() { return nt.MET_T1Smear_pt_unclustEnUp(); }
    const float &MET_T1_phi() { return nt.MET_T1_phi(); }
    const float &MET_T1_phi_jerDown() { return nt.MET_T1_phi_jerDown(); }
    const float &MET_T1_phi_jerUp() { return nt.MET_T1_phi_jerUp(); }
    const float &MET_T1_phi_jesHEMIssueDown() { return nt.MET_T1_phi_jesHEMIssueDown(); }
    const float &MET_T1_phi_jesHEMIssueUp() { return nt.MET_T1_phi_jesHEMIssueUp(); }
    const float &MET_T1_phi_jesTotalDown() { return nt.MET_T1_phi_jesTotalDown(); }
    const float &MET_T1_phi_jesTotalUp() { return nt.MET_T1_phi_jesTotalUp(); }
    const float &MET_T1_phi_unclustEnDown() { return nt.MET_T1_phi_unclustEnDown(); }
    const float &MET_T1_phi_unclustEnUp() { return nt.MET_T1_phi_unclustEnUp(); }
    const float &MET_T1_pt() { return nt.MET_T1_pt(); }
    const float &MET_T1_pt_jerDown() { return nt.MET_T1_pt_jerDown(); }
    const float &MET_T1_pt_jerUp() { return nt.MET_T1_pt_jerUp(); }
    const float &MET_T1_pt_jesHEMIssueDown() { return nt.MET_T1_pt_jesHEMIssueDown(); }
    const float &MET_T1_pt_jesHEMIssueUp() { return nt.MET_T1_pt_jesHEMIssueUp(); }
    const float &MET_T1_pt_jesTotalDown() { return nt.MET_T1_pt_jesTotalDown(); }
    const float &MET_T1_pt_jesTotalUp() { return nt.MET_T1_pt_jesTotalUp(); }
    const float &MET_T1_pt_unclustEnDown() { return nt.MET_T1_pt_unclustEnDown(); }
    const float &MET_T1_pt_unclustEnUp() { return nt.MET_T1_pt_unclustEnUp(); }
    const float &MET_covXX() { return nt.MET_covXX(); }
    const float &MET_covXY() { return nt.MET_covXY(); }
    const float &MET_covYY() { return nt.MET_covYY(); }
    const float &MET_fiducialGenPhi() { return nt.MET_fiducialGenPhi(); }
    const float &MET_fiducialGenPt() { return nt.MET_fiducialGenPt(); }
    const float &MET_phi() { return nt.MET_phi(); }
    const float &MET_pt() { return nt.MET_pt(); }
    const float &MET_significance() { return nt.MET_significance(); }
    const float &MET_sumEt() { return nt.MET_sumEt(); }
    const float &MET_sumPtUnclustered() { return nt.MET_sumPtUnclustered(); }
    const vector<float> &Muon_CutBased_HighPtID_SF() { return nt.Muon_CutBased_HighPtID_SF(); }
    const vector<float> &Muon_CutBased_HighPtID_SFerr() { return nt.Muon_CutBased_HighPtID_SFerr(); }
    const vector<float> &Muon_CutBased_LooseID_SF() { return nt.Muon_CutBased_LooseID_SF(); }
    const vector<float> &Muon_CutBased_LooseID_SFerr() { return nt.Muon_CutBased_LooseID_SFerr(); }
    const vector<float> &Muon_CutBased_MediumID_SF() { return nt.Muon_CutBased_MediumID_SF(); }
    const vector<float> &Muon_CutBased_MediumID_SFerr() { return nt.Muon_CutBased_MediumID_SFerr(); }
    const vector<float> &Muon_CutBased_MediumPromptID_SF() { return nt.Muon_CutBased_MediumPromptID_SF(); }
    const vector<float> &Muon_CutBased_MediumPromptID_SFerr() { return nt.Muon_CutBased_MediumPromptID_SFerr(); }
    const vector<float> &Muon_CutBased_SoftID_SF() { return nt.Muon_CutBased_SoftID_SF(); }
    const vector<float> &Muon_CutBased_SoftID_SFerr() { return nt.Muon_CutBased_SoftID_SFerr(); }
    const vector<float> &Muon_CutBased_TightID_SF() { return nt.Muon_CutBased_TightID_SF(); }
    const vector<float> &Muon_CutBased_TightID_SFerr() { return nt.Muon_CutBased_TightID_SFerr(); }
    const vector<float> &Muon_CutBased_TrkHighPtID_SF() { return nt.Muon_CutBased_TrkHighPtID_SF(); }
    const vector<float> &Muon_CutBased_TrkHighPtID_SFerr() { return nt.Muon_CutBased_TrkHighPtID_SFerr(); }
    const vector<float> &Muon_LooseRelIso_LooseID_SF() { return nt.Muon_LooseRelIso_LooseID_SF(); }
    const vector<float> &Muon_LooseRelIso_LooseID_SFerr() { return nt.Muon_LooseRelIso_LooseID_SFerr(); }
    const vector<float> &Muon_LooseRelIso_MediumID_SF() { return nt.Muon_LooseRelIso_MediumID_SF(); }
    const vector<float> &Muon_LooseRelIso_MediumID_SFerr() { return nt.Muon_LooseRelIso_MediumID_SFerr(); }
    const vector<float> &Muon_LooseRelIso_MediumPromptID_SF() { return nt.Muon_LooseRelIso_MediumPromptID_SF(); }
    const vector<float> &Muon_LooseRelIso_MediumPromptID_SFerr() { return nt.Muon_LooseRelIso_MediumPromptID_SFerr(); }
    const vector<float> &Muon_LooseRelIso_TightIDandIPCut_SF() { return nt.Muon_LooseRelIso_TightIDandIPCut_SF(); }
    const vector<float> &Muon_LooseRelIso_TightIDandIPCut_SFerr() { return nt.Muon_LooseRelIso_TightIDandIPCut_SFerr(); }
    const vector<float> &Muon_LooseRelTkIso_HighPtIDandIPCut_SF() { return nt.Muon_LooseRelTkIso_HighPtIDandIPCut_SF(); }
    const vector<float> &Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr() { return nt.Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr(); }
    const vector<float> &Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF() { return nt.Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF(); }
    const vector<float> &Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr() { return nt.Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr(); }
    const vector<float> &Muon_TightRelIso_MediumID_SF() { return nt.Muon_TightRelIso_MediumID_SF(); }
    const vector<float> &Muon_TightRelIso_MediumID_SFerr() { return nt.Muon_TightRelIso_MediumID_SFerr(); }
    const vector<float> &Muon_TightRelIso_MediumPromptID_SF() { return nt.Muon_TightRelIso_MediumPromptID_SF(); }
    const vector<float> &Muon_TightRelIso_MediumPromptID_SFerr() { return nt.Muon_TightRelIso_MediumPromptID_SFerr(); }
    const vector<float> &Muon_TightRelIso_TightIDandIPCut_SF() { return nt.Muon_TightRelIso_TightIDandIPCut_SF(); }
    const vector<float> &Muon_TightRelIso_TightIDandIPCut_SFerr() { return nt.Muon_TightRelIso_TightIDandIPCut_SFerr(); }
    const vector<float> &Muon_TightRelTkIso_HighPtIDandIPCut_SF() { return nt.Muon_TightRelTkIso_HighPtIDandIPCut_SF(); }
    const vector<float> &Muon_TightRelTkIso_HighPtIDandIPCut_SFerr() { return nt.Muon_TightRelTkIso_HighPtIDandIPCut_SFerr(); }
    const vector<float> &Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF() { return nt.Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF(); }
    const vector<float> &Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr() { return nt.Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr(); }
    const vector<int> &Muon_charge() { return nt.Muon_charge(); }
    const vector<UChar_t> &Muon_cleanmask() { return nt.Muon_cleanmask(); }
    const vector<float> &Muon_correctedDown_pt() { return nt.Muon_correctedDown_pt(); }
    const vector<float> &Muon_correctedUp_pt() { return nt.Muon_correctedUp_pt(); }
    const vector<float> &Muon_corrected_pt() { return nt.Muon_corrected_pt(); }
    const vector<float> &Muon_dxy() { return nt.Muon_dxy(); }
    const vector<float> &Muon_dxyErr() { return nt.Muon_dxyErr(); }
    const vector<float> &Muon_dxybs() { return nt.Muon_dxybs(); }
    const vector<float> &Muon_dz() { return nt.Muon_dz(); }
    const vector<float> &Muon_dzErr() { return nt.Muon_dzErr(); }
    const vector<float> &Muon_eta() { return nt.Muon_eta(); }
    const vector<int> &Muon_fsrPhotonIdx() { return nt.Muon_fsrPhotonIdx(); }
    const vector<UChar_t> &Muon_genPartFlav() { return nt.Muon_genPartFlav(); }
    const vector<int> &Muon_genPartIdx() { return nt.Muon_genPartIdx(); }
    const vector<UChar_t> &Muon_highPtId() { return nt.Muon_highPtId(); }
    const vector<bool> &Muon_highPurity() { return nt.Muon_highPurity(); }
    const vector<bool> &Muon_inTimeMuon() { return nt.Muon_inTimeMuon(); }
    const vector<float> &Muon_ip3d() { return nt.Muon_ip3d(); }
    const vector<bool> &Muon_isGlobal() { return nt.Muon_isGlobal(); }
    const vector<bool> &Muon_isPFcand() { return nt.Muon_isPFcand(); }
    const vector<bool> &Muon_isStandalone() { return nt.Muon_isStandalone(); }
    const vector<bool> &Muon_isTracker() { return nt.Muon_isTracker(); }
    const vector<int> &Muon_jetIdx() { return nt.Muon_jetIdx(); }
    const vector<UChar_t> &Muon_jetNDauCharged() { return nt.Muon_jetNDauCharged(); }
    const vector<float> &Muon_jetPtRelv2() { return nt.Muon_jetPtRelv2(); }
    const vector<float> &Muon_jetRelIso() { return nt.Muon_jetRelIso(); }
    const vector<bool> &Muon_looseId() { return nt.Muon_looseId(); }
    const vector<float> &Muon_mass() { return nt.Muon_mass(); }
    const vector<bool> &Muon_mediumId() { return nt.Muon_mediumId(); }
    const vector<bool> &Muon_mediumPromptId() { return nt.Muon_mediumPromptId(); }
    const vector<UChar_t> &Muon_miniIsoId() { return nt.Muon_miniIsoId(); }
    const vector<float> &Muon_miniPFRelIso_all() { return nt.Muon_miniPFRelIso_all(); }
    const vector<float> &Muon_miniPFRelIso_chg() { return nt.Muon_miniPFRelIso_chg(); }
    const vector<UChar_t> &Muon_multiIsoId() { return nt.Muon_multiIsoId(); }
    const vector<UChar_t> &Muon_mvaId() { return nt.Muon_mvaId(); }
    const vector<float> &Muon_mvaLowPt() { return nt.Muon_mvaLowPt(); }
    const vector<UChar_t> &Muon_mvaLowPtId() { return nt.Muon_mvaLowPtId(); }
    const vector<float> &Muon_mvaMuID() { return nt.Muon_mvaMuID(); }
    const vector<UChar_t> &Muon_mvaMuID_WP() { return nt.Muon_mvaMuID_WP(); }
    const vector<float> &Muon_mvaTTH() { return nt.Muon_mvaTTH(); }
    // NOTE: this is a custom branch; temporarily added for convenience
    const vector<float> &Muon_mvaTTHUL() { return nt.Muon_mvaTTHUL(); }
    //
    const vector<int> &Muon_nStations() { return nt.Muon_nStations(); }
    const vector<int> &Muon_nTrackerLayers() { return nt.Muon_nTrackerLayers(); }
    const vector<LorentzVector> &Muon_p4() { return nt.Muon_p4(); }
    const vector<int> &Muon_pdgId() { return nt.Muon_pdgId(); }
    const vector<UChar_t> &Muon_pfIsoId() { return nt.Muon_pfIsoId(); }
    const vector<float> &Muon_pfRelIso03_all() { return nt.Muon_pfRelIso03_all(); }
    const vector<float> &Muon_pfRelIso03_chg() { return nt.Muon_pfRelIso03_chg(); }
    const vector<float> &Muon_pfRelIso04_all() { return nt.Muon_pfRelIso04_all(); }
    const vector<float> &Muon_phi() { return nt.Muon_phi(); }
    const vector<float> &Muon_pt() { return nt.Muon_pt(); }
    const vector<float> &Muon_ptErr() { return nt.Muon_ptErr(); }
    const vector<UChar_t> &Muon_puppiIsoId() { return nt.Muon_puppiIsoId(); }
    const vector<float> &Muon_segmentComp() { return nt.Muon_segmentComp(); }
    const vector<float> &Muon_sip3d() { return nt.Muon_sip3d(); }
    const vector<bool> &Muon_softId() { return nt.Muon_softId(); }
    const vector<float> &Muon_softMva() { return nt.Muon_softMva(); }
    const vector<bool> &Muon_softMvaId() { return nt.Muon_softMvaId(); }
    const vector<int> &Muon_svIdx() { return nt.Muon_svIdx(); }
    const vector<int> &Muon_tightCharge() { return nt.Muon_tightCharge(); }
    const vector<bool> &Muon_tightId() { return nt.Muon_tightId(); }
    const vector<UChar_t> &Muon_tkIsoId() { return nt.Muon_tkIsoId(); }
    const vector<float> &Muon_tkRelIso() { return nt.Muon_tkRelIso(); }
    const vector<bool> &Muon_triggerIdLoose() { return nt.Muon_triggerIdLoose(); }
    const vector<float> &Muon_tunepRelPt() { return nt.Muon_tunepRelPt(); }
    const vector<float> &OtherPV_score() { return nt.OtherPV_score(); }
    const vector<float> &OtherPV_z() { return nt.OtherPV_z(); }
    const vector<int> &PPSLocalTrack_decRPId() { return nt.PPSLocalTrack_decRPId(); }
    const vector<int> &PPSLocalTrack_multiRPProtonIdx() { return nt.PPSLocalTrack_multiRPProtonIdx(); }
    const vector<int> &PPSLocalTrack_rpType() { return nt.PPSLocalTrack_rpType(); }
    const vector<int> &PPSLocalTrack_singleRPProtonIdx() { return nt.PPSLocalTrack_singleRPProtonIdx(); }
    const vector<float> &PPSLocalTrack_time() { return nt.PPSLocalTrack_time(); }
    const vector<float> &PPSLocalTrack_timeUnc() { return nt.PPSLocalTrack_timeUnc(); }
    const vector<float> &PPSLocalTrack_x() { return nt.PPSLocalTrack_x(); }
    const vector<float> &PPSLocalTrack_y() { return nt.PPSLocalTrack_y(); }
    const vector<float> &PSWeight() { return nt.PSWeight(); }
    const float &PV_chi2() { return nt.PV_chi2(); }
    const float &PV_ndof() { return nt.PV_ndof(); }
    const int &PV_npvs() { return nt.PV_npvs(); }
    const int &PV_npvsGood() { return nt.PV_npvsGood(); }
    const float &PV_score() { return nt.PV_score(); }
    const float &PV_x() { return nt.PV_x(); }
    const float &PV_y() { return nt.PV_y(); }
    const float &PV_z() { return nt.PV_z(); }
    const vector<int> &Photon_charge() { return nt.Photon_charge(); }
    const vector<UChar_t> &Photon_cleanmask() { return nt.Photon_cleanmask(); }
    const vector<int> &Photon_cutBased() { return nt.Photon_cutBased(); }
    const vector<int> &Photon_cutBased17Bitmap() { return nt.Photon_cutBased17Bitmap(); }
    const vector<int> &Photon_cutBasedBitmap() { return nt.Photon_cutBasedBitmap(); }
    const vector<int> &Photon_cutBased_Fall17V1Bitmap() { return nt.Photon_cutBased_Fall17V1Bitmap(); }
    const vector<int> &Photon_cutBased_Fall17V2() { return nt.Photon_cutBased_Fall17V2(); }
    const vector<float> &Photon_dEscaleDown() { return nt.Photon_dEscaleDown(); }
    const vector<float> &Photon_dEscaleUp() { return nt.Photon_dEscaleUp(); }
    const vector<float> &Photon_dEsigmaDown() { return nt.Photon_dEsigmaDown(); }
    const vector<float> &Photon_dEsigmaUp() { return nt.Photon_dEsigmaUp(); }
    const vector<float> &Photon_eCorr() { return nt.Photon_eCorr(); }
    const vector<int> &Photon_electronIdx() { return nt.Photon_electronIdx(); }
    const vector<bool> &Photon_electronVeto() { return nt.Photon_electronVeto(); }
    const vector<float> &Photon_energyErr() { return nt.Photon_energyErr(); }
    const vector<float> &Photon_energyRaw() { return nt.Photon_energyRaw(); }
    const vector<float> &Photon_esEffSigmaRR() { return nt.Photon_esEffSigmaRR(); }
    const vector<float> &Photon_esEnergyOverRawE() { return nt.Photon_esEnergyOverRawE(); }
    const vector<float> &Photon_eta() { return nt.Photon_eta(); }
    const vector<float> &Photon_etaWidth() { return nt.Photon_etaWidth(); }
    const vector<UChar_t> &Photon_genPartFlav() { return nt.Photon_genPartFlav(); }
    const vector<int> &Photon_genPartIdx() { return nt.Photon_genPartIdx(); }
    const vector<float> &Photon_haloTaggerMVAVal() { return nt.Photon_haloTaggerMVAVal(); }
    const vector<float> &Photon_hoe() { return nt.Photon_hoe(); }
    const vector<float> &Photon_hoe_PUcorr() { return nt.Photon_hoe_PUcorr(); }
    const vector<bool> &Photon_isScEtaEB() { return nt.Photon_isScEtaEB(); }
    const vector<bool> &Photon_isScEtaEE() { return nt.Photon_isScEtaEE(); }
    const vector<int> &Photon_jetIdx() { return nt.Photon_jetIdx(); }
    const vector<float> &Photon_mass() { return nt.Photon_mass(); }
    const vector<float> &Photon_mvaID() { return nt.Photon_mvaID(); }
    const vector<float> &Photon_mvaID17() { return nt.Photon_mvaID17(); }
    const vector<bool> &Photon_mvaID17_WP80() { return nt.Photon_mvaID17_WP80(); }
    const vector<bool> &Photon_mvaID17_WP90() { return nt.Photon_mvaID17_WP90(); }
    const vector<float> &Photon_mvaID_Fall17V1p1() { return nt.Photon_mvaID_Fall17V1p1(); }
    const vector<float> &Photon_mvaID_Fall17V2() { return nt.Photon_mvaID_Fall17V2(); }
    const vector<bool> &Photon_mvaID_Fall17V2_WP80() { return nt.Photon_mvaID_Fall17V2_WP80(); }
    const vector<bool> &Photon_mvaID_Fall17V2_WP90() { return nt.Photon_mvaID_Fall17V2_WP90(); }
    const vector<bool> &Photon_mvaID_WP80() { return nt.Photon_mvaID_WP80(); }
    const vector<bool> &Photon_mvaID_WP90() { return nt.Photon_mvaID_WP90(); }
    const vector<LorentzVector> &Photon_p4() { return nt.Photon_p4(); }
    const vector<int> &Photon_pdgId() { return nt.Photon_pdgId(); }
    const vector<float> &Photon_pfChargedIsoPFPV() { return nt.Photon_pfChargedIsoPFPV(); }
    const vector<float> &Photon_pfChargedIsoWorstVtx() { return nt.Photon_pfChargedIsoWorstVtx(); }
    const vector<float> &Photon_pfPhoIso03() { return nt.Photon_pfPhoIso03(); }
    const vector<float> &Photon_pfRelIso03_all() { return nt.Photon_pfRelIso03_all(); }
    const vector<float> &Photon_pfRelIso03_all_Fall17V2() { return nt.Photon_pfRelIso03_all_Fall17V2(); }
    const vector<float> &Photon_pfRelIso03_all_quadratic() { return nt.Photon_pfRelIso03_all_quadratic(); }
    const vector<float> &Photon_pfRelIso03_chg() { return nt.Photon_pfRelIso03_chg(); }
    const vector<float> &Photon_pfRelIso03_chg_Fall17V2() { return nt.Photon_pfRelIso03_chg_Fall17V2(); }
    const vector<float> &Photon_pfRelIso03_chg_quadratic() { return nt.Photon_pfRelIso03_chg_quadratic(); }
    const vector<float> &Photon_phi() { return nt.Photon_phi(); }
    const vector<float> &Photon_phiWidth() { return nt.Photon_phiWidth(); }
    const vector<bool> &Photon_pixelSeed() { return nt.Photon_pixelSeed(); }
    const vector<float> &Photon_pt() { return nt.Photon_pt(); }
    const vector<float> &Photon_r9() { return nt.Photon_r9(); }
    const vector<float> &Photon_s4() { return nt.Photon_s4(); }
    const vector<UChar_t> &Photon_seedGain() { return nt.Photon_seedGain(); }
    const vector<Char_t> &Photon_seediEtaOriX() { return nt.Photon_seediEtaOriX(); }
    const vector<int> &Photon_seediPhiOriY() { return nt.Photon_seediPhiOriY(); }
    const vector<float> &Photon_sieie() { return nt.Photon_sieie(); }
    const vector<float> &Photon_sieip() { return nt.Photon_sieip(); }
    const vector<float> &Photon_sipip() { return nt.Photon_sipip(); }
    const vector<int> &Photon_vidNestedWPBitmap() { return nt.Photon_vidNestedWPBitmap(); }
    const vector<int> &Photon_vidNestedWPBitmap_Fall17V2() { return nt.Photon_vidNestedWPBitmap_Fall17V2(); }
    const vector<float> &Photon_x_calo() { return nt.Photon_x_calo(); }
    const vector<float> &Photon_y_calo() { return nt.Photon_y_calo(); }
    const vector<float> &Photon_z_calo() { return nt.Photon_z_calo(); }
    const float &Pileup_gpudensity() { return nt.Pileup_gpudensity(); }
    const int &Pileup_nPU() { return nt.Pileup_nPU(); }
    const float &Pileup_nTrueInt() { return nt.Pileup_nTrueInt(); }
    const float &Pileup_pudensity() { return nt.Pileup_pudensity(); }
    const int &Pileup_sumEOOT() { return nt.Pileup_sumEOOT(); }
    const int &Pileup_sumLOOT() { return nt.Pileup_sumLOOT(); }
    const vector<int> &Proton_multiRP_arm() { return nt.Proton_multiRP_arm(); }
    const vector<float> &Proton_multiRP_t() { return nt.Proton_multiRP_t(); }
    const vector<float> &Proton_multiRP_thetaX() { return nt.Proton_multiRP_thetaX(); }
    const vector<float> &Proton_multiRP_thetaY() { return nt.Proton_multiRP_thetaY(); }
    const vector<float> &Proton_multiRP_time() { return nt.Proton_multiRP_time(); }
    const vector<float> &Proton_multiRP_timeUnc() { return nt.Proton_multiRP_timeUnc(); }
    const vector<float> &Proton_multiRP_xi() { return nt.Proton_multiRP_xi(); }
    const vector<int> &Proton_singleRP_decRPId() { return nt.Proton_singleRP_decRPId(); }
    const vector<float> &Proton_singleRP_thetaY() { return nt.Proton_singleRP_thetaY(); }
    const vector<float> &Proton_singleRP_xi() { return nt.Proton_singleRP_xi(); }
    const float &PuppiMET_phi() { return nt.PuppiMET_phi(); }
    const float &PuppiMET_phiJERDown() { return nt.PuppiMET_phiJERDown(); }
    const float &PuppiMET_phiJERUp() { return nt.PuppiMET_phiJERUp(); }
    const float &PuppiMET_phiJESDown() { return nt.PuppiMET_phiJESDown(); }
    const float &PuppiMET_phiJESUp() { return nt.PuppiMET_phiJESUp(); }
    const float &PuppiMET_phiUnclusteredDown() { return nt.PuppiMET_phiUnclusteredDown(); }
    const float &PuppiMET_phiUnclusteredUp() { return nt.PuppiMET_phiUnclusteredUp(); }
    const float &PuppiMET_pt() { return nt.PuppiMET_pt(); }
    const float &PuppiMET_ptJERDown() { return nt.PuppiMET_ptJERDown(); }
    const float &PuppiMET_ptJERUp() { return nt.PuppiMET_ptJERUp(); }
    const float &PuppiMET_ptJESDown() { return nt.PuppiMET_ptJESDown(); }
    const float &PuppiMET_ptJESUp() { return nt.PuppiMET_ptJESUp(); }
    const float &PuppiMET_ptUnclusteredDown() { return nt.PuppiMET_ptUnclusteredDown(); }
    const float &PuppiMET_ptUnclusteredUp() { return nt.PuppiMET_ptUnclusteredUp(); }
    const float &PuppiMET_sumEt() { return nt.PuppiMET_sumEt(); }
    const float &RawMET_phi() { return nt.RawMET_phi(); }
    const float &RawMET_pt() { return nt.RawMET_pt(); }
    const float &RawMET_sumEt() { return nt.RawMET_sumEt(); }
    const float &RawPuppiMET_phi() { return nt.RawPuppiMET_phi(); }
    const float &RawPuppiMET_pt() { return nt.RawPuppiMET_pt(); }
    const float &RawPuppiMET_sumEt() { return nt.RawPuppiMET_sumEt(); }
    const float &Rho_fixedGridRhoAll() { return nt.Rho_fixedGridRhoAll(); }
    const float &Rho_fixedGridRhoFastjetAll() { return nt.Rho_fixedGridRhoFastjetAll(); }
    const float &Rho_fixedGridRhoFastjetCentral() { return nt.Rho_fixedGridRhoFastjetCentral(); }
    const float &Rho_fixedGridRhoFastjetCentralCalo() { return nt.Rho_fixedGridRhoFastjetCentralCalo(); }
    const float &Rho_fixedGridRhoFastjetCentralChargedPileUp() { return nt.Rho_fixedGridRhoFastjetCentralChargedPileUp(); }
    const float &Rho_fixedGridRhoFastjetCentralNeutral() { return nt.Rho_fixedGridRhoFastjetCentralNeutral(); }
    const vector<int> &SV_charge() { return nt.SV_charge(); }
    const vector<float> &SV_chi2() { return nt.SV_chi2(); }
    const vector<float> &SV_dlen() { return nt.SV_dlen(); }
    const vector<float> &SV_dlenSig() { return nt.SV_dlenSig(); }
    const vector<float> &SV_dxy() { return nt.SV_dxy(); }
    const vector<float> &SV_dxySig() { return nt.SV_dxySig(); }
    const vector<float> &SV_eta() { return nt.SV_eta(); }
    const vector<float> &SV_mass() { return nt.SV_mass(); }
    const vector<float> &SV_ndof() { return nt.SV_ndof(); }
    const vector<UChar_t> &SV_ntracks() { return nt.SV_ntracks(); }
    const vector<LorentzVector> &SV_p4() { return nt.SV_p4(); }
    const vector<float> &SV_pAngle() { return nt.SV_pAngle(); }
    const vector<float> &SV_phi() { return nt.SV_phi(); }
    const vector<float> &SV_pt() { return nt.SV_pt(); }
    const vector<float> &SV_x() { return nt.SV_x(); }
    const vector<float> &SV_y() { return nt.SV_y(); }
    const vector<float> &SV_z() { return nt.SV_z(); }
    const float &SoftActivityJetHT() { return nt.SoftActivityJetHT(); }
    const float &SoftActivityJetHT10() { return nt.SoftActivityJetHT10(); }
    const float &SoftActivityJetHT2() { return nt.SoftActivityJetHT2(); }
    const float &SoftActivityJetHT5() { return nt.SoftActivityJetHT5(); }
    const int &SoftActivityJetNjets10() { return nt.SoftActivityJetNjets10(); }
    const int &SoftActivityJetNjets2() { return nt.SoftActivityJetNjets2(); }
    const int &SoftActivityJetNjets5() { return nt.SoftActivityJetNjets5(); }
    const vector<float> &SoftActivityJet_eta() { return nt.SoftActivityJet_eta(); }
    const vector<float> &SoftActivityJet_phi() { return nt.SoftActivityJet_phi(); }
    const vector<float> &SoftActivityJet_pt() { return nt.SoftActivityJet_pt(); }
    const vector<float> &SubGenJetAK8_eta() { return nt.SubGenJetAK8_eta(); }
    const vector<float> &SubGenJetAK8_mass() { return nt.SubGenJetAK8_mass(); }
    const vector<LorentzVector> &SubGenJetAK8_p4() { return nt.SubGenJetAK8_p4(); }
    const vector<float> &SubGenJetAK8_phi() { return nt.SubGenJetAK8_phi(); }
    const vector<float> &SubGenJetAK8_pt() { return nt.SubGenJetAK8_pt(); }
    const vector<float> &SubJet_btagCMVA() { return nt.SubJet_btagCMVA(); }
    const vector<float> &SubJet_btagCSVV2() { return nt.SubJet_btagCSVV2(); }
    const vector<float> &SubJet_btagDeepB() { return nt.SubJet_btagDeepB(); }
    const vector<float> &SubJet_eta() { return nt.SubJet_eta(); }
    const vector<int> &SubJet_hadronFlavour() { return nt.SubJet_hadronFlavour(); }
    const vector<float> &SubJet_mass() { return nt.SubJet_mass(); }
    const vector<float> &SubJet_n2b1() { return nt.SubJet_n2b1(); }
    const vector<float> &SubJet_n3b1() { return nt.SubJet_n3b1(); }
    const vector<UChar_t> &SubJet_nBHadrons() { return nt.SubJet_nBHadrons(); }
    const vector<UChar_t> &SubJet_nCHadrons() { return nt.SubJet_nCHadrons(); }
    const vector<LorentzVector> &SubJet_p4() { return nt.SubJet_p4(); }
    const vector<float> &SubJet_phi() { return nt.SubJet_phi(); }
    const vector<float> &SubJet_pt() { return nt.SubJet_pt(); }
    const vector<float> &SubJet_rawFactor() { return nt.SubJet_rawFactor(); }
    const vector<float> &SubJet_tau1() { return nt.SubJet_tau1(); }
    const vector<float> &SubJet_tau2() { return nt.SubJet_tau2(); }
    const vector<float> &SubJet_tau3() { return nt.SubJet_tau3(); }
    const vector<float> &SubJet_tau4() { return nt.SubJet_tau4(); }
    const vector<int> &Tau_charge() { return nt.Tau_charge(); }
    const vector<float> &Tau_chargedIso() { return nt.Tau_chargedIso(); }
    const vector<UChar_t> &Tau_cleanmask() { return nt.Tau_cleanmask(); }
    const vector<int> &Tau_decayMode() { return nt.Tau_decayMode(); }
    const vector<float> &Tau_dxy() { return nt.Tau_dxy(); }
    const vector<float> &Tau_dz() { return nt.Tau_dz(); }
    const vector<int> &Tau_eleIdx() { return nt.Tau_eleIdx(); }
    const vector<float> &Tau_eta() { return nt.Tau_eta(); }
    const vector<UChar_t> &Tau_genPartFlav() { return nt.Tau_genPartFlav(); }
    const vector<int> &Tau_genPartIdx() { return nt.Tau_genPartIdx(); }
    const vector<UChar_t> &Tau_idAntiEle() { return nt.Tau_idAntiEle(); }
    const vector<UChar_t> &Tau_idAntiEle2018() { return nt.Tau_idAntiEle2018(); }
    const vector<bool> &Tau_idAntiEleDeadECal() { return nt.Tau_idAntiEleDeadECal(); }
    const vector<UChar_t> &Tau_idAntiMu() { return nt.Tau_idAntiMu(); }
    const vector<bool> &Tau_idDecayMode() { return nt.Tau_idDecayMode(); }
    const vector<bool> &Tau_idDecayModeNewDMs() { return nt.Tau_idDecayModeNewDMs(); }
    const vector<bool> &Tau_idDecayModeOldDMs() { return nt.Tau_idDecayModeOldDMs(); }
    const vector<UChar_t> &Tau_idDeepTau2017v2p1VSe() { return nt.Tau_idDeepTau2017v2p1VSe(); }
    const vector<UChar_t> &Tau_idDeepTau2017v2p1VSjet() { return nt.Tau_idDeepTau2017v2p1VSjet(); }
    const vector<UChar_t> &Tau_idDeepTau2017v2p1VSmu() { return nt.Tau_idDeepTau2017v2p1VSmu(); }
    const vector<UChar_t> &Tau_idDeepTau2018v2p5VSe() { return nt.Tau_idDeepTau2018v2p5VSe(); }
    const vector<UChar_t> &Tau_idDeepTau2018v2p5VSjet() { return nt.Tau_idDeepTau2018v2p5VSjet(); }
    const vector<UChar_t> &Tau_idDeepTau2018v2p5VSmu() { return nt.Tau_idDeepTau2018v2p5VSmu(); }
    const vector<UChar_t> &Tau_idMVAnewDM2017v2() { return nt.Tau_idMVAnewDM2017v2(); }
    const vector<UChar_t> &Tau_idMVAoldDM() { return nt.Tau_idMVAoldDM(); }
    const vector<UChar_t> &Tau_idMVAoldDM2017v1() { return nt.Tau_idMVAoldDM2017v1(); }
    const vector<UChar_t> &Tau_idMVAoldDM2017v2() { return nt.Tau_idMVAoldDM2017v2(); }
    const vector<UChar_t> &Tau_idMVAoldDMdR032017v2() { return nt.Tau_idMVAoldDMdR032017v2(); }
    const vector<int> &Tau_jetIdx() { return nt.Tau_jetIdx(); }
    const vector<float> &Tau_leadTkDeltaEta() { return nt.Tau_leadTkDeltaEta(); }
    const vector<float> &Tau_leadTkDeltaPhi() { return nt.Tau_leadTkDeltaPhi(); }
    const vector<float> &Tau_leadTkPtOverTauPt() { return nt.Tau_leadTkPtOverTauPt(); }
    const vector<float> &Tau_mass() { return nt.Tau_mass(); }
    const vector<int> &Tau_muIdx() { return nt.Tau_muIdx(); }
    const vector<int> &Tau_nSVs() { return nt.Tau_nSVs(); }
    const vector<float> &Tau_neutralIso() { return nt.Tau_neutralIso(); }
    const vector<LorentzVector> &Tau_p4() { return nt.Tau_p4(); }
    const vector<float> &Tau_phi() { return nt.Tau_phi(); }
    const vector<float> &Tau_photonsOutsideSignalCone() { return nt.Tau_photonsOutsideSignalCone(); }
    const vector<float> &Tau_pt() { return nt.Tau_pt(); }
    const vector<float> &Tau_puCorr() { return nt.Tau_puCorr(); }
    const vector<float> &Tau_rawAntiEle() { return nt.Tau_rawAntiEle(); }
    const vector<float> &Tau_rawAntiEle2018() { return nt.Tau_rawAntiEle2018(); }
    const vector<int> &Tau_rawAntiEleCat() { return nt.Tau_rawAntiEleCat(); }
    const vector<int> &Tau_rawAntiEleCat2018() { return nt.Tau_rawAntiEleCat2018(); }
    const vector<float> &Tau_rawDeepTau2017v2p1VSe() { return nt.Tau_rawDeepTau2017v2p1VSe(); }
    const vector<float> &Tau_rawDeepTau2017v2p1VSjet() { return nt.Tau_rawDeepTau2017v2p1VSjet(); }
    const vector<float> &Tau_rawDeepTau2017v2p1VSmu() { return nt.Tau_rawDeepTau2017v2p1VSmu(); }
    const vector<float> &Tau_rawDeepTau2018v2p5VSe() { return nt.Tau_rawDeepTau2018v2p5VSe(); }
    const vector<float> &Tau_rawDeepTau2018v2p5VSjet() { return nt.Tau_rawDeepTau2018v2p5VSjet(); }
    const vector<float> &Tau_rawDeepTau2018v2p5VSmu() { return nt.Tau_rawDeepTau2018v2p5VSmu(); }
    const vector<float> &Tau_rawIso() { return nt.Tau_rawIso(); }
    const vector<float> &Tau_rawIsodR03() { return nt.Tau_rawIsodR03(); }
    const vector<float> &Tau_rawMVAnewDM2017v2() { return nt.Tau_rawMVAnewDM2017v2(); }
    const vector<float> &Tau_rawMVAoldDM() { return nt.Tau_rawMVAoldDM(); }
    const vector<float> &Tau_rawMVAoldDM2017v1() { return nt.Tau_rawMVAoldDM2017v1(); }
    const vector<float> &Tau_rawMVAoldDM2017v2() { return nt.Tau_rawMVAoldDM2017v2(); }
    const vector<float> &Tau_rawMVAoldDMdR032017v2() { return nt.Tau_rawMVAoldDMdR032017v2(); }
    const vector<int> &Tau_svIdx1() { return nt.Tau_svIdx1(); }
    const vector<int> &Tau_svIdx2() { return nt.Tau_svIdx2(); }
    const float &TkMET_phi() { return nt.TkMET_phi(); }
    const float &TkMET_pt() { return nt.TkMET_pt(); }
    const float &TkMET_sumEt() { return nt.TkMET_sumEt(); }
    const vector<float> &TrigObj_eta() { return nt.TrigObj_eta(); }
    const vector<int> &TrigObj_filterBits() { return nt.TrigObj_filterBits(); }
    const vector<int> &TrigObj_id() { return nt.TrigObj_id(); }
    const vector<int> &TrigObj_l1charge() { return nt.TrigObj_l1charge(); }
    const vector<int> &TrigObj_l1iso() { return nt.TrigObj_l1iso(); }
    const vector<float> &TrigObj_l1pt() { return nt.TrigObj_l1pt(); }
    const vector<float> &TrigObj_l1pt_2() { return nt.TrigObj_l1pt_2(); }
    const vector<float> &TrigObj_l2pt() { return nt.TrigObj_l2pt(); }
    const vector<float> &TrigObj_phi() { return nt.TrigObj_phi(); }
    const vector<float> &TrigObj_pt() { return nt.TrigObj_pt(); }
    const vector<int> &WCnames() { return nt.WCnames(); }
    const vector<int> &boostedTau_charge() { return nt.boostedTau_charge(); }
    const vector<float> &boostedTau_chargedIso() { return nt.boostedTau_chargedIso(); }
    const vector<int> &boostedTau_decayMode() { return nt.boostedTau_decayMode(); }
    const vector<float> &boostedTau_eta() { return nt.boostedTau_eta(); }
    const vector<UChar_t> &boostedTau_genPartFlav() { return nt.boostedTau_genPartFlav(); }
    const vector<int> &boostedTau_genPartIdx() { return nt.boostedTau_genPartIdx(); }
    const vector<UChar_t> &boostedTau_idAntiEle2018() { return nt.boostedTau_idAntiEle2018(); }
    const vector<UChar_t> &boostedTau_idAntiMu() { return nt.boostedTau_idAntiMu(); }
    const vector<UChar_t> &boostedTau_idMVAnewDM2017v2() { return nt.boostedTau_idMVAnewDM2017v2(); }
    const vector<UChar_t> &boostedTau_idMVAoldDM2017v2() { return nt.boostedTau_idMVAoldDM2017v2(); }
    const vector<UChar_t> &boostedTau_idMVAoldDMdR032017v2() { return nt.boostedTau_idMVAoldDMdR032017v2(); }
    const vector<int> &boostedTau_jetIdx() { return nt.boostedTau_jetIdx(); }
    const vector<float> &boostedTau_leadTkDeltaEta() { return nt.boostedTau_leadTkDeltaEta(); }
    const vector<float> &boostedTau_leadTkDeltaPhi() { return nt.boostedTau_leadTkDeltaPhi(); }
    const vector<float> &boostedTau_leadTkPtOverTauPt() { return nt.boostedTau_leadTkPtOverTauPt(); }
    const vector<float> &boostedTau_mass() { return nt.boostedTau_mass(); }
    const vector<float> &boostedTau_neutralIso() { return nt.boostedTau_neutralIso(); }
    const vector<LorentzVector> &boostedTau_p4() { return nt.boostedTau_p4(); }
    const vector<float> &boostedTau_phi() { return nt.boostedTau_phi(); }
    const vector<float> &boostedTau_photonsOutsideSignalCone() { return nt.boostedTau_photonsOutsideSignalCone(); }
    const vector<float> &boostedTau_pt() { return nt.boostedTau_pt(); }
    const vector<float> &boostedTau_puCorr() { return nt.boostedTau_puCorr(); }
    const vector<float> &boostedTau_rawAntiEle2018() { return nt.boostedTau_rawAntiEle2018(); }
    const vector<int> &boostedTau_rawAntiEleCat2018() { return nt.boostedTau_rawAntiEleCat2018(); }
    const vector<float> &boostedTau_rawIso() { return nt.boostedTau_rawIso(); }
    const vector<float> &boostedTau_rawIsodR03() { return nt.boostedTau_rawIsodR03(); }
    const vector<float> &boostedTau_rawMVAnewDM2017v2() { return nt.boostedTau_rawMVAnewDM2017v2(); }
    const vector<float> &boostedTau_rawMVAoldDM2017v2() { return nt.boostedTau_rawMVAoldDM2017v2(); }
    const vector<float> &boostedTau_rawMVAoldDMdR032017v2() { return nt.boostedTau_rawMVAoldDMdR032017v2(); }
    const float &btagWeight_CSVV2() { return nt.btagWeight_CSVV2(); }
    const float &btagWeight_DeepCSVB() { return nt.btagWeight_DeepCSVB(); }
    const UInt_t &bunchCrossing() { return nt.bunchCrossing(); }
    const ULong64_t &event() { return nt.event(); }
    const float &fixedGridRhoFastjetAll() { return nt.fixedGridRhoFastjetAll(); }
    const float &fixedGridRhoFastjetCentral() { return nt.fixedGridRhoFastjetCentral(); }
    const float &fixedGridRhoFastjetCentralCalo() { return nt.fixedGridRhoFastjetCentralCalo(); }
    const float &fixedGridRhoFastjetCentralChargedPileUp() { return nt.fixedGridRhoFastjetCentralChargedPileUp(); }
    const float &fixedGridRhoFastjetCentralNeutral() { return nt.fixedGridRhoFastjetCentralNeutral(); }
    const int &genTtbarId() { return nt.genTtbarId(); }
    const float &genWeight() { return nt.genWeight(); }
    const UInt_t &luminosityBlock() { return nt.luminosityBlock(); }
    const UInt_t &nCorrT1METJet() { return nt.nCorrT1METJet(); }
    const UInt_t &nEFTfitCoefficients() { return nt.nEFTfitCoefficients(); }
    const UInt_t &nElectron() { return nt.nElectron(); }
    const UInt_t &nFatJet() { return nt.nFatJet(); }
    const UInt_t &nFsrPhoton() { return nt.nFsrPhoton(); }
    const UInt_t &nGenDressedLepton() { return nt.nGenDressedLepton(); }
    const UInt_t &nGenIsolatedPhoton() { return nt.nGenIsolatedPhoton(); }
    const UInt_t &nGenJet() { return nt.nGenJet(); }
    const UInt_t &nGenJetAK8() { return nt.nGenJetAK8(); }
    const UInt_t &nGenPart() { return nt.nGenPart(); }
    const UInt_t &nGenProton() { return nt.nGenProton(); }
    const UInt_t &nGenVisTau() { return nt.nGenVisTau(); }
    const UInt_t &nIsoTrack() { return nt.nIsoTrack(); }
    const UInt_t &nJet() { return nt.nJet(); }
    const UInt_t &nLHEPart() { return nt.nLHEPart(); }
    const UInt_t &nLHEPdfWeight() { return nt.nLHEPdfWeight(); }
    const UInt_t &nLHEReweightingWeight() { return nt.nLHEReweightingWeight(); }
    const UInt_t &nLHEScaleWeight() { return nt.nLHEScaleWeight(); }
    const UInt_t &nLowPtElectron() { return nt.nLowPtElectron(); }
    const UInt_t &nMuon() { return nt.nMuon(); }
    const UInt_t &nOtherPV() { return nt.nOtherPV(); }
    const UInt_t &nPPSLocalTrack() { return nt.nPPSLocalTrack(); }
    const UInt_t &nPSWeight() { return nt.nPSWeight(); }
    const UInt_t &nPhoton() { return nt.nPhoton(); }
    const UInt_t &nProton_multiRP() { return nt.nProton_multiRP(); }
    const UInt_t &nProton_singleRP() { return nt.nProton_singleRP(); }
    const UInt_t &nSV() { return nt.nSV(); }
    const UInt_t &nSoftActivityJet() { return nt.nSoftActivityJet(); }
    const UInt_t &nSubGenJetAK8() { return nt.nSubGenJetAK8(); }
    const UInt_t &nSubJet() { return nt.nSubJet(); }
    const UInt_t &nTau() { return nt.nTau(); }
    const UInt_t &nTrigObj() { return nt.nTrigObj(); }
    const UInt_t &nWCnames() { return nt.nWCnames(); }
    const UInt_t &nboostedTau() { return nt.nboostedTau(); }
    const float &puWeight() { return nt.puWeight(); }
    const float &puWeightDown() { return nt.puWeightDown(); }
    const float &puWeightUp() { return nt.puWeightUp(); }
    const UInt_t &run() { return nt.run(); }
    const Int_t &year() { return nt.year(); }
    Bool_t isData() { return nt.isData(); }
    Char_t GetC(const string &name) {
        if (name == "BeamSpot_type") return nt.BeamSpot_type();
        return Char_t();
    }
    vector<int> GetVI(const string &name) {
        if (name == "Electron_charge") return nt.Electron_charge();
        else if (name == "Electron_cutBased") return nt.Electron_cutBased();
        else if (name == "Electron_cutBased17") return nt.Electron_cutBased17();
        else if (name == "Electron_cutBased_Fall17V2") return nt.Electron_cutBased_Fall17V2();
        else if (name == "Electron_cutBased_Fall17_V1") return nt.Electron_cutBased_Fall17_V1();
        else if (name == "Electron_cutBased_HLTPreSel") return nt.Electron_cutBased_HLTPreSel();
        else if (name == "Electron_fsrPhotonIdx") return nt.Electron_fsrPhotonIdx();
        else if (name == "Electron_genPartIdx") return nt.Electron_genPartIdx();
        else if (name == "Electron_jetIdx") return nt.Electron_jetIdx();
        else if (name == "Electron_pdgId") return nt.Electron_pdgId();
        else if (name == "Electron_photonIdx") return nt.Electron_photonIdx();
        else if (name == "Electron_seediPhiOriY") return nt.Electron_seediPhiOriY();
        else if (name == "Electron_svIdx") return nt.Electron_svIdx();
        else if (name == "Electron_tightCharge") return nt.Electron_tightCharge();
        else if (name == "Electron_vidNestedWPBitmap") return nt.Electron_vidNestedWPBitmap();
        else if (name == "Electron_vidNestedWPBitmapHEEP") return nt.Electron_vidNestedWPBitmapHEEP();
        else if (name == "Electron_vidNestedWPBitmap_Fall17V2") return nt.Electron_vidNestedWPBitmap_Fall17V2();
        else if (name == "FatJet_electronIdx3SJ") return nt.FatJet_electronIdx3SJ();
        else if (name == "FatJet_genJetAK8Idx") return nt.FatJet_genJetAK8Idx();
        else if (name == "FatJet_hadronFlavour") return nt.FatJet_hadronFlavour();
        else if (name == "FatJet_jetId") return nt.FatJet_jetId();
        else if (name == "FatJet_muonIdx3SJ") return nt.FatJet_muonIdx3SJ();
        else if (name == "FatJet_subJetIdx1") return nt.FatJet_subJetIdx1();
        else if (name == "FatJet_subJetIdx2") return nt.FatJet_subJetIdx2();
        else if (name == "FsrPhoton_electronIdx") return nt.FsrPhoton_electronIdx();
        else if (name == "FsrPhoton_muonIdx") return nt.FsrPhoton_muonIdx();
        else if (name == "GenDressedLepton_pdgId") return nt.GenDressedLepton_pdgId();
        else if (name == "GenJetAK8_partonFlavour") return nt.GenJetAK8_partonFlavour();
        else if (name == "GenJet_partonFlavour") return nt.GenJet_partonFlavour();
        else if (name == "GenPart_genPartIdxMother") return nt.GenPart_genPartIdxMother();
        else if (name == "GenPart_pdgId") return nt.GenPart_pdgId();
        else if (name == "GenPart_status") return nt.GenPart_status();
        else if (name == "GenPart_statusFlags") return nt.GenPart_statusFlags();
        else if (name == "GenVisTau_charge") return nt.GenVisTau_charge();
        else if (name == "GenVisTau_genPartIdxMother") return nt.GenVisTau_genPartIdxMother();
        else if (name == "GenVisTau_status") return nt.GenVisTau_status();
        else if (name == "IsoTrack_charge") return nt.IsoTrack_charge();
        else if (name == "IsoTrack_fromPV") return nt.IsoTrack_fromPV();
        else if (name == "IsoTrack_pdgId") return nt.IsoTrack_pdgId();
        else if (name == "Jet_electronIdx1") return nt.Jet_electronIdx1();
        else if (name == "Jet_electronIdx2") return nt.Jet_electronIdx2();
        else if (name == "Jet_genJetIdx") return nt.Jet_genJetIdx();
        else if (name == "Jet_hadronFlavour") return nt.Jet_hadronFlavour();
        else if (name == "Jet_hfadjacentEtaStripsSize") return nt.Jet_hfadjacentEtaStripsSize();
        else if (name == "Jet_hfcentralEtaStripSize") return nt.Jet_hfcentralEtaStripSize();
        else if (name == "Jet_jetId") return nt.Jet_jetId();
        else if (name == "Jet_muonIdx1") return nt.Jet_muonIdx1();
        else if (name == "Jet_muonIdx2") return nt.Jet_muonIdx2();
        else if (name == "Jet_nElectrons") return nt.Jet_nElectrons();
        else if (name == "Jet_nMuons") return nt.Jet_nMuons();
        else if (name == "Jet_nSVs") return nt.Jet_nSVs();
        else if (name == "Jet_partonFlavour") return nt.Jet_partonFlavour();
        else if (name == "Jet_puId") return nt.Jet_puId();
        else if (name == "Jet_svIdx1") return nt.Jet_svIdx1();
        else if (name == "Jet_svIdx2") return nt.Jet_svIdx2();
        else if (name == "LHEPart_pdgId") return nt.LHEPart_pdgId();
        else if (name == "LHEPart_spin") return nt.LHEPart_spin();
        else if (name == "LHEPart_status") return nt.LHEPart_status();
        else if (name == "LowPtElectron_charge") return nt.LowPtElectron_charge();
        else if (name == "LowPtElectron_convWP") return nt.LowPtElectron_convWP();
        else if (name == "LowPtElectron_electronIdx") return nt.LowPtElectron_electronIdx();
        else if (name == "LowPtElectron_genPartIdx") return nt.LowPtElectron_genPartIdx();
        else if (name == "LowPtElectron_pdgId") return nt.LowPtElectron_pdgId();
        else if (name == "LowPtElectron_photonIdx") return nt.LowPtElectron_photonIdx();
        else if (name == "Muon_charge") return nt.Muon_charge();
        else if (name == "Muon_fsrPhotonIdx") return nt.Muon_fsrPhotonIdx();
        else if (name == "Muon_genPartIdx") return nt.Muon_genPartIdx();
        else if (name == "Muon_jetIdx") return nt.Muon_jetIdx();
        else if (name == "Muon_nStations") return nt.Muon_nStations();
        else if (name == "Muon_nTrackerLayers") return nt.Muon_nTrackerLayers();
        else if (name == "Muon_pdgId") return nt.Muon_pdgId();
        else if (name == "Muon_svIdx") return nt.Muon_svIdx();
        else if (name == "Muon_tightCharge") return nt.Muon_tightCharge();
        else if (name == "PPSLocalTrack_decRPId") return nt.PPSLocalTrack_decRPId();
        else if (name == "PPSLocalTrack_multiRPProtonIdx") return nt.PPSLocalTrack_multiRPProtonIdx();
        else if (name == "PPSLocalTrack_rpType") return nt.PPSLocalTrack_rpType();
        else if (name == "PPSLocalTrack_singleRPProtonIdx") return nt.PPSLocalTrack_singleRPProtonIdx();
        else if (name == "Photon_charge") return nt.Photon_charge();
        else if (name == "Photon_cutBased") return nt.Photon_cutBased();
        else if (name == "Photon_cutBased17Bitmap") return nt.Photon_cutBased17Bitmap();
        else if (name == "Photon_cutBasedBitmap") return nt.Photon_cutBasedBitmap();
        else if (name == "Photon_cutBased_Fall17V1Bitmap") return nt.Photon_cutBased_Fall17V1Bitmap();
        else if (name == "Photon_cutBased_Fall17V2") return nt.Photon_cutBased_Fall17V2();
        else if (name == "Photon_electronIdx") return nt.Photon_electronIdx();
        else if (name == "Photon_genPartIdx") return nt.Photon_genPartIdx();
        else if (name == "Photon_jetIdx") return nt.Photon_jetIdx();
        else if (name == "Photon_pdgId") return nt.Photon_pdgId();
        else if (name == "Photon_seediPhiOriY") return nt.Photon_seediPhiOriY();
        else if (name == "Photon_vidNestedWPBitmap") return nt.Photon_vidNestedWPBitmap();
        else if (name == "Photon_vidNestedWPBitmap_Fall17V2") return nt.Photon_vidNestedWPBitmap_Fall17V2();
        else if (name == "Proton_multiRP_arm") return nt.Proton_multiRP_arm();
        else if (name == "Proton_singleRP_decRPId") return nt.Proton_singleRP_decRPId();
        else if (name == "SV_charge") return nt.SV_charge();
        else if (name == "SubJet_hadronFlavour") return nt.SubJet_hadronFlavour();
        else if (name == "Tau_charge") return nt.Tau_charge();
        else if (name == "Tau_decayMode") return nt.Tau_decayMode();
        else if (name == "Tau_eleIdx") return nt.Tau_eleIdx();
        else if (name == "Tau_genPartIdx") return nt.Tau_genPartIdx();
        else if (name == "Tau_jetIdx") return nt.Tau_jetIdx();
        else if (name == "Tau_muIdx") return nt.Tau_muIdx();
        else if (name == "Tau_nSVs") return nt.Tau_nSVs();
        else if (name == "Tau_rawAntiEleCat") return nt.Tau_rawAntiEleCat();
        else if (name == "Tau_rawAntiEleCat2018") return nt.Tau_rawAntiEleCat2018();
        else if (name == "Tau_svIdx1") return nt.Tau_svIdx1();
        else if (name == "Tau_svIdx2") return nt.Tau_svIdx2();
        else if (name == "TrigObj_filterBits") return nt.TrigObj_filterBits();
        else if (name == "TrigObj_id") return nt.TrigObj_id();
        else if (name == "TrigObj_l1charge") return nt.TrigObj_l1charge();
        else if (name == "TrigObj_l1iso") return nt.TrigObj_l1iso();
        else if (name == "WCnames") return nt.WCnames();
        else if (name == "boostedTau_charge") return nt.boostedTau_charge();
        else if (name == "boostedTau_decayMode") return nt.boostedTau_decayMode();
        else if (name == "boostedTau_genPartIdx") return nt.boostedTau_genPartIdx();
        else if (name == "boostedTau_jetIdx") return nt.boostedTau_jetIdx();
        return vector<int>();
    }
    vector<Char_t> GetVC(const string &name) {
        if (name == "Electron_seediEtaOriX") return nt.Electron_seediEtaOriX();
        return vector<Char_t>();
    }
    int GetI(const string &name) {
        if (name == "Generator_id1") return nt.Generator_id1();
        else if (name == "Generator_id2") return nt.Generator_id2();
        else if (name == "HTXS_stage1_1_cat_pTjet25GeV") return nt.HTXS_stage1_1_cat_pTjet25GeV();
        else if (name == "HTXS_stage1_1_cat_pTjet30GeV") return nt.HTXS_stage1_1_cat_pTjet30GeV();
        else if (name == "HTXS_stage1_1_fine_cat_pTjet25GeV") return nt.HTXS_stage1_1_fine_cat_pTjet25GeV();
        else if (name == "HTXS_stage1_1_fine_cat_pTjet30GeV") return nt.HTXS_stage1_1_fine_cat_pTjet30GeV();
        else if (name == "HTXS_stage1_2_cat_pTjet25GeV") return nt.HTXS_stage1_2_cat_pTjet25GeV();
        else if (name == "HTXS_stage1_2_cat_pTjet30GeV") return nt.HTXS_stage1_2_cat_pTjet30GeV();
        else if (name == "HTXS_stage1_2_fine_cat_pTjet25GeV") return nt.HTXS_stage1_2_fine_cat_pTjet25GeV();
        else if (name == "HTXS_stage1_2_fine_cat_pTjet30GeV") return nt.HTXS_stage1_2_fine_cat_pTjet30GeV();
        else if (name == "HTXS_stage_0") return nt.HTXS_stage_0();
        else if (name == "HTXS_stage_1_pTjet25") return nt.HTXS_stage_1_pTjet25();
        else if (name == "HTXS_stage_1_pTjet30") return nt.HTXS_stage_1_pTjet30();
        else if (name == "PV_npvs") return nt.PV_npvs();
        else if (name == "PV_npvsGood") return nt.PV_npvsGood();
        else if (name == "Pileup_nPU") return nt.Pileup_nPU();
        else if (name == "Pileup_sumEOOT") return nt.Pileup_sumEOOT();
        else if (name == "Pileup_sumLOOT") return nt.Pileup_sumLOOT();
        else if (name == "SoftActivityJetNjets10") return nt.SoftActivityJetNjets10();
        else if (name == "SoftActivityJetNjets2") return nt.SoftActivityJetNjets2();
        else if (name == "SoftActivityJetNjets5") return nt.SoftActivityJetNjets5();
        return int();
    }
    float GetF(const string &name) {
        if (name == "BeamSpot_sigmaZ") return nt.BeamSpot_sigmaZ();
        else if (name == "BeamSpot_sigmaZError") return nt.BeamSpot_sigmaZError();
        else if (name == "BeamSpot_z") return nt.BeamSpot_z();
        else if (name == "BeamSpot_zError") return nt.BeamSpot_zError();
        else if (name == "CaloMET_phi") return nt.CaloMET_phi();
        else if (name == "CaloMET_pt") return nt.CaloMET_pt();
        else if (name == "CaloMET_sumEt") return nt.CaloMET_sumEt();
        else if (name == "ChsMET_phi") return nt.ChsMET_phi();
        else if (name == "ChsMET_pt") return nt.ChsMET_pt();
        else if (name == "ChsMET_sumEt") return nt.ChsMET_sumEt();
        else if (name == "DeepMETResolutionTune_phi") return nt.DeepMETResolutionTune_phi();
        else if (name == "DeepMETResolutionTune_pt") return nt.DeepMETResolutionTune_pt();
        else if (name == "DeepMETResponseTune_phi") return nt.DeepMETResponseTune_phi();
        else if (name == "DeepMETResponseTune_pt") return nt.DeepMETResponseTune_pt();
        else if (name == "GenMET_phi") return nt.GenMET_phi();
        else if (name == "GenMET_pt") return nt.GenMET_pt();
        else if (name == "GenVtx_t0") return nt.GenVtx_t0();
        else if (name == "GenVtx_x") return nt.GenVtx_x();
        else if (name == "GenVtx_y") return nt.GenVtx_y();
        else if (name == "GenVtx_z") return nt.GenVtx_z();
        else if (name == "Generator_binvar") return nt.Generator_binvar();
        else if (name == "Generator_scalePDF") return nt.Generator_scalePDF();
        else if (name == "Generator_weight") return nt.Generator_weight();
        else if (name == "Generator_x1") return nt.Generator_x1();
        else if (name == "Generator_x2") return nt.Generator_x2();
        else if (name == "Generator_xpdf1") return nt.Generator_xpdf1();
        else if (name == "Generator_xpdf2") return nt.Generator_xpdf2();
        else if (name == "HTXS_Higgs_pt") return nt.HTXS_Higgs_pt();
        else if (name == "HTXS_Higgs_y") return nt.HTXS_Higgs_y();
        else if (name == "L1PreFiringWeight_Dn") return nt.L1PreFiringWeight_Dn();
        else if (name == "L1PreFiringWeight_ECAL_Dn") return nt.L1PreFiringWeight_ECAL_Dn();
        else if (name == "L1PreFiringWeight_ECAL_Nom") return nt.L1PreFiringWeight_ECAL_Nom();
        else if (name == "L1PreFiringWeight_ECAL_Up") return nt.L1PreFiringWeight_ECAL_Up();
        else if (name == "L1PreFiringWeight_Muon_Nom") return nt.L1PreFiringWeight_Muon_Nom();
        else if (name == "L1PreFiringWeight_Muon_StatDn") return nt.L1PreFiringWeight_Muon_StatDn();
        else if (name == "L1PreFiringWeight_Muon_StatUp") return nt.L1PreFiringWeight_Muon_StatUp();
        else if (name == "L1PreFiringWeight_Muon_SystDn") return nt.L1PreFiringWeight_Muon_SystDn();
        else if (name == "L1PreFiringWeight_Muon_SystUp") return nt.L1PreFiringWeight_Muon_SystUp();
        else if (name == "L1PreFiringWeight_Nom") return nt.L1PreFiringWeight_Nom();
        else if (name == "L1PreFiringWeight_Up") return nt.L1PreFiringWeight_Up();
        else if (name == "LHEWeight_dummy") return nt.LHEWeight_dummy();
        else if (name == "LHEWeight_originalXWGTUP") return nt.LHEWeight_originalXWGTUP();
        else if (name == "LHE_AlphaS") return nt.LHE_AlphaS();
        else if (name == "LHE_HT") return nt.LHE_HT();
        else if (name == "LHE_HTIncoming") return nt.LHE_HTIncoming();
        else if (name == "LHE_Vpt") return nt.LHE_Vpt();
        else if (name == "MET_MetUnclustEnUpDeltaX") return nt.MET_MetUnclustEnUpDeltaX();
        else if (name == "MET_MetUnclustEnUpDeltaY") return nt.MET_MetUnclustEnUpDeltaY();
        else if (name == "MET_T1Smear_phi") return nt.MET_T1Smear_phi();
        else if (name == "MET_T1Smear_phi_jerDown") return nt.MET_T1Smear_phi_jerDown();
        else if (name == "MET_T1Smear_phi_jerUp") return nt.MET_T1Smear_phi_jerUp();
        else if (name == "MET_T1Smear_phi_jesHEMIssueDown") return nt.MET_T1Smear_phi_jesHEMIssueDown();
        else if (name == "MET_T1Smear_phi_jesHEMIssueUp") return nt.MET_T1Smear_phi_jesHEMIssueUp();
        else if (name == "MET_T1Smear_phi_jesTotalDown") return nt.MET_T1Smear_phi_jesTotalDown();
        else if (name == "MET_T1Smear_phi_jesTotalUp") return nt.MET_T1Smear_phi_jesTotalUp();
        else if (name == "MET_T1Smear_phi_unclustEnDown") return nt.MET_T1Smear_phi_unclustEnDown();
        else if (name == "MET_T1Smear_phi_unclustEnUp") return nt.MET_T1Smear_phi_unclustEnUp();
        else if (name == "MET_T1Smear_pt") return nt.MET_T1Smear_pt();
        else if (name == "MET_T1Smear_pt_jerDown") return nt.MET_T1Smear_pt_jerDown();
        else if (name == "MET_T1Smear_pt_jerUp") return nt.MET_T1Smear_pt_jerUp();
        else if (name == "MET_T1Smear_pt_jesHEMIssueDown") return nt.MET_T1Smear_pt_jesHEMIssueDown();
        else if (name == "MET_T1Smear_pt_jesHEMIssueUp") return nt.MET_T1Smear_pt_jesHEMIssueUp();
        else if (name == "MET_T1Smear_pt_jesTotalDown") return nt.MET_T1Smear_pt_jesTotalDown();
        else if (name == "MET_T1Smear_pt_jesTotalUp") return nt.MET_T1Smear_pt_jesTotalUp();
        else if (name == "MET_T1Smear_pt_unclustEnDown") return nt.MET_T1Smear_pt_unclustEnDown();
        else if (name == "MET_T1Smear_pt_unclustEnUp") return nt.MET_T1Smear_pt_unclustEnUp();
        else if (name == "MET_T1_phi") return nt.MET_T1_phi();
        else if (name == "MET_T1_phi_jerDown") return nt.MET_T1_phi_jerDown();
        else if (name == "MET_T1_phi_jerUp") return nt.MET_T1_phi_jerUp();
        else if (name == "MET_T1_phi_jesHEMIssueDown") return nt.MET_T1_phi_jesHEMIssueDown();
        else if (name == "MET_T1_phi_jesHEMIssueUp") return nt.MET_T1_phi_jesHEMIssueUp();
        else if (name == "MET_T1_phi_jesTotalDown") return nt.MET_T1_phi_jesTotalDown();
        else if (name == "MET_T1_phi_jesTotalUp") return nt.MET_T1_phi_jesTotalUp();
        else if (name == "MET_T1_phi_unclustEnDown") return nt.MET_T1_phi_unclustEnDown();
        else if (name == "MET_T1_phi_unclustEnUp") return nt.MET_T1_phi_unclustEnUp();
        else if (name == "MET_T1_pt") return nt.MET_T1_pt();
        else if (name == "MET_T1_pt_jerDown") return nt.MET_T1_pt_jerDown();
        else if (name == "MET_T1_pt_jerUp") return nt.MET_T1_pt_jerUp();
        else if (name == "MET_T1_pt_jesHEMIssueDown") return nt.MET_T1_pt_jesHEMIssueDown();
        else if (name == "MET_T1_pt_jesHEMIssueUp") return nt.MET_T1_pt_jesHEMIssueUp();
        else if (name == "MET_T1_pt_jesTotalDown") return nt.MET_T1_pt_jesTotalDown();
        else if (name == "MET_T1_pt_jesTotalUp") return nt.MET_T1_pt_jesTotalUp();
        else if (name == "MET_T1_pt_unclustEnDown") return nt.MET_T1_pt_unclustEnDown();
        else if (name == "MET_T1_pt_unclustEnUp") return nt.MET_T1_pt_unclustEnUp();
        else if (name == "MET_covXX") return nt.MET_covXX();
        else if (name == "MET_covXY") return nt.MET_covXY();
        else if (name == "MET_covYY") return nt.MET_covYY();
        else if (name == "MET_fiducialGenPhi") return nt.MET_fiducialGenPhi();
        else if (name == "MET_fiducialGenPt") return nt.MET_fiducialGenPt();
        else if (name == "MET_phi") return nt.MET_phi();
        else if (name == "MET_pt") return nt.MET_pt();
        else if (name == "MET_significance") return nt.MET_significance();
        else if (name == "MET_sumEt") return nt.MET_sumEt();
        else if (name == "MET_sumPtUnclustered") return nt.MET_sumPtUnclustered();
        else if (name == "PV_chi2") return nt.PV_chi2();
        else if (name == "PV_ndof") return nt.PV_ndof();
        else if (name == "PV_score") return nt.PV_score();
        else if (name == "PV_x") return nt.PV_x();
        else if (name == "PV_y") return nt.PV_y();
        else if (name == "PV_z") return nt.PV_z();
        else if (name == "Pileup_gpudensity") return nt.Pileup_gpudensity();
        else if (name == "Pileup_nTrueInt") return nt.Pileup_nTrueInt();
        else if (name == "Pileup_pudensity") return nt.Pileup_pudensity();
        else if (name == "PuppiMET_phi") return nt.PuppiMET_phi();
        else if (name == "PuppiMET_phiJERDown") return nt.PuppiMET_phiJERDown();
        else if (name == "PuppiMET_phiJERUp") return nt.PuppiMET_phiJERUp();
        else if (name == "PuppiMET_phiJESDown") return nt.PuppiMET_phiJESDown();
        else if (name == "PuppiMET_phiJESUp") return nt.PuppiMET_phiJESUp();
        else if (name == "PuppiMET_phiUnclusteredDown") return nt.PuppiMET_phiUnclusteredDown();
        else if (name == "PuppiMET_phiUnclusteredUp") return nt.PuppiMET_phiUnclusteredUp();
        else if (name == "PuppiMET_pt") return nt.PuppiMET_pt();
        else if (name == "PuppiMET_ptJERDown") return nt.PuppiMET_ptJERDown();
        else if (name == "PuppiMET_ptJERUp") return nt.PuppiMET_ptJERUp();
        else if (name == "PuppiMET_ptJESDown") return nt.PuppiMET_ptJESDown();
        else if (name == "PuppiMET_ptJESUp") return nt.PuppiMET_ptJESUp();
        else if (name == "PuppiMET_ptUnclusteredDown") return nt.PuppiMET_ptUnclusteredDown();
        else if (name == "PuppiMET_ptUnclusteredUp") return nt.PuppiMET_ptUnclusteredUp();
        else if (name == "PuppiMET_sumEt") return nt.PuppiMET_sumEt();
        else if (name == "RawMET_phi") return nt.RawMET_phi();
        else if (name == "RawMET_pt") return nt.RawMET_pt();
        else if (name == "RawMET_sumEt") return nt.RawMET_sumEt();
        else if (name == "RawPuppiMET_phi") return nt.RawPuppiMET_phi();
        else if (name == "RawPuppiMET_pt") return nt.RawPuppiMET_pt();
        else if (name == "RawPuppiMET_sumEt") return nt.RawPuppiMET_sumEt();
        else if (name == "Rho_fixedGridRhoAll") return nt.Rho_fixedGridRhoAll();
        else if (name == "Rho_fixedGridRhoFastjetAll") return nt.Rho_fixedGridRhoFastjetAll();
        else if (name == "Rho_fixedGridRhoFastjetCentral") return nt.Rho_fixedGridRhoFastjetCentral();
        else if (name == "Rho_fixedGridRhoFastjetCentralCalo") return nt.Rho_fixedGridRhoFastjetCentralCalo();
        else if (name == "Rho_fixedGridRhoFastjetCentralChargedPileUp") return nt.Rho_fixedGridRhoFastjetCentralChargedPileUp();
        else if (name == "Rho_fixedGridRhoFastjetCentralNeutral") return nt.Rho_fixedGridRhoFastjetCentralNeutral();
        else if (name == "SoftActivityJetHT") return nt.SoftActivityJetHT();
        else if (name == "SoftActivityJetHT10") return nt.SoftActivityJetHT10();
        else if (name == "SoftActivityJetHT2") return nt.SoftActivityJetHT2();
        else if (name == "SoftActivityJetHT5") return nt.SoftActivityJetHT5();
        else if (name == "TkMET_phi") return nt.TkMET_phi();
        else if (name == "TkMET_pt") return nt.TkMET_pt();
        else if (name == "TkMET_sumEt") return nt.TkMET_sumEt();
        else if (name == "btagWeight_CSVV2") return nt.btagWeight_CSVV2();
        else if (name == "btagWeight_DeepCSVB") return nt.btagWeight_DeepCSVB();
        else if (name == "fixedGridRhoFastjetAll") return nt.fixedGridRhoFastjetAll();
        else if (name == "fixedGridRhoFastjetCentral") return nt.fixedGridRhoFastjetCentral();
        else if (name == "fixedGridRhoFastjetCentralCalo") return nt.fixedGridRhoFastjetCentralCalo();
        else if (name == "fixedGridRhoFastjetCentralChargedPileUp") return nt.fixedGridRhoFastjetCentralChargedPileUp();
        else if (name == "fixedGridRhoFastjetCentralNeutral") return nt.fixedGridRhoFastjetCentralNeutral();
        else if (name == "genWeight") return nt.genWeight();
        else if (name == "puWeight") return nt.puWeight();
        else if (name == "puWeightDown") return nt.puWeightDown();
        return float();
    }
    vector<float> GetVF(const string &name) {
        if (name == "CorrT1METJet_area") return nt.CorrT1METJet_area();
        else if (name == "CorrT1METJet_eta") return nt.CorrT1METJet_eta();
        else if (name == "CorrT1METJet_muonSubtrFactor") return nt.CorrT1METJet_muonSubtrFactor();
        else if (name == "CorrT1METJet_phi") return nt.CorrT1METJet_phi();
        else if (name == "CorrT1METJet_rawPt") return nt.CorrT1METJet_rawPt();
        else if (name == "EFTfitCoefficients") return nt.EFTfitCoefficients();
        else if (name == "Electron_CutBased_LooseID_SF") return nt.Electron_CutBased_LooseID_SF();
        else if (name == "Electron_CutBased_LooseID_SFerr") return nt.Electron_CutBased_LooseID_SFerr();
        else if (name == "Electron_CutBased_MediumID_SF") return nt.Electron_CutBased_MediumID_SF();
        else if (name == "Electron_CutBased_MediumID_SFerr") return nt.Electron_CutBased_MediumID_SFerr();
        else if (name == "Electron_CutBased_TightID_SF") return nt.Electron_CutBased_TightID_SF();
        else if (name == "Electron_CutBased_TightID_SFerr") return nt.Electron_CutBased_TightID_SFerr();
        else if (name == "Electron_CutBased_VetoID_SF") return nt.Electron_CutBased_VetoID_SF();
        else if (name == "Electron_CutBased_VetoID_SFerr") return nt.Electron_CutBased_VetoID_SFerr();
        else if (name == "Electron_MVAFall17V2Iso_WP80_SF") return nt.Electron_MVAFall17V2Iso_WP80_SF();
        else if (name == "Electron_MVAFall17V2Iso_WP80_SFerr") return nt.Electron_MVAFall17V2Iso_WP80_SFerr();
        else if (name == "Electron_MVAFall17V2Iso_WP90_SF") return nt.Electron_MVAFall17V2Iso_WP90_SF();
        else if (name == "Electron_MVAFall17V2Iso_WP90_SFerr") return nt.Electron_MVAFall17V2Iso_WP90_SFerr();
        else if (name == "Electron_MVAFall17V2noIso_WP80_SF") return nt.Electron_MVAFall17V2noIso_WP80_SF();
        else if (name == "Electron_MVAFall17V2noIso_WP80_SFerr") return nt.Electron_MVAFall17V2noIso_WP80_SFerr();
        else if (name == "Electron_MVAFall17V2noIso_WP90_SF") return nt.Electron_MVAFall17V2noIso_WP90_SF();
        else if (name == "Electron_MVAFall17V2noIso_WP90_SFerr") return nt.Electron_MVAFall17V2noIso_WP90_SFerr();
        else if (name == "Electron_RECO_SF") return nt.Electron_RECO_SF();
        else if (name == "Electron_RECO_SFerr") return nt.Electron_RECO_SFerr();
        else if (name == "Electron_dEscaleDown") return nt.Electron_dEscaleDown();
        else if (name == "Electron_dEscaleUp") return nt.Electron_dEscaleUp();
        else if (name == "Electron_dEsigmaDown") return nt.Electron_dEsigmaDown();
        else if (name == "Electron_dEsigmaUp") return nt.Electron_dEsigmaUp();
        else if (name == "Electron_deltaEtaSC") return nt.Electron_deltaEtaSC();
        else if (name == "Electron_dr03EcalRecHitSumEt") return nt.Electron_dr03EcalRecHitSumEt();
        else if (name == "Electron_dr03HcalDepth1TowerSumEt") return nt.Electron_dr03HcalDepth1TowerSumEt();
        else if (name == "Electron_dr03TkSumPt") return nt.Electron_dr03TkSumPt();
        else if (name == "Electron_dr03TkSumPtHEEP") return nt.Electron_dr03TkSumPtHEEP();
        else if (name == "Electron_dxy") return nt.Electron_dxy();
        else if (name == "Electron_dxyErr") return nt.Electron_dxyErr();
        else if (name == "Electron_dz") return nt.Electron_dz();
        else if (name == "Electron_dzErr") return nt.Electron_dzErr();
        else if (name == "Electron_eCorr") return nt.Electron_eCorr();
        else if (name == "Electron_eInvMinusPInv") return nt.Electron_eInvMinusPInv();
        else if (name == "Electron_energyErr") return nt.Electron_energyErr();
        else if (name == "Electron_eta") return nt.Electron_eta();
        else if (name == "Electron_hoe") return nt.Electron_hoe();
        else if (name == "Electron_ip3d") return nt.Electron_ip3d();
        else if (name == "Electron_jetPtRelv2") return nt.Electron_jetPtRelv2();
        else if (name == "Electron_jetRelIso") return nt.Electron_jetRelIso();
        else if (name == "Electron_jetRelIso_Fall17V2") return nt.Electron_jetRelIso_Fall17V2();
        else if (name == "Electron_mass") return nt.Electron_mass();
        else if (name == "Electron_miniPFRelIso_all") return nt.Electron_miniPFRelIso_all();
        else if (name == "Electron_miniPFRelIso_all_Fall17V2") return nt.Electron_miniPFRelIso_all_Fall17V2();
        else if (name == "Electron_miniPFRelIso_chg") return nt.Electron_miniPFRelIso_chg();
        else if (name == "Electron_miniPFRelIso_chg_Fall17V2") return nt.Electron_miniPFRelIso_chg_Fall17V2();
        else if (name == "Electron_mvaFall17Iso") return nt.Electron_mvaFall17Iso();
        else if (name == "Electron_mvaFall17V1Iso") return nt.Electron_mvaFall17V1Iso();
        else if (name == "Electron_mvaFall17V1noIso") return nt.Electron_mvaFall17V1noIso();
        else if (name == "Electron_mvaFall17V2Iso") return nt.Electron_mvaFall17V2Iso();
        else if (name == "Electron_mvaFall17V2noIso") return nt.Electron_mvaFall17V2noIso();
        else if (name == "Electron_mvaFall17noIso") return nt.Electron_mvaFall17noIso();
        else if (name == "Electron_mvaHZZIso") return nt.Electron_mvaHZZIso();
        else if (name == "Electron_mvaIso") return nt.Electron_mvaIso();
        else if (name == "Electron_mvaIso_Fall17V2") return nt.Electron_mvaIso_Fall17V2();
        else if (name == "Electron_mvaNoIso") return nt.Electron_mvaNoIso();
        else if (name == "Electron_mvaNoIso_Fall17V2") return nt.Electron_mvaNoIso_Fall17V2();
        else if (name == "Electron_mvaSpring16GP") return nt.Electron_mvaSpring16GP();
        else if (name == "Electron_mvaSpring16HZZ") return nt.Electron_mvaSpring16HZZ();
        else if (name == "Electron_mvaTTH") return nt.Electron_mvaTTH();
        // NOTE: this is a custom branch; temporarily added for convenience
        else if (name == "Electron_mvaTTHUL") return nt.Electron_mvaTTHUL();
        //
        else if (name == "Electron_pfRelIso03_all") return nt.Electron_pfRelIso03_all();
        else if (name == "Electron_pfRelIso03_all_Fall17V2") return nt.Electron_pfRelIso03_all_Fall17V2();
        else if (name == "Electron_pfRelIso03_chg") return nt.Electron_pfRelIso03_chg();
        else if (name == "Electron_pfRelIso03_chg_Fall17V2") return nt.Electron_pfRelIso03_chg_Fall17V2();
        else if (name == "Electron_phi") return nt.Electron_phi();
        else if (name == "Electron_pt") return nt.Electron_pt();
        else if (name == "Electron_r9") return nt.Electron_r9();
        else if (name == "Electron_scEtOverPt") return nt.Electron_scEtOverPt();
        else if (name == "Electron_sieie") return nt.Electron_sieie();
        else if (name == "Electron_sip3d") return nt.Electron_sip3d();
        else if (name == "FatJet_area") return nt.FatJet_area();
        else if (name == "FatJet_btagCMVA") return nt.FatJet_btagCMVA();
        else if (name == "FatJet_btagCSVV2") return nt.FatJet_btagCSVV2();
        else if (name == "FatJet_btagDDBvL") return nt.FatJet_btagDDBvL();
        else if (name == "FatJet_btagDDBvLV2") return nt.FatJet_btagDDBvLV2();
        else if (name == "FatJet_btagDDBvL_noMD") return nt.FatJet_btagDDBvL_noMD();
        else if (name == "FatJet_btagDDCvB") return nt.FatJet_btagDDCvB();
        else if (name == "FatJet_btagDDCvBV2") return nt.FatJet_btagDDCvBV2();
        else if (name == "FatJet_btagDDCvB_noMD") return nt.FatJet_btagDDCvB_noMD();
        else if (name == "FatJet_btagDDCvL") return nt.FatJet_btagDDCvL();
        else if (name == "FatJet_btagDDCvLV2") return nt.FatJet_btagDDCvLV2();
        else if (name == "FatJet_btagDDCvL_noMD") return nt.FatJet_btagDDCvL_noMD();
        else if (name == "FatJet_btagDeepB") return nt.FatJet_btagDeepB();
        else if (name == "FatJet_btagHbb") return nt.FatJet_btagHbb();
        else if (name == "FatJet_corr_JEC") return nt.FatJet_corr_JEC();
        else if (name == "FatJet_corr_JER") return nt.FatJet_corr_JER();
        else if (name == "FatJet_corr_JMR") return nt.FatJet_corr_JMR();
        else if (name == "FatJet_corr_JMS") return nt.FatJet_corr_JMS();
        else if (name == "FatJet_deepTagMD_H4qvsQCD") return nt.FatJet_deepTagMD_H4qvsQCD();
        else if (name == "FatJet_deepTagMD_HbbvsQCD") return nt.FatJet_deepTagMD_HbbvsQCD();
        else if (name == "FatJet_deepTagMD_TvsQCD") return nt.FatJet_deepTagMD_TvsQCD();
        else if (name == "FatJet_deepTagMD_WvsQCD") return nt.FatJet_deepTagMD_WvsQCD();
        else if (name == "FatJet_deepTagMD_ZHbbvsQCD") return nt.FatJet_deepTagMD_ZHbbvsQCD();
        else if (name == "FatJet_deepTagMD_ZHccvsQCD") return nt.FatJet_deepTagMD_ZHccvsQCD();
        else if (name == "FatJet_deepTagMD_ZbbvsQCD") return nt.FatJet_deepTagMD_ZbbvsQCD();
        else if (name == "FatJet_deepTagMD_ZvsQCD") return nt.FatJet_deepTagMD_ZvsQCD();
        else if (name == "FatJet_deepTagMD_bbvsLight") return nt.FatJet_deepTagMD_bbvsLight();
        else if (name == "FatJet_deepTagMD_ccvsLight") return nt.FatJet_deepTagMD_ccvsLight();
        else if (name == "FatJet_deepTag_H") return nt.FatJet_deepTag_H();
        else if (name == "FatJet_deepTag_QCD") return nt.FatJet_deepTag_QCD();
        else if (name == "FatJet_deepTag_QCDothers") return nt.FatJet_deepTag_QCDothers();
        else if (name == "FatJet_deepTag_TvsQCD") return nt.FatJet_deepTag_TvsQCD();
        else if (name == "FatJet_deepTag_WvsQCD") return nt.FatJet_deepTag_WvsQCD();
        else if (name == "FatJet_deepTag_ZvsQCD") return nt.FatJet_deepTag_ZvsQCD();
        else if (name == "FatJet_eta") return nt.FatJet_eta();
        else if (name == "FatJet_lsf3") return nt.FatJet_lsf3();
        else if (name == "FatJet_mass") return nt.FatJet_mass();
        else if (name == "FatJet_mass_jerDown") return nt.FatJet_mass_jerDown();
        else if (name == "FatJet_mass_jerUp") return nt.FatJet_mass_jerUp();
        else if (name == "FatJet_mass_jesTotalDown") return nt.FatJet_mass_jesTotalDown();
        else if (name == "FatJet_mass_jesTotalUp") return nt.FatJet_mass_jesTotalUp();
        else if (name == "FatJet_mass_jmrDown") return nt.FatJet_mass_jmrDown();
        else if (name == "FatJet_mass_jmrUp") return nt.FatJet_mass_jmrUp();
        else if (name == "FatJet_mass_jmsDown") return nt.FatJet_mass_jmsDown();
        else if (name == "FatJet_mass_jmsUp") return nt.FatJet_mass_jmsUp();
        else if (name == "FatJet_mass_nom") return nt.FatJet_mass_nom();
        else if (name == "FatJet_mass_raw") return nt.FatJet_mass_raw();
        else if (name == "FatJet_msoftdrop") return nt.FatJet_msoftdrop();
        else if (name == "FatJet_msoftdrop_corr_JMR") return nt.FatJet_msoftdrop_corr_JMR();
        else if (name == "FatJet_msoftdrop_corr_JMS") return nt.FatJet_msoftdrop_corr_JMS();
        else if (name == "FatJet_msoftdrop_corr_PUPPI") return nt.FatJet_msoftdrop_corr_PUPPI();
        else if (name == "FatJet_msoftdrop_jerDown") return nt.FatJet_msoftdrop_jerDown();
        else if (name == "FatJet_msoftdrop_jerUp") return nt.FatJet_msoftdrop_jerUp();
        else if (name == "FatJet_msoftdrop_jesTotalDown") return nt.FatJet_msoftdrop_jesTotalDown();
        else if (name == "FatJet_msoftdrop_jesTotalUp") return nt.FatJet_msoftdrop_jesTotalUp();
        else if (name == "FatJet_msoftdrop_jmrDown") return nt.FatJet_msoftdrop_jmrDown();
        else if (name == "FatJet_msoftdrop_jmrUp") return nt.FatJet_msoftdrop_jmrUp();
        else if (name == "FatJet_msoftdrop_jmsDown") return nt.FatJet_msoftdrop_jmsDown();
        else if (name == "FatJet_msoftdrop_jmsUp") return nt.FatJet_msoftdrop_jmsUp();
        else if (name == "FatJet_msoftdrop_nom") return nt.FatJet_msoftdrop_nom();
        else if (name == "FatJet_msoftdrop_raw") return nt.FatJet_msoftdrop_raw();
        else if (name == "FatJet_msoftdrop_tau21DDT_jerDown") return nt.FatJet_msoftdrop_tau21DDT_jerDown();
        else if (name == "FatJet_msoftdrop_tau21DDT_jerUp") return nt.FatJet_msoftdrop_tau21DDT_jerUp();
        else if (name == "FatJet_msoftdrop_tau21DDT_jmrDown") return nt.FatJet_msoftdrop_tau21DDT_jmrDown();
        else if (name == "FatJet_msoftdrop_tau21DDT_jmrUp") return nt.FatJet_msoftdrop_tau21DDT_jmrUp();
        else if (name == "FatJet_msoftdrop_tau21DDT_jmsDown") return nt.FatJet_msoftdrop_tau21DDT_jmsDown();
        else if (name == "FatJet_msoftdrop_tau21DDT_jmsUp") return nt.FatJet_msoftdrop_tau21DDT_jmsUp();
        else if (name == "FatJet_msoftdrop_tau21DDT_nom") return nt.FatJet_msoftdrop_tau21DDT_nom();
        else if (name == "FatJet_n2b1") return nt.FatJet_n2b1();
        else if (name == "FatJet_n3b1") return nt.FatJet_n3b1();
        else if (name == "FatJet_particleNetMD_QCD") return nt.FatJet_particleNetMD_QCD();
        else if (name == "FatJet_particleNetMD_Xbb") return nt.FatJet_particleNetMD_Xbb();
        else if (name == "FatJet_particleNetMD_Xcc") return nt.FatJet_particleNetMD_Xcc();
        else if (name == "FatJet_particleNetMD_Xqq") return nt.FatJet_particleNetMD_Xqq();
        else if (name == "FatJet_particleNet_H4qvsQCD") return nt.FatJet_particleNet_H4qvsQCD();
        else if (name == "FatJet_particleNet_HbbvsQCD") return nt.FatJet_particleNet_HbbvsQCD();
        else if (name == "FatJet_particleNet_HccvsQCD") return nt.FatJet_particleNet_HccvsQCD();
        else if (name == "FatJet_particleNet_QCD") return nt.FatJet_particleNet_QCD();
        else if (name == "FatJet_particleNet_TvsQCD") return nt.FatJet_particleNet_TvsQCD();
        else if (name == "FatJet_particleNet_WvsQCD") return nt.FatJet_particleNet_WvsQCD();
        else if (name == "FatJet_particleNet_ZvsQCD") return nt.FatJet_particleNet_ZvsQCD();
        else if (name == "FatJet_particleNet_mass") return nt.FatJet_particleNet_mass();
        else if (name == "FatJet_phi") return nt.FatJet_phi();
        else if (name == "FatJet_pt") return nt.FatJet_pt();
        else if (name == "FatJet_pt_jerDown") return nt.FatJet_pt_jerDown();
        else if (name == "FatJet_pt_jerUp") return nt.FatJet_pt_jerUp();
        else if (name == "FatJet_pt_jesTotalDown") return nt.FatJet_pt_jesTotalDown();
        else if (name == "FatJet_pt_jesTotalUp") return nt.FatJet_pt_jesTotalUp();
        else if (name == "FatJet_pt_nom") return nt.FatJet_pt_nom();
        else if (name == "FatJet_pt_raw") return nt.FatJet_pt_raw();
        else if (name == "FatJet_rawFactor") return nt.FatJet_rawFactor();
        else if (name == "FatJet_tau1") return nt.FatJet_tau1();
        else if (name == "FatJet_tau2") return nt.FatJet_tau2();
        else if (name == "FatJet_tau3") return nt.FatJet_tau3();
        else if (name == "FatJet_tau4") return nt.FatJet_tau4();
        else if (name == "FsrPhoton_dROverEt2") return nt.FsrPhoton_dROverEt2();
        else if (name == "FsrPhoton_eta") return nt.FsrPhoton_eta();
        else if (name == "FsrPhoton_phi") return nt.FsrPhoton_phi();
        else if (name == "FsrPhoton_pt") return nt.FsrPhoton_pt();
        else if (name == "FsrPhoton_relIso03") return nt.FsrPhoton_relIso03();
        else if (name == "GenDressedLepton_eta") return nt.GenDressedLepton_eta();
        else if (name == "GenDressedLepton_mass") return nt.GenDressedLepton_mass();
        else if (name == "GenDressedLepton_phi") return nt.GenDressedLepton_phi();
        else if (name == "GenDressedLepton_pt") return nt.GenDressedLepton_pt();
        else if (name == "GenIsolatedPhoton_eta") return nt.GenIsolatedPhoton_eta();
        else if (name == "GenIsolatedPhoton_mass") return nt.GenIsolatedPhoton_mass();
        else if (name == "GenIsolatedPhoton_phi") return nt.GenIsolatedPhoton_phi();
        else if (name == "GenIsolatedPhoton_pt") return nt.GenIsolatedPhoton_pt();
        else if (name == "GenJetAK8_eta") return nt.GenJetAK8_eta();
        else if (name == "GenJetAK8_mass") return nt.GenJetAK8_mass();
        else if (name == "GenJetAK8_phi") return nt.GenJetAK8_phi();
        else if (name == "GenJetAK8_pt") return nt.GenJetAK8_pt();
        else if (name == "GenJet_eta") return nt.GenJet_eta();
        else if (name == "GenJet_mass") return nt.GenJet_mass();
        else if (name == "GenJet_phi") return nt.GenJet_phi();
        else if (name == "GenJet_pt") return nt.GenJet_pt();
        else if (name == "GenPart_eta") return nt.GenPart_eta();
        else if (name == "GenPart_mass") return nt.GenPart_mass();
        else if (name == "GenPart_phi") return nt.GenPart_phi();
        else if (name == "GenPart_pt") return nt.GenPart_pt();
        else if (name == "GenProton_px") return nt.GenProton_px();
        else if (name == "GenProton_py") return nt.GenProton_py();
        else if (name == "GenProton_pz") return nt.GenProton_pz();
        else if (name == "GenProton_vz") return nt.GenProton_vz();
        else if (name == "GenVisTau_eta") return nt.GenVisTau_eta();
        else if (name == "GenVisTau_mass") return nt.GenVisTau_mass();
        else if (name == "GenVisTau_phi") return nt.GenVisTau_phi();
        else if (name == "GenVisTau_pt") return nt.GenVisTau_pt();
        else if (name == "IsoTrack_dxy") return nt.IsoTrack_dxy();
        else if (name == "IsoTrack_dz") return nt.IsoTrack_dz();
        else if (name == "IsoTrack_eta") return nt.IsoTrack_eta();
        else if (name == "IsoTrack_miniPFRelIso_all") return nt.IsoTrack_miniPFRelIso_all();
        else if (name == "IsoTrack_miniPFRelIso_chg") return nt.IsoTrack_miniPFRelIso_chg();
        else if (name == "IsoTrack_pfRelIso03_all") return nt.IsoTrack_pfRelIso03_all();
        else if (name == "IsoTrack_pfRelIso03_chg") return nt.IsoTrack_pfRelIso03_chg();
        else if (name == "IsoTrack_phi") return nt.IsoTrack_phi();
        else if (name == "IsoTrack_pt") return nt.IsoTrack_pt();
        else if (name == "Jet_area") return nt.Jet_area();
        else if (name == "Jet_bReg") return nt.Jet_bReg();
        else if (name == "Jet_bRegCorr") return nt.Jet_bRegCorr();
        else if (name == "Jet_bRegRes") return nt.Jet_bRegRes();
        else if (name == "Jet_btagCMVA") return nt.Jet_btagCMVA();
        else if (name == "Jet_btagCSVV2") return nt.Jet_btagCSVV2();
        else if (name == "Jet_btagDeepB") return nt.Jet_btagDeepB();
        else if (name == "Jet_btagDeepC") return nt.Jet_btagDeepC();
        else if (name == "Jet_btagDeepCvB") return nt.Jet_btagDeepCvB();
        else if (name == "Jet_btagDeepCvL") return nt.Jet_btagDeepCvL();
        else if (name == "Jet_btagDeepFlavB") return nt.Jet_btagDeepFlavB();
        else if (name == "Jet_btagDeepFlavC") return nt.Jet_btagDeepFlavC();
        else if (name == "Jet_btagDeepFlavCvB") return nt.Jet_btagDeepFlavCvB();
        else if (name == "Jet_btagDeepFlavCvL") return nt.Jet_btagDeepFlavCvL();
        else if (name == "Jet_btagDeepFlavQG") return nt.Jet_btagDeepFlavQG();
        else if (name == "Jet_cRegCorr") return nt.Jet_cRegCorr();
        else if (name == "Jet_cRegRes") return nt.Jet_cRegRes();
        else if (name == "Jet_chEmEF") return nt.Jet_chEmEF();
        else if (name == "Jet_chFPV0EF") return nt.Jet_chFPV0EF();
        else if (name == "Jet_chFPV1EF") return nt.Jet_chFPV1EF();
        else if (name == "Jet_chFPV2EF") return nt.Jet_chFPV2EF();
        else if (name == "Jet_chFPV3EF") return nt.Jet_chFPV3EF();
        else if (name == "Jet_chHEF") return nt.Jet_chHEF();
        else if (name == "Jet_corr_JEC") return nt.Jet_corr_JEC();
        else if (name == "Jet_corr_JER") return nt.Jet_corr_JER();
        else if (name == "Jet_eta") return nt.Jet_eta();
        else if (name == "Jet_hfsigmaEtaEta") return nt.Jet_hfsigmaEtaEta();
        else if (name == "Jet_hfsigmaPhiPhi") return nt.Jet_hfsigmaPhiPhi();
        else if (name == "Jet_mass") return nt.Jet_mass();
        else if (name == "Jet_mass_jerDown") return nt.Jet_mass_jerDown();
        else if (name == "Jet_mass_jerUp") return nt.Jet_mass_jerUp();
        else if (name == "Jet_mass_jesHEMIssueDown") return nt.Jet_mass_jesHEMIssueDown();
        else if (name == "Jet_mass_jesHEMIssueUp") return nt.Jet_mass_jesHEMIssueUp();
        else if (name == "Jet_mass_jesTotalDown") return nt.Jet_mass_jesTotalDown();
        else if (name == "Jet_mass_jesTotalUp") return nt.Jet_mass_jesTotalUp();
        else if (name == "Jet_mass_nom") return nt.Jet_mass_nom();
        else if (name == "Jet_mass_raw") return nt.Jet_mass_raw();
        else if (name == "Jet_muEF") return nt.Jet_muEF();
        else if (name == "Jet_muonSubtrFactor") return nt.Jet_muonSubtrFactor();
        else if (name == "Jet_neEmEF") return nt.Jet_neEmEF();
        else if (name == "Jet_neHEF") return nt.Jet_neHEF();
        else if (name == "Jet_phi") return nt.Jet_phi();
        else if (name == "Jet_pt") return nt.Jet_pt();
        else if (name == "Jet_pt_jerDown") return nt.Jet_pt_jerDown();
        else if (name == "Jet_pt_jerUp") return nt.Jet_pt_jerUp();
        else if (name == "Jet_pt_jesHEMIssueDown") return nt.Jet_pt_jesHEMIssueDown();
        else if (name == "Jet_pt_jesHEMIssueUp") return nt.Jet_pt_jesHEMIssueUp();
        else if (name == "Jet_pt_jesTotalDown") return nt.Jet_pt_jesTotalDown();
        else if (name == "Jet_pt_jesTotalUp") return nt.Jet_pt_jesTotalUp();
        else if (name == "Jet_pt_nom") return nt.Jet_pt_nom();
        else if (name == "Jet_pt_raw") return nt.Jet_pt_raw();
        else if (name == "Jet_puIdDisc") return nt.Jet_puIdDisc();
        else if (name == "Jet_qgl") return nt.Jet_qgl();
        else if (name == "Jet_rawFactor") return nt.Jet_rawFactor();
        else if (name == "LHEPart_eta") return nt.LHEPart_eta();
        else if (name == "LHEPart_incomingpz") return nt.LHEPart_incomingpz();
        else if (name == "LHEPart_mass") return nt.LHEPart_mass();
        else if (name == "LHEPart_phi") return nt.LHEPart_phi();
        else if (name == "LHEPart_pt") return nt.LHEPart_pt();
        else if (name == "LHEPdfWeight") return nt.LHEPdfWeight();
        else if (name == "LHEReweightingWeight") return nt.LHEReweightingWeight();
        else if (name == "LHEScaleWeight") return nt.LHEScaleWeight();
        else if (name == "LowPtElectron_ID") return nt.LowPtElectron_ID();
        else if (name == "LowPtElectron_convVtxRadius") return nt.LowPtElectron_convVtxRadius();
        else if (name == "LowPtElectron_deltaEtaSC") return nt.LowPtElectron_deltaEtaSC();
        else if (name == "LowPtElectron_dxy") return nt.LowPtElectron_dxy();
        else if (name == "LowPtElectron_dxyErr") return nt.LowPtElectron_dxyErr();
        else if (name == "LowPtElectron_dz") return nt.LowPtElectron_dz();
        else if (name == "LowPtElectron_dzErr") return nt.LowPtElectron_dzErr();
        else if (name == "LowPtElectron_eInvMinusPInv") return nt.LowPtElectron_eInvMinusPInv();
        else if (name == "LowPtElectron_embeddedID") return nt.LowPtElectron_embeddedID();
        else if (name == "LowPtElectron_energyErr") return nt.LowPtElectron_energyErr();
        else if (name == "LowPtElectron_eta") return nt.LowPtElectron_eta();
        else if (name == "LowPtElectron_hoe") return nt.LowPtElectron_hoe();
        else if (name == "LowPtElectron_mass") return nt.LowPtElectron_mass();
        else if (name == "LowPtElectron_miniPFRelIso_all") return nt.LowPtElectron_miniPFRelIso_all();
        else if (name == "LowPtElectron_miniPFRelIso_chg") return nt.LowPtElectron_miniPFRelIso_chg();
        else if (name == "LowPtElectron_phi") return nt.LowPtElectron_phi();
        else if (name == "LowPtElectron_pt") return nt.LowPtElectron_pt();
        else if (name == "LowPtElectron_ptbiased") return nt.LowPtElectron_ptbiased();
        else if (name == "LowPtElectron_r9") return nt.LowPtElectron_r9();
        else if (name == "LowPtElectron_scEtOverPt") return nt.LowPtElectron_scEtOverPt();
        else if (name == "LowPtElectron_sieie") return nt.LowPtElectron_sieie();
        else if (name == "LowPtElectron_unbiased") return nt.LowPtElectron_unbiased();
        else if (name == "Muon_CutBased_HighPtID_SF") return nt.Muon_CutBased_HighPtID_SF();
        else if (name == "Muon_CutBased_HighPtID_SFerr") return nt.Muon_CutBased_HighPtID_SFerr();
        else if (name == "Muon_CutBased_LooseID_SF") return nt.Muon_CutBased_LooseID_SF();
        else if (name == "Muon_CutBased_LooseID_SFerr") return nt.Muon_CutBased_LooseID_SFerr();
        else if (name == "Muon_CutBased_MediumID_SF") return nt.Muon_CutBased_MediumID_SF();
        else if (name == "Muon_CutBased_MediumID_SFerr") return nt.Muon_CutBased_MediumID_SFerr();
        else if (name == "Muon_CutBased_MediumPromptID_SF") return nt.Muon_CutBased_MediumPromptID_SF();
        else if (name == "Muon_CutBased_MediumPromptID_SFerr") return nt.Muon_CutBased_MediumPromptID_SFerr();
        else if (name == "Muon_CutBased_SoftID_SF") return nt.Muon_CutBased_SoftID_SF();
        else if (name == "Muon_CutBased_SoftID_SFerr") return nt.Muon_CutBased_SoftID_SFerr();
        else if (name == "Muon_CutBased_TightID_SF") return nt.Muon_CutBased_TightID_SF();
        else if (name == "Muon_CutBased_TightID_SFerr") return nt.Muon_CutBased_TightID_SFerr();
        else if (name == "Muon_CutBased_TrkHighPtID_SF") return nt.Muon_CutBased_TrkHighPtID_SF();
        else if (name == "Muon_CutBased_TrkHighPtID_SFerr") return nt.Muon_CutBased_TrkHighPtID_SFerr();
        else if (name == "Muon_LooseRelIso_LooseID_SF") return nt.Muon_LooseRelIso_LooseID_SF();
        else if (name == "Muon_LooseRelIso_LooseID_SFerr") return nt.Muon_LooseRelIso_LooseID_SFerr();
        else if (name == "Muon_LooseRelIso_MediumID_SF") return nt.Muon_LooseRelIso_MediumID_SF();
        else if (name == "Muon_LooseRelIso_MediumID_SFerr") return nt.Muon_LooseRelIso_MediumID_SFerr();
        else if (name == "Muon_LooseRelIso_MediumPromptID_SF") return nt.Muon_LooseRelIso_MediumPromptID_SF();
        else if (name == "Muon_LooseRelIso_MediumPromptID_SFerr") return nt.Muon_LooseRelIso_MediumPromptID_SFerr();
        else if (name == "Muon_LooseRelIso_TightIDandIPCut_SF") return nt.Muon_LooseRelIso_TightIDandIPCut_SF();
        else if (name == "Muon_LooseRelIso_TightIDandIPCut_SFerr") return nt.Muon_LooseRelIso_TightIDandIPCut_SFerr();
        else if (name == "Muon_LooseRelTkIso_HighPtIDandIPCut_SF") return nt.Muon_LooseRelTkIso_HighPtIDandIPCut_SF();
        else if (name == "Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr") return nt.Muon_LooseRelTkIso_HighPtIDandIPCut_SFerr();
        else if (name == "Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF") return nt.Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SF();
        else if (name == "Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr") return nt.Muon_LooseRelTkIso_TrkHighPtIDandIPCut_SFerr();
        else if (name == "Muon_TightRelIso_MediumID_SF") return nt.Muon_TightRelIso_MediumID_SF();
        else if (name == "Muon_TightRelIso_MediumID_SFerr") return nt.Muon_TightRelIso_MediumID_SFerr();
        else if (name == "Muon_TightRelIso_MediumPromptID_SF") return nt.Muon_TightRelIso_MediumPromptID_SF();
        else if (name == "Muon_TightRelIso_MediumPromptID_SFerr") return nt.Muon_TightRelIso_MediumPromptID_SFerr();
        else if (name == "Muon_TightRelIso_TightIDandIPCut_SF") return nt.Muon_TightRelIso_TightIDandIPCut_SF();
        else if (name == "Muon_TightRelIso_TightIDandIPCut_SFerr") return nt.Muon_TightRelIso_TightIDandIPCut_SFerr();
        else if (name == "Muon_TightRelTkIso_HighPtIDandIPCut_SF") return nt.Muon_TightRelTkIso_HighPtIDandIPCut_SF();
        else if (name == "Muon_TightRelTkIso_HighPtIDandIPCut_SFerr") return nt.Muon_TightRelTkIso_HighPtIDandIPCut_SFerr();
        else if (name == "Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF") return nt.Muon_TightRelTkIso_TrkHighPtIDandIPCut_SF();
        else if (name == "Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr") return nt.Muon_TightRelTkIso_TrkHighPtIDandIPCut_SFerr();
        else if (name == "Muon_correctedDown_pt") return nt.Muon_correctedDown_pt();
        else if (name == "Muon_correctedUp_pt") return nt.Muon_correctedUp_pt();
        else if (name == "Muon_corrected_pt") return nt.Muon_corrected_pt();
        else if (name == "Muon_dxy") return nt.Muon_dxy();
        else if (name == "Muon_dxyErr") return nt.Muon_dxyErr();
        else if (name == "Muon_dxybs") return nt.Muon_dxybs();
        else if (name == "Muon_dz") return nt.Muon_dz();
        else if (name == "Muon_dzErr") return nt.Muon_dzErr();
        else if (name == "Muon_eta") return nt.Muon_eta();
        else if (name == "Muon_ip3d") return nt.Muon_ip3d();
        else if (name == "Muon_jetPtRelv2") return nt.Muon_jetPtRelv2();
        else if (name == "Muon_jetRelIso") return nt.Muon_jetRelIso();
        else if (name == "Muon_mass") return nt.Muon_mass();
        else if (name == "Muon_miniPFRelIso_all") return nt.Muon_miniPFRelIso_all();
        else if (name == "Muon_miniPFRelIso_chg") return nt.Muon_miniPFRelIso_chg();
        else if (name == "Muon_mvaLowPt") return nt.Muon_mvaLowPt();
        else if (name == "Muon_mvaMuID") return nt.Muon_mvaMuID();
        else if (name == "Muon_mvaTTH") return nt.Muon_mvaTTH();
        // NOTE: this is a custom branch; temporarily added for convenience
        else if (name == "Muon_mvaTTHUL") return nt.Muon_mvaTTHUL();
        //
        else if (name == "Muon_pfRelIso03_all") return nt.Muon_pfRelIso03_all();
        else if (name == "Muon_pfRelIso03_chg") return nt.Muon_pfRelIso03_chg();
        else if (name == "Muon_pfRelIso04_all") return nt.Muon_pfRelIso04_all();
        else if (name == "Muon_phi") return nt.Muon_phi();
        else if (name == "Muon_pt") return nt.Muon_pt();
        else if (name == "Muon_ptErr") return nt.Muon_ptErr();
        else if (name == "Muon_segmentComp") return nt.Muon_segmentComp();
        else if (name == "Muon_sip3d") return nt.Muon_sip3d();
        else if (name == "Muon_softMva") return nt.Muon_softMva();
        else if (name == "Muon_tkRelIso") return nt.Muon_tkRelIso();
        else if (name == "Muon_tunepRelPt") return nt.Muon_tunepRelPt();
        else if (name == "OtherPV_score") return nt.OtherPV_score();
        else if (name == "OtherPV_z") return nt.OtherPV_z();
        else if (name == "PPSLocalTrack_time") return nt.PPSLocalTrack_time();
        else if (name == "PPSLocalTrack_timeUnc") return nt.PPSLocalTrack_timeUnc();
        else if (name == "PPSLocalTrack_x") return nt.PPSLocalTrack_x();
        else if (name == "PPSLocalTrack_y") return nt.PPSLocalTrack_y();
        else if (name == "PSWeight") return nt.PSWeight();
        else if (name == "Photon_dEscaleDown") return nt.Photon_dEscaleDown();
        else if (name == "Photon_dEscaleUp") return nt.Photon_dEscaleUp();
        else if (name == "Photon_dEsigmaDown") return nt.Photon_dEsigmaDown();
        else if (name == "Photon_dEsigmaUp") return nt.Photon_dEsigmaUp();
        else if (name == "Photon_eCorr") return nt.Photon_eCorr();
        else if (name == "Photon_energyErr") return nt.Photon_energyErr();
        else if (name == "Photon_energyRaw") return nt.Photon_energyRaw();
        else if (name == "Photon_esEffSigmaRR") return nt.Photon_esEffSigmaRR();
        else if (name == "Photon_esEnergyOverRawE") return nt.Photon_esEnergyOverRawE();
        else if (name == "Photon_eta") return nt.Photon_eta();
        else if (name == "Photon_etaWidth") return nt.Photon_etaWidth();
        else if (name == "Photon_haloTaggerMVAVal") return nt.Photon_haloTaggerMVAVal();
        else if (name == "Photon_hoe") return nt.Photon_hoe();
        else if (name == "Photon_hoe_PUcorr") return nt.Photon_hoe_PUcorr();
        else if (name == "Photon_mass") return nt.Photon_mass();
        else if (name == "Photon_mvaID") return nt.Photon_mvaID();
        else if (name == "Photon_mvaID17") return nt.Photon_mvaID17();
        else if (name == "Photon_mvaID_Fall17V1p1") return nt.Photon_mvaID_Fall17V1p1();
        else if (name == "Photon_mvaID_Fall17V2") return nt.Photon_mvaID_Fall17V2();
        else if (name == "Photon_pfChargedIsoPFPV") return nt.Photon_pfChargedIsoPFPV();
        else if (name == "Photon_pfChargedIsoWorstVtx") return nt.Photon_pfChargedIsoWorstVtx();
        else if (name == "Photon_pfPhoIso03") return nt.Photon_pfPhoIso03();
        else if (name == "Photon_pfRelIso03_all") return nt.Photon_pfRelIso03_all();
        else if (name == "Photon_pfRelIso03_all_Fall17V2") return nt.Photon_pfRelIso03_all_Fall17V2();
        else if (name == "Photon_pfRelIso03_all_quadratic") return nt.Photon_pfRelIso03_all_quadratic();
        else if (name == "Photon_pfRelIso03_chg") return nt.Photon_pfRelIso03_chg();
        else if (name == "Photon_pfRelIso03_chg_Fall17V2") return nt.Photon_pfRelIso03_chg_Fall17V2();
        else if (name == "Photon_pfRelIso03_chg_quadratic") return nt.Photon_pfRelIso03_chg_quadratic();
        else if (name == "Photon_phi") return nt.Photon_phi();
        else if (name == "Photon_phiWidth") return nt.Photon_phiWidth();
        else if (name == "Photon_pt") return nt.Photon_pt();
        else if (name == "Photon_r9") return nt.Photon_r9();
        else if (name == "Photon_s4") return nt.Photon_s4();
        else if (name == "Photon_sieie") return nt.Photon_sieie();
        else if (name == "Photon_sieip") return nt.Photon_sieip();
        else if (name == "Photon_sipip") return nt.Photon_sipip();
        else if (name == "Photon_x_calo") return nt.Photon_x_calo();
        else if (name == "Photon_y_calo") return nt.Photon_y_calo();
        else if (name == "Photon_z_calo") return nt.Photon_z_calo();
        else if (name == "Proton_multiRP_t") return nt.Proton_multiRP_t();
        else if (name == "Proton_multiRP_thetaX") return nt.Proton_multiRP_thetaX();
        else if (name == "Proton_multiRP_thetaY") return nt.Proton_multiRP_thetaY();
        else if (name == "Proton_multiRP_time") return nt.Proton_multiRP_time();
        else if (name == "Proton_multiRP_timeUnc") return nt.Proton_multiRP_timeUnc();
        else if (name == "Proton_multiRP_xi") return nt.Proton_multiRP_xi();
        else if (name == "Proton_singleRP_thetaY") return nt.Proton_singleRP_thetaY();
        else if (name == "Proton_singleRP_xi") return nt.Proton_singleRP_xi();
        else if (name == "SV_chi2") return nt.SV_chi2();
        else if (name == "SV_dlen") return nt.SV_dlen();
        else if (name == "SV_dlenSig") return nt.SV_dlenSig();
        else if (name == "SV_dxy") return nt.SV_dxy();
        else if (name == "SV_dxySig") return nt.SV_dxySig();
        else if (name == "SV_eta") return nt.SV_eta();
        else if (name == "SV_mass") return nt.SV_mass();
        else if (name == "SV_ndof") return nt.SV_ndof();
        else if (name == "SV_pAngle") return nt.SV_pAngle();
        else if (name == "SV_phi") return nt.SV_phi();
        else if (name == "SV_pt") return nt.SV_pt();
        else if (name == "SV_x") return nt.SV_x();
        else if (name == "SV_y") return nt.SV_y();
        else if (name == "SV_z") return nt.SV_z();
        else if (name == "SoftActivityJet_eta") return nt.SoftActivityJet_eta();
        else if (name == "SoftActivityJet_phi") return nt.SoftActivityJet_phi();
        else if (name == "SoftActivityJet_pt") return nt.SoftActivityJet_pt();
        else if (name == "SubGenJetAK8_eta") return nt.SubGenJetAK8_eta();
        else if (name == "SubGenJetAK8_mass") return nt.SubGenJetAK8_mass();
        else if (name == "SubGenJetAK8_phi") return nt.SubGenJetAK8_phi();
        else if (name == "SubGenJetAK8_pt") return nt.SubGenJetAK8_pt();
        else if (name == "SubJet_btagCMVA") return nt.SubJet_btagCMVA();
        else if (name == "SubJet_btagCSVV2") return nt.SubJet_btagCSVV2();
        else if (name == "SubJet_btagDeepB") return nt.SubJet_btagDeepB();
        else if (name == "SubJet_eta") return nt.SubJet_eta();
        else if (name == "SubJet_mass") return nt.SubJet_mass();
        else if (name == "SubJet_n2b1") return nt.SubJet_n2b1();
        else if (name == "SubJet_n3b1") return nt.SubJet_n3b1();
        else if (name == "SubJet_phi") return nt.SubJet_phi();
        else if (name == "SubJet_pt") return nt.SubJet_pt();
        else if (name == "SubJet_rawFactor") return nt.SubJet_rawFactor();
        else if (name == "SubJet_tau1") return nt.SubJet_tau1();
        else if (name == "SubJet_tau2") return nt.SubJet_tau2();
        else if (name == "SubJet_tau3") return nt.SubJet_tau3();
        else if (name == "SubJet_tau4") return nt.SubJet_tau4();
        else if (name == "Tau_chargedIso") return nt.Tau_chargedIso();
        else if (name == "Tau_dxy") return nt.Tau_dxy();
        else if (name == "Tau_dz") return nt.Tau_dz();
        else if (name == "Tau_eta") return nt.Tau_eta();
        else if (name == "Tau_leadTkDeltaEta") return nt.Tau_leadTkDeltaEta();
        else if (name == "Tau_leadTkDeltaPhi") return nt.Tau_leadTkDeltaPhi();
        else if (name == "Tau_leadTkPtOverTauPt") return nt.Tau_leadTkPtOverTauPt();
        else if (name == "Tau_mass") return nt.Tau_mass();
        else if (name == "Tau_neutralIso") return nt.Tau_neutralIso();
        else if (name == "Tau_phi") return nt.Tau_phi();
        else if (name == "Tau_photonsOutsideSignalCone") return nt.Tau_photonsOutsideSignalCone();
        else if (name == "Tau_pt") return nt.Tau_pt();
        else if (name == "Tau_puCorr") return nt.Tau_puCorr();
        else if (name == "Tau_rawAntiEle") return nt.Tau_rawAntiEle();
        else if (name == "Tau_rawAntiEle2018") return nt.Tau_rawAntiEle2018();
        else if (name == "Tau_rawDeepTau2017v2p1VSe") return nt.Tau_rawDeepTau2017v2p1VSe();
        else if (name == "Tau_rawDeepTau2017v2p1VSjet") return nt.Tau_rawDeepTau2017v2p1VSjet();
        else if (name == "Tau_rawDeepTau2017v2p1VSmu") return nt.Tau_rawDeepTau2017v2p1VSmu();
        else if (name == "Tau_rawDeepTau2018v2p5VSe") return nt.Tau_rawDeepTau2018v2p5VSe();
        else if (name == "Tau_rawDeepTau2018v2p5VSjet") return nt.Tau_rawDeepTau2018v2p5VSjet();
        else if (name == "Tau_rawDeepTau2018v2p5VSmu") return nt.Tau_rawDeepTau2018v2p5VSmu();
        else if (name == "Tau_rawIso") return nt.Tau_rawIso();
        else if (name == "Tau_rawIsodR03") return nt.Tau_rawIsodR03();
        else if (name == "Tau_rawMVAnewDM2017v2") return nt.Tau_rawMVAnewDM2017v2();
        else if (name == "Tau_rawMVAoldDM") return nt.Tau_rawMVAoldDM();
        else if (name == "Tau_rawMVAoldDM2017v1") return nt.Tau_rawMVAoldDM2017v1();
        else if (name == "Tau_rawMVAoldDM2017v2") return nt.Tau_rawMVAoldDM2017v2();
        else if (name == "Tau_rawMVAoldDMdR032017v2") return nt.Tau_rawMVAoldDMdR032017v2();
        else if (name == "TrigObj_eta") return nt.TrigObj_eta();
        else if (name == "TrigObj_l1pt") return nt.TrigObj_l1pt();
        else if (name == "TrigObj_l1pt_2") return nt.TrigObj_l1pt_2();
        else if (name == "TrigObj_l2pt") return nt.TrigObj_l2pt();
        else if (name == "TrigObj_phi") return nt.TrigObj_phi();
        else if (name == "TrigObj_pt") return nt.TrigObj_pt();
        else if (name == "boostedTau_chargedIso") return nt.boostedTau_chargedIso();
        else if (name == "boostedTau_eta") return nt.boostedTau_eta();
        else if (name == "boostedTau_leadTkDeltaEta") return nt.boostedTau_leadTkDeltaEta();
        else if (name == "boostedTau_leadTkDeltaPhi") return nt.boostedTau_leadTkDeltaPhi();
        else if (name == "boostedTau_leadTkPtOverTauPt") return nt.boostedTau_leadTkPtOverTauPt();
        else if (name == "boostedTau_mass") return nt.boostedTau_mass();
        else if (name == "boostedTau_neutralIso") return nt.boostedTau_neutralIso();
        else if (name == "boostedTau_phi") return nt.boostedTau_phi();
        else if (name == "boostedTau_photonsOutsideSignalCone") return nt.boostedTau_photonsOutsideSignalCone();
        else if (name == "boostedTau_pt") return nt.boostedTau_pt();
        else if (name == "boostedTau_puCorr") return nt.boostedTau_puCorr();
        else if (name == "boostedTau_rawAntiEle2018") return nt.boostedTau_rawAntiEle2018();
        else if (name == "boostedTau_rawIso") return nt.boostedTau_rawIso();
        else if (name == "boostedTau_rawIsodR03") return nt.boostedTau_rawIsodR03();
        else if (name == "boostedTau_rawMVAnewDM2017v2") return nt.boostedTau_rawMVAnewDM2017v2();
        else if (name == "boostedTau_rawMVAoldDM2017v2") return nt.boostedTau_rawMVAoldDM2017v2();
        return vector<float>();
    }
    vector<bool> GetVB(const string &name) {
        if (name == "Electron_convVeto") return nt.Electron_convVeto();
        else if (name == "Electron_cutBased_HEEP") return nt.Electron_cutBased_HEEP();
        else if (name == "Electron_isPFcand") return nt.Electron_isPFcand();
        else if (name == "Electron_mvaFall17Iso_WP80") return nt.Electron_mvaFall17Iso_WP80();
        else if (name == "Electron_mvaFall17Iso_WP90") return nt.Electron_mvaFall17Iso_WP90();
        else if (name == "Electron_mvaFall17Iso_WPL") return nt.Electron_mvaFall17Iso_WPL();
        else if (name == "Electron_mvaFall17V1Iso_WP80") return nt.Electron_mvaFall17V1Iso_WP80();
        else if (name == "Electron_mvaFall17V1Iso_WP90") return nt.Electron_mvaFall17V1Iso_WP90();
        else if (name == "Electron_mvaFall17V1Iso_WPL") return nt.Electron_mvaFall17V1Iso_WPL();
        else if (name == "Electron_mvaFall17V1noIso_WP80") return nt.Electron_mvaFall17V1noIso_WP80();
        else if (name == "Electron_mvaFall17V1noIso_WP90") return nt.Electron_mvaFall17V1noIso_WP90();
        else if (name == "Electron_mvaFall17V1noIso_WPL") return nt.Electron_mvaFall17V1noIso_WPL();
        else if (name == "Electron_mvaFall17V2Iso_WP80") return nt.Electron_mvaFall17V2Iso_WP80();
        else if (name == "Electron_mvaFall17V2Iso_WP90") return nt.Electron_mvaFall17V2Iso_WP90();
        else if (name == "Electron_mvaFall17V2Iso_WPL") return nt.Electron_mvaFall17V2Iso_WPL();
        else if (name == "Electron_mvaFall17V2noIso_WP80") return nt.Electron_mvaFall17V2noIso_WP80();
        else if (name == "Electron_mvaFall17V2noIso_WP90") return nt.Electron_mvaFall17V2noIso_WP90();
        else if (name == "Electron_mvaFall17V2noIso_WPL") return nt.Electron_mvaFall17V2noIso_WPL();
        else if (name == "Electron_mvaFall17noIso_WP80") return nt.Electron_mvaFall17noIso_WP80();
        else if (name == "Electron_mvaFall17noIso_WP90") return nt.Electron_mvaFall17noIso_WP90();
        else if (name == "Electron_mvaFall17noIso_WPL") return nt.Electron_mvaFall17noIso_WPL();
        else if (name == "Electron_mvaIso_Fall17V2_WP80") return nt.Electron_mvaIso_Fall17V2_WP80();
        else if (name == "Electron_mvaIso_Fall17V2_WP90") return nt.Electron_mvaIso_Fall17V2_WP90();
        else if (name == "Electron_mvaIso_Fall17V2_WPL") return nt.Electron_mvaIso_Fall17V2_WPL();
        else if (name == "Electron_mvaIso_WP80") return nt.Electron_mvaIso_WP80();
        else if (name == "Electron_mvaIso_WP90") return nt.Electron_mvaIso_WP90();
        else if (name == "Electron_mvaNoIso_Fall17V2_WP80") return nt.Electron_mvaNoIso_Fall17V2_WP80();
        else if (name == "Electron_mvaNoIso_Fall17V2_WP90") return nt.Electron_mvaNoIso_Fall17V2_WP90();
        else if (name == "Electron_mvaNoIso_Fall17V2_WPL") return nt.Electron_mvaNoIso_Fall17V2_WPL();
        else if (name == "Electron_mvaNoIso_WP80") return nt.Electron_mvaNoIso_WP80();
        else if (name == "Electron_mvaNoIso_WP90") return nt.Electron_mvaNoIso_WP90();
        else if (name == "Electron_mvaSpring16GP_WP80") return nt.Electron_mvaSpring16GP_WP80();
        else if (name == "Electron_mvaSpring16GP_WP90") return nt.Electron_mvaSpring16GP_WP90();
        else if (name == "Electron_mvaSpring16HZZ_WPL") return nt.Electron_mvaSpring16HZZ_WPL();
        else if (name == "GenDressedLepton_hasTauAnc") return nt.GenDressedLepton_hasTauAnc();
        else if (name == "GenProton_isPU") return nt.GenProton_isPU();
        else if (name == "IsoTrack_isFromLostTrack") return nt.IsoTrack_isFromLostTrack();
        else if (name == "IsoTrack_isHighPurityTrack") return nt.IsoTrack_isHighPurityTrack();
        else if (name == "IsoTrack_isPFcand") return nt.IsoTrack_isPFcand();
        else if (name == "LowPtElectron_convVeto") return nt.LowPtElectron_convVeto();
        else if (name == "Muon_highPurity") return nt.Muon_highPurity();
        else if (name == "Muon_inTimeMuon") return nt.Muon_inTimeMuon();
        else if (name == "Muon_isGlobal") return nt.Muon_isGlobal();
        else if (name == "Muon_isPFcand") return nt.Muon_isPFcand();
        else if (name == "Muon_isStandalone") return nt.Muon_isStandalone();
        else if (name == "Muon_isTracker") return nt.Muon_isTracker();
        else if (name == "Muon_looseId") return nt.Muon_looseId();
        else if (name == "Muon_mediumId") return nt.Muon_mediumId();
        else if (name == "Muon_mediumPromptId") return nt.Muon_mediumPromptId();
        else if (name == "Muon_softId") return nt.Muon_softId();
        else if (name == "Muon_softMvaId") return nt.Muon_softMvaId();
        else if (name == "Muon_tightId") return nt.Muon_tightId();
        else if (name == "Muon_triggerIdLoose") return nt.Muon_triggerIdLoose();
        else if (name == "Photon_electronVeto") return nt.Photon_electronVeto();
        else if (name == "Photon_isScEtaEB") return nt.Photon_isScEtaEB();
        else if (name == "Photon_isScEtaEE") return nt.Photon_isScEtaEE();
        else if (name == "Photon_mvaID17_WP80") return nt.Photon_mvaID17_WP80();
        else if (name == "Photon_mvaID17_WP90") return nt.Photon_mvaID17_WP90();
        else if (name == "Photon_mvaID_Fall17V2_WP80") return nt.Photon_mvaID_Fall17V2_WP80();
        else if (name == "Photon_mvaID_Fall17V2_WP90") return nt.Photon_mvaID_Fall17V2_WP90();
        else if (name == "Photon_mvaID_WP80") return nt.Photon_mvaID_WP80();
        else if (name == "Photon_mvaID_WP90") return nt.Photon_mvaID_WP90();
        else if (name == "Photon_pixelSeed") return nt.Photon_pixelSeed();
        else if (name == "Tau_idAntiEleDeadECal") return nt.Tau_idAntiEleDeadECal();
        else if (name == "Tau_idDecayMode") return nt.Tau_idDecayMode();
        else if (name == "Tau_idDecayModeNewDMs") return nt.Tau_idDecayModeNewDMs();
        return vector<bool>();
    }
    bool GetB(const string &name) {
        if (name == "Flag_BadChargedCandidateFilter") return nt.Flag_BadChargedCandidateFilter();
        else if (name == "Flag_BadChargedCandidateFilter_pRECO") return nt.Flag_BadChargedCandidateFilter_pRECO();
        else if (name == "Flag_BadChargedCandidateSummer16Filter") return nt.Flag_BadChargedCandidateSummer16Filter();
        else if (name == "Flag_BadChargedCandidateSummer16Filter_pRECO") return nt.Flag_BadChargedCandidateSummer16Filter_pRECO();
        else if (name == "Flag_BadPFMuonDzFilter") return nt.Flag_BadPFMuonDzFilter();
        else if (name == "Flag_BadPFMuonFilter") return nt.Flag_BadPFMuonFilter();
        else if (name == "Flag_BadPFMuonFilter_pRECO") return nt.Flag_BadPFMuonFilter_pRECO();
        else if (name == "Flag_BadPFMuonSummer16Filter") return nt.Flag_BadPFMuonSummer16Filter();
        else if (name == "Flag_BadPFMuonSummer16Filter_pRECO") return nt.Flag_BadPFMuonSummer16Filter_pRECO();
        else if (name == "Flag_CSCTightHalo2015Filter") return nt.Flag_CSCTightHalo2015Filter();
        else if (name == "Flag_CSCTightHalo2015Filter_pRECO") return nt.Flag_CSCTightHalo2015Filter_pRECO();
        else if (name == "Flag_CSCTightHaloFilter") return nt.Flag_CSCTightHaloFilter();
        else if (name == "Flag_CSCTightHaloFilter_pRECO") return nt.Flag_CSCTightHaloFilter_pRECO();
        else if (name == "Flag_CSCTightHaloTrkMuUnvetoFilter") return nt.Flag_CSCTightHaloTrkMuUnvetoFilter();
        else if (name == "Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO") return nt.Flag_CSCTightHaloTrkMuUnvetoFilter_pRECO();
        else if (name == "Flag_EcalDeadCellBoundaryEnergyFilter") return nt.Flag_EcalDeadCellBoundaryEnergyFilter();
        else if (name == "Flag_EcalDeadCellBoundaryEnergyFilter_pRECO") return nt.Flag_EcalDeadCellBoundaryEnergyFilter_pRECO();
        else if (name == "Flag_EcalDeadCellTriggerPrimitiveFilter") return nt.Flag_EcalDeadCellTriggerPrimitiveFilter();
        else if (name == "Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO") return nt.Flag_EcalDeadCellTriggerPrimitiveFilter_pRECO();
        else if (name == "Flag_HBHENoiseFilter") return nt.Flag_HBHENoiseFilter();
        else if (name == "Flag_HBHENoiseFilter_pRECO") return nt.Flag_HBHENoiseFilter_pRECO();
        else if (name == "Flag_HBHENoiseIsoFilter") return nt.Flag_HBHENoiseIsoFilter();
        else if (name == "Flag_HBHENoiseIsoFilter_pRECO") return nt.Flag_HBHENoiseIsoFilter_pRECO();
        else if (name == "Flag_HcalStripHaloFilter") return nt.Flag_HcalStripHaloFilter();
        else if (name == "Flag_HcalStripHaloFilter_pRECO") return nt.Flag_HcalStripHaloFilter_pRECO();
        else if (name == "Flag_METFilters") return nt.Flag_METFilters();
        else if (name == "Flag_METFilters_pRECO") return nt.Flag_METFilters_pRECO();
        else if (name == "Flag_chargedHadronTrackResolutionFilter") return nt.Flag_chargedHadronTrackResolutionFilter();
        else if (name == "Flag_chargedHadronTrackResolutionFilter_pRECO") return nt.Flag_chargedHadronTrackResolutionFilter_pRECO();
        else if (name == "Flag_ecalBadCalibFilter") return nt.Flag_ecalBadCalibFilter();
        else if (name == "Flag_ecalBadCalibFilter_pRECO") return nt.Flag_ecalBadCalibFilter_pRECO();
        else if (name == "Flag_ecalLaserCorrFilter") return nt.Flag_ecalLaserCorrFilter();
        else if (name == "Flag_ecalLaserCorrFilter_pRECO") return nt.Flag_ecalLaserCorrFilter_pRECO();
        else if (name == "Flag_eeBadScFilter") return nt.Flag_eeBadScFilter();
        else if (name == "Flag_eeBadScFilter_pRECO") return nt.Flag_eeBadScFilter_pRECO();
        else if (name == "Flag_globalSuperTightHalo2016Filter") return nt.Flag_globalSuperTightHalo2016Filter();
        else if (name == "Flag_globalSuperTightHalo2016Filter_pRECO") return nt.Flag_globalSuperTightHalo2016Filter_pRECO();
        else if (name == "Flag_globalTightHalo2016Filter") return nt.Flag_globalTightHalo2016Filter();
        else if (name == "Flag_globalTightHalo2016Filter_pRECO") return nt.Flag_globalTightHalo2016Filter_pRECO();
        else if (name == "Flag_goodVertices") return nt.Flag_goodVertices();
        else if (name == "Flag_goodVertices_pRECO") return nt.Flag_goodVertices_pRECO();
        else if (name == "Flag_hcalLaserEventFilter") return nt.Flag_hcalLaserEventFilter();
        else if (name == "Flag_hcalLaserEventFilter_pRECO") return nt.Flag_hcalLaserEventFilter_pRECO();
        else if (name == "Flag_hfNoisyHitsFilter") return nt.Flag_hfNoisyHitsFilter();
        else if (name == "Flag_muonBadTrackFilter") return nt.Flag_muonBadTrackFilter();
        else if (name == "Flag_muonBadTrackFilter_pRECO") return nt.Flag_muonBadTrackFilter_pRECO();
        else if (name == "Flag_trkPOGFilters") return nt.Flag_trkPOGFilters();
        else if (name == "Flag_trkPOGFilters_pRECO") return nt.Flag_trkPOGFilters_pRECO();
        else if (name == "Flag_trkPOG_logErrorTooManyClusters") return nt.Flag_trkPOG_logErrorTooManyClusters();
        else if (name == "Flag_trkPOG_logErrorTooManyClusters_pRECO") return nt.Flag_trkPOG_logErrorTooManyClusters_pRECO();
        else if (name == "Flag_trkPOG_manystripclus53X") return nt.Flag_trkPOG_manystripclus53X();
        else if (name == "Flag_trkPOG_manystripclus53X_pRECO") return nt.Flag_trkPOG_manystripclus53X_pRECO();
        else if (name == "Flag_trkPOG_toomanystripclus53X") return nt.Flag_trkPOG_toomanystripclus53X();
        else if (name == "Flag_trkPOG_toomanystripclus53X_pRECO") return nt.Flag_trkPOG_toomanystripclus53X_pRECO();
        else if (name == "HLT_AK4CaloJet100") return nt.HLT_AK4CaloJet100();
        else if (name == "HLT_AK4CaloJet120") return nt.HLT_AK4CaloJet120();
        else if (name == "HLT_AK4CaloJet30") return nt.HLT_AK4CaloJet30();
        else if (name == "HLT_AK4CaloJet40") return nt.HLT_AK4CaloJet40();
        else if (name == "HLT_AK4CaloJet50") return nt.HLT_AK4CaloJet50();
        else if (name == "HLT_AK4CaloJet80") return nt.HLT_AK4CaloJet80();
        else if (name == "HLT_AK4PFJet100") return nt.HLT_AK4PFJet100();
        else if (name == "HLT_AK4PFJet120") return nt.HLT_AK4PFJet120();
        else if (name == "HLT_AK4PFJet30") return nt.HLT_AK4PFJet30();
        else if (name == "HLT_AK4PFJet50") return nt.HLT_AK4PFJet50();
        else if (name == "HLT_AK4PFJet80") return nt.HLT_AK4PFJet80();
        else if (name == "HLT_AK8DiPFJet250_200_TrimMass30") return nt.HLT_AK8DiPFJet250_200_TrimMass30();
        else if (name == "HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20") return nt.HLT_AK8DiPFJet250_200_TrimMass30_BTagCSV_p20();
        else if (name == "HLT_AK8DiPFJet250_250_MassSD30") return nt.HLT_AK8DiPFJet250_250_MassSD30();
        else if (name == "HLT_AK8DiPFJet250_250_MassSD50") return nt.HLT_AK8DiPFJet250_250_MassSD50();
        else if (name == "HLT_AK8DiPFJet260_260_MassSD30") return nt.HLT_AK8DiPFJet260_260_MassSD30();
        else if (name == "HLT_AK8DiPFJet270_270_MassSD30") return nt.HLT_AK8DiPFJet270_270_MassSD30();
        else if (name == "HLT_AK8DiPFJet280_200_TrimMass30") return nt.HLT_AK8DiPFJet280_200_TrimMass30();
        else if (name == "HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087") return nt.HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p087();
        else if (name == "HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20") return nt.HLT_AK8DiPFJet280_200_TrimMass30_BTagCSV_p20();
        else if (name == "HLT_AK8DiPFJet300_200_TrimMass30") return nt.HLT_AK8DiPFJet300_200_TrimMass30();
        else if (name == "HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087") return nt.HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p087();
        else if (name == "HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20") return nt.HLT_AK8DiPFJet300_200_TrimMass30_BTagCSV_p20();
        else if (name == "HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20") return nt.HLT_AK8PFHT600_TrimR0p1PT0p03Mass50_BTagCSV_p20();
        else if (name == "HLT_AK8PFHT650_TrimR0p1PT0p03Mass50") return nt.HLT_AK8PFHT650_TrimR0p1PT0p03Mass50();
        else if (name == "HLT_AK8PFHT700_TrimR0p1PT0p03Mass50") return nt.HLT_AK8PFHT700_TrimR0p1PT0p03Mass50();
        else if (name == "HLT_AK8PFHT750_TrimMass50") return nt.HLT_AK8PFHT750_TrimMass50();
        else if (name == "HLT_AK8PFHT800_TrimMass50") return nt.HLT_AK8PFHT800_TrimMass50();
        else if (name == "HLT_AK8PFHT850_TrimMass50") return nt.HLT_AK8PFHT850_TrimMass50();
        else if (name == "HLT_AK8PFHT900_TrimMass50") return nt.HLT_AK8PFHT900_TrimMass50();
        else if (name == "HLT_AK8PFJet140") return nt.HLT_AK8PFJet140();
        else if (name == "HLT_AK8PFJet15") return nt.HLT_AK8PFJet15();
        else if (name == "HLT_AK8PFJet200") return nt.HLT_AK8PFJet200();
        else if (name == "HLT_AK8PFJet230_SoftDropMass40") return nt.HLT_AK8PFJet230_SoftDropMass40();
        else if (name == "HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35") return nt.HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35();
        else if (name == "HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30") return nt.HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30();
        else if (name == "HLT_AK8PFJet25") return nt.HLT_AK8PFJet25();
        else if (name == "HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35") return nt.HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35();
        else if (name == "HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30") return nt.HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30();
        else if (name == "HLT_AK8PFJet260") return nt.HLT_AK8PFJet260();
        else if (name == "HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35") return nt.HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35();
        else if (name == "HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30") return nt.HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30();
        else if (name == "HLT_AK8PFJet320") return nt.HLT_AK8PFJet320();
        else if (name == "HLT_AK8PFJet330_PFAK8BTagCSV_p1") return nt.HLT_AK8PFJet330_PFAK8BTagCSV_p1();
        else if (name == "HLT_AK8PFJet330_PFAK8BTagCSV_p17") return nt.HLT_AK8PFJet330_PFAK8BTagCSV_p17();
        else if (name == "HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1") return nt.HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p1();
        else if (name == "HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17") return nt.HLT_AK8PFJet330_TrimMass30_PFAK8BTagCSV_p17();
        else if (name == "HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1") return nt.HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1();
        else if (name == "HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17") return nt.HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17();
        else if (name == "HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2") return nt.HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2();
        else if (name == "HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4") return nt.HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4();
        else if (name == "HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02") return nt.HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02();
        else if (name == "HLT_AK8PFJet360_TrimMass30") return nt.HLT_AK8PFJet360_TrimMass30();
        else if (name == "HLT_AK8PFJet380_TrimMass30") return nt.HLT_AK8PFJet380_TrimMass30();
        else if (name == "HLT_AK8PFJet40") return nt.HLT_AK8PFJet40();
        else if (name == "HLT_AK8PFJet400") return nt.HLT_AK8PFJet400();
        else if (name == "HLT_AK8PFJet400_MassSD30") return nt.HLT_AK8PFJet400_MassSD30();
        else if (name == "HLT_AK8PFJet400_SoftDropMass40") return nt.HLT_AK8PFJet400_SoftDropMass40();
        else if (name == "HLT_AK8PFJet400_TrimMass30") return nt.HLT_AK8PFJet400_TrimMass30();
        else if (name == "HLT_AK8PFJet420_MassSD30") return nt.HLT_AK8PFJet420_MassSD30();
        else if (name == "HLT_AK8PFJet420_TrimMass30") return nt.HLT_AK8PFJet420_TrimMass30();
        else if (name == "HLT_AK8PFJet425_SoftDropMass40") return nt.HLT_AK8PFJet425_SoftDropMass40();
        else if (name == "HLT_AK8PFJet450") return nt.HLT_AK8PFJet450();
        else if (name == "HLT_AK8PFJet450_MassSD30") return nt.HLT_AK8PFJet450_MassSD30();
        else if (name == "HLT_AK8PFJet450_SoftDropMass40") return nt.HLT_AK8PFJet450_SoftDropMass40();
        else if (name == "HLT_AK8PFJet500") return nt.HLT_AK8PFJet500();
        else if (name == "HLT_AK8PFJet550") return nt.HLT_AK8PFJet550();
        else if (name == "HLT_AK8PFJet60") return nt.HLT_AK8PFJet60();
        else if (name == "HLT_AK8PFJet80") return nt.HLT_AK8PFJet80();
        else if (name == "HLT_AK8PFJetFwd140") return nt.HLT_AK8PFJetFwd140();
        else if (name == "HLT_AK8PFJetFwd15") return nt.HLT_AK8PFJetFwd15();
        else if (name == "HLT_AK8PFJetFwd200") return nt.HLT_AK8PFJetFwd200();
        else if (name == "HLT_AK8PFJetFwd25") return nt.HLT_AK8PFJetFwd25();
        else if (name == "HLT_AK8PFJetFwd260") return nt.HLT_AK8PFJetFwd260();
        else if (name == "HLT_AK8PFJetFwd320") return nt.HLT_AK8PFJetFwd320();
        else if (name == "HLT_AK8PFJetFwd40") return nt.HLT_AK8PFJetFwd40();
        else if (name == "HLT_AK8PFJetFwd400") return nt.HLT_AK8PFJetFwd400();
        else if (name == "HLT_AK8PFJetFwd450") return nt.HLT_AK8PFJetFwd450();
        else if (name == "HLT_AK8PFJetFwd500") return nt.HLT_AK8PFJetFwd500();
        else if (name == "HLT_AK8PFJetFwd60") return nt.HLT_AK8PFJetFwd60();
        else if (name == "HLT_AK8PFJetFwd80") return nt.HLT_AK8PFJetFwd80();
        else if (name == "HLT_BTagMu_AK4DiJet110_Mu5") return nt.HLT_BTagMu_AK4DiJet110_Mu5();
        else if (name == "HLT_BTagMu_AK4DiJet110_Mu5_noalgo") return nt.HLT_BTagMu_AK4DiJet110_Mu5_noalgo();
        else if (name == "HLT_BTagMu_AK4DiJet170_Mu5") return nt.HLT_BTagMu_AK4DiJet170_Mu5();
        else if (name == "HLT_BTagMu_AK4DiJet170_Mu5_noalgo") return nt.HLT_BTagMu_AK4DiJet170_Mu5_noalgo();
        else if (name == "HLT_BTagMu_AK4DiJet20_Mu5") return nt.HLT_BTagMu_AK4DiJet20_Mu5();
        else if (name == "HLT_BTagMu_AK4DiJet20_Mu5_noalgo") return nt.HLT_BTagMu_AK4DiJet20_Mu5_noalgo();
        else if (name == "HLT_BTagMu_AK4DiJet40_Mu5") return nt.HLT_BTagMu_AK4DiJet40_Mu5();
        else if (name == "HLT_BTagMu_AK4DiJet40_Mu5_noalgo") return nt.HLT_BTagMu_AK4DiJet40_Mu5_noalgo();
        else if (name == "HLT_BTagMu_AK4DiJet70_Mu5") return nt.HLT_BTagMu_AK4DiJet70_Mu5();
        else if (name == "HLT_BTagMu_AK4DiJet70_Mu5_noalgo") return nt.HLT_BTagMu_AK4DiJet70_Mu5_noalgo();
        else if (name == "HLT_BTagMu_AK4Jet300_Mu5") return nt.HLT_BTagMu_AK4Jet300_Mu5();
        else if (name == "HLT_BTagMu_AK4Jet300_Mu5_noalgo") return nt.HLT_BTagMu_AK4Jet300_Mu5_noalgo();
        else if (name == "HLT_BTagMu_AK8DiJet170_Mu5") return nt.HLT_BTagMu_AK8DiJet170_Mu5();
        else if (name == "HLT_BTagMu_AK8DiJet170_Mu5_noalgo") return nt.HLT_BTagMu_AK8DiJet170_Mu5_noalgo();
        else if (name == "HLT_BTagMu_AK8Jet170_DoubleMu5") return nt.HLT_BTagMu_AK8Jet170_DoubleMu5();
        else if (name == "HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo") return nt.HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo();
        else if (name == "HLT_BTagMu_AK8Jet300_Mu5") return nt.HLT_BTagMu_AK8Jet300_Mu5();
        else if (name == "HLT_BTagMu_AK8Jet300_Mu5_noalgo") return nt.HLT_BTagMu_AK8Jet300_Mu5_noalgo();
        else if (name == "HLT_BTagMu_DiJet110_Mu5") return nt.HLT_BTagMu_DiJet110_Mu5();
        else if (name == "HLT_BTagMu_DiJet170_Mu5") return nt.HLT_BTagMu_DiJet170_Mu5();
        else if (name == "HLT_BTagMu_DiJet20_Mu5") return nt.HLT_BTagMu_DiJet20_Mu5();
        else if (name == "HLT_BTagMu_DiJet40_Mu5") return nt.HLT_BTagMu_DiJet40_Mu5();
        else if (name == "HLT_BTagMu_DiJet70_Mu5") return nt.HLT_BTagMu_DiJet70_Mu5();
        else if (name == "HLT_BTagMu_Jet300_Mu5") return nt.HLT_BTagMu_Jet300_Mu5();
        else if (name == "HLT_CDC_L2cosmic_10_er1p0") return nt.HLT_CDC_L2cosmic_10_er1p0();
        else if (name == "HLT_CDC_L2cosmic_5_er1p0") return nt.HLT_CDC_L2cosmic_5_er1p0();
        else if (name == "HLT_CDC_L2cosmic_5p5_er1p0") return nt.HLT_CDC_L2cosmic_5p5_er1p0();
        else if (name == "HLT_CaloJet260") return nt.HLT_CaloJet260();
        else if (name == "HLT_CaloJet500_NoJetID") return nt.HLT_CaloJet500_NoJetID();
        else if (name == "HLT_CaloJet550_NoJetID") return nt.HLT_CaloJet550_NoJetID();
        else if (name == "HLT_CaloMET100_HBHECleaned") return nt.HLT_CaloMET100_HBHECleaned();
        else if (name == "HLT_CaloMET100_NotCleaned") return nt.HLT_CaloMET100_NotCleaned();
        else if (name == "HLT_CaloMET110_NotCleaned") return nt.HLT_CaloMET110_NotCleaned();
        else if (name == "HLT_CaloMET250_HBHECleaned") return nt.HLT_CaloMET250_HBHECleaned();
        else if (name == "HLT_CaloMET250_NotCleaned") return nt.HLT_CaloMET250_NotCleaned();
        else if (name == "HLT_CaloMET300_HBHECleaned") return nt.HLT_CaloMET300_HBHECleaned();
        else if (name == "HLT_CaloMET350_HBHECleaned") return nt.HLT_CaloMET350_HBHECleaned();
        else if (name == "HLT_CaloMET350_NotCleaned") return nt.HLT_CaloMET350_NotCleaned();
        else if (name == "HLT_CaloMET60_DTCluster50") return nt.HLT_CaloMET60_DTCluster50();
        else if (name == "HLT_CaloMET60_DTClusterNoMB1S50") return nt.HLT_CaloMET60_DTClusterNoMB1S50();
        else if (name == "HLT_CaloMET70_HBHECleaned") return nt.HLT_CaloMET70_HBHECleaned();
        else if (name == "HLT_CaloMET80_HBHECleaned") return nt.HLT_CaloMET80_HBHECleaned();
        else if (name == "HLT_CaloMET80_NotCleaned") return nt.HLT_CaloMET80_NotCleaned();
        else if (name == "HLT_CaloMET90_HBHECleaned") return nt.HLT_CaloMET90_HBHECleaned();
        else if (name == "HLT_CaloMET90_NotCleaned") return nt.HLT_CaloMET90_NotCleaned();
        else if (name == "HLT_CaloMHT90") return nt.HLT_CaloMHT90();
        else if (name == "HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight") return nt.HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight();
        else if (name == "HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067") return nt.HLT_CaloMHTNoPU90_PFMET90_PFMHT90_IDTight_BTagCSV_p067();
        else if (name == "HLT_CascadeMu100") return nt.HLT_CascadeMu100();
        else if (name == "HLT_CscCluster_Loose") return nt.HLT_CscCluster_Loose();
        else if (name == "HLT_CscCluster_Medium") return nt.HLT_CscCluster_Medium();
        else if (name == "HLT_CscCluster_Tight") return nt.HLT_CscCluster_Tight();
        else if (name == "HLT_DiCentralPFJet170") return nt.HLT_DiCentralPFJet170();
        else if (name == "HLT_DiCentralPFJet170_CFMax0p1") return nt.HLT_DiCentralPFJet170_CFMax0p1();
        else if (name == "HLT_DiCentralPFJet220_CFMax0p3") return nt.HLT_DiCentralPFJet220_CFMax0p3();
        else if (name == "HLT_DiCentralPFJet330_CFMax0p5") return nt.HLT_DiCentralPFJet330_CFMax0p5();
        else if (name == "HLT_DiCentralPFJet430") return nt.HLT_DiCentralPFJet430();
        else if (name == "HLT_DiCentralPFJet55_PFMET110") return nt.HLT_DiCentralPFJet55_PFMET110();
        else if (name == "HLT_DiEle27_WPTightCaloOnly_L1DoubleEG") return nt.HLT_DiEle27_WPTightCaloOnly_L1DoubleEG();
        else if (name == "HLT_DiJet110_35_Mjj650_PFMET110") return nt.HLT_DiJet110_35_Mjj650_PFMET110();
        else if (name == "HLT_DiJet110_35_Mjj650_PFMET120") return nt.HLT_DiJet110_35_Mjj650_PFMET120();
        else if (name == "HLT_DiJet110_35_Mjj650_PFMET130") return nt.HLT_DiJet110_35_Mjj650_PFMET130();
        else if (name == "HLT_DiJetVBFMu_PassThrough") return nt.HLT_DiJetVBFMu_PassThrough();
        else if (name == "HLT_DiJetVBF_PassThrough") return nt.HLT_DiJetVBF_PassThrough();
        else if (name == "HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8") return nt.HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8();
        else if (name == "HLT_DiMu9_Ele9_CaloIdL_TrackIdL") return nt.HLT_DiMu9_Ele9_CaloIdL_TrackIdL();
        else if (name == "HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ") return nt.HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ();
        else if (name == "HLT_DiPFJet15_FBEta3_NoCaloMatched") return nt.HLT_DiPFJet15_FBEta3_NoCaloMatched();
        else if (name == "HLT_DiPFJet15_NoCaloMatched") return nt.HLT_DiPFJet15_NoCaloMatched();
        else if (name == "HLT_DiPFJet25_FBEta3_NoCaloMatched") return nt.HLT_DiPFJet25_FBEta3_NoCaloMatched();
        else if (name == "HLT_DiPFJet25_NoCaloMatched") return nt.HLT_DiPFJet25_NoCaloMatched();
        else if (name == "HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140") return nt.HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu140();
        else if (name == "HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80") return nt.HLT_DiPFJet40_DEta3p5_MJJ600_PFMETNoMu80();
        else if (name == "HLT_DiPFJetAve100_HFJEC") return nt.HLT_DiPFJetAve100_HFJEC();
        else if (name == "HLT_DiPFJetAve140") return nt.HLT_DiPFJetAve140();
        else if (name == "HLT_DiPFJetAve15_HFJEC") return nt.HLT_DiPFJetAve15_HFJEC();
        else if (name == "HLT_DiPFJetAve160_HFJEC") return nt.HLT_DiPFJetAve160_HFJEC();
        else if (name == "HLT_DiPFJetAve200") return nt.HLT_DiPFJetAve200();
        else if (name == "HLT_DiPFJetAve220_HFJEC") return nt.HLT_DiPFJetAve220_HFJEC();
        else if (name == "HLT_DiPFJetAve25_HFJEC") return nt.HLT_DiPFJetAve25_HFJEC();
        else if (name == "HLT_DiPFJetAve260") return nt.HLT_DiPFJetAve260();
        else if (name == "HLT_DiPFJetAve260_HFJEC") return nt.HLT_DiPFJetAve260_HFJEC();
        else if (name == "HLT_DiPFJetAve300_HFJEC") return nt.HLT_DiPFJetAve300_HFJEC();
        else if (name == "HLT_DiPFJetAve320") return nt.HLT_DiPFJetAve320();
        else if (name == "HLT_DiPFJetAve35_HFJEC") return nt.HLT_DiPFJetAve35_HFJEC();
        else if (name == "HLT_DiPFJetAve40") return nt.HLT_DiPFJetAve40();
        else if (name == "HLT_DiPFJetAve400") return nt.HLT_DiPFJetAve400();
        else if (name == "HLT_DiPFJetAve500") return nt.HLT_DiPFJetAve500();
        else if (name == "HLT_DiPFJetAve60") return nt.HLT_DiPFJetAve60();
        else if (name == "HLT_DiPFJetAve60_HFJEC") return nt.HLT_DiPFJetAve60_HFJEC();
        else if (name == "HLT_DiPFJetAve80") return nt.HLT_DiPFJetAve80();
        else if (name == "HLT_DiPFJetAve80_HFJEC") return nt.HLT_DiPFJetAve80_HFJEC();
        else if (name == "HLT_DiPhoton10Time1ns") return nt.HLT_DiPhoton10Time1ns();
        else if (name == "HLT_DiPhoton10Time1p2ns") return nt.HLT_DiPhoton10Time1p2ns();
        else if (name == "HLT_DiPhoton10Time1p4ns") return nt.HLT_DiPhoton10Time1p4ns();
        else if (name == "HLT_DiPhoton10Time1p6ns") return nt.HLT_DiPhoton10Time1p6ns();
        else if (name == "HLT_DiPhoton10Time1p8ns") return nt.HLT_DiPhoton10Time1p8ns();
        else if (name == "HLT_DiPhoton10Time2ns") return nt.HLT_DiPhoton10Time2ns();
        else if (name == "HLT_DiPhoton10_CaloIdL") return nt.HLT_DiPhoton10_CaloIdL();
        else if (name == "HLT_DiPhoton10sminlt0p1") return nt.HLT_DiPhoton10sminlt0p1();
        else if (name == "HLT_DiPhoton10sminlt0p12") return nt.HLT_DiPhoton10sminlt0p12();
        else if (name == "HLT_DiSC30_18_EIso_AND_HE_Mass70") return nt.HLT_DiSC30_18_EIso_AND_HE_Mass70();
        else if (name == "HLT_Dimuon0_Jpsi") return nt.HLT_Dimuon0_Jpsi();
        else if (name == "HLT_Dimuon0_Jpsi3p5_Muon2") return nt.HLT_Dimuon0_Jpsi3p5_Muon2();
        else if (name == "HLT_Dimuon0_Jpsi_L1_4R_0er1p5R") return nt.HLT_Dimuon0_Jpsi_L1_4R_0er1p5R();
        else if (name == "HLT_Dimuon0_Jpsi_L1_NoOS") return nt.HLT_Dimuon0_Jpsi_L1_NoOS();
        else if (name == "HLT_Dimuon0_Jpsi_Muon") return nt.HLT_Dimuon0_Jpsi_Muon();
        else if (name == "HLT_Dimuon0_Jpsi_NoVertexing") return nt.HLT_Dimuon0_Jpsi_NoVertexing();
        else if (name == "HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R") return nt.HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R();
        else if (name == "HLT_Dimuon0_Jpsi_NoVertexing_NoOS") return nt.HLT_Dimuon0_Jpsi_NoVertexing_NoOS();
        else if (name == "HLT_Dimuon0_LowMass") return nt.HLT_Dimuon0_LowMass();
        else if (name == "HLT_Dimuon0_LowMass_L1_0er1p5") return nt.HLT_Dimuon0_LowMass_L1_0er1p5();
        else if (name == "HLT_Dimuon0_LowMass_L1_0er1p5R") return nt.HLT_Dimuon0_LowMass_L1_0er1p5R();
        else if (name == "HLT_Dimuon0_LowMass_L1_4") return nt.HLT_Dimuon0_LowMass_L1_4();
        else if (name == "HLT_Dimuon0_LowMass_L1_4R") return nt.HLT_Dimuon0_LowMass_L1_4R();
        else if (name == "HLT_Dimuon0_LowMass_L1_TM530") return nt.HLT_Dimuon0_LowMass_L1_TM530();
        else if (name == "HLT_Dimuon0_Phi_Barrel") return nt.HLT_Dimuon0_Phi_Barrel();
        else if (name == "HLT_Dimuon0_Upsilon_L1_4p5") return nt.HLT_Dimuon0_Upsilon_L1_4p5();
        else if (name == "HLT_Dimuon0_Upsilon_L1_4p5NoOS") return nt.HLT_Dimuon0_Upsilon_L1_4p5NoOS();
        else if (name == "HLT_Dimuon0_Upsilon_L1_4p5er2p0") return nt.HLT_Dimuon0_Upsilon_L1_4p5er2p0();
        else if (name == "HLT_Dimuon0_Upsilon_L1_4p5er2p0M") return nt.HLT_Dimuon0_Upsilon_L1_4p5er2p0M();
        else if (name == "HLT_Dimuon0_Upsilon_L1_5") return nt.HLT_Dimuon0_Upsilon_L1_5();
        else if (name == "HLT_Dimuon0_Upsilon_L1_5M") return nt.HLT_Dimuon0_Upsilon_L1_5M();
        else if (name == "HLT_Dimuon0_Upsilon_Muon") return nt.HLT_Dimuon0_Upsilon_Muon();
        else if (name == "HLT_Dimuon0_Upsilon_Muon_L1_TM0") return nt.HLT_Dimuon0_Upsilon_Muon_L1_TM0();
        else if (name == "HLT_Dimuon0_Upsilon_Muon_NoL1Mass") return nt.HLT_Dimuon0_Upsilon_Muon_NoL1Mass();
        else if (name == "HLT_Dimuon0_Upsilon_NoVertexing") return nt.HLT_Dimuon0_Upsilon_NoVertexing();
        else if (name == "HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing") return nt.HLT_Dimuon0er16_Jpsi_NoOS_NoVertexing();
        else if (name == "HLT_Dimuon0er16_Jpsi_NoVertexing") return nt.HLT_Dimuon0er16_Jpsi_NoVertexing();
        else if (name == "HLT_Dimuon10_Jpsi_Barrel") return nt.HLT_Dimuon10_Jpsi_Barrel();
        else if (name == "HLT_Dimuon10_PsiPrime_Barrel_Seagulls") return nt.HLT_Dimuon10_PsiPrime_Barrel_Seagulls();
        else if (name == "HLT_Dimuon10_Upsilon_Barrel_Seagulls") return nt.HLT_Dimuon10_Upsilon_Barrel_Seagulls();
        else if (name == "HLT_Dimuon10_Upsilon_y1p4") return nt.HLT_Dimuon10_Upsilon_y1p4();
        else if (name == "HLT_Dimuon12_Upsilon_eta1p5") return nt.HLT_Dimuon12_Upsilon_eta1p5();
        else if (name == "HLT_Dimuon12_Upsilon_y1p4") return nt.HLT_Dimuon12_Upsilon_y1p4();
        else if (name == "HLT_Dimuon13_PsiPrime") return nt.HLT_Dimuon13_PsiPrime();
        else if (name == "HLT_Dimuon13_Upsilon") return nt.HLT_Dimuon13_Upsilon();
        else if (name == "HLT_Dimuon14_Phi_Barrel_Seagulls") return nt.HLT_Dimuon14_Phi_Barrel_Seagulls();
        else if (name == "HLT_Dimuon14_PsiPrime") return nt.HLT_Dimuon14_PsiPrime();
        else if (name == "HLT_Dimuon14_PsiPrime_noCorrL1") return nt.HLT_Dimuon14_PsiPrime_noCorrL1();
        else if (name == "HLT_Dimuon16_Jpsi") return nt.HLT_Dimuon16_Jpsi();
        else if (name == "HLT_Dimuon18_PsiPrime") return nt.HLT_Dimuon18_PsiPrime();
        else if (name == "HLT_Dimuon18_PsiPrime_noCorrL1") return nt.HLT_Dimuon18_PsiPrime_noCorrL1();
        else if (name == "HLT_Dimuon20_Jpsi") return nt.HLT_Dimuon20_Jpsi();
        else if (name == "HLT_Dimuon20_Jpsi_Barrel_Seagulls") return nt.HLT_Dimuon20_Jpsi_Barrel_Seagulls();
        else if (name == "HLT_Dimuon24_Phi_noCorrL1") return nt.HLT_Dimuon24_Phi_noCorrL1();
        else if (name == "HLT_Dimuon24_Upsilon_noCorrL1") return nt.HLT_Dimuon24_Upsilon_noCorrL1();
        else if (name == "HLT_Dimuon25_Jpsi") return nt.HLT_Dimuon25_Jpsi();
        else if (name == "HLT_Dimuon25_Jpsi_noCorrL1") return nt.HLT_Dimuon25_Jpsi_noCorrL1();
        else if (name == "HLT_Dimuon6_Jpsi_NoVertexing") return nt.HLT_Dimuon6_Jpsi_NoVertexing();
        else if (name == "HLT_Dimuon8_PsiPrime_Barrel") return nt.HLT_Dimuon8_PsiPrime_Barrel();
        else if (name == "HLT_Dimuon8_Upsilon_Barrel") return nt.HLT_Dimuon8_Upsilon_Barrel();
        else if (name == "HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT") return nt.HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT();
        else if (name == "HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT") return nt.HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT();
        else if (name == "HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT") return nt.HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT();
        else if (name == "HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT") return nt.HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT();
        else if (name == "HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55") return nt.HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55();
        else if (name == "HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55") return nt.HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55();
        else if (name == "HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55") return nt.HLT_Diphoton30EB_18EB_R9Id_OR_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55();
        else if (name == "HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55") return nt.HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_DoublePixelVeto_Mass55();
        else if (name == "HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55") return nt.HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55();
        else if (name == "HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55") return nt.HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55();
        else if (name == "HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55") return nt.HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55();
        else if (name == "HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55") return nt.HLT_Diphoton30_18_PVrealAND_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55();
        else if (name == "HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId") return nt.HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId();
        else if (name == "HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55") return nt.HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55();
        else if (name == "HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto") return nt.HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto();
        else if (name == "HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55") return nt.HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55();
        else if (name == "HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70") return nt.HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_DoublePixelSeedMatch_Mass70();
        else if (name == "HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90") return nt.HLT_Diphoton30_18_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90();
        else if (name == "HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55") return nt.HLT_Diphoton30_18_Solid_R9Id_AND_IsoCaloId_AND_HE_R9Id_Mass55();
        else if (name == "HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90") return nt.HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90();
        else if (name == "HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95") return nt.HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95();
        else if (name == "HLT_DoubleEle10_eta1p22_mMax6") return nt.HLT_DoubleEle10_eta1p22_mMax6();
        else if (name == "HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf") return nt.HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf();
        else if (name == "HLT_DoubleEle24_eta2p1_WPTight_Gsf") return nt.HLT_DoubleEle24_eta2p1_WPTight_Gsf();
        else if (name == "HLT_DoubleEle25_CaloIdL_GsfTrkIdVL") return nt.HLT_DoubleEle25_CaloIdL_GsfTrkIdVL();
        else if (name == "HLT_DoubleEle25_CaloIdL_MW") return nt.HLT_DoubleEle25_CaloIdL_MW();
        else if (name == "HLT_DoubleEle27_CaloIdL_MW") return nt.HLT_DoubleEle27_CaloIdL_MW();
        else if (name == "HLT_DoubleEle33_CaloIdL") return nt.HLT_DoubleEle33_CaloIdL();
        else if (name == "HLT_DoubleEle33_CaloIdL_GsfTrkIdVL") return nt.HLT_DoubleEle33_CaloIdL_GsfTrkIdVL();
        else if (name == "HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW") return nt.HLT_DoubleEle33_CaloIdL_GsfTrkIdVL_MW();
        else if (name == "HLT_DoubleEle33_CaloIdL_MW") return nt.HLT_DoubleEle33_CaloIdL_MW();
        else if (name == "HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL") return nt.HLT_DoubleEle37_Ele27_CaloIdL_GsfTrkIdVL();
        else if (name == "HLT_DoubleEle4_eta1p22_mMax6") return nt.HLT_DoubleEle4_eta1p22_mMax6();
        else if (name == "HLT_DoubleEle4p5_eta1p22_mMax6") return nt.HLT_DoubleEle4p5_eta1p22_mMax6();
        else if (name == "HLT_DoubleEle5_eta1p22_mMax6") return nt.HLT_DoubleEle5_eta1p22_mMax6();
        else if (name == "HLT_DoubleEle5p5_eta1p22_mMax6") return nt.HLT_DoubleEle5p5_eta1p22_mMax6();
        else if (name == "HLT_DoubleEle6_eta1p22_mMax6") return nt.HLT_DoubleEle6_eta1p22_mMax6();
        else if (name == "HLT_DoubleEle6p5_eta1p22_mMax6") return nt.HLT_DoubleEle6p5_eta1p22_mMax6();
        else if (name == "HLT_DoubleEle7_eta1p22_mMax6") return nt.HLT_DoubleEle7_eta1p22_mMax6();
        else if (name == "HLT_DoubleEle7p5_eta1p22_mMax6") return nt.HLT_DoubleEle7p5_eta1p22_mMax6();
        else if (name == "HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350") return nt.HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350();
        else if (name == "HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250") return nt.HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT250();
        else if (name == "HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300") return nt.HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT300();
        else if (name == "HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350") return nt.HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350();
        else if (name == "HLT_DoubleEle8_eta1p22_mMax6") return nt.HLT_DoubleEle8_eta1p22_mMax6();
        else if (name == "HLT_DoubleEle8p5_eta1p22_mMax6") return nt.HLT_DoubleEle8p5_eta1p22_mMax6();
        else if (name == "HLT_DoubleEle9_eta1p22_mMax6") return nt.HLT_DoubleEle9_eta1p22_mMax6();
        else if (name == "HLT_DoubleEle9p5_eta1p22_mMax6") return nt.HLT_DoubleEle9p5_eta1p22_mMax6();
        else if (name == "HLT_DoubleIsoMu17_eta2p1") return nt.HLT_DoubleIsoMu17_eta2p1();
        else if (name == "HLT_DoubleIsoMu17_eta2p1_noDzCut") return nt.HLT_DoubleIsoMu17_eta2p1_noDzCut();
        else if (name == "HLT_DoubleIsoMu20_eta2p1") return nt.HLT_DoubleIsoMu20_eta2p1();
        else if (name == "HLT_DoubleIsoMu24_eta2p1") return nt.HLT_DoubleIsoMu24_eta2p1();
        else if (name == "HLT_DoubleJet90_Double30_DoubleBTagCSV_p087") return nt.HLT_DoubleJet90_Double30_DoubleBTagCSV_p087();
        else if (name == "HLT_DoubleJet90_Double30_TripleBTagCSV_p087") return nt.HLT_DoubleJet90_Double30_TripleBTagCSV_p087();
        else if (name == "HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6") return nt.HLT_DoubleJetsC100_DoubleBTagCSV_p014_DoublePFJetsC100MaxDeta1p6();
        else if (name == "HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160") return nt.HLT_DoubleJetsC100_DoubleBTagCSV_p026_DoublePFJetsC160();
        else if (name == "HLT_DoubleJetsC100_SingleBTagCSV_p014") return nt.HLT_DoubleJetsC100_SingleBTagCSV_p014();
        else if (name == "HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350") return nt.HLT_DoubleJetsC100_SingleBTagCSV_p014_SinglePFJetC350();
        else if (name == "HLT_DoubleJetsC100_SingleBTagCSV_p026") return nt.HLT_DoubleJetsC100_SingleBTagCSV_p026();
        else if (name == "HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350") return nt.HLT_DoubleJetsC100_SingleBTagCSV_p026_SinglePFJetC350();
        else if (name == "HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6") return nt.HLT_DoubleJetsC112_DoubleBTagCSV_p014_DoublePFJetsC112MaxDeta1p6();
        else if (name == "HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172") return nt.HLT_DoubleJetsC112_DoubleBTagCSV_p026_DoublePFJetsC172();
        else if (name == "HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm") return nt.HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm();
        else if (name == "HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm") return nt.HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm();
        else if (name == "HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm") return nt.HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm();
        else if (name == "HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm") return nt.HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm();
        else if (name == "HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm") return nt.HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm();
        else if (name == "HLT_DoubleL2Mu23NoVtx_2Cha") return nt.HLT_DoubleL2Mu23NoVtx_2Cha();
        else if (name == "HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed") return nt.HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed();
        else if (name == "HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched") return nt.HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched();
        else if (name == "HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched") return nt.HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched();
        else if (name == "HLT_DoubleL2Mu25NoVtx_2Cha") return nt.HLT_DoubleL2Mu25NoVtx_2Cha();
        else if (name == "HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed") return nt.HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed();
        else if (name == "HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4") return nt.HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4();
        else if (name == "HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched") return nt.HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched();
        else if (name == "HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4") return nt.HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4();
        else if (name == "HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched") return nt.HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched();
        else if (name == "HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4") return nt.HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4();
        else if (name == "HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4") return nt.HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4();
        else if (name == "HLT_DoubleL2Mu50") return nt.HLT_DoubleL2Mu50();
        else if (name == "HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm") return nt.HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm();
        else if (name == "HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm") return nt.HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm();
        else if (name == "HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm") return nt.HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm();
        else if (name == "HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm") return nt.HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm();
        else if (name == "HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm") return nt.HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm();
        else if (name == "HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm") return nt.HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm();
        else if (name == "HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg") return nt.HLT_DoubleLooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg();
        else if (name == "HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg") return nt.HLT_DoubleLooseChargedIsoPFTau35_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg") return nt.HLT_DoubleLooseChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg();
        else if (name == "HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg") return nt.HLT_DoubleLooseChargedIsoPFTau40_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1") return nt.HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1();
        else if (name == "HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg") return nt.HLT_DoubleMediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg();
        else if (name == "HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg") return nt.HLT_DoubleMediumChargedIsoPFTau35_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg") return nt.HLT_DoubleMediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg();
        else if (name == "HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg") return nt.HLT_DoubleMediumChargedIsoPFTau40_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg") return nt.HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg") return nt.HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg();
        else if (name == "HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg") return nt.HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg") return nt.HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg();
        else if (name == "HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1") return nt.HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1();
        else if (name == "HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg") return nt.HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg") return nt.HLT_DoubleMediumCombinedIsoPFTau35_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1") return nt.HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1();
        else if (name == "HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg") return nt.HLT_DoubleMediumCombinedIsoPFTau40_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60") return nt.HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60();
        else if (name == "HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75") return nt.HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75();
        else if (name == "HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1") return nt.HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1();
        else if (name == "HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg") return nt.HLT_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg") return nt.HLT_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1") return nt.HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1();
        else if (name == "HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg") return nt.HLT_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleMu0") return nt.HLT_DoubleMu0();
        else if (name == "HLT_DoubleMu18NoFiltersNoVtx") return nt.HLT_DoubleMu18NoFiltersNoVtx();
        else if (name == "HLT_DoubleMu20_7_Mass0to30_L1_DM4") return nt.HLT_DoubleMu20_7_Mass0to30_L1_DM4();
        else if (name == "HLT_DoubleMu20_7_Mass0to30_L1_DM4EG") return nt.HLT_DoubleMu20_7_Mass0to30_L1_DM4EG();
        else if (name == "HLT_DoubleMu20_7_Mass0to30_Photon23") return nt.HLT_DoubleMu20_7_Mass0to30_Photon23();
        else if (name == "HLT_DoubleMu23NoFiltersNoVtxDisplaced") return nt.HLT_DoubleMu23NoFiltersNoVtxDisplaced();
        else if (name == "HLT_DoubleMu28NoFiltersNoVtxDisplaced") return nt.HLT_DoubleMu28NoFiltersNoVtxDisplaced();
        else if (name == "HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi") return nt.HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi();
        else if (name == "HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi") return nt.HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi();
        else if (name == "HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05") return nt.HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05();
        else if (name == "HLT_DoubleMu33NoFiltersNoVtx") return nt.HLT_DoubleMu33NoFiltersNoVtx();
        else if (name == "HLT_DoubleMu33NoFiltersNoVtxDisplaced") return nt.HLT_DoubleMu33NoFiltersNoVtxDisplaced();
        else if (name == "HLT_DoubleMu38NoFiltersNoVtx") return nt.HLT_DoubleMu38NoFiltersNoVtx();
        else if (name == "HLT_DoubleMu3_DCA_PFMET50_PFMHT60") return nt.HLT_DoubleMu3_DCA_PFMET50_PFMHT60();
        else if (name == "HLT_DoubleMu3_DZ_PFMET50_PFMHT60") return nt.HLT_DoubleMu3_DZ_PFMET50_PFMHT60();
        else if (name == "HLT_DoubleMu3_DZ_PFMET70_PFMHT70") return nt.HLT_DoubleMu3_DZ_PFMET70_PFMHT70();
        else if (name == "HLT_DoubleMu3_DZ_PFMET90_PFMHT90") return nt.HLT_DoubleMu3_DZ_PFMET90_PFMHT90();
        else if (name == "HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon") return nt.HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon();
        else if (name == "HLT_DoubleMu3_PFMET50") return nt.HLT_DoubleMu3_PFMET50();
        else if (name == "HLT_DoubleMu3_TkMu_DsTau3Mu") return nt.HLT_DoubleMu3_TkMu_DsTau3Mu();
        else if (name == "HLT_DoubleMu3_Trk_Tau3mu") return nt.HLT_DoubleMu3_Trk_Tau3mu();
        else if (name == "HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass") return nt.HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass();
        else if (name == "HLT_DoubleMu40NoFiltersNoVtxDisplaced") return nt.HLT_DoubleMu40NoFiltersNoVtxDisplaced();
        else if (name == "HLT_DoubleMu43NoFiltersNoVtx") return nt.HLT_DoubleMu43NoFiltersNoVtx();
        else if (name == "HLT_DoubleMu48NoFiltersNoVtx") return nt.HLT_DoubleMu48NoFiltersNoVtx();
        else if (name == "HLT_DoubleMu4_3_Bs") return nt.HLT_DoubleMu4_3_Bs();
        else if (name == "HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG") return nt.HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG();
        else if (name == "HLT_DoubleMu4_3_Jpsi") return nt.HLT_DoubleMu4_3_Jpsi();
        else if (name == "HLT_DoubleMu4_3_Jpsi_Displaced") return nt.HLT_DoubleMu4_3_Jpsi_Displaced();
        else if (name == "HLT_DoubleMu4_3_LowMass") return nt.HLT_DoubleMu4_3_LowMass();
        else if (name == "HLT_DoubleMu4_3_Photon4_BsToMMG") return nt.HLT_DoubleMu4_3_Photon4_BsToMMG();
        else if (name == "HLT_DoubleMu4_JpsiTrkTrk_Displaced") return nt.HLT_DoubleMu4_JpsiTrkTrk_Displaced();
        else if (name == "HLT_DoubleMu4_JpsiTrk_Bc") return nt.HLT_DoubleMu4_JpsiTrk_Bc();
        else if (name == "HLT_DoubleMu4_JpsiTrk_Displaced") return nt.HLT_DoubleMu4_JpsiTrk_Displaced();
        else if (name == "HLT_DoubleMu4_Jpsi_Displaced") return nt.HLT_DoubleMu4_Jpsi_Displaced();
        else if (name == "HLT_DoubleMu4_Jpsi_NoVertexing") return nt.HLT_DoubleMu4_Jpsi_NoVertexing();
        else if (name == "HLT_DoubleMu4_LowMassNonResonantTrk_Displaced") return nt.HLT_DoubleMu4_LowMassNonResonantTrk_Displaced();
        else if (name == "HLT_DoubleMu4_LowMass_Displaced") return nt.HLT_DoubleMu4_LowMass_Displaced();
        else if (name == "HLT_DoubleMu4_Mass3p8_DZ_PFHT350") return nt.HLT_DoubleMu4_Mass3p8_DZ_PFHT350();
        else if (name == "HLT_DoubleMu4_Mass8_DZ_PFHT350") return nt.HLT_DoubleMu4_Mass8_DZ_PFHT350();
        else if (name == "HLT_DoubleMu4_MuMuTrk_Displaced") return nt.HLT_DoubleMu4_MuMuTrk_Displaced();
        else if (name == "HLT_DoubleMu4_PsiPrimeTrk_Displaced") return nt.HLT_DoubleMu4_PsiPrimeTrk_Displaced();
        else if (name == "HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL") return nt.HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL();
        else if (name == "HLT_DoubleMu8_Mass8_PFHT250") return nt.HLT_DoubleMu8_Mass8_PFHT250();
        else if (name == "HLT_DoubleMu8_Mass8_PFHT300") return nt.HLT_DoubleMu8_Mass8_PFHT300();
        else if (name == "HLT_DoubleMu8_Mass8_PFHT350") return nt.HLT_DoubleMu8_Mass8_PFHT350();
        else if (name == "HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33") return nt.HLT_DoublePFJets100MaxDeta1p6_DoubleCaloBTagCSV_p33();
        else if (name == "HLT_DoublePFJets100_CaloBTagCSV_p33") return nt.HLT_DoublePFJets100_CaloBTagCSV_p33();
        else if (name == "HLT_DoublePFJets100_CaloBTagCSV_p79") return nt.HLT_DoublePFJets100_CaloBTagCSV_p79();
        else if (name == "HLT_DoublePFJets100_CaloBTagDeepCSV_p71") return nt.HLT_DoublePFJets100_CaloBTagDeepCSV_p71();
        else if (name == "HLT_DoublePFJets100_PFBTagDeepCSV_p71") return nt.HLT_DoublePFJets100_PFBTagDeepCSV_p71();
        else if (name == "HLT_DoublePFJets100_PFBTagDeepJet_p71") return nt.HLT_DoublePFJets100_PFBTagDeepJet_p71();
        else if (name == "HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33") return nt.HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p33();
        else if (name == "HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79") return nt.HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagCSV_p79();
        else if (name == "HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71") return nt.HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71();
        else if (name == "HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71") return nt.HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71();
        else if (name == "HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71") return nt.HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71();
        else if (name == "HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33") return nt.HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p33();
        else if (name == "HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79") return nt.HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagCSV_p79();
        else if (name == "HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71") return nt.HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71();
        else if (name == "HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71") return nt.HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71();
        else if (name == "HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71") return nt.HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71();
        else if (name == "HLT_DoublePFJets200_CaloBTagCSV_p33") return nt.HLT_DoublePFJets200_CaloBTagCSV_p33();
        else if (name == "HLT_DoublePFJets200_CaloBTagCSV_p79") return nt.HLT_DoublePFJets200_CaloBTagCSV_p79();
        else if (name == "HLT_DoublePFJets200_CaloBTagDeepCSV_p71") return nt.HLT_DoublePFJets200_CaloBTagDeepCSV_p71();
        else if (name == "HLT_DoublePFJets200_PFBTagDeepCSV_p71") return nt.HLT_DoublePFJets200_PFBTagDeepCSV_p71();
        else if (name == "HLT_DoublePFJets200_PFBTagDeepJet_p71") return nt.HLT_DoublePFJets200_PFBTagDeepJet_p71();
        else if (name == "HLT_DoublePFJets350_CaloBTagCSV_p33") return nt.HLT_DoublePFJets350_CaloBTagCSV_p33();
        else if (name == "HLT_DoublePFJets350_CaloBTagCSV_p79") return nt.HLT_DoublePFJets350_CaloBTagCSV_p79();
        else if (name == "HLT_DoublePFJets350_CaloBTagDeepCSV_p71") return nt.HLT_DoublePFJets350_CaloBTagDeepCSV_p71();
        else if (name == "HLT_DoublePFJets350_PFBTagDeepCSV_p71") return nt.HLT_DoublePFJets350_PFBTagDeepCSV_p71();
        else if (name == "HLT_DoublePFJets350_PFBTagDeepJet_p71") return nt.HLT_DoublePFJets350_PFBTagDeepJet_p71();
        else if (name == "HLT_DoublePFJets40_CaloBTagCSV_p33") return nt.HLT_DoublePFJets40_CaloBTagCSV_p33();
        else if (name == "HLT_DoublePFJets40_CaloBTagCSV_p79") return nt.HLT_DoublePFJets40_CaloBTagCSV_p79();
        else if (name == "HLT_DoublePFJets40_CaloBTagDeepCSV_p71") return nt.HLT_DoublePFJets40_CaloBTagDeepCSV_p71();
        else if (name == "HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1") return nt.HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1();
        else if (name == "HLT_DoublePFJets40_PFBTagDeepCSV_p71") return nt.HLT_DoublePFJets40_PFBTagDeepCSV_p71();
        else if (name == "HLT_DoublePFJets40_PFBTagDeepJet_p71") return nt.HLT_DoublePFJets40_PFBTagDeepJet_p71();
        else if (name == "HLT_DoublePhoton33_CaloIdL") return nt.HLT_DoublePhoton33_CaloIdL();
        else if (name == "HLT_DoublePhoton60") return nt.HLT_DoublePhoton60();
        else if (name == "HLT_DoublePhoton70") return nt.HLT_DoublePhoton70();
        else if (name == "HLT_DoublePhoton85") return nt.HLT_DoublePhoton85();
        else if (name == "HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg") return nt.HLT_DoubleTightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg();
        else if (name == "HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg") return nt.HLT_DoubleTightChargedIsoPFTau35_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg") return nt.HLT_DoubleTightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg();
        else if (name == "HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg") return nt.HLT_DoubleTightChargedIsoPFTau40_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg") return nt.HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg();
        else if (name == "HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1") return nt.HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1();
        else if (name == "HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg") return nt.HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg") return nt.HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg();
        else if (name == "HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg") return nt.HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg") return nt.HLT_DoubleTightCombinedIsoPFTau35_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1") return nt.HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1();
        else if (name == "HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg") return nt.HLT_DoubleTightCombinedIsoPFTau40_Trk1_eta2p1_Reg();
        else if (name == "HLT_DoubleTrkMu_16_6_NoFiltersNoVtx") return nt.HLT_DoubleTrkMu_16_6_NoFiltersNoVtx();
        else if (name == "HLT_ECALHT800") return nt.HLT_ECALHT800();
        else if (name == "HLT_EcalCalibration") return nt.HLT_EcalCalibration();
        else if (name == "HLT_Ele105_CaloIdVT_GsfTrkIdT") return nt.HLT_Ele105_CaloIdVT_GsfTrkIdT();
        else if (name == "HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13") return nt.HLT_Ele10_CaloIdM_TrackIdM_CentralPFJet30_BTagCSV_p13();
        else if (name == "HLT_Ele115_CaloIdVT_GsfTrkIdT") return nt.HLT_Ele115_CaloIdVT_GsfTrkIdT();
        else if (name == "HLT_Ele12_CaloIdL_TrackIdL_IsoVL") return nt.HLT_Ele12_CaloIdL_TrackIdL_IsoVL();
        else if (name == "HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30") return nt.HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30();
        else if (name == "HLT_Ele12_CaloIdM_TrackIdM_PFJet30") return nt.HLT_Ele12_CaloIdM_TrackIdM_PFJet30();
        else if (name == "HLT_Ele135_CaloIdVT_GsfTrkIdT") return nt.HLT_Ele135_CaloIdVT_GsfTrkIdT();
        else if (name == "HLT_Ele145_CaloIdVT_GsfTrkIdT") return nt.HLT_Ele145_CaloIdVT_GsfTrkIdT();
        else if (name == "HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30") return nt.HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30();
        else if (name == "HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL") return nt.HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL();
        else if (name == "HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400") return nt.HLT_Ele15_IsoVVVL_BTagCSV_p067_PFHT400();
        else if (name == "HLT_Ele15_IsoVVVL_PFHT350") return nt.HLT_Ele15_IsoVVVL_PFHT350();
        else if (name == "HLT_Ele15_IsoVVVL_PFHT350_PFMET50") return nt.HLT_Ele15_IsoVVVL_PFHT350_PFMET50();
        else if (name == "HLT_Ele15_IsoVVVL_PFHT400") return nt.HLT_Ele15_IsoVVVL_PFHT400();
        else if (name == "HLT_Ele15_IsoVVVL_PFHT400_PFMET50") return nt.HLT_Ele15_IsoVVVL_PFHT400_PFMET50();
        else if (name == "HLT_Ele15_IsoVVVL_PFHT450") return nt.HLT_Ele15_IsoVVVL_PFHT450();
        else if (name == "HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5") return nt.HLT_Ele15_IsoVVVL_PFHT450_CaloBTagCSV_4p5();
        else if (name == "HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5") return nt.HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5();
        else if (name == "HLT_Ele15_IsoVVVL_PFHT450_PFMET50") return nt.HLT_Ele15_IsoVVVL_PFHT450_PFMET50();
        else if (name == "HLT_Ele15_IsoVVVL_PFHT600") return nt.HLT_Ele15_IsoVVVL_PFHT600();
        else if (name == "HLT_Ele15_WPLoose_Gsf") return nt.HLT_Ele15_WPLoose_Gsf();
        else if (name == "HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL") return nt.HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL();
        else if (name == "HLT_Ele17_CaloIdL_GsfTrkIdVL") return nt.HLT_Ele17_CaloIdL_GsfTrkIdVL();
        else if (name == "HLT_Ele17_CaloIdL_TrackIdL_IsoVL") return nt.HLT_Ele17_CaloIdL_TrackIdL_IsoVL();
        else if (name == "HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30") return nt.HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30();
        else if (name == "HLT_Ele17_CaloIdM_TrackIdM_PFJet30") return nt.HLT_Ele17_CaloIdM_TrackIdM_PFJet30();
        else if (name == "HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL") return nt.HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL();
        else if (name == "HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ") return nt.HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_DZ();
        else if (name == "HLT_Ele17_Ele8_Gsf") return nt.HLT_Ele17_Ele8_Gsf();
        else if (name == "HLT_Ele17_WPLoose_Gsf") return nt.HLT_Ele17_WPLoose_Gsf();
        else if (name == "HLT_Ele200_CaloIdVT_GsfTrkIdT") return nt.HLT_Ele200_CaloIdVT_GsfTrkIdT();
        else if (name == "HLT_Ele20_WPLoose_Gsf") return nt.HLT_Ele20_WPLoose_Gsf();
        else if (name == "HLT_Ele20_WPTight_Gsf") return nt.HLT_Ele20_WPTight_Gsf();
        else if (name == "HLT_Ele20_eta2p1_WPLoose_Gsf") return nt.HLT_Ele20_eta2p1_WPLoose_Gsf();
        else if (name == "HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28") return nt.HLT_Ele20_eta2p1_WPLoose_Gsf_LooseIsoPFTau28();
        else if (name == "HLT_Ele22_eta2p1_WPLoose_Gsf") return nt.HLT_Ele22_eta2p1_WPLoose_Gsf();
        else if (name == "HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1") return nt.HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1();
        else if (name == "HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29") return nt.HLT_Ele22_eta2p1_WPLoose_Gsf_LooseIsoPFTau29();
        else if (name == "HLT_Ele23_CaloIdL_TrackIdL_IsoVL") return nt.HLT_Ele23_CaloIdL_TrackIdL_IsoVL();
        else if (name == "HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30") return nt.HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30();
        else if (name == "HLT_Ele23_CaloIdM_TrackIdM_PFJet30") return nt.HLT_Ele23_CaloIdM_TrackIdM_PFJet30();
        else if (name == "HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL") return nt.HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL();
        else if (name == "HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ") return nt.HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ();
        else if (name == "HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded") return nt.HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_L1JetTauSeeded();
        else if (name == "HLT_Ele23_WPLoose_Gsf") return nt.HLT_Ele23_WPLoose_Gsf();
        else if (name == "HLT_Ele23_WPLoose_Gsf_WHbbBoost") return nt.HLT_Ele23_WPLoose_Gsf_WHbbBoost();
        else if (name == "HLT_Ele24_eta2p1_WPLoose_Gsf") return nt.HLT_Ele24_eta2p1_WPLoose_Gsf();
        else if (name == "HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20") return nt.HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20();
        else if (name == "HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1") return nt.HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1();
        else if (name == "HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30") return nt.HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30();
        else if (name == "HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1") return nt.HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_CrossL1();
        else if (name == "HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1") return nt.HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTau30_eta2p1_TightID_CrossL1();
        else if (name == "HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1") return nt.HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1();
        else if (name == "HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1") return nt.HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1();
        else if (name == "HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1") return nt.HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1();
        else if (name == "HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1") return nt.HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_CrossL1();
        else if (name == "HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1") return nt.HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTau30_eta2p1_TightID_CrossL1();
        else if (name == "HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1") return nt.HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1();
        else if (name == "HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1") return nt.HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1();
        else if (name == "HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1") return nt.HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_CrossL1();
        else if (name == "HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1") return nt.HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTau30_eta2p1_TightID_CrossL1();
        else if (name == "HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1") return nt.HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1();
        else if (name == "HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1") return nt.HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1();
        else if (name == "HLT_Ele250_CaloIdVT_GsfTrkIdT") return nt.HLT_Ele250_CaloIdVT_GsfTrkIdT();
        else if (name == "HLT_Ele25_WPTight_Gsf") return nt.HLT_Ele25_WPTight_Gsf();
        else if (name == "HLT_Ele25_eta2p1_WPLoose_Gsf") return nt.HLT_Ele25_eta2p1_WPLoose_Gsf();
        else if (name == "HLT_Ele25_eta2p1_WPTight_Gsf") return nt.HLT_Ele25_eta2p1_WPTight_Gsf();
        else if (name == "HLT_Ele27_Ele37_CaloIdL_MW") return nt.HLT_Ele27_Ele37_CaloIdL_MW();
        else if (name == "HLT_Ele27_HighEta_Ele20_Mass55") return nt.HLT_Ele27_HighEta_Ele20_Mass55();
        else if (name == "HLT_Ele27_WPLoose_Gsf") return nt.HLT_Ele27_WPLoose_Gsf();
        else if (name == "HLT_Ele27_WPLoose_Gsf_WHbbBoost") return nt.HLT_Ele27_WPLoose_Gsf_WHbbBoost();
        else if (name == "HLT_Ele27_WPTight_Gsf") return nt.HLT_Ele27_WPTight_Gsf();
        else if (name == "HLT_Ele27_WPTight_Gsf_L1JetTauSeeded") return nt.HLT_Ele27_WPTight_Gsf_L1JetTauSeeded();
        else if (name == "HLT_Ele27_eta2p1_WPLoose_Gsf") return nt.HLT_Ele27_eta2p1_WPLoose_Gsf();
        else if (name == "HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg") return nt.HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau32_Trk1_eta2p1_Reg();
        else if (name == "HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg") return nt.HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau35_Trk1_eta2p1_Reg();
        else if (name == "HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg") return nt.HLT_Ele27_eta2p1_WPLoose_Gsf_DoubleMediumIsoPFTau40_Trk1_eta2p1_Reg();
        else if (name == "HLT_Ele27_eta2p1_WPLoose_Gsf_HT200") return nt.HLT_Ele27_eta2p1_WPLoose_Gsf_HT200();
        else if (name == "HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1") return nt.HLT_Ele27_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1();
        else if (name == "HLT_Ele27_eta2p1_WPTight_Gsf") return nt.HLT_Ele27_eta2p1_WPTight_Gsf();
        else if (name == "HLT_Ele28_HighEta_SC20_Mass55") return nt.HLT_Ele28_HighEta_SC20_Mass55();
        else if (name == "HLT_Ele28_WPTight_Gsf") return nt.HLT_Ele28_WPTight_Gsf();
        else if (name == "HLT_Ele28_eta2p1_WPTight_Gsf_HT150") return nt.HLT_Ele28_eta2p1_WPTight_Gsf_HT150();
        else if (name == "HLT_Ele300_CaloIdVT_GsfTrkIdT") return nt.HLT_Ele300_CaloIdVT_GsfTrkIdT();
        else if (name == "HLT_Ele30WP60_Ele8_Mass55") return nt.HLT_Ele30WP60_Ele8_Mass55();
        else if (name == "HLT_Ele30WP60_SC4_Mass55") return nt.HLT_Ele30WP60_SC4_Mass55();
        else if (name == "HLT_Ele30_WPTight_Gsf") return nt.HLT_Ele30_WPTight_Gsf();
        else if (name == "HLT_Ele30_eta2p1_WPLoose_Gsf") return nt.HLT_Ele30_eta2p1_WPLoose_Gsf();
        else if (name == "HLT_Ele30_eta2p1_WPTight_Gsf") return nt.HLT_Ele30_eta2p1_WPTight_Gsf();
        else if (name == "HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned") return nt.HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned();
        else if (name == "HLT_Ele32_WPTight_Gsf") return nt.HLT_Ele32_WPTight_Gsf();
        else if (name == "HLT_Ele32_WPTight_Gsf_L1DoubleEG") return nt.HLT_Ele32_WPTight_Gsf_L1DoubleEG();
        else if (name == "HLT_Ele32_eta2p1_WPLoose_Gsf") return nt.HLT_Ele32_eta2p1_WPLoose_Gsf();
        else if (name == "HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1") return nt.HLT_Ele32_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1();
        else if (name == "HLT_Ele32_eta2p1_WPTight_Gsf") return nt.HLT_Ele32_eta2p1_WPTight_Gsf();
        else if (name == "HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50") return nt.HLT_Ele35_CaloIdVT_GsfTrkIdT_PFJet150_PFJet50();
        else if (name == "HLT_Ele35_WPLoose_Gsf") return nt.HLT_Ele35_WPLoose_Gsf();
        else if (name == "HLT_Ele35_WPTight_Gsf") return nt.HLT_Ele35_WPTight_Gsf();
        else if (name == "HLT_Ele35_WPTight_Gsf_L1EGMT") return nt.HLT_Ele35_WPTight_Gsf_L1EGMT();
        else if (name == "HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1") return nt.HLT_Ele36_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1();
        else if (name == "HLT_Ele38_WPTight_Gsf") return nt.HLT_Ele38_WPTight_Gsf();
        else if (name == "HLT_Ele40_WPTight_Gsf") return nt.HLT_Ele40_WPTight_Gsf();
        else if (name == "HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50") return nt.HLT_Ele45_CaloIdVT_GsfTrkIdT_PFJet200_PFJet50();
        else if (name == "HLT_Ele45_WPLoose_Gsf") return nt.HLT_Ele45_WPLoose_Gsf();
        else if (name == "HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded") return nt.HLT_Ele45_WPLoose_Gsf_L1JetTauSeeded();
        else if (name == "HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40") return nt.HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40();
        else if (name == "HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35") return nt.HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35();
        else if (name == "HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140") return nt.HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet140();
        else if (name == "HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165") return nt.HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165();
        else if (name == "HLT_Ele50_IsoVVVL_PFHT400") return nt.HLT_Ele50_IsoVVVL_PFHT400();
        else if (name == "HLT_Ele50_IsoVVVL_PFHT450") return nt.HLT_Ele50_IsoVVVL_PFHT450();
        else if (name == "HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30") return nt.HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30();
        else if (name == "HLT_Ele8_CaloIdM_TrackIdM_PFJet30") return nt.HLT_Ele8_CaloIdM_TrackIdM_PFJet30();
        else if (name == "HLT_EphemeralPhysics") return nt.HLT_EphemeralPhysics();
        else if (name == "HLT_EphemeralZeroBias") return nt.HLT_EphemeralZeroBias();
        else if (name == "HLT_ExpressMuons") return nt.HLT_ExpressMuons();
        else if (name == "HLT_FullTrack_Multiplicity100") return nt.HLT_FullTrack_Multiplicity100();
        else if (name == "HLT_FullTrack_Multiplicity105") return nt.HLT_FullTrack_Multiplicity105();
        else if (name == "HLT_FullTrack_Multiplicity130") return nt.HLT_FullTrack_Multiplicity130();
        else if (name == "HLT_FullTrack_Multiplicity135") return nt.HLT_FullTrack_Multiplicity135();
        else if (name == "HLT_FullTrack_Multiplicity155") return nt.HLT_FullTrack_Multiplicity155();
        else if (name == "HLT_FullTrack_Multiplicity85") return nt.HLT_FullTrack_Multiplicity85();
        else if (name == "HLT_FullTracks_Multiplicity100") return nt.HLT_FullTracks_Multiplicity100();
        else if (name == "HLT_FullTracks_Multiplicity130") return nt.HLT_FullTracks_Multiplicity130();
        else if (name == "HLT_FullTracks_Multiplicity150") return nt.HLT_FullTracks_Multiplicity150();
        else if (name == "HLT_FullTracks_Multiplicity80") return nt.HLT_FullTracks_Multiplicity80();
        else if (name == "HLT_GlobalRunHPDNoise") return nt.HLT_GlobalRunHPDNoise();
        else if (name == "HLT_HISinglePhoton10") return nt.HLT_HISinglePhoton10();
        else if (name == "HLT_HISinglePhoton10_Eta3p1ForPPRef") return nt.HLT_HISinglePhoton10_Eta3p1ForPPRef();
        else if (name == "HLT_HISinglePhoton15") return nt.HLT_HISinglePhoton15();
        else if (name == "HLT_HISinglePhoton20") return nt.HLT_HISinglePhoton20();
        else if (name == "HLT_HISinglePhoton20_Eta3p1ForPPRef") return nt.HLT_HISinglePhoton20_Eta3p1ForPPRef();
        else if (name == "HLT_HISinglePhoton30_Eta3p1ForPPRef") return nt.HLT_HISinglePhoton30_Eta3p1ForPPRef();
        else if (name == "HLT_HISinglePhoton40") return nt.HLT_HISinglePhoton40();
        else if (name == "HLT_HISinglePhoton40_Eta3p1ForPPRef") return nt.HLT_HISinglePhoton40_Eta3p1ForPPRef();
        else if (name == "HLT_HISinglePhoton50_Eta3p1ForPPRef") return nt.HLT_HISinglePhoton50_Eta3p1ForPPRef();
        else if (name == "HLT_HISinglePhoton60") return nt.HLT_HISinglePhoton60();
        else if (name == "HLT_HISinglePhoton60_Eta3p1ForPPRef") return nt.HLT_HISinglePhoton60_Eta3p1ForPPRef();
        else if (name == "HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack") return nt.HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack();
        else if (name == "HLT_HT200") return nt.HLT_HT200();
        else if (name == "HLT_HT2000") return nt.HLT_HT2000();
        else if (name == "HLT_HT200_DisplacedDijet40_DisplacedTrack") return nt.HLT_HT200_DisplacedDijet40_DisplacedTrack();
        else if (name == "HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless") return nt.HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless();
        else if (name == "HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive") return nt.HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive();
        else if (name == "HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless") return nt.HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless();
        else if (name == "HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive") return nt.HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive();
        else if (name == "HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5") return nt.HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5();
        else if (name == "HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5") return nt.HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5();
        else if (name == "HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack") return nt.HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack();
        else if (name == "HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5") return nt.HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5();
        else if (name == "HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack") return nt.HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack();
        else if (name == "HLT_HT2500") return nt.HLT_HT2500();
        else if (name == "HLT_HT250_CaloMET70") return nt.HLT_HT250_CaloMET70();
        else if (name == "HLT_HT250_DisplacedDijet40_DisplacedTrack") return nt.HLT_HT250_DisplacedDijet40_DisplacedTrack();
        else if (name == "HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack") return nt.HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack();
        else if (name == "HLT_HT275") return nt.HLT_HT275();
        else if (name == "HLT_HT300PT30_QuadJet_75_60_45_40") return nt.HLT_HT300PT30_QuadJet_75_60_45_40();
        else if (name == "HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07") return nt.HLT_HT300PT30_QuadJet_75_60_45_40_TripeCSV_p07();
        else if (name == "HLT_HT300_Beamspot") return nt.HLT_HT300_Beamspot();
        else if (name == "HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive") return nt.HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive();
        else if (name == "HLT_HT325") return nt.HLT_HT325();
        else if (name == "HLT_HT350_DisplacedDijet40_DisplacedTrack") return nt.HLT_HT350_DisplacedDijet40_DisplacedTrack();
        else if (name == "HLT_HT350_DisplacedDijet40_Inclusive") return nt.HLT_HT350_DisplacedDijet40_Inclusive();
        else if (name == "HLT_HT350_DisplacedDijet80_DisplacedTrack") return nt.HLT_HT350_DisplacedDijet80_DisplacedTrack();
        else if (name == "HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack") return nt.HLT_HT350_DisplacedDijet80_Tight_DisplacedTrack();
        else if (name == "HLT_HT400_DisplacedDijet40_DisplacedTrack") return nt.HLT_HT400_DisplacedDijet40_DisplacedTrack();
        else if (name == "HLT_HT400_DisplacedDijet40_Inclusive") return nt.HLT_HT400_DisplacedDijet40_Inclusive();
        else if (name == "HLT_HT410to430") return nt.HLT_HT410to430();
        else if (name == "HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive") return nt.HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive();
        else if (name == "HLT_HT425") return nt.HLT_HT425();
        else if (name == "HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive") return nt.HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive();
        else if (name == "HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless") return nt.HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless();
        else if (name == "HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive") return nt.HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive();
        else if (name == "HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive") return nt.HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive();
        else if (name == "HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless") return nt.HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless();
        else if (name == "HLT_HT430_DelayedJet40_SingleDelay1nsInclusive") return nt.HLT_HT430_DelayedJet40_SingleDelay1nsInclusive();
        else if (name == "HLT_HT430_DelayedJet40_SingleDelay1nsTrackless") return nt.HLT_HT430_DelayedJet40_SingleDelay1nsTrackless();
        else if (name == "HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive") return nt.HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive();
        else if (name == "HLT_HT430_DelayedJet40_SingleDelay2nsInclusive") return nt.HLT_HT430_DelayedJet40_SingleDelay2nsInclusive();
        else if (name == "HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5") return nt.HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5();
        else if (name == "HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5") return nt.HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5();
        else if (name == "HLT_HT430_DisplacedDijet40_DisplacedTrack") return nt.HLT_HT430_DisplacedDijet40_DisplacedTrack();
        else if (name == "HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5") return nt.HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5();
        else if (name == "HLT_HT430_DisplacedDijet60_DisplacedTrack") return nt.HLT_HT430_DisplacedDijet60_DisplacedTrack();
        else if (name == "HLT_HT430_DisplacedDijet80_DisplacedTrack") return nt.HLT_HT430_DisplacedDijet80_DisplacedTrack();
        else if (name == "HLT_HT430to450") return nt.HLT_HT430to450();
        else if (name == "HLT_HT450_Beamspot") return nt.HLT_HT450_Beamspot();
        else if (name == "HLT_HT450to470") return nt.HLT_HT450to470();
        else if (name == "HLT_HT470to500") return nt.HLT_HT470to500();
        else if (name == "HLT_HT500_DisplacedDijet40_DisplacedTrack") return nt.HLT_HT500_DisplacedDijet40_DisplacedTrack();
        else if (name == "HLT_HT500_DisplacedDijet40_Inclusive") return nt.HLT_HT500_DisplacedDijet40_Inclusive();
        else if (name == "HLT_HT500to550") return nt.HLT_HT500to550();
        else if (name == "HLT_HT550_DisplacedDijet40_Inclusive") return nt.HLT_HT550_DisplacedDijet40_Inclusive();
        else if (name == "HLT_HT550_DisplacedDijet60_Inclusive") return nt.HLT_HT550_DisplacedDijet60_Inclusive();
        else if (name == "HLT_HT550_DisplacedDijet80_Inclusive") return nt.HLT_HT550_DisplacedDijet80_Inclusive();
        else if (name == "HLT_HT550to650") return nt.HLT_HT550to650();
        else if (name == "HLT_HT575") return nt.HLT_HT575();
        else if (name == "HLT_HT650") return nt.HLT_HT650();
        else if (name == "HLT_HT650_DisplacedDijet60_Inclusive") return nt.HLT_HT650_DisplacedDijet60_Inclusive();
        else if (name == "HLT_HT650_DisplacedDijet80_Inclusive") return nt.HLT_HT650_DisplacedDijet80_Inclusive();
        else if (name == "HLT_HT750_DisplacedDijet80_Inclusive") return nt.HLT_HT750_DisplacedDijet80_Inclusive();
        else if (name == "HLT_HcalCalibration") return nt.HLT_HcalCalibration();
        else if (name == "HLT_HcalIsolatedbunch") return nt.HLT_HcalIsolatedbunch();
        else if (name == "HLT_HcalNZS") return nt.HLT_HcalNZS();
        else if (name == "HLT_HcalPhiSym") return nt.HLT_HcalPhiSym();
        else if (name == "HLT_HighPtTkMu100") return nt.HLT_HighPtTkMu100();
        else if (name == "HLT_IsoMu16_eta2p1_MET30") return nt.HLT_IsoMu16_eta2p1_MET30();
        else if (name == "HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1") return nt.HLT_IsoMu16_eta2p1_MET30_LooseIsoPFTau50_Trk30_eta2p1();
        else if (name == "HLT_IsoMu17_eta2p1") return nt.HLT_IsoMu17_eta2p1();
        else if (name == "HLT_IsoMu17_eta2p1_LooseIsoPFTau20") return nt.HLT_IsoMu17_eta2p1_LooseIsoPFTau20();
        else if (name == "HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1") return nt.HLT_IsoMu17_eta2p1_LooseIsoPFTau20_SingleL1();
        else if (name == "HLT_IsoMu18") return nt.HLT_IsoMu18();
        else if (name == "HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20") return nt.HLT_IsoMu19_eta2p1_LooseCombinedIsoPFTau20();
        else if (name == "HLT_IsoMu19_eta2p1_LooseIsoPFTau20") return nt.HLT_IsoMu19_eta2p1_LooseIsoPFTau20();
        else if (name == "HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1") return nt.HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1();
        else if (name == "HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg") return nt.HLT_IsoMu19_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg();
        else if (name == "HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg") return nt.HLT_IsoMu19_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg();
        else if (name == "HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg") return nt.HLT_IsoMu19_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg();
        else if (name == "HLT_IsoMu20") return nt.HLT_IsoMu20();
        else if (name == "HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1") return nt.HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_CrossL1();
        else if (name == "HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1") return nt.HLT_IsoMu20_eta2p1_LooseChargedIsoPFTau27_eta2p1_TightID_CrossL1();
        else if (name == "HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1") return nt.HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1();
        else if (name == "HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1") return nt.HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1();
        else if (name == "HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1") return nt.HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1();
        else if (name == "HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1") return nt.HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_CrossL1();
        else if (name == "HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1") return nt.HLT_IsoMu20_eta2p1_MediumChargedIsoPFTau27_eta2p1_TightID_CrossL1();
        else if (name == "HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1") return nt.HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1();
        else if (name == "HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1") return nt.HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1();
        else if (name == "HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1") return nt.HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_CrossL1();
        else if (name == "HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1") return nt.HLT_IsoMu20_eta2p1_TightChargedIsoPFTau27_eta2p1_TightID_CrossL1();
        else if (name == "HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1") return nt.HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1();
        else if (name == "HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1") return nt.HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1();
        else if (name == "HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1") return nt.HLT_IsoMu21_eta2p1_LooseIsoPFTau20_SingleL1();
        else if (name == "HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1") return nt.HLT_IsoMu21_eta2p1_LooseIsoPFTau50_Trk30_eta2p1_SingleL1();
        else if (name == "HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg") return nt.HLT_IsoMu21_eta2p1_MediumCombinedIsoPFTau32_Trk1_eta2p1_Reg();
        else if (name == "HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg") return nt.HLT_IsoMu21_eta2p1_MediumIsoPFTau32_Trk1_eta2p1_Reg();
        else if (name == "HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg") return nt.HLT_IsoMu21_eta2p1_TightCombinedIsoPFTau32_Trk1_eta2p1_Reg();
        else if (name == "HLT_IsoMu22") return nt.HLT_IsoMu22();
        else if (name == "HLT_IsoMu22_eta2p1") return nt.HLT_IsoMu22_eta2p1();
        else if (name == "HLT_IsoMu24") return nt.HLT_IsoMu24();
        else if (name == "HLT_IsoMu24_TwoProngs35") return nt.HLT_IsoMu24_TwoProngs35();
        else if (name == "HLT_IsoMu24_eta2p1") return nt.HLT_IsoMu24_eta2p1();
        else if (name == "HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1") return nt.HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_SingleL1();
        else if (name == "HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1") return nt.HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau20_TightID_SingleL1();
        else if (name == "HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1") return nt.HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1") return nt.HLT_IsoMu24_eta2p1_LooseChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1") return nt.HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1();
        else if (name == "HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1") return nt.HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1") return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_SingleL1();
        else if (name == "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1") return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau20_TightID_SingleL1();
        else if (name == "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1") return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1") return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1") return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1") return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr") return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr();
        else if (name == "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1") return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1") return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1") return nt.HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1") return nt.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1();
        else if (name == "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1") return nt.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1") return nt.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1") return nt.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1") return nt.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1") return nt.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1") return nt.HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_SingleL1();
        else if (name == "HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1") return nt.HLT_IsoMu24_eta2p1_TightChargedIsoPFTau20_TightID_SingleL1();
        else if (name == "HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1") return nt.HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_TightID_eta2p1_Reg_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1") return nt.HLT_IsoMu24_eta2p1_TightChargedIsoPFTau35_Trk1_eta2p1_Reg_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1") return nt.HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_TightID_eta2p1_Reg_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1") return nt.HLT_IsoMu24_eta2p1_TightChargedIsoPFTau40_Trk1_eta2p1_Reg_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1") return nt.HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1();
        else if (name == "HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1") return nt.HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1();
        else if (name == "HLT_IsoMu27") return nt.HLT_IsoMu27();
        else if (name == "HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1") return nt.HLT_IsoMu27_LooseChargedIsoPFTau20_SingleL1();
        else if (name == "HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1") return nt.HLT_IsoMu27_LooseChargedIsoPFTau20_Trk1_eta2p1_SingleL1();
        else if (name == "HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1") return nt.HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1();
        else if (name == "HLT_IsoMu27_MET90") return nt.HLT_IsoMu27_MET90();
        else if (name == "HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1") return nt.HLT_IsoMu27_MediumChargedIsoPFTau20_SingleL1();
        else if (name == "HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1") return nt.HLT_IsoMu27_MediumChargedIsoPFTau20_Trk1_eta2p1_SingleL1();
        else if (name == "HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1") return nt.HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1();
        else if (name == "HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1") return nt.HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1();
        else if (name == "HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1") return nt.HLT_IsoMu27_TightChargedIsoPFTau20_SingleL1();
        else if (name == "HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1") return nt.HLT_IsoMu27_TightChargedIsoPFTau20_Trk1_eta2p1_SingleL1();
        else if (name == "HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1") return nt.HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1();
        else if (name == "HLT_IsoMu30") return nt.HLT_IsoMu30();
        else if (name == "HLT_IsoMu50_AK8PFJet230_SoftDropMass40") return nt.HLT_IsoMu50_AK8PFJet230_SoftDropMass40();
        else if (name == "HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35") return nt.HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35();
        else if (name == "HLT_IsoTkMu18") return nt.HLT_IsoTkMu18();
        else if (name == "HLT_IsoTkMu20") return nt.HLT_IsoTkMu20();
        else if (name == "HLT_IsoTkMu22") return nt.HLT_IsoTkMu22();
        else if (name == "HLT_IsoTkMu22_eta2p1") return nt.HLT_IsoTkMu22_eta2p1();
        else if (name == "HLT_IsoTkMu24") return nt.HLT_IsoTkMu24();
        else if (name == "HLT_IsoTkMu24_eta2p1") return nt.HLT_IsoTkMu24_eta2p1();
        else if (name == "HLT_IsoTkMu27") return nt.HLT_IsoTkMu27();
        else if (name == "HLT_IsoTrackHB") return nt.HLT_IsoTrackHB();
        else if (name == "HLT_IsoTrackHE") return nt.HLT_IsoTrackHE();
        else if (name == "HLT_JetE30_NoBPTX") return nt.HLT_JetE30_NoBPTX();
        else if (name == "HLT_JetE30_NoBPTX3BX") return nt.HLT_JetE30_NoBPTX3BX();
        else if (name == "HLT_JetE50_NoBPTX3BX") return nt.HLT_JetE50_NoBPTX3BX();
        else if (name == "HLT_JetE70_NoBPTX3BX") return nt.HLT_JetE70_NoBPTX3BX();
        else if (name == "HLT_L1BeamGasMinus") return nt.HLT_L1BeamGasMinus();
        else if (name == "HLT_L1BeamGasPlus") return nt.HLT_L1BeamGasPlus();
        else if (name == "HLT_L1BptxMinus") return nt.HLT_L1BptxMinus();
        else if (name == "HLT_L1BptxPlus") return nt.HLT_L1BptxPlus();
        else if (name == "HLT_L1BptxXOR") return nt.HLT_L1BptxXOR();
        else if (name == "HLT_L1CSCShower_DTCluster50") return nt.HLT_L1CSCShower_DTCluster50();
        else if (name == "HLT_L1CSCShower_DTCluster75") return nt.HLT_L1CSCShower_DTCluster75();
        else if (name == "HLT_L1ETMHadSeeds") return nt.HLT_L1ETMHadSeeds();
        else if (name == "HLT_L1FatEvents") return nt.HLT_L1FatEvents();
        else if (name == "HLT_L1FatEvents_part0") return nt.HLT_L1FatEvents_part0();
        else if (name == "HLT_L1FatEvents_part1") return nt.HLT_L1FatEvents_part1();
        else if (name == "HLT_L1FatEvents_part2") return nt.HLT_L1FatEvents_part2();
        else if (name == "HLT_L1FatEvents_part3") return nt.HLT_L1FatEvents_part3();
        else if (name == "HLT_L1MET_DTCluster50") return nt.HLT_L1MET_DTCluster50();
        else if (name == "HLT_L1MET_DTClusterNoMB1S50") return nt.HLT_L1MET_DTClusterNoMB1S50();
        else if (name == "HLT_L1MinimumBiasHF0OR") return nt.HLT_L1MinimumBiasHF0OR();
        else if (name == "HLT_L1MinimumBiasHF_AND") return nt.HLT_L1MinimumBiasHF_AND();
        else if (name == "HLT_L1MinimumBiasHF_OR") return nt.HLT_L1MinimumBiasHF_OR();
        else if (name == "HLT_L1MinimumBiasHF_OR_part0") return nt.HLT_L1MinimumBiasHF_OR_part0();
        else if (name == "HLT_L1MinimumBiasHF_OR_part1") return nt.HLT_L1MinimumBiasHF_OR_part1();
        else if (name == "HLT_L1MinimumBiasHF_OR_part2") return nt.HLT_L1MinimumBiasHF_OR_part2();
        else if (name == "HLT_L1MinimumBiasHF_OR_part3") return nt.HLT_L1MinimumBiasHF_OR_part3();
        else if (name == "HLT_L1MinimumBiasHF_OR_part4") return nt.HLT_L1MinimumBiasHF_OR_part4();
        else if (name == "HLT_L1MinimumBiasHF_OR_part5") return nt.HLT_L1MinimumBiasHF_OR_part5();
        else if (name == "HLT_L1MinimumBiasHF_OR_part6") return nt.HLT_L1MinimumBiasHF_OR_part6();
        else if (name == "HLT_L1MinimumBiasHF_OR_part7") return nt.HLT_L1MinimumBiasHF_OR_part7();
        else if (name == "HLT_L1MinimumBiasHF_OR_part8") return nt.HLT_L1MinimumBiasHF_OR_part8();
        else if (name == "HLT_L1MinimumBiasHF_OR_part9") return nt.HLT_L1MinimumBiasHF_OR_part9();
        else if (name == "HLT_L1Mu6HT240") return nt.HLT_L1Mu6HT240();
        else if (name == "HLT_L1NotBptxOR") return nt.HLT_L1NotBptxOR();
        else if (name == "HLT_L1SingleMu16") return nt.HLT_L1SingleMu16();
        else if (name == "HLT_L1SingleMu18") return nt.HLT_L1SingleMu18();
        else if (name == "HLT_L1SingleMu25") return nt.HLT_L1SingleMu25();
        else if (name == "HLT_L1SingleMuCosmics") return nt.HLT_L1SingleMuCosmics();
        else if (name == "HLT_L1SingleMuOpen") return nt.HLT_L1SingleMuOpen();
        else if (name == "HLT_L1SingleMuOpen_DT") return nt.HLT_L1SingleMuOpen_DT();
        else if (name == "HLT_L1UnpairedBunchBptxMinus") return nt.HLT_L1UnpairedBunchBptxMinus();
        else if (name == "HLT_L1UnpairedBunchBptxPlus") return nt.HLT_L1UnpairedBunchBptxPlus();
        else if (name == "HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142") return nt.HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142();
        else if (name == "HLT_L1_DoubleJet30_Mass_Min400_Mu10") return nt.HLT_L1_DoubleJet30_Mass_Min400_Mu10();
        else if (name == "HLT_L1_TripleJet_VBF") return nt.HLT_L1_TripleJet_VBF();
        else if (name == "HLT_L2DoubleMu23_NoVertex") return nt.HLT_L2DoubleMu23_NoVertex();
        else if (name == "HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10") return nt.HLT_L2DoubleMu28_NoVertex_2Cha_Angle2p5_Mass10();
        else if (name == "HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10") return nt.HLT_L2DoubleMu38_NoVertex_2Cha_Angle2p5_Mass10();
        else if (name == "HLT_L2Mu10") return nt.HLT_L2Mu10();
        else if (name == "HLT_L2Mu10NoVtx_2Cha") return nt.HLT_L2Mu10NoVtx_2Cha();
        else if (name == "HLT_L2Mu10NoVtx_2Cha_CosmicSeed") return nt.HLT_L2Mu10NoVtx_2Cha_CosmicSeed();
        else if (name == "HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm") return nt.HLT_L2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm();
        else if (name == "HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm") return nt.HLT_L2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm();
        else if (name == "HLT_L2Mu10_NoVertex_NoBPTX") return nt.HLT_L2Mu10_NoVertex_NoBPTX();
        else if (name == "HLT_L2Mu10_NoVertex_NoBPTX3BX") return nt.HLT_L2Mu10_NoVertex_NoBPTX3BX();
        else if (name == "HLT_L2Mu23NoVtx_2Cha") return nt.HLT_L2Mu23NoVtx_2Cha();
        else if (name == "HLT_L2Mu23NoVtx_2Cha_CosmicSeed") return nt.HLT_L2Mu23NoVtx_2Cha_CosmicSeed();
        else if (name == "HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX") return nt.HLT_L2Mu35_NoVertex_3Sta_NoBPTX3BX();
        else if (name == "HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX") return nt.HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX();
        else if (name == "HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX") return nt.HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX();
        else if (name == "HLT_L2Mu50") return nt.HLT_L2Mu50();
        else if (name == "HLT_L3Mu10NoVtx") return nt.HLT_L3Mu10NoVtx();
        else if (name == "HLT_L3Mu10NoVtx_DxyMin0p01cm") return nt.HLT_L3Mu10NoVtx_DxyMin0p01cm();
        else if (name == "HLT_L3dTksMu10_NoVtx_DxyMin0p01cm") return nt.HLT_L3dTksMu10_NoVtx_DxyMin0p01cm();
        else if (name == "HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1") return nt.HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1();
        else if (name == "HLT_LooseIsoPFTau50_Trk30_eta2p1") return nt.HLT_LooseIsoPFTau50_Trk30_eta2p1();
        else if (name == "HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110") return nt.HLT_LooseIsoPFTau50_Trk30_eta2p1_MET110();
        else if (name == "HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120") return nt.HLT_LooseIsoPFTau50_Trk30_eta2p1_MET120();
        else if (name == "HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80") return nt.HLT_LooseIsoPFTau50_Trk30_eta2p1_MET80();
        else if (name == "HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90") return nt.HLT_LooseIsoPFTau50_Trk30_eta2p1_MET90();
        else if (name == "HLT_MET100") return nt.HLT_MET100();
        else if (name == "HLT_MET105_IsoTrk50") return nt.HLT_MET105_IsoTrk50();
        else if (name == "HLT_MET120_IsoTrk50") return nt.HLT_MET120_IsoTrk50();
        else if (name == "HLT_MET150") return nt.HLT_MET150();
        else if (name == "HLT_MET200") return nt.HLT_MET200();
        else if (name == "HLT_MET250") return nt.HLT_MET250();
        else if (name == "HLT_MET300") return nt.HLT_MET300();
        else if (name == "HLT_MET600") return nt.HLT_MET600();
        else if (name == "HLT_MET60_IsoTrk35_Loose") return nt.HLT_MET60_IsoTrk35_Loose();
        else if (name == "HLT_MET700") return nt.HLT_MET700();
        else if (name == "HLT_MET75_IsoTrk50") return nt.HLT_MET75_IsoTrk50();
        else if (name == "HLT_MET90_IsoTrk50") return nt.HLT_MET90_IsoTrk50();
        else if (name == "HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr") return nt.HLT_MediumChargedIsoPFTau100HighPtRelaxedIso_Trk50_eta2p1_1pr();
        else if (name == "HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1") return nt.HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1();
        else if (name == "HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr") return nt.HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr();
        else if (name == "HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1") return nt.HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1();
        else if (name == "HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1") return nt.HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1();
        else if (name == "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr") return nt.HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr();
        else if (name == "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100") return nt.HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100();
        else if (name == "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110") return nt.HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110();
        else if (name == "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120") return nt.HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120();
        else if (name == "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130") return nt.HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130();
        else if (name == "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140") return nt.HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140();
        else if (name == "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90") return nt.HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90();
        else if (name == "HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight") return nt.HLT_MonoCentralPFJet80_PFMETNoMu100_PFMHTNoMu100_IDTight();
        else if (name == "HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight") return nt.HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight();
        else if (name == "HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight") return nt.HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight();
        else if (name == "HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight") return nt.HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight();
        else if (name == "HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight") return nt.HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight();
        else if (name == "HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight") return nt.HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_IDTight();
        else if (name == "HLT_Mu0_L1DoubleMu") return nt.HLT_Mu0_L1DoubleMu();
        else if (name == "HLT_Mu10_CentralPFJet30_BTagCSV_p13") return nt.HLT_Mu10_CentralPFJet30_BTagCSV_p13();
        else if (name == "HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60") return nt.HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60();
        else if (name == "HLT_Mu10p5_IP3p5_part0") return nt.HLT_Mu10p5_IP3p5_part0();
        else if (name == "HLT_Mu10p5_IP3p5_part1") return nt.HLT_Mu10p5_IP3p5_part1();
        else if (name == "HLT_Mu10p5_IP3p5_part2") return nt.HLT_Mu10p5_IP3p5_part2();
        else if (name == "HLT_Mu10p5_IP3p5_part3") return nt.HLT_Mu10p5_IP3p5_part3();
        else if (name == "HLT_Mu10p5_IP3p5_part4") return nt.HLT_Mu10p5_IP3p5_part4();
        else if (name == "HLT_Mu10p5_IP3p5_part5") return nt.HLT_Mu10p5_IP3p5_part5();
        else if (name == "HLT_Mu12") return nt.HLT_Mu12();
        else if (name == "HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33") return nt.HLT_Mu12_DoublePFJets100_CaloBTagCSV_p33();
        else if (name == "HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79") return nt.HLT_Mu12_DoublePFJets100_CaloBTagCSV_p79();
        else if (name == "HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71") return nt.HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71();
        else if (name == "HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71") return nt.HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71();
        else if (name == "HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71") return nt.HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71();
        else if (name == "HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33") return nt.HLT_Mu12_DoublePFJets200_CaloBTagCSV_p33();
        else if (name == "HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79") return nt.HLT_Mu12_DoublePFJets200_CaloBTagCSV_p79();
        else if (name == "HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71") return nt.HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71();
        else if (name == "HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71") return nt.HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71();
        else if (name == "HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71") return nt.HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71();
        else if (name == "HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33") return nt.HLT_Mu12_DoublePFJets350_CaloBTagCSV_p33();
        else if (name == "HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79") return nt.HLT_Mu12_DoublePFJets350_CaloBTagCSV_p79();
        else if (name == "HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71") return nt.HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71();
        else if (name == "HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71") return nt.HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71();
        else if (name == "HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71") return nt.HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71();
        else if (name == "HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33") return nt.HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p33();
        else if (name == "HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79") return nt.HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagCSV_p79();
        else if (name == "HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71") return nt.HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71();
        else if (name == "HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71") return nt.HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71();
        else if (name == "HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71") return nt.HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71();
        else if (name == "HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33") return nt.HLT_Mu12_DoublePFJets40_CaloBTagCSV_p33();
        else if (name == "HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79") return nt.HLT_Mu12_DoublePFJets40_CaloBTagCSV_p79();
        else if (name == "HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71") return nt.HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71();
        else if (name == "HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71") return nt.HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71();
        else if (name == "HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71") return nt.HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71();
        else if (name == "HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33") return nt.HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p33();
        else if (name == "HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79") return nt.HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagCSV_p79();
        else if (name == "HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71") return nt.HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71();
        else if (name == "HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71") return nt.HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71();
        else if (name == "HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71") return nt.HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71();
        else if (name == "HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33") return nt.HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p33();
        else if (name == "HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79") return nt.HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagCSV_p79();
        else if (name == "HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71") return nt.HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71();
        else if (name == "HLT_Mu12_DoublePhoton20") return nt.HLT_Mu12_DoublePhoton20();
        else if (name == "HLT_Mu12_IP6") return nt.HLT_Mu12_IP6();
        else if (name == "HLT_Mu12_IP6_ToCSCS") return nt.HLT_Mu12_IP6_ToCSCS();
        else if (name == "HLT_Mu12_IP6_part0") return nt.HLT_Mu12_IP6_part0();
        else if (name == "HLT_Mu12_IP6_part1") return nt.HLT_Mu12_IP6_part1();
        else if (name == "HLT_Mu12_IP6_part2") return nt.HLT_Mu12_IP6_part2();
        else if (name == "HLT_Mu12_IP6_part3") return nt.HLT_Mu12_IP6_part3();
        else if (name == "HLT_Mu12_IP6_part4") return nt.HLT_Mu12_IP6_part4();
        else if (name == "HLT_Mu12_Photon25_CaloIdL") return nt.HLT_Mu12_Photon25_CaloIdL();
        else if (name == "HLT_Mu12_Photon25_CaloIdL_L1ISO") return nt.HLT_Mu12_Photon25_CaloIdL_L1ISO();
        else if (name == "HLT_Mu12_Photon25_CaloIdL_L1OR") return nt.HLT_Mu12_Photon25_CaloIdL_L1OR();
        else if (name == "HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL") return nt.HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL();
        else if (name == "HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ") return nt.HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ();
        else if (name == "HLT_Mu12eta2p3") return nt.HLT_Mu12eta2p3();
        else if (name == "HLT_Mu12eta2p3_PFJet40") return nt.HLT_Mu12eta2p3_PFJet40();
        else if (name == "HLT_Mu14er_PFMET100") return nt.HLT_Mu14er_PFMET100();
        else if (name == "HLT_Mu15") return nt.HLT_Mu15();
        else if (name == "HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400") return nt.HLT_Mu15_IsoVVVL_BTagCSV_p067_PFHT400();
        else if (name == "HLT_Mu15_IsoVVVL_PFHT350") return nt.HLT_Mu15_IsoVVVL_PFHT350();
        else if (name == "HLT_Mu15_IsoVVVL_PFHT350_PFMET50") return nt.HLT_Mu15_IsoVVVL_PFHT350_PFMET50();
        else if (name == "HLT_Mu15_IsoVVVL_PFHT400") return nt.HLT_Mu15_IsoVVVL_PFHT400();
        else if (name == "HLT_Mu15_IsoVVVL_PFHT400_PFMET50") return nt.HLT_Mu15_IsoVVVL_PFHT400_PFMET50();
        else if (name == "HLT_Mu15_IsoVVVL_PFHT450") return nt.HLT_Mu15_IsoVVVL_PFHT450();
        else if (name == "HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5") return nt.HLT_Mu15_IsoVVVL_PFHT450_CaloBTagCSV_4p5();
        else if (name == "HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5") return nt.HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5();
        else if (name == "HLT_Mu15_IsoVVVL_PFHT450_PFMET50") return nt.HLT_Mu15_IsoVVVL_PFHT450_PFMET50();
        else if (name == "HLT_Mu15_IsoVVVL_PFHT600") return nt.HLT_Mu15_IsoVVVL_PFHT600();
        else if (name == "HLT_Mu16_TkMu0_dEta18_Onia") return nt.HLT_Mu16_TkMu0_dEta18_Onia();
        else if (name == "HLT_Mu16_TkMu0_dEta18_Phi") return nt.HLT_Mu16_TkMu0_dEta18_Phi();
        else if (name == "HLT_Mu16_eta2p1_MET30") return nt.HLT_Mu16_eta2p1_MET30();
        else if (name == "HLT_Mu17") return nt.HLT_Mu17();
        else if (name == "HLT_Mu17_Mu8") return nt.HLT_Mu17_Mu8();
        else if (name == "HLT_Mu17_Mu8_DZ") return nt.HLT_Mu17_Mu8_DZ();
        else if (name == "HLT_Mu17_Mu8_SameSign") return nt.HLT_Mu17_Mu8_SameSign();
        else if (name == "HLT_Mu17_Mu8_SameSign_DZ") return nt.HLT_Mu17_Mu8_SameSign_DZ();
        else if (name == "HLT_Mu17_Photon22_CaloIdL_L1ISO") return nt.HLT_Mu17_Photon22_CaloIdL_L1ISO();
        else if (name == "HLT_Mu17_Photon30_CaloIdL_L1ISO") return nt.HLT_Mu17_Photon30_CaloIdL_L1ISO();
        else if (name == "HLT_Mu17_Photon30_IsoCaloId") return nt.HLT_Mu17_Photon30_IsoCaloId();
        else if (name == "HLT_Mu17_Photon35_CaloIdL_L1ISO") return nt.HLT_Mu17_Photon35_CaloIdL_L1ISO();
        else if (name == "HLT_Mu17_TkMu8_DZ") return nt.HLT_Mu17_TkMu8_DZ();
        else if (name == "HLT_Mu17_TrkIsoVVL") return nt.HLT_Mu17_TrkIsoVVL();
        else if (name == "HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL") return nt.HLT_Mu17_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL();
        else if (name == "HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL") return nt.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL();
        else if (name == "HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ") return nt.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ();
        else if (name == "HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8") return nt.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8();
        else if (name == "HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8") return nt.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8();
        else if (name == "HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL") return nt.HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL();
        else if (name == "HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ") return nt.HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ();
        else if (name == "HLT_Mu18_Mu9") return nt.HLT_Mu18_Mu9();
        else if (name == "HLT_Mu18_Mu9_DZ") return nt.HLT_Mu18_Mu9_DZ();
        else if (name == "HLT_Mu18_Mu9_SameSign") return nt.HLT_Mu18_Mu9_SameSign();
        else if (name == "HLT_Mu18_Mu9_SameSign_DZ") return nt.HLT_Mu18_Mu9_SameSign_DZ();
        else if (name == "HLT_Mu19") return nt.HLT_Mu19();
        else if (name == "HLT_Mu19_TrkIsoVVL") return nt.HLT_Mu19_TrkIsoVVL();
        else if (name == "HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL") return nt.HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL();
        else if (name == "HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ") return nt.HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ();
        else if (name == "HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8") return nt.HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8();
        else if (name == "HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8") return nt.HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8();
        else if (name == "HLT_Mu20") return nt.HLT_Mu20();
        else if (name == "HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId") return nt.HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId();
        else if (name == "HLT_Mu20_Mu10") return nt.HLT_Mu20_Mu10();
        else if (name == "HLT_Mu20_Mu10_DZ") return nt.HLT_Mu20_Mu10_DZ();
        else if (name == "HLT_Mu20_Mu10_SameSign") return nt.HLT_Mu20_Mu10_SameSign();
        else if (name == "HLT_Mu20_Mu10_SameSign_DZ") return nt.HLT_Mu20_Mu10_SameSign_DZ();
        else if (name == "HLT_Mu20_TkMu0_Phi") return nt.HLT_Mu20_TkMu0_Phi();
        else if (name == "HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL") return nt.HLT_Mu23NoFiltersNoVtx_Photon23_CaloIdL();
        else if (name == "HLT_Mu23_Mu12") return nt.HLT_Mu23_Mu12();
        else if (name == "HLT_Mu23_Mu12_DZ") return nt.HLT_Mu23_Mu12_DZ();
        else if (name == "HLT_Mu23_Mu12_SameSign") return nt.HLT_Mu23_Mu12_SameSign();
        else if (name == "HLT_Mu23_Mu12_SameSign_DZ") return nt.HLT_Mu23_Mu12_SameSign_DZ();
        else if (name == "HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL") return nt.HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL();
        else if (name == "HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ") return nt.HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ();
        else if (name == "HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL") return nt.HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL();
        else if (name == "HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ") return nt.HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ();
        else if (name == "HLT_Mu24_eta2p1") return nt.HLT_Mu24_eta2p1();
        else if (name == "HLT_Mu25_TkMu0_Onia") return nt.HLT_Mu25_TkMu0_Onia();
        else if (name == "HLT_Mu25_TkMu0_Phi") return nt.HLT_Mu25_TkMu0_Phi();
        else if (name == "HLT_Mu25_TkMu0_dEta18_Onia") return nt.HLT_Mu25_TkMu0_dEta18_Onia();
        else if (name == "HLT_Mu27") return nt.HLT_Mu27();
        else if (name == "HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL") return nt.HLT_Mu27_Ele37_CaloIdL_GsfTrkIdVL();
        else if (name == "HLT_Mu27_Ele37_CaloIdL_MW") return nt.HLT_Mu27_Ele37_CaloIdL_MW();
        else if (name == "HLT_Mu27_TkMu8") return nt.HLT_Mu27_TkMu8();
        else if (name == "HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL") return nt.HLT_Mu28NoFiltersNoVtxDisplaced_Photon28_CaloIdL();
        else if (name == "HLT_Mu28NoFiltersNoVtx_CentralCaloJet40") return nt.HLT_Mu28NoFiltersNoVtx_CentralCaloJet40();
        else if (name == "HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose") return nt.HLT_Mu28NoFiltersNoVtx_DisplacedJet40_Loose();
        else if (name == "HLT_Mu300") return nt.HLT_Mu300();
        else if (name == "HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL") return nt.HLT_Mu30_Ele30_CaloIdL_GsfTrkIdVL();
        else if (name == "HLT_Mu30_TkMu0_Onia") return nt.HLT_Mu30_TkMu0_Onia();
        else if (name == "HLT_Mu30_TkMu0_Psi") return nt.HLT_Mu30_TkMu0_Psi();
        else if (name == "HLT_Mu30_TkMu0_Upsilon") return nt.HLT_Mu30_TkMu0_Upsilon();
        else if (name == "HLT_Mu30_TkMu11") return nt.HLT_Mu30_TkMu11();
        else if (name == "HLT_Mu30_eta2p1_PFJet150_PFJet50") return nt.HLT_Mu30_eta2p1_PFJet150_PFJet50();
        else if (name == "HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose") return nt.HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Loose();
        else if (name == "HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight") return nt.HLT_Mu33NoFiltersNoVtxDisplaced_DisplacedJet50_Tight();
        else if (name == "HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL") return nt.HLT_Mu33NoFiltersNoVtxDisplaced_Photon33_CaloIdL();
        else if (name == "HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL") return nt.HLT_Mu33_Ele33_CaloIdL_GsfTrkIdVL();
        else if (name == "HLT_Mu350") return nt.HLT_Mu350();
        else if (name == "HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL") return nt.HLT_Mu37_Ele27_CaloIdL_GsfTrkIdVL();
        else if (name == "HLT_Mu37_Ele27_CaloIdL_MW") return nt.HLT_Mu37_Ele27_CaloIdL_MW();
        else if (name == "HLT_Mu37_TkMu27") return nt.HLT_Mu37_TkMu27();
        else if (name == "HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose") return nt.HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Loose();
        else if (name == "HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight") return nt.HLT_Mu38NoFiltersNoVtxDisplaced_DisplacedJet60_Tight();
        else if (name == "HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL") return nt.HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL();
        else if (name == "HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose") return nt.HLT_Mu38NoFiltersNoVtx_DisplacedJet60_Loose();
        else if (name == "HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL") return nt.HLT_Mu38NoFiltersNoVtx_Photon38_CaloIdL();
        else if (name == "HLT_Mu3_L1SingleMu5orSingleMu7") return nt.HLT_Mu3_L1SingleMu5orSingleMu7();
        else if (name == "HLT_Mu3_PFJet40") return nt.HLT_Mu3_PFJet40();
        else if (name == "HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight") return nt.HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight();
        else if (name == "HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight") return nt.HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight();
        else if (name == "HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight") return nt.HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight();
        else if (name == "HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight") return nt.HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight();
        else if (name == "HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight") return nt.HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight();
        else if (name == "HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight") return nt.HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight();
        else if (name == "HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight") return nt.HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight();
        else if (name == "HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight") return nt.HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight();
        else if (name == "HLT_Mu3er_PFHT140_PFMET125") return nt.HLT_Mu3er_PFHT140_PFMET125();
        else if (name == "HLT_Mu40_TkMu11") return nt.HLT_Mu40_TkMu11();
        else if (name == "HLT_Mu40_eta2p1_PFJet200_PFJet50") return nt.HLT_Mu40_eta2p1_PFJet200_PFJet50();
        else if (name == "HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL") return nt.HLT_Mu42NoFiltersNoVtx_Photon42_CaloIdL();
        else if (name == "HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL") return nt.HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL();
        else if (name == "HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL") return nt.HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL();
        else if (name == "HLT_Mu45_eta2p1") return nt.HLT_Mu45_eta2p1();
        else if (name == "HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL") return nt.HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL();
        else if (name == "HLT_Mu4_L1DoubleMu") return nt.HLT_Mu4_L1DoubleMu();
        else if (name == "HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60") return nt.HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60();
        else if (name == "HLT_Mu50") return nt.HLT_Mu50();
        else if (name == "HLT_Mu50_IsoVVVL_PFHT400") return nt.HLT_Mu50_IsoVVVL_PFHT400();
        else if (name == "HLT_Mu50_IsoVVVL_PFHT450") return nt.HLT_Mu50_IsoVVVL_PFHT450();
        else if (name == "HLT_Mu50_L1SingleMuShower") return nt.HLT_Mu50_L1SingleMuShower();
        else if (name == "HLT_Mu55") return nt.HLT_Mu55();
        else if (name == "HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5") return nt.HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5();
        else if (name == "HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose") return nt.HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose();
        else if (name == "HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5") return nt.HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5();
        else if (name == "HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose") return nt.HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose();
        else if (name == "HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5") return nt.HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5();
        else if (name == "HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose") return nt.HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose();
        else if (name == "HLT_Mu6_PFHT200_PFMET100") return nt.HLT_Mu6_PFHT200_PFMET100();
        else if (name == "HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067") return nt.HLT_Mu6_PFHT200_PFMET80_BTagCSV_p067();
        else if (name == "HLT_Mu7_IP4_ToCSCS") return nt.HLT_Mu7_IP4_ToCSCS();
        else if (name == "HLT_Mu7_IP4_part0") return nt.HLT_Mu7_IP4_part0();
        else if (name == "HLT_Mu7_IP4_part1") return nt.HLT_Mu7_IP4_part1();
        else if (name == "HLT_Mu7_IP4_part2") return nt.HLT_Mu7_IP4_part2();
        else if (name == "HLT_Mu7_IP4_part3") return nt.HLT_Mu7_IP4_part3();
        else if (name == "HLT_Mu7_IP4_part4") return nt.HLT_Mu7_IP4_part4();
        else if (name == "HLT_Mu7p5_L2Mu2_Jpsi") return nt.HLT_Mu7p5_L2Mu2_Jpsi();
        else if (name == "HLT_Mu7p5_L2Mu2_Upsilon") return nt.HLT_Mu7p5_L2Mu2_Upsilon();
        else if (name == "HLT_Mu7p5_Track2_Jpsi") return nt.HLT_Mu7p5_Track2_Jpsi();
        else if (name == "HLT_Mu7p5_Track2_Upsilon") return nt.HLT_Mu7p5_Track2_Upsilon();
        else if (name == "HLT_Mu7p5_Track3p5_Jpsi") return nt.HLT_Mu7p5_Track3p5_Jpsi();
        else if (name == "HLT_Mu7p5_Track3p5_Upsilon") return nt.HLT_Mu7p5_Track3p5_Upsilon();
        else if (name == "HLT_Mu7p5_Track7_Jpsi") return nt.HLT_Mu7p5_Track7_Jpsi();
        else if (name == "HLT_Mu7p5_Track7_Upsilon") return nt.HLT_Mu7p5_Track7_Upsilon();
        else if (name == "HLT_Mu8") return nt.HLT_Mu8();
        else if (name == "HLT_Mu8_DiEle12_CaloIdL_TrackIdL") return nt.HLT_Mu8_DiEle12_CaloIdL_TrackIdL();
        else if (name == "HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ") return nt.HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ();
        else if (name == "HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250") return nt.HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT250();
        else if (name == "HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300") return nt.HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT300();
        else if (name == "HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350") return nt.HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350();
        else if (name == "HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ") return nt.HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ();
        else if (name == "HLT_Mu8_IP3_ToCSCS") return nt.HLT_Mu8_IP3_ToCSCS();
        else if (name == "HLT_Mu8_IP3_part0") return nt.HLT_Mu8_IP3_part0();
        else if (name == "HLT_Mu8_IP3_part1") return nt.HLT_Mu8_IP3_part1();
        else if (name == "HLT_Mu8_IP3_part2") return nt.HLT_Mu8_IP3_part2();
        else if (name == "HLT_Mu8_IP3_part3") return nt.HLT_Mu8_IP3_part3();
        else if (name == "HLT_Mu8_IP3_part4") return nt.HLT_Mu8_IP3_part4();
        else if (name == "HLT_Mu8_IP3_part5") return nt.HLT_Mu8_IP3_part5();
        else if (name == "HLT_Mu8_IP5_ToCSCS") return nt.HLT_Mu8_IP5_ToCSCS();
        else if (name == "HLT_Mu8_IP5_part0") return nt.HLT_Mu8_IP5_part0();
        else if (name == "HLT_Mu8_IP5_part1") return nt.HLT_Mu8_IP5_part1();
        else if (name == "HLT_Mu8_IP5_part2") return nt.HLT_Mu8_IP5_part2();
        else if (name == "HLT_Mu8_IP5_part3") return nt.HLT_Mu8_IP5_part3();
        else if (name == "HLT_Mu8_IP5_part4") return nt.HLT_Mu8_IP5_part4();
        else if (name == "HLT_Mu8_IP6_ToCSCS") return nt.HLT_Mu8_IP6_ToCSCS();
        else if (name == "HLT_Mu8_IP6_part0") return nt.HLT_Mu8_IP6_part0();
        else if (name == "HLT_Mu8_IP6_part1") return nt.HLT_Mu8_IP6_part1();
        else if (name == "HLT_Mu8_IP6_part2") return nt.HLT_Mu8_IP6_part2();
        else if (name == "HLT_Mu8_IP6_part3") return nt.HLT_Mu8_IP6_part3();
        else if (name == "HLT_Mu8_IP6_part4") return nt.HLT_Mu8_IP6_part4();
        else if (name == "HLT_Mu8_TrkIsoVVL") return nt.HLT_Mu8_TrkIsoVVL();
        else if (name == "HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60") return nt.HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60();
        else if (name == "HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL") return nt.HLT_Mu8_TrkIsoVVL_Ele17_CaloIdL_TrackIdL_IsoVL();
        else if (name == "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL") return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL();
        else if (name == "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ") return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ();
        else if (name == "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30") return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30();
        else if (name == "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5") return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5();
        else if (name == "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30") return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30();
        else if (name == "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65") return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65();
        else if (name == "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5") return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5();
        else if (name == "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5") return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5();
        else if (name == "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30") return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30();
        else if (name == "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65") return nt.HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65();
        else if (name == "HLT_Mu8p5_IP3p5_part0") return nt.HLT_Mu8p5_IP3p5_part0();
        else if (name == "HLT_Mu8p5_IP3p5_part1") return nt.HLT_Mu8p5_IP3p5_part1();
        else if (name == "HLT_Mu8p5_IP3p5_part2") return nt.HLT_Mu8p5_IP3p5_part2();
        else if (name == "HLT_Mu8p5_IP3p5_part3") return nt.HLT_Mu8p5_IP3p5_part3();
        else if (name == "HLT_Mu8p5_IP3p5_part4") return nt.HLT_Mu8p5_IP3p5_part4();
        else if (name == "HLT_Mu8p5_IP3p5_part5") return nt.HLT_Mu8p5_IP3p5_part5();
        else if (name == "HLT_Mu9_IP0_part0") return nt.HLT_Mu9_IP0_part0();
        else if (name == "HLT_Mu9_IP3_part0") return nt.HLT_Mu9_IP3_part0();
        else if (name == "HLT_Mu9_IP4_ToCSCS") return nt.HLT_Mu9_IP4_ToCSCS();
        else if (name == "HLT_Mu9_IP4_part0") return nt.HLT_Mu9_IP4_part0();
        else if (name == "HLT_Mu9_IP4_part1") return nt.HLT_Mu9_IP4_part1();
        else if (name == "HLT_Mu9_IP4_part2") return nt.HLT_Mu9_IP4_part2();
        else if (name == "HLT_Mu9_IP4_part3") return nt.HLT_Mu9_IP4_part3();
        else if (name == "HLT_Mu9_IP4_part4") return nt.HLT_Mu9_IP4_part4();
        else if (name == "HLT_Mu9_IP5_ToCSCS") return nt.HLT_Mu9_IP5_ToCSCS();
        else if (name == "HLT_Mu9_IP5_part0") return nt.HLT_Mu9_IP5_part0();
        else if (name == "HLT_Mu9_IP5_part1") return nt.HLT_Mu9_IP5_part1();
        else if (name == "HLT_Mu9_IP5_part2") return nt.HLT_Mu9_IP5_part2();
        else if (name == "HLT_Mu9_IP5_part3") return nt.HLT_Mu9_IP5_part3();
        else if (name == "HLT_Mu9_IP5_part4") return nt.HLT_Mu9_IP5_part4();
        else if (name == "HLT_Mu9_IP6_ToCSCS") return nt.HLT_Mu9_IP6_ToCSCS();
        else if (name == "HLT_Mu9_IP6_part0") return nt.HLT_Mu9_IP6_part0();
        else if (name == "HLT_Mu9_IP6_part1") return nt.HLT_Mu9_IP6_part1();
        else if (name == "HLT_Mu9_IP6_part2") return nt.HLT_Mu9_IP6_part2();
        else if (name == "HLT_Mu9_IP6_part3") return nt.HLT_Mu9_IP6_part3();
        else if (name == "HLT_Mu9_IP6_part4") return nt.HLT_Mu9_IP6_part4();
        else if (name == "HLT_Mu9_IP6_part5") return nt.HLT_Mu9_IP6_part5();
        else if (name == "HLT_OldMu100") return nt.HLT_OldMu100();
        else if (name == "HLT_OnlineMonitorGroup") return nt.HLT_OnlineMonitorGroup();
        else if (name == "HLT_PFHT1050") return nt.HLT_PFHT1050();
        else if (name == "HLT_PFHT125") return nt.HLT_PFHT125();
        else if (name == "HLT_PFHT180") return nt.HLT_PFHT180();
        else if (name == "HLT_PFHT200") return nt.HLT_PFHT200();
        else if (name == "HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57") return nt.HLT_PFHT200_DiPFJetAve90_PFAlphaT0p57();
        else if (name == "HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63") return nt.HLT_PFHT200_DiPFJetAve90_PFAlphaT0p63();
        else if (name == "HLT_PFHT200_PFAlphaT0p51") return nt.HLT_PFHT200_PFAlphaT0p51();
        else if (name == "HLT_PFHT250") return nt.HLT_PFHT250();
        else if (name == "HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55") return nt.HLT_PFHT250_DiPFJetAve90_PFAlphaT0p55();
        else if (name == "HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58") return nt.HLT_PFHT250_DiPFJetAve90_PFAlphaT0p58();
        else if (name == "HLT_PFHT300") return nt.HLT_PFHT300();
        else if (name == "HLT_PFHT300PT30_QuadPFJet_75_60_45_40") return nt.HLT_PFHT300PT30_QuadPFJet_75_60_45_40();
        else if (name == "HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0") return nt.HLT_PFHT300PT30_QuadPFJet_75_60_45_40_TriplePFBTagCSV_3p0();
        else if (name == "HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53") return nt.HLT_PFHT300_DiPFJetAve90_PFAlphaT0p53();
        else if (name == "HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54") return nt.HLT_PFHT300_DiPFJetAve90_PFAlphaT0p54();
        else if (name == "HLT_PFHT300_PFMET100") return nt.HLT_PFHT300_PFMET100();
        else if (name == "HLT_PFHT300_PFMET110") return nt.HLT_PFHT300_PFMET110();
        else if (name == "HLT_PFHT330PT30_QuadPFJet_75_60_45_40") return nt.HLT_PFHT330PT30_QuadPFJet_75_60_45_40();
        else if (name == "HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5") return nt.HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5();
        else if (name == "HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5") return nt.HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5();
        else if (name == "HLT_PFHT350") return nt.HLT_PFHT350();
        else if (name == "HLT_PFHT350MinPFJet15") return nt.HLT_PFHT350MinPFJet15();
        else if (name == "HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52") return nt.HLT_PFHT350_DiPFJetAve90_PFAlphaT0p52();
        else if (name == "HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53") return nt.HLT_PFHT350_DiPFJetAve90_PFAlphaT0p53();
        else if (name == "HLT_PFHT370") return nt.HLT_PFHT370();
        else if (name == "HLT_PFHT380_SixJet32_DoubleBTagCSV_p075") return nt.HLT_PFHT380_SixJet32_DoubleBTagCSV_p075();
        else if (name == "HLT_PFHT380_SixPFJet32") return nt.HLT_PFHT380_SixPFJet32();
        else if (name == "HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2") return nt.HLT_PFHT380_SixPFJet32_DoublePFBTagCSV_2p2();
        else if (name == "HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2") return nt.HLT_PFHT380_SixPFJet32_DoublePFBTagDeepCSV_2p2();
        else if (name == "HLT_PFHT400") return nt.HLT_PFHT400();
        else if (name == "HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51") return nt.HLT_PFHT400_DiPFJetAve90_PFAlphaT0p51();
        else if (name == "HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52") return nt.HLT_PFHT400_DiPFJetAve90_PFAlphaT0p52();
        else if (name == "HLT_PFHT400_FivePFJet_100_100_60_30_30") return nt.HLT_PFHT400_FivePFJet_100_100_60_30_30();
        else if (name == "HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5") return nt.HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5();
        else if (name == "HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5") return nt.HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5();
        else if (name == "HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5") return nt.HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5();
        else if (name == "HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5") return nt.HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5();
        else if (name == "HLT_PFHT400_SixJet30") return nt.HLT_PFHT400_SixJet30();
        else if (name == "HLT_PFHT400_SixJet30_DoubleBTagCSV_p056") return nt.HLT_PFHT400_SixJet30_DoubleBTagCSV_p056();
        else if (name == "HLT_PFHT400_SixPFJet32") return nt.HLT_PFHT400_SixPFJet32();
        else if (name == "HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94") return nt.HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94();
        else if (name == "HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94") return nt.HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94();
        else if (name == "HLT_PFHT430") return nt.HLT_PFHT430();
        else if (name == "HLT_PFHT430_SixJet40_BTagCSV_p080") return nt.HLT_PFHT430_SixJet40_BTagCSV_p080();
        else if (name == "HLT_PFHT430_SixPFJet40") return nt.HLT_PFHT430_SixPFJet40();
        else if (name == "HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5") return nt.HLT_PFHT430_SixPFJet40_PFBTagCSV_1p5();
        else if (name == "HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5") return nt.HLT_PFHT430_SixPFJet40_PFBTagDeepCSV_1p5();
        else if (name == "HLT_PFHT450_SixJet40") return nt.HLT_PFHT450_SixJet40();
        else if (name == "HLT_PFHT450_SixJet40_BTagCSV_p056") return nt.HLT_PFHT450_SixJet40_BTagCSV_p056();
        else if (name == "HLT_PFHT450_SixPFJet36") return nt.HLT_PFHT450_SixPFJet36();
        else if (name == "HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59") return nt.HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59();
        else if (name == "HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59") return nt.HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59();
        else if (name == "HLT_PFHT475") return nt.HLT_PFHT475();
        else if (name == "HLT_PFHT500_PFMET100_PFMHT100_IDTight") return nt.HLT_PFHT500_PFMET100_PFMHT100_IDTight();
        else if (name == "HLT_PFHT500_PFMET110_PFMHT110_IDTight") return nt.HLT_PFHT500_PFMET110_PFMHT110_IDTight();
        else if (name == "HLT_PFHT510") return nt.HLT_PFHT510();
        else if (name == "HLT_PFHT550_4JetPt50") return nt.HLT_PFHT550_4JetPt50();
        else if (name == "HLT_PFHT590") return nt.HLT_PFHT590();
        else if (name == "HLT_PFHT600") return nt.HLT_PFHT600();
        else if (name == "HLT_PFHT650") return nt.HLT_PFHT650();
        else if (name == "HLT_PFHT650_4JetPt50") return nt.HLT_PFHT650_4JetPt50();
        else if (name == "HLT_PFHT650_WideJetMJJ900DEtaJJ1p5") return nt.HLT_PFHT650_WideJetMJJ900DEtaJJ1p5();
        else if (name == "HLT_PFHT650_WideJetMJJ950DEtaJJ1p5") return nt.HLT_PFHT650_WideJetMJJ950DEtaJJ1p5();
        else if (name == "HLT_PFHT680") return nt.HLT_PFHT680();
        else if (name == "HLT_PFHT700_PFMET85_PFMHT85_IDTight") return nt.HLT_PFHT700_PFMET85_PFMHT85_IDTight();
        else if (name == "HLT_PFHT700_PFMET95_PFMHT95_IDTight") return nt.HLT_PFHT700_PFMET95_PFMHT95_IDTight();
        else if (name == "HLT_PFHT750_4JetPt50") return nt.HLT_PFHT750_4JetPt50();
        else if (name == "HLT_PFHT750_4JetPt70") return nt.HLT_PFHT750_4JetPt70();
        else if (name == "HLT_PFHT750_4JetPt80") return nt.HLT_PFHT750_4JetPt80();
        else if (name == "HLT_PFHT780") return nt.HLT_PFHT780();
        else if (name == "HLT_PFHT800") return nt.HLT_PFHT800();
        else if (name == "HLT_PFHT800_4JetPt50") return nt.HLT_PFHT800_4JetPt50();
        else if (name == "HLT_PFHT800_PFMET75_PFMHT75_IDTight") return nt.HLT_PFHT800_PFMET75_PFMHT75_IDTight();
        else if (name == "HLT_PFHT800_PFMET85_PFMHT85_IDTight") return nt.HLT_PFHT800_PFMET85_PFMHT85_IDTight();
        else if (name == "HLT_PFHT850_4JetPt50") return nt.HLT_PFHT850_4JetPt50();
        else if (name == "HLT_PFHT890") return nt.HLT_PFHT890();
        else if (name == "HLT_PFHT900") return nt.HLT_PFHT900();
        else if (name == "HLT_PFJet110") return nt.HLT_PFJet110();
        else if (name == "HLT_PFJet140") return nt.HLT_PFJet140();
        else if (name == "HLT_PFJet15") return nt.HLT_PFJet15();
        else if (name == "HLT_PFJet15_NoCaloMatched") return nt.HLT_PFJet15_NoCaloMatched();
        else if (name == "HLT_PFJet200") return nt.HLT_PFJet200();
        else if (name == "HLT_PFJet25") return nt.HLT_PFJet25();
        else if (name == "HLT_PFJet25_NoCaloMatched") return nt.HLT_PFJet25_NoCaloMatched();
        else if (name == "HLT_PFJet260") return nt.HLT_PFJet260();
        else if (name == "HLT_PFJet320") return nt.HLT_PFJet320();
        else if (name == "HLT_PFJet40") return nt.HLT_PFJet40();
        else if (name == "HLT_PFJet400") return nt.HLT_PFJet400();
        else if (name == "HLT_PFJet40_GPUvsCPU") return nt.HLT_PFJet40_GPUvsCPU();
        else if (name == "HLT_PFJet450") return nt.HLT_PFJet450();
        else if (name == "HLT_PFJet500") return nt.HLT_PFJet500();
        else if (name == "HLT_PFJet550") return nt.HLT_PFJet550();
        else if (name == "HLT_PFJet60") return nt.HLT_PFJet60();
        else if (name == "HLT_PFJet80") return nt.HLT_PFJet80();
        else if (name == "HLT_PFJetFwd140") return nt.HLT_PFJetFwd140();
        else if (name == "HLT_PFJetFwd15") return nt.HLT_PFJetFwd15();
        else if (name == "HLT_PFJetFwd200") return nt.HLT_PFJetFwd200();
        else if (name == "HLT_PFJetFwd25") return nt.HLT_PFJetFwd25();
        else if (name == "HLT_PFJetFwd260") return nt.HLT_PFJetFwd260();
        else if (name == "HLT_PFJetFwd320") return nt.HLT_PFJetFwd320();
        else if (name == "HLT_PFJetFwd40") return nt.HLT_PFJetFwd40();
        else if (name == "HLT_PFJetFwd400") return nt.HLT_PFJetFwd400();
        else if (name == "HLT_PFJetFwd450") return nt.HLT_PFJetFwd450();
        else if (name == "HLT_PFJetFwd500") return nt.HLT_PFJetFwd500();
        else if (name == "HLT_PFJetFwd60") return nt.HLT_PFJetFwd60();
        else if (name == "HLT_PFJetFwd80") return nt.HLT_PFJetFwd80();
        else if (name == "HLT_PFMET100_PFMHT100_IDTight") return nt.HLT_PFMET100_PFMHT100_IDTight();
        else if (name == "HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned") return nt.HLT_PFMET100_PFMHT100_IDTight_BeamHaloCleaned();
        else if (name == "HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1") return nt.HLT_PFMET100_PFMHT100_IDTight_CaloBTagCSV_3p1();
        else if (name == "HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1") return nt.HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1();
        else if (name == "HLT_PFMET100_PFMHT100_IDTight_PFHT60") return nt.HLT_PFMET100_PFMHT100_IDTight_PFHT60();
        else if (name == "HLT_PFMET105_IsoTrk50") return nt.HLT_PFMET105_IsoTrk50();
        else if (name == "HLT_PFMET110_PFJet100") return nt.HLT_PFMET110_PFJet100();
        else if (name == "HLT_PFMET110_PFMHT110_IDTight") return nt.HLT_PFMET110_PFMHT110_IDTight();
        else if (name == "HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1") return nt.HLT_PFMET110_PFMHT110_IDTight_CaloBTagCSV_3p1();
        else if (name == "HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1") return nt.HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1();
        else if (name == "HLT_PFMET120_BTagCSV_p067") return nt.HLT_PFMET120_BTagCSV_p067();
        else if (name == "HLT_PFMET120_Mu5") return nt.HLT_PFMET120_Mu5();
        else if (name == "HLT_PFMET120_PFMHT120_IDTight") return nt.HLT_PFMET120_PFMHT120_IDTight();
        else if (name == "HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1") return nt.HLT_PFMET120_PFMHT120_IDTight_CaloBTagCSV_3p1();
        else if (name == "HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1") return nt.HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1();
        else if (name == "HLT_PFMET120_PFMHT120_IDTight_HFCleaned") return nt.HLT_PFMET120_PFMHT120_IDTight_HFCleaned();
        else if (name == "HLT_PFMET120_PFMHT120_IDTight_PFHT60") return nt.HLT_PFMET120_PFMHT120_IDTight_PFHT60();
        else if (name == "HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned") return nt.HLT_PFMET120_PFMHT120_IDTight_PFHT60_HFCleaned();
        else if (name == "HLT_PFMET130_PFMHT130_IDTight") return nt.HLT_PFMET130_PFMHT130_IDTight();
        else if (name == "HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1") return nt.HLT_PFMET130_PFMHT130_IDTight_CaloBTagCSV_3p1();
        else if (name == "HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1") return nt.HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1();
        else if (name == "HLT_PFMET140_PFMHT140_IDTight") return nt.HLT_PFMET140_PFMHT140_IDTight();
        else if (name == "HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1") return nt.HLT_PFMET140_PFMHT140_IDTight_CaloBTagCSV_3p1();
        else if (name == "HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1") return nt.HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1();
        else if (name == "HLT_PFMET170_BeamHaloCleaned") return nt.HLT_PFMET170_BeamHaloCleaned();
        else if (name == "HLT_PFMET170_HBHECleaned") return nt.HLT_PFMET170_HBHECleaned();
        else if (name == "HLT_PFMET170_HBHE_BeamHaloCleaned") return nt.HLT_PFMET170_HBHE_BeamHaloCleaned();
        else if (name == "HLT_PFMET170_JetIdCleaned") return nt.HLT_PFMET170_JetIdCleaned();
        else if (name == "HLT_PFMET170_NoiseCleaned") return nt.HLT_PFMET170_NoiseCleaned();
        else if (name == "HLT_PFMET170_NotCleaned") return nt.HLT_PFMET170_NotCleaned();
        else if (name == "HLT_PFMET200_BeamHaloCleaned") return nt.HLT_PFMET200_BeamHaloCleaned();
        else if (name == "HLT_PFMET200_HBHECleaned") return nt.HLT_PFMET200_HBHECleaned();
        else if (name == "HLT_PFMET200_HBHE_BeamHaloCleaned") return nt.HLT_PFMET200_HBHE_BeamHaloCleaned();
        else if (name == "HLT_PFMET200_NotCleaned") return nt.HLT_PFMET200_NotCleaned();
        else if (name == "HLT_PFMET250_HBHECleaned") return nt.HLT_PFMET250_HBHECleaned();
        else if (name == "HLT_PFMET250_NotCleaned") return nt.HLT_PFMET250_NotCleaned();
        else if (name == "HLT_PFMET300") return nt.HLT_PFMET300();
        else if (name == "HLT_PFMET300_HBHECleaned") return nt.HLT_PFMET300_HBHECleaned();
        else if (name == "HLT_PFMET300_NotCleaned") return nt.HLT_PFMET300_NotCleaned();
        else if (name == "HLT_PFMET400") return nt.HLT_PFMET400();
        else if (name == "HLT_PFMET500") return nt.HLT_PFMET500();
        else if (name == "HLT_PFMET600") return nt.HLT_PFMET600();
        else if (name == "HLT_PFMET90_PFMHT90_IDTight") return nt.HLT_PFMET90_PFMHT90_IDTight();
        else if (name == "HLT_PFMETNoMu100_PFMHTNoMu100_IDTight") return nt.HLT_PFMETNoMu100_PFMHTNoMu100_IDTight();
        else if (name == "HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60") return nt.HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60();
        else if (name == "HLT_PFMETNoMu110_PFMHTNoMu110_IDTight") return nt.HLT_PFMETNoMu110_PFMHTNoMu110_IDTight();
        else if (name == "HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF") return nt.HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF();
        else if (name == "HLT_PFMETNoMu120_PFMHTNoMu120_IDTight") return nt.HLT_PFMETNoMu120_PFMHTNoMu120_IDTight();
        else if (name == "HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF") return nt.HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF();
        else if (name == "HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned") return nt.HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_HFCleaned();
        else if (name == "HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60") return nt.HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60();
        else if (name == "HLT_PFMETNoMu130_PFMHTNoMu130_IDTight") return nt.HLT_PFMETNoMu130_PFMHTNoMu130_IDTight();
        else if (name == "HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF") return nt.HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF();
        else if (name == "HLT_PFMETNoMu140_PFMHTNoMu140_IDTight") return nt.HLT_PFMETNoMu140_PFMHTNoMu140_IDTight();
        else if (name == "HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF") return nt.HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF();
        else if (name == "HLT_PFMETNoMu90_PFMHTNoMu90_IDTight") return nt.HLT_PFMETNoMu90_PFMHTNoMu90_IDTight();
        else if (name == "HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60") return nt.HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60();
        else if (name == "HLT_PFMETTypeOne110_PFMHT110_IDTight") return nt.HLT_PFMETTypeOne110_PFMHT110_IDTight();
        else if (name == "HLT_PFMETTypeOne120_PFMHT120_IDTight") return nt.HLT_PFMETTypeOne120_PFMHT120_IDTight();
        else if (name == "HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned") return nt.HLT_PFMETTypeOne120_PFMHT120_IDTight_HFCleaned();
        else if (name == "HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60") return nt.HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60();
        else if (name == "HLT_PFMETTypeOne130_PFMHT130_IDTight") return nt.HLT_PFMETTypeOne130_PFMHT130_IDTight();
        else if (name == "HLT_PFMETTypeOne140_PFMHT140_IDTight") return nt.HLT_PFMETTypeOne140_PFMHT140_IDTight();
        else if (name == "HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned") return nt.HLT_PFMETTypeOne190_HBHE_BeamHaloCleaned();
        else if (name == "HLT_PFMETTypeOne200_BeamHaloCleaned") return nt.HLT_PFMETTypeOne200_BeamHaloCleaned();
        else if (name == "HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned") return nt.HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned();
        else if (name == "HLT_PFTau120_eta2p1") return nt.HLT_PFTau120_eta2p1();
        else if (name == "HLT_PFTau140_eta2p1") return nt.HLT_PFTau140_eta2p1();
        else if (name == "HLT_PPSMaxTracksPerArm1") return nt.HLT_PPSMaxTracksPerArm1();
        else if (name == "HLT_PPSMaxTracksPerRP4") return nt.HLT_PPSMaxTracksPerRP4();
        else if (name == "HLT_Photon100EBHE10") return nt.HLT_Photon100EBHE10();
        else if (name == "HLT_Photon100EB_TightID_TightIso") return nt.HLT_Photon100EB_TightID_TightIso();
        else if (name == "HLT_Photon100EEHE10") return nt.HLT_Photon100EEHE10();
        else if (name == "HLT_Photon100EE_TightID_TightIso") return nt.HLT_Photon100EE_TightID_TightIso();
        else if (name == "HLT_Photon110EB_TightID_TightIso") return nt.HLT_Photon110EB_TightID_TightIso();
        else if (name == "HLT_Photon120") return nt.HLT_Photon120();
        else if (name == "HLT_Photon120EB_TightID_TightIso") return nt.HLT_Photon120EB_TightID_TightIso();
        else if (name == "HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40") return nt.HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_PFMET40();
        else if (name == "HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF") return nt.HLT_Photon120_R9Id90_HE10_Iso40_EBOnly_VBF();
        else if (name == "HLT_Photon120_R9Id90_HE10_IsoM") return nt.HLT_Photon120_R9Id90_HE10_IsoM();
        else if (name == "HLT_Photon125") return nt.HLT_Photon125();
        else if (name == "HLT_Photon135_PFMET100") return nt.HLT_Photon135_PFMET100();
        else if (name == "HLT_Photon150") return nt.HLT_Photon150();
        else if (name == "HLT_Photon165_HE10") return nt.HLT_Photon165_HE10();
        else if (name == "HLT_Photon165_R9Id90_HE10_IsoM") return nt.HLT_Photon165_R9Id90_HE10_IsoM();
        else if (name == "HLT_Photon175") return nt.HLT_Photon175();
        else if (name == "HLT_Photon20") return nt.HLT_Photon20();
        else if (name == "HLT_Photon200") return nt.HLT_Photon200();
        else if (name == "HLT_Photon20_CaloIdVL_IsoL") return nt.HLT_Photon20_CaloIdVL_IsoL();
        else if (name == "HLT_Photon20_HoverELoose") return nt.HLT_Photon20_HoverELoose();
        else if (name == "HLT_Photon22") return nt.HLT_Photon22();
        else if (name == "HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40") return nt.HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_PFMET40();
        else if (name == "HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF") return nt.HLT_Photon22_R9Id90_HE10_Iso40_EBOnly_VBF();
        else if (name == "HLT_Photon22_R9Id90_HE10_IsoM") return nt.HLT_Photon22_R9Id90_HE10_IsoM();
        else if (name == "HLT_Photon25") return nt.HLT_Photon25();
        else if (name == "HLT_Photon250_NoHE") return nt.HLT_Photon250_NoHE();
        else if (name == "HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60") return nt.HLT_Photon26_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon16_AND_HE10_R9Id65_Eta2_Mass60();
        else if (name == "HLT_Photon30") return nt.HLT_Photon30();
        else if (name == "HLT_Photon300_NoHE") return nt.HLT_Photon300_NoHE();
        else if (name == "HLT_Photon30EB_TightID_TightIso") return nt.HLT_Photon30EB_TightID_TightIso();
        else if (name == "HLT_Photon30_HoverELoose") return nt.HLT_Photon30_HoverELoose();
        else if (name == "HLT_Photon30_R9Id90_HE10_IsoM") return nt.HLT_Photon30_R9Id90_HE10_IsoM();
        else if (name == "HLT_Photon33") return nt.HLT_Photon33();
        else if (name == "HLT_Photon35_TwoProngs35") return nt.HLT_Photon35_TwoProngs35();
        else if (name == "HLT_Photon36") return nt.HLT_Photon36();
        else if (name == "HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15") return nt.HLT_Photon36_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon22_AND_HE10_R9Id65_Eta2_Mass15();
        else if (name == "HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40") return nt.HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_PFMET40();
        else if (name == "HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF") return nt.HLT_Photon36_R9Id90_HE10_Iso40_EBOnly_VBF();
        else if (name == "HLT_Photon36_R9Id90_HE10_IsoM") return nt.HLT_Photon36_R9Id90_HE10_IsoM();
        else if (name == "HLT_Photon40_HoverELoose") return nt.HLT_Photon40_HoverELoose();
        else if (name == "HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15") return nt.HLT_Photon42_R9Id85_OR_CaloId24b40e_Iso50T80L_Photon25_AND_HE10_R9Id65_Eta2_Mass15();
        else if (name == "HLT_Photon50") return nt.HLT_Photon50();
        else if (name == "HLT_Photon500") return nt.HLT_Photon500();
        else if (name == "HLT_Photon50_HoverELoose") return nt.HLT_Photon50_HoverELoose();
        else if (name == "HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40") return nt.HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_PFMET40();
        else if (name == "HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF") return nt.HLT_Photon50_R9Id90_HE10_Iso40_EBOnly_VBF();
        else if (name == "HLT_Photon50_R9Id90_HE10_IsoM") return nt.HLT_Photon50_R9Id90_HE10_IsoM();
        else if (name == "HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50") return nt.HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50();
        else if (name == "HLT_Photon600") return nt.HLT_Photon600();
        else if (name == "HLT_Photon60_HoverELoose") return nt.HLT_Photon60_HoverELoose();
        else if (name == "HLT_Photon60_R9Id90_CaloIdL_IsoL") return nt.HLT_Photon60_R9Id90_CaloIdL_IsoL();
        else if (name == "HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL") return nt.HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL();
        else if (name == "HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15") return nt.HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15();
        else if (name == "HLT_Photon75") return nt.HLT_Photon75();
        else if (name == "HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40") return nt.HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_PFMET40();
        else if (name == "HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF") return nt.HLT_Photon75_R9Id90_HE10_Iso40_EBOnly_VBF();
        else if (name == "HLT_Photon75_R9Id90_HE10_IsoM") return nt.HLT_Photon75_R9Id90_HE10_IsoM();
        else if (name == "HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3") return nt.HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3();
        else if (name == "HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3") return nt.HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3();
        else if (name == "HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3") return nt.HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3();
        else if (name == "HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3") return nt.HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3();
        else if (name == "HLT_Photon90") return nt.HLT_Photon90();
        else if (name == "HLT_Photon90_CaloIdL_HT300") return nt.HLT_Photon90_CaloIdL_HT300();
        else if (name == "HLT_Photon90_CaloIdL_PFHT500") return nt.HLT_Photon90_CaloIdL_PFHT500();
        else if (name == "HLT_Photon90_CaloIdL_PFHT600") return nt.HLT_Photon90_CaloIdL_PFHT600();
        else if (name == "HLT_Photon90_CaloIdL_PFHT700") return nt.HLT_Photon90_CaloIdL_PFHT700();
        else if (name == "HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40") return nt.HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_PFMET40();
        else if (name == "HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF") return nt.HLT_Photon90_R9Id90_HE10_Iso40_EBOnly_VBF();
        else if (name == "HLT_Photon90_R9Id90_HE10_IsoM") return nt.HLT_Photon90_R9Id90_HE10_IsoM();
        else if (name == "HLT_Physics") return nt.HLT_Physics();
        else if (name == "HLT_Physics_part0") return nt.HLT_Physics_part0();
        else if (name == "HLT_Physics_part1") return nt.HLT_Physics_part1();
        else if (name == "HLT_Physics_part2") return nt.HLT_Physics_part2();
        else if (name == "HLT_Physics_part3") return nt.HLT_Physics_part3();
        else if (name == "HLT_Physics_part4") return nt.HLT_Physics_part4();
        else if (name == "HLT_Physics_part5") return nt.HLT_Physics_part5();
        else if (name == "HLT_Physics_part6") return nt.HLT_Physics_part6();
        else if (name == "HLT_Physics_part7") return nt.HLT_Physics_part7();
        else if (name == "HLT_PixelTracks_Multiplicity110ForEndOfFill") return nt.HLT_PixelTracks_Multiplicity110ForEndOfFill();
        else if (name == "HLT_PixelTracks_Multiplicity135ForEndOfFill") return nt.HLT_PixelTracks_Multiplicity135ForEndOfFill();
        else if (name == "HLT_PixelTracks_Multiplicity160ForEndOfFill") return nt.HLT_PixelTracks_Multiplicity160ForEndOfFill();
        else if (name == "HLT_PixelTracks_Multiplicity60ForEndOfFill") return nt.HLT_PixelTracks_Multiplicity60ForEndOfFill();
        else if (name == "HLT_PixelTracks_Multiplicity85ForEndOfFill") return nt.HLT_PixelTracks_Multiplicity85ForEndOfFill();
        else if (name == "HLT_QuadJet45_DoubleBTagCSV_p087") return nt.HLT_QuadJet45_DoubleBTagCSV_p087();
        else if (name == "HLT_QuadJet45_TripleBTagCSV_p087") return nt.HLT_QuadJet45_TripleBTagCSV_p087();
        else if (name == "HLT_QuadMuon0_Dimuon0_Jpsi") return nt.HLT_QuadMuon0_Dimuon0_Jpsi();
        else if (name == "HLT_QuadMuon0_Dimuon0_Upsilon") return nt.HLT_QuadMuon0_Dimuon0_Upsilon();
        else if (name == "HLT_QuadPFJet103_88_75_15") return nt.HLT_QuadPFJet103_88_75_15();
        else if (name == "HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2") return nt.HLT_QuadPFJet103_88_75_15_BTagCSV_p013_VBF2();
        else if (name == "HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1") return nt.HLT_QuadPFJet103_88_75_15_DoubleBTagCSV_p013_p08_VBF1();
        else if (name == "HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1") return nt.HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1();
        else if (name == "HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1") return nt.HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1();
        else if (name == "HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2") return nt.HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2();
        else if (name == "HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2") return nt.HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2();
        else if (name == "HLT_QuadPFJet105_88_76_15") return nt.HLT_QuadPFJet105_88_76_15();
        else if (name == "HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2") return nt.HLT_QuadPFJet105_88_76_15_BTagCSV_p013_VBF2();
        else if (name == "HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1") return nt.HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1();
        else if (name == "HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1") return nt.HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1();
        else if (name == "HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2") return nt.HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2();
        else if (name == "HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2") return nt.HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2();
        else if (name == "HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1") return nt.HLT_QuadPFJet105_90_76_15_DoubleBTagCSV_p013_p08_VBF1();
        else if (name == "HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1") return nt.HLT_QuadPFJet105_90_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1();
        else if (name == "HLT_QuadPFJet111_90_80_15") return nt.HLT_QuadPFJet111_90_80_15();
        else if (name == "HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2") return nt.HLT_QuadPFJet111_90_80_15_BTagCSV_p013_VBF2();
        else if (name == "HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1") return nt.HLT_QuadPFJet111_90_80_15_DoubleBTagCSV_p013_p08_VBF1();
        else if (name == "HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1") return nt.HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1();
        else if (name == "HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1") return nt.HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1();
        else if (name == "HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2") return nt.HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2();
        else if (name == "HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2") return nt.HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2();
        else if (name == "HLT_QuadPFJet70_50_40_30") return nt.HLT_QuadPFJet70_50_40_30();
        else if (name == "HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65") return nt.HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65();
        else if (name == "HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65") return nt.HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65();
        else if (name == "HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65") return nt.HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65();
        else if (name == "HLT_QuadPFJet98_83_71_15") return nt.HLT_QuadPFJet98_83_71_15();
        else if (name == "HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2") return nt.HLT_QuadPFJet98_83_71_15_BTagCSV_p013_VBF2();
        else if (name == "HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1") return nt.HLT_QuadPFJet98_83_71_15_DoubleBTagCSV_p013_p08_VBF1();
        else if (name == "HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1") return nt.HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1();
        else if (name == "HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2") return nt.HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2();
        else if (name == "HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460") return nt.HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq460();
        else if (name == "HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500") return nt.HLT_QuadPFJet_BTagCSV_p016_VBF_Mqq500();
        else if (name == "HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200") return nt.HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq200();
        else if (name == "HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240") return nt.HLT_QuadPFJet_BTagCSV_p016_p11_VBF_Mqq240();
        else if (name == "HLT_QuadPFJet_VBF") return nt.HLT_QuadPFJet_VBF();
        else if (name == "HLT_Random") return nt.HLT_Random();
        else if (name == "HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200") return nt.HLT_Rsq0p02_MR300_TriPFJet80_60_40_BTagCSV_p063_p20_Mbb60_200();
        else if (name == "HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200") return nt.HLT_Rsq0p02_MR300_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200();
        else if (name == "HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200") return nt.HLT_Rsq0p02_MR400_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200();
        else if (name == "HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200") return nt.HLT_Rsq0p02_MR450_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200();
        else if (name == "HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200") return nt.HLT_Rsq0p02_MR500_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200();
        else if (name == "HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200") return nt.HLT_Rsq0p02_MR550_TriPFJet80_60_40_DoubleBTagCSV_p063_Mbb60_200();
        else if (name == "HLT_Rsq0p25") return nt.HLT_Rsq0p25();
        else if (name == "HLT_Rsq0p25_Calo") return nt.HLT_Rsq0p25_Calo();
        else if (name == "HLT_Rsq0p30") return nt.HLT_Rsq0p30();
        else if (name == "HLT_Rsq0p35") return nt.HLT_Rsq0p35();
        else if (name == "HLT_Rsq0p40") return nt.HLT_Rsq0p40();
        else if (name == "HLT_RsqMR240_Rsq0p09_MR200") return nt.HLT_RsqMR240_Rsq0p09_MR200();
        else if (name == "HLT_RsqMR240_Rsq0p09_MR200_4jet") return nt.HLT_RsqMR240_Rsq0p09_MR200_4jet();
        else if (name == "HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo") return nt.HLT_RsqMR240_Rsq0p09_MR200_4jet_Calo();
        else if (name == "HLT_RsqMR240_Rsq0p09_MR200_Calo") return nt.HLT_RsqMR240_Rsq0p09_MR200_Calo();
        else if (name == "HLT_RsqMR270_Rsq0p09_MR200") return nt.HLT_RsqMR270_Rsq0p09_MR200();
        else if (name == "HLT_RsqMR270_Rsq0p09_MR200_4jet") return nt.HLT_RsqMR270_Rsq0p09_MR200_4jet();
        else if (name == "HLT_RsqMR300_Rsq0p09_MR200") return nt.HLT_RsqMR300_Rsq0p09_MR200();
        else if (name == "HLT_RsqMR300_Rsq0p09_MR200_4jet") return nt.HLT_RsqMR300_Rsq0p09_MR200_4jet();
        else if (name == "HLT_RsqMR320_Rsq0p09_MR200") return nt.HLT_RsqMR320_Rsq0p09_MR200();
        else if (name == "HLT_RsqMR320_Rsq0p09_MR200_4jet") return nt.HLT_RsqMR320_Rsq0p09_MR200_4jet();
        else if (name == "HLT_SingleCentralPFJet170_CFMax0p1") return nt.HLT_SingleCentralPFJet170_CFMax0p1();
        else if (name == "HLT_SingleJet30_Mu12_SinglePFJet40") return nt.HLT_SingleJet30_Mu12_SinglePFJet40();
        else if (name == "HLT_SinglePhoton10_Eta3p1ForPPRef") return nt.HLT_SinglePhoton10_Eta3p1ForPPRef();
        else if (name == "HLT_SinglePhoton20_Eta3p1ForPPRef") return nt.HLT_SinglePhoton20_Eta3p1ForPPRef();
        else if (name == "HLT_SinglePhoton30_Eta3p1ForPPRef") return nt.HLT_SinglePhoton30_Eta3p1ForPPRef();
        else if (name == "HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10") return nt.HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10();
        else if (name == "HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1") return nt.HLT_Tau3Mu_Mu5_Mu1_TkMu1_IsoTau10_Charge1();
        else if (name == "HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10") return nt.HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10();
        else if (name == "HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1") return nt.HLT_Tau3Mu_Mu5_Mu1_TkMu1_Tau10_Charge1();
        else if (name == "HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15") return nt.HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15();
        else if (name == "HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1") return nt.HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1();
        else if (name == "HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15") return nt.HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15();
        else if (name == "HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1") return nt.HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1();
        else if (name == "HLT_TkMu100") return nt.HLT_TkMu100();
        else if (name == "HLT_TkMu17") return nt.HLT_TkMu17();
        else if (name == "HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL") return nt.HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL();
        else if (name == "HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ") return nt.HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ();
        else if (name == "HLT_TkMu20") return nt.HLT_TkMu20();
        else if (name == "HLT_TkMu24_eta2p1") return nt.HLT_TkMu24_eta2p1();
        else if (name == "HLT_TkMu27") return nt.HLT_TkMu27();
        else if (name == "HLT_TkMu50") return nt.HLT_TkMu50();
        else if (name == "HLT_Trimuon2_Upsilon5_Muon") return nt.HLT_Trimuon2_Upsilon5_Muon();
        else if (name == "HLT_Trimuon5_3p5_2_Upsilon_Muon") return nt.HLT_Trimuon5_3p5_2_Upsilon_Muon();
        else if (name == "HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon") return nt.HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon();
        else if (name == "HLT_TripleJet110_35_35_Mjj650_PFMET110") return nt.HLT_TripleJet110_35_35_Mjj650_PFMET110();
        else if (name == "HLT_TripleJet110_35_35_Mjj650_PFMET120") return nt.HLT_TripleJet110_35_35_Mjj650_PFMET120();
        else if (name == "HLT_TripleJet110_35_35_Mjj650_PFMET130") return nt.HLT_TripleJet110_35_35_Mjj650_PFMET130();
        else if (name == "HLT_TripleMu_10_5_5_DZ") return nt.HLT_TripleMu_10_5_5_DZ();
        else if (name == "HLT_TripleMu_12_10_5") return nt.HLT_TripleMu_12_10_5();
        else if (name == "HLT_TripleMu_5_3_3") return nt.HLT_TripleMu_5_3_3();
        else if (name == "HLT_TripleMu_5_3_3_DZ_Mass3p8") return nt.HLT_TripleMu_5_3_3_DZ_Mass3p8();
        else if (name == "HLT_TripleMu_5_3_3_Mass3p8_DCA") return nt.HLT_TripleMu_5_3_3_Mass3p8_DCA();
        else if (name == "HLT_TripleMu_5_3_3_Mass3p8_DZ") return nt.HLT_TripleMu_5_3_3_Mass3p8_DZ();
        else if (name == "HLT_TripleMu_5_3_3_Mass3p8to60_DCA") return nt.HLT_TripleMu_5_3_3_Mass3p8to60_DCA();
        else if (name == "HLT_TripleMu_5_3_3_Mass3p8to60_DZ") return nt.HLT_TripleMu_5_3_3_Mass3p8to60_DZ();
        else if (name == "HLT_TriplePhoton_20_20_20_CaloIdLV2") return nt.HLT_TriplePhoton_20_20_20_CaloIdLV2();
        else if (name == "HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL") return nt.HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL();
        else if (name == "HLT_TriplePhoton_30_30_10_CaloIdLV2") return nt.HLT_TriplePhoton_30_30_10_CaloIdLV2();
        else if (name == "HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL") return nt.HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL();
        else if (name == "HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL") return nt.HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL();
        else if (name == "HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx") return nt.HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx();
        else if (name == "HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx") return nt.HLT_TrkMu15_DoubleTrkMu5NoFiltersNoVtx();
        else if (name == "HLT_TrkMu16NoFiltersNoVtx") return nt.HLT_TrkMu16NoFiltersNoVtx();
        else if (name == "HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx") return nt.HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx();
        else if (name == "HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx") return nt.HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx();
        else if (name == "HLT_TrkMu6NoFiltersNoVtx") return nt.HLT_TrkMu6NoFiltersNoVtx();
        else if (name == "HLT_UncorrectedJetE30_NoBPTX") return nt.HLT_UncorrectedJetE30_NoBPTX();
        else if (name == "HLT_UncorrectedJetE30_NoBPTX3BX") return nt.HLT_UncorrectedJetE30_NoBPTX3BX();
        else if (name == "HLT_UncorrectedJetE60_NoBPTX3BX") return nt.HLT_UncorrectedJetE60_NoBPTX3BX();
        else if (name == "HLT_UncorrectedJetE70_NoBPTX3BX") return nt.HLT_UncorrectedJetE70_NoBPTX3BX();
        else if (name == "HLT_VBF_DisplacedJet40_DisplacedTrack") return nt.HLT_VBF_DisplacedJet40_DisplacedTrack();
        else if (name == "HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5") return nt.HLT_VBF_DisplacedJet40_DisplacedTrack_2TrackIP2DSig5();
        else if (name == "HLT_VBF_DisplacedJet40_Hadronic") return nt.HLT_VBF_DisplacedJet40_Hadronic();
        else if (name == "HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack") return nt.HLT_VBF_DisplacedJet40_Hadronic_2PromptTrack();
        else if (name == "HLT_VBF_DisplacedJet40_TightID_DisplacedTrack") return nt.HLT_VBF_DisplacedJet40_TightID_DisplacedTrack();
        else if (name == "HLT_VBF_DisplacedJet40_TightID_Hadronic") return nt.HLT_VBF_DisplacedJet40_TightID_Hadronic();
        else if (name == "HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack") return nt.HLT_VBF_DisplacedJet40_VTightID_DisplacedTrack();
        else if (name == "HLT_VBF_DisplacedJet40_VTightID_Hadronic") return nt.HLT_VBF_DisplacedJet40_VTightID_Hadronic();
        else if (name == "HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack") return nt.HLT_VBF_DisplacedJet40_VVTightID_DisplacedTrack();
        else if (name == "HLT_VBF_DisplacedJet40_VVTightID_Hadronic") return nt.HLT_VBF_DisplacedJet40_VVTightID_Hadronic();
        else if (name == "HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1") return nt.HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1();
        else if (name == "HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg") return nt.HLT_VBF_DoubleLooseChargedIsoPFTau20_Trk1_eta2p1_Reg();
        else if (name == "HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1") return nt.HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1();
        else if (name == "HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1") return nt.HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1();
        else if (name == "HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg") return nt.HLT_VBF_DoubleMediumChargedIsoPFTau20_Trk1_eta2p1_Reg();
        else if (name == "HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1") return nt.HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1();
        else if (name == "HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1") return nt.HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1();
        else if (name == "HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1") return nt.HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1();
        else if (name == "HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg") return nt.HLT_VBF_DoubleTightChargedIsoPFTau20_Trk1_eta2p1_Reg();
        else if (name == "HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1") return nt.HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1();
        else if (name == "HLT_VLooseIsoPFTau120_Trk50_eta2p1") return nt.HLT_VLooseIsoPFTau120_Trk50_eta2p1();
        else if (name == "HLT_VLooseIsoPFTau140_Trk50_eta2p1") return nt.HLT_VLooseIsoPFTau140_Trk50_eta2p1();
        else if (name == "HLT_ZeroBias") return nt.HLT_ZeroBias();
        else if (name == "HLT_ZeroBias_Alignment") return nt.HLT_ZeroBias_Alignment();
        else if (name == "HLT_ZeroBias_Beamspot") return nt.HLT_ZeroBias_Beamspot();
        else if (name == "HLT_ZeroBias_FirstBXAfterTrain") return nt.HLT_ZeroBias_FirstBXAfterTrain();
        else if (name == "HLT_ZeroBias_FirstCollisionAfterAbortGap") return nt.HLT_ZeroBias_FirstCollisionAfterAbortGap();
        else if (name == "HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS") return nt.HLT_ZeroBias_FirstCollisionAfterAbortGap_TCDS();
        else if (name == "HLT_ZeroBias_FirstCollisionAfterAbortGap_copy") return nt.HLT_ZeroBias_FirstCollisionAfterAbortGap_copy();
        else if (name == "HLT_ZeroBias_FirstCollisionInTrain") return nt.HLT_ZeroBias_FirstCollisionInTrain();
        else if (name == "HLT_ZeroBias_IsolatedBunches") return nt.HLT_ZeroBias_IsolatedBunches();
        else if (name == "HLT_ZeroBias_LastCollisionInTrain") return nt.HLT_ZeroBias_LastCollisionInTrain();
        else if (name == "HLT_ZeroBias_part0") return nt.HLT_ZeroBias_part0();
        else if (name == "HLT_ZeroBias_part1") return nt.HLT_ZeroBias_part1();
        else if (name == "HLT_ZeroBias_part2") return nt.HLT_ZeroBias_part2();
        else if (name == "HLT_ZeroBias_part3") return nt.HLT_ZeroBias_part3();
        else if (name == "HLT_ZeroBias_part4") return nt.HLT_ZeroBias_part4();
        else if (name == "HLT_ZeroBias_part5") return nt.HLT_ZeroBias_part5();
        else if (name == "HLT_ZeroBias_part6") return nt.HLT_ZeroBias_part6();
        else if (name == "HLT_ZeroBias_part7") return nt.HLT_ZeroBias_part7();
        else if (name == "HLT_ZeroBias_part8") return nt.HLT_ZeroBias_part8();
        else if (name == "HLT_ZeroBias_part9") return nt.HLT_ZeroBias_part9();
        else if (name == "HLTriggerFinalPath") return nt.HLTriggerFinalPath();
        else if (name == "HLTriggerFirstPath") return nt.HLTriggerFirstPath();
        else if (name == "L1Reco_step") return nt.L1Reco_step();
        else if (name == "L1_AlwaysTrue") return nt.L1_AlwaysTrue();
        else if (name == "L1_BPTX_AND_NIM") return nt.L1_BPTX_AND_NIM();
        else if (name == "L1_BPTX_AND_Ref1_VME") return nt.L1_BPTX_AND_Ref1_VME();
        else if (name == "L1_BPTX_AND_Ref2_NIM") return nt.L1_BPTX_AND_Ref2_NIM();
        else if (name == "L1_BPTX_AND_Ref3_VME") return nt.L1_BPTX_AND_Ref3_VME();
        else if (name == "L1_BPTX_AND_Ref4_VME") return nt.L1_BPTX_AND_Ref4_VME();
        else if (name == "L1_BPTX_B1NotB2_NIM") return nt.L1_BPTX_B1NotB2_NIM();
        else if (name == "L1_BPTX_B1NotB2_VME") return nt.L1_BPTX_B1NotB2_VME();
        else if (name == "L1_BPTX_B1_NIM") return nt.L1_BPTX_B1_NIM();
        else if (name == "L1_BPTX_B2NotB1_NIM") return nt.L1_BPTX_B2NotB1_NIM();
        else if (name == "L1_BPTX_B2NotB1_VME") return nt.L1_BPTX_B2NotB1_VME();
        else if (name == "L1_BPTX_B2_NIM") return nt.L1_BPTX_B2_NIM();
        else if (name == "L1_BPTX_BeamGas_B1_VME") return nt.L1_BPTX_BeamGas_B1_VME();
        else if (name == "L1_BPTX_BeamGas_B2_VME") return nt.L1_BPTX_BeamGas_B2_VME();
        else if (name == "L1_BPTX_BeamGas_Ref1_VME") return nt.L1_BPTX_BeamGas_Ref1_VME();
        else if (name == "L1_BPTX_BeamGas_Ref2_VME") return nt.L1_BPTX_BeamGas_Ref2_VME();
        else if (name == "L1_BPTX_LUT1_AND") return nt.L1_BPTX_LUT1_AND();
        else if (name == "L1_BPTX_LUT1_B1") return nt.L1_BPTX_LUT1_B1();
        else if (name == "L1_BPTX_LUT1_B2") return nt.L1_BPTX_LUT1_B2();
        else if (name == "L1_BPTX_LUT1_OR") return nt.L1_BPTX_LUT1_OR();
        else if (name == "L1_BPTX_LUT2_AND") return nt.L1_BPTX_LUT2_AND();
        else if (name == "L1_BPTX_LUT2_B1NotB2") return nt.L1_BPTX_LUT2_B1NotB2();
        else if (name == "L1_BPTX_LUT2_B2NotB1") return nt.L1_BPTX_LUT2_B2NotB1();
        else if (name == "L1_BPTX_LUT2_NotOR") return nt.L1_BPTX_LUT2_NotOR();
        else if (name == "L1_BPTX_NotOR_NIM") return nt.L1_BPTX_NotOR_NIM();
        else if (name == "L1_BPTX_NotOR_VME") return nt.L1_BPTX_NotOR_VME();
        else if (name == "L1_BPTX_OR_NIM") return nt.L1_BPTX_OR_NIM();
        else if (name == "L1_BPTX_OR_Ref3_VME") return nt.L1_BPTX_OR_Ref3_VME();
        else if (name == "L1_BPTX_OR_Ref4_VME") return nt.L1_BPTX_OR_Ref4_VME();
        else if (name == "L1_BPTX_RefAND_VME") return nt.L1_BPTX_RefAND_VME();
        else if (name == "L1_BPTX_TRIG2_AND") return nt.L1_BPTX_TRIG2_AND();
        else if (name == "L1_BPTX_TRIG2_B1NotB2") return nt.L1_BPTX_TRIG2_B1NotB2();
        else if (name == "L1_BPTX_TRIG2_B2NotB1") return nt.L1_BPTX_TRIG2_B2NotB1();
        else if (name == "L1_BPTX_TRIG2_NotOR") return nt.L1_BPTX_TRIG2_NotOR();
        else if (name == "L1_BRIL_TRIG0_AND") return nt.L1_BRIL_TRIG0_AND();
        else if (name == "L1_BRIL_TRIG0_FstBunchInTrain") return nt.L1_BRIL_TRIG0_FstBunchInTrain();
        else if (name == "L1_BRIL_TRIG0_OR") return nt.L1_BRIL_TRIG0_OR();
        else if (name == "L1_BRIL_TRIG0_delayedAND") return nt.L1_BRIL_TRIG0_delayedAND();
        else if (name == "L1_BRIL_TRIG3_AND") return nt.L1_BRIL_TRIG3_AND();
        else if (name == "L1_BRIL_TRIG3_delayedAND") return nt.L1_BRIL_TRIG3_delayedAND();
        else if (name == "L1_BRIL_TRIG3_ref") return nt.L1_BRIL_TRIG3_ref();
        else if (name == "L1_BeamGasB1") return nt.L1_BeamGasB1();
        else if (name == "L1_BeamGasB2") return nt.L1_BeamGasB2();
        else if (name == "L1_BeamGasMinus") return nt.L1_BeamGasMinus();
        else if (name == "L1_BeamGasPlus") return nt.L1_BeamGasPlus();
        else if (name == "L1_BptxMinus") return nt.L1_BptxMinus();
        else if (name == "L1_BptxOR") return nt.L1_BptxOR();
        else if (name == "L1_BptxPlus") return nt.L1_BptxPlus();
        else if (name == "L1_BptxXOR") return nt.L1_BptxXOR();
        else if (name == "L1_CDC_3_TOP120_DPHI1p570_3p142") return nt.L1_CDC_3_TOP120_DPHI1p570_3p142();
        else if (name == "L1_CDC_3_TOP120_DPHI2p094_3p142") return nt.L1_CDC_3_TOP120_DPHI2p094_3p142();
        else if (name == "L1_CDC_3_TOP120_DPHI2p618_3p142") return nt.L1_CDC_3_TOP120_DPHI2p618_3p142();
        else if (name == "L1_CDC_3_TOP_DPHI2p618_3p142") return nt.L1_CDC_3_TOP_DPHI2p618_3p142();
        else if (name == "L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142") return nt.L1_CDC_3_er1p2_TOP120_DPHI1p570_3p142();
        else if (name == "L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142") return nt.L1_CDC_3_er1p2_TOP120_DPHI2p094_3p142();
        else if (name == "L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142") return nt.L1_CDC_3_er1p2_TOP120_DPHI2p618_3p142();
        else if (name == "L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142") return nt.L1_CDC_3_er1p6_TOP120_DPHI1p570_3p142();
        else if (name == "L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142") return nt.L1_CDC_3_er1p6_TOP120_DPHI2p094_3p142();
        else if (name == "L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142") return nt.L1_CDC_3_er1p6_TOP120_DPHI2p618_3p142();
        else if (name == "L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142") return nt.L1_CDC_3_er2p1_TOP120_DPHI1p570_3p142();
        else if (name == "L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142") return nt.L1_CDC_3_er2p1_TOP120_DPHI2p094_3p142();
        else if (name == "L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142") return nt.L1_CDC_3_er2p1_TOP120_DPHI2p618_3p142();
        else if (name == "L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142") return nt.L1_CDC_SingleMu_3_TOP120_DPHI2p618_3p142();
        else if (name == "L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142") return nt.L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142();
        else if (name == "L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142") return nt.L1_CDC_SingleMu_3_er1p6_TOP120_DPHI2p618_3p142();
        else if (name == "L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142") return nt.L1_CDC_SingleMu_3_er2p1_TOP120_DPHI2p618_3p142();
        else if (name == "L1_CDCp1_3_TOP120_DPHI2p618_3p142") return nt.L1_CDCp1_3_TOP120_DPHI2p618_3p142();
        else if (name == "L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142") return nt.L1_CDCp1_3_er1p2_TOP120_DPHI2p618_3p142();
        else if (name == "L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142") return nt.L1_CDCp1_3_er1p6_TOP120_DPHI2p618_3p142();
        else if (name == "L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142") return nt.L1_CDCp1_3_er2p1_TOP120_DPHI2p618_3p142();
        else if (name == "L1_CastorGap_BptxAND") return nt.L1_CastorGap_BptxAND();
        else if (name == "L1_CastorHaloMuon") return nt.L1_CastorHaloMuon();
        else if (name == "L1_CastorHaloMuon_BptxAND") return nt.L1_CastorHaloMuon_BptxAND();
        else if (name == "L1_CastorHighJet_BptxAND") return nt.L1_CastorHighJet_BptxAND();
        else if (name == "L1_CastorMediumJet_BptxAND") return nt.L1_CastorMediumJet_BptxAND();
        else if (name == "L1_DoubleEG10_er1p2_dR_Max0p6") return nt.L1_DoubleEG10_er1p2_dR_Max0p6();
        else if (name == "L1_DoubleEG10p5_er1p2_dR_Max0p6") return nt.L1_DoubleEG10p5_er1p2_dR_Max0p6();
        else if (name == "L1_DoubleEG11_er1p2_dR_Max0p6") return nt.L1_DoubleEG11_er1p2_dR_Max0p6();
        else if (name == "L1_DoubleEG4_er1p2_dR_Max0p9") return nt.L1_DoubleEG4_er1p2_dR_Max0p9();
        else if (name == "L1_DoubleEG4p5_er1p2_dR_Max0p9") return nt.L1_DoubleEG4p5_er1p2_dR_Max0p9();
        else if (name == "L1_DoubleEG5_er1p2_dR_Max0p9") return nt.L1_DoubleEG5_er1p2_dR_Max0p9();
        else if (name == "L1_DoubleEG5p5_er1p2_dR_Max0p8") return nt.L1_DoubleEG5p5_er1p2_dR_Max0p8();
        else if (name == "L1_DoubleEG6_HTT240er") return nt.L1_DoubleEG6_HTT240er();
        else if (name == "L1_DoubleEG6_HTT250er") return nt.L1_DoubleEG6_HTT250er();
        else if (name == "L1_DoubleEG6_HTT255") return nt.L1_DoubleEG6_HTT255();
        else if (name == "L1_DoubleEG6_HTT255er") return nt.L1_DoubleEG6_HTT255er();
        else if (name == "L1_DoubleEG6_HTT270er") return nt.L1_DoubleEG6_HTT270er();
        else if (name == "L1_DoubleEG6_HTT300er") return nt.L1_DoubleEG6_HTT300er();
        else if (name == "L1_DoubleEG6_er1p2_dR_Max0p8") return nt.L1_DoubleEG6_er1p2_dR_Max0p8();
        else if (name == "L1_DoubleEG6p5_er1p2_dR_Max0p8") return nt.L1_DoubleEG6p5_er1p2_dR_Max0p8();
        else if (name == "L1_DoubleEG7_er1p2_dR_Max0p8") return nt.L1_DoubleEG7_er1p2_dR_Max0p8();
        else if (name == "L1_DoubleEG7p5_er1p2_dR_Max0p7") return nt.L1_DoubleEG7p5_er1p2_dR_Max0p7();
        else if (name == "L1_DoubleEG8_er1p2_dR_Max0p7") return nt.L1_DoubleEG8_er1p2_dR_Max0p7();
        else if (name == "L1_DoubleEG8er2p5_HTT260er") return nt.L1_DoubleEG8er2p5_HTT260er();
        else if (name == "L1_DoubleEG8er2p5_HTT280er") return nt.L1_DoubleEG8er2p5_HTT280er();
        else if (name == "L1_DoubleEG8er2p5_HTT300er") return nt.L1_DoubleEG8er2p5_HTT300er();
        else if (name == "L1_DoubleEG8er2p5_HTT320er") return nt.L1_DoubleEG8er2p5_HTT320er();
        else if (name == "L1_DoubleEG8er2p5_HTT340er") return nt.L1_DoubleEG8er2p5_HTT340er();
        else if (name == "L1_DoubleEG8er2p6_HTT255er") return nt.L1_DoubleEG8er2p6_HTT255er();
        else if (name == "L1_DoubleEG8er2p6_HTT270er") return nt.L1_DoubleEG8er2p6_HTT270er();
        else if (name == "L1_DoubleEG8er2p6_HTT300er") return nt.L1_DoubleEG8er2p6_HTT300er();
        else if (name == "L1_DoubleEG8p5_er1p2_dR_Max0p7") return nt.L1_DoubleEG8p5_er1p2_dR_Max0p7();
        else if (name == "L1_DoubleEG9_er1p2_dR_Max0p7") return nt.L1_DoubleEG9_er1p2_dR_Max0p7();
        else if (name == "L1_DoubleEG9p5_er1p2_dR_Max0p6") return nt.L1_DoubleEG9p5_er1p2_dR_Max0p6();
        else if (name == "L1_DoubleEG_15_10") return nt.L1_DoubleEG_15_10();
        else if (name == "L1_DoubleEG_15_10_er2p5") return nt.L1_DoubleEG_15_10_er2p5();
        else if (name == "L1_DoubleEG_18_17") return nt.L1_DoubleEG_18_17();
        else if (name == "L1_DoubleEG_20_10_er2p5") return nt.L1_DoubleEG_20_10_er2p5();
        else if (name == "L1_DoubleEG_20_18") return nt.L1_DoubleEG_20_18();
        else if (name == "L1_DoubleEG_22_10") return nt.L1_DoubleEG_22_10();
        else if (name == "L1_DoubleEG_22_10_er2p5") return nt.L1_DoubleEG_22_10_er2p5();
        else if (name == "L1_DoubleEG_22_12") return nt.L1_DoubleEG_22_12();
        else if (name == "L1_DoubleEG_22_15") return nt.L1_DoubleEG_22_15();
        else if (name == "L1_DoubleEG_23_10") return nt.L1_DoubleEG_23_10();
        else if (name == "L1_DoubleEG_24_17") return nt.L1_DoubleEG_24_17();
        else if (name == "L1_DoubleEG_25_12") return nt.L1_DoubleEG_25_12();
        else if (name == "L1_DoubleEG_25_12_er2p5") return nt.L1_DoubleEG_25_12_er2p5();
        else if (name == "L1_DoubleEG_25_13") return nt.L1_DoubleEG_25_13();
        else if (name == "L1_DoubleEG_25_14") return nt.L1_DoubleEG_25_14();
        else if (name == "L1_DoubleEG_25_14_er2p5") return nt.L1_DoubleEG_25_14_er2p5();
        else if (name == "L1_DoubleEG_27_14_er2p5") return nt.L1_DoubleEG_27_14_er2p5();
        else if (name == "L1_DoubleEG_Iso23_10") return nt.L1_DoubleEG_Iso23_10();
        else if (name == "L1_DoubleEG_Iso24_10") return nt.L1_DoubleEG_Iso24_10();
        else if (name == "L1_DoubleEG_LooseIso16_LooseIso12_er1p5") return nt.L1_DoubleEG_LooseIso16_LooseIso12_er1p5();
        else if (name == "L1_DoubleEG_LooseIso18_LooseIso12_er1p5") return nt.L1_DoubleEG_LooseIso18_LooseIso12_er1p5();
        else if (name == "L1_DoubleEG_LooseIso20_10_er2p5") return nt.L1_DoubleEG_LooseIso20_10_er2p5();
        else if (name == "L1_DoubleEG_LooseIso20_LooseIso12_er1p5") return nt.L1_DoubleEG_LooseIso20_LooseIso12_er1p5();
        else if (name == "L1_DoubleEG_LooseIso22_10_er2p5") return nt.L1_DoubleEG_LooseIso22_10_er2p5();
        else if (name == "L1_DoubleEG_LooseIso22_12_er2p5") return nt.L1_DoubleEG_LooseIso22_12_er2p5();
        else if (name == "L1_DoubleEG_LooseIso22_LooseIso12_er1p5") return nt.L1_DoubleEG_LooseIso22_LooseIso12_er1p5();
        else if (name == "L1_DoubleEG_LooseIso23_10") return nt.L1_DoubleEG_LooseIso23_10();
        else if (name == "L1_DoubleEG_LooseIso24_10") return nt.L1_DoubleEG_LooseIso24_10();
        else if (name == "L1_DoubleEG_LooseIso25_12_er2p5") return nt.L1_DoubleEG_LooseIso25_12_er2p5();
        else if (name == "L1_DoubleEG_LooseIso25_LooseIso12_er1p5") return nt.L1_DoubleEG_LooseIso25_LooseIso12_er1p5();
        else if (name == "L1_DoubleIsoTau26er") return nt.L1_DoubleIsoTau26er();
        else if (name == "L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5") return nt.L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5();
        else if (name == "L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5") return nt.L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5();
        else if (name == "L1_DoubleIsoTau27er") return nt.L1_DoubleIsoTau27er();
        else if (name == "L1_DoubleIsoTau28er") return nt.L1_DoubleIsoTau28er();
        else if (name == "L1_DoubleIsoTau28er2p1") return nt.L1_DoubleIsoTau28er2p1();
        else if (name == "L1_DoubleIsoTau28er2p1_Mass_Max80") return nt.L1_DoubleIsoTau28er2p1_Mass_Max80();
        else if (name == "L1_DoubleIsoTau28er2p1_Mass_Max90") return nt.L1_DoubleIsoTau28er2p1_Mass_Max90();
        else if (name == "L1_DoubleIsoTau29er") return nt.L1_DoubleIsoTau29er();
        else if (name == "L1_DoubleIsoTau30er") return nt.L1_DoubleIsoTau30er();
        else if (name == "L1_DoubleIsoTau30er2p1") return nt.L1_DoubleIsoTau30er2p1();
        else if (name == "L1_DoubleIsoTau30er2p1_Mass_Max80") return nt.L1_DoubleIsoTau30er2p1_Mass_Max80();
        else if (name == "L1_DoubleIsoTau30er2p1_Mass_Max90") return nt.L1_DoubleIsoTau30er2p1_Mass_Max90();
        else if (name == "L1_DoubleIsoTau32er") return nt.L1_DoubleIsoTau32er();
        else if (name == "L1_DoubleIsoTau32er2p1") return nt.L1_DoubleIsoTau32er2p1();
        else if (name == "L1_DoubleIsoTau33er") return nt.L1_DoubleIsoTau33er();
        else if (name == "L1_DoubleIsoTau33er2p1") return nt.L1_DoubleIsoTau33er2p1();
        else if (name == "L1_DoubleIsoTau34er") return nt.L1_DoubleIsoTau34er();
        else if (name == "L1_DoubleIsoTau34er2p1") return nt.L1_DoubleIsoTau34er2p1();
        else if (name == "L1_DoubleIsoTau35er") return nt.L1_DoubleIsoTau35er();
        else if (name == "L1_DoubleIsoTau35er2p1") return nt.L1_DoubleIsoTau35er2p1();
        else if (name == "L1_DoubleIsoTau36er") return nt.L1_DoubleIsoTau36er();
        else if (name == "L1_DoubleIsoTau36er2p1") return nt.L1_DoubleIsoTau36er2p1();
        else if (name == "L1_DoubleIsoTau38er2p1") return nt.L1_DoubleIsoTau38er2p1();
        else if (name == "L1_DoubleJet100er2p3_dEta_Max1p6") return nt.L1_DoubleJet100er2p3_dEta_Max1p6();
        else if (name == "L1_DoubleJet100er2p5") return nt.L1_DoubleJet100er2p5();
        else if (name == "L1_DoubleJet100er2p7") return nt.L1_DoubleJet100er2p7();
        else if (name == "L1_DoubleJet100er3p0") return nt.L1_DoubleJet100er3p0();
        else if (name == "L1_DoubleJet112er2p3_dEta_Max1p6") return nt.L1_DoubleJet112er2p3_dEta_Max1p6();
        else if (name == "L1_DoubleJet112er2p7") return nt.L1_DoubleJet112er2p7();
        else if (name == "L1_DoubleJet112er3p0") return nt.L1_DoubleJet112er3p0();
        else if (name == "L1_DoubleJet120er2p5") return nt.L1_DoubleJet120er2p5();
        else if (name == "L1_DoubleJet120er2p7") return nt.L1_DoubleJet120er2p7();
        else if (name == "L1_DoubleJet120er3p0") return nt.L1_DoubleJet120er3p0();
        else if (name == "L1_DoubleJet12_ForwardBackward") return nt.L1_DoubleJet12_ForwardBackward();
        else if (name == "L1_DoubleJet150er2p5") return nt.L1_DoubleJet150er2p5();
        else if (name == "L1_DoubleJet150er2p7") return nt.L1_DoubleJet150er2p7();
        else if (name == "L1_DoubleJet150er3p0") return nt.L1_DoubleJet150er3p0();
        else if (name == "L1_DoubleJet16_ForwardBackward") return nt.L1_DoubleJet16_ForwardBackward();
        else if (name == "L1_DoubleJet30_Mass_Min300_dEta_Max1p5") return nt.L1_DoubleJet30_Mass_Min300_dEta_Max1p5();
        else if (name == "L1_DoubleJet30_Mass_Min320_dEta_Max1p5") return nt.L1_DoubleJet30_Mass_Min320_dEta_Max1p5();
        else if (name == "L1_DoubleJet30_Mass_Min340_dEta_Max1p5") return nt.L1_DoubleJet30_Mass_Min340_dEta_Max1p5();
        else if (name == "L1_DoubleJet30_Mass_Min360_dEta_Max1p5") return nt.L1_DoubleJet30_Mass_Min360_dEta_Max1p5();
        else if (name == "L1_DoubleJet30_Mass_Min380_dEta_Max1p5") return nt.L1_DoubleJet30_Mass_Min380_dEta_Max1p5();
        else if (name == "L1_DoubleJet30_Mass_Min400_Mu10") return nt.L1_DoubleJet30_Mass_Min400_Mu10();
        else if (name == "L1_DoubleJet30_Mass_Min400_Mu6") return nt.L1_DoubleJet30_Mass_Min400_Mu6();
        else if (name == "L1_DoubleJet30_Mass_Min400_dEta_Max1p5") return nt.L1_DoubleJet30_Mass_Min400_dEta_Max1p5();
        else if (name == "L1_DoubleJet30_Mj30j30_400_Mu10") return nt.L1_DoubleJet30_Mj30j30_400_Mu10();
        else if (name == "L1_DoubleJet30_Mj30j30_400_Mu6") return nt.L1_DoubleJet30_Mj30j30_400_Mu6();
        else if (name == "L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5") return nt.L1_DoubleJet30er2p5_Mass_Min150_dEta_Max1p5();
        else if (name == "L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5") return nt.L1_DoubleJet30er2p5_Mass_Min200_dEta_Max1p5();
        else if (name == "L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5") return nt.L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5();
        else if (name == "L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5") return nt.L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5();
        else if (name == "L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5") return nt.L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5();
        else if (name == "L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5") return nt.L1_DoubleJet30er2p5_Mass_Min360_dEta_Max1p5();
        else if (name == "L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp") return nt.L1_DoubleJet35_Mass_Min450_IsoTau45_RmOvlp();
        else if (name == "L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5") return nt.L1_DoubleJet35_Mass_Min450_IsoTau45er2p1_RmOvlp_dR0p5();
        else if (name == "L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450") return nt.L1_DoubleJet35_rmovlp_IsoTau45_Mass_Min450();
        else if (name == "L1_DoubleJet40er2p5") return nt.L1_DoubleJet40er2p5();
        else if (name == "L1_DoubleJet40er2p7") return nt.L1_DoubleJet40er2p7();
        else if (name == "L1_DoubleJet40er3p0") return nt.L1_DoubleJet40er3p0();
        else if (name == "L1_DoubleJet50er2p7") return nt.L1_DoubleJet50er2p7();
        else if (name == "L1_DoubleJet50er3p0") return nt.L1_DoubleJet50er3p0();
        else if (name == "L1_DoubleJet60er2p7") return nt.L1_DoubleJet60er2p7();
        else if (name == "L1_DoubleJet60er2p7_ETM100") return nt.L1_DoubleJet60er2p7_ETM100();
        else if (name == "L1_DoubleJet60er2p7_ETM60") return nt.L1_DoubleJet60er2p7_ETM60();
        else if (name == "L1_DoubleJet60er2p7_ETM70") return nt.L1_DoubleJet60er2p7_ETM70();
        else if (name == "L1_DoubleJet60er2p7_ETM80") return nt.L1_DoubleJet60er2p7_ETM80();
        else if (name == "L1_DoubleJet60er2p7_ETM90") return nt.L1_DoubleJet60er2p7_ETM90();
        else if (name == "L1_DoubleJet60er3p0") return nt.L1_DoubleJet60er3p0();
        else if (name == "L1_DoubleJet60er3p0_ETM100") return nt.L1_DoubleJet60er3p0_ETM100();
        else if (name == "L1_DoubleJet60er3p0_ETM60") return nt.L1_DoubleJet60er3p0_ETM60();
        else if (name == "L1_DoubleJet60er3p0_ETM70") return nt.L1_DoubleJet60er3p0_ETM70();
        else if (name == "L1_DoubleJet60er3p0_ETM80") return nt.L1_DoubleJet60er3p0_ETM80();
        else if (name == "L1_DoubleJet60er3p0_ETM90") return nt.L1_DoubleJet60er3p0_ETM90();
        else if (name == "L1_DoubleJet80er2p7") return nt.L1_DoubleJet80er2p7();
        else if (name == "L1_DoubleJet80er3p0") return nt.L1_DoubleJet80er3p0();
        else if (name == "L1_DoubleJet8_ForwardBackward") return nt.L1_DoubleJet8_ForwardBackward();
        else if (name == "L1_DoubleJetC100") return nt.L1_DoubleJetC100();
        else if (name == "L1_DoubleJetC112") return nt.L1_DoubleJetC112();
        else if (name == "L1_DoubleJetC120") return nt.L1_DoubleJetC120();
        else if (name == "L1_DoubleJetC40") return nt.L1_DoubleJetC40();
        else if (name == "L1_DoubleJetC50") return nt.L1_DoubleJetC50();
        else if (name == "L1_DoubleJetC60") return nt.L1_DoubleJetC60();
        else if (name == "L1_DoubleJetC60_ETM60") return nt.L1_DoubleJetC60_ETM60();
        else if (name == "L1_DoubleJetC80") return nt.L1_DoubleJetC80();
        else if (name == "L1_DoubleJet_100_30_DoubleJet30_Mass_Min620") return nt.L1_DoubleJet_100_30_DoubleJet30_Mass_Min620();
        else if (name == "L1_DoubleJet_100_30_Mj30j30_620") return nt.L1_DoubleJet_100_30_Mj30j30_620();
        else if (name == "L1_DoubleJet_100_35_DoubleJet35_Mass_Min620") return nt.L1_DoubleJet_100_35_DoubleJet35_Mass_Min620();
        else if (name == "L1_DoubleJet_110_35_DoubleJet35_Mass_Min620") return nt.L1_DoubleJet_110_35_DoubleJet35_Mass_Min620();
        else if (name == "L1_DoubleJet_110_40_DoubleJet40_Mass_Min620") return nt.L1_DoubleJet_110_40_DoubleJet40_Mass_Min620();
        else if (name == "L1_DoubleJet_115_35_DoubleJet35_Mass_Min620") return nt.L1_DoubleJet_115_35_DoubleJet35_Mass_Min620();
        else if (name == "L1_DoubleJet_115_40_DoubleJet40_Mass_Min620") return nt.L1_DoubleJet_115_40_DoubleJet40_Mass_Min620();
        else if (name == "L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28") return nt.L1_DoubleJet_115_40_DoubleJet40_Mass_Min620_Jet60TT28();
        else if (name == "L1_DoubleJet_120_45_DoubleJet45_Mass_Min620") return nt.L1_DoubleJet_120_45_DoubleJet45_Mass_Min620();
        else if (name == "L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28") return nt.L1_DoubleJet_120_45_DoubleJet45_Mass_Min620_Jet60TT28();
        else if (name == "L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ") return nt.L1_DoubleJet_80_30_Mass_Min420_DoubleMu0_SQ();
        else if (name == "L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp") return nt.L1_DoubleJet_80_30_Mass_Min420_IsoTau40_RmOvlp();
        else if (name == "L1_DoubleJet_80_30_Mass_Min420_Mu8") return nt.L1_DoubleJet_80_30_Mass_Min420_Mu8();
        else if (name == "L1_DoubleJet_90_30_DoubleJet30_Mass_Min620") return nt.L1_DoubleJet_90_30_DoubleJet30_Mass_Min620();
        else if (name == "L1_DoubleJet_90_30_Mj30j30_620") return nt.L1_DoubleJet_90_30_Mj30j30_620();
        else if (name == "L1_DoubleLLPJet40") return nt.L1_DoubleLLPJet40();
        else if (name == "L1_DoubleLooseIsoEG22er2p1") return nt.L1_DoubleLooseIsoEG22er2p1();
        else if (name == "L1_DoubleLooseIsoEG24er2p1") return nt.L1_DoubleLooseIsoEG24er2p1();
        else if (name == "L1_DoubleMu0") return nt.L1_DoubleMu0();
        else if (name == "L1_DoubleMu0_ETM40") return nt.L1_DoubleMu0_ETM40();
        else if (name == "L1_DoubleMu0_ETM55") return nt.L1_DoubleMu0_ETM55();
        else if (name == "L1_DoubleMu0_ETM60") return nt.L1_DoubleMu0_ETM60();
        else if (name == "L1_DoubleMu0_ETM65") return nt.L1_DoubleMu0_ETM65();
        else if (name == "L1_DoubleMu0_ETM70") return nt.L1_DoubleMu0_ETM70();
        else if (name == "L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30") return nt.L1_DoubleMu0_ETMHF40_Jet60_OR_DoubleJet30();
        else if (name == "L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30") return nt.L1_DoubleMu0_ETMHF50_Jet60_OR_DoubleJet30();
        else if (name == "L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30") return nt.L1_DoubleMu0_ETMHF60_Jet60_OR_DoubleJet30();
        else if (name == "L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30") return nt.L1_DoubleMu0_ETMHF70_Jet60_OR_DoubleJet30();
        else if (name == "L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30") return nt.L1_DoubleMu0_ETMHF80_Jet60_OR_DoubleJet30();
        else if (name == "L1_DoubleMu0_Mass_Min1") return nt.L1_DoubleMu0_Mass_Min1();
        else if (name == "L1_DoubleMu0_OQ") return nt.L1_DoubleMu0_OQ();
        else if (name == "L1_DoubleMu0_SQ") return nt.L1_DoubleMu0_SQ();
        else if (name == "L1_DoubleMu0_SQ_OS") return nt.L1_DoubleMu0_SQ_OS();
        else if (name == "L1_DoubleMu0_Upt15_Upt7") return nt.L1_DoubleMu0_Upt15_Upt7();
        else if (name == "L1_DoubleMu0_Upt5_Upt5") return nt.L1_DoubleMu0_Upt5_Upt5();
        else if (name == "L1_DoubleMu0_Upt6_IP_Min1_Upt4") return nt.L1_DoubleMu0_Upt6_IP_Min1_Upt4();
        else if (name == "L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8") return nt.L1_DoubleMu0_dR_Max1p6_Jet90er2p5_dR_Max0p8();
        else if (name == "L1_DoubleMu0er1p25_dEta_Max1p8_OS") return nt.L1_DoubleMu0er1p25_dEta_Max1p8_OS();
        else if (name == "L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6") return nt.L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6();
        else if (name == "L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4") return nt.L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4();
        else if (name == "L1_DoubleMu0er1p4_dEta_Max1p8_OS") return nt.L1_DoubleMu0er1p4_dEta_Max1p8_OS();
        else if (name == "L1_DoubleMu0er1p5_SQ") return nt.L1_DoubleMu0er1p5_SQ();
        else if (name == "L1_DoubleMu0er1p5_SQ_OS") return nt.L1_DoubleMu0er1p5_SQ_OS();
        else if (name == "L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4") return nt.L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4();
        else if (name == "L1_DoubleMu0er1p5_SQ_dR_Max1p4") return nt.L1_DoubleMu0er1p5_SQ_dR_Max1p4();
        else if (name == "L1_DoubleMu0er1p6_dEta_Max1p8") return nt.L1_DoubleMu0er1p6_dEta_Max1p8();
        else if (name == "L1_DoubleMu0er1p6_dEta_Max1p8_OS") return nt.L1_DoubleMu0er1p6_dEta_Max1p8_OS();
        else if (name == "L1_DoubleMu0er2_SQ_dR_Max1p4") return nt.L1_DoubleMu0er2_SQ_dR_Max1p4();
        else if (name == "L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5") return nt.L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5();
        else if (name == "L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6") return nt.L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6();
        else if (name == "L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4") return nt.L1_DoubleMu0er2p0_SQ_OS_dR_Max1p4();
        else if (name == "L1_DoubleMu0er2p0_SQ_dEta_Max1p5") return nt.L1_DoubleMu0er2p0_SQ_dEta_Max1p5();
        else if (name == "L1_DoubleMu0er2p0_SQ_dEta_Max1p6") return nt.L1_DoubleMu0er2p0_SQ_dEta_Max1p6();
        else if (name == "L1_DoubleMu0er2p0_SQ_dR_Max1p4") return nt.L1_DoubleMu0er2p0_SQ_dR_Max1p4();
        else if (name == "L1_DoubleMu10_SQ") return nt.L1_DoubleMu10_SQ();
        else if (name == "L1_DoubleMu18er2p1") return nt.L1_DoubleMu18er2p1();
        else if (name == "L1_DoubleMu18er2p1_SQ") return nt.L1_DoubleMu18er2p1_SQ();
        else if (name == "L1_DoubleMu22er2p1") return nt.L1_DoubleMu22er2p1();
        else if (name == "L1_DoubleMu3_OS_DoubleEG7p5Upsilon") return nt.L1_DoubleMu3_OS_DoubleEG7p5Upsilon();
        else if (name == "L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20") return nt.L1_DoubleMu3_OS_er2p3_Mass_Max14_DoubleEG7p5_er2p1_Mass_Max20();
        else if (name == "L1_DoubleMu3_SQ_ETMHF30_HTT60er") return nt.L1_DoubleMu3_SQ_ETMHF30_HTT60er();
        else if (name == "L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5") return nt.L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5();
        else if (name == "L1_DoubleMu3_SQ_ETMHF40_HTT60er") return nt.L1_DoubleMu3_SQ_ETMHF40_HTT60er();
        else if (name == "L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30") return nt.L1_DoubleMu3_SQ_ETMHF40_Jet60_OR_DoubleJet30();
        else if (name == "L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5") return nt.L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5();
        else if (name == "L1_DoubleMu3_SQ_ETMHF50_HTT60er") return nt.L1_DoubleMu3_SQ_ETMHF50_HTT60er();
        else if (name == "L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30") return nt.L1_DoubleMu3_SQ_ETMHF50_Jet60_OR_DoubleJet30();
        else if (name == "L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5") return nt.L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5();
        else if (name == "L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5") return nt.L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5();
        else if (name == "L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30") return nt.L1_DoubleMu3_SQ_ETMHF60_Jet60_OR_DoubleJet30();
        else if (name == "L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5") return nt.L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5();
        else if (name == "L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30") return nt.L1_DoubleMu3_SQ_ETMHF70_Jet60_OR_DoubleJet30();
        else if (name == "L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30") return nt.L1_DoubleMu3_SQ_ETMHF80_Jet60_OR_DoubleJet30();
        else if (name == "L1_DoubleMu3_SQ_HTT100er") return nt.L1_DoubleMu3_SQ_HTT100er();
        else if (name == "L1_DoubleMu3_SQ_HTT200er") return nt.L1_DoubleMu3_SQ_HTT200er();
        else if (name == "L1_DoubleMu3_SQ_HTT220er") return nt.L1_DoubleMu3_SQ_HTT220er();
        else if (name == "L1_DoubleMu3_SQ_HTT240er") return nt.L1_DoubleMu3_SQ_HTT240er();
        else if (name == "L1_DoubleMu3_SQ_HTT260er") return nt.L1_DoubleMu3_SQ_HTT260er();
        else if (name == "L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8") return nt.L1_DoubleMu3_dR_Max1p6_Jet90er2p5_dR_Max0p8();
        else if (name == "L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4") return nt.L1_DoubleMu3er2p0_SQ_OS_dR_Max1p4();
        else if (name == "L1_DoubleMu4_OS_EG12") return nt.L1_DoubleMu4_OS_EG12();
        else if (name == "L1_DoubleMu4_SQ_EG9er2p5") return nt.L1_DoubleMu4_SQ_EG9er2p5();
        else if (name == "L1_DoubleMu4_SQ_OS") return nt.L1_DoubleMu4_SQ_OS();
        else if (name == "L1_DoubleMu4_SQ_OS_dR_Max1p2") return nt.L1_DoubleMu4_SQ_OS_dR_Max1p2();
        else if (name == "L1_DoubleMu4p5_SQ") return nt.L1_DoubleMu4p5_SQ();
        else if (name == "L1_DoubleMu4p5_SQ_OS") return nt.L1_DoubleMu4p5_SQ_OS();
        else if (name == "L1_DoubleMu4p5_SQ_OS_dR_Max1p2") return nt.L1_DoubleMu4p5_SQ_OS_dR_Max1p2();
        else if (name == "L1_DoubleMu4p5er2p0_SQ_OS") return nt.L1_DoubleMu4p5er2p0_SQ_OS();
        else if (name == "L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18") return nt.L1_DoubleMu4p5er2p0_SQ_OS_Mass7to18();
        else if (name == "L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18") return nt.L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18();
        else if (name == "L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7") return nt.L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7();
        else if (name == "L1_DoubleMu5Upsilon_OS_DoubleEG3") return nt.L1_DoubleMu5Upsilon_OS_DoubleEG3();
        else if (name == "L1_DoubleMu5_OS_EG12") return nt.L1_DoubleMu5_OS_EG12();
        else if (name == "L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20") return nt.L1_DoubleMu5_OS_er2p3_Mass_8to14_DoubleEG3er2p1_Mass_Max20();
        else if (name == "L1_DoubleMu5_SQ_EG9er2p5") return nt.L1_DoubleMu5_SQ_EG9er2p5();
        else if (name == "L1_DoubleMu5_SQ_OS") return nt.L1_DoubleMu5_SQ_OS();
        else if (name == "L1_DoubleMu5_SQ_OS_Mass7to18") return nt.L1_DoubleMu5_SQ_OS_Mass7to18();
        else if (name == "L1_DoubleMu6_SQ_OS") return nt.L1_DoubleMu6_SQ_OS();
        else if (name == "L1_DoubleMu7_EG14") return nt.L1_DoubleMu7_EG14();
        else if (name == "L1_DoubleMu7_EG7") return nt.L1_DoubleMu7_EG7();
        else if (name == "L1_DoubleMu7_SQ_EG7") return nt.L1_DoubleMu7_SQ_EG7();
        else if (name == "L1_DoubleMu8_SQ") return nt.L1_DoubleMu8_SQ();
        else if (name == "L1_DoubleMu9_SQ") return nt.L1_DoubleMu9_SQ();
        else if (name == "L1_DoubleMuOpen") return nt.L1_DoubleMuOpen();
        else if (name == "L1_DoubleMu_10_0_dEta_Max1p8") return nt.L1_DoubleMu_10_0_dEta_Max1p8();
        else if (name == "L1_DoubleMu_10_3p5") return nt.L1_DoubleMu_10_3p5();
        else if (name == "L1_DoubleMu_10_Open") return nt.L1_DoubleMu_10_Open();
        else if (name == "L1_DoubleMu_11_4") return nt.L1_DoubleMu_11_4();
        else if (name == "L1_DoubleMu_12_5") return nt.L1_DoubleMu_12_5();
        else if (name == "L1_DoubleMu_12_8") return nt.L1_DoubleMu_12_8();
        else if (name == "L1_DoubleMu_13_6") return nt.L1_DoubleMu_13_6();
        else if (name == "L1_DoubleMu_15_5") return nt.L1_DoubleMu_15_5();
        else if (name == "L1_DoubleMu_15_5_SQ") return nt.L1_DoubleMu_15_5_SQ();
        else if (name == "L1_DoubleMu_15_7") return nt.L1_DoubleMu_15_7();
        else if (name == "L1_DoubleMu_15_7_Mass_Min1") return nt.L1_DoubleMu_15_7_Mass_Min1();
        else if (name == "L1_DoubleMu_15_7_SQ") return nt.L1_DoubleMu_15_7_SQ();
        else if (name == "L1_DoubleMu_15_7_SQ_Mass_Min4") return nt.L1_DoubleMu_15_7_SQ_Mass_Min4();
        else if (name == "L1_DoubleMu_20_2_SQ_Mass_Max20") return nt.L1_DoubleMu_20_2_SQ_Mass_Max20();
        else if (name == "L1_DoubleTau50er") return nt.L1_DoubleTau50er();
        else if (name == "L1_DoubleTau50er2p1") return nt.L1_DoubleTau50er2p1();
        else if (name == "L1_DoubleTau70er") return nt.L1_DoubleTau70er();
        else if (name == "L1_DoubleTau70er2p1") return nt.L1_DoubleTau70er2p1();
        else if (name == "L1_EG25er2p1_HTT125er") return nt.L1_EG25er2p1_HTT125er();
        else if (name == "L1_EG25er_HTT125") return nt.L1_EG25er_HTT125();
        else if (name == "L1_EG27er2p1_HTT200er") return nt.L1_EG27er2p1_HTT200er();
        else if (name == "L1_EG27er_HTT200") return nt.L1_EG27er_HTT200();
        else if (name == "L1_EG40er2p1_Tau20er2p1_dR_Min0p3") return nt.L1_EG40er2p1_Tau20er2p1_dR_Min0p3();
        else if (name == "L1_ETM100") return nt.L1_ETM100();
        else if (name == "L1_ETM100_Jet60_dPhi_Min0p4") return nt.L1_ETM100_Jet60_dPhi_Min0p4();
        else if (name == "L1_ETM105") return nt.L1_ETM105();
        else if (name == "L1_ETM110") return nt.L1_ETM110();
        else if (name == "L1_ETM110_Jet60_dPhi_Min0p4") return nt.L1_ETM110_Jet60_dPhi_Min0p4();
        else if (name == "L1_ETM115") return nt.L1_ETM115();
        else if (name == "L1_ETM120") return nt.L1_ETM120();
        else if (name == "L1_ETM150") return nt.L1_ETM150();
        else if (name == "L1_ETM30") return nt.L1_ETM30();
        else if (name == "L1_ETM40") return nt.L1_ETM40();
        else if (name == "L1_ETM50") return nt.L1_ETM50();
        else if (name == "L1_ETM60") return nt.L1_ETM60();
        else if (name == "L1_ETM60_Jet60_dPhi_Min0p4") return nt.L1_ETM60_Jet60_dPhi_Min0p4();
        else if (name == "L1_ETM70") return nt.L1_ETM70();
        else if (name == "L1_ETM70_Jet60_dPhi_Min0p4") return nt.L1_ETM70_Jet60_dPhi_Min0p4();
        else if (name == "L1_ETM75") return nt.L1_ETM75();
        else if (name == "L1_ETM75_Jet60_dPhi_Min0p4") return nt.L1_ETM75_Jet60_dPhi_Min0p4();
        else if (name == "L1_ETM80") return nt.L1_ETM80();
        else if (name == "L1_ETM80_Jet60_dPhi_Min0p4") return nt.L1_ETM80_Jet60_dPhi_Min0p4();
        else if (name == "L1_ETM85") return nt.L1_ETM85();
        else if (name == "L1_ETM90") return nt.L1_ETM90();
        else if (name == "L1_ETM90_Jet60_dPhi_Min0p4") return nt.L1_ETM90_Jet60_dPhi_Min0p4();
        else if (name == "L1_ETM95") return nt.L1_ETM95();
        else if (name == "L1_ETMHF100") return nt.L1_ETMHF100();
        else if (name == "L1_ETMHF100_HTT60") return nt.L1_ETMHF100_HTT60();
        else if (name == "L1_ETMHF100_HTT60er") return nt.L1_ETMHF100_HTT60er();
        else if (name == "L1_ETMHF100_Jet60_OR_DiJet30woTT28") return nt.L1_ETMHF100_Jet60_OR_DiJet30woTT28();
        else if (name == "L1_ETMHF100_Jet60_OR_DoubleJet30") return nt.L1_ETMHF100_Jet60_OR_DoubleJet30();
        else if (name == "L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30") return nt.L1_ETMHF100_Jet90_OR_DoubleJet45_OR_TripleJet30();
        else if (name == "L1_ETMHF105_Jet60_OR_DoubleJet30") return nt.L1_ETMHF105_Jet60_OR_DoubleJet30();
        else if (name == "L1_ETMHF110") return nt.L1_ETMHF110();
        else if (name == "L1_ETMHF110_HTT60") return nt.L1_ETMHF110_HTT60();
        else if (name == "L1_ETMHF110_HTT60er") return nt.L1_ETMHF110_HTT60er();
        else if (name == "L1_ETMHF110_HTT60er_NotSecondBunchInTrain") return nt.L1_ETMHF110_HTT60er_NotSecondBunchInTrain();
        else if (name == "L1_ETMHF110_Jet60_OR_DiJet30woTT28") return nt.L1_ETMHF110_Jet60_OR_DiJet30woTT28();
        else if (name == "L1_ETMHF110_Jet60_OR_DoubleJet30") return nt.L1_ETMHF110_Jet60_OR_DoubleJet30();
        else if (name == "L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30") return nt.L1_ETMHF110_Jet90_OR_DoubleJet45_OR_TripleJet30();
        else if (name == "L1_ETMHF115_Jet60_OR_DoubleJet30") return nt.L1_ETMHF115_Jet60_OR_DoubleJet30();
        else if (name == "L1_ETMHF120") return nt.L1_ETMHF120();
        else if (name == "L1_ETMHF120_HTT60") return nt.L1_ETMHF120_HTT60();
        else if (name == "L1_ETMHF120_HTT60er") return nt.L1_ETMHF120_HTT60er();
        else if (name == "L1_ETMHF120_Jet60_OR_DiJet30woTT28") return nt.L1_ETMHF120_Jet60_OR_DiJet30woTT28();
        else if (name == "L1_ETMHF120_Jet60_OR_DoubleJet30") return nt.L1_ETMHF120_Jet60_OR_DoubleJet30();
        else if (name == "L1_ETMHF120_NotSecondBunchInTrain") return nt.L1_ETMHF120_NotSecondBunchInTrain();
        else if (name == "L1_ETMHF130") return nt.L1_ETMHF130();
        else if (name == "L1_ETMHF130_HTT60er") return nt.L1_ETMHF130_HTT60er();
        else if (name == "L1_ETMHF140") return nt.L1_ETMHF140();
        else if (name == "L1_ETMHF150") return nt.L1_ETMHF150();
        else if (name == "L1_ETMHF70") return nt.L1_ETMHF70();
        else if (name == "L1_ETMHF70_HTT60er") return nt.L1_ETMHF70_HTT60er();
        else if (name == "L1_ETMHF70_Jet60_OR_DiJet30woTT28") return nt.L1_ETMHF70_Jet60_OR_DiJet30woTT28();
        else if (name == "L1_ETMHF70_Jet60_OR_DoubleJet30") return nt.L1_ETMHF70_Jet60_OR_DoubleJet30();
        else if (name == "L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30") return nt.L1_ETMHF70_Jet90_OR_DoubleJet45_OR_TripleJet30();
        else if (name == "L1_ETMHF75_Jet60_OR_DoubleJet30") return nt.L1_ETMHF75_Jet60_OR_DoubleJet30();
        else if (name == "L1_ETMHF80") return nt.L1_ETMHF80();
        else if (name == "L1_ETMHF80_HTT60") return nt.L1_ETMHF80_HTT60();
        else if (name == "L1_ETMHF80_HTT60er") return nt.L1_ETMHF80_HTT60er();
        else if (name == "L1_ETMHF80_Jet60_OR_DiJet30woTT28") return nt.L1_ETMHF80_Jet60_OR_DiJet30woTT28();
        else if (name == "L1_ETMHF80_Jet60_OR_DoubleJet30") return nt.L1_ETMHF80_Jet60_OR_DoubleJet30();
        else if (name == "L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30") return nt.L1_ETMHF80_Jet90_OR_DoubleJet45_OR_TripleJet30();
        else if (name == "L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1") return nt.L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p1();
        else if (name == "L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6") return nt.L1_ETMHF80_SingleJet55er2p5_dPhi_Min2p6();
        else if (name == "L1_ETMHF85_Jet60_OR_DoubleJet30") return nt.L1_ETMHF85_Jet60_OR_DoubleJet30();
        else if (name == "L1_ETMHF90") return nt.L1_ETMHF90();
        else if (name == "L1_ETMHF90_HTT60") return nt.L1_ETMHF90_HTT60();
        else if (name == "L1_ETMHF90_HTT60er") return nt.L1_ETMHF90_HTT60er();
        else if (name == "L1_ETMHF90_Jet60_OR_DiJet30woTT28") return nt.L1_ETMHF90_Jet60_OR_DiJet30woTT28();
        else if (name == "L1_ETMHF90_Jet60_OR_DoubleJet30") return nt.L1_ETMHF90_Jet60_OR_DoubleJet30();
        else if (name == "L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30") return nt.L1_ETMHF90_Jet90_OR_DoubleJet45_OR_TripleJet30();
        else if (name == "L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1") return nt.L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p1();
        else if (name == "L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6") return nt.L1_ETMHF90_SingleJet60er2p5_dPhi_Min2p6();
        else if (name == "L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1") return nt.L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p1();
        else if (name == "L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6") return nt.L1_ETMHF90_SingleJet80er2p5_dPhi_Min2p6();
        else if (name == "L1_ETMHF95_Jet60_OR_DoubleJet30") return nt.L1_ETMHF95_Jet60_OR_DoubleJet30();
        else if (name == "L1_ETT100_BptxAND") return nt.L1_ETT100_BptxAND();
        else if (name == "L1_ETT110_BptxAND") return nt.L1_ETT110_BptxAND();
        else if (name == "L1_ETT1200") return nt.L1_ETT1200();
        else if (name == "L1_ETT15_BptxAND") return nt.L1_ETT15_BptxAND();
        else if (name == "L1_ETT1600") return nt.L1_ETT1600();
        else if (name == "L1_ETT2000") return nt.L1_ETT2000();
        else if (name == "L1_ETT25") return nt.L1_ETT25();
        else if (name == "L1_ETT25_BptxAND") return nt.L1_ETT25_BptxAND();
        else if (name == "L1_ETT35_BptxAND") return nt.L1_ETT35_BptxAND();
        else if (name == "L1_ETT40") return nt.L1_ETT40();
        else if (name == "L1_ETT40_BptxAND") return nt.L1_ETT40_BptxAND();
        else if (name == "L1_ETT50_BptxAND") return nt.L1_ETT50_BptxAND();
        else if (name == "L1_ETT55_BptxAND") return nt.L1_ETT55_BptxAND();
        else if (name == "L1_ETT60") return nt.L1_ETT60();
        else if (name == "L1_ETT60_BptxAND") return nt.L1_ETT60_BptxAND();
        else if (name == "L1_ETT70_BptxAND") return nt.L1_ETT70_BptxAND();
        else if (name == "L1_ETT75_BptxAND") return nt.L1_ETT75_BptxAND();
        else if (name == "L1_ETT80_BptxAND") return nt.L1_ETT80_BptxAND();
        else if (name == "L1_ETT85_BptxAND") return nt.L1_ETT85_BptxAND();
        else if (name == "L1_ETT90_BptxAND") return nt.L1_ETT90_BptxAND();
        else if (name == "L1_ETT95_BptxAND") return nt.L1_ETT95_BptxAND();
        else if (name == "L1_FirstBunchAfterTrain") return nt.L1_FirstBunchAfterTrain();
        else if (name == "L1_FirstBunchBeforeTrain") return nt.L1_FirstBunchBeforeTrain();
        else if (name == "L1_FirstBunchInTrain") return nt.L1_FirstBunchInTrain();
        else if (name == "L1_FirstCollisionInOrbit") return nt.L1_FirstCollisionInOrbit();
        else if (name == "L1_FirstCollisionInTrain") return nt.L1_FirstCollisionInTrain();
        else if (name == "L1_HCAL_LaserMon_Trig") return nt.L1_HCAL_LaserMon_Trig();
        else if (name == "L1_HCAL_LaserMon_Veto") return nt.L1_HCAL_LaserMon_Veto();
        else if (name == "L1_HTM100") return nt.L1_HTM100();
        else if (name == "L1_HTM120") return nt.L1_HTM120();
        else if (name == "L1_HTM130") return nt.L1_HTM130();
        else if (name == "L1_HTM140") return nt.L1_HTM140();
        else if (name == "L1_HTM150") return nt.L1_HTM150();
        else if (name == "L1_HTM50") return nt.L1_HTM50();
        else if (name == "L1_HTM60_HTT260") return nt.L1_HTM60_HTT260();
        else if (name == "L1_HTM70") return nt.L1_HTM70();
        else if (name == "L1_HTM80") return nt.L1_HTM80();
        else if (name == "L1_HTM80_HTT220") return nt.L1_HTM80_HTT220();
        else if (name == "L1_HTT120") return nt.L1_HTT120();
        else if (name == "L1_HTT120_SingleLLPJet40") return nt.L1_HTT120_SingleLLPJet40();
        else if (name == "L1_HTT120er") return nt.L1_HTT120er();
        else if (name == "L1_HTT160") return nt.L1_HTT160();
        else if (name == "L1_HTT160_SingleLLPJet50") return nt.L1_HTT160_SingleLLPJet50();
        else if (name == "L1_HTT160er") return nt.L1_HTT160er();
        else if (name == "L1_HTT200") return nt.L1_HTT200();
        else if (name == "L1_HTT200_SingleLLPJet60") return nt.L1_HTT200_SingleLLPJet60();
        else if (name == "L1_HTT200er") return nt.L1_HTT200er();
        else if (name == "L1_HTT220") return nt.L1_HTT220();
        else if (name == "L1_HTT220er") return nt.L1_HTT220er();
        else if (name == "L1_HTT240") return nt.L1_HTT240();
        else if (name == "L1_HTT240_SingleLLPJet70") return nt.L1_HTT240_SingleLLPJet70();
        else if (name == "L1_HTT240er") return nt.L1_HTT240er();
        else if (name == "L1_HTT250er_QuadJet_70_55_40_35_er2p5") return nt.L1_HTT250er_QuadJet_70_55_40_35_er2p5();
        else if (name == "L1_HTT255") return nt.L1_HTT255();
        else if (name == "L1_HTT255er") return nt.L1_HTT255er();
        else if (name == "L1_HTT270") return nt.L1_HTT270();
        else if (name == "L1_HTT270er") return nt.L1_HTT270er();
        else if (name == "L1_HTT280") return nt.L1_HTT280();
        else if (name == "L1_HTT280er") return nt.L1_HTT280er();
        else if (name == "L1_HTT280er_QuadJet_70_55_40_35_er2p4") return nt.L1_HTT280er_QuadJet_70_55_40_35_er2p4();
        else if (name == "L1_HTT280er_QuadJet_70_55_40_35_er2p5") return nt.L1_HTT280er_QuadJet_70_55_40_35_er2p5();
        else if (name == "L1_HTT300") return nt.L1_HTT300();
        else if (name == "L1_HTT300er") return nt.L1_HTT300er();
        else if (name == "L1_HTT300er_QuadJet_70_55_40_35_er2p5") return nt.L1_HTT300er_QuadJet_70_55_40_35_er2p5();
        else if (name == "L1_HTT320") return nt.L1_HTT320();
        else if (name == "L1_HTT320er") return nt.L1_HTT320er();
        else if (name == "L1_HTT320er_QuadJet_70_55_40_40_er2p4") return nt.L1_HTT320er_QuadJet_70_55_40_40_er2p4();
        else if (name == "L1_HTT320er_QuadJet_70_55_40_40_er2p5") return nt.L1_HTT320er_QuadJet_70_55_40_40_er2p5();
        else if (name == "L1_HTT320er_QuadJet_70_55_45_45_er2p5") return nt.L1_HTT320er_QuadJet_70_55_45_45_er2p5();
        else if (name == "L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3") return nt.L1_HTT320er_QuadJet_80_60_er2p1_45_40_er2p3();
        else if (name == "L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3") return nt.L1_HTT320er_QuadJet_80_60_er2p1_50_45_er2p3();
        else if (name == "L1_HTT340er") return nt.L1_HTT340er();
        else if (name == "L1_HTT340er_QuadJet_70_55_40_40_er2p5") return nt.L1_HTT340er_QuadJet_70_55_40_40_er2p5();
        else if (name == "L1_HTT340er_QuadJet_70_55_45_45_er2p5") return nt.L1_HTT340er_QuadJet_70_55_45_45_er2p5();
        else if (name == "L1_HTT360er") return nt.L1_HTT360er();
        else if (name == "L1_HTT380er") return nt.L1_HTT380er();
        else if (name == "L1_HTT400er") return nt.L1_HTT400er();
        else if (name == "L1_HTT450er") return nt.L1_HTT450er();
        else if (name == "L1_HTT500er") return nt.L1_HTT500er();
        else if (name == "L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2") return nt.L1_IsoEG18er2p1_IsoTau24er2p1_dEta_Min0p2();
        else if (name == "L1_IsoEG18er_IsoTau24er_dEta_Min0p2") return nt.L1_IsoEG18er_IsoTau24er_dEta_Min0p2();
        else if (name == "L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2") return nt.L1_IsoEG20er2p1_IsoTau25er2p1_dEta_Min0p2();
        else if (name == "L1_IsoEG20er_IsoTau25er_dEta_Min0p2") return nt.L1_IsoEG20er_IsoTau25er_dEta_Min0p2();
        else if (name == "L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2") return nt.L1_IsoEG22er2p1_IsoTau26er2p1_dEta_Min0p2();
        else if (name == "L1_IsoEG22er_IsoTau26er_dEta_Min0p2") return nt.L1_IsoEG22er_IsoTau26er_dEta_Min0p2();
        else if (name == "L1_IsoEG22er_Tau20er_dEta_Min0p2") return nt.L1_IsoEG22er_Tau20er_dEta_Min0p2();
        else if (name == "L1_IsoEG24er2p1_HTT100er") return nt.L1_IsoEG24er2p1_HTT100er();
        else if (name == "L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3") return nt.L1_IsoEG24er2p1_Jet26er3p0_dR_Min0p3();
        else if (name == "L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0") return nt.L1_IsoEG24er2p1_TripleJet_26er3p0_26_26er3p0();
        else if (name == "L1_IsoEG26er2p1_HTT100er") return nt.L1_IsoEG26er2p1_HTT100er();
        else if (name == "L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3") return nt.L1_IsoEG26er2p1_Jet34er3p0_dR_Min0p3();
        else if (name == "L1_IsoEG28er2p1_HTT100er") return nt.L1_IsoEG28er2p1_HTT100er();
        else if (name == "L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3") return nt.L1_IsoEG28er2p1_Jet34er3p0_dR_Min0p3();
        else if (name == "L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3") return nt.L1_IsoEG30er2p1_Jet34er3p0_dR_Min0p3();
        else if (name == "L1_IsoEG32er2p5_Mt40") return nt.L1_IsoEG32er2p5_Mt40();
        else if (name == "L1_IsoEG32er2p5_Mt44") return nt.L1_IsoEG32er2p5_Mt44();
        else if (name == "L1_IsoEG32er2p5_Mt48") return nt.L1_IsoEG32er2p5_Mt48();
        else if (name == "L1_IsoEG33_Mt40") return nt.L1_IsoEG33_Mt40();
        else if (name == "L1_IsoEG33_Mt44") return nt.L1_IsoEG33_Mt44();
        else if (name == "L1_IsoEG33_Mt48") return nt.L1_IsoEG33_Mt48();
        else if (name == "L1_IsoTau40er2p1_ETMHF100") return nt.L1_IsoTau40er2p1_ETMHF100();
        else if (name == "L1_IsoTau40er2p1_ETMHF110") return nt.L1_IsoTau40er2p1_ETMHF110();
        else if (name == "L1_IsoTau40er2p1_ETMHF120") return nt.L1_IsoTau40er2p1_ETMHF120();
        else if (name == "L1_IsoTau40er2p1_ETMHF80") return nt.L1_IsoTau40er2p1_ETMHF80();
        else if (name == "L1_IsoTau40er2p1_ETMHF90") return nt.L1_IsoTau40er2p1_ETMHF90();
        else if (name == "L1_IsoTau40er_ETM100") return nt.L1_IsoTau40er_ETM100();
        else if (name == "L1_IsoTau40er_ETM105") return nt.L1_IsoTau40er_ETM105();
        else if (name == "L1_IsoTau40er_ETM110") return nt.L1_IsoTau40er_ETM110();
        else if (name == "L1_IsoTau40er_ETM115") return nt.L1_IsoTau40er_ETM115();
        else if (name == "L1_IsoTau40er_ETM120") return nt.L1_IsoTau40er_ETM120();
        else if (name == "L1_IsoTau40er_ETM80") return nt.L1_IsoTau40er_ETM80();
        else if (name == "L1_IsoTau40er_ETM85") return nt.L1_IsoTau40er_ETM85();
        else if (name == "L1_IsoTau40er_ETM90") return nt.L1_IsoTau40er_ETM90();
        else if (name == "L1_IsoTau40er_ETM95") return nt.L1_IsoTau40er_ETM95();
        else if (name == "L1_IsoTau40er_ETMHF100") return nt.L1_IsoTau40er_ETMHF100();
        else if (name == "L1_IsoTau40er_ETMHF110") return nt.L1_IsoTau40er_ETMHF110();
        else if (name == "L1_IsoTau40er_ETMHF120") return nt.L1_IsoTau40er_ETMHF120();
        else if (name == "L1_IsoTau40er_ETMHF80") return nt.L1_IsoTau40er_ETMHF80();
        else if (name == "L1_IsoTau40er_ETMHF90") return nt.L1_IsoTau40er_ETMHF90();
        else if (name == "L1_IsoTau52er2p1_QuadJet36er2p5") return nt.L1_IsoTau52er2p1_QuadJet36er2p5();
        else if (name == "L1_IsolatedBunch") return nt.L1_IsolatedBunch();
        else if (name == "L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0") return nt.L1_Jet32_DoubleMuOpen_Mu10_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0();
        else if (name == "L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0") return nt.L1_Jet32_DoubleMu_10_0_dPhi_Jet_Mu0_Max0p4_dPhi_Mu_Mu_Min1p0();
        else if (name == "L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0") return nt.L1_Jet32_Mu0_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0();
        else if (name == "L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0") return nt.L1_Jet32_MuOpen_EG10_dPhi_Jet_Mu_Max0p4_dPhi_Mu_EG_Min1p0();
        else if (name == "L1_LastBunchInTrain") return nt.L1_LastBunchInTrain();
        else if (name == "L1_LastCollisionInTrain") return nt.L1_LastCollisionInTrain();
        else if (name == "L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3") return nt.L1_LooseIsoEG18er2p1_IsoTau24er2p1_dR_Min0p3();
        else if (name == "L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3") return nt.L1_LooseIsoEG20er2p1_IsoTau25er2p1_dR_Min0p3();
        else if (name == "L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3") return nt.L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3();
        else if (name == "L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3") return nt.L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3();
        else if (name == "L1_LooseIsoEG24er2p1_HTT100er") return nt.L1_LooseIsoEG24er2p1_HTT100er();
        else if (name == "L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3") return nt.L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3();
        else if (name == "L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3") return nt.L1_LooseIsoEG24er2p1_Jet26er2p7_dR_Min0p3();
        else if (name == "L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3") return nt.L1_LooseIsoEG24er2p1_Jet26er3p0_dR_Min0p3();
        else if (name == "L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7") return nt.L1_LooseIsoEG24er2p1_TripleJet_26er2p7_26_26er2p7();
        else if (name == "L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0") return nt.L1_LooseIsoEG24er2p1_TripleJet_26er3p0_26_26er3p0();
        else if (name == "L1_LooseIsoEG26er2p1_HTT100er") return nt.L1_LooseIsoEG26er2p1_HTT100er();
        else if (name == "L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3") return nt.L1_LooseIsoEG26er2p1_Jet34er2p5_dR_Min0p3();
        else if (name == "L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3") return nt.L1_LooseIsoEG26er2p1_Jet34er2p7_dR_Min0p3();
        else if (name == "L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3") return nt.L1_LooseIsoEG26er2p1_Jet34er3p0_dR_Min0p3();
        else if (name == "L1_LooseIsoEG28er2p1_HTT100er") return nt.L1_LooseIsoEG28er2p1_HTT100er();
        else if (name == "L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3") return nt.L1_LooseIsoEG28er2p1_Jet34er2p5_dR_Min0p3();
        else if (name == "L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3") return nt.L1_LooseIsoEG28er2p1_Jet34er2p7_dR_Min0p3();
        else if (name == "L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3") return nt.L1_LooseIsoEG28er2p1_Jet34er3p0_dR_Min0p3();
        else if (name == "L1_LooseIsoEG30er2p1_HTT100er") return nt.L1_LooseIsoEG30er2p1_HTT100er();
        else if (name == "L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3") return nt.L1_LooseIsoEG30er2p1_Jet34er2p5_dR_Min0p3();
        else if (name == "L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3") return nt.L1_LooseIsoEG30er2p1_Jet34er2p7_dR_Min0p3();
        else if (name == "L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3") return nt.L1_LooseIsoEG30er2p1_Jet34er3p0_dR_Min0p3();
        else if (name == "L1_MU20_EG15") return nt.L1_MU20_EG15();
        else if (name == "L1_MinimumBiasHF0") return nt.L1_MinimumBiasHF0();
        else if (name == "L1_MinimumBiasHF0_AND") return nt.L1_MinimumBiasHF0_AND();
        else if (name == "L1_MinimumBiasHF0_AND_BptxAND") return nt.L1_MinimumBiasHF0_AND_BptxAND();
        else if (name == "L1_MinimumBiasHF0_OR") return nt.L1_MinimumBiasHF0_OR();
        else if (name == "L1_MinimumBiasHF0_OR_BptxAND") return nt.L1_MinimumBiasHF0_OR_BptxAND();
        else if (name == "L1_MinimumBiasHF1_AND") return nt.L1_MinimumBiasHF1_AND();
        else if (name == "L1_MinimumBiasHF1_AND_BptxAND") return nt.L1_MinimumBiasHF1_AND_BptxAND();
        else if (name == "L1_MinimumBiasHF1_OR") return nt.L1_MinimumBiasHF1_OR();
        else if (name == "L1_MinimumBiasHF1_OR_BptxAND") return nt.L1_MinimumBiasHF1_OR_BptxAND();
        else if (name == "L1_Mu0er_ETM40") return nt.L1_Mu0er_ETM40();
        else if (name == "L1_Mu0er_ETM55") return nt.L1_Mu0er_ETM55();
        else if (name == "L1_Mu10er2p1_ETM30") return nt.L1_Mu10er2p1_ETM30();
        else if (name == "L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6") return nt.L1_Mu10er2p3_Jet32er2p3_dR_Max0p4_DoubleJet32er2p3_dEta_Max1p6();
        else if (name == "L1_Mu10er_ETM30") return nt.L1_Mu10er_ETM30();
        else if (name == "L1_Mu10er_ETM50") return nt.L1_Mu10er_ETM50();
        else if (name == "L1_Mu12_EG10") return nt.L1_Mu12_EG10();
        else if (name == "L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6") return nt.L1_Mu12er2p3_Jet40er2p1_dR_Max0p4_DoubleJet40er2p1_dEta_Max1p6();
        else if (name == "L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6") return nt.L1_Mu12er2p3_Jet40er2p3_dR_Max0p4_DoubleJet40er2p3_dEta_Max1p6();
        else if (name == "L1_Mu14er2p1_ETM30") return nt.L1_Mu14er2p1_ETM30();
        else if (name == "L1_Mu14er_ETM30") return nt.L1_Mu14er_ETM30();
        else if (name == "L1_Mu15_HTT100er") return nt.L1_Mu15_HTT100er();
        else if (name == "L1_Mu16er2p1_Tau20er2p1") return nt.L1_Mu16er2p1_Tau20er2p1();
        else if (name == "L1_Mu16er2p1_Tau24er2p1") return nt.L1_Mu16er2p1_Tau24er2p1();
        else if (name == "L1_Mu16er_Tau20er") return nt.L1_Mu16er_Tau20er();
        else if (name == "L1_Mu16er_Tau24er") return nt.L1_Mu16er_Tau24er();
        else if (name == "L1_Mu18_HTT100er") return nt.L1_Mu18_HTT100er();
        else if (name == "L1_Mu18_Jet24er2p7") return nt.L1_Mu18_Jet24er2p7();
        else if (name == "L1_Mu18_Jet24er3p0") return nt.L1_Mu18_Jet24er3p0();
        else if (name == "L1_Mu18er2p1_IsoTau26er2p1") return nt.L1_Mu18er2p1_IsoTau26er2p1();
        else if (name == "L1_Mu18er2p1_Tau20er2p1") return nt.L1_Mu18er2p1_Tau20er2p1();
        else if (name == "L1_Mu18er2p1_Tau24er2p1") return nt.L1_Mu18er2p1_Tau24er2p1();
        else if (name == "L1_Mu18er2p1_Tau26er2p1") return nt.L1_Mu18er2p1_Tau26er2p1();
        else if (name == "L1_Mu18er2p1_Tau26er2p1_Jet55") return nt.L1_Mu18er2p1_Tau26er2p1_Jet55();
        else if (name == "L1_Mu18er2p1_Tau26er2p1_Jet70") return nt.L1_Mu18er2p1_Tau26er2p1_Jet70();
        else if (name == "L1_Mu18er_IsoTau26er") return nt.L1_Mu18er_IsoTau26er();
        else if (name == "L1_Mu18er_Tau20er") return nt.L1_Mu18er_Tau20er();
        else if (name == "L1_Mu18er_Tau24er") return nt.L1_Mu18er_Tau24er();
        else if (name == "L1_Mu20_EG10") return nt.L1_Mu20_EG10();
        else if (name == "L1_Mu20_EG10er2p5") return nt.L1_Mu20_EG10er2p5();
        else if (name == "L1_Mu20_EG17") return nt.L1_Mu20_EG17();
        else if (name == "L1_Mu20_IsoEG6") return nt.L1_Mu20_IsoEG6();
        else if (name == "L1_Mu20_LooseIsoEG6") return nt.L1_Mu20_LooseIsoEG6();
        else if (name == "L1_Mu20er2p1_IsoTau26er2p1") return nt.L1_Mu20er2p1_IsoTau26er2p1();
        else if (name == "L1_Mu20er2p1_IsoTau27er2p1") return nt.L1_Mu20er2p1_IsoTau27er2p1();
        else if (name == "L1_Mu20er_IsoTau26er") return nt.L1_Mu20er_IsoTau26er();
        else if (name == "L1_Mu22er2p1_IsoTau28er2p1") return nt.L1_Mu22er2p1_IsoTau28er2p1();
        else if (name == "L1_Mu22er2p1_IsoTau30er2p1") return nt.L1_Mu22er2p1_IsoTau30er2p1();
        else if (name == "L1_Mu22er2p1_IsoTau32er2p1") return nt.L1_Mu22er2p1_IsoTau32er2p1();
        else if (name == "L1_Mu22er2p1_IsoTau33er2p1") return nt.L1_Mu22er2p1_IsoTau33er2p1();
        else if (name == "L1_Mu22er2p1_IsoTau34er2p1") return nt.L1_Mu22er2p1_IsoTau34er2p1();
        else if (name == "L1_Mu22er2p1_IsoTau35er2p1") return nt.L1_Mu22er2p1_IsoTau35er2p1();
        else if (name == "L1_Mu22er2p1_IsoTau36er2p1") return nt.L1_Mu22er2p1_IsoTau36er2p1();
        else if (name == "L1_Mu22er2p1_IsoTau38er2p1") return nt.L1_Mu22er2p1_IsoTau38er2p1();
        else if (name == "L1_Mu22er2p1_IsoTau40er2p1") return nt.L1_Mu22er2p1_IsoTau40er2p1();
        else if (name == "L1_Mu22er2p1_Tau50er2p1") return nt.L1_Mu22er2p1_Tau50er2p1();
        else if (name == "L1_Mu22er2p1_Tau70er2p1") return nt.L1_Mu22er2p1_Tau70er2p1();
        else if (name == "L1_Mu22er_IsoTau26er") return nt.L1_Mu22er_IsoTau26er();
        else if (name == "L1_Mu23_EG10") return nt.L1_Mu23_EG10();
        else if (name == "L1_Mu23_IsoEG10") return nt.L1_Mu23_IsoEG10();
        else if (name == "L1_Mu23_LooseIsoEG10") return nt.L1_Mu23_LooseIsoEG10();
        else if (name == "L1_Mu25er_IsoTau26er") return nt.L1_Mu25er_IsoTau26er();
        else if (name == "L1_Mu3_Jet120er2p5_dR_Max0p4") return nt.L1_Mu3_Jet120er2p5_dR_Max0p4();
        else if (name == "L1_Mu3_Jet120er2p5_dR_Max0p8") return nt.L1_Mu3_Jet120er2p5_dR_Max0p8();
        else if (name == "L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4") return nt.L1_Mu3_Jet120er2p7_dEta_Max0p4_dPhi_Max0p4();
        else if (name == "L1_Mu3_Jet16er2p5_dR_Max0p4") return nt.L1_Mu3_Jet16er2p5_dR_Max0p4();
        else if (name == "L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4") return nt.L1_Mu3_Jet16er2p7_dEta_Max0p4_dPhi_Max0p4();
        else if (name == "L1_Mu3_Jet30er2p5") return nt.L1_Mu3_Jet30er2p5();
        else if (name == "L1_Mu3_Jet35er2p5_dR_Max0p4") return nt.L1_Mu3_Jet35er2p5_dR_Max0p4();
        else if (name == "L1_Mu3_Jet60er2p5_dR_Max0p4") return nt.L1_Mu3_Jet60er2p5_dR_Max0p4();
        else if (name == "L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4") return nt.L1_Mu3_Jet60er2p7_dEta_Max0p4_dPhi_Max0p4();
        else if (name == "L1_Mu3_Jet80er2p5_dR_Max0p4") return nt.L1_Mu3_Jet80er2p5_dR_Max0p4();
        else if (name == "L1_Mu3_JetC120") return nt.L1_Mu3_JetC120();
        else if (name == "L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4") return nt.L1_Mu3_JetC120_dEta_Max0p4_dPhi_Max0p4();
        else if (name == "L1_Mu3_JetC16") return nt.L1_Mu3_JetC16();
        else if (name == "L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4") return nt.L1_Mu3_JetC16_dEta_Max0p4_dPhi_Max0p4();
        else if (name == "L1_Mu3_JetC60") return nt.L1_Mu3_JetC60();
        else if (name == "L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4") return nt.L1_Mu3_JetC60_dEta_Max0p4_dPhi_Max0p4();
        else if (name == "L1_Mu3er1p5_Jet100er2p5_ETMHF30") return nt.L1_Mu3er1p5_Jet100er2p5_ETMHF30();
        else if (name == "L1_Mu3er1p5_Jet100er2p5_ETMHF40") return nt.L1_Mu3er1p5_Jet100er2p5_ETMHF40();
        else if (name == "L1_Mu3er1p5_Jet100er2p5_ETMHF50") return nt.L1_Mu3er1p5_Jet100er2p5_ETMHF50();
        else if (name == "L1_Mu5_EG15") return nt.L1_Mu5_EG15();
        else if (name == "L1_Mu5_EG20") return nt.L1_Mu5_EG20();
        else if (name == "L1_Mu5_EG23") return nt.L1_Mu5_EG23();
        else if (name == "L1_Mu5_EG23er2p5") return nt.L1_Mu5_EG23er2p5();
        else if (name == "L1_Mu5_IsoEG18") return nt.L1_Mu5_IsoEG18();
        else if (name == "L1_Mu5_IsoEG20") return nt.L1_Mu5_IsoEG20();
        else if (name == "L1_Mu5_LooseIsoEG18") return nt.L1_Mu5_LooseIsoEG18();
        else if (name == "L1_Mu5_LooseIsoEG20") return nt.L1_Mu5_LooseIsoEG20();
        else if (name == "L1_Mu5_LooseIsoEG20er2p5") return nt.L1_Mu5_LooseIsoEG20er2p5();
        else if (name == "L1_Mu6_DoubleEG10") return nt.L1_Mu6_DoubleEG10();
        else if (name == "L1_Mu6_DoubleEG10er2p5") return nt.L1_Mu6_DoubleEG10er2p5();
        else if (name == "L1_Mu6_DoubleEG12er2p5") return nt.L1_Mu6_DoubleEG12er2p5();
        else if (name == "L1_Mu6_DoubleEG15er2p5") return nt.L1_Mu6_DoubleEG15er2p5();
        else if (name == "L1_Mu6_DoubleEG17") return nt.L1_Mu6_DoubleEG17();
        else if (name == "L1_Mu6_DoubleEG17er2p5") return nt.L1_Mu6_DoubleEG17er2p5();
        else if (name == "L1_Mu6_HTT200") return nt.L1_Mu6_HTT200();
        else if (name == "L1_Mu6_HTT200er") return nt.L1_Mu6_HTT200er();
        else if (name == "L1_Mu6_HTT240er") return nt.L1_Mu6_HTT240er();
        else if (name == "L1_Mu6_HTT250er") return nt.L1_Mu6_HTT250er();
        else if (name == "L1_Mu7_EG20er2p5") return nt.L1_Mu7_EG20er2p5();
        else if (name == "L1_Mu7_EG23") return nt.L1_Mu7_EG23();
        else if (name == "L1_Mu7_EG23er2p5") return nt.L1_Mu7_EG23er2p5();
        else if (name == "L1_Mu7_IsoEG20") return nt.L1_Mu7_IsoEG20();
        else if (name == "L1_Mu7_IsoEG23") return nt.L1_Mu7_IsoEG23();
        else if (name == "L1_Mu7_LooseIsoEG20") return nt.L1_Mu7_LooseIsoEG20();
        else if (name == "L1_Mu7_LooseIsoEG20er2p5") return nt.L1_Mu7_LooseIsoEG20er2p5();
        else if (name == "L1_Mu7_LooseIsoEG23") return nt.L1_Mu7_LooseIsoEG23();
        else if (name == "L1_Mu7_LooseIsoEG23er2p5") return nt.L1_Mu7_LooseIsoEG23er2p5();
        else if (name == "L1_Mu8_HTT150") return nt.L1_Mu8_HTT150();
        else if (name == "L1_Mu8_HTT150er") return nt.L1_Mu8_HTT150er();
        else if (name == "L1_NotBptxOR") return nt.L1_NotBptxOR();
        else if (name == "L1_QuadJet36er2p5_IsoTau52er2p1") return nt.L1_QuadJet36er2p5_IsoTau52er2p1();
        else if (name == "L1_QuadJet36er2p7_IsoTau52er2p1") return nt.L1_QuadJet36er2p7_IsoTau52er2p1();
        else if (name == "L1_QuadJet36er2p7_Tau52") return nt.L1_QuadJet36er2p7_Tau52();
        else if (name == "L1_QuadJet36er3p0_IsoTau52er2p1") return nt.L1_QuadJet36er3p0_IsoTau52er2p1();
        else if (name == "L1_QuadJet36er3p0_Tau52") return nt.L1_QuadJet36er3p0_Tau52();
        else if (name == "L1_QuadJet40er2p7") return nt.L1_QuadJet40er2p7();
        else if (name == "L1_QuadJet40er3p0") return nt.L1_QuadJet40er3p0();
        else if (name == "L1_QuadJet50er2p7") return nt.L1_QuadJet50er2p7();
        else if (name == "L1_QuadJet50er3p0") return nt.L1_QuadJet50er3p0();
        else if (name == "L1_QuadJet60er2p5") return nt.L1_QuadJet60er2p5();
        else if (name == "L1_QuadJet60er2p7") return nt.L1_QuadJet60er2p7();
        else if (name == "L1_QuadJet60er3p0") return nt.L1_QuadJet60er3p0();
        else if (name == "L1_QuadJetC36_Tau52") return nt.L1_QuadJetC36_Tau52();
        else if (name == "L1_QuadJetC40") return nt.L1_QuadJetC40();
        else if (name == "L1_QuadJetC50") return nt.L1_QuadJetC50();
        else if (name == "L1_QuadJetC60") return nt.L1_QuadJetC60();
        else if (name == "L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0") return nt.L1_QuadJet_95_75_65_20_DoubleJet_75_65_er2p5_Jet20_FWD3p0();
        else if (name == "L1_QuadMu0") return nt.L1_QuadMu0();
        else if (name == "L1_QuadMu0_OQ") return nt.L1_QuadMu0_OQ();
        else if (name == "L1_QuadMu0_SQ") return nt.L1_QuadMu0_SQ();
        else if (name == "L1_SecondBunchInTrain") return nt.L1_SecondBunchInTrain();
        else if (name == "L1_SecondLastBunchInTrain") return nt.L1_SecondLastBunchInTrain();
        else if (name == "L1_SingleEG10") return nt.L1_SingleEG10();
        else if (name == "L1_SingleEG10er2p5") return nt.L1_SingleEG10er2p5();
        else if (name == "L1_SingleEG15") return nt.L1_SingleEG15();
        else if (name == "L1_SingleEG15er2p5") return nt.L1_SingleEG15er2p5();
        else if (name == "L1_SingleEG18") return nt.L1_SingleEG18();
        else if (name == "L1_SingleEG24") return nt.L1_SingleEG24();
        else if (name == "L1_SingleEG26") return nt.L1_SingleEG26();
        else if (name == "L1_SingleEG26er2p5") return nt.L1_SingleEG26er2p5();
        else if (name == "L1_SingleEG28") return nt.L1_SingleEG28();
        else if (name == "L1_SingleEG28_FWD2p5") return nt.L1_SingleEG28_FWD2p5();
        else if (name == "L1_SingleEG28er1p5") return nt.L1_SingleEG28er1p5();
        else if (name == "L1_SingleEG28er2p1") return nt.L1_SingleEG28er2p1();
        else if (name == "L1_SingleEG28er2p5") return nt.L1_SingleEG28er2p5();
        else if (name == "L1_SingleEG2_BptxAND") return nt.L1_SingleEG2_BptxAND();
        else if (name == "L1_SingleEG30") return nt.L1_SingleEG30();
        else if (name == "L1_SingleEG32") return nt.L1_SingleEG32();
        else if (name == "L1_SingleEG34") return nt.L1_SingleEG34();
        else if (name == "L1_SingleEG34er2p1") return nt.L1_SingleEG34er2p1();
        else if (name == "L1_SingleEG34er2p5") return nt.L1_SingleEG34er2p5();
        else if (name == "L1_SingleEG36") return nt.L1_SingleEG36();
        else if (name == "L1_SingleEG36er2p1") return nt.L1_SingleEG36er2p1();
        else if (name == "L1_SingleEG36er2p5") return nt.L1_SingleEG36er2p5();
        else if (name == "L1_SingleEG38") return nt.L1_SingleEG38();
        else if (name == "L1_SingleEG38er2p1") return nt.L1_SingleEG38er2p1();
        else if (name == "L1_SingleEG38er2p5") return nt.L1_SingleEG38er2p5();
        else if (name == "L1_SingleEG40") return nt.L1_SingleEG40();
        else if (name == "L1_SingleEG40er2p5") return nt.L1_SingleEG40er2p5();
        else if (name == "L1_SingleEG42") return nt.L1_SingleEG42();
        else if (name == "L1_SingleEG42er2p5") return nt.L1_SingleEG42er2p5();
        else if (name == "L1_SingleEG45") return nt.L1_SingleEG45();
        else if (name == "L1_SingleEG45er2p5") return nt.L1_SingleEG45er2p5();
        else if (name == "L1_SingleEG5") return nt.L1_SingleEG5();
        else if (name == "L1_SingleEG50") return nt.L1_SingleEG50();
        else if (name == "L1_SingleEG60") return nt.L1_SingleEG60();
        else if (name == "L1_SingleEG8er2p5") return nt.L1_SingleEG8er2p5();
        else if (name == "L1_SingleIsoEG18") return nt.L1_SingleIsoEG18();
        else if (name == "L1_SingleIsoEG18er") return nt.L1_SingleIsoEG18er();
        else if (name == "L1_SingleIsoEG18er2p1") return nt.L1_SingleIsoEG18er2p1();
        else if (name == "L1_SingleIsoEG20") return nt.L1_SingleIsoEG20();
        else if (name == "L1_SingleIsoEG20er") return nt.L1_SingleIsoEG20er();
        else if (name == "L1_SingleIsoEG20er2p1") return nt.L1_SingleIsoEG20er2p1();
        else if (name == "L1_SingleIsoEG22") return nt.L1_SingleIsoEG22();
        else if (name == "L1_SingleIsoEG22er") return nt.L1_SingleIsoEG22er();
        else if (name == "L1_SingleIsoEG22er2p1") return nt.L1_SingleIsoEG22er2p1();
        else if (name == "L1_SingleIsoEG24") return nt.L1_SingleIsoEG24();
        else if (name == "L1_SingleIsoEG24er") return nt.L1_SingleIsoEG24er();
        else if (name == "L1_SingleIsoEG24er1p5") return nt.L1_SingleIsoEG24er1p5();
        else if (name == "L1_SingleIsoEG24er2p1") return nt.L1_SingleIsoEG24er2p1();
        else if (name == "L1_SingleIsoEG26") return nt.L1_SingleIsoEG26();
        else if (name == "L1_SingleIsoEG26er") return nt.L1_SingleIsoEG26er();
        else if (name == "L1_SingleIsoEG26er1p5") return nt.L1_SingleIsoEG26er1p5();
        else if (name == "L1_SingleIsoEG26er2p1") return nt.L1_SingleIsoEG26er2p1();
        else if (name == "L1_SingleIsoEG26er2p5") return nt.L1_SingleIsoEG26er2p5();
        else if (name == "L1_SingleIsoEG28") return nt.L1_SingleIsoEG28();
        else if (name == "L1_SingleIsoEG28_FWD2p5") return nt.L1_SingleIsoEG28_FWD2p5();
        else if (name == "L1_SingleIsoEG28er") return nt.L1_SingleIsoEG28er();
        else if (name == "L1_SingleIsoEG28er1p5") return nt.L1_SingleIsoEG28er1p5();
        else if (name == "L1_SingleIsoEG28er2p1") return nt.L1_SingleIsoEG28er2p1();
        else if (name == "L1_SingleIsoEG28er2p5") return nt.L1_SingleIsoEG28er2p5();
        else if (name == "L1_SingleIsoEG30") return nt.L1_SingleIsoEG30();
        else if (name == "L1_SingleIsoEG30er") return nt.L1_SingleIsoEG30er();
        else if (name == "L1_SingleIsoEG30er2p1") return nt.L1_SingleIsoEG30er2p1();
        else if (name == "L1_SingleIsoEG30er2p5") return nt.L1_SingleIsoEG30er2p5();
        else if (name == "L1_SingleIsoEG32") return nt.L1_SingleIsoEG32();
        else if (name == "L1_SingleIsoEG32er") return nt.L1_SingleIsoEG32er();
        else if (name == "L1_SingleIsoEG32er2p1") return nt.L1_SingleIsoEG32er2p1();
        else if (name == "L1_SingleIsoEG32er2p5") return nt.L1_SingleIsoEG32er2p5();
        else if (name == "L1_SingleIsoEG33er2p1") return nt.L1_SingleIsoEG33er2p1();
        else if (name == "L1_SingleIsoEG34") return nt.L1_SingleIsoEG34();
        else if (name == "L1_SingleIsoEG34er") return nt.L1_SingleIsoEG34er();
        else if (name == "L1_SingleIsoEG34er2p1") return nt.L1_SingleIsoEG34er2p1();
        else if (name == "L1_SingleIsoEG34er2p5") return nt.L1_SingleIsoEG34er2p5();
        else if (name == "L1_SingleIsoEG35") return nt.L1_SingleIsoEG35();
        else if (name == "L1_SingleIsoEG35er2p1") return nt.L1_SingleIsoEG35er2p1();
        else if (name == "L1_SingleIsoEG36") return nt.L1_SingleIsoEG36();
        else if (name == "L1_SingleIsoEG36er2p1") return nt.L1_SingleIsoEG36er2p1();
        else if (name == "L1_SingleIsoEG37") return nt.L1_SingleIsoEG37();
        else if (name == "L1_SingleIsoEG38") return nt.L1_SingleIsoEG38();
        else if (name == "L1_SingleIsoEG38er2p1") return nt.L1_SingleIsoEG38er2p1();
        else if (name == "L1_SingleIsoEG40") return nt.L1_SingleIsoEG40();
        else if (name == "L1_SingleIsoEG40er2p1") return nt.L1_SingleIsoEG40er2p1();
        else if (name == "L1_SingleIsoTau32er2p1") return nt.L1_SingleIsoTau32er2p1();
        else if (name == "L1_SingleJet10erHE") return nt.L1_SingleJet10erHE();
        else if (name == "L1_SingleJet12") return nt.L1_SingleJet12();
        else if (name == "L1_SingleJet120") return nt.L1_SingleJet120();
        else if (name == "L1_SingleJet120_FWD") return nt.L1_SingleJet120_FWD();
        else if (name == "L1_SingleJet120_FWD3p0") return nt.L1_SingleJet120_FWD3p0();
        else if (name == "L1_SingleJet120er2p5") return nt.L1_SingleJet120er2p5();
        else if (name == "L1_SingleJet12_BptxAND") return nt.L1_SingleJet12_BptxAND();
        else if (name == "L1_SingleJet12erHE") return nt.L1_SingleJet12erHE();
        else if (name == "L1_SingleJet140") return nt.L1_SingleJet140();
        else if (name == "L1_SingleJet140er2p5") return nt.L1_SingleJet140er2p5();
        else if (name == "L1_SingleJet140er2p5_ETMHF70") return nt.L1_SingleJet140er2p5_ETMHF70();
        else if (name == "L1_SingleJet140er2p5_ETMHF80") return nt.L1_SingleJet140er2p5_ETMHF80();
        else if (name == "L1_SingleJet140er2p5_ETMHF90") return nt.L1_SingleJet140er2p5_ETMHF90();
        else if (name == "L1_SingleJet150") return nt.L1_SingleJet150();
        else if (name == "L1_SingleJet16") return nt.L1_SingleJet16();
        else if (name == "L1_SingleJet160") return nt.L1_SingleJet160();
        else if (name == "L1_SingleJet160er2p5") return nt.L1_SingleJet160er2p5();
        else if (name == "L1_SingleJet170") return nt.L1_SingleJet170();
        else if (name == "L1_SingleJet180") return nt.L1_SingleJet180();
        else if (name == "L1_SingleJet180er2p5") return nt.L1_SingleJet180er2p5();
        else if (name == "L1_SingleJet20") return nt.L1_SingleJet20();
        else if (name == "L1_SingleJet200") return nt.L1_SingleJet200();
        else if (name == "L1_SingleJet20er2p5_NotBptxOR") return nt.L1_SingleJet20er2p5_NotBptxOR();
        else if (name == "L1_SingleJet20er2p5_NotBptxOR_3BX") return nt.L1_SingleJet20er2p5_NotBptxOR_3BX();
        else if (name == "L1_SingleJet20er2p7_NotBptxOR") return nt.L1_SingleJet20er2p7_NotBptxOR();
        else if (name == "L1_SingleJet20er2p7_NotBptxOR_3BX") return nt.L1_SingleJet20er2p7_NotBptxOR_3BX();
        else if (name == "L1_SingleJet20er3p0_NotBptxOR") return nt.L1_SingleJet20er3p0_NotBptxOR();
        else if (name == "L1_SingleJet20er3p0_NotBptxOR_3BX") return nt.L1_SingleJet20er3p0_NotBptxOR_3BX();
        else if (name == "L1_SingleJet35") return nt.L1_SingleJet35();
        else if (name == "L1_SingleJet35_FWD") return nt.L1_SingleJet35_FWD();
        else if (name == "L1_SingleJet35_FWD3p0") return nt.L1_SingleJet35_FWD3p0();
        else if (name == "L1_SingleJet35_HFm") return nt.L1_SingleJet35_HFm();
        else if (name == "L1_SingleJet35_HFp") return nt.L1_SingleJet35_HFp();
        else if (name == "L1_SingleJet35er2p5") return nt.L1_SingleJet35er2p5();
        else if (name == "L1_SingleJet4") return nt.L1_SingleJet4();
        else if (name == "L1_SingleJet43er2p5_NotBptxOR_3BX") return nt.L1_SingleJet43er2p5_NotBptxOR_3BX();
        else if (name == "L1_SingleJet43er2p7_NotBptxOR_3BX") return nt.L1_SingleJet43er2p7_NotBptxOR_3BX();
        else if (name == "L1_SingleJet43er3p0_NotBptxOR_3BX") return nt.L1_SingleJet43er3p0_NotBptxOR_3BX();
        else if (name == "L1_SingleJet46er2p5_NotBptxOR_3BX") return nt.L1_SingleJet46er2p5_NotBptxOR_3BX();
        else if (name == "L1_SingleJet46er2p7_NotBptxOR_3BX") return nt.L1_SingleJet46er2p7_NotBptxOR_3BX();
        else if (name == "L1_SingleJet46er3p0_NotBptxOR_3BX") return nt.L1_SingleJet46er3p0_NotBptxOR_3BX();
        else if (name == "L1_SingleJet60") return nt.L1_SingleJet60();
        else if (name == "L1_SingleJet60_FWD") return nt.L1_SingleJet60_FWD();
        else if (name == "L1_SingleJet60_FWD3p0") return nt.L1_SingleJet60_FWD3p0();
        else if (name == "L1_SingleJet60_HFm") return nt.L1_SingleJet60_HFm();
        else if (name == "L1_SingleJet60_HFp") return nt.L1_SingleJet60_HFp();
        else if (name == "L1_SingleJet60er2p5") return nt.L1_SingleJet60er2p5();
        else if (name == "L1_SingleJet8") return nt.L1_SingleJet8();
        else if (name == "L1_SingleJet8_BptxAND") return nt.L1_SingleJet8_BptxAND();
        else if (name == "L1_SingleJet8erHE") return nt.L1_SingleJet8erHE();
        else if (name == "L1_SingleJet90") return nt.L1_SingleJet90();
        else if (name == "L1_SingleJet90_FWD") return nt.L1_SingleJet90_FWD();
        else if (name == "L1_SingleJet90_FWD3p0") return nt.L1_SingleJet90_FWD3p0();
        else if (name == "L1_SingleJet90er2p5") return nt.L1_SingleJet90er2p5();
        else if (name == "L1_SingleJetC20_NotBptxOR") return nt.L1_SingleJetC20_NotBptxOR();
        else if (name == "L1_SingleJetC20_NotBptxOR_3BX") return nt.L1_SingleJetC20_NotBptxOR_3BX();
        else if (name == "L1_SingleJetC32_NotBptxOR") return nt.L1_SingleJetC32_NotBptxOR();
        else if (name == "L1_SingleJetC32_NotBptxOR_3BX") return nt.L1_SingleJetC32_NotBptxOR_3BX();
        else if (name == "L1_SingleJetC36_NotBptxOR_3BX") return nt.L1_SingleJetC36_NotBptxOR_3BX();
        else if (name == "L1_SingleJetC40_NotBptxOR_3BX") return nt.L1_SingleJetC40_NotBptxOR_3BX();
        else if (name == "L1_SingleJetC40_NotBptxOR_5BX") return nt.L1_SingleJetC40_NotBptxOR_5BX();
        else if (name == "L1_SingleLooseIsoEG26er1p5") return nt.L1_SingleLooseIsoEG26er1p5();
        else if (name == "L1_SingleLooseIsoEG26er2p5") return nt.L1_SingleLooseIsoEG26er2p5();
        else if (name == "L1_SingleLooseIsoEG28_FWD2p5") return nt.L1_SingleLooseIsoEG28_FWD2p5();
        else if (name == "L1_SingleLooseIsoEG28er1p5") return nt.L1_SingleLooseIsoEG28er1p5();
        else if (name == "L1_SingleLooseIsoEG28er2p1") return nt.L1_SingleLooseIsoEG28er2p1();
        else if (name == "L1_SingleLooseIsoEG28er2p5") return nt.L1_SingleLooseIsoEG28er2p5();
        else if (name == "L1_SingleLooseIsoEG30er1p5") return nt.L1_SingleLooseIsoEG30er1p5();
        else if (name == "L1_SingleLooseIsoEG30er2p5") return nt.L1_SingleLooseIsoEG30er2p5();
        else if (name == "L1_SingleMu0_BMTF") return nt.L1_SingleMu0_BMTF();
        else if (name == "L1_SingleMu0_DQ") return nt.L1_SingleMu0_DQ();
        else if (name == "L1_SingleMu0_EMTF") return nt.L1_SingleMu0_EMTF();
        else if (name == "L1_SingleMu0_OMTF") return nt.L1_SingleMu0_OMTF();
        else if (name == "L1_SingleMu10_LowQ") return nt.L1_SingleMu10_LowQ();
        else if (name == "L1_SingleMu10er1p5") return nt.L1_SingleMu10er1p5();
        else if (name == "L1_SingleMu11_LowQ") return nt.L1_SingleMu11_LowQ();
        else if (name == "L1_SingleMu12") return nt.L1_SingleMu12();
        else if (name == "L1_SingleMu12_DQ_BMTF") return nt.L1_SingleMu12_DQ_BMTF();
        else if (name == "L1_SingleMu12_DQ_EMTF") return nt.L1_SingleMu12_DQ_EMTF();
        else if (name == "L1_SingleMu12_DQ_OMTF") return nt.L1_SingleMu12_DQ_OMTF();
        else if (name == "L1_SingleMu12_LowQ_BMTF") return nt.L1_SingleMu12_LowQ_BMTF();
        else if (name == "L1_SingleMu12_LowQ_EMTF") return nt.L1_SingleMu12_LowQ_EMTF();
        else if (name == "L1_SingleMu12_LowQ_OMTF") return nt.L1_SingleMu12_LowQ_OMTF();
        else if (name == "L1_SingleMu12er1p5") return nt.L1_SingleMu12er1p5();
        else if (name == "L1_SingleMu14") return nt.L1_SingleMu14();
        else if (name == "L1_SingleMu14er") return nt.L1_SingleMu14er();
        else if (name == "L1_SingleMu14er1p5") return nt.L1_SingleMu14er1p5();
        else if (name == "L1_SingleMu14er2p1") return nt.L1_SingleMu14er2p1();
        else if (name == "L1_SingleMu15_DQ") return nt.L1_SingleMu15_DQ();
        else if (name == "L1_SingleMu16") return nt.L1_SingleMu16();
        else if (name == "L1_SingleMu16er") return nt.L1_SingleMu16er();
        else if (name == "L1_SingleMu16er1p5") return nt.L1_SingleMu16er1p5();
        else if (name == "L1_SingleMu16er2p1") return nt.L1_SingleMu16er2p1();
        else if (name == "L1_SingleMu18") return nt.L1_SingleMu18();
        else if (name == "L1_SingleMu18er") return nt.L1_SingleMu18er();
        else if (name == "L1_SingleMu18er1p5") return nt.L1_SingleMu18er1p5();
        else if (name == "L1_SingleMu18er2p1") return nt.L1_SingleMu18er2p1();
        else if (name == "L1_SingleMu20") return nt.L1_SingleMu20();
        else if (name == "L1_SingleMu20er") return nt.L1_SingleMu20er();
        else if (name == "L1_SingleMu20er2p1") return nt.L1_SingleMu20er2p1();
        else if (name == "L1_SingleMu22") return nt.L1_SingleMu22();
        else if (name == "L1_SingleMu22_BMTF") return nt.L1_SingleMu22_BMTF();
        else if (name == "L1_SingleMu22_DQ") return nt.L1_SingleMu22_DQ();
        else if (name == "L1_SingleMu22_EMTF") return nt.L1_SingleMu22_EMTF();
        else if (name == "L1_SingleMu22_OMTF") return nt.L1_SingleMu22_OMTF();
        else if (name == "L1_SingleMu22_OQ") return nt.L1_SingleMu22_OQ();
        else if (name == "L1_SingleMu22er") return nt.L1_SingleMu22er();
        else if (name == "L1_SingleMu22er2p1") return nt.L1_SingleMu22er2p1();
        else if (name == "L1_SingleMu25") return nt.L1_SingleMu25();
        else if (name == "L1_SingleMu25er") return nt.L1_SingleMu25er();
        else if (name == "L1_SingleMu3") return nt.L1_SingleMu3();
        else if (name == "L1_SingleMu30") return nt.L1_SingleMu30();
        else if (name == "L1_SingleMu30er") return nt.L1_SingleMu30er();
        else if (name == "L1_SingleMu5") return nt.L1_SingleMu5();
        else if (name == "L1_SingleMu6er1p5") return nt.L1_SingleMu6er1p5();
        else if (name == "L1_SingleMu7") return nt.L1_SingleMu7();
        else if (name == "L1_SingleMu7_DQ") return nt.L1_SingleMu7_DQ();
        else if (name == "L1_SingleMu7er1p5") return nt.L1_SingleMu7er1p5();
        else if (name == "L1_SingleMu8er1p5") return nt.L1_SingleMu8er1p5();
        else if (name == "L1_SingleMu9er1p5") return nt.L1_SingleMu9er1p5();
        else if (name == "L1_SingleMuCosmics") return nt.L1_SingleMuCosmics();
        else if (name == "L1_SingleMuCosmics_BMTF") return nt.L1_SingleMuCosmics_BMTF();
        else if (name == "L1_SingleMuCosmics_EMTF") return nt.L1_SingleMuCosmics_EMTF();
        else if (name == "L1_SingleMuCosmics_OMTF") return nt.L1_SingleMuCosmics_OMTF();
        else if (name == "L1_SingleMuOpen") return nt.L1_SingleMuOpen();
        else if (name == "L1_SingleMuOpen_NotBptxOR") return nt.L1_SingleMuOpen_NotBptxOR();
        else if (name == "L1_SingleMuOpen_NotBptxOR_3BX") return nt.L1_SingleMuOpen_NotBptxOR_3BX();
        else if (name == "L1_SingleMuOpen_er1p1_NotBptxOR_3BX") return nt.L1_SingleMuOpen_er1p1_NotBptxOR_3BX();
        else if (name == "L1_SingleMuOpen_er1p4_NotBptxOR_3BX") return nt.L1_SingleMuOpen_er1p4_NotBptxOR_3BX();
        else if (name == "L1_SingleMuShower_Nominal") return nt.L1_SingleMuShower_Nominal();
        else if (name == "L1_SingleMuShower_Tight") return nt.L1_SingleMuShower_Tight();
        else if (name == "L1_SingleTau100er") return nt.L1_SingleTau100er();
        else if (name == "L1_SingleTau100er2p1") return nt.L1_SingleTau100er2p1();
        else if (name == "L1_SingleTau120er") return nt.L1_SingleTau120er();
        else if (name == "L1_SingleTau120er2p1") return nt.L1_SingleTau120er2p1();
        else if (name == "L1_SingleTau130er2p1") return nt.L1_SingleTau130er2p1();
        else if (name == "L1_SingleTau140er2p1") return nt.L1_SingleTau140er2p1();
        else if (name == "L1_SingleTau20") return nt.L1_SingleTau20();
        else if (name == "L1_SingleTau70er2p1") return nt.L1_SingleTau70er2p1();
        else if (name == "L1_SingleTau80er") return nt.L1_SingleTau80er();
        else if (name == "L1_SingleTau80er2p1") return nt.L1_SingleTau80er2p1();
        else if (name == "L1_TOTEM_1") return nt.L1_TOTEM_1();
        else if (name == "L1_TOTEM_2") return nt.L1_TOTEM_2();
        else if (name == "L1_TOTEM_3") return nt.L1_TOTEM_3();
        else if (name == "L1_TOTEM_4") return nt.L1_TOTEM_4();
        else if (name == "L1_TripleEG16er2p5") return nt.L1_TripleEG16er2p5();
        else if (name == "L1_TripleEG_14_10_8") return nt.L1_TripleEG_14_10_8();
        else if (name == "L1_TripleEG_16_12_8_er2p5") return nt.L1_TripleEG_16_12_8_er2p5();
        else if (name == "L1_TripleEG_16_15_8_er2p5") return nt.L1_TripleEG_16_15_8_er2p5();
        else if (name == "L1_TripleEG_18_17_8") return nt.L1_TripleEG_18_17_8();
        else if (name == "L1_TripleEG_18_17_8_er2p5") return nt.L1_TripleEG_18_17_8_er2p5();
        else if (name == "L1_TripleEG_18_18_12_er2p5") return nt.L1_TripleEG_18_18_12_er2p5();
        else if (name == "L1_TripleEG_Iso20_10_5") return nt.L1_TripleEG_Iso20_10_5();
        else if (name == "L1_TripleEG_LooseIso20_10_5") return nt.L1_TripleEG_LooseIso20_10_5();
        else if (name == "L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5") return nt.L1_TripleJet_100_80_70_DoubleJet_80_70_er2p5();
        else if (name == "L1_TripleJet_100_85_72_VBF") return nt.L1_TripleJet_100_85_72_VBF();
        else if (name == "L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5") return nt.L1_TripleJet_105_85_75_DoubleJet_85_75_er2p5();
        else if (name == "L1_TripleJet_105_85_76_VBF") return nt.L1_TripleJet_105_85_76_VBF();
        else if (name == "L1_TripleJet_84_68_48_VBF") return nt.L1_TripleJet_84_68_48_VBF();
        else if (name == "L1_TripleJet_88_72_56_VBF") return nt.L1_TripleJet_88_72_56_VBF();
        else if (name == "L1_TripleJet_92_76_64_VBF") return nt.L1_TripleJet_92_76_64_VBF();
        else if (name == "L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5") return nt.L1_TripleJet_95_75_65_DoubleJet_75_65_er2p5();
        else if (name == "L1_TripleJet_98_83_71_VBF") return nt.L1_TripleJet_98_83_71_VBF();
        else if (name == "L1_TripleMu0") return nt.L1_TripleMu0();
        else if (name == "L1_TripleMu0_OQ") return nt.L1_TripleMu0_OQ();
        else if (name == "L1_TripleMu0_SQ") return nt.L1_TripleMu0_SQ();
        else if (name == "L1_TripleMu3") return nt.L1_TripleMu3();
        else if (name == "L1_TripleMu3_SQ") return nt.L1_TripleMu3_SQ();
        else if (name == "L1_TripleMu_2SQ_1p5SQ_0OQ") return nt.L1_TripleMu_2SQ_1p5SQ_0OQ();
        else if (name == "L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12") return nt.L1_TripleMu_2SQ_1p5SQ_0OQ_Mass_Max12();
        else if (name == "L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12") return nt.L1_TripleMu_3SQ_2p5SQ_0OQ_Mass_Max12();
        else if (name == "L1_TripleMu_4_4_4") return nt.L1_TripleMu_4_4_4();
        else if (name == "L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17") return nt.L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17();
        else if (name == "L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14") return nt.L1_TripleMu_5OQ_3p5OQ_2p5OQ_DoubleMu_5_2p5_OQ_OS_Mass_8to14();
        else if (name == "L1_TripleMu_5SQ_3SQ_0OQ") return nt.L1_TripleMu_5SQ_3SQ_0OQ();
        else if (name == "L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9") return nt.L1_TripleMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9();
        else if (name == "L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9") return nt.L1_TripleMu_5SQ_3SQ_0_DoubleMu_5_3_SQ_OS_Mass_Max9();
        else if (name == "L1_TripleMu_5_0_0") return nt.L1_TripleMu_5_0_0();
        else if (name == "L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17") return nt.L1_TripleMu_5_0_0_DoubleMu_5_0_OS_Mass_Max17();
        else if (name == "L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17") return nt.L1_TripleMu_5_3_0_DoubleMu_5_3_OS_Mass_Max17();
        else if (name == "L1_TripleMu_5_3_3") return nt.L1_TripleMu_5_3_3();
        else if (name == "L1_TripleMu_5_3_3_SQ") return nt.L1_TripleMu_5_3_3_SQ();
        else if (name == "L1_TripleMu_5_3p5_2p5") return nt.L1_TripleMu_5_3p5_2p5();
        else if (name == "L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17") return nt.L1_TripleMu_5_3p5_2p5_DoubleMu_5_2p5_OS_Mass_5to17();
        else if (name == "L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17") return nt.L1_TripleMu_5_3p5_2p5_OQ_DoubleMu_5_2p5_OQ_OS_Mass_5to17();
        else if (name == "L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17") return nt.L1_TripleMu_5_4_2p5_DoubleMu_5_2p5_OS_Mass_5to17();
        else if (name == "L1_TripleMu_5_5_3") return nt.L1_TripleMu_5_5_3();
        else if (name == "L1_UnpairedBunchBptxMinus") return nt.L1_UnpairedBunchBptxMinus();
        else if (name == "L1_UnpairedBunchBptxPlus") return nt.L1_UnpairedBunchBptxPlus();
        else if (name == "L1_UnprefireableEvent") return nt.L1_UnprefireableEvent();
        else if (name == "L1_ZeroBias") return nt.L1_ZeroBias();
        else if (name == "L1_ZeroBias_FirstCollidingBunch") return nt.L1_ZeroBias_FirstCollidingBunch();
        else if (name == "L1_ZeroBias_copy") return nt.L1_ZeroBias_copy();
        return bool();
    }
    vector<LorentzVector> GetVLV(const string &name) {
        if (name == "Electron_p4") return nt.Electron_p4();
        else if (name == "FatJet_p4") return nt.FatJet_p4();
        else if (name == "GenDressedLepton_p4") return nt.GenDressedLepton_p4();
        else if (name == "GenIsolatedPhoton_p4") return nt.GenIsolatedPhoton_p4();
        else if (name == "GenJetAK8_p4") return nt.GenJetAK8_p4();
        else if (name == "GenJet_p4") return nt.GenJet_p4();
        else if (name == "GenPart_p4") return nt.GenPart_p4();
        else if (name == "GenVisTau_p4") return nt.GenVisTau_p4();
        else if (name == "Jet_p4") return nt.Jet_p4();
        else if (name == "LHEPart_p4") return nt.LHEPart_p4();
        else if (name == "LowPtElectron_p4") return nt.LowPtElectron_p4();
        else if (name == "Muon_p4") return nt.Muon_p4();
        else if (name == "Photon_p4") return nt.Photon_p4();
        else if (name == "SV_p4") return nt.SV_p4();
        else if (name == "SubGenJetAK8_p4") return nt.SubGenJetAK8_p4();
        else if (name == "SubJet_p4") return nt.SubJet_p4();
        else if (name == "Tau_p4") return nt.Tau_p4();
        return vector<LorentzVector>();
    }
}